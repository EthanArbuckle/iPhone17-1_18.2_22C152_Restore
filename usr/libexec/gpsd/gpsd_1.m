uint64_t sub_10007E4E4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t vars8;

  v5 = result;
  v6 = *(_DWORD *)(result + 68);
  if (v6)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_16:
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 8) != 0) {
LABEL_5:
  }
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
LABEL_6:
  if (*(int *)(v5 + 32) >= 1)
  {
    v7 = 0;
    do
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  v8 = *(_DWORD *)(v5 + 68);
  if ((v8 & 0x20) != 0)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 48), a2, a4);
    v8 = *(_DWORD *)(v5 + 68);
    if ((v8 & 0x40) == 0)
    {
LABEL_11:
      if ((v8 & 0x80) == 0) {
        goto LABEL_12;
      }
LABEL_20:
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 56), (int)a2, a4);
      if ((*(_DWORD *)(v5 + 68) & 0x100) == 0) {
        return result;
      }
      goto LABEL_21;
    }
  }
  else if ((v8 & 0x40) == 0)
  {
    goto LABEL_11;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 52), (int)a2, a4);
  v8 = *(_DWORD *)(v5 + 68);
  if ((v8 & 0x80) != 0) {
    goto LABEL_20;
  }
LABEL_12:
  if ((v8 & 0x100) == 0) {
    return result;
  }
LABEL_21:
  v9 = *(_DWORD *)(v5 + 60);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v9, a2, a4);
}

uint64_t proto::gnss::Emergency::GpsReferenceTime::ByteSize(proto::gnss::Emergency::GpsReferenceTime *this, unsigned int a2)
{
  int v3 = *((_DWORD *)this + 17);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    if ((v3 & 0x100) == 0) {
      goto LABEL_50;
    }
    goto LABEL_46;
  }
  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_11;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *((_DWORD *)this + 17);
  }
  else
  {
    int v6 = 1;
  }
  int v4 = v6 + 1;
  if ((v3 & 2) != 0)
  {
LABEL_11:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *((_DWORD *)this + 17);
    }
    else
    {
      int v8 = 1;
    }
    v4 += v8 + 1;
  }
LABEL_15:
  if ((v3 & 4) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *((_DWORD *)this + 17);
    }
    else
    {
      int v10 = 2;
    }
    v4 += v10;
    if ((v3 & 8) == 0)
    {
LABEL_17:
      if ((v3 & 0x20) == 0) {
        goto LABEL_18;
      }
      goto LABEL_30;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_17;
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    int v3 = *((_DWORD *)this + 17);
  }
  else
  {
    int v12 = 2;
  }
  v4 += v12;
  if ((v3 & 0x20) == 0)
  {
LABEL_18:
    if ((v3 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_34;
  }
LABEL_30:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *((_DWORD *)this + 17);
  }
  else
  {
    int v14 = 2;
  }
  v4 += v14;
  if ((v3 & 0x40) == 0)
  {
LABEL_19:
    if ((v3 & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_34:
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if ((v15 & 0x80000000) != 0)
  {
    int v16 = 11;
  }
  else if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    int v3 = *((_DWORD *)this + 17);
  }
  else
  {
    int v16 = 2;
  }
  v4 += v16;
  if ((v3 & 0x80) == 0)
  {
LABEL_20:
    if ((v3 & 0x100) == 0) {
      goto LABEL_50;
    }
    goto LABEL_46;
  }
LABEL_40:
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if ((v17 & 0x80000000) != 0)
  {
    int v18 = 11;
  }
  else if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    int v3 = *((_DWORD *)this + 17);
  }
  else
  {
    int v18 = 2;
  }
  v4 += v18;
  if ((v3 & 0x100) != 0)
  {
LABEL_46:
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    if (v19 >= 0x80) {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    }
    else {
      int v20 = 2;
    }
    v4 += v20;
  }
LABEL_50:
  int v21 = *((_DWORD *)this + 8);
  uint64_t v22 = (v21 + v4);
  if (v21 >= 1)
  {
    uint64_t v23 = 0;
    do
    {
      v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007D858(*(void *)(*((void *)this + 3)+ 8 * v23), a2);
      int v25 = (int)v24;
      if (v24 >= 0x80) {
        int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2);
      }
      else {
        int v26 = 1;
      }
      uint64_t v22 = (v25 + v22 + v26);
      ++v23;
    }
    while (v23 < *((int *)this + 8));
  }
  *((_DWORD *)this + 16) = v22;
  return v22;
}

void sub_10007E84C(proto::gnss::Emergency::GpsReferenceTime *a1, void *lpsrc)
{
  proto::gnss::Emergency::GpsReferenceTime::MergeFrom(a1, (const proto::gnss::Emergency::GpsReferenceTime *)lpsrc);
}

uint64_t sub_10007E8F0()
{
  return 1;
}

void *sub_10007E8F8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GpsReferenceTime");
}

void proto::gnss::Emergency::ReferenceLocation::MergeFrom(proto::gnss::Emergency::ReferenceLocation *this, const proto::gnss::Emergency::ReferenceLocation *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  int v4 = *((_DWORD *)a2 + 17);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v7 = *((_DWORD *)a2 + 2);
    *((_DWORD *)this + 17) |= 1u;
    *((_DWORD *)this + 2) = v7;
    int v4 = *((_DWORD *)a2 + 17);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *((_DWORD *)a2 + 3);
  *((_DWORD *)this + 17) |= 2u;
  *((_DWORD *)this + 3) = v8;
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v9 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 17) |= 4u;
  *((_DWORD *)this + 4) = v9;
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v10 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 17) |= 8u;
  *((_DWORD *)this + 5) = v10;
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_27:
    int v12 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 17) |= 0x20u;
    *((_DWORD *)this + 7) = v12;
    int v4 = *((_DWORD *)a2 + 17);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_26:
  int v11 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 17) |= 0x10u;
  *((_DWORD *)this + 6) = v11;
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x20) != 0) {
    goto LABEL_27;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_28:
  int v13 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 17) |= 0x40u;
  *((_DWORD *)this + 8) = v13;
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 17) |= 0x80u;
    *((_DWORD *)this + 9) = v5;
    int v4 = *((_DWORD *)a2 + 17);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v14 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 17) |= 0x100u;
    *((_DWORD *)this + 10) = v14;
    int v4 = *((_DWORD *)a2 + 17);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_32;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v15 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 17) |= 0x200u;
  *((_DWORD *)this + 11) = v15;
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v16 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 17) |= 0x400u;
  *((_DWORD *)this + 12) = v16;
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_35;
  }
LABEL_33:
  unsigned int v17 = *((_DWORD *)a2 + 13);
  if (v17 >= 6) {
    __assert_rtn("set_session_protocol", "GnssEmergencyTypes.pb.h", 23656, "::proto::gnss::Emergency::SessionProtocol_IsValid(value)");
  }
  *((_DWORD *)this + 17) |= 0x800u;
  *((_DWORD *)this + 13) = v17;
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      return;
    }
    goto LABEL_20;
  }
LABEL_35:
  unsigned int v18 = *((_DWORD *)a2 + 14);
  if (v18 >= 7) {
    __assert_rtn("set_pos_protocol", "GnssEmergencyTypes.pb.h", 23679, "::proto::gnss::Emergency::PosProtocol_IsValid(value)");
  }
  *((_DWORD *)this + 17) |= 0x1000u;
  *((_DWORD *)this + 14) = v18;
  if ((*((_DWORD *)a2 + 17) & 0x2000) != 0)
  {
LABEL_20:
    int v6 = *((_DWORD *)a2 + 15);
    *((_DWORD *)this + 17) |= 0x2000u;
    *((_DWORD *)this + 15) = v6;
  }
}

void sub_10007EB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10007EBB0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A640;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10007EBD0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A640;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10007EC24()
{
}

uint64_t proto::gnss::Emergency::ReferenceLocation::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 68);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 40) = 0;
    *(void *)(this + 48) = 0;
    *(void *)(this + 56) = 0;
  }
  *(_DWORD *)(this + 68) = 0;
  return this;
}

uint64_t proto::gnss::Emergency::ReferenceLocation::MergePartialFromCodedStream(proto::gnss::Emergency::ReferenceLocation *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  v51 = (unsigned int *)((char *)this + 8);
  v52 = (unsigned int *)((char *)this + 12);
  v53 = (unsigned int *)((char *)this + 16);
  int v5 = (unsigned int *)((char *)this + 20);
  int v6 = (unsigned int *)((char *)this + 28);
  int v7 = (unsigned int *)((char *)this + 32);
  int v8 = (unsigned int *)((char *)this + 36);
  int v9 = (unsigned int *)((char *)this + 40);
  int v10 = (unsigned int *)((char *)this + 44);
  int v11 = (unsigned int *)((char *)this + 48);
  int v12 = (unsigned int *)((char *)this + 60);
  while (2)
  {
    int v13 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v13;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v13 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        if ((unint64_t)v17 < v16 && (*v17 & 0x80000000) == 0)
        {
          unsigned int *v51 = *v17;
          unsigned int v18 = v17 + 1;
          *((void *)a2 + 1) = v18;
LABEL_44:
          *((_DWORD *)this + 17) |= 1u;
          if ((unint64_t)v18 < v16 && *v18 == 16)
          {
            v19 = v18 + 1;
            *((void *)a2 + 1) = v19;
            goto LABEL_47;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v51);
        if (result)
        {
          unsigned int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
          goto LABEL_44;
        }
        break;
      case 2u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        v19 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
LABEL_47:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v52);
          if (!result) {
            return result;
          }
          v34 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v52 = *v19;
          v34 = v19 + 1;
          *((void *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 17) |= 2u;
        if ((unint64_t)v34 >= v16 || *v34 != 24) {
          continue;
        }
        int v20 = v34 + 1;
        *((void *)a2 + 1) = v20;
LABEL_55:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v53);
          if (!result) {
            return result;
          }
          v35 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v53 = *v20;
          v35 = v20 + 1;
          *((void *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 17) |= 4u;
        if ((unint64_t)v35 >= v16 || *v35 != 32) {
          continue;
        }
        int v21 = v35 + 1;
        *((void *)a2 + 1) = v21;
LABEL_63:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          v36 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v5 = *v21;
          v36 = v21 + 1;
          *((void *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 17) |= 8u;
        if ((unint64_t)v36 >= v16 || *v36 != 40) {
          continue;
        }
        uint64_t v22 = v36 + 1;
        *((void *)a2 + 1) = v22;
LABEL_71:
        unsigned int v54 = 0;
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v54);
          if (!result) {
            return result;
          }
          unsigned int v37 = v54;
          v38 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v37 = *v22;
          v38 = v22 + 1;
          *((void *)a2 + 1) = v38;
        }
        *((_DWORD *)this + 6) = v37;
        *((_DWORD *)this + 17) |= 0x10u;
        if ((unint64_t)v38 >= v16 || *v38 != 48) {
          continue;
        }
        uint64_t v23 = v38 + 1;
        *((void *)a2 + 1) = v23;
LABEL_79:
        if ((unint64_t)v23 >= v16 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          v39 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v23;
          v39 = v23 + 1;
          *((void *)a2 + 1) = v39;
        }
        *((_DWORD *)this + 17) |= 0x20u;
        if ((unint64_t)v39 >= v16 || *v39 != 56) {
          continue;
        }
        v24 = v39 + 1;
        *((void *)a2 + 1) = v24;
LABEL_87:
        if ((unint64_t)v24 >= v16 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          v40 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v7 = *v24;
          v40 = v24 + 1;
          *((void *)a2 + 1) = v40;
        }
        *((_DWORD *)this + 17) |= 0x40u;
        if ((unint64_t)v40 >= v16 || *v40 != 64) {
          continue;
        }
        int v25 = v40 + 1;
        *((void *)a2 + 1) = v25;
LABEL_95:
        if ((unint64_t)v25 >= v16 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          v41 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          *int v8 = *v25;
          v41 = v25 + 1;
          *((void *)a2 + 1) = v41;
        }
        *((_DWORD *)this + 17) |= 0x80u;
        if ((unint64_t)v41 >= v16 || *v41 != 72) {
          continue;
        }
        int v26 = v41 + 1;
        *((void *)a2 + 1) = v26;
LABEL_103:
        if ((unint64_t)v26 >= v16 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          v42 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v9 = *v26;
          v42 = v26 + 1;
          *((void *)a2 + 1) = v42;
        }
        *((_DWORD *)this + 17) |= 0x100u;
        if ((unint64_t)v42 >= v16 || *v42 != 80) {
          continue;
        }
        v27 = v42 + 1;
        *((void *)a2 + 1) = v27;
LABEL_111:
        if ((unint64_t)v27 >= v16 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!result) {
            return result;
          }
          v43 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          *int v10 = *v27;
          v43 = v27 + 1;
          *((void *)a2 + 1) = v43;
        }
        *((_DWORD *)this + 17) |= 0x200u;
        if ((unint64_t)v43 >= v16 || *v43 != 88) {
          continue;
        }
        v28 = v43 + 1;
        *((void *)a2 + 1) = v28;
LABEL_119:
        if ((unint64_t)v28 >= v16 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v11);
          if (!result) {
            return result;
          }
          v44 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v11 = *v28;
          v44 = v28 + 1;
          *((void *)a2 + 1) = v44;
        }
        *((_DWORD *)this + 17) |= 0x400u;
        if ((unint64_t)v44 >= v16 || *v44 != 96) {
          continue;
        }
        v29 = v44 + 1;
        *((void *)a2 + 1) = v29;
LABEL_127:
        unsigned int v56 = 0;
        if ((unint64_t)v29 >= v16 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v56);
          if (!result) {
            return result;
          }
          unsigned int v45 = v56;
        }
        else
        {
          unsigned int v45 = *v29;
          *((void *)a2 + 1) = v29 + 1;
        }
        if (v45 <= 5)
        {
          *((_DWORD *)this + 17) |= 0x800u;
          *((_DWORD *)this + 13) = v45;
        }
        v46 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v30 = *((void *)a2 + 2);
        if ((unint64_t)v46 >= v30 || *v46 != 104) {
          continue;
        }
        v31 = v46 + 1;
        *((void *)a2 + 1) = v31;
LABEL_137:
        unsigned int v55 = 0;
        if ((unint64_t)v31 >= v30 || *v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v55);
          if (!result) {
            return result;
          }
          unsigned int v47 = v55;
        }
        else
        {
          unsigned int v47 = *v31;
          *((void *)a2 + 1) = v31 + 1;
        }
        if (v47 <= 6)
        {
          *((_DWORD *)this + 17) |= 0x1000u;
          *((_DWORD *)this + 14) = v47;
        }
        v48 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v32 = *((void *)a2 + 2);
        if ((unint64_t)v48 >= v32 || *v48 != 112) {
          continue;
        }
        v33 = v48 + 1;
        *((void *)a2 + 1) = v33;
LABEL_147:
        if ((unint64_t)v33 >= v32 || *v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v12);
          if (!result) {
            return result;
          }
          v49 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v32 = *((void *)a2 + 2);
        }
        else
        {
          *int v12 = *v33;
          v49 = (unsigned __int8 *)(v33 + 1);
          *((void *)a2 + 1) = v49;
        }
        *((_DWORD *)this + 17) |= 0x2000u;
        if (v49 != (unsigned __int8 *)v32 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_55;
      case 4u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_63;
      case 5u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        uint64_t v22 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_71;
      case 6u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        uint64_t v23 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_79;
      case 7u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        v24 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_87;
      case 8u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v25 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_95;
      case 9u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v26 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_103;
      case 0xAu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        v27 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_111;
      case 0xBu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        v28 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_119;
      case 0xCu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        v29 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_127;
      case 0xDu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        v31 = (char *)*((void *)a2 + 1);
        unint64_t v30 = *((void *)a2 + 2);
        goto LABEL_137;
      case 0xEu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        v33 = (char *)*((void *)a2 + 1);
        unint64_t v32 = *((void *)a2 + 2);
        goto LABEL_147;
      default:
        int v15 = TagFallback & 7;
LABEL_38:
        if (v15 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_10007F468(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[17];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[17];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[17];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[17];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[17];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  int v6 = v5[17];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  int v6 = v5[17];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  int v6 = v5[17];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  int v6 = v5[17];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  int v6 = v5[17];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  int v6 = v5[17];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], a2, a4);
  int v6 = v5[17];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
LABEL_28:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[14], a2, a4);
    if ((v5[17] & 0x2000) == 0) {
      return result;
    }
    goto LABEL_29;
  }
LABEL_27:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], a2, a4);
  int v6 = v5[17];
  if ((v6 & 0x1000) != 0) {
    goto LABEL_28;
  }
LABEL_14:
  if ((v6 & 0x2000) == 0) {
    return result;
  }
LABEL_29:
  int v7 = v5[15];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v7, a2, a4);
}

uint64_t proto::gnss::Emergency::ReferenceLocation::ByteSize(proto::gnss::Emergency::ReferenceLocation *this, unsigned int a2)
{
  int v3 = *((_DWORD *)this + 17);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_47;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *((_DWORD *)this + 17);
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_10:
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *((_DWORD *)this + 17);
    }
    else
    {
      int v8 = 1;
    }
    uint64_t v4 = (v4 + v8 + 1);
  }
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      int v3 = *((_DWORD *)this + 17);
    }
    else
    {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v10 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    int v3 = *((_DWORD *)this + 17);
  }
  else
  {
    int v12 = 1;
  }
  uint64_t v4 = (v4 + v12 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_17:
    if ((v3 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_35;
  }
LABEL_29:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v13 & 0x80000000) != 0)
  {
    int v14 = 10;
  }
  else if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    int v3 = *((_DWORD *)this + 17);
  }
  else
  {
    int v14 = 1;
  }
  uint64_t v4 = (v4 + v14 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_18:
    if ((v3 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_35:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    int v3 = *((_DWORD *)this + 17);
  }
  else
  {
    int v16 = 1;
  }
  uint64_t v4 = (v4 + v16 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_19:
    if ((v3 & 0x80) == 0) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
LABEL_39:
  unsigned int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
    int v3 = *((_DWORD *)this + 17);
  }
  else
  {
    int v18 = 1;
  }
  uint64_t v4 = (v4 + v18 + 1);
  if ((v3 & 0x80) != 0)
  {
LABEL_43:
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v19 >= 0x80)
    {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
      int v3 = *((_DWORD *)this + 17);
    }
    else
    {
      int v20 = 2;
    }
    uint64_t v4 = (v20 + v4);
  }
LABEL_47:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_83;
  }
  if ((v3 & 0x100) != 0)
  {
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
      int v3 = *((_DWORD *)this + 17);
    }
    else
    {
      int v22 = 2;
    }
    uint64_t v4 = (v22 + v4);
    if ((v3 & 0x200) == 0)
    {
LABEL_50:
      if ((v3 & 0x400) == 0) {
        goto LABEL_51;
      }
      goto LABEL_63;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_50;
  }
  uint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v23 >= 0x80)
  {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2) + 1;
    int v3 = *((_DWORD *)this + 17);
  }
  else
  {
    int v24 = 2;
  }
  uint64_t v4 = (v24 + v4);
  if ((v3 & 0x400) == 0)
  {
LABEL_51:
    if ((v3 & 0x800) == 0) {
      goto LABEL_52;
    }
    goto LABEL_67;
  }
LABEL_63:
  int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v25 >= 0x80)
  {
    int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2) + 1;
    int v3 = *((_DWORD *)this + 17);
  }
  else
  {
    int v26 = 2;
  }
  uint64_t v4 = (v26 + v4);
  if ((v3 & 0x800) == 0)
  {
LABEL_52:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_73;
  }
LABEL_67:
  v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if ((v27 & 0x80000000) != 0)
  {
    int v28 = 11;
  }
  else if (v27 >= 0x80)
  {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2) + 1;
    int v3 = *((_DWORD *)this + 17);
  }
  else
  {
    int v28 = 2;
  }
  uint64_t v4 = (v28 + v4);
  if ((v3 & 0x1000) == 0)
  {
LABEL_53:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_79;
  }
LABEL_73:
  v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if ((v29 & 0x80000000) != 0)
  {
    int v30 = 11;
  }
  else if (v29 >= 0x80)
  {
    int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2) + 1;
    int v3 = *((_DWORD *)this + 17);
  }
  else
  {
    int v30 = 2;
  }
  uint64_t v4 = (v30 + v4);
  if ((v3 & 0x2000) != 0)
  {
LABEL_79:
    v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    if (v31 >= 0x80) {
      int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2) + 1;
    }
    else {
      int v32 = 2;
    }
    uint64_t v4 = (v32 + v4);
  }
LABEL_83:
  *((_DWORD *)this + 16) = v4;
  return v4;
}

void sub_10007F8F4(proto::gnss::Emergency::ReferenceLocation *a1, void *lpsrc)
{
  proto::gnss::Emergency::ReferenceLocation::MergeFrom(a1, (const proto::gnss::Emergency::ReferenceLocation *)lpsrc);
}

uint64_t sub_10007F998()
{
  return 1;
}

void *sub_10007F9A0@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.ReferenceLocation");
}

void sub_10007F9B0(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v40);
  }
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v11 = *(_DWORD *)(a2 + 8);
    a1[37] |= 1u;
    a1[2] = v11;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_50;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v12 = *(_DWORD *)(a2 + 12);
  a1[37] |= 2u;
  a1[3] = v12;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v13 = *(_DWORD *)(a2 + 16);
  a1[37] |= 4u;
  a1[4] = v13;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v14 = *(_DWORD *)(a2 + 20);
  a1[37] |= 8u;
  a1[5] = v14;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_53:
    int v16 = *(_DWORD *)(a2 + 28);
    a1[37] |= 0x20u;
    a1[7] = v16;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_54;
  }
LABEL_52:
  int v15 = *(_DWORD *)(a2 + 24);
  a1[37] |= 0x10u;
  a1[6] = v15;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x20) != 0) {
    goto LABEL_53;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_54:
  int v17 = *(_DWORD *)(a2 + 32);
  a1[37] |= 0x40u;
  a1[8] = v17;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 36);
    a1[37] |= 0x80u;
    a1[9] = v5;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_23;
  }
  if ((v4 & 0x100) != 0)
  {
    int v18 = *(_DWORD *)(a2 + 40);
    a1[37] |= 0x100u;
    a1[10] = v18;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_58;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v19 = *(_DWORD *)(a2 + 44);
  a1[37] |= 0x200u;
  a1[11] = v19;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v20 = *(_DWORD *)(a2 + 48);
  a1[37] |= 0x400u;
  a1[12] = v20;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v21 = *(_DWORD *)(a2 + 52);
  a1[37] |= 0x800u;
  a1[13] = v21;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_61;
  }
LABEL_60:
  int v22 = *(_DWORD *)(a2 + 56);
  a1[37] |= 0x1000u;
  a1[14] = v22;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v23 = *(_DWORD *)(a2 + 60);
  a1[37] |= 0x2000u;
  a1[15] = v23;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_62:
  int v24 = *(_DWORD *)(a2 + 64);
  a1[37] |= 0x4000u;
  a1[16] = v24;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x8000) != 0)
  {
LABEL_22:
    int v6 = *(_DWORD *)(a2 + 68);
    a1[37] |= 0x8000u;
    a1[17] = v6;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
  }
LABEL_23:
  if ((v4 & 0xFF0000) == 0) {
    goto LABEL_33;
  }
  if ((v4 & 0x10000) != 0)
  {
    int v25 = *(_DWORD *)(a2 + 72);
    a1[37] |= 0x10000u;
    a1[18] = v25;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 0x20000) == 0)
    {
LABEL_26:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_66;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_26;
  }
  int v26 = *(_DWORD *)(a2 + 76);
  a1[37] |= 0x20000u;
  a1[19] = v26;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x40000) == 0)
  {
LABEL_27:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_67;
  }
LABEL_66:
  int v27 = *(_DWORD *)(a2 + 80);
  a1[37] |= 0x40000u;
  a1[20] = v27;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x80000) == 0)
  {
LABEL_28:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_68;
  }
LABEL_67:
  int v28 = *(_DWORD *)(a2 + 84);
  a1[37] |= 0x80000u;
  a1[21] = v28;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x100000) == 0)
  {
LABEL_29:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_69;
  }
LABEL_68:
  int v29 = *(_DWORD *)(a2 + 88);
  a1[37] |= 0x100000u;
  a1[22] = v29;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x200000) == 0)
  {
LABEL_30:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_70;
  }
LABEL_69:
  int v30 = *(_DWORD *)(a2 + 92);
  a1[37] |= 0x200000u;
  a1[23] = v30;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x400000) == 0)
  {
LABEL_31:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_32;
  }
LABEL_70:
  int v31 = *(_DWORD *)(a2 + 96);
  a1[37] |= 0x400000u;
  a1[24] = v31;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x800000) != 0)
  {
LABEL_32:
    int v7 = *(_DWORD *)(a2 + 100);
    a1[37] |= 0x800000u;
    a1[25] = v7;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
  }
LABEL_33:
  if (!HIBYTE(v4)) {
    goto LABEL_42;
  }
  if ((v4 & 0x1000000) != 0)
  {
    int v32 = *(_DWORD *)(a2 + 104);
    a1[37] |= 0x1000000u;
    a1[26] = v32;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 0x2000000) == 0)
    {
LABEL_36:
      if ((v4 & 0x4000000) == 0) {
        goto LABEL_37;
      }
      goto LABEL_74;
    }
  }
  else if ((v4 & 0x2000000) == 0)
  {
    goto LABEL_36;
  }
  int v33 = *(_DWORD *)(a2 + 108);
  a1[37] |= 0x2000000u;
  a1[27] = v33;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_37:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_75;
  }
LABEL_74:
  int v34 = *(_DWORD *)(a2 + 112);
  a1[37] |= 0x4000000u;
  a1[28] = v34;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_38:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_76;
  }
LABEL_75:
  int v35 = *(_DWORD *)(a2 + 116);
  a1[37] |= 0x8000000u;
  a1[29] = v35;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_39:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_77;
  }
LABEL_76:
  int v36 = *(_DWORD *)(a2 + 120);
  a1[37] |= 0x10000000u;
  a1[30] = v36;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_40:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_41;
    }
LABEL_78:
    int v38 = *(_DWORD *)(a2 + 128);
    a1[37] |= 0x40000000u;
    a1[32] = v38;
    if ((*(_DWORD *)(a2 + 148) & 0x80000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_79;
  }
LABEL_77:
  int v37 = *(_DWORD *)(a2 + 124);
  a1[37] |= 0x20000000u;
  a1[31] = v37;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x40000000) != 0) {
    goto LABEL_78;
  }
LABEL_41:
  if ((v4 & 0x80000000) == 0) {
    goto LABEL_42;
  }
LABEL_79:
  int v39 = *(_DWORD *)(a2 + 132);
  a1[37] |= 0x80000000;
  a1[33] = v39;
LABEL_42:
  LOBYTE(v8) = *(unsigned char *)(a2 + 152);
  if ((_BYTE)v8)
  {
    if (*(unsigned char *)(a2 + 152))
    {
      int v9 = *(_DWORD *)(a2 + 136);
      a1[38] |= 1u;
      a1[34] = v9;
      int v8 = *(_DWORD *)(a2 + 152);
    }
    if ((v8 & 2) != 0)
    {
      int v10 = *(_DWORD *)(a2 + 140);
      a1[38] |= 2u;
      a1[35] = v10;
    }
  }
}

void sub_10007FE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10007FE94(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A6B8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10007FEB4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A6B8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10007FF08()
{
}

uint64_t sub_10007FF7C(uint64_t result)
{
  unsigned int v1 = *(_DWORD *)(result + 148);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
  }
  if (HIBYTE(v1))
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
  }
  if (*(unsigned char *)(result + 152)) {
    *(void *)(result + 136) = 0;
  }
  *(void *)(result + 148) = 0;
  return result;
}

uint64_t sub_10007FFE4(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 4;
  int v6 = a1 + 5;
  int v7 = a1 + 10;
  int v8 = a1 + 11;
  int v9 = a1 + 17;
  v111 = a1 + 23;
  v112 = a1 + 22;
  v109 = a1 + 26;
  v110 = a1 + 24;
  v107 = a1 + 28;
  v108 = a1 + 27;
  v105 = a1 + 31;
  v106 = a1 + 30;
  v104 = a1 + 32;
  int v10 = a1 + 33;
  int v11 = a1 + 34;
  int v12 = a1 + 35;
  while (2)
  {
    int v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v13;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v13 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        unsigned int v113 = 0;
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v17 < v16 && (*v17 & 0x80000000) == 0)
        {
          unsigned int v18 = *v17;
          int v19 = v17 + 1;
          *((void *)this + 1) = v19;
LABEL_84:
          a1[2] = v18;
          a1[37] |= 1u;
          if ((unint64_t)v19 < v16 && *v19 == 16)
          {
            int v20 = v19 + 1;
            *((void *)this + 1) = v20;
            goto LABEL_87;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
        if (result)
        {
          unsigned int v18 = v113;
          int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
          goto LABEL_84;
        }
        break;
      case 2u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
LABEL_87:
        unsigned int v113 = 0;
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v54 = v113;
          unsigned int v55 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v54 = *v20;
          unsigned int v55 = v20 + 1;
          *((void *)this + 1) = v55;
        }
        a1[3] = v54;
        a1[37] |= 2u;
        if ((unint64_t)v55 >= v16 || *v55 != 24) {
          continue;
        }
        int v21 = v55 + 1;
        *((void *)this + 1) = v21;
LABEL_95:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v56 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v21;
          unsigned int v56 = v21 + 1;
          *((void *)this + 1) = v56;
        }
        a1[37] |= 4u;
        if ((unint64_t)v56 >= v16 || *v56 != 32) {
          continue;
        }
        int v22 = v56 + 1;
        *((void *)this + 1) = v22;
LABEL_103:
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          v57 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v22;
          v57 = v22 + 1;
          *((void *)this + 1) = v57;
        }
        a1[37] |= 8u;
        if ((unint64_t)v57 >= v16 || *v57 != 40) {
          continue;
        }
        int v23 = v57 + 1;
        *((void *)this + 1) = v23;
LABEL_111:
        unsigned int v113 = 0;
        if ((unint64_t)v23 >= v16 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v58 = v113;
          v59 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v58 = *v23;
          v59 = v23 + 1;
          *((void *)this + 1) = v59;
        }
        a1[6] = v58;
        a1[37] |= 0x10u;
        if ((unint64_t)v59 >= v16 || *v59 != 48) {
          continue;
        }
        int v24 = v59 + 1;
        *((void *)this + 1) = v24;
LABEL_119:
        unsigned int v113 = 0;
        if ((unint64_t)v24 >= v16 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v60 = v113;
          v61 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v60 = *v24;
          v61 = v24 + 1;
          *((void *)this + 1) = v61;
        }
        a1[7] = v60;
        a1[37] |= 0x20u;
        if ((unint64_t)v61 >= v16 || *v61 != 56) {
          continue;
        }
        int v25 = v61 + 1;
        *((void *)this + 1) = v25;
LABEL_127:
        unsigned int v113 = 0;
        if ((unint64_t)v25 >= v16 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v62 = v113;
          v63 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v62 = *v25;
          v63 = v25 + 1;
          *((void *)this + 1) = v63;
        }
        a1[8] = v62;
        a1[37] |= 0x40u;
        if ((unint64_t)v63 >= v16 || *v63 != 64) {
          continue;
        }
        int v26 = v63 + 1;
        *((void *)this + 1) = v26;
LABEL_135:
        unsigned int v113 = 0;
        if ((unint64_t)v26 >= v16 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v64 = v113;
          v65 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v64 = *v26;
          v65 = v26 + 1;
          *((void *)this + 1) = v65;
        }
        a1[9] = v64;
        a1[37] |= 0x80u;
        if ((unint64_t)v65 >= v16 || *v65 != 72) {
          continue;
        }
        int v27 = v65 + 1;
        *((void *)this + 1) = v27;
LABEL_143:
        if ((unint64_t)v27 >= v16 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          v66 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v27;
          v66 = v27 + 1;
          *((void *)this + 1) = v66;
        }
        a1[37] |= 0x100u;
        if ((unint64_t)v66 >= v16 || *v66 != 80) {
          continue;
        }
        int v28 = v66 + 1;
        *((void *)this + 1) = v28;
LABEL_151:
        if ((unint64_t)v28 >= v16 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          v67 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v28;
          v67 = v28 + 1;
          *((void *)this + 1) = v67;
        }
        a1[37] |= 0x200u;
        if ((unint64_t)v67 >= v16 || *v67 != 88) {
          continue;
        }
        int v29 = v67 + 1;
        *((void *)this + 1) = v29;
LABEL_159:
        unsigned int v113 = 0;
        if ((unint64_t)v29 >= v16 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v68 = v113;
          v69 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v68 = *v29;
          v69 = v29 + 1;
          *((void *)this + 1) = v69;
        }
        a1[12] = v68;
        a1[37] |= 0x400u;
        if ((unint64_t)v69 >= v16 || *v69 != 96) {
          continue;
        }
        int v30 = v69 + 1;
        *((void *)this + 1) = v30;
LABEL_167:
        unsigned int v113 = 0;
        if ((unint64_t)v30 >= v16 || *v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v70 = v113;
          v71 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v70 = *v30;
          v71 = v30 + 1;
          *((void *)this + 1) = v71;
        }
        a1[13] = v70;
        a1[37] |= 0x800u;
        if ((unint64_t)v71 >= v16 || *v71 != 104) {
          continue;
        }
        int v31 = v71 + 1;
        *((void *)this + 1) = v31;
LABEL_175:
        unsigned int v113 = 0;
        if ((unint64_t)v31 >= v16 || *v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v72 = v113;
          v73 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v72 = *v31;
          v73 = v31 + 1;
          *((void *)this + 1) = v73;
        }
        a1[14] = v72;
        a1[37] |= 0x1000u;
        if ((unint64_t)v73 >= v16 || *v73 != 112) {
          continue;
        }
        int v32 = v73 + 1;
        *((void *)this + 1) = v32;
LABEL_183:
        unsigned int v113 = 0;
        if ((unint64_t)v32 >= v16 || *v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v74 = v113;
          v75 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v74 = *v32;
          v75 = v32 + 1;
          *((void *)this + 1) = v75;
        }
        a1[15] = v74;
        a1[37] |= 0x2000u;
        if ((unint64_t)v75 >= v16 || *v75 != 120) {
          continue;
        }
        int v33 = v75 + 1;
        *((void *)this + 1) = v33;
LABEL_191:
        unsigned int v113 = 0;
        if ((unint64_t)v33 >= v16 || (char)*v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v76 = v113;
          v77 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v76 = *v33;
          v77 = v33 + 1;
          *((void *)this + 1) = v77;
        }
        a1[16] = v76;
        a1[37] |= 0x4000u;
        if ((int)v16 - (int)v77 < 2 || *v77 != 128 || v77[1] != 1) {
          continue;
        }
        int v34 = v77 + 2;
        *((void *)this + 1) = v34;
LABEL_200:
        if ((unint64_t)v34 >= v16 || (char)*v34 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          v78 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v9 = *v34;
          v78 = v34 + 1;
          *((void *)this + 1) = v78;
        }
        a1[37] |= 0x8000u;
        if ((int)v16 - (int)v78 < 2 || *v78 != 136 || v78[1] != 1) {
          continue;
        }
        int v35 = v78 + 2;
        *((void *)this + 1) = v35;
LABEL_209:
        unsigned int v113 = 0;
        if ((unint64_t)v35 >= v16 || (char)*v35 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v79 = v113;
          v80 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v79 = *v35;
          v80 = v35 + 1;
          *((void *)this + 1) = v80;
        }
        a1[18] = v79;
        a1[37] |= 0x10000u;
        if ((int)v16 - (int)v80 < 2 || *v80 != 144 || v80[1] != 1) {
          continue;
        }
        int v36 = v80 + 2;
        *((void *)this + 1) = v36;
LABEL_218:
        unsigned int v113 = 0;
        if ((unint64_t)v36 >= v16 || (char)*v36 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v81 = v113;
          v82 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v81 = *v36;
          v82 = v36 + 1;
          *((void *)this + 1) = v82;
        }
        a1[19] = v81;
        a1[37] |= 0x20000u;
        if ((int)v16 - (int)v82 < 2 || *v82 != 152 || v82[1] != 1) {
          continue;
        }
        int v37 = v82 + 2;
        *((void *)this + 1) = v37;
LABEL_227:
        unsigned int v113 = 0;
        if ((unint64_t)v37 >= v16 || (char)*v37 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v83 = v113;
          v84 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v83 = *v37;
          v84 = v37 + 1;
          *((void *)this + 1) = v84;
        }
        a1[20] = v83;
        a1[37] |= 0x40000u;
        if ((int)v16 - (int)v84 < 2 || *v84 != 160 || v84[1] != 1) {
          continue;
        }
        int v38 = v84 + 2;
        *((void *)this + 1) = v38;
LABEL_236:
        unsigned int v113 = 0;
        if ((unint64_t)v38 >= v16 || (char)*v38 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v85 = v113;
          v86 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v85 = *v38;
          v86 = v38 + 1;
          *((void *)this + 1) = v86;
        }
        a1[21] = v85;
        a1[37] |= 0x80000u;
        if ((int)v16 - (int)v86 < 2 || *v86 != 168 || v86[1] != 1) {
          continue;
        }
        int v39 = v86 + 2;
        *((void *)this + 1) = v39;
LABEL_245:
        if ((unint64_t)v39 >= v16 || (char)*v39 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v112);
          if (!result) {
            return result;
          }
          v87 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v112 = *v39;
          v87 = v39 + 1;
          *((void *)this + 1) = v87;
        }
        a1[37] |= 0x100000u;
        if ((int)v16 - (int)v87 < 2 || *v87 != 176 || v87[1] != 1) {
          continue;
        }
        v40 = v87 + 2;
        *((void *)this + 1) = v40;
LABEL_254:
        if ((unint64_t)v40 >= v16 || (char)*v40 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v111);
          if (!result) {
            return result;
          }
          v88 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v111 = *v40;
          v88 = v40 + 1;
          *((void *)this + 1) = v88;
        }
        a1[37] |= 0x200000u;
        if ((int)v16 - (int)v88 < 2 || *v88 != 184 || v88[1] != 1) {
          continue;
        }
        v41 = v88 + 2;
        *((void *)this + 1) = v41;
LABEL_263:
        if ((unint64_t)v41 >= v16 || (char)*v41 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v110);
          if (!result) {
            return result;
          }
          v89 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v110 = *v41;
          v89 = v41 + 1;
          *((void *)this + 1) = v89;
        }
        a1[37] |= 0x400000u;
        if ((int)v16 - (int)v89 < 2 || *v89 != 192 || v89[1] != 1) {
          continue;
        }
        v42 = v89 + 2;
        *((void *)this + 1) = v42;
LABEL_272:
        unsigned int v113 = 0;
        if ((unint64_t)v42 >= v16 || (char)*v42 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v90 = v113;
          v91 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v90 = *v42;
          v91 = v42 + 1;
          *((void *)this + 1) = v91;
        }
        a1[25] = v90;
        a1[37] |= 0x800000u;
        if ((int)v16 - (int)v91 < 2 || *v91 != 200 || v91[1] != 1) {
          continue;
        }
        v43 = v91 + 2;
        *((void *)this + 1) = v43;
LABEL_281:
        unint64_t v44 = *((void *)this + 2);
        if ((unint64_t)v43 >= v44 || (char)*v43 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v109);
          if (!result) {
            return result;
          }
          v92 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v109 = *v43;
          v92 = v43 + 1;
          *((void *)this + 1) = v92;
        }
        a1[37] |= 0x1000000u;
        if ((int)v44 - (int)v92 < 2 || *v92 != 208 || v92[1] != 1) {
          continue;
        }
        unsigned int v45 = v92 + 2;
        *((void *)this + 1) = v45;
LABEL_290:
        if ((unint64_t)v45 >= v44 || (char)*v45 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          v93 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v108 = *v45;
          v93 = v45 + 1;
          *((void *)this + 1) = v93;
        }
        a1[37] |= 0x2000000u;
        if ((int)v44 - (int)v93 < 2 || *v93 != 216 || v93[1] != 1) {
          continue;
        }
        v46 = v93 + 2;
        *((void *)this + 1) = v46;
LABEL_299:
        if ((unint64_t)v46 >= v44 || (char)*v46 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v107);
          if (!result) {
            return result;
          }
          v94 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v107 = *v46;
          v94 = v46 + 1;
          *((void *)this + 1) = v94;
        }
        a1[37] |= 0x4000000u;
        if ((int)v44 - (int)v94 < 2 || *v94 != 224 || v94[1] != 1) {
          continue;
        }
        unsigned int v47 = v94 + 2;
        *((void *)this + 1) = v47;
LABEL_308:
        unsigned int v113 = 0;
        if ((unint64_t)v47 >= v44 || (char)*v47 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v95 = v113;
          v96 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          unsigned int v95 = *v47;
          v96 = v47 + 1;
          *((void *)this + 1) = v96;
        }
        a1[29] = v95;
        a1[37] |= 0x8000000u;
        if ((int)v44 - (int)v96 < 2 || *v96 != 232 || v96[1] != 1) {
          continue;
        }
        v48 = v96 + 2;
        *((void *)this + 1) = v48;
LABEL_317:
        if ((unint64_t)v48 >= v44 || (char)*v48 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v106);
          if (!result) {
            return result;
          }
          v97 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v106 = *v48;
          v97 = v48 + 1;
          *((void *)this + 1) = v97;
        }
        a1[37] |= 0x10000000u;
        if ((int)v44 - (int)v97 < 2 || *v97 != 240 || v97[1] != 1) {
          continue;
        }
        v49 = v97 + 2;
        *((void *)this + 1) = v49;
LABEL_326:
        if ((unint64_t)v49 >= v44 || (char)*v49 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v105);
          if (!result) {
            return result;
          }
          v98 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v105 = *v49;
          v98 = v49 + 1;
          *((void *)this + 1) = v98;
        }
        a1[37] |= 0x20000000u;
        if ((int)v44 - (int)v98 < 2 || *v98 != 248 || v98[1] != 1) {
          continue;
        }
        v50 = v98 + 2;
        *((void *)this + 1) = v50;
LABEL_335:
        if ((unint64_t)v50 >= v44 || (char)*v50 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v104);
          if (!result) {
            return result;
          }
          v99 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v104 = *v50;
          v99 = v50 + 1;
          *((void *)this + 1) = v99;
        }
        a1[37] |= 0x40000000u;
        if ((int)v44 - (int)v99 < 2 || *v99 != 128 || v99[1] != 2) {
          continue;
        }
        v51 = v99 + 2;
        *((void *)this + 1) = v51;
LABEL_344:
        if ((unint64_t)v51 >= v44 || (char)*v51 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          v100 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v51;
          v100 = v51 + 1;
          *((void *)this + 1) = v100;
        }
        a1[37] |= 0x80000000;
        if ((int)v44 - (int)v100 < 2 || *v100 != 136 || v100[1] != 2) {
          continue;
        }
        v52 = v100 + 2;
        *((void *)this + 1) = v52;
LABEL_353:
        if ((unint64_t)v52 >= v44 || (char)*v52 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          v101 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v11 = *v52;
          v101 = v52 + 1;
          *((void *)this + 1) = v101;
        }
        a1[38] |= 1u;
        if ((int)v44 - (int)v101 < 2 || *v101 != 144 || v101[1] != 2) {
          continue;
        }
        v53 = (char *)(v101 + 2);
        *((void *)this + 1) = v53;
LABEL_362:
        if ((unint64_t)v53 >= v44 || *v53 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v12);
          if (!result) {
            return result;
          }
          v102 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          *int v12 = *v53;
          v102 = (unsigned __int8 *)(v53 + 1);
          *((void *)this + 1) = v102;
        }
        a1[38] |= 2u;
        if (v102 != (unsigned __int8 *)v44
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_95;
      case 4u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_103;
      case 5u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v23 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_111;
      case 6u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_119;
      case 7u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v25 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_127;
      case 8u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v26 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_135;
      case 9u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v27 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_143;
      case 0xAu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v28 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_151;
      case 0xBu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v29 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_159;
      case 0xCu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v30 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_167;
      case 0xDu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v31 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_175;
      case 0xEu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v32 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_183;
      case 0xFu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v33 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_191;
      case 0x10u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v34 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_200;
      case 0x11u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v35 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_209;
      case 0x12u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v36 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_218;
      case 0x13u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v37 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_227;
      case 0x14u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v38 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_236;
      case 0x15u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v39 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_245;
      case 0x16u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        v40 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_254;
      case 0x17u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        v41 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_263;
      case 0x18u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        v42 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_272;
      case 0x19u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        v43 = (unsigned __int8 *)*((void *)this + 1);
        goto LABEL_281;
      case 0x1Au:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        unsigned int v45 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v44 = *((void *)this + 2);
        goto LABEL_290;
      case 0x1Bu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        v46 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v44 = *((void *)this + 2);
        goto LABEL_299;
      case 0x1Cu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        unsigned int v47 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v44 = *((void *)this + 2);
        goto LABEL_308;
      case 0x1Du:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        v48 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v44 = *((void *)this + 2);
        goto LABEL_317;
      case 0x1Eu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        v49 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v44 = *((void *)this + 2);
        goto LABEL_326;
      case 0x1Fu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        v50 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v44 = *((void *)this + 2);
        goto LABEL_335;
      case 0x20u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        v51 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v44 = *((void *)this + 2);
        goto LABEL_344;
      case 0x21u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        v52 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v44 = *((void *)this + 2);
        goto LABEL_353;
      case 0x22u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        v53 = (char *)*((void *)this + 1);
        unint64_t v44 = *((void *)this + 2);
        goto LABEL_362;
      default:
        int v15 = TagFallback & 7;
LABEL_78:
        if (v15 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_10008127C(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[37];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[37];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_39;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[37];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[37];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[14], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v5[15], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v5[16], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v5[17], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v5[18], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v5[19], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v5[20], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, v5[21], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, v5[22], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, v5[23], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, v5[24], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v5[25], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, v5[26], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, v5[27], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, v5[28], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, v5[29], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, v5[30], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_32;
    }
LABEL_67:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, v5[32], a2, a4);
    if ((v5[37] & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_68;
  }
LABEL_66:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, v5[31], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x40000000) != 0) {
    goto LABEL_67;
  }
LABEL_32:
  if ((v6 & 0x80000000) == 0) {
    goto LABEL_33;
  }
LABEL_68:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, v5[33], a2, a4);
LABEL_33:
  int v7 = v5[38];
  if (v7)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, v5[34], a2, a4);
    int v7 = v5[38];
  }
  if ((v7 & 2) != 0)
  {
    int v8 = v5[35];
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, v8, a2, a4);
  }
  return result;
}

uint64_t proto::gnss::Emergency::GpsEphemeris::ByteSize(proto::gnss::Emergency::GpsEphemeris *this, unsigned int a2)
{
  unsigned int v3 = *((_DWORD *)this + 37);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_57;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v7 & 0x80000000) != 0)
    {
      int v8 = 10;
    }
    else if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      unsigned int v3 = *((_DWORD *)this + 37);
    }
    else
    {
      int v8 = 1;
    }
    uint64_t v4 = (v4 + v8 + 1);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      unsigned int v3 = *((_DWORD *)this + 37);
    }
    else
    {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v10 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_33;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v12 = 1;
  }
  uint64_t v4 = (v4 + v12 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_39;
  }
LABEL_33:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v13 & 0x80000000) != 0)
  {
    int v14 = 10;
  }
  else if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v14 = 1;
  }
  uint64_t v4 = (v4 + v14 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_45;
  }
LABEL_39:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v15 & 0x80000000) != 0)
  {
    int v16 = 10;
  }
  else if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v16 = 1;
  }
  uint64_t v4 = (v4 + v16 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0) {
      goto LABEL_57;
    }
    goto LABEL_51;
  }
LABEL_45:
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v17 & 0x80000000) != 0)
  {
    int v18 = 10;
  }
  else if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v18 = 1;
  }
  uint64_t v4 = (v4 + v18 + 1);
  if ((v3 & 0x80) != 0)
  {
LABEL_51:
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if ((v19 & 0x80000000) != 0)
    {
      int v20 = 10;
    }
    else if (v19 >= 0x80)
    {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
      unsigned int v3 = *((_DWORD *)this + 37);
    }
    else
    {
      int v20 = 1;
    }
    uint64_t v4 = (v4 + v20 + 1);
  }
LABEL_57:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_109;
  }
  if ((v3 & 0x100) != 0)
  {
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2);
      unsigned int v3 = *((_DWORD *)this + 37);
    }
    else
    {
      int v22 = 1;
    }
    uint64_t v4 = (v4 + v22 + 1);
    if ((v3 & 0x200) == 0)
    {
LABEL_60:
      if ((v3 & 0x400) == 0) {
        goto LABEL_61;
      }
      goto LABEL_75;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_60;
  }
  int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v23 >= 0x80)
  {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2);
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v24 = 1;
  }
  uint64_t v4 = (v4 + v24 + 1);
  if ((v3 & 0x400) == 0)
  {
LABEL_61:
    if ((v3 & 0x800) == 0) {
      goto LABEL_62;
    }
    goto LABEL_81;
  }
LABEL_75:
  int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if ((v25 & 0x80000000) != 0)
  {
    int v26 = 10;
  }
  else if (v25 >= 0x80)
  {
    int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v26 = 1;
  }
  uint64_t v4 = (v4 + v26 + 1);
  if ((v3 & 0x800) == 0)
  {
LABEL_62:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_87;
  }
LABEL_81:
  int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if ((v27 & 0x80000000) != 0)
  {
    int v28 = 10;
  }
  else if (v27 >= 0x80)
  {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2);
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v28 = 1;
  }
  uint64_t v4 = (v4 + v28 + 1);
  if ((v3 & 0x1000) == 0)
  {
LABEL_63:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_93;
  }
LABEL_87:
  int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if ((v29 & 0x80000000) != 0)
  {
    int v30 = 10;
  }
  else if (v29 >= 0x80)
  {
    int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2);
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v30 = 1;
  }
  uint64_t v4 = (v4 + v30 + 1);
  if ((v3 & 0x2000) == 0)
  {
LABEL_64:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_99;
  }
LABEL_93:
  int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if ((v31 & 0x80000000) != 0)
  {
    int v32 = 10;
  }
  else if (v31 >= 0x80)
  {
    int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2);
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v32 = 1;
  }
  uint64_t v4 = (v4 + v32 + 1);
  if ((v3 & 0x4000) == 0)
  {
LABEL_65:
    if ((v3 & 0x8000) == 0) {
      goto LABEL_109;
    }
    goto LABEL_105;
  }
LABEL_99:
  int v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if ((v33 & 0x80000000) != 0)
  {
    int v34 = 10;
  }
  else if (v33 >= 0x80)
  {
    int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33, a2);
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v34 = 1;
  }
  uint64_t v4 = (v4 + v34 + 1);
  if ((v3 & 0x8000) != 0)
  {
LABEL_105:
    int v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    if (v35 >= 0x80)
    {
      int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35, a2);
      unsigned int v3 = *((_DWORD *)this + 37);
    }
    else
    {
      int v36 = 1;
    }
    uint64_t v4 = (v4 + v36 + 2);
  }
LABEL_109:
  if ((v3 & 0xFF0000) == 0) {
    goto LABEL_161;
  }
  if ((v3 & 0x10000) != 0)
  {
    int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    if ((v37 & 0x80000000) != 0)
    {
      int v38 = 10;
    }
    else if (v37 >= 0x80)
    {
      int v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37, a2);
      unsigned int v3 = *((_DWORD *)this + 37);
    }
    else
    {
      int v38 = 1;
    }
    uint64_t v4 = (v4 + v38 + 2);
    if ((v3 & 0x20000) == 0)
    {
LABEL_112:
      if ((v3 & 0x40000) == 0) {
        goto LABEL_113;
      }
      goto LABEL_131;
    }
  }
  else if ((v3 & 0x20000) == 0)
  {
    goto LABEL_112;
  }
  int v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
  if ((v39 & 0x80000000) != 0)
  {
    int v40 = 10;
  }
  else if (v39 >= 0x80)
  {
    int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39, a2);
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v40 = 1;
  }
  uint64_t v4 = (v4 + v40 + 2);
  if ((v3 & 0x40000) == 0)
  {
LABEL_113:
    if ((v3 & 0x80000) == 0) {
      goto LABEL_114;
    }
    goto LABEL_137;
  }
LABEL_131:
  v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
  if ((v41 & 0x80000000) != 0)
  {
    int v42 = 10;
  }
  else if (v41 >= 0x80)
  {
    int v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41, a2);
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v42 = 1;
  }
  uint64_t v4 = (v4 + v42 + 2);
  if ((v3 & 0x80000) == 0)
  {
LABEL_114:
    if ((v3 & 0x100000) == 0) {
      goto LABEL_115;
    }
    goto LABEL_143;
  }
LABEL_137:
  v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 21);
  if ((v43 & 0x80000000) != 0)
  {
    int v44 = 10;
  }
  else if (v43 >= 0x80)
  {
    int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43, a2);
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v44 = 1;
  }
  uint64_t v4 = (v4 + v44 + 2);
  if ((v3 & 0x100000) == 0)
  {
LABEL_115:
    if ((v3 & 0x200000) == 0) {
      goto LABEL_116;
    }
    goto LABEL_147;
  }
LABEL_143:
  unsigned int v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
  if (v45 >= 0x80)
  {
    int v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45, a2);
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v46 = 1;
  }
  uint64_t v4 = (v4 + v46 + 2);
  if ((v3 & 0x200000) == 0)
  {
LABEL_116:
    if ((v3 & 0x400000) == 0) {
      goto LABEL_117;
    }
    goto LABEL_151;
  }
LABEL_147:
  unsigned int v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 23);
  if (v47 >= 0x80)
  {
    int v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47, a2);
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v48 = 1;
  }
  uint64_t v4 = (v4 + v48 + 2);
  if ((v3 & 0x400000) == 0)
  {
LABEL_117:
    if ((v3 & 0x800000) == 0) {
      goto LABEL_161;
    }
    goto LABEL_155;
  }
LABEL_151:
  v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 24);
  if (v49 >= 0x80)
  {
    int v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49, a2);
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v50 = 1;
  }
  uint64_t v4 = (v4 + v50 + 2);
  if ((v3 & 0x800000) != 0)
  {
LABEL_155:
    v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 25);
    if ((v51 & 0x80000000) != 0)
    {
      int v52 = 10;
    }
    else if (v51 >= 0x80)
    {
      int v52 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v51, a2);
      unsigned int v3 = *((_DWORD *)this + 37);
    }
    else
    {
      int v52 = 1;
    }
    uint64_t v4 = (v4 + v52 + 2);
  }
LABEL_161:
  if (!HIBYTE(v3)) {
    goto LABEL_205;
  }
  if ((v3 & 0x1000000) != 0)
  {
    v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 26);
    if (v53 >= 0x80)
    {
      int v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v53, a2);
      unsigned int v3 = *((_DWORD *)this + 37);
    }
    else
    {
      int v54 = 1;
    }
    uint64_t v4 = (v4 + v54 + 2);
    if ((v3 & 0x2000000) == 0)
    {
LABEL_164:
      if ((v3 & 0x4000000) == 0) {
        goto LABEL_165;
      }
      goto LABEL_179;
    }
  }
  else if ((v3 & 0x2000000) == 0)
  {
    goto LABEL_164;
  }
  unsigned int v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 27);
  if (v55 >= 0x80)
  {
    int v56 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55, a2);
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v56 = 1;
  }
  uint64_t v4 = (v4 + v56 + 2);
  if ((v3 & 0x4000000) == 0)
  {
LABEL_165:
    if ((v3 & 0x8000000) == 0) {
      goto LABEL_166;
    }
    goto LABEL_183;
  }
LABEL_179:
  v57 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 28);
  if (v57 >= 0x80)
  {
    int v58 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v57, a2);
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v58 = 1;
  }
  uint64_t v4 = (v4 + v58 + 2);
  if ((v3 & 0x8000000) == 0)
  {
LABEL_166:
    if ((v3 & 0x10000000) == 0) {
      goto LABEL_167;
    }
    goto LABEL_189;
  }
LABEL_183:
  v59 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 29);
  if ((v59 & 0x80000000) != 0)
  {
    int v60 = 12;
  }
  else if (v59 >= 0x80)
  {
    int v60 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v59, a2) + 2;
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v60 = 3;
  }
  uint64_t v4 = (v60 + v4);
  if ((v3 & 0x10000000) == 0)
  {
LABEL_167:
    if ((v3 & 0x20000000) == 0) {
      goto LABEL_168;
    }
    goto LABEL_193;
  }
LABEL_189:
  v61 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 30);
  if (v61 >= 0x80)
  {
    int v62 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v61, a2) + 2;
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v62 = 3;
  }
  uint64_t v4 = (v62 + v4);
  if ((v3 & 0x20000000) == 0)
  {
LABEL_168:
    if ((v3 & 0x40000000) == 0) {
      goto LABEL_169;
    }
    goto LABEL_197;
  }
LABEL_193:
  v63 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 31);
  if (v63 >= 0x80)
  {
    int v64 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v63, a2) + 2;
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v64 = 3;
  }
  uint64_t v4 = (v64 + v4);
  if ((v3 & 0x40000000) == 0)
  {
LABEL_169:
    if ((v3 & 0x80000000) == 0) {
      goto LABEL_205;
    }
    goto LABEL_201;
  }
LABEL_197:
  v65 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 32);
  if (v65 >= 0x80)
  {
    int v66 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v65, a2) + 2;
    unsigned int v3 = *((_DWORD *)this + 37);
  }
  else
  {
    int v66 = 3;
  }
  uint64_t v4 = (v66 + v4);
  if ((v3 & 0x80000000) != 0)
  {
LABEL_201:
    v67 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 33);
    if (v67 >= 0x80) {
      int v68 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v67, a2) + 2;
    }
    else {
      int v68 = 3;
    }
    uint64_t v4 = (v68 + v4);
  }
LABEL_205:
  LOBYTE(v69) = *((unsigned char *)this + 152);
  if ((_BYTE)v69)
  {
    if (*((unsigned char *)this + 152))
    {
      unsigned int v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 34);
      if (v70 >= 0x80)
      {
        int v71 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v70, a2) + 2;
        int v69 = *((_DWORD *)this + 38);
      }
      else
      {
        int v71 = 3;
      }
      uint64_t v4 = (v71 + v4);
    }
    if ((v69 & 2) != 0)
    {
      unsigned int v72 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 35);
      if (v72 >= 0x80) {
        int v73 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v72, a2) + 2;
      }
      else {
        int v73 = 3;
      }
      uint64_t v4 = (v73 + v4);
    }
  }
  *((_DWORD *)this + 36) = v4;
  return v4;
}

void sub_100081D58(_DWORD *a1, void *lpsrc)
{
  sub_10007F9B0(a1, (uint64_t)lpsrc);
}

uint64_t sub_100081DFC()
{
  return 1;
}

void *sub_100081E04@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GpsEphemeris");
}

void proto::gnss::Emergency::GpsNavigationModel::MergeFrom(proto::gnss::Emergency::GpsNavigationModel *this, const proto::gnss::Emergency::GpsNavigationModel *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((proto::gnss::Emergency::GpsNavigationModel *)((char *)this + 8), *((_DWORD *)a2 + 4) + *((_DWORD *)this + 4));
  if (*((int *)a2 + 4) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*((void *)a2 + 1) + 8 * v4);
      int v6 = *((_DWORD *)this + 5);
      uint64_t v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((proto::gnss::Emergency::GpsNavigationModel *)((char *)this + 8), v6 + 1);
          int v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 1);
      *((_DWORD *)this + 4) = v7 + 1;
      sub_10007F9B0(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  LOBYTE(v9) = *((unsigned char *)a2 + 52);
  if ((_BYTE)v9)
  {
    if (*((unsigned char *)a2 + 52))
    {
      int v10 = *((_DWORD *)a2 + 8);
      *((_DWORD *)this + 13) |= 1u;
      *((_DWORD *)this + 8) = v10;
      int v9 = *((_DWORD *)a2 + 13);
    }
    if ((v9 & 4) != 0)
    {
      unsigned int v11 = *((_DWORD *)a2 + 9);
      if (v11 >= 6) {
        __assert_rtn("set_session_protocol", "GnssEmergencyTypes.pb.h", 24527, "::proto::gnss::Emergency::SessionProtocol_IsValid(value)");
      }
      *((_DWORD *)this + 13) |= 4u;
      *((_DWORD *)this + 9) = v11;
      int v9 = *((_DWORD *)a2 + 13);
    }
    if ((v9 & 8) != 0)
    {
      unsigned int v12 = *((_DWORD *)a2 + 10);
      if (v12 >= 7) {
        __assert_rtn("set_pos_protocol", "GnssEmergencyTypes.pb.h", 24550, "::proto::gnss::Emergency::PosProtocol_IsValid(value)");
      }
      *((_DWORD *)this + 13) |= 8u;
      *((_DWORD *)this + 10) = v12;
      int v9 = *((_DWORD *)a2 + 13);
    }
    if ((v9 & 0x10) != 0)
    {
      int v13 = *((_DWORD *)a2 + 11);
      *((_DWORD *)this + 13) |= 0x10u;
      *((_DWORD *)this + 11) = v13;
    }
  }
}

void sub_10008205C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100082074(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010A730;
  int v2 = *((_DWORD *)this + 5);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*((void *)this + 1) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)this + 5);
      }
    }
  }
  if (*((void *)this + 1)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100082134(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100082074(a1);

  operator delete();
}

void sub_10008216C()
{
}

uint64_t proto::gnss::Emergency::GpsNavigationModel::Clear(proto::gnss::Emergency::GpsNavigationModel *this)
{
  if (*((unsigned char *)this + 52))
  {
    *((void *)this + 4) = 0;
    *((void *)this + 5) = 0;
  }
  uint64_t result = sub_10003AD6C((uint64_t)this + 8);
  *((_DWORD *)this + 13) = 0;
  return result;
}

uint64_t proto::gnss::Emergency::GpsNavigationModel::MergePartialFromCodedStream(proto::gnss::Emergency::GpsNavigationModel *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 32);
  int v6 = (proto::gnss::Emergency::GpsNavigationModel *)((char *)this + 8);
  uint64_t v7 = (unsigned int *)((char *)this + 44);
LABEL_2:
  while (2)
  {
    uint64_t v8 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v11 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        if ((unint64_t)v11 >= v12 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v13 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v5 = *v11;
          int v13 = v11 + 1;
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 13) |= 1u;
        if ((unint64_t)v13 >= v12 || *v13 != 18) {
          continue;
        }
        goto LABEL_28;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_20;
        }
        while (2)
        {
          int v21 = *((_DWORD *)this + 5);
          uint64_t v22 = *((int *)this + 4);
          if ((int)v22 >= v21)
          {
            if (v21 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v21 + 1);
              int v21 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v21 + 1;
            operator new();
          }
          uint64_t v23 = *((void *)this + 1);
          *((_DWORD *)this + 4) = v22 + 1;
          int v24 = *(unsigned int **)(v23 + 8 * v22);
          unsigned int v41 = 0;
          int v25 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v25 >= *((void *)a2 + 2) || *v25 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v41))return 0; {
          }
            }
          else
          {
            unsigned int v41 = *v25;
            *((void *)a2 + 1) = v25 + 1;
          }
          int v26 = *((_DWORD *)a2 + 14);
          int v27 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v26 + 1;
          if (v26 < v27)
          {
            int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v41);
            if (sub_10007FFE4(v24, a2, v29))
            {
              if (*((unsigned char *)a2 + 36))
              {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v28);
                int v30 = *((_DWORD *)a2 + 14);
                BOOL v31 = __OFSUB__(v30, 1);
                int v32 = v30 - 1;
                if (v32 < 0 == v31) {
                  *((_DWORD *)a2 + 14) = v32;
                }
                int v13 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v15 = *((void *)a2 + 2);
                if ((unint64_t)v13 < v15)
                {
                  int v33 = *v13;
                  if (v33 == 18)
                  {
LABEL_28:
                    *((void *)a2 + 1) = v13 + 1;
                    continue;
                  }
                  if (v33 == 24)
                  {
                    int v14 = v13 + 1;
                    *((void *)a2 + 1) = v14;
LABEL_47:
                    unsigned int v40 = 0;
                    if ((unint64_t)v14 >= v15 || *v14 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40);
                      if (!result) {
                        return result;
                      }
                      unsigned int v34 = v40;
                    }
                    else
                    {
                      unsigned int v34 = *v14;
                      *((void *)a2 + 1) = v14 + 1;
                    }
                    if (v34 <= 5)
                    {
                      *((_DWORD *)this + 13) |= 4u;
                      *((_DWORD *)this + 9) = v34;
                    }
                    int v35 = (unsigned char *)*((void *)a2 + 1);
                    unint64_t v16 = *((void *)a2 + 2);
                    if ((unint64_t)v35 < v16 && *v35 == 32)
                    {
                      int v17 = v35 + 1;
                      *((void *)a2 + 1) = v17;
LABEL_57:
                      unsigned int v39 = 0;
                      if ((unint64_t)v17 >= v16 || *v17 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
                        if (!result) {
                          return result;
                        }
                        unsigned int v36 = v39;
                      }
                      else
                      {
                        unsigned int v36 = *v17;
                        *((void *)a2 + 1) = v17 + 1;
                      }
                      if (v36 <= 6)
                      {
                        *((_DWORD *)this + 13) |= 8u;
                        *((_DWORD *)this + 10) = v36;
                      }
                      int v37 = (unsigned char *)*((void *)a2 + 1);
                      unint64_t v18 = *((void *)a2 + 2);
                      if ((unint64_t)v37 < v18 && *v37 == 40)
                      {
                        int v19 = v37 + 1;
                        *((void *)a2 + 1) = v19;
LABEL_67:
                        if ((unint64_t)v19 >= v18 || *v19 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
                          if (!result) {
                            return result;
                          }
                          int v38 = (unsigned __int8 *)*((void *)a2 + 1);
                          unint64_t v18 = *((void *)a2 + 2);
                        }
                        else
                        {
                          unsigned int *v7 = *v19;
                          int v38 = (unsigned __int8 *)(v19 + 1);
                          *((void *)a2 + 1) = v38;
                        }
                        *((_DWORD *)this + 13) |= 0x10u;
                        if (v38 == (unsigned __int8 *)v18
                          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                        {
                          *((_DWORD *)a2 + 8) = 0;
                          uint64_t result = 1;
                          *((unsigned char *)a2 + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
                goto LABEL_2;
              }
            }
          }
          return 0;
        }
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_47;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_57;
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_67;
      default:
        int v10 = TagFallback & 7;
LABEL_20:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100082678(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 52)) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 32), a2, a4);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  int v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 4) == 0)
  {
    if ((v7 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_11:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 40), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 52) & 0x10) == 0) {
      return result;
    }
    goto LABEL_12;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 36), (int)a2, a4);
  int v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 8) != 0) {
    goto LABEL_11;
  }
LABEL_8:
  if ((v7 & 0x10) == 0) {
    return result;
  }
LABEL_12:
  int v8 = *(_DWORD *)(v5 + 44);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, a2, a4);
}

uint64_t proto::gnss::Emergency::GpsNavigationModel::ByteSize(proto::gnss::Emergency::GpsNavigationModel *this, unsigned int a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 52);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_29;
  }
  if (*((unsigned char *)this + 52))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *((_DWORD *)this + 13);
      if ((v3 & 4) == 0) {
        goto LABEL_16;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 4) == 0) {
        goto LABEL_16;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*((unsigned char *)this + 52) & 4) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *((_DWORD *)this + 13);
  }
  else
  {
    int v7 = 2;
  }
  v4 += v7;
LABEL_16:
  if ((v3 & 8) == 0)
  {
    if ((v3 & 0x10) == 0) {
      goto LABEL_29;
    }
    goto LABEL_25;
  }
  int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }
  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *((_DWORD *)this + 13);
  }
  else
  {
    int v9 = 2;
  }
  v4 += v9;
  if ((v3 & 0x10) != 0)
  {
LABEL_25:
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v10 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    }
    else {
      int v11 = 2;
    }
    v4 += v11;
  }
LABEL_29:
  int v12 = *((_DWORD *)this + 4);
  uint64_t v13 = (v12 + v4);
  if (v12 >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::GpsEphemeris::ByteSize(*(proto::gnss::Emergency::GpsEphemeris **)(*((void *)this + 1) + 8 * v14), a2);
      int v16 = (int)v15;
      if (v15 >= 0x80) {
        int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
      }
      else {
        int v17 = 1;
      }
      uint64_t v13 = (v16 + v13 + v17);
      ++v14;
    }
    while (v14 < *((int *)this + 4));
  }
  *((_DWORD *)this + 12) = v13;
  return v13;
}

void sub_1000828B8(proto::gnss::Emergency::GpsNavigationModel *a1, void *lpsrc)
{
  proto::gnss::Emergency::GpsNavigationModel::MergeFrom(a1, (const proto::gnss::Emergency::GpsNavigationModel *)lpsrc);
}

uint64_t sub_10008295C()
{
  return 1;
}

void *sub_100082964@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GpsNavigationModel");
}

void sub_100082974(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    char v4 = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(unsigned char *)(a1 + 8) = v4;
  }
}

void sub_100082A00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100082A18(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A7A8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100082A38(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A7A8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100082A8C()
{
}

uint64_t sub_100082ADC(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(unsigned char *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100082AF0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      unsigned int v12 = 0;
      int v8 = (char *)*((void *)this + 1);
      unint64_t v7 = *((void *)this + 2);
      if ((unint64_t)v8 >= v7 || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
        if (!result) {
          return result;
        }
        unsigned int v9 = v12;
        int v10 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
      }
      else
      {
        unsigned int v9 = *v8;
        int v10 = (unsigned __int8 *)(v8 + 1);
        *((void *)this + 1) = v10;
      }
      *(unsigned char *)(a1 + 8) = v9 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if (v10 == (unsigned __int8 *)v7 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_100082C10(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_100082C2C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1u);
  }
  else {
    uint64_t v1 = 0;
  }
  *(_DWORD *)(a1 + 12) = v1;
  return v1;
}

void sub_100082C48(uint64_t a1, void *lpsrc)
{
  sub_100082974(a1, (uint64_t)lpsrc);
}

uint64_t sub_100082CEC()
{
  return 1;
}

void *sub_100082CF4@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.CplaneConfig");
}

proto::gnss::Emergency::CplaneContext *proto::gnss::Emergency::CplaneContext::CplaneContext(proto::gnss::Emergency::CplaneContext *this, const proto::gnss::Emergency::CplaneContext *a2)
{
  *(void *)this = &off_10010A820;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  proto::gnss::Emergency::CplaneContext::MergeFrom(this, a2);
  return this;
}

void sub_100082D4C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void proto::gnss::Emergency::CplaneContext::MergeFrom(proto::gnss::Emergency::CplaneContext *this, const proto::gnss::Emergency::CplaneContext *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 28))
    {
      *((_DWORD *)this + 7) |= 1u;
      uint64_t v5 = *((void *)this + 1);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *((void *)a2 + 1);
      if (!v6) {
        uint64_t v6 = *(void *)(proto::gnss::Emergency::CplaneContext::default_instance_ + 8);
      }
      sub_10004EE10(v5, v6);
      int v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 2) != 0)
    {
      *((_DWORD *)this + 7) |= 2u;
      uint64_t v7 = *((void *)this + 2);
      if (!v7) {
        operator new();
      }
      int v8 = (unsigned char *)*((void *)a2 + 2);
      if (!v8) {
        int v8 = *(unsigned char **)(proto::gnss::Emergency::CplaneContext::default_instance_ + 16);
      }
      sub_1000835BC(v7, v8);
    }
  }
}

void sub_100082EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *proto::gnss::Emergency::CplaneContext::SharedDtor(void *this)
{
  if ((void *)proto::gnss::Emergency::CplaneContext::default_instance_ != this)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    this = (void *)v1[2];
    if (this)
    {
      int v3 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v3();
    }
  }
  return this;
}

void proto::gnss::Emergency::CplaneContext::~CplaneContext(proto::gnss::Emergency::CplaneContext *this)
{
  *(void *)this = &off_10010A820;
  proto::gnss::Emergency::CplaneContext::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100082FC4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &off_10010A820;
  proto::gnss::Emergency::CplaneContext::SharedDtor(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10008302C()
{
}

uint64_t proto::gnss::Emergency::CplaneContext::Clear(uint64_t this)
{
  LOBYTE(v1) = *(unsigned char *)(this + 28);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(this + 28))
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 24))
        {
          *(_WORD *)(v2 + 16) = 0;
          *(void *)(v2 + 8) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
        int v1 = *(_DWORD *)(this + 28);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 16)) {
          *(_DWORD *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 16) = 0;
      }
    }
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t sub_1000830C8(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t proto::gnss::Emergency::CplaneContext::MergePartialFromCodedStream(proto::gnss::Emergency::CplaneContext *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_17;
        }
        *((_DWORD *)this + 7) |= 1u;
        uint64_t v8 = *((void *)this + 1);
        if (!v8) {
          operator new();
        }
        unsigned int v27 = 0;
        unsigned int v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27))return 0; {
        }
          }
        else
        {
          unsigned int v27 = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)a2 + 14);
        int v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v27);
        if (!sub_10004EFD8(v8, a2, v13) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v12);
        int v14 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v16;
        }
        int v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 < *((void *)a2 + 2) && *v17 == 18)
        {
          *((void *)a2 + 1) = v17 + 1;
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 2) {
        goto LABEL_17;
      }
LABEL_29:
      *((_DWORD *)this + 7) |= 2u;
      uint64_t v18 = *((void *)this + 2);
      if (!v18) {
        operator new();
      }
      unsigned int v28 = 0;
      int v19 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28)) {
          return 0;
        }
      }
      else
      {
        unsigned int v28 = *v19;
        *((void *)a2 + 1) = v19 + 1;
      }
      int v20 = *((_DWORD *)a2 + 14);
      int v21 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v20 + 1;
      if (v20 >= v21) {
        return 0;
      }
      int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v28);
      if (!sub_10008ABF0(v18, a2, v23) || !*((unsigned char *)a2 + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v22);
      int v24 = *((_DWORD *)a2 + 14);
      BOOL v15 = __OFSUB__(v24, 1);
      int v25 = v24 - 1;
      if (v25 < 0 == v15) {
        *((_DWORD *)a2 + 14) = v25;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v7 = TagFallback & 7;
LABEL_17:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000833D0(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::CplaneContext::default_instance_ + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 2) != 0)
  {
LABEL_7:
    uint64_t v8 = *(void *)(v5 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(proto::gnss::Emergency::CplaneContext::default_instance_ + 16);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return result;
}

uint64_t proto::gnss::Emergency::CplaneContext::ByteSize(proto::gnss::Emergency::CplaneContext *this)
{
  if (!*((unsigned char *)this + 28))
  {
    uint64_t v2 = 0;
    goto LABEL_19;
  }
  if ((*((unsigned char *)this + 28) & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((*((unsigned char *)this + 28) & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_16;
  }
  uint64_t v3 = *((void *)this + 1);
  if (!v3) {
    uint64_t v3 = *(void *)(proto::gnss::Emergency::CplaneContext::default_instance_ + 8);
  }
  int v4 = *(_DWORD *)(v3 + 24);
  int v5 = 2 * (v4 & 1);
  if ((v4 & 2) != 0) {
    v5 += 2;
  }
  if ((v4 & 4) != 0) {
    v5 |= 9u;
  }
  if (*(_DWORD *)(v3 + 24)) {
    int v6 = v5;
  }
  else {
    int v6 = 0;
  }
  *(_DWORD *)(v3 + 20) = v6;
  uint64_t v2 = (v6 + 2);
  if ((*((_DWORD *)this + 7) & 2) != 0)
  {
LABEL_16:
    uint64_t v7 = (proto::gnss::Emergency::Cdma1xContext *)*((void *)this + 2);
    if (!v7) {
      uint64_t v7 = *(proto::gnss::Emergency::Cdma1xContext **)(proto::gnss::Emergency::CplaneContext::default_instance_ + 16);
    }
    uint64_t v2 = v2 + proto::gnss::Emergency::Cdma1xContext::ByteSize(v7) + 2;
  }
LABEL_19:
  *((_DWORD *)this + 6) = v2;
  return v2;
}

void sub_100083518(proto::gnss::Emergency::CplaneContext *a1, void *lpsrc)
{
  proto::gnss::Emergency::CplaneContext::MergeFrom(a1, (const proto::gnss::Emergency::CplaneContext *)lpsrc);
}

void sub_1000835BC(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 4);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    if ((*((_DWORD *)a2 + 4) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = a2[11];
    *(_DWORD *)(a1 + 16) |= 8u;
    *(unsigned char *)(a1 + 11) = v5;
  }
}

void sub_1000836B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000836C8()
{
  return 1;
}

void *sub_1000836D0@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.CplaneContext");
}

void proto::gnss::Emergency::EmergConfig::MergeFrom(proto::gnss::Emergency::EmergConfig *this, const proto::gnss::Emergency::EmergConfig *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 40);
  if (!(_BYTE)v4) {
    return;
  }
  if ((*((unsigned char *)a2 + 40) & 1) == 0)
  {
    if ((*((unsigned char *)a2 + 40) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    char v6 = (const std::string *)*((void *)a2 + 1);
    *((_DWORD *)this + 10) |= 2u;
    char v7 = (std::string *)*((void *)this + 1);
    if (v7 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v7, v6);
    int v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_18;
    }
    goto LABEL_13;
  }
  char v5 = *((unsigned char *)a2 + 32);
  *((_DWORD *)this + 10) |= 1u;
  *((unsigned char *)this + 32) = v5;
  int v4 = *((_DWORD *)a2 + 10);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_13:
  *((_DWORD *)this + 10) |= 4u;
  uint64_t v8 = *((void *)this + 2);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *((void *)a2 + 2);
  if (!v9) {
    uint64_t v9 = *(void *)(proto::gnss::Emergency::EmergConfig::default_instance_ + 16);
  }
  sub_100082974(v8, v9);
  if ((*((_DWORD *)a2 + 10) & 8) != 0)
  {
LABEL_18:
    *((_DWORD *)this + 10) |= 8u;
    uint64_t v10 = *((void *)this + 3);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *((void *)a2 + 3);
    if (!v11) {
      uint64_t v11 = *(void *)(proto::gnss::Emergency::EmergConfig::default_instance_ + 24);
    }
    sub_100050718(v10, v11);
  }
}

void sub_1000838CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1000838E4(void *result)
{
  int v1 = result;
  uint64_t v2 = result[1];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if ((void *)proto::gnss::Emergency::EmergConfig::default_instance_ != result)
  {
    uint64_t v4 = result[2];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t result = (void *)v1[3];
    if (result)
    {
      char v5 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v5();
    }
  }
  return result;
}

void sub_1000839C4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A898;
  sub_1000838E4(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100083A18(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A898;
  sub_1000838E4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100083A80()
{
}

uint64_t proto::gnss::Emergency::EmergConfig::Clear(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 40);
  if (v2)
  {
    *(unsigned char *)(this + 32) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 8);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    int v4 = *(_DWORD *)(this + 40);
    if ((v4 & 4) != 0)
    {
      uint64_t v5 = *(void *)(this + 16);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 16)) {
          *(unsigned char *)(v5 + 8) = 0;
        }
        *(_DWORD *)(v5 + 16) = 0;
        int v4 = *(_DWORD *)(this + 40);
      }
    }
    if ((v4 & 8) != 0)
    {
      this = *(void *)(this + 24);
      if (this) {
        this = proto::gnss::Emergency::SuplConfig::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 40) = 0;
  return this;
}

uint64_t proto::gnss::Emergency::EmergConfig::MergePartialFromCodedStream(proto::gnss::Emergency::EmergConfig *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 < *((void *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v33 = 0;
        uint64_t v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!result) {
            return result;
          }
          unsigned int v10 = v33;
          uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v10 = *v9;
          uint64_t v11 = v9 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((unsigned char *)this + 32) = v10 != 0;
        int v12 = *((_DWORD *)this + 10) | 1;
        *((_DWORD *)this + 10) = v12;
        if ((unint64_t)v11 < v8 && *v11 == 18)
        {
          *((void *)a2 + 1) = v11 + 1;
          goto LABEL_25;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_17;
        }
        int v12 = *((_DWORD *)this + 10);
LABEL_25:
        *((_DWORD *)this + 10) = v12 | 2;
        if (*((_UNKNOWN **)this + 1) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_31:
        *((_DWORD *)this + 10) |= 4u;
        uint64_t v15 = *((void *)this + 2);
        if (!v15) {
          operator new();
        }
        unsigned int v34 = 0;
        int v16 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34))return 0; {
        }
          }
        else
        {
          unsigned int v34 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18) {
          return 0;
        }
        int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v34);
        if (!sub_100082AF0(v15, a2, v20) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v19);
        int v21 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v23;
        }
        int v24 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v24 + 1;
LABEL_45:
        *((_DWORD *)this + 10) |= 8u;
        uint64_t v25 = *((void *)this + 3);
        if (!v25) {
          operator new();
        }
        unsigned int v35 = 0;
        int v26 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35))return 0; {
        }
          }
        else
        {
          unsigned int v35 = *v26;
          *((void *)a2 + 1) = v26 + 1;
        }
        int v27 = *((_DWORD *)a2 + 14);
        int v28 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v27 + 1;
        if (v27 >= v28) {
          return 0;
        }
        int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v35);
        if (!sub_100050A7C(v25, a2, v30) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v29);
        int v31 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v31, 1);
        int v32 = v31 - 1;
        if (v32 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v32;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_31;
        }
        goto LABEL_17;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_17;
        }
        goto LABEL_45;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100083FA4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 32), (BOOL)a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::EmergConfig::default_instance_ + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 8) != 0)
  {
LABEL_11:
    uint64_t v8 = *(void *)(v5 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(proto::gnss::Emergency::EmergConfig::default_instance_ + 24);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  }
  return result;
}

uint64_t proto::gnss::Emergency::EmergConfig::ByteSize(proto::gnss::Emergency::EmergConfig *this, unsigned int a2)
{
  int v3 = *((_DWORD *)this + 10);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_28;
  }
  uint64_t v4 = 2 * (v3 & 1u);
  if ((v3 & 2) != 0)
  {
    uint64_t v5 = *((void *)this + 1);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    char v7 = v6;
    uint64_t v8 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      unint64_t v9 = v8;
    }
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v8 = *(void *)(v5 + 8);
      int v3 = *((_DWORD *)this + 10);
      char v7 = *(unsigned char *)(v5 + 23);
    }
    else
    {
      int v10 = 1;
    }
    if (v7 < 0) {
      int v6 = v8;
    }
    uint64_t v4 = (v4 | 1) + v10 + v6;
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0) {
        goto LABEL_28;
      }
      goto LABEL_22;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v11 = *((void *)this + 2);
  if (!v11) {
    uint64_t v11 = *(void *)(proto::gnss::Emergency::EmergConfig::default_instance_ + 16);
  }
  if (*(_DWORD *)(v11 + 16)) {
    int v12 = 2 * (*(_DWORD *)(v11 + 16) & 1);
  }
  else {
    int v12 = 0;
  }
  *(_DWORD *)(v11 + 12) = v12;
  uint64_t v4 = (v4 + v12 + 2);
  if ((*((_DWORD *)this + 10) & 8) != 0)
  {
LABEL_22:
    unsigned int v13 = (proto::gnss::Emergency::SuplConfig *)*((void *)this + 3);
    if (!v13) {
      unsigned int v13 = *(proto::gnss::Emergency::SuplConfig **)(proto::gnss::Emergency::EmergConfig::default_instance_ + 24);
    }
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::SuplConfig::ByteSize(v13, a2);
    int v16 = (int)v14;
    if (v14 >= 0x80) {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, v15);
    }
    else {
      int v17 = 1;
    }
    uint64_t v4 = (v4 + v16 + v17 + 1);
  }
LABEL_28:
  *((_DWORD *)this + 9) = v4;
  return v4;
}

void sub_100084194(proto::gnss::Emergency::EmergConfig *a1, void *lpsrc)
{
  proto::gnss::Emergency::EmergConfig::MergeFrom(a1, (const proto::gnss::Emergency::EmergConfig *)lpsrc);
}

uint64_t sub_100084238()
{
  return 1;
}

void *sub_100084240@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.EmergConfig");
}

void sub_100084250(_DWORD *a1, _DWORD *a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  int v4 = a2[16];
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v6 = a2[2];
    a1[16] |= 1u;
    a1[2] = v6;
    int v4 = a2[16];
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v7 = a2[3];
  a1[16] |= 2u;
  a1[3] = v7;
  int v4 = a2[16];
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v8 = a2[4];
  a1[16] |= 4u;
  a1[4] = v8;
  int v4 = a2[16];
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v9 = a2[5];
  a1[16] |= 8u;
  a1[5] = v9;
  int v4 = a2[16];
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_25:
    int v11 = a2[7];
    a1[16] |= 0x20u;
    a1[7] = v11;
    int v4 = a2[16];
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_24:
  int v10 = a2[6];
  a1[16] |= 0x10u;
  a1[6] = v10;
  int v4 = a2[16];
  if ((v4 & 0x20) != 0) {
    goto LABEL_25;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_26:
  int v12 = a2[8];
  a1[16] |= 0x40u;
  a1[8] = v12;
  int v4 = a2[16];
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = a2[9];
    a1[16] |= 0x80u;
    a1[9] = v5;
    int v4 = a2[16];
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v13 = a2[10];
    a1[16] |= 0x100u;
    a1[10] = v13;
    int v4 = a2[16];
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_30;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v14 = a2[11];
  a1[16] |= 0x200u;
  a1[11] = v14;
  int v4 = a2[16];
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
LABEL_31:
    int v16 = a2[13];
    a1[16] |= 0x800u;
    a1[13] = v16;
    if ((a2[16] & 0x1000) == 0) {
      return;
    }
    goto LABEL_32;
  }
LABEL_30:
  int v15 = a2[12];
  a1[16] |= 0x400u;
  a1[12] = v15;
  int v4 = a2[16];
  if ((v4 & 0x800) != 0) {
    goto LABEL_31;
  }
LABEL_18:
  if ((v4 & 0x1000) == 0) {
    return;
  }
LABEL_32:
  unsigned int v17 = a2[14];
  if (v17 >= 7) {
    __assert_rtn("set_doppler_uncer_ext", "GnssEmergencyTypes.pb.h", 25157, "::proto::gnss::Emergency::GpsDopplerUncMpsExt_IsValid(value)");
  }
  a1[16] |= 0x1000u;
  a1[14] = v17;
}

void sub_100084498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000844B0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A910;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000844D0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A910;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100084524()
{
}

uint64_t sub_100084580(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 64);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 40) = 0;
    *(void *)(result + 48) = 0;
    *(_DWORD *)(result + 56) = 0;
  }
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_1000845B0(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v44 = a1 + 2;
  unsigned int v45 = a1 + 3;
  int v46 = a1 + 4;
  unsigned int v47 = a1 + 5;
  int v5 = a1 + 6;
  int v6 = a1 + 7;
  int v7 = a1 + 8;
  int v8 = a1 + 9;
  int v9 = a1 + 10;
  int v10 = a1 + 11;
  int v11 = a1 + 12;
  int v12 = a1 + 13;
  while (2)
  {
    int v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v13;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v13 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v17 < v16 && (*v17 & 0x80000000) == 0)
        {
          unsigned int *v44 = *v17;
          int v18 = v17 + 1;
          *((void *)this + 1) = v18;
LABEL_42:
          a1[16] |= 1u;
          if ((unint64_t)v18 < v16 && *v18 == 16)
          {
            int v19 = v18 + 1;
            *((void *)this + 1) = v19;
            goto LABEL_45;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v44);
        if (result)
        {
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
          goto LABEL_42;
        }
        break;
      case 2u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
LABEL_45:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v45);
          if (!result) {
            return result;
          }
          int v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v45 = *v19;
          int v31 = v19 + 1;
          *((void *)this + 1) = v31;
        }
        a1[16] |= 2u;
        if ((unint64_t)v31 >= v16 || *v31 != 24) {
          continue;
        }
        unsigned int v20 = v31 + 1;
        *((void *)this + 1) = v20;
LABEL_53:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46);
          if (!result) {
            return result;
          }
          int v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v46 = *v20;
          int v32 = v20 + 1;
          *((void *)this + 1) = v32;
        }
        a1[16] |= 4u;
        if ((unint64_t)v32 >= v16 || *v32 != 32) {
          continue;
        }
        int v21 = v32 + 1;
        *((void *)this + 1) = v21;
LABEL_61:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v47);
          if (!result) {
            return result;
          }
          unsigned int v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v47 = *v21;
          unsigned int v33 = v21 + 1;
          *((void *)this + 1) = v33;
        }
        a1[16] |= 8u;
        if ((unint64_t)v33 >= v16 || *v33 != 40) {
          continue;
        }
        BOOL v22 = v33 + 1;
        *((void *)this + 1) = v22;
LABEL_69:
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v22;
          unsigned int v34 = v22 + 1;
          *((void *)this + 1) = v34;
        }
        a1[16] |= 0x10u;
        if ((unint64_t)v34 >= v16 || *v34 != 48) {
          continue;
        }
        int v23 = v34 + 1;
        *((void *)this + 1) = v23;
LABEL_77:
        if ((unint64_t)v23 >= v16 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v23;
          unsigned int v35 = v23 + 1;
          *((void *)this + 1) = v35;
        }
        a1[16] |= 0x20u;
        if ((unint64_t)v35 >= v16 || *v35 != 56) {
          continue;
        }
        int v24 = v35 + 1;
        *((void *)this + 1) = v24;
LABEL_85:
        if ((unint64_t)v24 >= v16 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v24;
          unsigned int v36 = v24 + 1;
          *((void *)this + 1) = v36;
        }
        a1[16] |= 0x40u;
        if ((unint64_t)v36 >= v16 || *v36 != 64) {
          continue;
        }
        uint64_t v25 = v36 + 1;
        *((void *)this + 1) = v25;
LABEL_93:
        if ((unint64_t)v25 >= v16 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v25;
          int v37 = v25 + 1;
          *((void *)this + 1) = v37;
        }
        a1[16] |= 0x80u;
        if ((unint64_t)v37 >= v16 || *v37 != 72) {
          continue;
        }
        int v26 = v37 + 1;
        *((void *)this + 1) = v26;
LABEL_101:
        if ((unint64_t)v26 >= v16 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          int v38 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v9 = *v26;
          int v38 = v26 + 1;
          *((void *)this + 1) = v38;
        }
        a1[16] |= 0x100u;
        if ((unint64_t)v38 >= v16 || *v38 != 80) {
          continue;
        }
        int v27 = v38 + 1;
        *((void *)this + 1) = v27;
LABEL_109:
        if ((unint64_t)v27 >= v16 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          unsigned int v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v27;
          unsigned int v39 = v27 + 1;
          *((void *)this + 1) = v39;
        }
        a1[16] |= 0x200u;
        if ((unint64_t)v39 >= v16 || *v39 != 88) {
          continue;
        }
        int v28 = v39 + 1;
        *((void *)this + 1) = v28;
LABEL_117:
        if ((unint64_t)v28 >= v16 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          unsigned int v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v11 = *v28;
          unsigned int v40 = v28 + 1;
          *((void *)this + 1) = v40;
        }
        a1[16] |= 0x400u;
        if ((unint64_t)v40 >= v16 || *v40 != 96) {
          continue;
        }
        int v29 = v40 + 1;
        *((void *)this + 1) = v29;
LABEL_125:
        if ((unint64_t)v29 >= v16 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v12);
          if (!result) {
            return result;
          }
          unsigned int v41 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v12 = *v29;
          unsigned int v41 = v29 + 1;
          *((void *)this + 1) = v41;
        }
        a1[16] |= 0x800u;
        if ((unint64_t)v41 >= v16 || *v41 != 104) {
          continue;
        }
        unsigned int v30 = v41 + 1;
        *((void *)this + 1) = v30;
LABEL_133:
        unsigned int v48 = 0;
        if ((unint64_t)v30 >= v16 || *v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48);
          if (!result) {
            return result;
          }
          unsigned int v42 = v48;
        }
        else
        {
          unsigned int v42 = *v30;
          *((void *)this + 1) = v30 + 1;
        }
        if (v42 <= 6)
        {
          a1[16] |= 0x1000u;
          a1[14] = v42;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unsigned int v20 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_53;
      case 4u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_61;
      case 5u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        BOOL v22 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_69;
      case 6u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v23 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_77;
      case 7u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_85;
      case 8u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        uint64_t v25 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_93;
      case 9u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v26 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_101;
      case 0xAu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v27 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_109;
      case 0xBu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v28 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_117;
      case 0xCu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v29 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_125;
      case 0xDu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unsigned int v30 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_133;
      default:
        int v15 = TagFallback & 7;
LABEL_36:
        if (v15 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_100084CE4(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[16];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[16];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[16];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[16];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[16];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  int v6 = v5[16];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  int v6 = v5[16];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  int v6 = v5[16];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  int v6 = v5[16];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  int v6 = v5[16];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  int v6 = v5[16];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], a2, a4);
    if ((v5[16] & 0x1000) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], a2, a4);
  int v6 = v5[16];
  if ((v6 & 0x800) != 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((v6 & 0x1000) == 0) {
    return result;
  }
LABEL_27:
  int v7 = v5[14];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v7, a2, a4);
}

uint64_t sub_100084E88(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[16];
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_45;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    unsigned int v3 = a1[16];
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_10:
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      unsigned int v3 = a1[16];
    }
    else
    {
      int v8 = 1;
    }
    uint64_t v4 = (v4 + v8 + 1);
  }
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      unsigned int v3 = a1[16];
    }
    else
    {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v10 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    unsigned int v3 = a1[16];
  }
  else
  {
    int v12 = 1;
  }
  uint64_t v4 = (v4 + v12 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_17:
    if ((v3 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_29:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    unsigned int v3 = a1[16];
  }
  else
  {
    int v14 = 1;
  }
  uint64_t v4 = (v4 + v14 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_18:
    if ((v3 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_37;
  }
LABEL_33:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    unsigned int v3 = a1[16];
  }
  else
  {
    int v16 = 1;
  }
  uint64_t v4 = (v4 + v16 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_19:
    if ((v3 & 0x80) == 0) {
      goto LABEL_45;
    }
    goto LABEL_41;
  }
LABEL_37:
  unsigned int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    unsigned int v3 = a1[16];
  }
  else
  {
    int v18 = 2;
  }
  uint64_t v4 = (v18 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_41:
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
    if (v19 >= 0x80)
    {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
      unsigned int v3 = a1[16];
    }
    else
    {
      int v20 = 2;
    }
    uint64_t v4 = (v20 + v4);
  }
LABEL_45:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_74;
  }
  if ((v3 & 0x100) != 0)
  {
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
      unsigned int v3 = a1[16];
    }
    else
    {
      int v22 = 2;
    }
    uint64_t v4 = (v22 + v4);
    if ((v3 & 0x200) == 0)
    {
LABEL_48:
      if ((v3 & 0x400) == 0) {
        goto LABEL_49;
      }
      goto LABEL_60;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_48;
  }
  int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[11];
  if (v23 >= 0x80)
  {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2) + 1;
    unsigned int v3 = a1[16];
  }
  else
  {
    int v24 = 2;
  }
  uint64_t v4 = (v24 + v4);
  if ((v3 & 0x400) == 0)
  {
LABEL_49:
    if ((v3 & 0x800) == 0) {
      goto LABEL_50;
    }
    goto LABEL_64;
  }
LABEL_60:
  uint64_t v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[12];
  if (v25 >= 0x80)
  {
    int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2) + 1;
    unsigned int v3 = a1[16];
  }
  else
  {
    int v26 = 2;
  }
  uint64_t v4 = (v26 + v4);
  if ((v3 & 0x800) == 0)
  {
LABEL_50:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_68;
  }
LABEL_64:
  int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[13];
  if (v27 >= 0x80)
  {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2) + 1;
    unsigned int v3 = a1[16];
  }
  else
  {
    int v28 = 2;
  }
  uint64_t v4 = (v28 + v4);
  if ((v3 & 0x1000) != 0)
  {
LABEL_68:
    int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[14];
    if ((v29 & 0x80000000) != 0)
    {
      int v30 = 11;
    }
    else if (v29 >= 0x80)
    {
      int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2) + 1;
    }
    else
    {
      int v30 = 2;
    }
    uint64_t v4 = (v30 + v4);
  }
LABEL_74:
  a1[15] = v4;
  return v4;
}

void sub_100085110(_DWORD *a1, _DWORD *lpsrc)
{
  sub_100084250(a1, lpsrc);
}

uint64_t sub_1000851B4()
{
  return 1;
}

void *sub_1000851BC@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GpsAcqElement");
}

void proto::gnss::Emergency::GpsAcqAssistance::MergeFrom(proto::gnss::Emergency::GpsAcqAssistance *this, const proto::gnss::Emergency::GpsAcqAssistance *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((proto::gnss::Emergency::GpsAcqAssistance *)((char *)this + 24), *((_DWORD *)a2 + 8) + *((_DWORD *)this + 8));
  if (*((int *)a2 + 8) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD **)(*((void *)a2 + 3) + 8 * v4);
      int v6 = *((_DWORD *)this + 9);
      uint64_t v7 = *((int *)this + 8);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 10))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((proto::gnss::Emergency::GpsAcqAssistance *)((char *)this + 24), v6 + 1);
          int v6 = *((_DWORD *)this + 9);
        }
        *((_DWORD *)this + 9) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 3);
      *((_DWORD *)this + 8) = v7 + 1;
      sub_100084250(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 8));
  }
  LOBYTE(v9) = *((unsigned char *)a2 + 68);
  if (!(_BYTE)v9) {
    return;
  }
  if (*((unsigned char *)a2 + 68))
  {
    int v11 = *((_DWORD *)a2 + 2);
    *((_DWORD *)this + 17) |= 1u;
    *((_DWORD *)this + 2) = v11;
    int v9 = *((_DWORD *)a2 + 17);
    if ((v9 & 2) == 0)
    {
LABEL_14:
      if ((v9 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_23;
    }
  }
  else if ((*((unsigned char *)a2 + 68) & 2) == 0)
  {
    goto LABEL_14;
  }
  int v12 = *((_DWORD *)a2 + 3);
  *((_DWORD *)this + 17) |= 2u;
  *((_DWORD *)this + 3) = v12;
  int v9 = *((_DWORD *)a2 + 17);
  if ((v9 & 4) == 0)
  {
LABEL_15:
    if ((v9 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_28;
  }
LABEL_23:
  *((_DWORD *)this + 17) |= 4u;
  uint64_t v13 = *((void *)this + 2);
  if (!v13) {
    operator new();
  }
  uint64_t v14 = *((void *)a2 + 2);
  if (!v14) {
    uint64_t v14 = *(void *)(proto::gnss::Emergency::GpsAcqAssistance::default_instance_ + 16);
  }
  sub_10007CB58(v13, v14);
  int v9 = *((_DWORD *)a2 + 17);
  if ((v9 & 0x10) == 0)
  {
LABEL_16:
    if ((v9 & 0x20) == 0) {
      goto LABEL_17;
    }
LABEL_29:
    unsigned int v16 = *((_DWORD *)a2 + 13);
    if (v16 >= 6) {
      __assert_rtn("set_session_protocol", "GnssEmergencyTypes.pb.h", 25317, "::proto::gnss::Emergency::SessionProtocol_IsValid(value)");
    }
    *((_DWORD *)this + 17) |= 0x20u;
    *((_DWORD *)this + 13) = v16;
    int v9 = *((_DWORD *)a2 + 17);
    if ((v9 & 0x40) == 0)
    {
LABEL_18:
      if ((v9 & 0x80) == 0) {
        return;
      }
      goto LABEL_19;
    }
    goto LABEL_31;
  }
LABEL_28:
  int v15 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 17) |= 0x10u;
  *((_DWORD *)this + 12) = v15;
  int v9 = *((_DWORD *)a2 + 17);
  if ((v9 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_17:
  if ((v9 & 0x40) == 0) {
    goto LABEL_18;
  }
LABEL_31:
  unsigned int v17 = *((_DWORD *)a2 + 14);
  if (v17 >= 7) {
    __assert_rtn("set_pos_protocol", "GnssEmergencyTypes.pb.h", 25340, "::proto::gnss::Emergency::PosProtocol_IsValid(value)");
  }
  *((_DWORD *)this + 17) |= 0x40u;
  *((_DWORD *)this + 14) = v17;
  if ((*((_DWORD *)a2 + 17) & 0x80) != 0)
  {
LABEL_19:
    int v10 = *((_DWORD *)a2 + 15);
    *((_DWORD *)this + 17) |= 0x80u;
    *((_DWORD *)this + 15) = v10;
  }
}

void sub_1000854C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000854DC(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010A988;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::GpsAcqAssistance::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  int v3 = *((_DWORD *)this + 9);
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i < v3; ++i)
    {
      uint64_t v5 = *(void *)(*((void *)this + 3) + 8 * i);
      if (v5)
      {
        (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
        int v3 = *((_DWORD *)this + 9);
      }
    }
  }
  if (*((void *)this + 3)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000855D8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000854DC(a1);

  operator delete();
}

void sub_100085610()
{
}

uint64_t proto::gnss::Emergency::GpsAcqAssistance::Clear(proto::gnss::Emergency::GpsAcqAssistance *this)
{
  char v2 = *((unsigned char *)this + 68);
  if (v2)
  {
    *((void *)this + 1) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *((void *)this + 2);
      if (v3) {
        proto::gnss::Emergency::CellTimeAssistance::Clear(v3);
      }
    }
    *((void *)this + 6) = 0;
    *((void *)this + 7) = 0;
  }
  uint64_t result = sub_10003AD6C((uint64_t)this + 24);
  *((_DWORD *)this + 17) = 0;
  return result;
}

uint64_t proto::gnss::Emergency::GpsAcqAssistance::MergePartialFromCodedStream(proto::gnss::Emergency::GpsAcqAssistance *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 8);
  int v6 = (unsigned int *)((char *)this + 12);
  uint64_t v7 = (proto::gnss::Emergency::GpsAcqAssistance *)((char *)this + 24);
  uint64_t v8 = (unsigned int *)((char *)this + 48);
  int v9 = (unsigned int *)((char *)this + 60);
LABEL_2:
  while (2)
  {
    int v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        uint64_t v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v15 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v5 = *v14;
          int v15 = v14 + 1;
          *((void *)a2 + 1) = v15;
        }
        *((_DWORD *)this + 17) |= 1u;
        if ((unint64_t)v15 < v13 && *v15 == 16)
        {
          unsigned int v16 = v15 + 1;
          *((void *)a2 + 1) = v16;
          goto LABEL_35;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v16 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
LABEL_35:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v26 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v16;
          int v26 = v16 + 1;
          *((void *)a2 + 1) = v26;
        }
        int v17 = *((_DWORD *)this + 17) | 2;
        *((_DWORD *)this + 17) = v17;
        if ((unint64_t)v26 >= v13 || *v26 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_43:
        *((_DWORD *)this + 17) = v17 | 4;
        uint64_t v27 = *((void *)this + 2);
        if (!v27) {
          operator new();
        }
        unsigned int v55 = 0;
        int v28 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v55))return 0; {
        }
          }
        else
        {
          unsigned int v55 = *v28;
          *((void *)a2 + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)a2 + 14);
        int v30 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v29 + 1;
        if (v29 < v30)
        {
          int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v55);
          if (sub_10007CDF0(v27, a2, v32))
          {
            if (*((unsigned char *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v31);
              int v33 = *((_DWORD *)a2 + 14);
              BOOL v34 = __OFSUB__(v33, 1);
              int v35 = v33 - 1;
              if (v35 < 0 == v34) {
                *((_DWORD *)a2 + 14) = v35;
              }
              unsigned int v36 = (unsigned char *)*((void *)a2 + 1);
              if ((unint64_t)v36 < *((void *)a2 + 2) && *v36 == 34)
              {
                do
                {
                  *((void *)a2 + 1) = v36 + 1;
LABEL_57:
                  int v37 = *((_DWORD *)this + 9);
                  uint64_t v38 = *((int *)this + 8);
                  if ((int)v38 >= v37)
                  {
                    if (v37 == *((_DWORD *)this + 10))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v37 + 1);
                      int v37 = *((_DWORD *)this + 9);
                    }
                    *((_DWORD *)this + 9) = v37 + 1;
                    operator new();
                  }
                  uint64_t v39 = *((void *)this + 3);
                  *((_DWORD *)this + 8) = v38 + 1;
                  unsigned int v40 = *(unsigned int **)(v39 + 8 * v38);
                  unsigned int v55 = 0;
                  unsigned int v41 = (char *)*((void *)a2 + 1);
                  if ((unint64_t)v41 >= *((void *)a2 + 2) || *v41 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v55))return 0; {
                  }
                    }
                  else
                  {
                    unsigned int v55 = *v41;
                    *((void *)a2 + 1) = v41 + 1;
                  }
                  int v42 = *((_DWORD *)a2 + 14);
                  int v43 = *((_DWORD *)a2 + 15);
                  *((_DWORD *)a2 + 14) = v42 + 1;
                  if (v42 >= v43) {
                    return 0;
                  }
                  int v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v55);
                  if (!sub_1000845B0(v40, a2, v45) || !*((unsigned char *)a2 + 36)) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v44);
                  int v46 = *((_DWORD *)a2 + 14);
                  BOOL v34 = __OFSUB__(v46, 1);
                  int v47 = v46 - 1;
                  if (v47 < 0 == v34) {
                    *((_DWORD *)a2 + 14) = v47;
                  }
                  unsigned int v36 = (unsigned char *)*((void *)a2 + 1);
                  unint64_t v18 = *((void *)a2 + 2);
                  if ((unint64_t)v36 >= v18) {
                    goto LABEL_2;
                  }
                  int v48 = *v36;
                }
                while (v48 == 34);
                if (v48 == 40)
                {
                  int v19 = v36 + 1;
                  *((void *)a2 + 1) = v19;
LABEL_75:
                  if ((unint64_t)v19 >= v18 || *v19 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
                    if (!result) {
                      return result;
                    }
                    v49 = (unsigned char *)*((void *)a2 + 1);
                    unint64_t v18 = *((void *)a2 + 2);
                  }
                  else
                  {
                    *uint64_t v8 = *v19;
                    v49 = v19 + 1;
                    *((void *)a2 + 1) = v49;
                  }
                  *((_DWORD *)this + 17) |= 0x10u;
                  if ((unint64_t)v49 < v18 && *v49 == 48)
                  {
                    int v20 = v49 + 1;
                    *((void *)a2 + 1) = v20;
LABEL_83:
                    unsigned int v55 = 0;
                    if ((unint64_t)v20 >= v18 || *v20 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v55);
                      if (!result) {
                        return result;
                      }
                      unsigned int v50 = v55;
                    }
                    else
                    {
                      unsigned int v50 = *v20;
                      *((void *)a2 + 1) = v20 + 1;
                    }
                    if (v50 <= 5)
                    {
                      *((_DWORD *)this + 17) |= 0x20u;
                      *((_DWORD *)this + 13) = v50;
                    }
                    v51 = (unsigned char *)*((void *)a2 + 1);
                    unint64_t v21 = *((void *)a2 + 2);
                    if ((unint64_t)v51 < v21 && *v51 == 56)
                    {
                      int v22 = v51 + 1;
                      *((void *)a2 + 1) = v22;
LABEL_93:
                      unsigned int v55 = 0;
                      if ((unint64_t)v22 >= v21 || *v22 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v55);
                        if (!result) {
                          return result;
                        }
                        unsigned int v52 = v55;
                      }
                      else
                      {
                        unsigned int v52 = *v22;
                        *((void *)a2 + 1) = v22 + 1;
                      }
                      if (v52 <= 6)
                      {
                        *((_DWORD *)this + 17) |= 0x40u;
                        *((_DWORD *)this + 14) = v52;
                      }
                      v53 = (unsigned char *)*((void *)a2 + 1);
                      unint64_t v23 = *((void *)a2 + 2);
                      if ((unint64_t)v53 < v23 && *v53 == 64)
                      {
                        int v24 = v53 + 1;
                        *((void *)a2 + 1) = v24;
LABEL_103:
                        if ((unint64_t)v24 >= v23 || *v24 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
                          if (!result) {
                            return result;
                          }
                          int v54 = (unsigned __int8 *)*((void *)a2 + 1);
                          unint64_t v23 = *((void *)a2 + 2);
                        }
                        else
                        {
                          unsigned int *v9 = *v24;
                          int v54 = (unsigned __int8 *)(v24 + 1);
                          *((void *)a2 + 1) = v54;
                        }
                        *((_DWORD *)this + 17) |= 0x80u;
                        if (v54 == (unsigned __int8 *)v23
                          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                        {
                          *((_DWORD *)a2 + 8) = 0;
                          uint64_t result = 1;
                          *((unsigned char *)a2 + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_26;
        }
        int v17 = *((_DWORD *)this + 17);
        goto LABEL_43;
      case 4u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_57;
        }
        goto LABEL_26;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_75;
      case 6u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_83;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v22 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_93;
      case 8u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v24 = (char *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        goto LABEL_103;
      default:
        int v12 = TagFallback & 7;
LABEL_26:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100085D38(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 68);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_10;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 4) == 0) {
    goto LABEL_10;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::GpsAcqAssistance::default_instance_ + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
LABEL_10:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 24) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 32));
  }
  int v9 = *(_DWORD *)(v5 + 68);
  if ((v9 & 0x10) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 48), a2, a4);
    int v9 = *(_DWORD *)(v5 + 68);
    if ((v9 & 0x20) == 0)
    {
LABEL_15:
      if ((v9 & 0x40) == 0) {
        goto LABEL_16;
      }
LABEL_20:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 56), (int)a2, a4);
      if ((*(_DWORD *)(v5 + 68) & 0x80) == 0) {
        return result;
      }
      goto LABEL_21;
    }
  }
  else if ((v9 & 0x20) == 0)
  {
    goto LABEL_15;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 52), (int)a2, a4);
  int v9 = *(_DWORD *)(v5 + 68);
  if ((v9 & 0x40) != 0) {
    goto LABEL_20;
  }
LABEL_16:
  if ((v9 & 0x80) == 0) {
    return result;
  }
LABEL_21:
  int v10 = *(_DWORD *)(v5 + 60);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v10, a2, a4);
}

uint64_t proto::gnss::Emergency::GpsAcqAssistance::ByteSize(proto::gnss::Emergency::GpsAcqAssistance *this, unsigned int a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 68);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_46;
  }
  if ((*((unsigned char *)this + 68) & 1) == 0)
  {
    int v4 = 0;
    if ((*((unsigned char *)this + 68) & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *((_DWORD *)this + 17);
  }
  else
  {
    int v6 = 1;
  }
  int v4 = v6 + 1;
  if ((v3 & 2) != 0)
  {
LABEL_10:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      int v3 = *((_DWORD *)this + 17);
    }
    else
    {
      int v8 = 2;
    }
    v4 += v8;
  }
LABEL_14:
  if ((v3 & 4) != 0)
  {
    uint64_t v9 = *((void *)this + 2);
    if (!v9) {
      uint64_t v9 = *(void *)(proto::gnss::Emergency::GpsAcqAssistance::default_instance_ + 16);
    }
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007D0C8(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    v4 += v11 + v12 + 1;
    int v3 = *((_DWORD *)this + 17);
    if ((v3 & 0x10) == 0)
    {
LABEL_16:
      if ((v3 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_30;
    }
  }
  else if ((v3 & 0x10) == 0)
  {
    goto LABEL_16;
  }
  unint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *((_DWORD *)this + 17);
  }
  else
  {
    int v14 = 2;
  }
  v4 += v14;
  if ((v3 & 0x20) == 0)
  {
LABEL_17:
    if ((v3 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_36;
  }
LABEL_30:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if ((v15 & 0x80000000) != 0)
  {
    int v16 = 11;
  }
  else if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    int v3 = *((_DWORD *)this + 17);
  }
  else
  {
    int v16 = 2;
  }
  v4 += v16;
  if ((v3 & 0x40) == 0)
  {
LABEL_18:
    if ((v3 & 0x80) == 0) {
      goto LABEL_46;
    }
    goto LABEL_42;
  }
LABEL_36:
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if ((v17 & 0x80000000) != 0)
  {
    int v18 = 11;
  }
  else if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    int v3 = *((_DWORD *)this + 17);
  }
  else
  {
    int v18 = 2;
  }
  v4 += v18;
  if ((v3 & 0x80) != 0)
  {
LABEL_42:
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    if (v19 >= 0x80) {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    }
    else {
      int v20 = 2;
    }
    v4 += v20;
  }
LABEL_46:
  int v21 = *((_DWORD *)this + 8);
  uint64_t v22 = (v21 + v4);
  if (v21 >= 1)
  {
    uint64_t v23 = 0;
    do
    {
      int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100084E88(*(unsigned int **)(*((void *)this + 3)+ 8 * v23), a2);
      int v25 = (int)v24;
      if (v24 >= 0x80) {
        int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2);
      }
      else {
        int v26 = 1;
      }
      uint64_t v22 = (v25 + v22 + v26);
      ++v23;
    }
    while (v23 < *((int *)this + 8));
  }
  *((_DWORD *)this + 16) = v22;
  return v22;
}

void sub_100086080(proto::gnss::Emergency::GpsAcqAssistance *a1, void *lpsrc)
{
  proto::gnss::Emergency::GpsAcqAssistance::MergeFrom(a1, (const proto::gnss::Emergency::GpsAcqAssistance *)lpsrc);
}

uint64_t sub_100086124()
{
  return 1;
}

void *sub_10008612C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GpsAcqAssistance");
}

void proto::gnss::Emergency::CellFTAssistanceRequest::MergeFrom(proto::gnss::Emergency::CellFTAssistanceRequest *this, const proto::gnss::Emergency::CellFTAssistanceRequest *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*((unsigned char *)a2 + 16))
  {
    unsigned int v4 = *((_DWORD *)a2 + 2);
    if (v4 >= 6) {
      __assert_rtn("set_network_type", "GnssEmergencyTypes.pb.h", 25389, "::proto::gnss::Emergency::ClsNetworkType_IsValid(value)");
    }
    *((_DWORD *)this + 4) |= 1u;
    *((_DWORD *)this + 2) = v4;
  }
}

void sub_1000861F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100086208(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010AA00;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100086228(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010AA00;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10008627C()
{
}

uint64_t proto::gnss::Emergency::CellFTAssistanceRequest::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 16)) {
    *(_DWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t proto::gnss::Emergency::CellFTAssistanceRequest::MergePartialFromCodedStream(proto::gnss::Emergency::CellFTAssistanceRequest *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      unsigned int v10 = 0;
      uint64_t v7 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v10);
        if (!result) {
          return result;
        }
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v8 = *v7;
        *((void *)a2 + 1) = v7 + 1;
      }
      if (v8 <= 5)
      {
        *((_DWORD *)this + 4) |= 1u;
        *((_DWORD *)this + 2) = v8;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_1000863FC(uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t proto::gnss::Emergency::CellFTAssistanceRequest::ByteSize(proto::gnss::Emergency::CellFTAssistanceRequest *this, unsigned int a2)
{
  if (*((unsigned char *)this + 16))
  {
    unsigned int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t result = 11;
    }
    else if (v4 >= 0x80)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2)
             + 1;
    }
    else
    {
      uint64_t result = 2;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 3) = result;
  return result;
}

void sub_100086474(proto::gnss::Emergency::CellFTAssistanceRequest *a1, void *lpsrc)
{
  proto::gnss::Emergency::CellFTAssistanceRequest::MergeFrom(a1, (const proto::gnss::Emergency::CellFTAssistanceRequest *)lpsrc);
}

uint64_t sub_100086518()
{
  return 1;
}

void *sub_100086520@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.CellFTAssistanceRequest");
}

void proto::gnss::Emergency::CellFTAssistance::MergeFrom(proto::gnss::Emergency::CellFTAssistance *this, const proto::gnss::Emergency::CellFTAssistance *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 28))
    {
      unsigned int v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 0xA) {
        __assert_rtn("set_result", "GnssEmergencyTypes.pb.h", 25416, "::proto::gnss::Result_IsValid(value)");
      }
      *((_DWORD *)this + 7) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *((_DWORD *)a2 + 3);
      if (v6 >= 6) {
        __assert_rtn("set_network_type", "GnssEmergencyTypes.pb.h", 25439, "::proto::gnss::Emergency::ClsNetworkType_IsValid(value)");
      }
      *((_DWORD *)this + 7) |= 2u;
      *((_DWORD *)this + 3) = v6;
      int v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 4) != 0)
    {
      *((_DWORD *)this + 7) |= 4u;
      uint64_t v7 = (proto::gnss::Emergency::CellTimeData *)*((void *)this + 2);
      if (!v7) {
        operator new();
      }
      unsigned int v8 = (const proto::gnss::Emergency::CellTimeData *)*((void *)a2 + 2);
      if (!v8) {
        unsigned int v8 = *(const proto::gnss::Emergency::CellTimeData **)(proto::gnss::Emergency::CellFTAssistance::default_instance_
      }
                                                            + 16);
      proto::gnss::Emergency::CellTimeData::MergeFrom(v7, v8);
    }
  }
}

void sub_10008669C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000866B4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010AA78;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::CellFTAssistance::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100086744(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000866B4(a1);

  operator delete();
}

void sub_10008677C()
{
}

uint64_t proto::gnss::Emergency::CellFTAssistance::Clear(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 28);
  if (v2)
  {
    *(void *)(this + 8) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(void *)(this + 16);
      if (this) {
        this = proto::gnss::Emergency::CellTimeData::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

uint64_t proto::gnss::Emergency::CellFTAssistance::MergePartialFromCodedStream(proto::gnss::Emergency::CellFTAssistance *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unsigned int v5 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((void *)a2 + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_18;
          }
          unsigned int v27 = 0;
          uint64_t v9 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27);
            if (!result) {
              return result;
            }
            unsigned int v10 = v27;
          }
          else
          {
            unsigned int v10 = *v9;
            *((void *)a2 + 1) = v9 + 1;
          }
          if (v10 <= 9)
          {
            *((_DWORD *)this + 7) |= 1u;
            *((_DWORD *)this + 2) = v10;
          }
          int v14 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          if ((unint64_t)v14 < v11 && *v14 == 16)
          {
            int v12 = v14 + 1;
            *((void *)a2 + 1) = v12;
            goto LABEL_28;
          }
        }
        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
LABEL_28:
        unsigned int v26 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
          if (!result) {
            return result;
          }
          unsigned int v15 = v26;
        }
        else
        {
          unsigned int v15 = *v12;
          *((void *)a2 + 1) = v12 + 1;
        }
        if (v15 <= 5)
        {
          *((_DWORD *)this + 7) |= 2u;
          *((_DWORD *)this + 3) = v15;
        }
        int v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 < *((void *)a2 + 2) && *v16 == 26)
        {
          *((void *)a2 + 1) = v16 + 1;
          goto LABEL_38;
        }
      }
      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_18;
      }
      int v8 = TagFallback & 7;
      if (v8 == 2) {
        break;
      }
LABEL_18:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_38:
    *((_DWORD *)this + 7) |= 4u;
    uint64_t v17 = *((void *)this + 2);
    if (!v17) {
      operator new();
    }
    unsigned int v28 = 0;
    int v18 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28)) {
        return 0;
      }
    }
    else
    {
      unsigned int v28 = *v18;
      *((void *)a2 + 1) = v18 + 1;
    }
    int v19 = *((_DWORD *)a2 + 14);
    int v20 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v19 + 1;
    if (v19 >= v20) {
      return 0;
    }
    int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v28);
    if (!sub_10007C644(v17, a2, v22) || !*((unsigned char *)a2 + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v21);
    int v23 = *((_DWORD *)a2 + 14);
    BOOL v24 = __OFSUB__(v23, 1);
    int v25 = v23 - 1;
    if (v25 < 0 == v24) {
      *((_DWORD *)a2 + 14) = v25;
    }
    if (*((void *)a2 + 1) == *((void *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_100086AE8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::CellFTAssistance::default_instance_ + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t proto::gnss::Emergency::CellFTAssistance::ByteSize(proto::gnss::Emergency::CellFTAssistance *this, unsigned int a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 28);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_26;
  }
  if (*((unsigned char *)this + 28))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *((_DWORD *)this + 7);
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*((unsigned char *)this + 28) & 2) == 0) {
      goto LABEL_19;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *((_DWORD *)this + 7);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_19:
  if ((v3 & 4) != 0)
  {
    int v8 = (proto::gnss::Emergency::CellTimeData *)*((void *)this + 2);
    if (!v8) {
      int v8 = *(proto::gnss::Emergency::CellTimeData **)(proto::gnss::Emergency::CellFTAssistance::default_instance_ + 16);
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::CellTimeData::ByteSize(v8, a2);
    int v11 = (int)v9;
    if (v9 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
  }
LABEL_26:
  *((_DWORD *)this + 6) = v4;
  return v4;
}

void sub_100086C80(proto::gnss::Emergency::CellFTAssistance *a1, void *lpsrc)
{
  proto::gnss::Emergency::CellFTAssistance::MergeFrom(a1, (const proto::gnss::Emergency::CellFTAssistance *)lpsrc);
}

uint64_t sub_100086D24()
{
  return 1;
}

void *sub_100086D2C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.CellFTAssistance");
}

void sub_100086D3C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010AAF0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100086D5C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010AAF0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100086DB0()
{
}

uint64_t sub_100086E0C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 48);
  int v6 = (unsigned int *)(a1 + 52);
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_40;
        }
        unint64_t v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v21) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v21;
        *(_DWORD *)(a1 + 60) |= 1u;
        unsigned int v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_40;
        }
LABEL_15:
        unint64_t v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v21) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v21;
        *(_DWORD *)(a1 + 60) |= 2u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 25) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        unint64_t v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v21) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v21;
        *(_DWORD *)(a1 + 60) |= 4u;
        int v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 33) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_25:
        unint64_t v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v21) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v21;
        *(_DWORD *)(a1 + 60) |= 8u;
        unint64_t v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 41) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_30:
        unint64_t v21 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v21))
        {
          *(void *)(a1 + 40) = v21;
          *(_DWORD *)(a1 + 60) |= 0x10u;
          unsigned int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          if ((unint64_t)v15 < v14 && *v15 == 48)
          {
            int v16 = v15 + 1;
            *((void *)this + 1) = v16;
LABEL_36:
            if ((unint64_t)v16 >= v14 || *v16 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
              if (!result) {
                return result;
              }
              uint64_t v17 = (unsigned char *)*((void *)this + 1);
              unint64_t v14 = *((void *)this + 2);
            }
            else
            {
              unsigned int *v5 = *v16;
              uint64_t v17 = v16 + 1;
              *((void *)this + 1) = v17;
            }
            *(_DWORD *)(a1 + 60) |= 0x20u;
            if ((unint64_t)v17 < v14 && *v17 == 56)
            {
              int v18 = v17 + 1;
              *((void *)this + 1) = v18;
LABEL_49:
              if ((unint64_t)v18 >= v14 || *v18 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
                if (!result) {
                  return result;
                }
                int v20 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v14 = *((void *)this + 2);
              }
              else
              {
                *int v6 = *v18;
                int v20 = (unsigned __int8 *)(v18 + 1);
                *((void *)this + 1) = v20;
              }
              *(_DWORD *)(a1 + 60) |= 0x40u;
              if (v20 == (unsigned __int8 *)v14
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_40;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_25;
        }
        goto LABEL_40;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_30;
        }
        goto LABEL_40;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_36;
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_49;
      default:
        int v9 = TagFallback & 7;
LABEL_40:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000871A8(uint64_t result, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 60);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 48), a2, a4);
    if ((*(_DWORD *)(v5 + 60) & 0x40) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return result;
  }
LABEL_15:
  int v7 = *(_DWORD *)(v5 + 52);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v7, a2, a4);
}

uint64_t sub_1000872A4(uint64_t a1, unsigned int a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 60);
  if (*(unsigned char *)(a1 + 60))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 0x20) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
      if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 60);
      }
      else
      {
        int v7 = 2;
      }
      uint64_t v5 = (v7 + v5);
    }
    if ((v3 & 0x40) != 0)
    {
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
      if (v8 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      }
      else {
        int v9 = 2;
      }
      uint64_t v5 = (v9 + v5);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(_DWORD *)(a1 + 56) = v5;
  return v5;
}

void sub_100087364(uint64_t a1, void *lpsrc)
{
  sub_10005A62C(a1, (uint64_t)lpsrc);
}

uint64_t sub_100087408()
{
  return 1;
}

void *sub_100087410@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.NetworkReferenceLocation");
}

void sub_100087420(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010AB68;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100087440(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010AB68;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100087494()
{
}

uint64_t sub_1000874E0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 12);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v7 = (char *)*((void *)this + 1);
          if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v7;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v7 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v9 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v10 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          int v12 = (char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
          if ((unint64_t)v12 >= v11 || *v12 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!result) {
              return result;
            }
            unint64_t v13 = (unsigned char *)*((void *)this + 1);
            unint64_t v11 = *((void *)this + 2);
          }
          else
          {
            unsigned int *v5 = *v12;
            unint64_t v13 = v12 + 1;
            *((void *)this + 1) = v13;
          }
          *(_DWORD *)(a1 + 28) |= 1u;
          if ((unint64_t)v13 < v11 && *v13 == 16)
          {
            unint64_t v14 = v13 + 1;
            *((void *)this + 1) = v14;
            goto LABEL_27;
          }
        }
        if (v9 != 2) {
          break;
        }
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_27:
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v14;
          int v16 = v14 + 1;
          *((void *)this + 1) = v16;
        }
        *(_DWORD *)(a1 + 28) |= 2u;
        if ((unint64_t)v16 < v11 && *v16 == 25)
        {
          *((void *)this + 1) = v16 + 1;
          goto LABEL_35;
        }
      }
      if (v9 != 3) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 1) {
        goto LABEL_19;
      }
LABEL_35:
      unint64_t v17 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0) {
        return 0;
      }
      *(void *)(a1 + 16) = v17;
      *(_DWORD *)(a1 + 28) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v10 = TagFallback & 7;
LABEL_19:
    if (v10 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_1000876E8(uint64_t result, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  double v7 = *(double *)(v5 + 16);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, v7, a3);
}

uint64_t sub_100087774(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0;
    goto LABEL_17;
  }
  if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    unsigned int v4 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_14;
    }
LABEL_10:
    double v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 28);
    }
    else
    {
      int v8 = 2;
    }
    v4 += v8;
    goto LABEL_14;
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v6 >= 0x80)
  {
    unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 28);
    if ((v3 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  unsigned int v4 = 2;
  if ((v3 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_14:
  if ((v3 & 4) != 0) {
    uint64_t result = v4 + 9;
  }
  else {
    uint64_t result = v4;
  }
LABEL_17:
  *(_DWORD *)(a1 + 24) = result;
  return result;
}

void sub_100087810(uint64_t a1, void *lpsrc)
{
  sub_10005A798(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000878B4()
{
  return 1;
}

void *sub_1000878BC@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.NetworkReferenceTime");
}

void sub_1000878CC(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 24);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v7;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return;
    }
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v5;
  }
}

void sub_1000879A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000879B8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010ABE0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000879D8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010ABE0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100087A2C()
{
}

uint64_t sub_100087A7C(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_100087A94(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  int v7 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v14;
          unsigned int v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        a1[6] |= 1u;
        if ((unint64_t)v15 < v12 && *v15 == 16)
        {
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_27;
        }
      }
      if (v10 != 2) {
        break;
      }
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      int v16 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_27:
      if ((unint64_t)v16 >= v12 || *v16 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!result) {
          return result;
        }
        unint64_t v17 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        *int v6 = *v16;
        unint64_t v17 = v16 + 1;
        *((void *)this + 1) = v17;
      }
      a1[6] |= 2u;
      if ((unint64_t)v17 < v12 && *v17 == 24)
      {
        unint64_t v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_35:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v18 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v13;
          int v18 = (unsigned __int8 *)(v13 + 1);
          *((void *)this + 1) = v18;
        }
        a1[6] |= 4u;
        if (v18 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      int v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

int *sub_100087CB8(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[6];
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
    if ((v5[6] & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
  int v6 = v5[6];
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = v5[4];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_100087D44(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 24))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_100087DFC(_DWORD *a1, void *lpsrc)
{
  sub_1000878CC(a1, (uint64_t)lpsrc);
}

uint64_t sub_100087EA0()
{
  return 1;
}

void *sub_100087EA8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.Is801VelocityInfo");
}

void sub_100087EB8(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_100087F64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100087F7C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010AC58;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100087F9C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010AC58;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100087FF0()
{
}

uint64_t sub_10008803C(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_100088050(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unint64_t v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        unint64_t v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        unsigned int *v5 = *v12;
        unint64_t v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          unint64_t v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000881F0(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_10008825C(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1000882EC(_DWORD *a1, void *lpsrc)
{
  sub_100087EB8(a1, (uint64_t)lpsrc);
}

uint64_t sub_100088390()
{
  return 1;
}

void *sub_100088398@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.Is801ClockInfo");
}

void sub_1000883A8(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_100088454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10008846C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010ACD0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10008848C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010ACD0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000884E0()
{
}

uint64_t sub_10008852C(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_100088540(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unint64_t v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        unint64_t v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        unsigned int *v5 = *v12;
        unint64_t v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          unint64_t v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000886E0(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_10008874C(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1000887DC(_DWORD *a1, void *lpsrc)
{
  sub_1000883A8(a1, (uint64_t)lpsrc);
}

uint64_t sub_100088880()
{
  return 1;
}

void *sub_100088888@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.Is801HeightInfo");
}

void sub_100088898(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  int v4 = *(_DWORD *)(a2 + 64);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      int v8 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 64) |= 1u;
      *(_DWORD *)(a1 + 8) = v8;
      int v4 = *(_DWORD *)(a2 + 64);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_26;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_6;
    }
    int v9 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 64) |= 2u;
    *(_DWORD *)(a1 + 12) = v9;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_27;
    }
LABEL_26:
    int v10 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 64) |= 4u;
    *(_DWORD *)(a1 + 16) = v10;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_28;
    }
LABEL_27:
    int v11 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 64) |= 8u;
    *(_DWORD *)(a1 + 20) = v11;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_29;
    }
LABEL_28:
    int v12 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 64) |= 0x10u;
    *(_DWORD *)(a1 + 24) = v12;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
LABEL_29:
    unsigned int v13 = *(_DWORD *)(a2 + 28);
    if (v13 >= 4) {
      __assert_rtn("set_fix_type", "GnssEmergencyTypes.pb.h", 26012, "::proto::gnss::Emergency::FixType_IsValid(value)");
    }
    *(_DWORD *)(a1 + 64) |= 0x20u;
    *(_DWORD *)(a1 + 28) = v13;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x40) == 0) {
      goto LABEL_12;
    }
LABEL_11:
    char v5 = *(unsigned char *)(a2 + 56);
    *(_DWORD *)(a1 + 64) |= 0x40u;
    *(unsigned char *)(a1 + 56) = v5;
    int v4 = *(_DWORD *)(a2 + 64);
LABEL_12:
    if ((v4 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 64) |= 0x80u;
      int v6 = *(_DWORD **)(a1 + 32);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 32);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1001144E0 + 32);
      }
      sub_1000878CC(v6, v7);
      int v4 = *(_DWORD *)(a2 + 64);
    }
  }
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    char v14 = *(unsigned char *)(a2 + 57);
    *(_DWORD *)(a1 + 64) |= 0x100u;
    *(unsigned char *)(a1 + 57) = v14;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x200) == 0)
    {
LABEL_21:
      if ((v4 & 0x400) == 0) {
        goto LABEL_22;
      }
LABEL_38:
      char v17 = *(unsigned char *)(a2 + 58);
      *(_DWORD *)(a1 + 64) |= 0x400u;
      *(unsigned char *)(a1 + 58) = v17;
      if ((*(_DWORD *)(a2 + 64) & 0x800) == 0) {
        return;
      }
      goto LABEL_39;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_21;
  }
  *(_DWORD *)(a1 + 64) |= 0x200u;
  unsigned int v15 = *(_DWORD **)(a1 + 40);
  if (!v15) {
    operator new();
  }
  uint64_t v16 = *(void *)(a2 + 40);
  if (!v16) {
    uint64_t v16 = *(void *)(qword_1001144E0 + 40);
  }
  sub_100087EB8(v15, v16);
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 0x400) != 0) {
    goto LABEL_38;
  }
LABEL_22:
  if ((v4 & 0x800) == 0) {
    return;
  }
LABEL_39:
  *(_DWORD *)(a1 + 64) |= 0x800u;
  int v18 = *(_DWORD **)(a1 + 48);
  if (!v18) {
    operator new();
  }
  uint64_t v19 = *(void *)(a2 + 48);
  if (!v19) {
    uint64_t v19 = *(void *)(qword_1001144E0 + 48);
  }
  sub_1000883A8(v18, v19);
}

void sub_100088BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100088BD4(void *result)
{
  if ((void *)qword_1001144E0 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[4];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[5];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[6];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_100088CA0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010AD48;
  sub_100088BD4(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100088CF4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010AD48;
  sub_100088BD4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100088D5C()
{
}

uint64_t proto::gnss::Emergency::Is801LocationInd::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 64);
  if ((_BYTE)v1)
  {
    *(unsigned char *)(this + 56) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
    *(void *)(this + 8) = 0;
    if ((v1 & 0x80) != 0)
    {
      uint64_t v2 = *(void *)(this + 32);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 24))
        {
          *(void *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
        int v1 = *(_DWORD *)(this + 64);
      }
    }
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(unsigned char *)(this + 57) = 0;
    if ((v1 & 0x200) != 0)
    {
      uint64_t v3 = *(void *)(this + 40);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 20)) {
          *(void *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 20) = 0;
        int v1 = *(_DWORD *)(this + 64);
      }
    }
    *(unsigned char *)(this + 58) = 0;
    if ((v1 & 0x800) != 0)
    {
      uint64_t v4 = *(void *)(this + 48);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 20)) {
          *(void *)(v4 + 8) = 0;
        }
        *(_DWORD *)(v4 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(this + 64) = 0;
  return this;
}

uint64_t sub_100088E4C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char v5 = (unsigned int *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 12);
  uint64_t v7 = (unsigned int *)(a1 + 16);
  int v8 = (unsigned int *)(a1 + 20);
  int v9 = (unsigned int *)(a1 + 24);
  while (2)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        char v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v14;
          unsigned int v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 64) |= 1u;
        if ((unint64_t)v15 < v13 && *v15 == 16)
        {
          uint64_t v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_43;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
LABEL_43:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v16;
          int v31 = v16 + 1;
          *((void *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 64) |= 2u;
        if ((unint64_t)v31 >= v13 || *v31 != 24) {
          continue;
        }
        char v17 = v31 + 1;
        *((void *)this + 1) = v17;
LABEL_51:
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v17;
          unsigned int v32 = v17 + 1;
          *((void *)this + 1) = v32;
        }
        *(_DWORD *)(a1 + 64) |= 4u;
        if ((unint64_t)v32 >= v13 || *v32 != 32) {
          continue;
        }
        int v18 = v32 + 1;
        *((void *)this + 1) = v18;
LABEL_59:
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v18;
          int v33 = v18 + 1;
          *((void *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 64) |= 8u;
        if ((unint64_t)v33 >= v13 || *v33 != 40) {
          continue;
        }
        uint64_t v19 = v33 + 1;
        *((void *)this + 1) = v19;
LABEL_67:
        if ((unint64_t)v19 >= v13 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          BOOL v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v9 = *v19;
          BOOL v34 = v19 + 1;
          *((void *)this + 1) = v34;
        }
        *(_DWORD *)(a1 + 64) |= 0x10u;
        if ((unint64_t)v34 >= v13 || *v34 != 48) {
          continue;
        }
        int v20 = v34 + 1;
        *((void *)this + 1) = v20;
LABEL_75:
        unsigned int v70 = 0;
        if ((unint64_t)v20 >= v13 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70);
          if (!result) {
            return result;
          }
          unsigned int v35 = v70;
        }
        else
        {
          unsigned int v35 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        if (v35 <= 3)
        {
          *(_DWORD *)(a1 + 64) |= 0x20u;
          *(_DWORD *)(a1 + 28) = v35;
        }
        unsigned int v36 = (unsigned char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        if ((unint64_t)v36 >= v21 || *v36 != 56) {
          continue;
        }
        unsigned int v22 = v36 + 1;
        *((void *)this + 1) = v22;
LABEL_85:
        unsigned int v70 = 0;
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70);
          if (!result) {
            return result;
          }
          unsigned int v37 = v70;
          uint64_t v38 = (unsigned char *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }
        else
        {
          unsigned int v37 = *v22;
          uint64_t v38 = v22 + 1;
          *((void *)this + 1) = v38;
        }
        *(unsigned char *)(a1 + 56) = v37 != 0;
        int v23 = *(_DWORD *)(a1 + 64) | 0x40;
        *(_DWORD *)(a1 + 64) = v23;
        if ((unint64_t)v38 >= v21 || *v38 != 66) {
          continue;
        }
        *((void *)this + 1) = v38 + 1;
LABEL_93:
        *(_DWORD *)(a1 + 64) = v23 | 0x80;
        uint64_t v39 = *(unsigned int **)(a1 + 32);
        if (!v39) {
          operator new();
        }
        unsigned int v70 = 0;
        unsigned int v40 = (char *)*((void *)this + 1);
        if ((unint64_t)v40 >= *((void *)this + 2) || *v40 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70))return 0; {
        }
          }
        else
        {
          unsigned int v70 = *v40;
          *((void *)this + 1) = v40 + 1;
        }
        int v41 = *((_DWORD *)this + 14);
        int v42 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v41 + 1;
        if (v41 >= v42) {
          return 0;
        }
        int v43 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v70);
        if (!sub_100087A94(v39, this, v44) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v43);
        int v45 = *((_DWORD *)this + 14);
        BOOL v46 = __OFSUB__(v45, 1);
        int v47 = v45 - 1;
        if (v47 < 0 == v46) {
          *((_DWORD *)this + 14) = v47;
        }
        int v48 = (unsigned char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        if ((unint64_t)v48 >= v24 || *v48 != 72) {
          continue;
        }
        int v25 = v48 + 1;
        *((void *)this + 1) = v25;
LABEL_107:
        unsigned int v70 = 0;
        if ((unint64_t)v25 >= v24 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70);
          if (!result) {
            return result;
          }
          unsigned int v49 = v70;
          unsigned int v50 = (unsigned char *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
        }
        else
        {
          unsigned int v49 = *v25;
          unsigned int v50 = v25 + 1;
          *((void *)this + 1) = v50;
        }
        *(unsigned char *)(a1 + 57) = v49 != 0;
        int v26 = *(_DWORD *)(a1 + 64) | 0x100;
        *(_DWORD *)(a1 + 64) = v26;
        if ((unint64_t)v50 >= v24 || *v50 != 82) {
          continue;
        }
        *((void *)this + 1) = v50 + 1;
LABEL_115:
        *(_DWORD *)(a1 + 64) = v26 | 0x200;
        v51 = *(unsigned int **)(a1 + 40);
        if (!v51) {
          operator new();
        }
        unsigned int v70 = 0;
        unsigned int v52 = (char *)*((void *)this + 1);
        if ((unint64_t)v52 >= *((void *)this + 2) || *v52 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70))return 0; {
        }
          }
        else
        {
          unsigned int v70 = *v52;
          *((void *)this + 1) = v52 + 1;
        }
        int v53 = *((_DWORD *)this + 14);
        int v54 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v53 + 1;
        if (v53 >= v54) {
          return 0;
        }
        int v55 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v70);
        if (!sub_100088050(v51, this, v56) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v55);
        int v57 = *((_DWORD *)this + 14);
        BOOL v46 = __OFSUB__(v57, 1);
        int v58 = v57 - 1;
        if (v58 < 0 == v46) {
          *((_DWORD *)this + 14) = v58;
        }
        v59 = (unsigned char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        if ((unint64_t)v59 >= v27 || *v59 != 88) {
          continue;
        }
        unsigned int v28 = v59 + 1;
        *((void *)this + 1) = v28;
LABEL_129:
        unsigned int v70 = 0;
        if ((unint64_t)v28 >= v27 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70);
          if (!result) {
            return result;
          }
          unsigned int v60 = v70;
          v61 = (unsigned char *)*((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
        }
        else
        {
          unsigned int v60 = *v28;
          v61 = v28 + 1;
          *((void *)this + 1) = v61;
        }
        *(unsigned char *)(a1 + 58) = v60 != 0;
        int v29 = *(_DWORD *)(a1 + 64) | 0x400;
        *(_DWORD *)(a1 + 64) = v29;
        if ((unint64_t)v61 >= v27 || *v61 != 98) {
          continue;
        }
        *((void *)this + 1) = v61 + 1;
LABEL_137:
        *(_DWORD *)(a1 + 64) = v29 | 0x800;
        int v62 = *(unsigned int **)(a1 + 48);
        if (!v62) {
          operator new();
        }
        unsigned int v70 = 0;
        v63 = (char *)*((void *)this + 1);
        if ((unint64_t)v63 >= *((void *)this + 2) || *v63 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70))return 0; {
        }
          }
        else
        {
          unsigned int v70 = *v63;
          *((void *)this + 1) = v63 + 1;
        }
        int v64 = *((_DWORD *)this + 14);
        int v65 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v64 + 1;
        if (v64 < v65)
        {
          int v66 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v70);
          if (sub_100088540(v62, this, v67))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v66);
              int v68 = *((_DWORD *)this + 14);
              BOOL v46 = __OFSUB__(v68, 1);
              int v69 = v68 - 1;
              if (v69 < 0 == v46) {
                *((_DWORD *)this + 14) = v69;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        char v17 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_51;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_59;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_67;
      case 6u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_75;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        unsigned int v22 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_85;
      case 8u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_35;
        }
        int v23 = *(_DWORD *)(a1 + 64);
        goto LABEL_93;
      case 9u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v25 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_107;
      case 0xAu:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_35;
        }
        int v26 = *(_DWORD *)(a1 + 64);
        goto LABEL_115;
      case 0xBu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        unsigned int v28 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_129;
      case 0xCu:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_35;
        }
        int v29 = *(_DWORD *)(a1 + 64);
        goto LABEL_137;
      default:
        int v12 = TagFallback & 7;
LABEL_35:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100089704(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 64);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 28), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 56), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_21:
  uint64_t v7 = *(void *)(v5 + 32);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1001144E0 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 57), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
LABEL_28:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 58), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 64) & 0x800) == 0) {
      return result;
    }
    goto LABEL_29;
  }
LABEL_25:
  uint64_t v8 = *(void *)(v5 + 40);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1001144E0 + 40);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x400) != 0) {
    goto LABEL_28;
  }
LABEL_12:
  if ((v6 & 0x800) == 0) {
    return result;
  }
LABEL_29:
  uint64_t v9 = *(void *)(v5 + 48);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_1001144E0 + 48);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v9, a2, a4);
}

uint64_t sub_1000898BC(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 64);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_47;
  }
  if ((v3 & 1) == 0)
  {
    LODWORD(v4) = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    int v6 = 1;
  }
  LODWORD(v4) = v6 + 1;
  if ((v3 & 2) != 0)
  {
LABEL_10:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      int v8 = 1;
    }
    LODWORD(v4) = v4 + v8 + 1;
  }
LABEL_14:
  if ((v3 & 4) != 0)
  {
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      int v3 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      int v10 = 1;
    }
    LODWORD(v4) = v4 + v10 + 1;
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_27;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    int v12 = 2;
  }
  LODWORD(v4) = v12 + v4;
  if ((v3 & 0x10) == 0)
  {
LABEL_17:
    if ((v3 & 0x20) == 0) {
      goto LABEL_37;
    }
    goto LABEL_31;
  }
LABEL_27:
  unint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    int v14 = 2;
  }
  LODWORD(v4) = v14 + v4;
  if ((v3 & 0x20) != 0)
  {
LABEL_31:
    unsigned int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if ((v15 & 0x80000000) != 0)
    {
      int v16 = 11;
    }
    else if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      int v16 = 2;
    }
    LODWORD(v4) = v16 + v4;
  }
LABEL_37:
  if ((v3 & 0x40) != 0) {
    uint64_t v4 = (v4 + 2);
  }
  else {
    uint64_t v4 = v4;
  }
  if ((v3 & 0x80) != 0)
  {
    uint64_t v17 = *(void *)(a1 + 32);
    if (!v17) {
      uint64_t v17 = *(void *)(qword_1001144E0 + 32);
    }
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100087D44(v17, a2);
    int v19 = (int)v18;
    if (v18 >= 0x80) {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
    }
    else {
      int v20 = 1;
    }
    uint64_t v4 = (v4 + v19 + v20 + 1);
    int v3 = *(_DWORD *)(a1 + 64);
  }
LABEL_47:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0) {
      unsigned int v21 = v4 + 2;
    }
    else {
      unsigned int v21 = v4;
    }
    if ((v3 & 0x200) != 0)
    {
      uint64_t v22 = *(void *)(a1 + 40);
      if (!v22) {
        uint64_t v22 = *(void *)(qword_1001144E0 + 40);
      }
      int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10008825C(v22, a2);
      int v24 = (int)v23;
      if (v23 >= 0x80) {
        int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2);
      }
      else {
        int v25 = 1;
      }
      v21 += v24 + v25 + 1;
      int v3 = *(_DWORD *)(a1 + 64);
    }
    if ((v3 & 0x400) != 0) {
      uint64_t v4 = v21 + 2;
    }
    else {
      uint64_t v4 = v21;
    }
    if ((v3 & 0x800) != 0)
    {
      uint64_t v26 = *(void *)(a1 + 48);
      if (!v26) {
        uint64_t v26 = *(void *)(qword_1001144E0 + 48);
      }
      unint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10008874C(v26, a2);
      int v29 = (int)v27;
      if (v27 >= 0x80) {
        int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, v28);
      }
      else {
        int v30 = 1;
      }
      uint64_t v4 = (v4 + v29 + v30 + 1);
    }
  }
  *(_DWORD *)(a1 + 60) = v4;
  return v4;
}

void sub_100089B14(uint64_t a1, void *lpsrc)
{
  sub_100088898(a1, (uint64_t)lpsrc);
}

uint64_t sub_100089BB8()
{
  return 1;
}

void *sub_100089BC0@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.Is801LocationInd");
}

void proto::gnss::Emergency::MeasurementReportWithEstimate::MergeFrom(proto::gnss::Emergency::MeasurementReportWithEstimate *this, const proto::gnss::Emergency::MeasurementReportWithEstimate *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 52);
  if (!(_BYTE)v4) {
    return;
  }
  if (*((unsigned char *)a2 + 52))
  {
    unsigned int v5 = *((_DWORD *)a2 + 2);
    if (v5 >= 9) {
      __assert_rtn("set_result", "GnssEmergencyTypes.pb.h", 26231, "::proto::gnss::Emergency::ErrorCodes_IsValid(value)");
    }
    *((_DWORD *)this + 13) |= 1u;
    *((_DWORD *)this + 2) = v5;
    int v4 = *((_DWORD *)a2 + 13);
  }
  if ((v4 & 2) != 0)
  {
    int v7 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 13) |= 2u;
    *((_DWORD *)this + 3) = v7;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  *((_DWORD *)this + 13) |= 4u;
  int v8 = (_DWORD *)*((void *)this + 2);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *((void *)a2 + 2);
  if (!v9) {
    uint64_t v9 = *(void *)(proto::gnss::Emergency::MeasurementReportWithEstimate::default_instance_ + 16);
  }
  sub_10005BD30(v8, v9);
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_26:
    *((_DWORD *)this + 13) |= 0x10u;
    uint64_t v12 = *((void *)this + 4);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = *((void *)a2 + 4);
    if (!v13) {
      uint64_t v13 = *(void *)(proto::gnss::Emergency::MeasurementReportWithEstimate::default_instance_ + 32);
    }
    sub_100088898(v12, v13);
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x20) == 0)
    {
LABEL_12:
      if ((v4 & 0x40) == 0) {
        return;
      }
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_21:
  *((_DWORD *)this + 13) |= 8u;
  uint64_t v10 = *((void *)this + 3);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = *((void *)a2 + 3);
  if (!v11) {
    uint64_t v11 = *(void *)(proto::gnss::Emergency::MeasurementReportWithEstimate::default_instance_ + 24);
  }
  sub_100071E84(v10, v11);
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x10) != 0) {
    goto LABEL_26;
  }
LABEL_11:
  if ((v4 & 0x20) == 0) {
    goto LABEL_12;
  }
LABEL_31:
  unsigned int v14 = *((_DWORD *)a2 + 10);
  if (v14 >= 4) {
    __assert_rtn("set_aflt_action", "GnssEmergencyTypes.pb.h", 26402, "::proto::gnss::Emergency::AfltAction_IsValid(value)");
  }
  *((_DWORD *)this + 13) |= 0x20u;
  *((_DWORD *)this + 10) = v14;
  if ((*((_DWORD *)a2 + 13) & 0x40) != 0)
  {
LABEL_13:
    char v6 = *((unsigned char *)a2 + 44);
    *((_DWORD *)this + 13) |= 0x40u;
    *((unsigned char *)this + 44) = v6;
  }
}

void sub_100089E94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100089EAC(void *result)
{
  if ((void *)proto::gnss::Emergency::MeasurementReportWithEstimate::default_instance_ != result)
  {
    int v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[4];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_100089F78(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010ADC0;
  sub_100089EAC(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100089FCC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010ADC0;
  sub_100089EAC(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10008A034()
{
}

uint64_t proto::gnss::Emergency::MeasurementReportWithEstimate::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 52);
  if ((_BYTE)v2)
  {
    *(void *)(this + 8) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 24))
        {
          *(void *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        int v2 = *(_DWORD *)(this + 52);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(void *)(this + 24);
      if (this)
      {
        this = proto::gnss::Emergency::GpsMeasurements::Clear((proto::gnss::Emergency::GpsMeasurements *)this);
        int v2 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this) {
        this = proto::gnss::Emergency::Is801LocationInd::Clear(this);
      }
    }
    *(_DWORD *)(v1 + 40) = 0;
    *(unsigned char *)(v1 + 44) = 0;
  }
  *(_DWORD *)(v1 + 52) = 0;
  return this;
}

uint64_t proto::gnss::Emergency::MeasurementReportWithEstimate::MergePartialFromCodedStream(proto::gnss::Emergency::MeasurementReportWithEstimate *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int v5 = (unsigned int *)((char *)this + 12);
  while (2)
  {
    char v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v53 = 0;
        uint64_t v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53);
          if (!result) {
            return result;
          }
          unsigned int v10 = v53;
        }
        else
        {
          unsigned int v10 = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        if (v10 <= 8)
        {
          *((_DWORD *)this + 13) |= 1u;
          *((_DWORD *)this + 2) = v10;
        }
        int v19 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v19 < v11 && *v19 == 16)
        {
          uint64_t v12 = v19 + 1;
          *((void *)a2 + 1) = v12;
          goto LABEL_35;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
LABEL_35:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v20 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v5 = *v12;
          int v20 = v12 + 1;
          *((void *)a2 + 1) = v20;
        }
        int v13 = *((_DWORD *)this + 13) | 2;
        *((_DWORD *)this + 13) = v13;
        if ((unint64_t)v20 >= v11 || *v20 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_43:
        *((_DWORD *)this + 13) = v13 | 4;
        unsigned int v21 = (_DWORD *)*((void *)this + 2);
        if (!v21) {
          operator new();
        }
        unsigned int v53 = 0;
        uint64_t v22 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53))return 0; {
        }
          }
        else
        {
          unsigned int v53 = *v22;
          *((void *)a2 + 1) = v22 + 1;
        }
        int v23 = *((_DWORD *)a2 + 14);
        int v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24) {
          return 0;
        }
        int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v53);
        if (!sub_10005BF3C(v21, a2, v26) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v25);
        int v27 = *((_DWORD *)a2 + 14);
        BOOL v28 = __OFSUB__(v27, 1);
        int v29 = v27 - 1;
        if (v29 < 0 == v28) {
          *((_DWORD *)a2 + 14) = v29;
        }
        int v30 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v30 + 1;
LABEL_57:
        *((_DWORD *)this + 13) |= 8u;
        uint64_t v31 = *((void *)this + 3);
        if (!v31) {
          operator new();
        }
        unsigned int v53 = 0;
        unsigned int v32 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v32 >= *((void *)a2 + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53))return 0; {
        }
          }
        else
        {
          unsigned int v53 = *v32;
          *((void *)a2 + 1) = v32 + 1;
        }
        int v33 = *((_DWORD *)a2 + 14);
        int v34 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v53);
        if (!sub_1000723E8(v31, a2, v36) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v35);
        int v37 = *((_DWORD *)a2 + 14);
        BOOL v28 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v28) {
          *((_DWORD *)a2 + 14) = v38;
        }
        uint64_t v39 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v39 >= *((void *)a2 + 2) || *v39 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v39 + 1;
LABEL_71:
        *((_DWORD *)this + 13) |= 0x10u;
        uint64_t v40 = *((void *)this + 4);
        if (!v40) {
          operator new();
        }
        unsigned int v53 = 0;
        int v41 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v41 >= *((void *)a2 + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53))return 0; {
        }
          }
        else
        {
          unsigned int v53 = *v41;
          *((void *)a2 + 1) = v41 + 1;
        }
        int v42 = *((_DWORD *)a2 + 14);
        int v43 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v42 + 1;
        if (v42 < v43)
        {
          int v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v53);
          if (sub_100088E4C(v40, a2, v45))
          {
            if (*((unsigned char *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v44);
              int v46 = *((_DWORD *)a2 + 14);
              BOOL v28 = __OFSUB__(v46, 1);
              int v47 = v46 - 1;
              if (v47 < 0 == v28) {
                *((_DWORD *)a2 + 14) = v47;
              }
              int v48 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v14 = *((void *)a2 + 2);
              if ((unint64_t)v48 < v14 && *v48 == 48)
              {
                unsigned int v15 = v48 + 1;
                *((void *)a2 + 1) = v15;
LABEL_85:
                unsigned int v53 = 0;
                if ((unint64_t)v15 >= v14 || *v15 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53);
                  if (!result) {
                    return result;
                  }
                  unsigned int v49 = v53;
                }
                else
                {
                  unsigned int v49 = *v15;
                  *((void *)a2 + 1) = v15 + 1;
                }
                if (v49 <= 3)
                {
                  *((_DWORD *)this + 13) |= 0x20u;
                  *((_DWORD *)this + 10) = v49;
                }
                unsigned int v50 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v16 = *((void *)a2 + 2);
                if ((unint64_t)v50 < v16 && *v50 == 56)
                {
                  uint64_t v17 = v50 + 1;
                  *((void *)a2 + 1) = v17;
LABEL_95:
                  unsigned int v53 = 0;
                  if ((unint64_t)v17 >= v16 || *v17 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53);
                    if (!result) {
                      return result;
                    }
                    unsigned int v51 = v53;
                    unsigned int v52 = (unsigned __int8 *)*((void *)a2 + 1);
                    unint64_t v16 = *((void *)a2 + 2);
                  }
                  else
                  {
                    unsigned int v51 = *v17;
                    unsigned int v52 = (unsigned __int8 *)(v17 + 1);
                    *((void *)a2 + 1) = v52;
                  }
                  *((unsigned char *)this + 44) = v51 != 0;
                  *((_DWORD *)this + 13) |= 0x40u;
                  if (v52 == (unsigned __int8 *)v16
                    && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                  {
                    *((_DWORD *)a2 + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)a2 + 36) = 1;
                    return result;
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_24;
        }
        int v13 = *((_DWORD *)this + 13);
        goto LABEL_43;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_57;
        }
        goto LABEL_24;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_71;
        }
        goto LABEL_24;
      case 6u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_85;
      case 7u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v17 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_95;
      default:
        int v8 = TagFallback & 7;
LABEL_24:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10008A778(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_11:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::MeasurementReportWithEstimate::default_instance_ + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(proto::gnss::Emergency::MeasurementReportWithEstimate::default_instance_ + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_20:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 40), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 52) & 0x40) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_17:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9) {
    uint64_t v9 = *(void *)(proto::gnss::Emergency::MeasurementReportWithEstimate::default_instance_ + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) != 0) {
    goto LABEL_20;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return result;
  }
LABEL_21:
  int v10 = *(unsigned __int8 *)(v5 + 44);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, (BOOL)a2, a4);
}

uint64_t proto::gnss::Emergency::MeasurementReportWithEstimate::ByteSize(proto::gnss::Emergency::MeasurementReportWithEstimate *this, unsigned int a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 52);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0;
    goto LABEL_49;
  }
  if (*((unsigned char *)this + 52))
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if ((v6 & 0x80000000) != 0)
    {
      unsigned int v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else if (v6 >= 0x80)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      int v3 = *((_DWORD *)this + 13);
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      unsigned int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    unsigned int v4 = 0;
    if ((*((unsigned char *)this + 52) & 2) == 0) {
      goto LABEL_17;
    }
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    int v3 = *((_DWORD *)this + 13);
  }
  else
  {
    int v8 = 2;
  }
  v4 += v8;
LABEL_17:
  if ((v3 & 4) != 0)
  {
    uint64_t v9 = *((void *)this + 2);
    if (!v9) {
      uint64_t v9 = *(void *)(proto::gnss::Emergency::MeasurementReportWithEstimate::default_instance_ + 16);
    }
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005C204(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    v4 += v11 + v12 + 1;
    int v3 = *((_DWORD *)this + 13);
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0) {
        goto LABEL_20;
      }
LABEL_34:
      uint64_t v17 = *((void *)this + 4);
      if (!v17) {
        uint64_t v17 = *(void *)(proto::gnss::Emergency::MeasurementReportWithEstimate::default_instance_ + 32);
      }
      int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000898BC(v17, a2);
      int v19 = (int)v18;
      if (v18 >= 0x80) {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
      }
      else {
        int v20 = 1;
      }
      v4 += v19 + v20 + 1;
      int v3 = *((_DWORD *)this + 13);
      if ((v3 & 0x20) == 0) {
        goto LABEL_46;
      }
      goto LABEL_40;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  uint64_t v13 = *((void *)this + 3);
  if (!v13) {
    uint64_t v13 = *(void *)(proto::gnss::Emergency::MeasurementReportWithEstimate::default_instance_ + 24);
  }
  unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100072CE4(v13, a2);
  int v15 = (int)v14;
  if (v14 >= 0x80) {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  }
  else {
    int v16 = 1;
  }
  v4 += v15 + v16 + 1;
  int v3 = *((_DWORD *)this + 13);
  if ((v3 & 0x10) != 0) {
    goto LABEL_34;
  }
LABEL_20:
  if ((v3 & 0x20) != 0)
  {
LABEL_40:
    unsigned int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if ((v21 & 0x80000000) != 0)
    {
      int v22 = 11;
    }
    else if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
      int v3 = *((_DWORD *)this + 13);
    }
    else
    {
      int v22 = 2;
    }
    v4 += v22;
  }
LABEL_46:
  if ((v3 & 0x40) != 0) {
    uint64_t result = v4 + 2;
  }
  else {
    uint64_t result = v4;
  }
LABEL_49:
  *((_DWORD *)this + 12) = result;
  return result;
}

void sub_10008AA74(proto::gnss::Emergency::MeasurementReportWithEstimate *a1, void *lpsrc)
{
  proto::gnss::Emergency::MeasurementReportWithEstimate::MergeFrom(a1, (const proto::gnss::Emergency::MeasurementReportWithEstimate *)lpsrc);
}

uint64_t sub_10008AB18()
{
  return 1;
}

void *sub_10008AB20@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.MeasurementReportWithEstimate");
}

void sub_10008AB30(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010AE38;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10008AB50(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010AE38;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10008ABA4()
{
}

uint64_t sub_10008ABF0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v22 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_23:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_26;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if (result)
        {
          unsigned int v10 = v22;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_26:
        unsigned int v22 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v15 = v22;
          int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v15 = *v12;
          int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }
        *(unsigned char *)(a1 + 9) = v15 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if ((unint64_t)v16 >= v8 || *v16 != 24) {
          continue;
        }
        uint64_t v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        unsigned int v22 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v17 = v22;
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v13;
          int v18 = v13 + 1;
          *((void *)this + 1) = v18;
        }
        *(unsigned char *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if ((unint64_t)v18 >= v8 || *v18 != 32) {
          continue;
        }
        unint64_t v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        unsigned int v22 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v19 = v22;
          int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v14;
          int v20 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 11) = v19 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        if (v20 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_10008AED8(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
      if ((*(_DWORD *)(v5 + 16) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = *(unsigned __int8 *)(v5 + 11);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t proto::gnss::Emergency::Cdma1xContext::ByteSize(proto::gnss::Emergency::Cdma1xContext *this)
{
  int v1 = *((_DWORD *)this + 4);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if (*((_DWORD *)this + 4)) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  *((_DWORD *)this + 3) = v3;
  return v3;
}

void sub_10008AFC0(uint64_t a1, unsigned char *lpsrc)
{
  sub_1000835BC(a1, lpsrc);
}

uint64_t sub_10008B064()
{
  return 1;
}

void *sub_10008B06C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.Cdma1xContext");
}

uint64_t sub_10008B07C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_10008B084(uint64_t a1)
{
  return *(unsigned int *)(a1 + 120);
}

uint64_t sub_10008B08C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_10008B094(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_10008B09C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_10008B0A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10008B0AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 84);
}

uint64_t sub_10008B0B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_10008B0BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_10008B0C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_10008B0CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_10008B0D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10008B0DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_10008B0E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_10008B0EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_10008B0F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_10008B0FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 100);
}

uint64_t sub_10008B104(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_10008B10C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10008B114(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_10008B11C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_10008B124(uint64_t a1)
{
  return *(unsigned int *)(a1 + 76);
}

uint64_t sub_10008B12C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_10008B134(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_10008B13C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_10008B144(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10008B14C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_10008B154(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_10008B15C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_10008B164(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_10008B16C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10008B174(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_10008B17C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_10008B184(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10008B18C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_10008B194(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10008B19C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_10008B1A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_10008B1AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10008B1B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10008B1BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_10008B1C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_10008B1CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_10008B1D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_10008B1DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_10008B1E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_10008B1EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_10008B1F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_10008B1FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10008B204(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10008B20C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_10008B214(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_10008B21C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_10008B224(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_10008B22C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_10008B234(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_10008B23C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_10008B244(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_10008B24C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_10008B254(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_10008B25C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_10008B264(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_10008B26C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_10008B274(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_10008B27C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_10008B284(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_10008B28C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_10008B294(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10008B29C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_10008B2A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_10008B2AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_10008B2B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_10008B2BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_10008B2C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_10008B2CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_10008B2D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_10008B2DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_10008B2E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_10008B2EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 144);
}

uint64_t sub_10008B2F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_10008B2FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_10008B304(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_10008B30C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_10008B314(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_10008B31C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_10008B324(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_10008B32C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_10008B334(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_10008B33C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_10008B344(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_10008B34C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_10008B354(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_10008B35C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_10008B364(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_10008B36C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

void sub_10008B374(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)a2 + 8 * v4);
      int v6 = *((_DWORD *)a1 + 3);
      uint64_t v7 = *((int *)a1 + 2);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v6 + 1);
          int v6 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v7 + 1;
      sub_1000543EC(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 8));
  }
}

uint64_t sub_10008B494()
{
  if (qword_1001144F8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001144F8 + 8))(qword_1001144F8);
  }
  if (qword_100114500) {
    (*(void (**)(uint64_t))(*(void *)qword_100114500 + 8))(qword_100114500);
  }
  if (qword_100114508) {
    (*(void (**)(uint64_t))(*(void *)qword_100114508 + 8))(qword_100114508);
  }
  if (qword_100114510) {
    (*(void (**)(uint64_t))(*(void *)qword_100114510 + 8))(qword_100114510);
  }
  if (qword_100114518) {
    (*(void (**)(uint64_t))(*(void *)qword_100114518 + 8))(qword_100114518);
  }
  if (qword_100114520) {
    (*(void (**)(uint64_t))(*(void *)qword_100114520 + 8))(qword_100114520);
  }
  if (qword_100114528) {
    (*(void (**)(uint64_t))(*(void *)qword_100114528 + 8))(qword_100114528);
  }
  if (qword_100114530) {
    (*(void (**)(uint64_t))(*(void *)qword_100114530 + 8))(qword_100114530);
  }
  if (qword_100114538) {
    (*(void (**)(uint64_t))(*(void *)qword_100114538 + 8))(qword_100114538);
  }
  if (qword_100114540) {
    (*(void (**)(uint64_t))(*(void *)qword_100114540 + 8))(qword_100114540);
  }
  if (qword_100114548) {
    (*(void (**)(uint64_t))(*(void *)qword_100114548 + 8))(qword_100114548);
  }
  if (qword_100114550) {
    (*(void (**)(uint64_t))(*(void *)qword_100114550 + 8))(qword_100114550);
  }
  if (qword_100114558) {
    (*(void (**)(uint64_t))(*(void *)qword_100114558 + 8))(qword_100114558);
  }
  if (qword_100114560) {
    (*(void (**)(uint64_t))(*(void *)qword_100114560 + 8))(qword_100114560);
  }
  if (qword_100114568) {
    (*(void (**)(uint64_t))(*(void *)qword_100114568 + 8))(qword_100114568);
  }
  if (qword_100114570) {
    (*(void (**)(uint64_t))(*(void *)qword_100114570 + 8))(qword_100114570);
  }
  if (qword_100114578) {
    (*(void (**)(uint64_t))(*(void *)qword_100114578 + 8))(qword_100114578);
  }
  if (qword_100114580) {
    (*(void (**)(uint64_t))(*(void *)qword_100114580 + 8))(qword_100114580);
  }
  if (qword_100114588) {
    (*(void (**)(uint64_t))(*(void *)qword_100114588 + 8))(qword_100114588);
  }
  if (qword_100114590) {
    (*(void (**)(uint64_t))(*(void *)qword_100114590 + 8))(qword_100114590);
  }
  if (qword_100114598) {
    (*(void (**)(uint64_t))(*(void *)qword_100114598 + 8))(qword_100114598);
  }
  if (qword_1001145A0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001145A0 + 8))(qword_1001145A0);
  }
  if (qword_1001145A8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001145A8 + 8))(qword_1001145A8);
  }
  if (qword_1001145B0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001145B0 + 8))(qword_1001145B0);
  }
  if (qword_1001145B8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001145B8 + 8))(qword_1001145B8);
  }
  if (qword_1001145C0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001145C0 + 8))(qword_1001145C0);
  }
  if (qword_1001145C8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001145C8 + 8))(qword_1001145C8);
  }
  if (qword_1001145D0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001145D0 + 8))(qword_1001145D0);
  }
  if (qword_1001145D8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001145D8 + 8))(qword_1001145D8);
  }
  if (qword_1001145E0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001145E0 + 8))(qword_1001145E0);
  }
  if (qword_1001145E8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001145E8 + 8))(qword_1001145E8);
  }
  if (qword_1001145F0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001145F0 + 8))(qword_1001145F0);
  }
  if (qword_1001145F8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001145F8 + 8))(qword_1001145F8);
  }
  if (qword_100114600) {
    (*(void (**)(uint64_t))(*(void *)qword_100114600 + 8))(qword_100114600);
  }
  if (qword_100114608) {
    (*(void (**)(uint64_t))(*(void *)qword_100114608 + 8))(qword_100114608);
  }
  if (qword_100114610) {
    (*(void (**)(uint64_t))(*(void *)qword_100114610 + 8))(qword_100114610);
  }
  if (qword_100114618) {
    (*(void (**)(uint64_t))(*(void *)qword_100114618 + 8))(qword_100114618);
  }
  if (qword_100114620) {
    (*(void (**)(uint64_t))(*(void *)qword_100114620 + 8))(qword_100114620);
  }
  if (qword_100114628) {
    (*(void (**)(uint64_t))(*(void *)qword_100114628 + 8))(qword_100114628);
  }
  if (qword_100114630) {
    (*(void (**)(uint64_t))(*(void *)qword_100114630 + 8))(qword_100114630);
  }
  if (qword_100114638) {
    (*(void (**)(uint64_t))(*(void *)qword_100114638 + 8))(qword_100114638);
  }
  if (qword_100114640) {
    (*(void (**)(uint64_t))(*(void *)qword_100114640 + 8))(qword_100114640);
  }
  if (qword_100114648) {
    (*(void (**)(uint64_t))(*(void *)qword_100114648 + 8))(qword_100114648);
  }
  if (qword_100114650) {
    (*(void (**)(uint64_t))(*(void *)qword_100114650 + 8))(qword_100114650);
  }
  if (qword_100114658) {
    (*(void (**)(uint64_t))(*(void *)qword_100114658 + 8))(qword_100114658);
  }
  if (qword_100114660) {
    (*(void (**)(uint64_t))(*(void *)qword_100114660 + 8))(qword_100114660);
  }
  if (qword_100114668) {
    (*(void (**)(uint64_t))(*(void *)qword_100114668 + 8))(qword_100114668);
  }
  if (qword_100114670) {
    (*(void (**)(uint64_t))(*(void *)qword_100114670 + 8))(qword_100114670);
  }
  if (qword_100114678) {
    (*(void (**)(uint64_t))(*(void *)qword_100114678 + 8))(qword_100114678);
  }
  uint64_t result = CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_;
  if (CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_)
  {
    int v1 = *(uint64_t (**)(void))(*(void *)CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_
                             + 8);
    return v1();
  }
  return result;
}

void CLP::LogEntry::PrivateData::protobuf_AddDesc_CLPGnssMeasApi_2eproto(CLP::LogEntry::PrivateData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_1001144F0 & 1) == 0)
  {
    byte_1001144F0 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"Sources/Protobuf/Generated/CLPGnssMeasApi.pb.cc", a4);
    operator new();
  }
}

void sub_10008D2B8(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 12);
      if (v6 >= 5) {
        __assert_rtn("set_slot_source", "CLPGnssMeasApi.pb.h", 6606, "::CLP::LogEntry::PrivateData::GlonassSlotSource_IsValid(value)");
      }
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_10008D38C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10008D3A4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010B798;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10008D3C4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010B798;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10008D418()
{
}

uint64_t sub_10008D464(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_10008D478(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  while (1)
  {
    while (1)
    {
      unsigned int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      int v11 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        int v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        unsigned int *v5 = *v11;
        int v12 = v11 + 1;
        *((void *)this + 1) = v12;
      }
      a1[5] |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        unsigned int v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_24:
        unsigned int v15 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v15);
          if (!result) {
            return result;
          }
          unsigned int v13 = v15;
        }
        else
        {
          unsigned int v13 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        if (v13 <= 4)
        {
          a1[5] |= 2u;
          a1[3] = v13;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unsigned int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10008D62C(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_10008D698(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_16;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else
    {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_16:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_10008D734(_DWORD *a1, void *lpsrc)
{
  sub_10008D2B8(a1, (uint64_t)lpsrc);
}

uint64_t sub_10008D7D8()
{
  return 1;
}

void *sub_10008D7E0@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.GlonassSlotInfo");
}

void sub_10008D7F0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      int v5 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      int v6 = *(_DWORD **)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_100114500 + 8);
      }
      sub_10008D2B8(v6, v7);
    }
  }
}

void sub_10008D8F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10008D908(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010B810;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_100114500 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10008D998(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_10008D908(a1);

  operator delete();
}

void sub_10008D9D0()
{
}

uint64_t sub_10008DA20(uint64_t result)
{
  char v1 = *(unsigned char *)(result + 24);
  if (v1)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 20)) {
          *(void *)(v2 + 8) = 0;
        }
        *(_DWORD *)(v2 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_10008DA50(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 == 1) {
          break;
        }
        if (TagFallback >> 3 == 2)
        {
          int v7 = TagFallback & 7;
          if (v7 == 2)
          {
            int v8 = *(_DWORD *)(a1 + 24);
            goto LABEL_23;
          }
        }
        else
        {
          int v7 = TagFallback & 7;
        }
LABEL_15:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
      }
        }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v23 = 0;
      unsigned int v10 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
        if (!result) {
          return result;
        }
        unsigned int v11 = v23;
        int v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        unsigned int v11 = *v10;
        int v12 = v10 + 1;
        *((void *)this + 1) = v12;
      }
      *(_DWORD *)(a1 + 16) = v11;
      int v8 = *(_DWORD *)(a1 + 24) | 1;
      *(_DWORD *)(a1 + 24) = v8;
    }
    while ((unint64_t)v12 >= v9 || *v12 != 18);
    *((void *)this + 1) = v12 + 1;
LABEL_23:
    *(_DWORD *)(a1 + 24) = v8 | 2;
    unint64_t v14 = *(unsigned int **)(a1 + 8);
    if (!v14) {
      operator new();
    }
    unsigned int v24 = 0;
    unsigned int v15 = (char *)*((void *)this + 1);
    if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24)) {
        return 0;
      }
    }
    else
    {
      unsigned int v24 = *v15;
      *((void *)this + 1) = v15 + 1;
    }
    int v16 = *((_DWORD *)this + 14);
    int v17 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v16 + 1;
    if (v16 >= v17) {
      return 0;
    }
    int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v24);
    if (!sub_10008D478(v14, this, v19) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
    int v20 = *((_DWORD *)this + 14);
    BOOL v21 = __OFSUB__(v20, 1);
    int v22 = v20 - 1;
    if (v22 < 0 == v21) {
      *((_DWORD *)this + 14) = v22;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_10008DCA0(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_100114500 + 8);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_10008DD20(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 24);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_100114500 + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10008D698(v6, a2);
    int v9 = (int)v7;
    if (v7 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    }
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_10008DDE8(uint64_t a1, void *lpsrc)
{
  sub_10008D7F0(a1, (uint64_t)lpsrc);
}

uint64_t sub_10008DE8C()
{
  return 1;
}

void *sub_10008DE94@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.GlonassId");
}

void sub_10008DEA4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 44))
    {
      int v6 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 44) |= 1u;
      *(_DWORD *)(a1 + 16) = v6;
      int v4 = *(_DWORD *)(a2 + 44);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_19;
      }
    }
    else if ((*(unsigned char *)(a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 44) |= 2u;
    uint64_t v7 = *(void *)(a1 + 8);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_100114508 + 8);
    }
    sub_10008D7F0(v7, v8);
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_20;
    }
LABEL_19:
    int v9 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(_DWORD *)(a1 + 20) = v9;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
LABEL_20:
    int v10 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(_DWORD *)(a1 + 24) = v10;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_22;
    }
LABEL_21:
    int v11 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 44) |= 0x10u;
    *(_DWORD *)(a1 + 28) = v11;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        return;
      }
      goto LABEL_11;
    }
LABEL_22:
    int v12 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 0x20u;
    *(_DWORD *)(a1 + 32) = v12;
    if ((*(_DWORD *)(a2 + 44) & 0x40) == 0) {
      return;
    }
LABEL_11:
    int v5 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) |= 0x40u;
    *(_DWORD *)(a1 + 36) = v5;
  }
}

void sub_10008E050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10008E068(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010B888;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_100114508 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10008E0F8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_10008E068(a1);

  operator delete();
}

void sub_10008E130()
{
}

uint64_t sub_10008E188(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 44);
  if (v2)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(result + 8);
      if (result) {
        uint64_t result = sub_10008DA20(result);
      }
    }
    *(void *)(v1 + 28) = 0;
    *(void *)(v1 + 20) = 0;
    *(_DWORD *)(v1 + 36) = 0;
  }
  *(_DWORD *)(v1 + 44) = 0;
  return result;
}

uint64_t sub_10008E1D4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 16);
  int v6 = (unsigned int *)(a1 + 20);
  uint64_t v7 = (unsigned int *)(a1 + 24);
  uint64_t v8 = (unsigned int *)(a1 + 28);
  int v9 = (unsigned int *)(a1 + 32);
  int v10 = (unsigned int *)(a1 + 36);
  while (2)
  {
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v15;
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
        }
        int v17 = *(_DWORD *)(a1 + 44) | 1;
        *(_DWORD *)(a1 + 44) = v17;
        if ((unint64_t)v16 < v14 && *v16 == 18)
        {
          *((void *)this + 1) = v16 + 1;
          goto LABEL_33;
        }
        continue;
      case 2u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_24;
        }
        int v17 = *(_DWORD *)(a1 + 44);
LABEL_33:
        *(_DWORD *)(a1 + 44) = v17 | 2;
        uint64_t v25 = *(void *)(a1 + 8);
        if (!v25) {
          operator new();
        }
        unsigned int v40 = 0;
        unsigned int v26 = (char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40))return 0; {
        }
          }
        else
        {
          unsigned int v40 = *v26;
          *((void *)this + 1) = v26 + 1;
        }
        int v27 = *((_DWORD *)this + 14);
        int v28 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v27 + 1;
        if (v27 < v28)
        {
          int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v40);
          if (sub_10008DA50(v25, this, v30))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
              int v31 = *((_DWORD *)this + 14);
              BOOL v32 = __OFSUB__(v31, 1);
              int v33 = v31 - 1;
              if (v33 < 0 == v32) {
                *((_DWORD *)this + 14) = v33;
              }
              int v34 = (unsigned char *)*((void *)this + 1);
              unint64_t v18 = *((void *)this + 2);
              if ((unint64_t)v34 < v18 && *v34 == 24)
              {
                unsigned int v19 = v34 + 1;
                *((void *)this + 1) = v19;
LABEL_47:
                if ((unint64_t)v19 >= v18 || *v19 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
                  if (!result) {
                    return result;
                  }
                  int v35 = (unsigned char *)*((void *)this + 1);
                  unint64_t v18 = *((void *)this + 2);
                }
                else
                {
                  *int v6 = *v19;
                  int v35 = v19 + 1;
                  *((void *)this + 1) = v35;
                }
                *(_DWORD *)(a1 + 44) |= 4u;
                if ((unint64_t)v35 < v18 && *v35 == 32)
                {
                  int v20 = v35 + 1;
                  *((void *)this + 1) = v20;
LABEL_55:
                  if ((unint64_t)v20 >= v18 || *v20 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
                    if (!result) {
                      return result;
                    }
                    unsigned int v36 = (unsigned char *)*((void *)this + 1);
                    unint64_t v18 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int *v7 = *v20;
                    unsigned int v36 = v20 + 1;
                    *((void *)this + 1) = v36;
                  }
                  *(_DWORD *)(a1 + 44) |= 8u;
                  if ((unint64_t)v36 < v18 && *v36 == 40)
                  {
                    BOOL v21 = v36 + 1;
                    *((void *)this + 1) = v21;
LABEL_63:
                    if ((unint64_t)v21 >= v18 || *v21 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
                      if (!result) {
                        return result;
                      }
                      int v37 = (unsigned char *)*((void *)this + 1);
                      unint64_t v18 = *((void *)this + 2);
                    }
                    else
                    {
                      *uint64_t v8 = *v21;
                      int v37 = v21 + 1;
                      *((void *)this + 1) = v37;
                    }
                    *(_DWORD *)(a1 + 44) |= 0x10u;
                    if ((unint64_t)v37 < v18 && *v37 == 48)
                    {
                      int v22 = v37 + 1;
                      *((void *)this + 1) = v22;
LABEL_71:
                      if ((unint64_t)v22 >= v18 || *v22 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
                        if (!result) {
                          return result;
                        }
                        int v38 = (unsigned char *)*((void *)this + 1);
                        unint64_t v18 = *((void *)this + 2);
                      }
                      else
                      {
                        unsigned int *v9 = *v22;
                        int v38 = v22 + 1;
                        *((void *)this + 1) = v38;
                      }
                      *(_DWORD *)(a1 + 44) |= 0x20u;
                      if ((unint64_t)v38 < v18 && *v38 == 56)
                      {
                        unsigned int v23 = v38 + 1;
                        *((void *)this + 1) = v23;
LABEL_79:
                        if ((unint64_t)v23 >= v18 || *v23 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
                          if (!result) {
                            return result;
                          }
                          uint64_t v39 = (unsigned __int8 *)*((void *)this + 1);
                          unint64_t v18 = *((void *)this + 2);
                        }
                        else
                        {
                          *int v10 = *v23;
                          uint64_t v39 = (unsigned __int8 *)(v23 + 1);
                          *((void *)this + 1) = v39;
                        }
                        *(_DWORD *)(a1 + 44) |= 0x40u;
                        if (v39 == (unsigned __int8 *)v18
                          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                        {
                          *((_DWORD *)this + 8) = 0;
                          uint64_t result = 1;
                          *((unsigned char *)this + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_47;
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_55;
      case 5u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        BOOL v21 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_63;
      case 6u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_71;
      case 7u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v23 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_79;
      default:
        int v13 = TagFallback & 7;
LABEL_24:
        if (v13 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10008E6BC(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_100114508 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_16:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 32), a2, a4);
    if ((*(_DWORD *)(v5 + 44) & 0x40) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 28), a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x20) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return result;
  }
LABEL_17:
  int v8 = *(_DWORD *)(v5 + 36);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v8, a2, a4);
}

uint64_t sub_10008E7C8(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_42;
  }
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 44);
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_100114508 + 8);
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10008DD20(v6, a2);
  int v8 = (int)v7;
  if (v7 >= 0x80) {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
  }
  else {
    int v9 = 1;
  }
  uint64_t v4 = (v4 + v8 + v9 + 1);
  int v3 = *(_DWORD *)(a1 + 44);
LABEL_16:
  if ((v3 & 4) != 0)
  {
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 44);
    }
    else
    {
      int v11 = 2;
    }
    uint64_t v4 = (v11 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_30;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 44);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v4 = (v13 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_19:
    if ((v3 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_34;
  }
LABEL_30:
  unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 44);
  }
  else
  {
    int v15 = 2;
  }
  uint64_t v4 = (v15 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_20:
    if ((v3 & 0x40) == 0) {
      goto LABEL_42;
    }
    goto LABEL_38;
  }
LABEL_34:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 44);
  }
  else
  {
    int v17 = 2;
  }
  uint64_t v4 = (v17 + v4);
  if ((v3 & 0x40) != 0)
  {
LABEL_38:
    unint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if (v18 >= 0x80) {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2) + 1;
    }
    else {
      int v19 = 2;
    }
    uint64_t v4 = (v19 + v4);
  }
LABEL_42:
  *(_DWORD *)(a1 + 40) = v4;
  return v4;
}

void sub_10008E95C(uint64_t a1, void *lpsrc)
{
  sub_10008DEA4(a1, (uint64_t)lpsrc);
}

uint64_t sub_10008EA00()
{
  return 1;
}

void *sub_10008EA08@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.ConstellationId");
}

void sub_10008EA18(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      int v5 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_100114510 + 8);
      }
      sub_10008DEA4(v6, v7);
    }
  }
}

void sub_10008EB24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10008EB3C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010B900;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_100114510 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10008EBCC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_10008EB3C(a1);

  operator delete();
}

void sub_10008EC04()
{
}

uint64_t sub_10008EC54(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 24);
  if (v2)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(result + 8);
      if (result) {
        uint64_t result = sub_10008E188(result);
      }
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_10008EC94(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 16);
  while (1)
  {
    do
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 == 1) {
          break;
        }
        if (TagFallback >> 3 == 2)
        {
          int v8 = TagFallback & 7;
          if (v8 == 2)
          {
            int v9 = *(_DWORD *)(a1 + 24);
            goto LABEL_24;
          }
        }
        else
        {
          int v8 = TagFallback & 7;
        }
LABEL_16:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
      }
        }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      int v11 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v11 >= v10 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        int v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        unsigned int *v5 = *v11;
        int v12 = v11 + 1;
        *((void *)this + 1) = v12;
      }
      int v9 = *(_DWORD *)(a1 + 24) | 1;
      *(_DWORD *)(a1 + 24) = v9;
    }
    while ((unint64_t)v12 >= v10 || *v12 != 18);
    *((void *)this + 1) = v12 + 1;
LABEL_24:
    *(_DWORD *)(a1 + 24) = v9 | 2;
    uint64_t v14 = *(void *)(a1 + 8);
    if (!v14) {
      operator new();
    }
    unsigned int v23 = 0;
    int v15 = (char *)*((void *)this + 1);
    if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23)) {
        return 0;
      }
    }
    else
    {
      unsigned int v23 = *v15;
      *((void *)this + 1) = v15 + 1;
    }
    int v16 = *((_DWORD *)this + 14);
    int v17 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v16 + 1;
    if (v16 >= v17) {
      return 0;
    }
    int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_10008E1D4(v14, this, v19) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
    int v20 = *((_DWORD *)this + 14);
    BOOL v21 = __OFSUB__(v20, 1);
    int v22 = v20 - 1;
    if (v22 < 0 == v21) {
      *((_DWORD *)this + 14) = v22;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_10008EEF4(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_100114510 + 8);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_10008EF74(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 24);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_16;
      }
    }
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_100114510 + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10008E7C8(v6, a2);
    int v9 = (int)v7;
    if (v7 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    }
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_16:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_10008F02C(uint64_t a1, void *lpsrc)
{
  sub_10008EA18(a1, (uint64_t)lpsrc);
}

uint64_t sub_10008F0D0()
{
  return 1;
}

void *sub_10008F0D8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.SvId");
}

void sub_10008F0E8(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 4);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    if ((*((_DWORD *)a2 + 4) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = a2[11];
    *(_DWORD *)(a1 + 16) |= 8u;
    *(unsigned char *)(a1 + 11) = v5;
  }
}

void sub_10008F1DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10008F1F4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010B978;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10008F214(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010B978;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10008F268()
{
}

uint64_t sub_10008F2B4(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_10008F2C8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v22 = 0;
        int v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_23:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_26;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if (result)
        {
          unsigned int v10 = v22;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_26:
        unsigned int v22 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v15 = v22;
          int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v15 = *v12;
          int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }
        *(unsigned char *)(a1 + 9) = v15 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if ((unint64_t)v16 >= v8 || *v16 != 24) {
          continue;
        }
        int v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        unsigned int v22 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v17 = v22;
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v13;
          int v18 = v13 + 1;
          *((void *)this + 1) = v18;
        }
        *(unsigned char *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if ((unint64_t)v18 >= v8 || *v18 != 32) {
          continue;
        }
        uint64_t v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        unsigned int v22 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v19 = v22;
          int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v14;
          int v20 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 11) = v19 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        if (v20 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_10008F5B0(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
      if ((*(_DWORD *)(v5 + 16) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = *(unsigned __int8 *)(v5 + 11);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_10008F658(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_10008F698(uint64_t a1, unsigned char *lpsrc)
{
  sub_10008F0E8(a1, lpsrc);
}

uint64_t sub_10008F73C()
{
  return 1;
}

void *sub_10008F744@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.GpsL1SyncState");
}

void sub_10008F754(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = a2[20];
  if ((_BYTE)v4)
  {
    if (a2[20])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 20) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 5);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((a2[20] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 20) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 20) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_14:
    char v9 = a2[11];
    *(_DWORD *)(a1 + 20) |= 8u;
    *(unsigned char *)(a1 + 11) = v9;
    if ((*((_DWORD *)a2 + 5) & 0x10) == 0) {
      return;
    }
LABEL_9:
    char v5 = a2[12];
    *(_DWORD *)(a1 + 20) |= 0x10u;
    *(unsigned char *)(a1 + 12) = v5;
  }
}

void sub_10008F868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10008F880(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010B9F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10008F8A0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010B9F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10008F8F4()
{
}

uint64_t sub_10008F948(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    *(unsigned char *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_10008F960(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v25 = 0;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_25:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 20) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_28;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
        if (result)
        {
          unsigned int v10 = v25;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_25;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_28:
        unsigned int v25 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v16 = v25;
          unsigned int v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v16 = *v12;
          unsigned int v17 = v12 + 1;
          *((void *)this + 1) = v17;
        }
        *(unsigned char *)(a1 + 9) = v16 != 0;
        *(_DWORD *)(a1 + 20) |= 2u;
        if ((unint64_t)v17 >= v8 || *v17 != 24) {
          continue;
        }
        int v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_36:
        unsigned int v25 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v18 = v25;
          unsigned int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v18 = *v13;
          unsigned int v19 = v13 + 1;
          *((void *)this + 1) = v19;
        }
        *(unsigned char *)(a1 + 10) = v18 != 0;
        *(_DWORD *)(a1 + 20) |= 4u;
        if ((unint64_t)v19 >= v8 || *v19 != 32) {
          continue;
        }
        uint64_t v14 = v19 + 1;
        *((void *)this + 1) = v14;
LABEL_44:
        unsigned int v25 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v20 = v25;
          BOOL v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v20 = *v14;
          BOOL v21 = v14 + 1;
          *((void *)this + 1) = v21;
        }
        *(unsigned char *)(a1 + 11) = v20 != 0;
        *(_DWORD *)(a1 + 20) |= 8u;
        if ((unint64_t)v21 >= v8 || *v21 != 40) {
          continue;
        }
        unsigned int v15 = v21 + 1;
        *((void *)this + 1) = v15;
LABEL_52:
        unsigned int v25 = 0;
        if ((unint64_t)v15 >= v8 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v22 = v25;
          unsigned int v23 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v22 = *v15;
          unsigned int v23 = (unsigned __int8 *)(v15 + 1);
          *((void *)this + 1) = v23;
        }
        *(unsigned char *)(a1 + 12) = v22 != 0;
        *(_DWORD *)(a1 + 20) |= 0x10u;
        if (v23 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_36;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_44;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v15 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_52;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_10008FCCC(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), a2, a4);
    if ((*(_DWORD *)(v5 + 20) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = *(unsigned __int8 *)(v5 + 12);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_10008FD90(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 20);
  if ((_BYTE)v1)
  {
    unsigned int v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_10008FDE4(uint64_t a1, unsigned char *lpsrc)
{
  sub_10008F754(a1, lpsrc);
}

uint64_t sub_10008FE88()
{
  return 1;
}

void *sub_10008FE90@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.GpsL2CSyncState");
}

void sub_10008FEA0(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 4);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    if ((*((_DWORD *)a2 + 4) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = a2[11];
    *(_DWORD *)(a1 + 16) |= 8u;
    *(unsigned char *)(a1 + 11) = v5;
  }
}

void sub_10008FF94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10008FFAC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BA68;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10008FFCC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BA68;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100090020()
{
}

uint64_t sub_10009006C(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100090080(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v22 = 0;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_23:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_26;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if (result)
        {
          unsigned int v10 = v22;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_26:
        unsigned int v22 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v15 = v22;
          unsigned int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v15 = *v12;
          unsigned int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }
        *(unsigned char *)(a1 + 9) = v15 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if ((unint64_t)v16 >= v8 || *v16 != 24) {
          continue;
        }
        int v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        unsigned int v22 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v17 = v22;
          unsigned int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v13;
          unsigned int v18 = v13 + 1;
          *((void *)this + 1) = v18;
        }
        *(unsigned char *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if ((unint64_t)v18 >= v8 || *v18 != 32) {
          continue;
        }
        uint64_t v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        unsigned int v22 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v19 = v22;
          unsigned int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v14;
          unsigned int v20 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 11) = v19 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        if (v20 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100090368(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
      if ((*(_DWORD *)(v5 + 16) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = *(unsigned __int8 *)(v5 + 11);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_100090410(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_100090450(uint64_t a1, unsigned char *lpsrc)
{
  sub_10008FEA0(a1, lpsrc);
}

uint64_t sub_1000904F4()
{
  return 1;
}

void *sub_1000904FC@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.GpsL5SyncState");
}

void sub_10009050C(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = a2[20];
  if ((_BYTE)v4)
  {
    if (a2[20])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 20) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 5);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((a2[20] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 20) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 20) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_14:
    char v9 = a2[11];
    *(_DWORD *)(a1 + 20) |= 8u;
    *(unsigned char *)(a1 + 11) = v9;
    if ((*((_DWORD *)a2 + 5) & 0x10) == 0) {
      return;
    }
LABEL_9:
    char v5 = a2[12];
    *(_DWORD *)(a1 + 20) |= 0x10u;
    *(unsigned char *)(a1 + 12) = v5;
  }
}

void sub_100090620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100090638(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BAE0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100090658(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BAE0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000906AC()
{
}

uint64_t sub_100090700(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    *(unsigned char *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_100090718(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v25 = 0;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_25:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 20) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_28;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
        if (result)
        {
          unsigned int v10 = v25;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_25;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_28:
        unsigned int v25 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v16 = v25;
          unsigned int v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v16 = *v12;
          unsigned int v17 = v12 + 1;
          *((void *)this + 1) = v17;
        }
        *(unsigned char *)(a1 + 9) = v16 != 0;
        *(_DWORD *)(a1 + 20) |= 2u;
        if ((unint64_t)v17 >= v8 || *v17 != 24) {
          continue;
        }
        int v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_36:
        unsigned int v25 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v18 = v25;
          unsigned int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v18 = *v13;
          unsigned int v19 = v13 + 1;
          *((void *)this + 1) = v19;
        }
        *(unsigned char *)(a1 + 10) = v18 != 0;
        *(_DWORD *)(a1 + 20) |= 4u;
        if ((unint64_t)v19 >= v8 || *v19 != 32) {
          continue;
        }
        uint64_t v14 = v19 + 1;
        *((void *)this + 1) = v14;
LABEL_44:
        unsigned int v25 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v20 = v25;
          BOOL v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v20 = *v14;
          BOOL v21 = v14 + 1;
          *((void *)this + 1) = v21;
        }
        *(unsigned char *)(a1 + 11) = v20 != 0;
        *(_DWORD *)(a1 + 20) |= 8u;
        if ((unint64_t)v21 >= v8 || *v21 != 40) {
          continue;
        }
        unsigned int v15 = v21 + 1;
        *((void *)this + 1) = v15;
LABEL_52:
        unsigned int v25 = 0;
        if ((unint64_t)v15 >= v8 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v22 = v25;
          unsigned int v23 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v22 = *v15;
          unsigned int v23 = (unsigned __int8 *)(v15 + 1);
          *((void *)this + 1) = v23;
        }
        *(unsigned char *)(a1 + 12) = v22 != 0;
        *(_DWORD *)(a1 + 20) |= 0x10u;
        if (v23 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_36;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_44;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v15 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_52;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100090A84(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), a2, a4);
    if ((*(_DWORD *)(v5 + 20) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = *(unsigned __int8 *)(v5 + 12);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_100090B48(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 20);
  if ((_BYTE)v1)
  {
    unsigned int v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_100090B9C(uint64_t a1, unsigned char *lpsrc)
{
  sub_10009050C(a1, lpsrc);
}

uint64_t sub_100090C40()
{
  return 1;
}

void *sub_100090C48@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.GlonassL1fSyncState");
}

void sub_100090C58(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 4);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    if ((*((_DWORD *)a2 + 4) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = a2[11];
    *(_DWORD *)(a1 + 16) |= 8u;
    *(unsigned char *)(a1 + 11) = v5;
  }
}

void sub_100090D4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100090D64(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BB58;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100090D84(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BB58;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100090DD8()
{
}

uint64_t sub_100090E24(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100090E38(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v22 = 0;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_23:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_26;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if (result)
        {
          unsigned int v10 = v22;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_26:
        unsigned int v22 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v15 = v22;
          unsigned int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v15 = *v12;
          unsigned int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }
        *(unsigned char *)(a1 + 9) = v15 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if ((unint64_t)v16 >= v8 || *v16 != 24) {
          continue;
        }
        int v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        unsigned int v22 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v17 = v22;
          unsigned int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v13;
          unsigned int v18 = v13 + 1;
          *((void *)this + 1) = v18;
        }
        *(unsigned char *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if ((unint64_t)v18 >= v8 || *v18 != 32) {
          continue;
        }
        uint64_t v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        unsigned int v22 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v19 = v22;
          unsigned int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v14;
          unsigned int v20 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 11) = v19 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        if (v20 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100091120(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
      if ((*(_DWORD *)(v5 + 16) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = *(unsigned __int8 *)(v5 + 11);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_1000911C8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_100091208(uint64_t a1, unsigned char *lpsrc)
{
  sub_100090C58(a1, lpsrc);
}

uint64_t sub_1000912AC()
{
  return 1;
}

void *sub_1000912B4@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.BeidouB1SyncState");
}

void sub_1000912C4(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 4);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    if ((*((_DWORD *)a2 + 4) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = a2[11];
    *(_DWORD *)(a1 + 16) |= 8u;
    *(unsigned char *)(a1 + 11) = v5;
  }
}

void sub_1000913B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000913D0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BBD0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000913F0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BBD0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100091444()
{
}

uint64_t sub_100091490(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1000914A4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v22 = 0;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_23:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_26;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if (result)
        {
          unsigned int v10 = v22;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_26:
        unsigned int v22 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v15 = v22;
          unsigned int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v15 = *v12;
          unsigned int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }
        *(unsigned char *)(a1 + 9) = v15 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if ((unint64_t)v16 >= v8 || *v16 != 24) {
          continue;
        }
        int v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        unsigned int v22 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v17 = v22;
          unsigned int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v13;
          unsigned int v18 = v13 + 1;
          *((void *)this + 1) = v18;
        }
        *(unsigned char *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if ((unint64_t)v18 >= v8 || *v18 != 32) {
          continue;
        }
        uint64_t v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        unsigned int v22 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v19 = v22;
          unsigned int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v14;
          unsigned int v20 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 11) = v19 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        if (v20 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_10009178C(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
      if ((*(_DWORD *)(v5 + 16) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = *(unsigned __int8 *)(v5 + 11);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_100091834(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_100091874(uint64_t a1, unsigned char *lpsrc)
{
  sub_1000912C4(a1, lpsrc);
}

uint64_t sub_100091918()
{
  return 1;
}

void *sub_100091920@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.BeidouB2SyncState");
}

void sub_100091930(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 4);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    if ((*((_DWORD *)a2 + 4) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = a2[11];
    *(_DWORD *)(a1 + 16) |= 8u;
    *(unsigned char *)(a1 + 11) = v5;
  }
}

void sub_100091A24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100091A3C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BC48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100091A5C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BC48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100091AB0()
{
}

uint64_t sub_100091AFC(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100091B10(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v22 = 0;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_23:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_26;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if (result)
        {
          unsigned int v10 = v22;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_26:
        unsigned int v22 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v15 = v22;
          unsigned int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v15 = *v12;
          unsigned int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }
        *(unsigned char *)(a1 + 9) = v15 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if ((unint64_t)v16 >= v8 || *v16 != 24) {
          continue;
        }
        int v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        unsigned int v22 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v17 = v22;
          unsigned int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v13;
          unsigned int v18 = v13 + 1;
          *((void *)this + 1) = v18;
        }
        *(unsigned char *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if ((unint64_t)v18 >= v8 || *v18 != 32) {
          continue;
        }
        uint64_t v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        unsigned int v22 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v19 = v22;
          unsigned int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v14;
          unsigned int v20 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 11) = v19 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        if (v20 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100091DF8(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
      if ((*(_DWORD *)(v5 + 16) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = *(unsigned __int8 *)(v5 + 11);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_100091EA0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_100091EE0(uint64_t a1, unsigned char *lpsrc)
{
  sub_100091930(a1, lpsrc);
}

uint64_t sub_100091F84()
{
  return 1;
}

void *sub_100091F8C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.GalileoE1SyncState");
}

void sub_100091F9C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    char v8 = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 24) |= 1u;
    *(unsigned char *)(a1 + 8) = v8;
    int v4 = *(_DWORD *)(a2 + 24);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  char v9 = *(unsigned char *)(a2 + 9);
  *(_DWORD *)(a1 + 24) |= 2u;
  *(unsigned char *)(a1 + 9) = v9;
  int v4 = *(_DWORD *)(a2 + 24);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  char v10 = *(unsigned char *)(a2 + 10);
  *(_DWORD *)(a1 + 24) |= 4u;
  *(unsigned char *)(a1 + 10) = v10;
  int v4 = *(_DWORD *)(a2 + 24);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  char v11 = *(unsigned char *)(a2 + 11);
  *(_DWORD *)(a1 + 24) |= 8u;
  *(unsigned char *)(a1 + 11) = v11;
  int v4 = *(_DWORD *)(a2 + 24);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_24:
    char v13 = *(unsigned char *)(a2 + 13);
    *(_DWORD *)(a1 + 24) |= 0x20u;
    *(unsigned char *)(a1 + 13) = v13;
    int v4 = *(_DWORD *)(a2 + 24);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_23:
  char v12 = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 24) |= 0x10u;
  *(unsigned char *)(a1 + 12) = v12;
  int v4 = *(_DWORD *)(a2 + 24);
  if ((v4 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_25:
  char v14 = *(unsigned char *)(a2 + 14);
  *(_DWORD *)(a1 + 24) |= 0x40u;
  *(unsigned char *)(a1 + 14) = v14;
  int v4 = *(_DWORD *)(a2 + 24);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    char v5 = *(unsigned char *)(a2 + 15);
    *(_DWORD *)(a1 + 24) |= 0x80u;
    *(unsigned char *)(a1 + 15) = v5;
    int v4 = *(_DWORD *)(a2 + 24);
  }
LABEL_13:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      char v6 = *(unsigned char *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 0x100u;
      *(unsigned char *)(a1 + 16) = v6;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 0x200) != 0)
    {
      char v7 = *(unsigned char *)(a2 + 17);
      *(_DWORD *)(a1 + 24) |= 0x200u;
      *(unsigned char *)(a1 + 17) = v7;
    }
  }
}

void sub_100092154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10009216C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BCC0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10009218C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BCC0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000921E0()
{
}

uint64_t sub_100092230(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 24);
  if ((_BYTE)v1) {
    *(void *)(result + 8) = 0;
  }
  if ((v1 & 0xFF00) != 0) {
    *(_WORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_100092254(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v40 = 0;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          char v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_35:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 24) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            char v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_38;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
        if (result)
        {
          unsigned int v10 = v40;
          char v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_35;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        char v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_38:
        unsigned int v40 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!result) {
            return result;
          }
          unsigned int v21 = v40;
          unsigned int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v21 = *v12;
          unsigned int v22 = v12 + 1;
          *((void *)this + 1) = v22;
        }
        *(unsigned char *)(a1 + 9) = v21 != 0;
        *(_DWORD *)(a1 + 24) |= 2u;
        if ((unint64_t)v22 >= v8 || *v22 != 24) {
          continue;
        }
        char v13 = v22 + 1;
        *((void *)this + 1) = v13;
LABEL_46:
        unsigned int v40 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!result) {
            return result;
          }
          unsigned int v23 = v40;
          unsigned int v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v23 = *v13;
          unsigned int v24 = v13 + 1;
          *((void *)this + 1) = v24;
        }
        *(unsigned char *)(a1 + 10) = v23 != 0;
        *(_DWORD *)(a1 + 24) |= 4u;
        if ((unint64_t)v24 >= v8 || *v24 != 32) {
          continue;
        }
        char v14 = v24 + 1;
        *((void *)this + 1) = v14;
LABEL_54:
        unsigned int v40 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!result) {
            return result;
          }
          unsigned int v25 = v40;
          unsigned int v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v25 = *v14;
          unsigned int v26 = v14 + 1;
          *((void *)this + 1) = v26;
        }
        *(unsigned char *)(a1 + 11) = v25 != 0;
        *(_DWORD *)(a1 + 24) |= 8u;
        if ((unint64_t)v26 >= v8 || *v26 != 40) {
          continue;
        }
        unsigned int v15 = v26 + 1;
        *((void *)this + 1) = v15;
LABEL_62:
        unsigned int v40 = 0;
        if ((unint64_t)v15 >= v8 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!result) {
            return result;
          }
          unsigned int v27 = v40;
          int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v27 = *v15;
          int v28 = v15 + 1;
          *((void *)this + 1) = v28;
        }
        *(unsigned char *)(a1 + 12) = v27 != 0;
        *(_DWORD *)(a1 + 24) |= 0x10u;
        if ((unint64_t)v28 >= v8 || *v28 != 48) {
          continue;
        }
        unsigned int v16 = v28 + 1;
        *((void *)this + 1) = v16;
LABEL_70:
        unsigned int v40 = 0;
        if ((unint64_t)v16 >= v8 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!result) {
            return result;
          }
          unsigned int v29 = v40;
          unsigned int v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v29 = *v16;
          unsigned int v30 = v16 + 1;
          *((void *)this + 1) = v30;
        }
        *(unsigned char *)(a1 + 13) = v29 != 0;
        *(_DWORD *)(a1 + 24) |= 0x20u;
        if ((unint64_t)v30 >= v8 || *v30 != 56) {
          continue;
        }
        unsigned int v17 = v30 + 1;
        *((void *)this + 1) = v17;
LABEL_78:
        unsigned int v40 = 0;
        if ((unint64_t)v17 >= v8 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!result) {
            return result;
          }
          unsigned int v31 = v40;
          BOOL v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v31 = *v17;
          BOOL v32 = v17 + 1;
          *((void *)this + 1) = v32;
        }
        *(unsigned char *)(a1 + 14) = v31 != 0;
        *(_DWORD *)(a1 + 24) |= 0x40u;
        if ((unint64_t)v32 >= v8 || *v32 != 64) {
          continue;
        }
        unsigned int v18 = v32 + 1;
        *((void *)this + 1) = v18;
LABEL_86:
        unsigned int v40 = 0;
        if ((unint64_t)v18 >= v8 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!result) {
            return result;
          }
          unsigned int v33 = v40;
          int v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v33 = *v18;
          int v34 = v18 + 1;
          *((void *)this + 1) = v34;
        }
        *(unsigned char *)(a1 + 15) = v33 != 0;
        *(_DWORD *)(a1 + 24) |= 0x80u;
        if ((unint64_t)v34 >= v8 || *v34 != 72) {
          continue;
        }
        unsigned int v19 = v34 + 1;
        *((void *)this + 1) = v19;
LABEL_94:
        unsigned int v40 = 0;
        if ((unint64_t)v19 >= v8 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!result) {
            return result;
          }
          unsigned int v35 = v40;
          unsigned int v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v35 = *v19;
          unsigned int v36 = v19 + 1;
          *((void *)this + 1) = v36;
        }
        *(unsigned char *)(a1 + 16) = v35 != 0;
        *(_DWORD *)(a1 + 24) |= 0x100u;
        if ((unint64_t)v36 >= v8 || *v36 != 80) {
          continue;
        }
        unsigned int v20 = v36 + 1;
        *((void *)this + 1) = v20;
LABEL_102:
        unsigned int v40 = 0;
        if ((unint64_t)v20 >= v8 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!result) {
            return result;
          }
          unsigned int v37 = v40;
          int v38 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v37 = *v20;
          int v38 = (unsigned __int8 *)(v20 + 1);
          *((void *)this + 1) = v38;
        }
        *(unsigned char *)(a1 + 17) = v37 != 0;
        *(_DWORD *)(a1 + 24) |= 0x200u;
        if (v38 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        char v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_46;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        char v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_54;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v15 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_62;
      case 6u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v16 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_70;
      case 7u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_78;
      case 8u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v18 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_86;
      case 9u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_94;
      case 0xAu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v20 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_102;
      default:
        int v7 = TagFallback & 7;
LABEL_29:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100092854(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), a2, a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 13), a2, a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 14), a2, a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 16), a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 0x200) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 15), a2, a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 0x100) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    return result;
  }
LABEL_21:
  int v7 = *(unsigned __int8 *)(v5 + 17);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v7, a2, a4);
}

uint64_t sub_1000929A4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24);
  if ((_BYTE)v1)
  {
    unsigned int v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x20) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x40) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x80) != 0) {
      v2 += 2;
    }
  }
  else
  {
    unsigned int v2 = 0;
  }
  unsigned int v3 = v2 + 2;
  if ((v1 & 0x100) == 0) {
    unsigned int v3 = v2;
  }
  if ((v1 & 0x200) != 0) {
    v3 += 2;
  }
  if ((v1 & 0xFF00) != 0) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = v2;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_100092A3C(uint64_t a1, void *lpsrc)
{
  sub_100091F9C(a1, (uint64_t)lpsrc);
}

uint64_t sub_100092AE0()
{
  return 1;
}

void *sub_100092AE8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.GalileoE5SyncState");
}

void sub_100092AF8(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    if ((*((_DWORD *)a2 + 4) & 4) == 0) {
      return;
    }
LABEL_7:
    char v5 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(unsigned char *)(a1 + 10) = v5;
  }
}

void sub_100092BCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100092BE4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BD38;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100092C04(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BD38;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100092C58()
{
}

uint64_t sub_100092CAC(uint64_t result)
{
  if (*(unsigned char *)(result + 16))
  {
    *(_WORD *)(result + 8) = 0;
    *(unsigned char *)(result + 10) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100092CC4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        char v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v22 = 0;
        char v11 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v12 = v22;
          char v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v12 = *v11;
          char v13 = v11 + 1;
          *((void *)this + 1) = v13;
        }
        *(unsigned char *)(a1 + 8) = v12 != 0;
        *(_DWORD *)(a1 + 16) |= 1u;
        if ((unint64_t)v13 < v9 && *v13 == 16)
        {
          char v14 = v13 + 1;
          *((void *)this + 1) = v14;
          goto LABEL_26;
        }
      }
      if (v7 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_18;
      }
      char v14 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
LABEL_26:
      unsigned int v21 = 0;
      if ((unint64_t)v14 >= v9 || *v14 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
        if (!result) {
          return result;
        }
        unsigned int v15 = v21;
        unsigned int v16 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        unsigned int v15 = *v14;
        unsigned int v16 = v14 + 1;
        *((void *)this + 1) = v16;
      }
      *(unsigned char *)(a1 + 9) = v15 != 0;
      *(_DWORD *)(a1 + 16) |= 2u;
      if ((unint64_t)v16 < v9 && *v16 == 24)
      {
        unsigned int v10 = v16 + 1;
        *((void *)this + 1) = v10;
LABEL_34:
        unsigned int v20 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20);
          if (!result) {
            return result;
          }
          unsigned int v17 = v20;
          unsigned int v18 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v10;
          unsigned int v18 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v18;
        }
        *(unsigned char *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if (v18 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v7 == 3)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unsigned int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_34;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_18:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100092F04(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
    if ((*(_DWORD *)(v5 + 16) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = *(unsigned __int8 *)(v5 + 10);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_100092F90(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_100092FC4(uint64_t a1, unsigned char *lpsrc)
{
  sub_100092AF8(a1, lpsrc);
}

uint64_t sub_100093068()
{
  return 1;
}

void *sub_100093070@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.SbasL1SyncState");
}

void sub_100093080(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
  }
  int v4 = *(_DWORD *)(a2 + 96);
  if (!(_BYTE)v4) {
    goto LABEL_50;
  }
  if (v4)
  {
    unsigned int v5 = *(_DWORD *)(a2 + 88);
    if (v5 >= 0xD) {
      __assert_rtn("set_band", "CLPGnssMeasApi.pb.h", 7929, "::CLP::LogEntry::PrivateData::Band_IsValid(value)");
    }
    *(_DWORD *)(a1 + 96) |= 1u;
    *(_DWORD *)(a1 + 88) = v5;
    int v4 = *(_DWORD *)(a2 + 96);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 96) |= 2u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    int v7 = *(unsigned char **)(a2 + 8);
    if (!v7) {
      int v7 = *(unsigned char **)(qword_100114560 + 8);
    }
    sub_10008F0E8(v6, v7);
    int v4 = *(_DWORD *)(a2 + 96);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_25;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  *(_DWORD *)(a1 + 96) |= 4u;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    operator new();
  }
  unint64_t v9 = *(unsigned char **)(a2 + 16);
  if (!v9) {
    unint64_t v9 = *(unsigned char **)(qword_100114560 + 16);
  }
  sub_10008F754(v8, v9);
  int v4 = *(_DWORD *)(a2 + 96);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_25:
  *(_DWORD *)(a1 + 96) |= 8u;
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10) {
    operator new();
  }
  char v11 = *(unsigned char **)(a2 + 24);
  if (!v11) {
    char v11 = *(unsigned char **)(qword_100114560 + 24);
  }
  sub_10008FEA0(v10, v11);
  int v4 = *(_DWORD *)(a2 + 96);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_35:
    *(_DWORD *)(a1 + 96) |= 0x20u;
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14) {
      operator new();
    }
    unsigned int v15 = *(unsigned char **)(a2 + 40);
    if (!v15) {
      unsigned int v15 = *(unsigned char **)(qword_100114560 + 40);
    }
    sub_100090C58(v14, v15);
    int v4 = *(_DWORD *)(a2 + 96);
    if ((v4 & 0x40) == 0)
    {
LABEL_13:
      if ((v4 & 0x80) == 0) {
        goto LABEL_50;
      }
      goto LABEL_45;
    }
    goto LABEL_40;
  }
LABEL_30:
  *(_DWORD *)(a1 + 96) |= 0x10u;
  uint64_t v12 = *(void *)(a1 + 32);
  if (!v12) {
    operator new();
  }
  char v13 = *(unsigned char **)(a2 + 32);
  if (!v13) {
    char v13 = *(unsigned char **)(qword_100114560 + 32);
  }
  sub_10009050C(v12, v13);
  int v4 = *(_DWORD *)(a2 + 96);
  if ((v4 & 0x20) != 0) {
    goto LABEL_35;
  }
LABEL_12:
  if ((v4 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_40:
  *(_DWORD *)(a1 + 96) |= 0x40u;
  uint64_t v16 = *(void *)(a1 + 48);
  if (!v16) {
    operator new();
  }
  unsigned int v17 = *(unsigned char **)(a2 + 48);
  if (!v17) {
    unsigned int v17 = *(unsigned char **)(qword_100114560 + 48);
  }
  sub_1000912C4(v16, v17);
  int v4 = *(_DWORD *)(a2 + 96);
  if ((v4 & 0x80) != 0)
  {
LABEL_45:
    *(_DWORD *)(a1 + 96) |= 0x80u;
    uint64_t v18 = *(void *)(a1 + 56);
    if (!v18) {
      operator new();
    }
    unsigned int v19 = *(unsigned char **)(a2 + 56);
    if (!v19) {
      unsigned int v19 = *(unsigned char **)(qword_100114560 + 56);
    }
    sub_100091930(v18, v19);
    int v4 = *(_DWORD *)(a2 + 96);
  }
LABEL_50:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 96) |= 0x100u;
    uint64_t v20 = *(void *)(a1 + 64);
    if (!v20) {
      operator new();
    }
    uint64_t v21 = *(void *)(a2 + 64);
    if (!v21) {
      uint64_t v21 = *(void *)(qword_100114560 + 64);
    }
    sub_100091F9C(v20, v21);
    int v4 = *(_DWORD *)(a2 + 96);
    if ((v4 & 0x200) == 0)
    {
LABEL_53:
      if ((v4 & 0x400) == 0) {
        return;
      }
      goto LABEL_65;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_53;
  }
  *(_DWORD *)(a1 + 96) |= 0x200u;
  uint64_t v22 = *(void *)(a1 + 72);
  if (!v22) {
    operator new();
  }
  unsigned int v23 = *(unsigned char **)(a2 + 72);
  if (!v23) {
    unsigned int v23 = *(unsigned char **)(qword_100114560 + 72);
  }
  sub_100092AF8(v22, v23);
  if ((*(_DWORD *)(a2 + 96) & 0x400) != 0)
  {
LABEL_65:
    *(_DWORD *)(a1 + 96) |= 0x400u;
    uint64_t v24 = *(void *)(a1 + 80);
    if (!v24) {
      operator new();
    }
    unsigned int v25 = *(unsigned char **)(a2 + 80);
    if (!v25) {
      unsigned int v25 = *(unsigned char **)(qword_100114560 + 80);
    }
    sub_10008F0E8(v24, v25);
  }
}

void sub_1000935E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100093600(void *result)
{
  if ((void *)qword_100114560 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[5];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[6];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = v1[7];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = v1[8];
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = v1[9];
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t result = (void *)v1[10];
    if (result)
    {
      char v11 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v11();
    }
  }
  return result;
}

void sub_100093800(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BDB0;
  sub_100093600(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100093854(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BDB0;
  sub_100093600(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000938BC()
{
}

uint64_t sub_100093920(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 96);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(result + 88) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 16)) {
          *(_DWORD *)(v2 + 8) = 0;
        }
        *(_DWORD *)(v2 + 16) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
    if ((v1 & 4) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 20))
        {
          *(unsigned char *)(v3 + 12) = 0;
          *(_DWORD *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 20) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
    if ((v1 & 8) != 0)
    {
      uint64_t v4 = *(void *)(result + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 16)) {
          *(_DWORD *)(v4 + 8) = 0;
        }
        *(_DWORD *)(v4 + 16) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
    if ((v1 & 0x10) != 0)
    {
      uint64_t v5 = *(void *)(result + 32);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 20))
        {
          *(unsigned char *)(v5 + 12) = 0;
          *(_DWORD *)(v5 + 8) = 0;
        }
        *(_DWORD *)(v5 + 20) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
    if ((v1 & 0x20) != 0)
    {
      uint64_t v6 = *(void *)(result + 40);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 16)) {
          *(_DWORD *)(v6 + 8) = 0;
        }
        *(_DWORD *)(v6 + 16) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
    if ((v1 & 0x40) != 0)
    {
      uint64_t v7 = *(void *)(result + 48);
      if (v7)
      {
        if (*(unsigned char *)(v7 + 16)) {
          *(_DWORD *)(v7 + 8) = 0;
        }
        *(_DWORD *)(v7 + 16) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
    if ((v1 & 0x80) != 0)
    {
      uint64_t v8 = *(void *)(result + 56);
      if (v8)
      {
        if (*(unsigned char *)(v8 + 16)) {
          *(_DWORD *)(v8 + 8) = 0;
        }
        *(_DWORD *)(v8 + 16) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
  }
  if ((v1 & 0xFF00) != 0)
  {
    if ((v1 & 0x100) != 0)
    {
      uint64_t v9 = *(void *)(result + 64);
      if (v9)
      {
        int v10 = *(_DWORD *)(v9 + 24);
        if ((_BYTE)v10) {
          *(void *)(v9 + 8) = 0;
        }
        if ((v10 & 0xFF00) != 0) {
          *(_WORD *)(v9 + 16) = 0;
        }
        *(_DWORD *)(v9 + 24) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
    if ((v1 & 0x200) != 0)
    {
      uint64_t v11 = *(void *)(result + 72);
      if (v11)
      {
        if (*(unsigned char *)(v11 + 16))
        {
          *(_WORD *)(v11 + 8) = 0;
          *(unsigned char *)(v11 + 10) = 0;
        }
        *(_DWORD *)(v11 + 16) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
    if ((v1 & 0x400) != 0)
    {
      uint64_t v12 = *(void *)(result + 80);
      if (v12)
      {
        if (*(unsigned char *)(v12 + 16)) {
          *(_DWORD *)(v12 + 8) = 0;
        }
        *(_DWORD *)(v12 + 16) = 0;
      }
    }
  }
  *(_DWORD *)(result + 96) = 0;
  return result;
}

uint64_t sub_100093A98(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_31;
        }
        unsigned int v102 = 0;
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102);
          if (!result) {
            return result;
          }
          unsigned int v9 = v102;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 0xC)
        {
          *(_DWORD *)(a1 + 96) |= 1u;
          *(_DWORD *)(a1 + 88) = v9;
        }
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_41;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
LABEL_41:
        *(_DWORD *)(a1 + 96) |= 2u;
        uint64_t v12 = *(void *)(a1 + 8);
        if (!v12) {
          operator new();
        }
        unsigned int v102 = 0;
        char v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_10008F2C8(v12, this, v17) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v18 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)this + 14) = v20;
        }
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 26) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
LABEL_55:
        *(_DWORD *)(a1 + 96) |= 4u;
        uint64_t v22 = *(void *)(a1 + 16);
        if (!v22) {
          operator new();
        }
        unsigned int v102 = 0;
        unsigned int v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_10008F960(v22, this, v27) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v28 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v19) {
          *((_DWORD *)this + 14) = v29;
        }
        unsigned int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 34) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_69:
        *(_DWORD *)(a1 + 96) |= 8u;
        uint64_t v31 = *(void *)(a1 + 24);
        if (!v31) {
          operator new();
        }
        unsigned int v102 = 0;
        BOOL v32 = (char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v32;
          *((void *)this + 1) = v32 + 1;
        }
        int v33 = *((_DWORD *)this + 14);
        int v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100090080(v31, this, v36) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        int v37 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v19) {
          *((_DWORD *)this + 14) = v38;
        }
        uint64_t v39 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v39 >= *((void *)this + 2) || *v39 != 42) {
          continue;
        }
        *((void *)this + 1) = v39 + 1;
LABEL_83:
        *(_DWORD *)(a1 + 96) |= 0x10u;
        uint64_t v40 = *(void *)(a1 + 32);
        if (!v40) {
          operator new();
        }
        unsigned int v102 = 0;
        int v41 = (char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v41;
          *((void *)this + 1) = v41 + 1;
        }
        int v42 = *((_DWORD *)this + 14);
        int v43 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v42 + 1;
        if (v42 >= v43) {
          return 0;
        }
        int v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100090718(v40, this, v45) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v44);
        int v46 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v46, 1);
        int v47 = v46 - 1;
        if (v47 < 0 == v19) {
          *((_DWORD *)this + 14) = v47;
        }
        int v48 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v48 >= *((void *)this + 2) || *v48 != 50) {
          continue;
        }
        *((void *)this + 1) = v48 + 1;
LABEL_97:
        *(_DWORD *)(a1 + 96) |= 0x20u;
        uint64_t v49 = *(void *)(a1 + 40);
        if (!v49) {
          operator new();
        }
        unsigned int v102 = 0;
        unsigned int v50 = (char *)*((void *)this + 1);
        if ((unint64_t)v50 >= *((void *)this + 2) || *v50 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v50;
          *((void *)this + 1) = v50 + 1;
        }
        int v51 = *((_DWORD *)this + 14);
        int v52 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v51 + 1;
        if (v51 >= v52) {
          return 0;
        }
        int v53 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100090E38(v49, this, v54) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v53);
        int v55 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v55, 1);
        int v56 = v55 - 1;
        if (v56 < 0 == v19) {
          *((_DWORD *)this + 14) = v56;
        }
        int v57 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v57 >= *((void *)this + 2) || *v57 != 58) {
          continue;
        }
        *((void *)this + 1) = v57 + 1;
LABEL_111:
        *(_DWORD *)(a1 + 96) |= 0x40u;
        uint64_t v58 = *(void *)(a1 + 48);
        if (!v58) {
          operator new();
        }
        unsigned int v102 = 0;
        v59 = (char *)*((void *)this + 1);
        if ((unint64_t)v59 >= *((void *)this + 2) || *v59 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v59;
          *((void *)this + 1) = v59 + 1;
        }
        int v60 = *((_DWORD *)this + 14);
        int v61 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v60 + 1;
        if (v60 >= v61) {
          return 0;
        }
        int v62 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_1000914A4(v58, this, v63) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v62);
        int v64 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v64, 1);
        int v65 = v64 - 1;
        if (v65 < 0 == v19) {
          *((_DWORD *)this + 14) = v65;
        }
        int v66 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v66 >= *((void *)this + 2) || *v66 != 66) {
          continue;
        }
        *((void *)this + 1) = v66 + 1;
LABEL_125:
        *(_DWORD *)(a1 + 96) |= 0x80u;
        uint64_t v67 = *(void *)(a1 + 56);
        if (!v67) {
          operator new();
        }
        unsigned int v102 = 0;
        int v68 = (char *)*((void *)this + 1);
        if ((unint64_t)v68 >= *((void *)this + 2) || *v68 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v68;
          *((void *)this + 1) = v68 + 1;
        }
        int v69 = *((_DWORD *)this + 14);
        int v70 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v69 + 1;
        if (v69 >= v70) {
          return 0;
        }
        int v71 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100091B10(v67, this, v72) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v71);
        int v73 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v73, 1);
        int v74 = v73 - 1;
        if (v74 < 0 == v19) {
          *((_DWORD *)this + 14) = v74;
        }
        v75 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v75 >= *((void *)this + 2) || *v75 != 74) {
          continue;
        }
        *((void *)this + 1) = v75 + 1;
LABEL_139:
        *(_DWORD *)(a1 + 96) |= 0x100u;
        uint64_t v76 = *(void *)(a1 + 64);
        if (!v76) {
          operator new();
        }
        unsigned int v102 = 0;
        v77 = (char *)*((void *)this + 1);
        if ((unint64_t)v77 >= *((void *)this + 2) || *v77 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v77;
          *((void *)this + 1) = v77 + 1;
        }
        int v78 = *((_DWORD *)this + 14);
        int v79 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v78 + 1;
        if (v78 >= v79) {
          return 0;
        }
        int v80 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100092254(v76, this, v81) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v80);
        int v82 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v82, 1);
        int v83 = v82 - 1;
        if (v83 < 0 == v19) {
          *((_DWORD *)this + 14) = v83;
        }
        v84 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v84 >= *((void *)this + 2) || *v84 != 82) {
          continue;
        }
        *((void *)this + 1) = v84 + 1;
LABEL_153:
        *(_DWORD *)(a1 + 96) |= 0x200u;
        uint64_t v85 = *(void *)(a1 + 72);
        if (!v85) {
          operator new();
        }
        unsigned int v102 = 0;
        v86 = (char *)*((void *)this + 1);
        if ((unint64_t)v86 >= *((void *)this + 2) || *v86 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v86;
          *((void *)this + 1) = v86 + 1;
        }
        int v87 = *((_DWORD *)this + 14);
        int v88 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v87 + 1;
        if (v87 >= v88) {
          return 0;
        }
        int v89 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100092CC4(v85, this, v90) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v89);
        int v91 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v91, 1);
        int v92 = v91 - 1;
        if (v92 < 0 == v19) {
          *((_DWORD *)this + 14) = v92;
        }
        v93 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v93 >= *((void *)this + 2) || *v93 != 90) {
          continue;
        }
        *((void *)this + 1) = v93 + 1;
LABEL_167:
        *(_DWORD *)(a1 + 96) |= 0x400u;
        uint64_t v94 = *(void *)(a1 + 80);
        if (!v94) {
          operator new();
        }
        unsigned int v102 = 0;
        unsigned int v95 = (char *)*((void *)this + 1);
        if ((unint64_t)v95 >= *((void *)this + 2) || *v95 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v95;
          *((void *)this + 1) = v95 + 1;
        }
        int v96 = *((_DWORD *)this + 14);
        int v97 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v96 + 1;
        if (v96 >= v97) {
          return 0;
        }
        int v98 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_10008F2C8(v94, this, v99) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v98);
        int v100 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v100, 1);
        int v101 = v100 - 1;
        if (v101 < 0 == v19) {
          *((_DWORD *)this + 14) = v101;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_69;
        }
        goto LABEL_31;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_83;
        }
        goto LABEL_31;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_97;
        }
        goto LABEL_31;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_111;
        }
        goto LABEL_31;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_125;
        }
        goto LABEL_31;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_139;
        }
        goto LABEL_31;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_153;
        }
        goto LABEL_31;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        goto LABEL_167;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10009472C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 96);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 88), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_100114560 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_17:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_100114560 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_100114560 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_23:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_100114560 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_26:
  uint64_t v11 = *(void *)(v5 + 40);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_100114560 + 40);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_32;
  }
LABEL_29:
  uint64_t v12 = *(void *)(v5 + 48);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_100114560 + 48);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_32:
  uint64_t v13 = *(void *)(v5 + 56);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_100114560 + 56);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v13, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_38;
  }
LABEL_35:
  uint64_t v14 = *(void *)(v5 + 64);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_100114560 + 64);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v14, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      return result;
    }
    goto LABEL_41;
  }
LABEL_38:
  uint64_t v15 = *(void *)(v5 + 72);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_100114560 + 72);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v15, a2, a4);
  if ((*(_DWORD *)(v5 + 96) & 0x400) != 0)
  {
LABEL_41:
    uint64_t v16 = *(void *)(v5 + 80);
    if (!v16) {
      uint64_t v16 = *(void *)(qword_100114560 + 80);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v16, a2, a4);
  }
  return result;
}

uint64_t sub_100094938(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 96);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_40;
  }
  if (v3)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
    if ((v5 & 0x80000000) != 0)
    {
      int v6 = 10;
    }
    else if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      int v3 = *(_DWORD *)(a1 + 96);
    }
    else
    {
      int v6 = 1;
    }
    uint64_t v4 = (v6 + 1);
    if ((v3 & 2) == 0) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_15;
    }
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_100114560 + 8);
  }
  uint64_t v4 = v4 + sub_10008F658(v7) + 2;
  int v3 = *(_DWORD *)(a1 + 96);
LABEL_15:
  if ((v3 & 4) != 0)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_100114560 + 16);
    }
    uint64_t v4 = v4 + sub_10008FD90(v8) + 2;
    int v3 = *(_DWORD *)(a1 + 96);
    if ((v3 & 8) == 0)
    {
LABEL_17:
      if ((v3 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_28;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_17;
  }
  uint64_t v9 = *(void *)(a1 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_100114560 + 24);
  }
  uint64_t v4 = v4 + sub_100090410(v9) + 2;
  int v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 0x10) == 0)
  {
LABEL_18:
    if ((v3 & 0x20) == 0) {
      goto LABEL_19;
    }
    goto LABEL_31;
  }
LABEL_28:
  uint64_t v10 = *(void *)(a1 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_100114560 + 32);
  }
  uint64_t v4 = v4 + sub_100090B48(v10) + 2;
  int v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 0x20) == 0)
  {
LABEL_19:
    if ((v3 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_34;
  }
LABEL_31:
  uint64_t v11 = *(void *)(a1 + 40);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_100114560 + 40);
  }
  uint64_t v4 = v4 + sub_1000911C8(v11) + 2;
  int v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 0x40) == 0)
  {
LABEL_20:
    if ((v3 & 0x80) == 0) {
      goto LABEL_40;
    }
    goto LABEL_37;
  }
LABEL_34:
  uint64_t v12 = *(void *)(a1 + 48);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_100114560 + 48);
  }
  uint64_t v4 = v4 + sub_100091834(v12) + 2;
  int v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 0x80) != 0)
  {
LABEL_37:
    uint64_t v13 = *(void *)(a1 + 56);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_100114560 + 56);
    }
    uint64_t v4 = v4 + sub_100091EA0(v13) + 2;
    int v3 = *(_DWORD *)(a1 + 96);
  }
LABEL_40:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_61;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t v14 = *(void *)(a1 + 64);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_100114560 + 64);
    }
    uint64_t v4 = v4 + sub_1000929A4(v14) + 2;
    int v3 = *(_DWORD *)(a1 + 96);
    if ((v3 & 0x200) == 0)
    {
LABEL_43:
      if ((v3 & 0x400) == 0) {
        goto LABEL_61;
      }
      goto LABEL_58;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_43;
  }
  uint64_t v15 = *(void *)(a1 + 72);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_100114560 + 72);
  }
  int v16 = *(_DWORD *)(v15 + 16);
  int v17 = 2 * (v16 & 1);
  if ((v16 & 2) != 0) {
    v17 += 2;
  }
  if ((v16 & 4) != 0) {
    v17 += 2;
  }
  if (*(_DWORD *)(v15 + 16)) {
    int v18 = v17;
  }
  else {
    int v18 = 0;
  }
  *(_DWORD *)(v15 + 12) = v18;
  uint64_t v4 = (v4 + v18 + 2);
  if ((*(_DWORD *)(a1 + 96) & 0x400) != 0)
  {
LABEL_58:
    uint64_t v19 = *(void *)(a1 + 80);
    if (!v19) {
      uint64_t v19 = *(void *)(qword_100114560 + 80);
    }
    uint64_t v4 = v4 + sub_10008F658(v19) + 2;
  }
LABEL_61:
  *(_DWORD *)(a1 + 92) = v4;
  return v4;
}

void sub_100094B90(uint64_t a1, void *lpsrc)
{
  sub_100093080(a1, (uint64_t)lpsrc);
}

uint64_t sub_100094C34()
{
  return 1;
}

void *sub_100094C3C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.SyncState");
}

double sub_100094C4C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return result;
    }
LABEL_7:
    char v6 = *(unsigned char *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(unsigned char *)(a1 + 24) = v6;
  }
  return result;
}

void sub_100094D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100094D38(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BE28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100094D58(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BE28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100094DAC()
{
}

uint64_t sub_100094E00(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100094E18(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_25;
        }
        *(void *)int v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v16) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v16;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_17;
        }
      }
      if (v7 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 1) {
        goto LABEL_25;
      }
LABEL_17:
      *(void *)int v16 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v16) & 1) == 0)return 0; {
      *(void *)(a1 + 16) = *(void *)v16;
      }
      *(_DWORD *)(a1 + 32) |= 2u;
      uint64_t v12 = (unsigned char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v12 < v9 && *v12 == 24)
      {
        uint64_t v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_21:
        v16[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16[0];
          uint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v10;
          uint64_t v14 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v14;
        }
        *(unsigned char *)(a1 + 24) = v13 != 0;
        *(_DWORD *)(a1 + 32) |= 4u;
        if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v7 == 3)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_21;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_25:
    if (v8 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_100095008(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = *(unsigned __int8 *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_100095094(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 2;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 28) = v1;
  return v1;
}

double sub_1000950CC(uint64_t a1, void *lpsrc)
{
  return sub_100094C4C(a1, (uint64_t)lpsrc);
}

uint64_t sub_100095170()
{
  return 1;
}

void *sub_100095178@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.SvTime");
}

double sub_100095188(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return result;
    }
LABEL_7:
    char v6 = *(unsigned char *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(unsigned char *)(a1 + 24) = v6;
  }
  return result;
}

void sub_10009525C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100095274(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BEA0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100095294(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BEA0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000952E8()
{
}

uint64_t sub_10009533C(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100095354(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_25;
        }
        *(void *)int v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v16) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v16;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_17;
        }
      }
      if (v7 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 1) {
        goto LABEL_25;
      }
LABEL_17:
      *(void *)int v16 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v16) & 1) == 0)return 0; {
      *(void *)(a1 + 16) = *(void *)v16;
      }
      *(_DWORD *)(a1 + 32) |= 2u;
      uint64_t v12 = (unsigned char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v12 < v9 && *v12 == 24)
      {
        uint64_t v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_21:
        v16[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16[0];
          uint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v10;
          uint64_t v14 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v14;
        }
        *(unsigned char *)(a1 + 24) = v13 != 0;
        *(_DWORD *)(a1 + 32) |= 4u;
        if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v7 == 3)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_21;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_25:
    if (v8 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_100095544(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = *(unsigned __int8 *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_1000955D0(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 2;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 28) = v1;
  return v1;
}

double sub_100095608(uint64_t a1, void *lpsrc)
{
  return sub_100095188(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000956AC()
{
  return 1;
}

void *sub_1000956B4@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.FrequencyOffset");
}

void sub_1000956C4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = *(unsigned char *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(unsigned char *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 32) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = *(unsigned char *)(a2 + 25);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(unsigned char *)(a1 + 25) = v5;
  }
}

void sub_1000957B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000957D0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BF18;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000957F0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BF18;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100095844()
{
}

uint64_t sub_100095898(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1000958B0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_24;
        }
        *(void *)int v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v18;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        char v8 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 != 17) {
          continue;
        }
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_24;
        }
LABEL_14:
        *(void *)int v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v18;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 != 24) {
          continue;
        }
        uint64_t v11 = v10 + 1;
        *((void *)this + 1) = v11;
LABEL_20:
        v18[0] = 0;
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v18);
          if (!result) {
            return result;
          }
          unsigned int v12 = v18[0];
          unsigned int v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v12 = *v11;
          unsigned int v13 = v11 + 1;
          *((void *)this + 1) = v13;
        }
        *(unsigned char *)(a1 + 24) = v12 != 0;
        *(_DWORD *)(a1 + 32) |= 4u;
        if ((unint64_t)v13 >= v9 || *v13 != 32) {
          continue;
        }
        uint64_t v14 = v13 + 1;
        *((void *)this + 1) = v14;
LABEL_33:
        v18[0] = 0;
        if ((unint64_t)v14 >= v9 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v18);
          if (!result) {
            return result;
          }
          unsigned int v16 = v18[0];
          int v17 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v16 = *v14;
          int v17 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v17;
        }
        *(unsigned char *)(a1 + 25) = v16 != 0;
        *(_DWORD *)(a1 + 32) |= 8u;
        if (v17 != (unsigned __int8 *)v9 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_20;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_33;
      default:
        int v7 = TagFallback & 7;
LABEL_24:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100095B48(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 24), a2, a4);
      if ((*(_DWORD *)(v5 + 32) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = *(unsigned __int8 *)(v5 + 25);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_100095BF0(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      uint64_t v1 = v2 + 2;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 28) = v1;
  return v1;
}

void sub_100095C34(uint64_t a1, void *lpsrc)
{
  sub_1000956C4(a1, (uint64_t)lpsrc);
}

uint64_t sub_100095CD8()
{
  return 1;
}

void *sub_100095CE0@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.FrequencyOffsetFromPhaseTracking");
}

double sub_100095CF0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 48);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 48))
    {
      uint64_t v7 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 48) |= 1u;
      *(void *)(a1 + 8) = v7;
      int v5 = *(_DWORD *)(a2 + 48);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*(unsigned char *)(a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v8 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 48) |= 2u;
    *(void *)(a1 + 16) = v8;
    int v5 = *(_DWORD *)(a2 + 48);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 48) |= 4u;
    *(double *)(a1 + 24) = result;
    int v5 = *(_DWORD *)(a2 + 48);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        return result;
      }
      goto LABEL_9;
    }
LABEL_14:
    double result = *(double *)(a2 + 32);
    *(_DWORD *)(a1 + 48) |= 8u;
    *(double *)(a1 + 32) = result;
    if ((*(_DWORD *)(a2 + 48) & 0x10) == 0) {
      return result;
    }
LABEL_9:
    char v6 = *(unsigned char *)(a2 + 40);
    *(_DWORD *)(a1 + 48) |= 0x10u;
    *(unsigned char *)(a1 + 40) = v6;
  }
  return result;
}

void sub_100095E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100095E1C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BF90;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100095E3C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010BF90;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100095E90()
{
}

uint64_t sub_100095EEC(uint64_t result)
{
  if (*(unsigned char *)(result + 48))
  {
    *(unsigned char *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_100095F0C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 8);
  char v6 = (unint64_t *)(a1 + 16);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v11;
          unsigned int v12 = v11 + 1;
          *((void *)this + 1) = v12;
        }
        *(_DWORD *)(a1 + 48) |= 1u;
        if ((unint64_t)v12 < v10 && *v12 == 16)
        {
          unsigned int v13 = v12 + 1;
          *((void *)this + 1) = v13;
          goto LABEL_29;
        }
        continue;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v13 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_29:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *char v6 = *v13;
          int v17 = v13 + 1;
          *((void *)this + 1) = v17;
        }
        *(_DWORD *)(a1 + 48) |= 2u;
        if ((unint64_t)v17 >= v10 || *v17 != 25) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
LABEL_37:
        *(void *)uint64_t v22 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v22) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v22;
        }
        *(_DWORD *)(a1 + 48) |= 4u;
        int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 33) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_41:
        *(void *)uint64_t v22 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v22))
        {
          *(void *)(a1 + 32) = *(void *)v22;
          *(_DWORD *)(a1 + 48) |= 8u;
          uint64_t v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          if ((unint64_t)v19 < v14 && *v19 == 40)
          {
            uint64_t v15 = v19 + 1;
            *((void *)this + 1) = v15;
LABEL_45:
            v22[0] = 0;
            if ((unint64_t)v15 >= v14 || *v15 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v22);
              if (!result) {
                return result;
              }
              unsigned int v20 = v22[0];
              uint64_t v21 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v14 = *((void *)this + 2);
            }
            else
            {
              unsigned int v20 = *v15;
              uint64_t v21 = (unsigned __int8 *)(v15 + 1);
              *((void *)this + 1) = v21;
            }
            *(unsigned char *)(a1 + 40) = v20 != 0;
            *(_DWORD *)(a1 + 48) |= 0x10u;
            if (v21 == (unsigned __int8 *)v14
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_37;
        }
        goto LABEL_20;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_41;
        }
        goto LABEL_20;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_45;
      default:
        int v9 = TagFallback & 7;
LABEL_20:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100096218(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(v5 + 32), a3);
    if ((*(_DWORD *)(v5 + 48) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = *(unsigned __int8 *)(v5 + 40);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_1000962DC(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 48);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0;
    goto LABEL_15;
  }
  if ((*(unsigned char *)(a1 + 48) & 1) == 0)
  {
    unsigned int v4 = 0;
    if ((*(unsigned char *)(a1 + 48) & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
  int v3 = *(_DWORD *)(a1 + 48);
  if ((v3 & 2) != 0)
  {
LABEL_7:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 48);
  }
LABEL_8:
  unsigned int v6 = v4 + 9;
  if ((v3 & 4) == 0) {
    unsigned int v6 = v4;
  }
  if ((v3 & 8) != 0) {
    v6 += 9;
  }
  if ((v3 & 0x10) != 0) {
    uint64_t result = v6 + 2;
  }
  else {
    uint64_t result = v6;
  }
LABEL_15:
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

double sub_10009636C(uint64_t a1, void *lpsrc)
{
  return sub_100095CF0(a1, (uint64_t)lpsrc);
}

uint64_t sub_100096410()
{
  return 1;
}

void *sub_100096418@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.PhaseTracking");
}

double sub_100096428(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_100114588 + 8);
      }
      double result = sub_100094C4C(v6, v7);
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 32) |= 2u;
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = *(void *)(a2 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_100114588 + 16);
    }
    double result = sub_100095188(v8, v9);
    if ((*(_DWORD *)(a2 + 32) & 4) != 0)
    {
LABEL_7:
      LODWORD(result) = *(_DWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 32) |= 4u;
      *(_DWORD *)(a1 + 24) = LODWORD(result);
    }
  }
  return result;
}

void sub_1000965B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1000965CC(void *result)
{
  if ((void *)qword_100114588 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    double result = (void *)v1[2];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_10009666C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C008;
  sub_1000965CC(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000966C0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C008;
  sub_1000965CC(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100096728()
{
}

uint64_t sub_100096778(uint64_t result)
{
  LOBYTE(v1) = *(unsigned char *)(result + 32);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(result + 32))
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 32))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(unsigned char *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 32) = 0;
        int v1 = *(_DWORD *)(result + 32);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 32))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(unsigned char *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 32) = 0;
      }
    }
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1000967D0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          uint64_t v9 = *(void *)(a1 + 8);
          if (!v9) {
            operator new();
          }
          unsigned int v30 = 0;
          unint64_t v10 = (char *)*((void *)this + 1);
          if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v30))return 0; {
          }
            }
          else
          {
            unsigned int v30 = *v10;
            *((void *)this + 1) = v10 + 1;
          }
          int v11 = *((_DWORD *)this + 14);
          int v12 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v11 + 1;
          if (v11 >= v12) {
            return 0;
          }
          int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v30);
          if (!sub_100094E18(v9, this, v14) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
          int v15 = *((_DWORD *)this + 14);
          BOOL v16 = __OFSUB__(v15, 1);
          int v17 = v15 - 1;
          if (v17 < 0 == v16) {
            *((_DWORD *)this + 14) = v17;
          }
          int v18 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 18)
          {
            *((void *)this + 1) = v18 + 1;
            goto LABEL_32;
          }
        }
        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_20;
        }
LABEL_32:
        *(_DWORD *)(a1 + 32) |= 2u;
        uint64_t v19 = *(void *)(a1 + 16);
        if (!v19) {
          operator new();
        }
        unsigned int v31 = 0;
        unsigned int v20 = (char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31))return 0; {
        }
          }
        else
        {
          unsigned int v31 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v31);
        if (!sub_100095354(v19, this, v24) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v25 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v25, 1);
        int v26 = v25 - 1;
        if (v26 < 0 == v16) {
          *((_DWORD *)this + 14) = v26;
        }
        unsigned int v27 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v27 < *((void *)this + 2) && *v27 == 29)
        {
          *((void *)this + 1) = v27 + 1;
          goto LABEL_46;
        }
      }
      if (v7 != 3) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 5) {
        goto LABEL_20;
      }
LABEL_46:
      unsigned int v29 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0) {
        return 0;
      }
      *(_DWORD *)(a1 + 24) = v29;
      *(_DWORD *)(a1 + 32) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_20:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100096B30(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_100114588 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return result;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_100114588 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0)
  {
LABEL_11:
    float v9 = *(float *)(v5 + 24);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, v9, a3);
  }
  return result;
}

uint64_t sub_100096BDC(uint64_t a1)
{
  LOBYTE(v1) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v1)
  {
    uint64_t v2 = 0;
    goto LABEL_27;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v2 = *(void *)(a1 + 8);
    if (!v2) {
      uint64_t v2 = *(void *)(qword_100114588 + 8);
    }
    int v3 = *(unsigned __int8 *)(v2 + 32);
    if (*(unsigned char *)(v2 + 32))
    {
      int v4 = (v3 << 31 >> 31) & 9;
      if ((v3 & 2) != 0) {
        v4 += 9;
      }
      if ((v3 & 4) != 0) {
        int v3 = v4 + 2;
      }
      else {
        int v3 = v4;
      }
    }
    *(_DWORD *)(v2 + 28) = v3;
    LODWORD(v2) = v3 + 2;
    int v1 = *(_DWORD *)(a1 + 32);
    if ((v1 & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  LODWORD(v2) = 0;
  if ((*(unsigned char *)(a1 + 32) & 2) != 0)
  {
LABEL_15:
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_100114588 + 16);
    }
    int v6 = *(unsigned __int8 *)(v5 + 32);
    if (*(unsigned char *)(v5 + 32))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 2;
      }
      else {
        int v6 = v7;
      }
    }
    *(_DWORD *)(v5 + 28) = v6;
    LODWORD(v2) = v2 + v6 + 2;
    int v1 = *(_DWORD *)(a1 + 32);
  }
LABEL_24:
  if ((v1 & 4) != 0) {
    uint64_t v2 = (v2 + 5);
  }
  else {
    uint64_t v2 = v2;
  }
LABEL_27:
  *(_DWORD *)(a1 + 28) = v2;
  return v2;
}

double sub_100096CB4(uint64_t a1, void *lpsrc)
{
  return sub_100096428(a1, (uint64_t)lpsrc);
}

uint64_t sub_100096D58()
{
  return 1;
}

void *sub_100096D60@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.SignalCorrelationPeak");
}

void sub_100096D70(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(void *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
LABEL_10:
        unsigned int v7 = *(_DWORD *)(a2 + 24);
        if (v7 >= 6) {
          __assert_rtn("set_full_sv_time_source", "CLPGnssMeasApi.pb.h", 8876, "::CLP::LogEntry::PrivateData::FullSvTimeSource_IsValid(value)");
        }
        *(_DWORD *)(a1 + 32) |= 4u;
        *(_DWORD *)(a1 + 24) = v7;
        return;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v6 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(void *)(a1 + 16) = v6;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return;
    }
    goto LABEL_10;
  }
}

void sub_100096E6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100096E84(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C080;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100096EA4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C080;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100096EF8()
{
}

uint64_t sub_100096F48(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100096F60(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_25;
        }
        *(void *)int v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v15) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v15;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_17;
        }
      }
      if (v7 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 1) {
        goto LABEL_25;
      }
LABEL_17:
      *(void *)int v15 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v15) & 1) == 0)return 0; {
      *(void *)(a1 + 16) = *(void *)v15;
      }
      *(_DWORD *)(a1 + 32) |= 2u;
      int v12 = (unsigned char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v12 < v9 && *v12 == 24)
      {
        unint64_t v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_21:
        v15[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v15);
          if (!result) {
            return result;
          }
          unsigned int v13 = v15[0];
        }
        else
        {
          unsigned int v13 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        if (v13 <= 5)
        {
          *(_DWORD *)(a1 + 32) |= 4u;
          *(_DWORD *)(a1 + 24) = v13;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v7 == 3)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_21;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_25:
    if (v8 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_100097150(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = *(_DWORD *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_1000971DC(uint64_t a1, unsigned int a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 4) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v6 & 0x80000000) != 0)
      {
        int v7 = 11;
      }
      else if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      }
      else
      {
        int v7 = 2;
      }
      uint64_t v5 = (v7 + v5);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(_DWORD *)(a1 + 28) = v5;
  return v5;
}

void sub_10009725C(uint64_t a1, void *lpsrc)
{
  sub_100096D70(a1, (uint64_t)lpsrc);
}

uint64_t sub_100097300()
{
  return 1;
}

void *sub_100097308@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.FullSvTime");
}

float sub_100097318(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      float result = *(float *)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(float *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 24);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    float result = *(float *)(a2 + 12);
    *(_DWORD *)(a1 + 24) |= 2u;
    *(float *)(a1 + 12) = result;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return result;
    }
LABEL_7:
    float result = *(float *)(a2 + 16);
    *(_DWORD *)(a1 + 24) |= 4u;
    *(float *)(a1 + 16) = result;
  }
  return result;
}

void sub_1000973EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100097404(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C0F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100097424(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C0F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100097478()
{
}

uint64_t sub_1000974C8(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1000974E0(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_27;
        }
        unsigned int v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        a1[2] = v14;
        a1[6] |= 1u;
        unint64_t v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 21)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          unsigned int v13 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v13) & 1) == 0) {
            return 0;
          }
          a1[3] = v13;
          a1[6] |= 2u;
          unint64_t v10 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 29)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }
      int v8 = TagFallback & 7;
      if (v8 == 5) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unsigned int v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    a1[4] = v12;
    a1[6] |= 4u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1000976A8(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 24);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(float *)(v4 + 12), a3);
    if ((*(_DWORD *)(v4 + 24) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(float *)(result + 8), a3);
  int v5 = *(_DWORD *)(v4 + 24);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return result;
  }
LABEL_7:
  float v6 = *(float *)(v4 + 16);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, v6, a3);
}

uint64_t sub_100097734(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 5;
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 5;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

float sub_10009776C(uint64_t a1, void *lpsrc)
{
  return sub_100097318(a1, (uint64_t)lpsrc);
}

uint64_t sub_100097810()
{
  return 1;
}

void *sub_100097818@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.SvMeasurementUsage");
}

void sub_100097828(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v30);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 88), *(_DWORD *)(a2 + 96) + *(_DWORD *)(a1 + 96));
  if (*(int *)(a2 + 96) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 88) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 100);
      uint64_t v7 = *(int *)(a1 + 96);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 104))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 88), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 100);
        }
        *(_DWORD *)(a1 + 100) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 88);
      *(_DWORD *)(a1 + 96) = v7 + 1;
      sub_100096428(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 96));
  }
  int v9 = *(_DWORD *)(a2 + 116);
  if (!(_BYTE)v9) {
    goto LABEL_21;
  }
  if (v9)
  {
    int v14 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 116) |= 1u;
    *(_DWORD *)(a1 + 8) = v14;
    int v9 = *(_DWORD *)(a2 + 116);
    if ((v9 & 2) == 0)
    {
LABEL_14:
      if ((v9 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_37;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_14;
  }
  int v15 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 116) |= 2u;
  *(_DWORD *)(a1 + 12) = v15;
  int v9 = *(_DWORD *)(a2 + 116);
  if ((v9 & 4) == 0)
  {
LABEL_15:
    if ((v9 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_42;
  }
LABEL_37:
  *(_DWORD *)(a1 + 116) |= 4u;
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    operator new();
  }
  uint64_t v17 = *(void *)(a2 + 16);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_1001145A0 + 16);
  }
  sub_100096D70(v16, v17);
  int v9 = *(_DWORD *)(a2 + 116);
  if ((v9 & 8) == 0)
  {
LABEL_16:
    if ((v9 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_42:
  *(_DWORD *)(a1 + 116) |= 8u;
  uint64_t v18 = *(void *)(a1 + 24);
  if (!v18) {
    operator new();
  }
  uint64_t v19 = *(void *)(a2 + 24);
  if (!v19) {
    uint64_t v19 = *(void *)(qword_1001145A0 + 24);
  }
  sub_100097318(v18, v19);
  int v9 = *(_DWORD *)(a2 + 116);
  if ((v9 & 0x10) == 0)
  {
LABEL_17:
    if ((v9 & 0x20) == 0) {
      goto LABEL_18;
    }
LABEL_52:
    *(_DWORD *)(a1 + 116) |= 0x20u;
    uint64_t v22 = *(void *)(a1 + 40);
    if (!v22) {
      operator new();
    }
    uint64_t v23 = *(void *)(a2 + 40);
    if (!v23) {
      uint64_t v23 = *(void *)(qword_1001145A0 + 40);
    }
    sub_100097318(v22, v23);
    int v9 = *(_DWORD *)(a2 + 116);
    if ((v9 & 0x40) == 0)
    {
LABEL_19:
      if ((v9 & 0x80) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    goto LABEL_57;
  }
LABEL_47:
  *(_DWORD *)(a1 + 116) |= 0x10u;
  uint64_t v20 = *(void *)(a1 + 32);
  if (!v20) {
    operator new();
  }
  uint64_t v21 = *(void *)(a2 + 32);
  if (!v21) {
    uint64_t v21 = *(void *)(qword_1001145A0 + 32);
  }
  sub_100097318(v20, v21);
  int v9 = *(_DWORD *)(a2 + 116);
  if ((v9 & 0x20) != 0) {
    goto LABEL_52;
  }
LABEL_18:
  if ((v9 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_57:
  int v24 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 116) |= 0x40u;
  *(_DWORD *)(a1 + 48) = v24;
  int v9 = *(_DWORD *)(a2 + 116);
  if ((v9 & 0x80) != 0)
  {
LABEL_20:
    int v10 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 116) |= 0x80u;
    *(_DWORD *)(a1 + 52) = v10;
    int v9 = *(_DWORD *)(a2 + 116);
  }
LABEL_21:
  if ((v9 & 0xFF00) == 0) {
    return;
  }
  if ((v9 & 0x100) != 0)
  {
    unsigned int v11 = *(_DWORD *)(a2 + 56);
    if (v11 >= 7) {
      __assert_rtn("set_sv_time_detection_method", "CLPGnssMeasApi.pb.h", 9229, "::CLP::LogEntry::PrivateData::MeasurementDetectionMethod_IsValid(value)");
    }
    *(_DWORD *)(a1 + 116) |= 0x100u;
    *(_DWORD *)(a1 + 56) = v11;
    int v9 = *(_DWORD *)(a2 + 116);
  }
  if ((v9 & 0x200) != 0)
  {
    unsigned int v12 = *(_DWORD *)(a2 + 60);
    if (v12 >= 7) {
      __assert_rtn("set_frequency_detection_method", "CLPGnssMeasApi.pb.h", 9252, "::CLP::LogEntry::PrivateData::MeasurementDetectionMethod_IsValid(value)");
    }
    *(_DWORD *)(a1 + 116) |= 0x200u;
    *(_DWORD *)(a1 + 60) = v12;
    int v9 = *(_DWORD *)(a2 + 116);
  }
  if ((v9 & 0x400) != 0)
  {
    int v25 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 116) |= 0x400u;
    *(_DWORD *)(a1 + 64) = v25;
    int v9 = *(_DWORD *)(a2 + 116);
    if ((v9 & 0x800) == 0)
    {
LABEL_30:
      if ((v9 & 0x1000) == 0) {
        goto LABEL_31;
      }
      goto LABEL_61;
    }
  }
  else if ((v9 & 0x800) == 0)
  {
    goto LABEL_30;
  }
  int v26 = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 116) |= 0x800u;
  *(_DWORD *)(a1 + 68) = v26;
  int v9 = *(_DWORD *)(a2 + 116);
  if ((v9 & 0x1000) == 0)
  {
LABEL_31:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v27 = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 116) |= 0x1000u;
  *(_DWORD *)(a1 + 72) = v27;
  int v9 = *(_DWORD *)(a2 + 116);
  if ((v9 & 0x2000) == 0)
  {
LABEL_32:
    if ((v9 & 0x4000) == 0) {
      return;
    }
    goto LABEL_33;
  }
LABEL_62:
  int v28 = *(const std::string **)(a2 + 80);
  *(_DWORD *)(a1 + 116) |= 0x2000u;
  unsigned int v29 = *(std::string **)(a1 + 80);
  if (v29 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v29, v28);
  if ((*(_DWORD *)(a2 + 116) & 0x4000) != 0)
  {
LABEL_33:
    int v13 = *(_DWORD *)(a2 + 76);
    *(_DWORD *)(a1 + 116) |= 0x4000u;
    *(_DWORD *)(a1 + 76) = v13;
  }
}

void sub_100097D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100097D74(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010C170;
  uint64_t v2 = *((void *)this + 10);
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1001145A0 != this)
  {
    uint64_t v4 = *((void *)this + 2);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 3);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)this + 4);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 5);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
  }
  int v8 = *((_DWORD *)this + 25);
  if (v8 >= 1)
  {
    for (uint64_t i = 0; i < v8; ++i)
    {
      uint64_t v10 = *(void *)(*((void *)this + 11) + 8 * i);
      if (v10)
      {
        (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
        int v8 = *((_DWORD *)this + 25);
      }
    }
  }
  if (*((void *)this + 11)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100097F34(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100097D74(a1);

  operator delete();
}

void sub_100097F6C()
{
}

uint64_t sub_100097FE0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 116);
  if ((_BYTE)v2)
  {
    *(void *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 32))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(_DWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 32) = 0;
        int v2 = *(_DWORD *)(result + 116);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v4 = *(void *)(result + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 24))
        {
          *(void *)(v4 + 8) = 0;
          *(_DWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 24) = 0;
        int v2 = *(_DWORD *)(result + 116);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t v5 = *(void *)(result + 32);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 24))
        {
          *(void *)(v5 + 8) = 0;
          *(_DWORD *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 24) = 0;
        int v2 = *(_DWORD *)(result + 116);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      uint64_t v6 = *(void *)(result + 40);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 24))
        {
          *(void *)(v6 + 8) = 0;
          *(_DWORD *)(v6 + 16) = 0;
        }
        *(_DWORD *)(v6 + 24) = 0;
        int v2 = *(_DWORD *)(result + 116);
      }
    }
    *(void *)(result + 48) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(result + 56) = 0;
    *(void *)(result + 64) = 0;
    *(_DWORD *)(result + 72) = 0;
    if ((v2 & 0x2000) != 0)
    {
      uint64_t v7 = *(void *)(result + 80);
      if ((_UNKNOWN *)v7 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v7 + 23) < 0)
        {
          **(unsigned char **)uint64_t v7 = 0;
          *(void *)(v7 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v7 = 0;
          *(unsigned char *)(v7 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(result + 76) = 0;
  }
  if (*(int *)(result + 96) >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      uint64_t v9 = *(void *)(*(void *)(v1 + 88) + 8 * v8);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 32))(v9);
      ++v8;
    }
    while (v8 < *(int *)(v1 + 96));
  }
  *(_DWORD *)(v1 + 96) = 0;
  *(_DWORD *)(v1 + 116) = 0;
  return result;
}

uint64_t sub_100098144(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 48);
  uint64_t v6 = (unsigned int *)(a1 + 52);
  uint64_t v7 = (unsigned int *)(a1 + 76);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 88);
  while (2)
  {
    uint64_t v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if (v11 != 5) {
          goto LABEL_51;
        }
        unsigned int v88 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v88) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 8) = v88;
        *(_DWORD *)(a1 + 116) |= 1u;
        unsigned int v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 21) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
        goto LABEL_15;
      case 2u:
        int v11 = TagFallback & 7;
        if (v11 != 5) {
          goto LABEL_51;
        }
LABEL_15:
        unsigned int v88 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v88) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 12) = v88;
        int v13 = *(_DWORD *)(a1 + 116) | 2;
        *(_DWORD *)(a1 + 116) = v13;
        int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 26) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_21:
        *(_DWORD *)(a1 + 116) = v13 | 4;
        uint64_t v15 = *(void *)(a1 + 16);
        if (!v15) {
          operator new();
        }
        unsigned int v88 = 0;
        uint64_t v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88))return 0; {
        }
          }
        else
        {
          unsigned int v88 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        int v28 = *((_DWORD *)this + 14);
        int v29 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v28 + 1;
        if (v28 >= v29) {
          return 0;
        }
        int v30 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        if (!sub_100096F60(v15, this, v31) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v30);
        int v32 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v32, 1);
        int v34 = v32 - 1;
        if (v34 < 0 == v33) {
          *((_DWORD *)this + 14) = v34;
        }
        int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 34) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_63:
        *(_DWORD *)(a1 + 116) |= 8u;
        unsigned int v36 = *(_DWORD **)(a1 + 24);
        if (!v36) {
          operator new();
        }
        unsigned int v88 = 0;
        int v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88))return 0; {
        }
          }
        else
        {
          unsigned int v88 = *v37;
          *((void *)this + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        if (!sub_1000974E0(v36, this, v41) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v42 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v33) {
          *((_DWORD *)this + 14) = v43;
        }
        int v44 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v44 >= *((void *)this + 2) || *v44 != 42) {
          continue;
        }
        *((void *)this + 1) = v44 + 1;
LABEL_77:
        *(_DWORD *)(a1 + 116) |= 0x10u;
        unsigned int v45 = *(_DWORD **)(a1 + 32);
        if (!v45) {
          operator new();
        }
        unsigned int v88 = 0;
        int v46 = (char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88))return 0; {
        }
          }
        else
        {
          unsigned int v88 = *v46;
          *((void *)this + 1) = v46 + 1;
        }
        int v47 = *((_DWORD *)this + 14);
        int v48 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v47 + 1;
        if (v47 >= v48) {
          return 0;
        }
        int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        if (!sub_1000974E0(v45, this, v50) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
        int v51 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v51, 1);
        int v52 = v51 - 1;
        if (v52 < 0 == v33) {
          *((_DWORD *)this + 14) = v52;
        }
        int v53 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v53 >= *((void *)this + 2) || *v53 != 50) {
          continue;
        }
        *((void *)this + 1) = v53 + 1;
LABEL_91:
        *(_DWORD *)(a1 + 116) |= 0x20u;
        unsigned int v54 = *(_DWORD **)(a1 + 40);
        if (!v54) {
          operator new();
        }
        unsigned int v88 = 0;
        int v55 = (char *)*((void *)this + 1);
        if ((unint64_t)v55 >= *((void *)this + 2) || *v55 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88))return 0; {
        }
          }
        else
        {
          unsigned int v88 = *v55;
          *((void *)this + 1) = v55 + 1;
        }
        int v56 = *((_DWORD *)this + 14);
        int v57 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v56 + 1;
        if (v56 >= v57) {
          return 0;
        }
        int v58 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        if (!sub_1000974E0(v54, this, v59) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v58);
        int v60 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v60, 1);
        int v61 = v60 - 1;
        if (v61 < 0 == v33) {
          *((_DWORD *)this + 14) = v61;
        }
        int v62 = (unsigned char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v62 >= v17 || *v62 != 56) {
          continue;
        }
        uint64_t v18 = v62 + 1;
        *((void *)this + 1) = v18;
LABEL_105:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v63 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v18;
          unsigned int v63 = v18 + 1;
          *((void *)this + 1) = v63;
        }
        *(_DWORD *)(a1 + 116) |= 0x40u;
        if ((unint64_t)v63 >= v17 || *v63 != 64) {
          continue;
        }
        uint64_t v19 = v63 + 1;
        *((void *)this + 1) = v19;
LABEL_113:
        if ((unint64_t)v19 >= v17 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v65 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v19;
          int v65 = v19 + 1;
          *((void *)this + 1) = v65;
        }
        *(_DWORD *)(a1 + 116) |= 0x80u;
        if ((unint64_t)v65 >= v17 || *v65 != 72) {
          continue;
        }
        uint64_t v20 = v65 + 1;
        *((void *)this + 1) = v20;
LABEL_121:
        unsigned int v88 = 0;
        if ((unint64_t)v20 >= v17 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88);
          if (!result) {
            return result;
          }
          unsigned int v66 = v88;
        }
        else
        {
          unsigned int v66 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        if (v66 <= 6)
        {
          *(_DWORD *)(a1 + 116) |= 0x100u;
          *(_DWORD *)(a1 + 56) = v66;
        }
        uint64_t v67 = (unsigned char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        if ((unint64_t)v67 >= v21 || *v67 != 80) {
          continue;
        }
        uint64_t v22 = v67 + 1;
        *((void *)this + 1) = v22;
LABEL_131:
        unsigned int v88 = 0;
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88);
          if (!result) {
            return result;
          }
          unsigned int v68 = v88;
        }
        else
        {
          unsigned int v68 = *v22;
          *((void *)this + 1) = v22 + 1;
        }
        if (v68 <= 6)
        {
          *(_DWORD *)(a1 + 116) |= 0x200u;
          *(_DWORD *)(a1 + 60) = v68;
        }
        int v69 = (unsigned char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        if ((unint64_t)v69 >= v23 || *v69 != 88) {
          continue;
        }
        int v24 = v69 + 1;
        *((void *)this + 1) = v24;
LABEL_141:
        unsigned int v88 = 0;
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88);
          if (!result) {
            return result;
          }
          unsigned int v70 = v88;
          int v71 = (unsigned char *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }
        else
        {
          unsigned int v70 = *v24;
          int v71 = v24 + 1;
          *((void *)this + 1) = v71;
        }
        *(_DWORD *)(a1 + 64) = v70;
        *(_DWORD *)(a1 + 116) |= 0x400u;
        if ((unint64_t)v71 >= v23 || *v71 != 101) {
          continue;
        }
        *((void *)this + 1) = v71 + 1;
LABEL_149:
        unsigned int v88 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v88) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 68) = v88;
        *(_DWORD *)(a1 + 116) |= 0x800u;
        unsigned int v72 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v72 >= *((void *)this + 2) || *v72 != 109) {
          continue;
        }
        *((void *)this + 1) = v72 + 1;
LABEL_153:
        unsigned int v88 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v88))
        {
          *(_DWORD *)(a1 + 72) = v88;
          int v25 = *(_DWORD *)(a1 + 116) | 0x1000;
          *(_DWORD *)(a1 + 116) = v25;
          int v73 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v73 < *((void *)this + 2) && *v73 == 114)
          {
            *((void *)this + 1) = v73 + 1;
LABEL_157:
            *(_DWORD *)(a1 + 116) = v25 | 0x2000;
            if (*(_UNKNOWN **)(a1 + 80) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
              operator new();
            }
            uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
            if (!result) {
              return result;
            }
            int v74 = (unsigned char *)*((void *)this + 1);
            unint64_t v26 = *((void *)this + 2);
            if ((unint64_t)v74 < v26 && *v74 == 120)
            {
              int v27 = v74 + 1;
              *((void *)this + 1) = v27;
LABEL_163:
              if ((unint64_t)v27 >= v26 || (char)*v27 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
                if (!result) {
                  return result;
                }
                v75 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v26 = *((void *)this + 2);
              }
              else
              {
                unsigned int *v7 = *v27;
                v75 = v27 + 1;
                *((void *)this + 1) = v75;
              }
              *(_DWORD *)(a1 + 116) |= 0x4000u;
              if ((int)v26 - (int)v75 >= 2 && *v75 == 130 && v75[1] == 1)
              {
                do
                {
                  *((void *)this + 1) = v75 + 2;
LABEL_172:
                  int v76 = *(_DWORD *)(a1 + 100);
                  uint64_t v77 = *(int *)(a1 + 96);
                  if ((int)v77 >= v76)
                  {
                    if (v76 == *(_DWORD *)(a1 + 104))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v76 + 1);
                      int v76 = *(_DWORD *)(a1 + 100);
                    }
                    *(_DWORD *)(a1 + 100) = v76 + 1;
                    operator new();
                  }
                  uint64_t v78 = *(void *)(a1 + 88);
                  *(_DWORD *)(a1 + 96) = v77 + 1;
                  uint64_t v79 = *(void *)(v78 + 8 * v77);
                  unsigned int v88 = 0;
                  int v80 = (char *)*((void *)this + 1);
                  if ((unint64_t)v80 >= *((void *)this + 2) || *v80 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88))return 0; {
                  }
                    }
                  else
                  {
                    unsigned int v88 = *v80;
                    *((void *)this + 1) = v80 + 1;
                  }
                  int v81 = *((_DWORD *)this + 14);
                  int v82 = *((_DWORD *)this + 15);
                  *((_DWORD *)this + 14) = v81 + 1;
                  if (v81 >= v82) {
                    return 0;
                  }
                  int v83 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
                  if (!sub_1000967D0(v79, this, v84) || !*((unsigned char *)this + 36)) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v83);
                  int v85 = *((_DWORD *)this + 14);
                  BOOL v33 = __OFSUB__(v85, 1);
                  int v86 = v85 - 1;
                  if (v86 < 0 == v33) {
                    *((_DWORD *)this + 14) = v86;
                  }
                  v75 = (unsigned __int8 *)*((void *)this + 1);
                  int v87 = (unsigned __int8 *)*((void *)this + 2);
                }
                while ((int)v87 - (int)v75 > 1 && *v75 == 130 && v75[1] == 1);
                if (v75 == v87 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                {
                  *((_DWORD *)this + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)this + 36) = 1;
                  return result;
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_51;
        }
        int v13 = *(_DWORD *)(a1 + 116);
        goto LABEL_21;
      case 4u:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_63;
        }
        goto LABEL_51;
      case 5u:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_77;
        }
        goto LABEL_51;
      case 6u:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_91;
        }
        goto LABEL_51;
      case 7u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_51;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_105;
      case 8u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_51;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_113;
      case 9u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_51;
        }
        uint64_t v20 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_121;
      case 0xAu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_51;
        }
        uint64_t v22 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_131;
      case 0xBu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_51;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_141;
      case 0xCu:
        int v11 = TagFallback & 7;
        if (v11 == 5) {
          goto LABEL_149;
        }
        goto LABEL_51;
      case 0xDu:
        int v11 = TagFallback & 7;
        if (v11 == 5) {
          goto LABEL_153;
        }
        goto LABEL_51;
      case 0xEu:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_51;
        }
        int v25 = *(_DWORD *)(a1 + 116);
        goto LABEL_157;
      case 0xFu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_51;
        }
        int v27 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
        goto LABEL_163;
      case 0x10u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_51;
        }
        goto LABEL_172;
      default:
        int v11 = TagFallback & 7;
LABEL_51:
        if (v11 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100098D38(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 116);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(result + 8), a3);
    int v6 = *(_DWORD *)(v5 + 116);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 12), a3);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_23:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1001145A0 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_29;
  }
LABEL_26:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_1001145A0 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_32;
  }
LABEL_29:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1001145A0 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_35;
  }
LABEL_32:
  uint64_t v11 = *(void *)(v5 + 40);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1001145A0 + 40);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 48), a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 52), a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 56), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 60), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 64), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, *(float *)(v5 + 68), a3);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (int)a2, *(float *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_42:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  if ((*(_DWORD *)(v5 + 116) & 0x4000) != 0) {
LABEL_16:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(_DWORD *)(v5 + 76), a2, a4);
LABEL_17:
  if (*(int *)(v5 + 96) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(void *)(*(void *)(v5 + 88) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 96));
  }
  return result;
}

uint64_t sub_100098F7C(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 116);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_57;
  }
  if ((v3 & 2) != 0) {
    int v4 = ((v3 << 31 >> 31) & 5) + 5;
  }
  else {
    int v4 = (v3 << 31 >> 31) & 5;
  }
  if ((v3 & 4) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1001145A0 + 16);
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000971DC(v5, a2);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    }
    else {
      int v8 = 1;
    }
    v4 += v7 + v8 + 1;
    int v3 = *(_DWORD *)(a1 + 116);
    if ((v3 & 8) == 0)
    {
LABEL_7:
      if ((v3 & 0x10) == 0) {
        goto LABEL_8;
      }
      goto LABEL_29;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a1 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_1001145A0 + 24);
  }
  int v10 = *(unsigned __int8 *)(v9 + 24);
  int v11 = (v10 << 31 >> 31) & 5;
  if ((v10 & 2) != 0) {
    v11 += 5;
  }
  if ((v10 & 4) != 0) {
    v11 += 5;
  }
  if (*(unsigned char *)(v9 + 24)) {
    int v12 = v11;
  }
  else {
    int v12 = 0;
  }
  *(_DWORD *)(v9 + 20) = v12;
  v4 += v12 + 2;
  int v3 = *(_DWORD *)(a1 + 116);
  if ((v3 & 0x10) == 0)
  {
LABEL_8:
    if ((v3 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_39;
  }
LABEL_29:
  uint64_t v13 = *(void *)(a1 + 32);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_1001145A0 + 32);
  }
  int v14 = *(unsigned __int8 *)(v13 + 24);
  int v15 = (v14 << 31 >> 31) & 5;
  if ((v14 & 2) != 0) {
    v15 += 5;
  }
  if ((v14 & 4) != 0) {
    v15 += 5;
  }
  if (*(unsigned char *)(v13 + 24)) {
    int v16 = v15;
  }
  else {
    int v16 = 0;
  }
  *(_DWORD *)(v13 + 20) = v16;
  v4 += v16 + 2;
  int v3 = *(_DWORD *)(a1 + 116);
  if ((v3 & 0x20) == 0)
  {
LABEL_9:
    if ((v3 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_49;
  }
LABEL_39:
  uint64_t v17 = *(void *)(a1 + 40);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_1001145A0 + 40);
  }
  int v18 = *(unsigned __int8 *)(v17 + 24);
  int v19 = (v18 << 31 >> 31) & 5;
  if ((v18 & 2) != 0) {
    v19 += 5;
  }
  if ((v18 & 4) != 0) {
    v19 += 5;
  }
  if (*(unsigned char *)(v17 + 24)) {
    int v20 = v19;
  }
  else {
    int v20 = 0;
  }
  *(_DWORD *)(v17 + 20) = v20;
  v4 += v20 + 2;
  int v3 = *(_DWORD *)(a1 + 116);
  if ((v3 & 0x40) == 0)
  {
LABEL_10:
    if ((v3 & 0x80) == 0) {
      goto LABEL_57;
    }
    goto LABEL_53;
  }
LABEL_49:
  unint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v21 >= 0x80)
  {
    int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2);
    int v3 = *(_DWORD *)(a1 + 116);
  }
  else
  {
    int v22 = 1;
  }
  v4 += v22 + 1;
  if ((v3 & 0x80) != 0)
  {
LABEL_53:
    unint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
    if (v23 >= 0x80)
    {
      int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 116);
    }
    else
    {
      int v24 = 2;
    }
    v4 += v24;
  }
LABEL_57:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_100;
  }
  if ((v3 & 0x100) == 0)
  {
    if ((v3 & 0x200) == 0) {
      goto LABEL_60;
    }
LABEL_68:
    int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if ((v27 & 0x80000000) != 0)
    {
      int v28 = 11;
    }
    else if (v27 >= 0x80)
    {
      int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 116);
    }
    else
    {
      int v28 = 2;
    }
    v4 += v28;
    if ((v3 & 0x400) == 0) {
      goto LABEL_80;
    }
    goto LABEL_74;
  }
  int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if ((v25 & 0x80000000) != 0)
  {
    int v26 = 11;
  }
  else if (v25 >= 0x80)
  {
    int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 116);
  }
  else
  {
    int v26 = 2;
  }
  v4 += v26;
  if ((v3 & 0x200) != 0) {
    goto LABEL_68;
  }
LABEL_60:
  if ((v3 & 0x400) != 0)
  {
LABEL_74:
    int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if ((v29 & 0x80000000) != 0)
    {
      int v30 = 11;
    }
    else if (v29 >= 0x80)
    {
      int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 116);
    }
    else
    {
      int v30 = 2;
    }
    v4 += v30;
  }
LABEL_80:
  int v31 = v4 + 5;
  if ((v3 & 0x800) == 0) {
    int v31 = v4;
  }
  if ((v3 & 0x1000) != 0) {
    int v4 = v31 + 5;
  }
  else {
    int v4 = v31;
  }
  if ((v3 & 0x2000) != 0)
  {
    uint64_t v32 = *(void *)(a1 + 80);
    int v33 = *(unsigned __int8 *)(v32 + 23);
    char v34 = v33;
    uint64_t v35 = *(void *)(v32 + 8);
    if ((v33 & 0x80u) == 0) {
      unint64_t v36 = *(unsigned __int8 *)(v32 + 23);
    }
    else {
      unint64_t v36 = v35;
    }
    if (v36 >= 0x80)
    {
      int v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v36, a2);
      int v33 = *(unsigned __int8 *)(v32 + 23);
      uint64_t v35 = *(void *)(v32 + 8);
      int v3 = *(_DWORD *)(a1 + 116);
      char v34 = *(unsigned char *)(v32 + 23);
    }
    else
    {
      int v37 = 1;
    }
    if (v34 < 0) {
      int v33 = v35;
    }
    v4 += v37 + v33 + 1;
  }
  if ((v3 & 0x4000) != 0)
  {
    int v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 76);
    if (v38 >= 0x80) {
      int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38, a2) + 1;
    }
    else {
      int v39 = 2;
    }
    v4 += v39;
  }
LABEL_100:
  int v40 = *(_DWORD *)(a1 + 96);
  uint64_t v41 = (v4 + 2 * v40);
  if (v40 >= 1)
  {
    uint64_t v42 = 0;
    do
      uint64_t v41 = v41 + sub_100096BDC(*(void *)(*(void *)(a1 + 88) + 8 * v42++)) + 1;
    while (v42 < *(int *)(a1 + 96));
  }
  *(_DWORD *)(a1 + 112) = v41;
  return v41;
}

void sub_10009930C(uint64_t a1, void *lpsrc)
{
  sub_100097828(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000993B0()
{
  return 1;
}

void *sub_1000993B8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.MeasurementExtension");
}

void sub_1000993C8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v27);
  }
  int v4 = *(_DWORD *)(a2 + 112);
  if (!(_BYTE)v4) {
    goto LABEL_41;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 112) |= 1u;
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1001145A8 + 8);
    }
    sub_10008EA18(v5, v6);
    int v4 = *(_DWORD *)(a2 + 112);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 112) |= 2u;
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7) {
    operator new();
  }
  uint64_t v8 = *(void *)(a2 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1001145A8 + 16);
  }
  sub_100093080(v7, v8);
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v9 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 112) |= 4u;
  *(void *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v10 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 112) |= 8u;
  *(void *)(a1 + 32) = v10;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_26:
    *(_DWORD *)(a1 + 112) |= 0x20u;
    uint64_t v12 = *(void *)(a1 + 48);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = *(void *)(a2 + 48);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_1001145A8 + 48);
    }
    sub_100094C4C(v12, v13);
    int v4 = *(_DWORD *)(a2 + 112);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_41;
      }
      goto LABEL_36;
    }
    goto LABEL_31;
  }
LABEL_25:
  uint64_t v11 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 112) |= 0x10u;
  *(void *)(a1 + 40) = v11;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x20) != 0) {
    goto LABEL_26;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_31:
  *(_DWORD *)(a1 + 112) |= 0x40u;
  uint64_t v14 = *(void *)(a1 + 56);
  if (!v14) {
    operator new();
  }
  uint64_t v15 = *(void *)(a2 + 56);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_1001145A8 + 56);
  }
  sub_100095188(v14, v15);
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x80) != 0)
  {
LABEL_36:
    *(_DWORD *)(a1 + 112) |= 0x80u;
    uint64_t v16 = *(void *)(a1 + 64);
    if (!v16) {
      operator new();
    }
    uint64_t v17 = *(void *)(a2 + 64);
    if (!v17) {
      uint64_t v17 = *(void *)(qword_1001145A8 + 64);
    }
    sub_100095CF0(v16, v17);
    int v4 = *(_DWORD *)(a2 + 112);
  }
LABEL_41:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 112) |= 0x100u;
    uint64_t v18 = *(void *)(a1 + 72);
    if (!v18) {
      operator new();
    }
    uint64_t v19 = *(void *)(a2 + 72);
    if (!v19) {
      uint64_t v19 = *(void *)(qword_1001145A8 + 72);
    }
    sub_100097828(v18, v19);
    int v4 = *(_DWORD *)(a2 + 112);
    if ((v4 & 0x200) == 0)
    {
LABEL_44:
      if ((v4 & 0x400) == 0) {
        goto LABEL_45;
      }
      goto LABEL_55;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_44;
  }
  int v20 = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 112) |= 0x200u;
  *(_DWORD *)(a1 + 80) = v20;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x400) == 0)
  {
LABEL_45:
    if ((v4 & 0x800) == 0) {
      goto LABEL_46;
    }
    goto LABEL_57;
  }
LABEL_55:
  unsigned int v21 = *(_DWORD *)(a2 + 84);
  if (v21 >= 5) {
    __assert_rtn("set_multipath_indicator", "CLPGnssMeasApi.pb.h", 9802, "::CLP::LogEntry::PrivateData::MultipathIndicator_IsValid(value)");
  }
  *(_DWORD *)(a1 + 112) |= 0x400u;
  *(_DWORD *)(a1 + 84) = v21;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x800) == 0)
  {
LABEL_46:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_47;
    }
LABEL_62:
    char v24 = *(unsigned char *)(a2 + 104);
    *(_DWORD *)(a1 + 112) |= 0x1000u;
    *(unsigned char *)(a1 + 104) = v24;
    if ((*(_DWORD *)(a2 + 112) & 0x2000) == 0) {
      return;
    }
    goto LABEL_63;
  }
LABEL_57:
  *(_DWORD *)(a1 + 112) |= 0x800u;
  uint64_t v22 = *(void *)(a1 + 88);
  if (!v22) {
    operator new();
  }
  uint64_t v23 = *(void *)(a2 + 88);
  if (!v23) {
    uint64_t v23 = *(void *)(qword_1001145A8 + 88);
  }
  sub_100095188(v22, v23);
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x1000) != 0) {
    goto LABEL_62;
  }
LABEL_47:
  if ((v4 & 0x2000) == 0) {
    return;
  }
LABEL_63:
  *(_DWORD *)(a1 + 112) |= 0x2000u;
  uint64_t v25 = *(void *)(a1 + 96);
  if (!v25) {
    operator new();
  }
  uint64_t v26 = *(void *)(a2 + 96);
  if (!v26) {
    uint64_t v26 = *(void *)(qword_1001145A8 + 96);
  }
  sub_1000956C4(v25, v26);
}

void sub_100099944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_10009995C(void *result)
{
  if ((void *)qword_1001145A8 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[6];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[7];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[8];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[9];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = v1[11];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t result = (void *)v1[12];
    if (result)
    {
      uint64_t v9 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v9();
    }
  }
  return result;
}

void sub_100099B04(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C1E8;
  sub_10009995C(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100099B58(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C1E8;
  sub_10009995C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100099BC0()
{
}

uint64_t sub_100099C2C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 112);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_10008EC54(result);
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(v1 + 16);
      if (result)
      {
        uint64_t result = sub_100093920(result);
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }
    *(void *)(v1 + 24) = 0;
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    if ((v2 & 0x20) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 48);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 32))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(unsigned char *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 32) = 0;
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 56);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 32))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(unsigned char *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 32) = 0;
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }
    if ((v2 & 0x80) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 64);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 48))
        {
          *(unsigned char *)(v5 + 40) = 0;
          *(_OWORD *)(v5 + 24) = 0u;
          *(_OWORD *)(v5 + 8) = 0u;
        }
        *(_DWORD *)(v5 + 48) = 0;
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      uint64_t result = *(void *)(v1 + 72);
      if (result)
      {
        uint64_t result = sub_100097FE0(result);
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }
    *(void *)(v1 + 80) = 0;
    if ((v2 & 0x800) != 0)
    {
      uint64_t v6 = *(void *)(v1 + 88);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 32))
        {
          *(void *)(v6 + 8) = 0;
          *(void *)(v6 + 16) = 0;
          *(unsigned char *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 32) = 0;
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }
    *(unsigned char *)(v1 + 104) = 0;
    if ((v2 & 0x2000) != 0)
    {
      uint64_t v7 = *(void *)(v1 + 96);
      if (v7)
      {
        if (*(unsigned char *)(v7 + 32))
        {
          *(void *)(v7 + 8) = 0;
          *(void *)(v7 + 16) = 0;
          *(_WORD *)(v7 + 24) = 0;
        }
        *(_DWORD *)(v7 + 32) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 112) = 0;
  return result;
}

uint64_t sub_100099D68(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 24);
  uint64_t v6 = (unint64_t *)(a1 + 32);
  uint64_t v7 = (unint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 < *((void *)this + 2) && (*v8 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 112) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        if (!v11) {
          operator new();
        }
        unsigned int v102 = 0;
        uint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        int v23 = *((_DWORD *)this + 14);
        int v24 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v23 + 1;
        if (v23 >= v24) {
          return 0;
        }
        int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_10008EC94(v11, this, v26) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
        int v27 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v27, 1);
        int v29 = v27 - 1;
        if (v29 < 0 == v28) {
          *((_DWORD *)this + 14) = v29;
        }
        int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 18) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
        goto LABEL_53;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_41;
        }
LABEL_53:
        *(_DWORD *)(a1 + 112) |= 2u;
        uint64_t v31 = *(void *)(a1 + 16);
        if (!v31) {
          operator new();
        }
        unsigned int v102 = 0;
        uint64_t v32 = (char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v32;
          *((void *)this + 1) = v32 + 1;
        }
        int v33 = *((_DWORD *)this + 14);
        int v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100093A98(v31, this, v36) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        int v37 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v28) {
          *((_DWORD *)this + 14) = v38;
        }
        int v39 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v39 >= v13 || *v39 != 24) {
          continue;
        }
        uint64_t v14 = v39 + 1;
        *((void *)this + 1) = v14;
LABEL_67:
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v14;
          int v40 = v14 + 1;
          *((void *)this + 1) = v40;
        }
        *(_DWORD *)(a1 + 112) |= 4u;
        if ((unint64_t)v40 >= v13 || *v40 != 32) {
          continue;
        }
        uint64_t v15 = v40 + 1;
        *((void *)this + 1) = v15;
LABEL_75:
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v42 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v15;
          uint64_t v42 = v15 + 1;
          *((void *)this + 1) = v42;
        }
        *(_DWORD *)(a1 + 112) |= 8u;
        if ((unint64_t)v42 >= v13 || *v42 != 40) {
          continue;
        }
        uint64_t v16 = v42 + 1;
        *((void *)this + 1) = v16;
LABEL_83:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v43 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v7 = *v16;
          int v43 = v16 + 1;
          *((void *)this + 1) = v43;
        }
        int v17 = *(_DWORD *)(a1 + 112) | 0x10;
        *(_DWORD *)(a1 + 112) = v17;
        if ((unint64_t)v43 >= v13 || *v43 != 50) {
          continue;
        }
        *((void *)this + 1) = v43 + 1;
LABEL_91:
        *(_DWORD *)(a1 + 112) = v17 | 0x20;
        uint64_t v44 = *(void *)(a1 + 48);
        if (!v44) {
          operator new();
        }
        unsigned int v102 = 0;
        unsigned int v45 = (char *)*((void *)this + 1);
        if ((unint64_t)v45 >= *((void *)this + 2) || *v45 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v45;
          *((void *)this + 1) = v45 + 1;
        }
        int v46 = *((_DWORD *)this + 14);
        int v47 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v46 + 1;
        if (v46 >= v47) {
          return 0;
        }
        int v48 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100094E18(v44, this, v49) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v48);
        int v50 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v50, 1);
        int v51 = v50 - 1;
        if (v51 < 0 == v28) {
          *((_DWORD *)this + 14) = v51;
        }
        int v52 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v52 >= *((void *)this + 2) || *v52 != 58) {
          continue;
        }
        *((void *)this + 1) = v52 + 1;
LABEL_105:
        *(_DWORD *)(a1 + 112) |= 0x40u;
        uint64_t v53 = *(void *)(a1 + 56);
        if (!v53) {
          operator new();
        }
        unsigned int v102 = 0;
        unsigned int v54 = (char *)*((void *)this + 1);
        if ((unint64_t)v54 >= *((void *)this + 2) || *v54 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v54;
          *((void *)this + 1) = v54 + 1;
        }
        int v55 = *((_DWORD *)this + 14);
        int v56 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v55 + 1;
        if (v55 >= v56) {
          return 0;
        }
        int v57 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100095354(v53, this, v58) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v57);
        int v59 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v59, 1);
        int v60 = v59 - 1;
        if (v60 < 0 == v28) {
          *((_DWORD *)this + 14) = v60;
        }
        int v61 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v61 >= *((void *)this + 2) || *v61 != 66) {
          continue;
        }
        *((void *)this + 1) = v61 + 1;
LABEL_119:
        *(_DWORD *)(a1 + 112) |= 0x80u;
        uint64_t v62 = *(void *)(a1 + 64);
        if (!v62) {
          operator new();
        }
        unsigned int v102 = 0;
        unsigned int v63 = (char *)*((void *)this + 1);
        if ((unint64_t)v63 >= *((void *)this + 2) || *v63 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v63;
          *((void *)this + 1) = v63 + 1;
        }
        int v64 = *((_DWORD *)this + 14);
        int v65 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v64 + 1;
        if (v64 >= v65) {
          return 0;
        }
        int v66 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100095F0C(v62, this, v67) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v66);
        int v68 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v68, 1);
        int v69 = v68 - 1;
        if (v69 < 0 == v28) {
          *((_DWORD *)this + 14) = v69;
        }
        unsigned int v70 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v70 >= *((void *)this + 2) || *v70 != 74) {
          continue;
        }
        *((void *)this + 1) = v70 + 1;
LABEL_133:
        *(_DWORD *)(a1 + 112) |= 0x100u;
        uint64_t v71 = *(void *)(a1 + 72);
        if (!v71) {
          operator new();
        }
        unsigned int v102 = 0;
        unsigned int v72 = (char *)*((void *)this + 1);
        if ((unint64_t)v72 >= *((void *)this + 2) || *v72 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v72;
          *((void *)this + 1) = v72 + 1;
        }
        int v73 = *((_DWORD *)this + 14);
        int v74 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v73 + 1;
        if (v73 >= v74) {
          return 0;
        }
        int v75 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100098144(v71, this, v76) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v75);
        int v77 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v77, 1);
        int v78 = v77 - 1;
        if (v78 < 0 == v28) {
          *((_DWORD *)this + 14) = v78;
        }
        uint64_t v79 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v79 >= *((void *)this + 2) || *v79 != 85) {
          continue;
        }
        *((void *)this + 1) = v79 + 1;
LABEL_147:
        unsigned int v102 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v102) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 80) = v102;
        *(_DWORD *)(a1 + 112) |= 0x200u;
        int v80 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v80 >= v18 || *v80 != 88) {
          continue;
        }
        uint64_t v19 = v80 + 1;
        *((void *)this + 1) = v19;
LABEL_151:
        unsigned int v102 = 0;
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102);
          if (!result) {
            return result;
          }
          unsigned int v81 = v102;
        }
        else
        {
          unsigned int v81 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        if (v81 <= 4)
        {
          *(_DWORD *)(a1 + 112) |= 0x400u;
          *(_DWORD *)(a1 + 84) = v81;
        }
        int v82 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v82 >= *((void *)this + 2) || *v82 != 98) {
          continue;
        }
        *((void *)this + 1) = v82 + 1;
LABEL_161:
        *(_DWORD *)(a1 + 112) |= 0x800u;
        uint64_t v83 = *(void *)(a1 + 88);
        if (!v83) {
          operator new();
        }
        unsigned int v102 = 0;
        unsigned int v84 = (char *)*((void *)this + 1);
        if ((unint64_t)v84 >= *((void *)this + 2) || *v84 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v84;
          *((void *)this + 1) = v84 + 1;
        }
        int v85 = *((_DWORD *)this + 14);
        int v86 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v85 + 1;
        if (v85 >= v86) {
          return 0;
        }
        int v87 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100095354(v83, this, v88) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v87);
        int v89 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v89, 1);
        int v90 = v89 - 1;
        if (v90 < 0 == v28) {
          *((_DWORD *)this + 14) = v90;
        }
        int v91 = (unsigned char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        if ((unint64_t)v91 >= v20 || *v91 != 104) {
          continue;
        }
        unsigned int v21 = v91 + 1;
        *((void *)this + 1) = v21;
LABEL_175:
        unsigned int v102 = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102);
          if (!result) {
            return result;
          }
          unsigned int v92 = v102;
          v93 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          unsigned int v92 = *v21;
          v93 = v21 + 1;
          *((void *)this + 1) = v93;
        }
        *(unsigned char *)(a1 + 104) = v92 != 0;
        int v22 = *(_DWORD *)(a1 + 112) | 0x1000;
        *(_DWORD *)(a1 + 112) = v22;
        if ((unint64_t)v93 >= v20 || *v93 != 114) {
          continue;
        }
        *((void *)this + 1) = v93 + 1;
LABEL_183:
        *(_DWORD *)(a1 + 112) = v22 | 0x2000;
        uint64_t v94 = *(void *)(a1 + 96);
        if (!v94) {
          operator new();
        }
        unsigned int v102 = 0;
        unsigned int v95 = (char *)*((void *)this + 1);
        if ((unint64_t)v95 >= *((void *)this + 2) || *v95 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v95;
          *((void *)this + 1) = v95 + 1;
        }
        int v96 = *((_DWORD *)this + 14);
        int v97 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v96 + 1;
        if (v96 >= v97) {
          return 0;
        }
        int v98 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_1000958B0(v94, this, v99) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v98);
        int v100 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v100, 1);
        int v101 = v100 - 1;
        if (v101 < 0 == v28) {
          *((_DWORD *)this + 14) = v101;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_67;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_75;
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_83;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_41;
        }
        int v17 = *(_DWORD *)(a1 + 112);
        goto LABEL_91;
      case 7u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_105;
        }
        goto LABEL_41;
      case 8u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_119;
        }
        goto LABEL_41;
      case 9u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_133;
        }
        goto LABEL_41;
      case 0xAu:
        int v10 = TagFallback & 7;
        if (v10 == 5) {
          goto LABEL_147;
        }
        goto LABEL_41;
      case 0xBu:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_151;
      case 0xCu:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_161;
        }
        goto LABEL_41;
      case 0xDu:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_175;
      case 0xEu:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_41;
        }
        int v22 = *(_DWORD *)(a1 + 112);
        goto LABEL_183;
      default:
        int v10 = TagFallback & 7;
LABEL_41:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10009AA78(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 112);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1001145A8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 112);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1001145A8 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 24), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 32), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(v5 + 40), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }
LABEL_25:
  uint64_t v9 = *(void *)(v5 + 48);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_1001145A8 + 48);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_28:
  uint64_t v10 = *(void *)(v5 + 56);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1001145A8 + 56);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_34;
  }
LABEL_31:
  uint64_t v11 = *(void *)(v5 + 64);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1001145A8 + 64);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_37;
  }
LABEL_34:
  uint64_t v12 = *(void *)(v5 + 72);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_1001145A8 + 72);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(float *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 84), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
LABEL_42:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned __int8 *)(v5 + 104), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 112) & 0x2000) == 0) {
      return result;
    }
    goto LABEL_43;
  }
LABEL_39:
  uint64_t v13 = *(void *)(v5 + 88);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_1001145A8 + 88);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v13, a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x1000) != 0) {
    goto LABEL_42;
  }
LABEL_14:
  if ((v6 & 0x2000) == 0) {
    return result;
  }
LABEL_43:
  uint64_t v14 = *(void *)(v5 + 96);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_1001145A8 + 96);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v14, a2, a4);
}

uint64_t sub_10009ACB8(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 112);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_52;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_1001145A8 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10008EF74(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 112);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1001145A8 + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100094938(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 112);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 112);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_27;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v4 = v4
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 32), a2)+ 1;
  int v3 = *(_DWORD *)(a1 + 112);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v4 = v4
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40), a2)+ 1;
  int v3 = *(_DWORD *)(a1 + 112);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_37;
  }
LABEL_28:
  uint64_t v13 = *(void *)(a1 + 48);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_1001145A8 + 48);
  }
  int v14 = *(unsigned __int8 *)(v13 + 32);
  if (*(unsigned char *)(v13 + 32))
  {
    int v15 = (v14 << 31 >> 31) & 9;
    if ((v14 & 2) != 0) {
      v15 += 9;
    }
    if ((v14 & 4) != 0) {
      int v14 = v15 + 2;
    }
    else {
      int v14 = v15;
    }
  }
  *(_DWORD *)(v13 + 28) = v14;
  uint64_t v4 = (v4 + v14 + 2);
  int v3 = *(_DWORD *)(a1 + 112);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0) {
      goto LABEL_52;
    }
    goto LABEL_46;
  }
LABEL_37:
  uint64_t v16 = *(void *)(a1 + 56);
  if (!v16) {
    uint64_t v16 = *(void *)(qword_1001145A8 + 56);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    int v18 = (v17 << 31 >> 31) & 9;
    if ((v17 & 2) != 0) {
      v18 += 9;
    }
    if ((v17 & 4) != 0) {
      int v17 = v18 + 2;
    }
    else {
      int v17 = v18;
    }
  }
  *(_DWORD *)(v16 + 28) = v17;
  uint64_t v4 = (v4 + v17 + 2);
  int v3 = *(_DWORD *)(a1 + 112);
  if ((v3 & 0x80) != 0)
  {
LABEL_46:
    uint64_t v19 = *(void *)(a1 + 64);
    if (!v19) {
      uint64_t v19 = *(void *)(qword_1001145A8 + 64);
    }
    unint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000962DC(v19, a2);
    int v21 = (int)v20;
    if (v20 >= 0x80) {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
    }
    else {
      int v22 = 1;
    }
    uint64_t v4 = (v4 + v21 + v22 + 1);
    int v3 = *(_DWORD *)(a1 + 112);
  }
LABEL_52:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      uint64_t v23 = *(void *)(a1 + 72);
      if (!v23) {
        uint64_t v23 = *(void *)(qword_1001145A8 + 72);
      }
      int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100098F7C(v23, a2);
      int v25 = (int)v24;
      if (v24 >= 0x80) {
        int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2);
      }
      else {
        int v26 = 1;
      }
      LODWORD(v4) = v4 + v25 + v26 + 1;
      int v3 = *(_DWORD *)(a1 + 112);
    }
    if ((v3 & 0x200) != 0) {
      LODWORD(v4) = v4 + 5;
    }
    if ((v3 & 0x400) != 0)
    {
      int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 84);
      if ((v27 & 0x80000000) != 0)
      {
        int v28 = 11;
      }
      else if (v27 >= 0x80)
      {
        int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 112);
      }
      else
      {
        int v28 = 2;
      }
      LODWORD(v4) = v28 + v4;
    }
    if ((v3 & 0x800) != 0)
    {
      uint64_t v29 = *(void *)(a1 + 88);
      if (!v29) {
        uint64_t v29 = *(void *)(qword_1001145A8 + 88);
      }
      int v30 = *(unsigned __int8 *)(v29 + 32);
      int v31 = (v30 << 31 >> 31) & 9;
      if ((v30 & 2) != 0) {
        v31 += 9;
      }
      if ((v30 & 4) != 0) {
        v31 += 2;
      }
      if (*(unsigned char *)(v29 + 32)) {
        int v32 = v31;
      }
      else {
        int v32 = 0;
      }
      *(_DWORD *)(v29 + 28) = v32;
      LODWORD(v4) = v4 + v32 + 2;
      int v3 = *(_DWORD *)(a1 + 112);
    }
    if ((v3 & 0x1000) != 0) {
      uint64_t v4 = (v4 + 2);
    }
    else {
      uint64_t v4 = v4;
    }
    if ((v3 & 0x2000) != 0)
    {
      uint64_t v33 = *(void *)(a1 + 96);
      if (!v33) {
        uint64_t v33 = *(void *)(qword_1001145A8 + 96);
      }
      uint64_t v4 = v4 + sub_100095BF0(v33) + 2;
    }
  }
  *(_DWORD *)(a1 + 108) = v4;
  return v4;
}

void sub_10009AFFC(uint64_t a1, void *lpsrc)
{
  sub_1000993C8(a1, (uint64_t)lpsrc);
}

uint64_t sub_10009B0A0()
{
  return 1;
}

void *sub_10009B0A8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.Measurement");
}

float sub_10009B0B8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      float result = *(float *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(float *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    float result = *(float *)(a2 + 12);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(float *)(a1 + 12) = result;
    int v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    float result = *(float *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(float *)(a1 + 16) = result;
    int v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        return result;
      }
      goto LABEL_9;
    }
LABEL_14:
    float result = *(float *)(a2 + 20);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(float *)(a1 + 20) = result;
    if ((*(_DWORD *)(a2 + 32) & 0x10) == 0) {
      return result;
    }
LABEL_9:
    char v6 = *(unsigned char *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 0x10u;
    *(unsigned char *)(a1 + 24) = v6;
  }
  return result;
}

void sub_10009B1CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10009B1E4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C260;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10009B204(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C260;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10009B258()
{
}

uint64_t sub_10009B2AC(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_10009B2C4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_29;
        }
        unsigned int v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v17) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 8) = v17;
        *(_DWORD *)(a1 + 32) |= 1u;
        int v8 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 != 21) {
          continue;
        }
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_29;
        }
LABEL_14:
        unsigned int v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v17) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 12) = v17;
        *(_DWORD *)(a1 + 32) |= 2u;
        uint64_t v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 != 29) {
          continue;
        }
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        unsigned int v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v17) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 16) = v17;
        *(_DWORD *)(a1 + 32) |= 4u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 37) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
LABEL_24:
        unsigned int v17 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v17))
        {
          *(_DWORD *)(a1 + 20) = v17;
          *(_DWORD *)(a1 + 32) |= 8u;
          int v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
          if ((unint64_t)v12 < v11 && *v12 == 40)
          {
            uint64_t v13 = v12 + 1;
            *((void *)this + 1) = v13;
LABEL_33:
            unsigned int v17 = 0;
            if ((unint64_t)v13 >= v11 || *v13 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17);
              if (!result) {
                return result;
              }
              unsigned int v14 = v17;
              int v15 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v11 = *((void *)this + 2);
            }
            else
            {
              unsigned int v14 = *v13;
              int v15 = (unsigned __int8 *)(v13 + 1);
              *((void *)this + 1) = v15;
            }
            *(unsigned char *)(a1 + 24) = v14 != 0;
            *(_DWORD *)(a1 + 32) |= 0x10u;
            if (v15 == (unsigned __int8 *)v11
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_19;
        }
        goto LABEL_29;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_24;
        }
        goto LABEL_29;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_33;
      default:
        int v7 = TagFallback & 7;
LABEL_29:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10009B590(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(float *)(result + 8), a3);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(float *)(v5 + 12), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(float *)(v5 + 20), a3);
    if ((*(_DWORD *)(v5 + 32) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = *(unsigned __int8 *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_10009B654(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 5;
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      v2 += 5;
    }
    if ((v1 & 8) != 0) {
      v2 += 5;
    }
    if ((v1 & 0x10) != 0) {
      uint64_t v1 = v2 + 2;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 28) = v1;
  return v1;
}

float sub_10009B6A4(uint64_t a1, void *lpsrc)
{
  return sub_10009B0B8(a1, (uint64_t)lpsrc);
}

uint64_t sub_10009B748()
{
  return 1;
}

void *sub_10009B750@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.ReceiverClockModel");
}

double sub_10009B760(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 52);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 52))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 52) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 52);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*(unsigned char *)(a2 + 52) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 2u;
    *(double *)(a1 + 16) = result;
    int v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 52) |= 4u;
    *(double *)(a1 + 24) = result;
    int v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        return result;
      }
      goto LABEL_9;
    }
LABEL_14:
    double result = *(double *)(a2 + 32);
    *(_DWORD *)(a1 + 52) |= 8u;
    *(double *)(a1 + 32) = result;
    if ((*(_DWORD *)(a2 + 52) & 0x10) == 0) {
      return result;
    }
LABEL_9:
    double result = *(double *)(a2 + 40);
    *(_DWORD *)(a1 + 52) |= 0x10u;
    *(double *)(a1 + 40) = result;
  }
  return result;
}

void sub_10009B874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10009B88C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C2D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10009B8AC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C2D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10009B900()
{
}

uint64_t sub_10009B958(uint64_t result)
{
  if (*(unsigned char *)(result + 52))
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_10009B978(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_34;
        }
        unint64_t v13 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v13;
        *(_DWORD *)(a1 + 52) |= 1u;
        int v8 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 != 17) {
          continue;
        }
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_34;
        }
LABEL_14:
        unint64_t v13 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v13;
        *(_DWORD *)(a1 + 52) |= 2u;
        uint64_t v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 != 25) {
          continue;
        }
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        unint64_t v13 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v13;
        *(_DWORD *)(a1 + 52) |= 4u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 33) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
LABEL_24:
        unint64_t v13 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v13;
        *(_DWORD *)(a1 + 52) |= 8u;
        unint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 41) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_29:
        unint64_t v13 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 40) = v13;
        *(_DWORD *)(a1 + 52) |= 0x10u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_19;
        }
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_24;
        }
        goto LABEL_34;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_29;
        }
        goto LABEL_34;
      default:
        int v7 = TagFallback & 7;
LABEL_34:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t sub_10009BC1C(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 52);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    int v5 = *(_DWORD *)(v4 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v4 + 16), a3);
  int v5 = *(_DWORD *)(v4 + 52);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(v4 + 32), a3);
    if ((*(_DWORD *)(v4 + 52) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v4 + 24), a3);
  int v5 = *(_DWORD *)(v4 + 52);
  if ((v5 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v5 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  double v6 = *(double *)(v4 + 40);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, a2, v6, a3);
}

uint64_t sub_10009BCE0(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 52);
  if (*(unsigned char *)(a1 + 52))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x10) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 48) = v1;
  return v1;
}

double sub_10009BD30(uint64_t a1, void *lpsrc)
{
  return sub_10009B760(a1, (uint64_t)lpsrc);
}

uint64_t sub_10009BDD4()
{
  return 1;
}

void *sub_10009BDDC@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.ReceiverClockCorrections");
}

double sub_10009BDEC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 40);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 40))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 40) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 40);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*(unsigned char *)(a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    LODWORD(result) = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(_DWORD *)(a1 + 16) = LODWORD(result);
    int v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    LODWORD(result) = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 40) |= 4u;
    *(_DWORD *)(a1 + 20) = LODWORD(result);
    int v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        return result;
      }
      goto LABEL_9;
    }
LABEL_14:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 40) |= 8u;
    *(double *)(a1 + 24) = result;
    if ((*(_DWORD *)(a2 + 40) & 0x10) == 0) {
      return result;
    }
LABEL_9:
    LODWORD(result) = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 0x10u;
    *(_DWORD *)(a1 + 32) = LODWORD(result);
  }
  return result;
}

void sub_10009BF00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10009BF18(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C350;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10009BF38(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C350;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10009BF8C()
{
}

uint64_t sub_10009BFE4(uint64_t result)
{
  if (*(unsigned char *)(result + 40))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_10009C000(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        *(void *)uint64_t v16 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, (unint64_t *)v16);
          if (!result) {
            return result;
          }
          uint64_t v10 = *(void *)v16;
          unint64_t v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          uint64_t v10 = *v9;
          unint64_t v11 = v9 + 1;
          *((void *)this + 1) = v11;
        }
        *(void *)(a1 + 8) = v10;
        *(_DWORD *)(a1 + 40) |= 1u;
        if ((unint64_t)v11 < v8 && *v11 == 21)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_27;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_19;
        }
LABEL_27:
        v16[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v16) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 16) = v16[0];
        *(_DWORD *)(a1 + 40) |= 2u;
        unint64_t v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 29) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_31:
        v16[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v16) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 20) = v16[0];
        *(_DWORD *)(a1 + 40) |= 4u;
        unsigned int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 33) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_35:
        *(void *)uint64_t v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v16) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v16;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        int v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 45) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_39:
        v16[0] = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v16))
        {
          *(_DWORD *)(a1 + 32) = v16[0];
          *(_DWORD *)(a1 + 40) |= 0x10u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_31;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_35;
        }
        goto LABEL_19;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_19;
        }
        goto LABEL_39;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10009C2C0(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v4, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v4, *(double *)(v5 + 24), a3);
    if ((*(_DWORD *)(v5 + 40) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v4, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  float v7 = *(float *)(v5 + 32);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v4, v7, a3);
}

uint64_t sub_10009C384(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 40))
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 5;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      uint64_t result = v4 + 5;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 36) = result;
  return result;
}

double sub_10009C404(uint64_t a1, void *lpsrc)
{
  return sub_10009BDEC(a1, (uint64_t)lpsrc);
}

uint64_t sub_10009C4A8()
{
  return 1;
}

void *sub_10009C4B0@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.ReceiverToGpsTimeConversion");
}

double sub_10009C4C0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v5) {
    return result;
  }
  if ((*(unsigned char *)(a2 + 44) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    *(_DWORD *)(a1 + 44) |= 2u;
    uint64_t v7 = *(void *)(a1 + 16);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1001145C8 + 16);
    }
    *(float *)&double result = sub_10009B0B8(v7, v8);
    int v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return result;
      }
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 44) |= 1u;
  *(void *)(a1 + 8) = v6;
  int v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v5 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_15:
  *(_DWORD *)(a1 + 44) |= 4u;
  uint64_t v9 = *(void *)(a1 + 24);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = *(void *)(a2 + 24);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1001145C8 + 24);
  }
  double result = sub_10009B760(v9, v10);
  if ((*(_DWORD *)(a2 + 44) & 8) != 0)
  {
LABEL_20:
    *(_DWORD *)(a1 + 44) |= 8u;
    uint64_t v11 = *(void *)(a1 + 32);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 32);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_1001145C8 + 32);
    }
    return sub_10009BDEC(v11, v12);
  }
  return result;
}

void sub_10009C6D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_10009C6E8(void *result)
{
  if ((void *)qword_1001145C8 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    double result = (void *)v1[4];
    if (result)
    {
      unsigned int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_10009C7B4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C3C8;
  sub_10009C6E8(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10009C808(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C3C8;
  sub_10009C6E8(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10009C870()
{
}

uint64_t CLP::LogEntry::PrivateData::Clock::Clear(uint64_t this)
{
  LOBYTE(v1) = *(unsigned char *)(this + 44);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 32))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(unsigned char *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 32) = 0;
        int v1 = *(_DWORD *)(this + 44);
      }
    }
    if ((v1 & 4) != 0)
    {
      uint64_t v3 = *(void *)(this + 24);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 52))
        {
          *(void *)(v3 + 40) = 0;
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + 8) = 0u;
        }
        *(_DWORD *)(v3 + 52) = 0;
        int v1 = *(_DWORD *)(this + 44);
      }
    }
    if ((v1 & 8) != 0)
    {
      uint64_t v4 = *(void *)(this + 32);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 40))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(_DWORD *)(v4 + 32) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 40) = 0;
      }
    }
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t sub_10009C950(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 < *((void *)this + 2) && (*v6 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v10;
          uint64_t v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }
        int v12 = *(_DWORD *)(a1 + 44) | 1;
        *(_DWORD *)(a1 + 44) = v12;
        if ((unint64_t)v11 < v9 && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_26;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        int v12 = *(_DWORD *)(a1 + 44);
LABEL_26:
        *(_DWORD *)(a1 + 44) = v12 | 2;
        uint64_t v14 = *(void *)(a1 + 16);
        if (!v14) {
          operator new();
        }
        unsigned int v41 = 0;
        int v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41))return 0; {
        }
          }
        else
        {
          unsigned int v41 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v16 = *((_DWORD *)this + 14);
        int v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0;
        }
        int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
        if (!sub_10009B2C4(v14, this, v19) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        uint64_t v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 26) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_40:
        *(_DWORD *)(a1 + 44) |= 4u;
        uint64_t v24 = *(void *)(a1 + 24);
        if (!v24) {
          operator new();
        }
        unsigned int v42 = 0;
        int v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42))return 0; {
        }
          }
        else
        {
          unsigned int v42 = *v25;
          *((void *)this + 1) = v25 + 1;
        }
        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v42);
        if (!sub_10009B978(v24, this, v29) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v21) {
          *((_DWORD *)this + 14) = v31;
        }
        int v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 34) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_54:
        *(_DWORD *)(a1 + 44) |= 8u;
        uint64_t v33 = *(void *)(a1 + 32);
        if (!v33) {
          operator new();
        }
        unsigned int v43 = 0;
        int v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43))return 0; {
        }
          }
        else
        {
          unsigned int v43 = *v34;
          *((void *)this + 1) = v34 + 1;
        }
        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v43);
        if (!sub_10009C000(v33, this, v38) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v39 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v21) {
          *((_DWORD *)this + 14) = v40;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_40;
        }
        goto LABEL_18;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        goto LABEL_54;
      default:
        int v8 = TagFallback & 7;
LABEL_18:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10009CE20(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), (unint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1001145C8 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_10:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1001145C8 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 8) != 0)
  {
LABEL_13:
    uint64_t v9 = *(void *)(v5 + 32);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1001145C8 + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  }
  return result;
}

uint64_t sub_10009CEF8(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_22;
  }
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 44);
    if ((v3 & 2) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
      goto LABEL_10;
    }
  }
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_1001145C8 + 16);
  }
  uint64_t v4 = v4 + sub_10009B654(v5) + 2;
  int v3 = *(_DWORD *)(a1 + 44);
LABEL_10:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)(a1 + 24);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_1001145C8 + 24);
  }
  uint64_t v4 = v4 + sub_10009BCE0(v6) + 2;
  if ((*(_DWORD *)(a1 + 44) & 8) != 0)
  {
LABEL_16:
    uint64_t v7 = *(void *)(a1 + 32);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1001145C8 + 32);
    }
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009C384(v7, a2);
    int v10 = (int)v8;
    if (v8 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, v9);
    }
    else {
      int v11 = 1;
    }
    uint64_t v4 = (v4 + v10 + v11 + 1);
  }
LABEL_22:
  *(_DWORD *)(a1 + 40) = v4;
  return v4;
}

double sub_10009CFF4(uint64_t a1, void *lpsrc)
{
  return sub_10009C4C0(a1, (uint64_t)lpsrc);
}

uint64_t sub_10009D098()
{
  return 1;
}

void *sub_10009D0A0@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.Clock");
}

double sub_10009D0B0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 16) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 28);
      uint64_t v8 = *(int *)(a1 + 24);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v7 + 1);
          int v7 = *(_DWORD *)(a1 + 28);
        }
        *(_DWORD *)(a1 + 28) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *(void *)(a1 + 16);
      *(_DWORD *)(a1 + 24) = v8 + 1;
      sub_1000993C8(*(void *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
  if (*(unsigned char *)(a2 + 44))
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 8);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_1001145D0 + 8);
    }
    return sub_10009C4C0(v10, v11);
  }
  return result;
}

void sub_10009D2A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10009D2C0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010C440;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1001145D0 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  int v3 = *((_DWORD *)this + 7);
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i < v3; ++i)
    {
      uint64_t v5 = *(void *)(*((void *)this + 2) + 8 * i);
      if (v5)
      {
        (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
        int v3 = *((_DWORD *)this + 7);
      }
    }
  }
  if (*((void *)this + 2)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10009D3BC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_10009D2C0(a1);

  operator delete();
}

void sub_10009D3F4()
{
}

uint64_t CLP::LogEntry::PrivateData::MeasurementReport::Clear(CLP::LogEntry::PrivateData::MeasurementReport *this)
{
  if (*((unsigned char *)this + 44))
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      CLP::LogEntry::PrivateData::Clock::Clear(v2);
    }
  }
  uint64_t result = sub_10003AD6C((uint64_t)this + 16);
  *((_DWORD *)this + 11) = 0;
  return result;
}

uint64_t sub_10009D488(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v9 = *(void *)(a1 + 8);
        if (!v9) {
          operator new();
        }
        unsigned int v32 = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        int v11 = *((_DWORD *)this + 14);
        int v12 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0;
        }
        int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
        if (!sub_10009C950(v9, this, v14) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
        int v15 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)this + 14) = v17;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 18) {
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v19 = *(_DWORD *)(a1 + 28);
        uint64_t v20 = *(int *)(a1 + 24);
        if ((int)v20 >= v19)
        {
          if (v19 == *(_DWORD *)(a1 + 32))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
            int v19 = *(_DWORD *)(a1 + 28);
          }
          *(_DWORD *)(a1 + 28) = v19 + 1;
          operator new();
        }
        uint64_t v21 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v20 + 1;
        uint64_t v22 = *(void *)(v21 + 8 * v20);
        unsigned int v33 = 0;
        uint64_t v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33))return 0; {
        }
          }
        else
        {
          unsigned int v33 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v33);
        if (!sub_100099D68(v22, this, v27) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v28 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v16) {
          *((_DWORD *)this + 14) = v29;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        int v30 = (unsigned char *)*((void *)this + 2);
        if (v18 >= v30 || *v18 != 18) {
          break;
        }
LABEL_29:
        *((void *)this + 1) = v18 + 1;
      }
      if (v18 == v30 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10009D808(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 44))
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1001145D0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return result;
}

uint64_t sub_10009D890(uint64_t a1, unint64_t a2)
{
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_1001145D0 + 8);
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009CEF8(v4, a2);
    int v6 = (int)v5;
    if (v5 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    }
    else {
      int v7 = 1;
    }
    int v3 = v6 + v7 + 1;
  }
  else
  {
    int v3 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 24);
  uint64_t v9 = (v8 + v3);
  if (v8 >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009ACB8(*(void *)(*(void *)(a1 + 16) + 8 * v10), a2);
      int v12 = (int)v11;
      if (v11 >= 0x80) {
        int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      }
      else {
        int v13 = 1;
      }
      uint64_t v9 = (v12 + v9 + v13);
      ++v10;
    }
    while (v10 < *(int *)(a1 + 24));
  }
  *(_DWORD *)(a1 + 40) = v9;
  return v9;
}

double sub_10009D960(uint64_t a1, void *lpsrc)
{
  return sub_10009D0B0(a1, (uint64_t)lpsrc);
}

uint64_t sub_10009DA04()
{
  return 1;
}

void *sub_10009DA0C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.MeasurementReport");
}

double sub_10009DA1C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }
  return result;
}

void sub_10009DAF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10009DB08(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C4B8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10009DB28(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C4B8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10009DB7C()
{
}

uint64_t sub_10009DBD0(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_10009DBE8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        uint64_t v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 17)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          unint64_t v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 16) = v12;
          *(_DWORD *)(a1 + 36) |= 2u;
          uint64_t v10 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 25)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }
      int v8 = TagFallback & 7;
      if (v8 == 1) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unint64_t v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 24) = v12;
    *(_DWORD *)(a1 + 36) |= 4u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_10009DDB0(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 36);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v4 + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
  int v5 = *(_DWORD *)(v4 + 36);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return result;
  }
LABEL_7:
  double v6 = *(double *)(v4 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, v6, a3);
}

uint64_t sub_10009DE3C(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 36);
  if (*(unsigned char *)(a1 + 36))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 32) = v1;
  return v1;
}

double sub_10009DE74(uint64_t a1, void *lpsrc)
{
  return sub_10009DA1C(a1, (uint64_t)lpsrc);
}

uint64_t sub_10009DF18()
{
  return 1;
}

void *sub_10009DF20@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.Wgs84Ecef");
}

void sub_10009DF30(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 44))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 24);
      if (v5 >= 0xD) {
        __assert_rtn("set_band", "CLPGnssMeasApi.pb.h", 10570, "::CLP::LogEntry::PrivateData::Band_IsValid(value)");
      }
      *(_DWORD *)(a1 + 44) |= 1u;
      *(_DWORD *)(a1 + 24) = v5;
      int v4 = *(_DWORD *)(a2 + 44);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 44) |= 2u;
      *(void *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 44);
      if ((v4 & 4) == 0)
      {
LABEL_9:
        if ((v4 & 8) == 0) {
          goto LABEL_10;
        }
        goto LABEL_14;
      }
    }
    else if ((v4 & 4) == 0)
    {
      goto LABEL_9;
    }
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 8) == 0)
    {
LABEL_10:
      if ((v4 & 0x10) == 0) {
        return;
      }
LABEL_15:
      unsigned int v9 = *(_DWORD *)(a2 + 28);
      if (v9 >= 3) {
        __assert_rtn("set_ionospheric_model", "CLPGnssMeasApi.pb.h", 10659, "::CLP::LogEntry::PrivateData::IonosphericCorrectionSource_IsValid(value)");
      }
      *(_DWORD *)(a1 + 44) |= 0x10u;
      *(_DWORD *)(a1 + 28) = v9;
      return;
    }
LABEL_14:
    uint64_t v8 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(void *)(a1 + 32) = v8;
    if ((*(_DWORD *)(a2 + 44) & 0x10) == 0) {
      return;
    }
    goto LABEL_15;
  }
}

void sub_10009E090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10009E0A8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C530;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10009E0C8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C530;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10009E11C()
{
}

uint64_t sub_10009E174(uint64_t result)
{
  if (*(unsigned char *)(result + 44))
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_10009E190(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    unsigned int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        v18[0] = 0;
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v18);
          if (!result) {
            return result;
          }
          unsigned int v9 = v18[0];
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 0xC)
        {
          *(_DWORD *)(a1 + 44) |= 1u;
          *(_DWORD *)(a1 + 24) = v9;
        }
        int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 < *((void *)this + 2) && *v13 == 17)
        {
          *((void *)this + 1) = v13 + 1;
          goto LABEL_30;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_19;
        }
LABEL_30:
        *(void *)int v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v18;
        }
        *(_DWORD *)(a1 + 44) |= 2u;
        unsigned int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 25) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_34:
        *(void *)int v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v18;
        }
        *(_DWORD *)(a1 + 44) |= 4u;
        int v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 33) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_38:
        *(void *)int v18 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18))
        {
          *(void *)(a1 + 32) = *(void *)v18;
          *(_DWORD *)(a1 + 44) |= 8u;
          BOOL v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v16 < v10 && *v16 == 40)
          {
            int v11 = v16 + 1;
            *((void *)this + 1) = v11;
LABEL_42:
            v18[0] = 0;
            if ((unint64_t)v11 >= v10 || *v11 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v18);
              if (!result) {
                return result;
              }
              unsigned int v17 = v18[0];
            }
            else
            {
              unsigned int v17 = *v11;
              *((void *)this + 1) = v11 + 1;
            }
            if (v17 <= 2)
            {
              *(_DWORD *)(a1 + 44) |= 0x10u;
              *(_DWORD *)(a1 + 28) = v17;
            }
            if (*((void *)this + 1) == *((void *)this + 2)
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_34;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_38;
        }
        goto LABEL_19;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10009E484(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 24), a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 8), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(v5 + 32), a3);
    if ((*(_DWORD *)(v5 + 44) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = *(_DWORD *)(v5 + 28);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_10009E548(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 44))
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v6 & 0x80000000) != 0)
      {
        unsigned int v4 = 11;
      }
      else if (v6 >= 0x80)
      {
        unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 44);
      }
      else
      {
        unsigned int v4 = 2;
      }
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 0x10) != 0)
    {
      int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
      if ((v7 & 0x80000000) != 0)
      {
        int v8 = 11;
      }
      else if (v7 >= 0x80)
      {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      }
      else
      {
        int v8 = 2;
      }
      uint64_t v5 = (v8 + v5);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

void sub_10009E60C(uint64_t a1, void *lpsrc)
{
  sub_10009DF30(a1, (uint64_t)lpsrc);
}

uint64_t sub_10009E6B0()
{
  return 1;
}

void *sub_10009E6B8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.SvBandCorrections");
}

double sub_10009E6C8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 2u;
      uint64_t v6 = *(void *)(a1 + 16);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 16);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1001145E8 + 16);
      }
      return sub_10009DA1C(v6, v7);
    }
  }
  return result;
}

void sub_10009E7D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10009E7E8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010C5A8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1001145E8 != this)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10009E878(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_10009E7E8(a1);

  operator delete();
}

void sub_10009E8B0()
{
}

uint64_t sub_10009E8FC(uint64_t result)
{
  char v1 = *(unsigned char *)(result + 28);
  if (v1)
  {
    *(void *)(result + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_10009E930(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 == 1) {
          break;
        }
        if (TagFallback >> 3 == 2)
        {
          int v7 = TagFallback & 7;
          if (v7 == 2)
          {
            int v8 = *(_DWORD *)(a1 + 28);
            goto LABEL_15;
          }
        }
        else
        {
          int v7 = TagFallback & 7;
        }
LABEL_21:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
      }
        }
      int v7 = TagFallback & 7;
      if (v7 != 1) {
        goto LABEL_21;
      }
      unint64_t v20 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0) {
        return 0;
      }
      *(void *)(a1 + 8) = v20;
      int v8 = *(_DWORD *)(a1 + 28) | 1;
      *(_DWORD *)(a1 + 28) = v8;
      unsigned int v9 = (unsigned char *)*((void *)this + 1);
    }
    while ((unint64_t)v9 >= *((void *)this + 2) || *v9 != 18);
    *((void *)this + 1) = v9 + 1;
LABEL_15:
    *(_DWORD *)(a1 + 28) = v8 | 2;
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      operator new();
    }
    unsigned int v21 = 0;
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21)) {
        return 0;
      }
    }
    else
    {
      unsigned int v21 = *v11;
      *((void *)this + 1) = v11 + 1;
    }
    int v12 = *((_DWORD *)this + 14);
    int v13 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v12 + 1;
    if (v12 >= v13) {
      return 0;
    }
    int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v21);
    if (!sub_10009DBE8(v10, this, v15) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
    int v16 = *((_DWORD *)this + 14);
    BOOL v17 = __OFSUB__(v16, 1);
    int v18 = v16 - 1;
    if (v18 < 0 == v17) {
      *((_DWORD *)this + 14) = v18;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_10009EB68(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 8), a3);
    if ((*(_DWORD *)(v5 + 28) & 2) == 0) {
      return result;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1001145E8 + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_10009EBE8(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 28);
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v2 = (v1 << 31 >> 31) & 9;
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      if (!v3) {
        uint64_t v3 = *(void *)(qword_1001145E8 + 16);
      }
      int v4 = *(unsigned __int8 *)(v3 + 36);
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        v5 += 9;
      }
      if (*(unsigned char *)(v3 + 36)) {
        int v6 = v5;
      }
      else {
        int v6 = 0;
      }
      *(_DWORD *)(v3 + 32) = v6;
      uint64_t v2 = (v2 | 2) + v6;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 24) = v2;
  return v2;
}

double sub_10009EC64(uint64_t a1, void *lpsrc)
{
  return sub_10009E6C8(a1, (uint64_t)lpsrc);
}

uint64_t sub_10009ED08()
{
  return 1;
}

void *sub_10009ED10@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.SvPositionAtTime");
}

double sub_10009ED20(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  int v5 = *(_DWORD *)(a2 + 32);
  if (v5)
  {
    sub_100032CD4(a1 + 24, *(_DWORD *)(a1 + 32) + v5);
    memcpy((void *)(*(void *)(a1 + 24) + 8 * *(int *)(a1 + 32)), *(const void **)(a2 + 24), 8 * *(int *)(a2 + 32));
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
  }
  int v6 = *(_DWORD *)(a2 + 48);
  if (v6)
  {
    sub_100032CD4(a1 + 40, *(_DWORD *)(a1 + 48) + v6);
    memcpy((void *)(*(void *)(a1 + 40) + 8 * *(int *)(a1 + 48)), *(const void **)(a2 + 40), 8 * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }
  int v7 = *(_DWORD *)(a2 + 64);
  if (v7)
  {
    sub_100032CD4(a1 + 56, *(_DWORD *)(a1 + 64) + v7);
    memcpy((void *)(*(void *)(a1 + 56) + 8 * *(int *)(a1 + 64)), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 64));
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
  }
  LOBYTE(v8) = *(unsigned char *)(a2 + 76);
  if ((_BYTE)v8)
  {
    if (*(unsigned char *)(a2 + 76))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 76) |= 1u;
      *(double *)(a1 + 8) = result;
      int v8 = *(_DWORD *)(a2 + 76);
    }
    if ((v8 & 2) != 0)
    {
      double result = *(double *)(a2 + 16);
      *(_DWORD *)(a1 + 76) |= 2u;
      *(double *)(a1 + 16) = result;
    }
  }
  return result;
}

void sub_10009EE98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10009EEB0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010C620;
  if (*((void *)this + 7)) {
    operator delete[]();
  }
  if (*((void *)this + 5)) {
    operator delete[]();
  }
  if (*((void *)this + 3)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10009EF58(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_10009EEB0(a1);

  operator delete();
}

void sub_10009EF90()
{
}

uint64_t sub_10009EFF0(uint64_t result)
{
  if (*(unsigned char *)(result + 76))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_DWORD *)(result + 64) = 0;
  *(_DWORD *)(result + 76) = 0;
  return result;
}

uint64_t sub_10009F010(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5 = a1 + 56;
  uint64_t v45 = a1 + 24;
  uint64_t v46 = a1 + 40;
LABEL_2:
  while (2)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_31;
        }
        v47[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v47) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v47[0];
        *(_DWORD *)(a1 + 76) |= 1u;
        unsigned int v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 != 25) {
          continue;
        }
        *((void *)this + 1) = v9 + 1;
        goto LABEL_15;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_31;
        }
LABEL_15:
        v47[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v47) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v47[0];
        *(_DWORD *)(a1 + 76) |= 2u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 33) {
          goto LABEL_34;
        }
        continue;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_35;
        }
        if (v8 != 2) {
          goto LABEL_31;
        }
        uint64_t result = sub_10009F63C(this, v45);
        if (!result) {
          return result;
        }
        while (2)
        {
          uint64_t v10 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2))
          {
            int v22 = *v10;
            if (v22 == 33)
            {
LABEL_34:
              *((void *)this + 1) = v10 + 1;
LABEL_35:
              v47[0] = 0;
              if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v47) & 1) == 0) {
                return 0;
              }
              unint64_t v12 = v47[0];
              int v13 = *(_DWORD *)(a1 + 32);
              if (v13 == *(_DWORD *)(a1 + 36))
              {
                sub_100032CD4(v45, v13 + 1);
                int v13 = *(_DWORD *)(a1 + 32);
              }
              uint64_t v14 = *(void *)(a1 + 24);
              int v15 = v13 + 1;
              *(_DWORD *)(a1 + 32) = v13 + 1;
              *(void *)(v14 + 8 * v13) = v12;
              uint64_t v16 = *((void *)this + 1);
              int v17 = *((_DWORD *)this + 4) - v16;
              if (v17 >= 1)
              {
                signed int v18 = v17 / 9u;
                int v19 = v18 >= *(_DWORD *)(a1 + 36) - v15 ? *(_DWORD *)(a1 + 36) - v15 : v18;
                if (v19 >= 1)
                {
                  for (int i = 0; i != v19; ++i)
                  {
                    if (*(unsigned char *)v16 != 33) {
                      goto LABEL_49;
                    }
                    uint64_t v21 = *(void *)(v16 + 1);
                    if (v15 >= *(_DWORD *)(a1 + 36))
                    {
                      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v47);
                      int v15 = *(_DWORD *)(a1 + 32);
                      uint64_t v14 = *(void *)(a1 + 24);
                    }
                    *(_DWORD *)(a1 + 32) = v15 + 1;
                    *(void *)(v14 + 8 * v15) = v21;
                    v16 += 9;
                    ++v15;
                  }
                  int i = v19;
LABEL_49:
                  if (i) {
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * i);
                  }
                  continue;
                }
              }
              continue;
            }
            if (v22 == 41)
            {
              do
              {
                *((void *)this + 1) = v10 + 1;
LABEL_55:
                v47[0] = 0;
                if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v47) & 1) == 0)return 0; {
                unint64_t v23 = v47[0];
                }
                int v24 = *(_DWORD *)(a1 + 48);
                if (v24 == *(_DWORD *)(a1 + 52))
                {
                  sub_100032CD4(v46, v24 + 1);
                  int v24 = *(_DWORD *)(a1 + 48);
                }
                uint64_t v25 = *(void *)(a1 + 40);
                int v26 = v24 + 1;
                *(_DWORD *)(a1 + 48) = v24 + 1;
                *(void *)(v25 + 8 * v24) = v23;
                uint64_t v27 = *((void *)this + 1);
                int v28 = *((_DWORD *)this + 4) - v27;
                if (v28 >= 1)
                {
                  signed int v29 = v28 / 9u;
                  int v30 = v29 >= *(_DWORD *)(a1 + 52) - v26 ? *(_DWORD *)(a1 + 52) - v26 : v29;
                  if (v30 >= 1)
                  {
                    int v31 = 0;
                    while (*(unsigned char *)v27 == 41)
                    {
                      uint64_t v32 = *(void *)(v27 + 1);
                      if (v26 >= *(_DWORD *)(a1 + 52))
                      {
                        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v47);
                        int v26 = *(_DWORD *)(a1 + 48);
                        uint64_t v25 = *(void *)(a1 + 40);
                      }
                      *(_DWORD *)(a1 + 48) = v26 + 1;
                      *(void *)(v25 + 8 * v26) = v32;
                      ++v31;
                      v27 += 9;
                      ++v26;
                      if (v30 == v31)
                      {
                        int v31 = v30;
                        break;
                      }
                    }
                    if (v31) {
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v31);
                    }
                  }
                }
LABEL_71:
                uint64_t v10 = (unsigned char *)*((void *)this + 1);
                if ((unint64_t)v10 >= *((void *)this + 2)) {
                  goto LABEL_2;
                }
                int v33 = *v10;
              }
              while (v33 == 41);
              if (v33 == 49) {
                goto LABEL_74;
              }
            }
          }
          goto LABEL_2;
        }
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_55;
        }
        if (v8 != 2) {
          goto LABEL_31;
        }
        uint64_t result = sub_10009F63C(this, v46);
        if (!result) {
          return result;
        }
        goto LABEL_71;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_75;
        }
        if (v8 == 2)
        {
          uint64_t result = sub_10009F63C(this, v5);
          if (!result) {
            return result;
          }
          while (1)
          {
            uint64_t v10 = (unsigned char *)*((void *)this + 1);
            uint64_t v44 = (unsigned char *)*((void *)this + 2);
            if (v10 >= v44 || *v10 != 49) {
              break;
            }
LABEL_74:
            *((void *)this + 1) = v10 + 1;
LABEL_75:
            v47[0] = 0;
            if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v47) & 1) == 0) {
              return 0;
            }
            unint64_t v34 = v47[0];
            int v35 = *(_DWORD *)(a1 + 64);
            if (v35 == *(_DWORD *)(a1 + 68))
            {
              sub_100032CD4(v5, v35 + 1);
              int v35 = *(_DWORD *)(a1 + 64);
            }
            uint64_t v36 = *(void *)(a1 + 56);
            int v37 = v35 + 1;
            *(_DWORD *)(a1 + 64) = v35 + 1;
            *(void *)(v36 + 8 * v35) = v34;
            uint64_t v38 = *((void *)this + 1);
            int v39 = *((_DWORD *)this + 4) - v38;
            if (v39 >= 1)
            {
              signed int v40 = v39 / 9u;
              int v41 = v40 >= *(_DWORD *)(a1 + 68) - v37 ? *(_DWORD *)(a1 + 68) - v37 : v40;
              if (v41 >= 1)
              {
                int v42 = 0;
                while (*(unsigned char *)v38 == 49)
                {
                  uint64_t v43 = *(void *)(v38 + 1);
                  if (v37 >= *(_DWORD *)(a1 + 68))
                  {
                    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v47);
                    int v37 = *(_DWORD *)(a1 + 64);
                    uint64_t v36 = *(void *)(a1 + 56);
                  }
                  *(_DWORD *)(a1 + 64) = v37 + 1;
                  *(void *)(v36 + 8 * v37) = v43;
                  ++v42;
                  v38 += 9;
                  ++v37;
                  if (v41 == v42)
                  {
                    int v42 = v41;
                    break;
                  }
                }
                if (v42) {
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v42);
                }
              }
            }
          }
          if (v10 == v44 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
LABEL_31:
        if (v8 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      default:
        int v8 = TagFallback & 7;
        goto LABEL_31;
    }
  }
}

void sub_10009F600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10009F63C(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v11 = 0;
  int v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
    if (!result) {
      return result;
    }
    unsigned int v5 = v11;
  }
  else
  {
    unsigned int v5 = *v4;
    unsigned int v11 = v5;
    *((void *)this + 1) = v4 + 1;
  }
  int v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) < 1)
  {
LABEL_11:
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
    return 1;
  }
  else
  {
    while (1)
    {
      unint64_t v12 = 0;
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12);
      if (!result) {
        break;
      }
      unint64_t v8 = v12;
      int v9 = *(_DWORD *)(a2 + 8);
      if (v9 == *(_DWORD *)(a2 + 12))
      {
        sub_100032CD4(a2, v9 + 1);
        int v9 = *(_DWORD *)(a2 + 8);
      }
      uint64_t v10 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v9 + 1;
      *(void *)(v10 + 8 * v9) = v8;
      if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) <= 0) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_10009F738(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 76);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(result + 8), a3);
    int v5 = *(_DWORD *)(v4 + 76);
  }
  if ((v5 & 2) != 0) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v4 + 16), a3);
  }
  if (*(int *)(v4 + 32) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(*(void *)(v4 + 24) + 8 * v6++), a3);
    while (v6 < *(int *)(v4 + 32));
  }
  if (*(int *)(v4 + 48) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, a2, *(double *)(*(void *)(v4 + 40) + 8 * v7++), a3);
    while (v7 < *(int *)(v4 + 48));
  }
  if (*(int *)(v4 + 64) >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, a2, *(double *)(*(void *)(v4 + 56) + 8 * v8++), a3);
    while (v8 < *(int *)(v4 + 64));
  }
  return result;
}

uint64_t sub_10009F830(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 76);
  int v2 = (v1 << 31 >> 31) & 9;
  if ((v1 & 2) != 0) {
    v2 += 9;
  }
  if (*(unsigned char *)(a1 + 76)) {
    int v3 = v2;
  }
  else {
    int v3 = 0;
  }
  uint64_t v4 = (9 * (*(_DWORD *)(a1 + 48) + *(_DWORD *)(a1 + 32) + *(_DWORD *)(a1 + 64)) + v3);
  *(_DWORD *)(a1 + 72) = v4;
  return v4;
}

double sub_10009F87C(uint64_t a1, void *lpsrc)
{
  return sub_10009ED20(a1, (uint64_t)lpsrc);
}

uint64_t sub_10009F920()
{
  return 1;
}

void *sub_10009F928@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.PolynomialOrbit");
}

void sub_10009F938(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v38);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), *(_DWORD *)(a2 + 32) + *(_DWORD *)(a1 + 32));
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 24) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 36);
      uint64_t v7 = *(int *)(a1 + 32);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 24);
      *(_DWORD *)(a1 + 32) = v7 + 1;
      sub_10009E6C8(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 32));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 104), *(_DWORD *)(a2 + 112) + *(_DWORD *)(a1 + 112));
  if (*(int *)(a2 + 112) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(void *)(*(void *)(a2 + 104) + 8 * v9);
      int v11 = *(_DWORD *)(a1 + 116);
      uint64_t v12 = *(int *)(a1 + 112);
      if ((int)v12 >= v11)
      {
        if (v11 == *(_DWORD *)(a1 + 120))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 104), v11 + 1);
          int v11 = *(_DWORD *)(a1 + 116);
        }
        *(_DWORD *)(a1 + 116) = v11 + 1;
        operator new();
      }
      uint64_t v13 = *(void *)(a1 + 104);
      *(_DWORD *)(a1 + 112) = v12 + 1;
      sub_10009DF30(*(void *)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *(int *)(a2 + 112));
  }
  int v14 = *(_DWORD *)(a2 + 172);
  if (!(_BYTE)v14) {
    goto LABEL_28;
  }
  if (v14)
  {
    *(_DWORD *)(a1 + 172) |= 1u;
    uint64_t v31 = *(void *)(a1 + 8);
    if (!v31) {
      operator new();
    }
    uint64_t v32 = *(void *)(a2 + 8);
    if (!v32) {
      uint64_t v32 = *(void *)(qword_1001145F8 + 8);
    }
    sub_10008EA18(v31, v32);
    int v14 = *(_DWORD *)(a2 + 172);
    if ((v14 & 2) == 0)
    {
LABEL_22:
      if ((v14 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_80;
    }
  }
  else if ((v14 & 2) == 0)
  {
    goto LABEL_22;
  }
  uint64_t v33 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 172) |= 2u;
  *(void *)(a1 + 16) = v33;
  int v14 = *(_DWORD *)(a2 + 172);
  if ((v14 & 4) == 0)
  {
LABEL_23:
    if ((v14 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_82;
  }
LABEL_80:
  unsigned int v34 = *(_DWORD *)(a2 + 56);
  if (v34 >= 7) {
    __assert_rtn("set_position_source", "CLPGnssMeasApi.pb.h", 10941, "::CLP::LogEntry::PrivateData::SvPositionSource_IsValid(value)");
  }
  *(_DWORD *)(a1 + 172) |= 4u;
  *(_DWORD *)(a1 + 56) = v34;
  int v14 = *(_DWORD *)(a2 + 172);
  if ((v14 & 0x10) == 0)
  {
LABEL_24:
    if ((v14 & 0x20) == 0) {
      goto LABEL_25;
    }
LABEL_83:
    uint64_t v36 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 172) |= 0x20u;
    *(void *)(a1 + 64) = v36;
    int v14 = *(_DWORD *)(a2 + 172);
    if ((v14 & 0x40) == 0)
    {
LABEL_26:
      if ((v14 & 0x80) == 0) {
        goto LABEL_28;
      }
      goto LABEL_27;
    }
    goto LABEL_84;
  }
LABEL_82:
  uint64_t v35 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 172) |= 0x10u;
  *(void *)(a1 + 48) = v35;
  int v14 = *(_DWORD *)(a2 + 172);
  if ((v14 & 0x20) != 0) {
    goto LABEL_83;
  }
LABEL_25:
  if ((v14 & 0x40) == 0) {
    goto LABEL_26;
  }
LABEL_84:
  uint64_t v37 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 172) |= 0x40u;
  *(void *)(a1 + 72) = v37;
  int v14 = *(_DWORD *)(a2 + 172);
  if ((v14 & 0x80) != 0)
  {
LABEL_27:
    int v15 = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 172) |= 0x80u;
    *(_DWORD *)(a1 + 60) = v15;
    int v14 = *(_DWORD *)(a2 + 172);
  }
LABEL_28:
  if ((v14 & 0xFF00) != 0)
  {
    if ((v14 & 0x100) != 0)
    {
      int v16 = *(_DWORD *)(a2 + 80);
      *(_DWORD *)(a1 + 172) |= 0x100u;
      *(_DWORD *)(a1 + 80) = v16;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x200) != 0)
    {
      unsigned int v17 = *(_DWORD *)(a2 + 84);
      if (v17 >= 5) {
        __assert_rtn("set_over_the_air_from_sv_health_l1", "CLPGnssMeasApi.pb.h", 11099, "::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      }
      *(_DWORD *)(a1 + 172) |= 0x200u;
      *(_DWORD *)(a1 + 84) = v17;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x400) != 0)
    {
      unsigned int v18 = *(_DWORD *)(a2 + 88);
      if (v18 >= 5) {
        __assert_rtn("set_over_the_air_from_other_sv_health_l1", "CLPGnssMeasApi.pb.h", 11122, "::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      }
      *(_DWORD *)(a1 + 172) |= 0x400u;
      *(_DWORD *)(a1 + 88) = v18;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x800) != 0)
    {
      unsigned int v19 = *(_DWORD *)(a2 + 92);
      if (v19 >= 5) {
        __assert_rtn("set_assistance_file_health_l1", "CLPGnssMeasApi.pb.h", 11145, "::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      }
      *(_DWORD *)(a1 + 172) |= 0x800u;
      *(_DWORD *)(a1 + 92) = v19;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x1000) != 0)
    {
      unsigned int v20 = *(_DWORD *)(a2 + 96);
      if (v20 >= 5) {
        __assert_rtn("set_ms_based_health_l1", "CLPGnssMeasApi.pb.h", 11168, "::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      }
      *(_DWORD *)(a1 + 172) |= 0x1000u;
      *(_DWORD *)(a1 + 96) = v20;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x2000) != 0)
    {
      unsigned int v21 = *(_DWORD *)(a2 + 100);
      if (v21 >= 5) {
        __assert_rtn("set_integrity_health_l1", "CLPGnssMeasApi.pb.h", 11191, "::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      }
      *(_DWORD *)(a1 + 172) |= 0x2000u;
      *(_DWORD *)(a1 + 100) = v21;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x8000) != 0)
    {
      *(_DWORD *)(a1 + 172) |= 0x8000u;
      uint64_t v22 = *(void *)(a1 + 128);
      if (!v22) {
        operator new();
      }
      uint64_t v23 = *(void *)(a2 + 128);
      if (!v23) {
        uint64_t v23 = *(void *)(qword_1001145F8 + 128);
      }
      sub_10009ED20(v22, v23);
      int v14 = *(_DWORD *)(a2 + 172);
    }
  }
  if ((v14 & 0xFF0000) != 0)
  {
    if ((v14 & 0x10000) != 0)
    {
      unsigned int v24 = *(_DWORD *)(a2 + 136);
      if (v24 >= 5) {
        __assert_rtn("set_over_the_air_from_sv_health_l5", "CLPGnssMeasApi.pb.h", 11281, "::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      }
      *(_DWORD *)(a1 + 172) |= 0x10000u;
      *(_DWORD *)(a1 + 136) = v24;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x20000) != 0)
    {
      unsigned int v25 = *(_DWORD *)(a2 + 140);
      if (v25 >= 5) {
        __assert_rtn("set_over_the_air_from_other_sv_health_l5", "CLPGnssMeasApi.pb.h", 11304, "::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      }
      *(_DWORD *)(a1 + 172) |= 0x20000u;
      *(_DWORD *)(a1 + 140) = v25;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x40000) != 0)
    {
      unsigned int v26 = *(_DWORD *)(a2 + 144);
      if (v26 >= 5) {
        __assert_rtn("set_assistance_file_health_l5", "CLPGnssMeasApi.pb.h", 11327, "::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      }
      *(_DWORD *)(a1 + 172) |= 0x40000u;
      *(_DWORD *)(a1 + 144) = v26;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x80000) != 0)
    {
      unsigned int v27 = *(_DWORD *)(a2 + 148);
      if (v27 >= 5) {
        __assert_rtn("set_ms_based_health_l5", "CLPGnssMeasApi.pb.h", 11350, "::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      }
      *(_DWORD *)(a1 + 172) |= 0x80000u;
      *(_DWORD *)(a1 + 148) = v27;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x100000) != 0)
    {
      unsigned int v28 = *(_DWORD *)(a2 + 160);
      if (v28 >= 5) {
        __assert_rtn("set_integrity_health_l5", "CLPGnssMeasApi.pb.h", 11373, "::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      }
      *(_DWORD *)(a1 + 172) |= 0x100000u;
      *(_DWORD *)(a1 + 160) = v28;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x200000) != 0)
    {
      uint64_t v29 = *(void *)(a2 + 152);
      *(_DWORD *)(a1 + 172) |= 0x200000u;
      *(void *)(a1 + 152) = v29;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x400000) != 0)
    {
      unsigned int v30 = *(_DWORD *)(a2 + 164);
      if (v30 >= 4) {
        __assert_rtn("set_sv_reference_point", "CLPGnssMeasApi.pb.h", 11418, "::CLP::LogEntry::PrivateData::SvReferencePoint_IsValid(value)");
      }
      *(_DWORD *)(a1 + 172) |= 0x400000u;
      *(_DWORD *)(a1 + 164) = v30;
    }
  }
}

void sub_1000A009C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000A00B4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010C698;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1001145F8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 16);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  int v4 = *((_DWORD *)this + 29);
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i < v4; ++i)
    {
      uint64_t v6 = *(void *)(*((void *)this + 13) + 8 * i);
      if (v6)
      {
        (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
        int v4 = *((_DWORD *)this + 29);
      }
    }
  }
  if (*((void *)this + 13)) {
    operator delete[]();
  }
  int v7 = *((_DWORD *)this + 9);
  if (v7 >= 1)
  {
    for (uint64_t j = 0; j < v7; ++j)
    {
      uint64_t v9 = *(void *)(*((void *)this + 3) + 8 * j);
      if (v9)
      {
        (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
        int v7 = *((_DWORD *)this + 9);
      }
    }
  }
  if (*((void *)this + 3)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000A0248(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000A00B4(a1);

  operator delete();
}

void sub_1000A0280()
{
}

uint64_t sub_1000A02EC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 172);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_10008EC54(result);
        int v2 = *(_DWORD *)(v1 + 172);
      }
    }
    *(void *)(v1 + 16) = 0;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 64) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 80) = 0;
    *(void *)(v1 + 88) = 0;
    *(void *)(v1 + 96) = 0;
    if ((v2 & 0x8000) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 128);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 76))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 32) = 0;
        *(_DWORD *)(v3 + 48) = 0;
        *(_DWORD *)(v3 + 64) = 0;
        *(_DWORD *)(v3 + 76) = 0;
        int v2 = *(_DWORD *)(v1 + 172);
      }
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    *(_OWORD *)(v1 + 152) = 0u;
    *(_OWORD *)(v1 + 136) = 0u;
  }
  if (*(int *)(v1 + 32) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(v1 + 24) + 8 * v4);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 32));
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(int *)(v1 + 112) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(v1 + 104) + 8 * v6);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 32))(v7);
      ++v6;
    }
    while (v6 < *(int *)(v1 + 112));
  }
  *(_DWORD *)(v1 + 112) = 0;
  *(_DWORD *)(v1 + 172) = 0;
  return result;
}

uint64_t sub_1000A042C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 104);
LABEL_2:
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 172) |= 1u;
        uint64_t v10 = *(void *)(a1 + 8);
        if (!v10) {
          operator new();
        }
        v108[0] = 0;
        int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108))return 0; {
        }
          }
        else
        {
          v108[0] = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v39 = *((_DWORD *)this + 14);
        int v40 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v39 + 1;
        if (v39 >= v40) {
          return 0;
        }
        int v41 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v108[0]);
        if (!sub_10008EC94(v10, this, v42) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v41);
        int v43 = *((_DWORD *)this + 14);
        BOOL v44 = __OFSUB__(v43, 1);
        int v45 = v43 - 1;
        if (v45 < 0 == v44) {
          *((_DWORD *)this + 14) = v45;
        }
        uint64_t v46 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 != 17) {
          continue;
        }
        *((void *)this + 1) = v46 + 1;
        goto LABEL_86;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_62;
        }
LABEL_86:
        *(void *)v108 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v108) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v108;
        }
        *(_DWORD *)(a1 + 172) |= 2u;
        int v47 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v47 >= v12 || *v47 != 24) {
          continue;
        }
        uint64_t v13 = v47 + 1;
        *((void *)this + 1) = v13;
LABEL_90:
        v108[0] = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v48 = v108[0];
        }
        else
        {
          unsigned int v48 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (v48 <= 6)
        {
          *(_DWORD *)(a1 + 172) |= 4u;
          *(_DWORD *)(a1 + 56) = v48;
        }
        unsigned int v49 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v49 >= *((void *)this + 2) || *v49 != 34) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v49 + 1;
LABEL_100:
          int v50 = *(_DWORD *)(a1 + 36);
          uint64_t v51 = *(int *)(a1 + 32);
          if ((int)v51 >= v50)
          {
            if (v50 == *(_DWORD *)(a1 + 40))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v50 + 1);
              int v50 = *(_DWORD *)(a1 + 36);
            }
            *(_DWORD *)(a1 + 36) = v50 + 1;
            operator new();
          }
          uint64_t v52 = *(void *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v51 + 1;
          uint64_t v53 = *(void *)(v52 + 8 * v51);
          v108[0] = 0;
          unsigned int v54 = (char *)*((void *)this + 1);
          if ((unint64_t)v54 >= *((void *)this + 2) || *v54 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108))return 0; {
          }
            }
          else
          {
            v108[0] = *v54;
            *((void *)this + 1) = v54 + 1;
          }
          int v55 = *((_DWORD *)this + 14);
          int v56 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v55 + 1;
          if (v55 >= v56) {
            return 0;
          }
          int v57 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v108[0]);
          if (!sub_10009E930(v53, this, v58) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v57);
          int v59 = *((_DWORD *)this + 14);
          BOOL v44 = __OFSUB__(v59, 1);
          int v60 = v59 - 1;
          if (v60 < 0 == v44) {
            *((_DWORD *)this + 14) = v60;
          }
          unsigned int v49 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v49 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v61 = *v49;
        }
        while (v61 == 34);
        if (v61 != 41) {
          continue;
        }
        *((void *)this + 1) = v49 + 1;
LABEL_118:
        *(void *)v108 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v108) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v108;
        }
        *(_DWORD *)(a1 + 172) |= 0x10u;
        uint64_t v62 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v62 >= *((void *)this + 2) || *v62 != 49) {
          continue;
        }
        *((void *)this + 1) = v62 + 1;
LABEL_122:
        *(void *)v108 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v108) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v108;
        }
        *(_DWORD *)(a1 + 172) |= 0x20u;
        unsigned int v63 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v63 >= *((void *)this + 2) || *v63 != 57) {
          continue;
        }
        *((void *)this + 1) = v63 + 1;
LABEL_126:
        *(void *)v108 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v108) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v108;
        }
        *(_DWORD *)(a1 + 172) |= 0x40u;
        int v64 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v64 >= *((void *)this + 2) || *v64 != 69) {
          continue;
        }
        *((void *)this + 1) = v64 + 1;
LABEL_130:
        v108[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v108) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 60) = v108[0];
        *(_DWORD *)(a1 + 172) |= 0x80u;
        int v65 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v65 >= *((void *)this + 2) || *v65 != 77) {
          continue;
        }
        *((void *)this + 1) = v65 + 1;
LABEL_134:
        v108[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v108) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 80) = v108[0];
        *(_DWORD *)(a1 + 172) |= 0x100u;
        int v66 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v66 >= v14 || *v66 != 80) {
          continue;
        }
        int v15 = v66 + 1;
        *((void *)this + 1) = v15;
LABEL_138:
        v108[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v67 = v108[0];
        }
        else
        {
          unsigned int v67 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        if (v67 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x200u;
          *(_DWORD *)(a1 + 84) = v67;
        }
        int v68 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v68 >= v16 || *v68 != 88) {
          continue;
        }
        unsigned int v17 = v68 + 1;
        *((void *)this + 1) = v17;
LABEL_148:
        v108[0] = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v69 = v108[0];
        }
        else
        {
          unsigned int v69 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        if (v69 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x400u;
          *(_DWORD *)(a1 + 88) = v69;
        }
        unsigned int v70 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v70 >= v18 || *v70 != 96) {
          continue;
        }
        unsigned int v19 = v70 + 1;
        *((void *)this + 1) = v19;
LABEL_158:
        v108[0] = 0;
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v71 = v108[0];
        }
        else
        {
          unsigned int v71 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        if (v71 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x800u;
          *(_DWORD *)(a1 + 92) = v71;
        }
        unsigned int v72 = (unsigned char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        if ((unint64_t)v72 >= v20 || *v72 != 104) {
          continue;
        }
        unsigned int v21 = v72 + 1;
        *((void *)this + 1) = v21;
LABEL_168:
        v108[0] = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v73 = v108[0];
        }
        else
        {
          unsigned int v73 = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        if (v73 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x1000u;
          *(_DWORD *)(a1 + 96) = v73;
        }
        int v74 = (unsigned char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        if ((unint64_t)v74 >= v22 || *v74 != 112) {
          continue;
        }
        uint64_t v23 = v74 + 1;
        *((void *)this + 1) = v23;
LABEL_178:
        v108[0] = 0;
        if ((unint64_t)v23 >= v22 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v75 = v108[0];
        }
        else
        {
          unsigned int v75 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        if (v75 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x2000u;
          *(_DWORD *)(a1 + 100) = v75;
        }
        unsigned int v76 = (unsigned __int8 *)*((void *)this + 1);
        if ((unint64_t)v76 >= *((void *)this + 2) || *v76 != 122) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v76 + 1;
LABEL_188:
          int v77 = *(_DWORD *)(a1 + 116);
          uint64_t v78 = *(int *)(a1 + 112);
          if ((int)v78 >= v77)
          {
            if (v77 == *(_DWORD *)(a1 + 120))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v77 + 1);
              int v77 = *(_DWORD *)(a1 + 116);
            }
            *(_DWORD *)(a1 + 116) = v77 + 1;
            operator new();
          }
          uint64_t v79 = *(void *)(a1 + 104);
          *(_DWORD *)(a1 + 112) = v78 + 1;
          uint64_t v80 = *(void *)(v79 + 8 * v78);
          v108[0] = 0;
          unsigned int v81 = (char *)*((void *)this + 1);
          if ((unint64_t)v81 >= *((void *)this + 2) || *v81 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108))return 0; {
          }
            }
          else
          {
            v108[0] = *v81;
            *((void *)this + 1) = v81 + 1;
          }
          int v82 = *((_DWORD *)this + 14);
          int v83 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v82 + 1;
          if (v82 >= v83) {
            return 0;
          }
          int v84 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v108[0]);
          if (!sub_10009E190(v80, this, v85) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v84);
          int v86 = *((_DWORD *)this + 14);
          BOOL v44 = __OFSUB__(v86, 1);
          int v87 = v86 - 1;
          if (v87 < 0 == v44) {
            *((_DWORD *)this + 14) = v87;
          }
          unsigned int v76 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v88 = *((void *)this + 2);
        }
        while ((unint64_t)v76 < v88 && *v76 == 122);
        if ((int)v88 - (int)v76 < 2 || *v76 != 130 || v76[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v76 + 2;
LABEL_208:
        *(_DWORD *)(a1 + 172) |= 0x8000u;
        uint64_t v89 = *(void *)(a1 + 128);
        if (!v89) {
          operator new();
        }
        v108[0] = 0;
        int v90 = (char *)*((void *)this + 1);
        if ((unint64_t)v90 >= *((void *)this + 2) || *v90 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108))return 0; {
        }
          }
        else
        {
          v108[0] = *v90;
          *((void *)this + 1) = v90 + 1;
        }
        int v91 = *((_DWORD *)this + 14);
        int v92 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v91 + 1;
        if (v91 >= v92) {
          return 0;
        }
        int v93 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v108[0]);
        if (!sub_10009F010(v89, this, v94) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v93);
        int v95 = *((_DWORD *)this + 14);
        BOOL v44 = __OFSUB__(v95, 1);
        int v96 = v95 - 1;
        if (v96 < 0 == v44) {
          *((_DWORD *)this + 14) = v96;
        }
        int v97 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        if ((int)v24 - (int)v97 <= 1 || *v97 != 144 || v97[1] != 1) {
          continue;
        }
        unsigned int v25 = (char *)(v97 + 2);
        *((void *)this + 1) = v25;
LABEL_223:
        v108[0] = 0;
        if ((unint64_t)v25 >= v24 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v98 = v108[0];
        }
        else
        {
          unsigned int v98 = *v25;
          *((void *)this + 1) = v25 + 1;
        }
        if (v98 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x10000u;
          *(_DWORD *)(a1 + 136) = v98;
        }
        unsigned int v99 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
        if ((int)v26 - (int)v99 < 2 || *v99 != 152 || v99[1] != 1) {
          continue;
        }
        unsigned int v27 = (char *)(v99 + 2);
        *((void *)this + 1) = v27;
LABEL_234:
        v108[0] = 0;
        if ((unint64_t)v27 >= v26 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v100 = v108[0];
        }
        else
        {
          unsigned int v100 = *v27;
          *((void *)this + 1) = v27 + 1;
        }
        if (v100 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x20000u;
          *(_DWORD *)(a1 + 140) = v100;
        }
        int v101 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v28 = *((void *)this + 2);
        if ((int)v28 - (int)v101 < 2 || *v101 != 160 || v101[1] != 1) {
          continue;
        }
        uint64_t v29 = (char *)(v101 + 2);
        *((void *)this + 1) = v29;
LABEL_245:
        v108[0] = 0;
        if ((unint64_t)v29 >= v28 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v102 = v108[0];
        }
        else
        {
          unsigned int v102 = *v29;
          *((void *)this + 1) = v29 + 1;
        }
        if (v102 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x40000u;
          *(_DWORD *)(a1 + 144) = v102;
        }
        v103 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v30 = *((void *)this + 2);
        if ((int)v30 - (int)v103 < 2 || *v103 != 168 || v103[1] != 1) {
          continue;
        }
        uint64_t v31 = (char *)(v103 + 2);
        *((void *)this + 1) = v31;
LABEL_256:
        v108[0] = 0;
        if ((unint64_t)v31 >= v30 || *v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v104 = v108[0];
        }
        else
        {
          unsigned int v104 = *v31;
          *((void *)this + 1) = v31 + 1;
        }
        if (v104 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x80000u;
          *(_DWORD *)(a1 + 148) = v104;
        }
        v105 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v32 = *((void *)this + 2);
        if ((int)v32 - (int)v105 < 2 || *v105 != 176 || v105[1] != 1) {
          continue;
        }
        uint64_t v33 = (char *)(v105 + 2);
        *((void *)this + 1) = v33;
LABEL_267:
        v108[0] = 0;
        if ((unint64_t)v33 >= v32 || *v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v106 = v108[0];
        }
        else
        {
          unsigned int v106 = *v33;
          *((void *)this + 1) = v33 + 1;
        }
        if (v106 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x100000u;
          *(_DWORD *)(a1 + 160) = v106;
        }
        v107 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v107 < 2 || *v107 != 185 || v107[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v107 + 2;
LABEL_56:
        *(void *)v108 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v108))
        {
          *(void *)(a1 + 152) = *(void *)v108;
          *(_DWORD *)(a1 + 172) |= 0x200000u;
          uint64_t v35 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v34 = *((void *)this + 2);
          if ((int)v34 - (int)v35 >= 2 && *v35 == 192 && v35[1] == 1)
          {
            uint64_t v36 = (char *)(v35 + 2);
            *((void *)this + 1) = v36;
LABEL_66:
            v108[0] = 0;
            if ((unint64_t)v36 >= v34 || *v36 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
              if (!result) {
                return result;
              }
              unsigned int v37 = v108[0];
            }
            else
            {
              unsigned int v37 = *v36;
              *((void *)this + 1) = v36 + 1;
            }
            if (v37 <= 3)
            {
              *(_DWORD *)(a1 + 172) |= 0x400000u;
              *(_DWORD *)(a1 + 164) = v37;
            }
            if (*((void *)this + 1) == *((void *)this + 2)
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_90;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_100;
        }
        goto LABEL_62;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_118;
        }
        goto LABEL_62;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_122;
        }
        goto LABEL_62;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_126;
        }
        goto LABEL_62;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 == 5) {
          goto LABEL_130;
        }
        goto LABEL_62;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 == 5) {
          goto LABEL_134;
        }
        goto LABEL_62;
      case 0xAu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_138;
      case 0xBu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_148;
      case 0xCu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_158;
      case 0xDu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        unsigned int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_168;
      case 0xEu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        uint64_t v23 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_178;
      case 0xFu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_188;
        }
        goto LABEL_62;
      case 0x10u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_208;
        }
        goto LABEL_62;
      case 0x12u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        unsigned int v25 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_223;
      case 0x13u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        unsigned int v27 = (char *)*((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
        goto LABEL_234;
      case 0x14u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        uint64_t v29 = (char *)*((void *)this + 1);
        unint64_t v28 = *((void *)this + 2);
        goto LABEL_245;
      case 0x15u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        uint64_t v31 = (char *)*((void *)this + 1);
        unint64_t v30 = *((void *)this + 2);
        goto LABEL_256;
      case 0x16u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        uint64_t v33 = (char *)*((void *)this + 1);
        unint64_t v32 = *((void *)this + 2);
        goto LABEL_267;
      case 0x17u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_56;
        }
        goto LABEL_62;
      case 0x18u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        uint64_t v36 = (char *)*((void *)this + 1);
        unint64_t v34 = *((void *)this + 2);
        goto LABEL_66;
      default:
        int v9 = TagFallback & 7;
LABEL_62:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000A1394(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 172);
  if (v6)
  {
    uint64_t v11 = *(void *)(result + 8);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_1001145F8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v11, a2, a4);
    int v6 = *(_DWORD *)(v5 + 172);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  if ((*(_DWORD *)(v5 + 172) & 4) != 0) {
LABEL_4:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 56), (int)a2, a4);
LABEL_5:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  int v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x10) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 48), a3);
    int v8 = *(_DWORD *)(v5 + 172);
    if ((v8 & 0x20) == 0)
    {
LABEL_10:
      if ((v8 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_38;
    }
  }
  else if ((v8 & 0x20) == 0)
  {
    goto LABEL_10;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 64), a3);
  int v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x40) == 0)
  {
LABEL_11:
    if ((v8 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 72), a3);
  int v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x80) == 0)
  {
LABEL_12:
    if ((v8 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(float *)(v5 + 60), a3);
  int v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x100) == 0)
  {
LABEL_13:
    if ((v8 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(float *)(v5 + 80), a3);
  int v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x200) == 0)
  {
LABEL_14:
    if ((v8 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 84), (int)a2, a4);
  int v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x400) == 0)
  {
LABEL_15:
    if ((v8 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 88), (int)a2, a4);
  int v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x800) == 0)
  {
LABEL_16:
    if ((v8 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_DWORD *)(v5 + 92), (int)a2, a4);
  int v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x1000) == 0)
  {
LABEL_17:
    if ((v8 & 0x2000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_44:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(_DWORD *)(v5 + 96), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 172) & 0x2000) != 0) {
LABEL_18:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(_DWORD *)(v5 + 100), (int)a2, a4);
LABEL_19:
  if (*(int *)(v5 + 112) >= 1)
  {
    uint64_t v9 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(void *)(*(void *)(v5 + 104) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 112));
  }
  int v10 = *(_DWORD *)(v5 + 172);
  if ((v10 & 0x8000) != 0)
  {
    uint64_t v12 = *(void *)(v5 + 128);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_1001145F8 + 128);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v12, a2, a4);
    int v10 = *(_DWORD *)(v5 + 172);
    if ((v10 & 0x10000) == 0)
    {
LABEL_24:
      if ((v10 & 0x20000) == 0) {
        goto LABEL_25;
      }
      goto LABEL_50;
    }
  }
  else if ((v10 & 0x10000) == 0)
  {
    goto LABEL_24;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(_DWORD *)(v5 + 136), (int)a2, a4);
  int v10 = *(_DWORD *)(v5 + 172);
  if ((v10 & 0x20000) == 0)
  {
LABEL_25:
    if ((v10 & 0x40000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(_DWORD *)(v5 + 140), (int)a2, a4);
  int v10 = *(_DWORD *)(v5 + 172);
  if ((v10 & 0x40000) == 0)
  {
LABEL_26:
    if ((v10 & 0x80000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(_DWORD *)(v5 + 144), (int)a2, a4);
  int v10 = *(_DWORD *)(v5 + 172);
  if ((v10 & 0x80000) == 0)
  {
LABEL_27:
    if ((v10 & 0x100000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(_DWORD *)(v5 + 148), (int)a2, a4);
  int v10 = *(_DWORD *)(v5 + 172);
  if ((v10 & 0x100000) == 0)
  {
LABEL_28:
    if ((v10 & 0x200000) == 0) {
      goto LABEL_29;
    }
LABEL_54:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, (int)a2, *(double *)(v5 + 152), a3);
    if ((*(_DWORD *)(v5 + 172) & 0x400000) == 0) {
      return result;
    }
    goto LABEL_55;
  }
LABEL_53:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(_DWORD *)(v5 + 160), (int)a2, a4);
  int v10 = *(_DWORD *)(v5 + 172);
  if ((v10 & 0x200000) != 0) {
    goto LABEL_54;
  }
LABEL_29:
  if ((v10 & 0x400000) == 0) {
    return result;
  }
LABEL_55:
  int v13 = *(_DWORD *)(v5 + 164);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v13, (int)a2, a4);
}

uint64_t sub_1000A16AC(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 172);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1001145F8 + 8);
      }
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10008EF74(v6, a2);
      int v8 = (int)v7;
      if (v7 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      }
      else {
        int v9 = 1;
      }
      int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 172);
    }
    else
    {
      int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      int v10 = v4 + 9;
    }
    else {
      int v10 = v4;
    }
    if ((v3 & 4) != 0)
    {
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
      if ((v11 & 0x80000000) != 0)
      {
        int v12 = 10;
      }
      else if (v11 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
        int v3 = *(_DWORD *)(a1 + 172);
      }
      else
      {
        int v12 = 1;
      }
      v10 += v12 + 1;
    }
    int v13 = v10 + 9;
    if ((v3 & 0x10) == 0) {
      int v13 = v10;
    }
    if ((v3 & 0x20) != 0) {
      v13 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v13 += 9;
    }
    if ((v3 & 0x80) != 0) {
      int v5 = v13 + 5;
    }
    else {
      int v5 = v13;
    }
  }
  else
  {
    int v5 = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0) {
      v5 += 5;
    }
    if ((v3 & 0x200) != 0)
    {
      unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 84);
      if ((v14 & 0x80000000) != 0)
      {
        int v15 = 10;
      }
      else if (v14 >= 0x80)
      {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
        int v3 = *(_DWORD *)(a1 + 172);
      }
      else
      {
        int v15 = 1;
      }
      v5 += v15 + 1;
      if ((v3 & 0x400) == 0)
      {
LABEL_35:
        if ((v3 & 0x800) == 0) {
          goto LABEL_36;
        }
        goto LABEL_52;
      }
    }
    else if ((v3 & 0x400) == 0)
    {
      goto LABEL_35;
    }
    unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
    if ((v16 & 0x80000000) != 0)
    {
      int v17 = 10;
    }
    else if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
      int v3 = *(_DWORD *)(a1 + 172);
    }
    else
    {
      int v17 = 1;
    }
    v5 += v17 + 1;
    if ((v3 & 0x800) == 0)
    {
LABEL_36:
      if ((v3 & 0x1000) == 0) {
        goto LABEL_37;
      }
      goto LABEL_58;
    }
LABEL_52:
    unint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 92);
    if ((v18 & 0x80000000) != 0)
    {
      int v19 = 10;
    }
    else if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
      int v3 = *(_DWORD *)(a1 + 172);
    }
    else
    {
      int v19 = 1;
    }
    v5 += v19 + 1;
    if ((v3 & 0x1000) == 0)
    {
LABEL_37:
      if ((v3 & 0x2000) == 0) {
        goto LABEL_38;
      }
      goto LABEL_64;
    }
LABEL_58:
    unint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 96);
    if ((v20 & 0x80000000) != 0)
    {
      int v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
      int v3 = *(_DWORD *)(a1 + 172);
    }
    else
    {
      int v21 = 1;
    }
    v5 += v21 + 1;
    if ((v3 & 0x2000) == 0)
    {
LABEL_38:
      if ((v3 & 0x8000) == 0) {
        goto LABEL_76;
      }
LABEL_70:
      uint64_t v24 = *(void *)(a1 + 128);
      if (!v24) {
        uint64_t v24 = *(void *)(qword_1001145F8 + 128);
      }
      unsigned int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009F830(v24);
      int v26 = (int)v25;
      if (v25 >= 0x80) {
        int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
      }
      else {
        int v27 = 1;
      }
      v5 += v26 + v27 + 2;
      int v3 = *(_DWORD *)(a1 + 172);
      goto LABEL_76;
    }
LABEL_64:
    unint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 100);
    if ((v22 & 0x80000000) != 0)
    {
      int v23 = 10;
    }
    else if (v22 >= 0x80)
    {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
      int v3 = *(_DWORD *)(a1 + 172);
    }
    else
    {
      int v23 = 1;
    }
    v5 += v23 + 1;
    if ((v3 & 0x8000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_70;
  }
LABEL_76:
  if ((v3 & 0xFF0000) == 0) {
    goto LABEL_122;
  }
  if ((v3 & 0x10000) != 0)
  {
    unint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 136);
    if ((v28 & 0x80000000) != 0)
    {
      int v29 = 10;
    }
    else if (v28 >= 0x80)
    {
      int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28, a2);
      int v3 = *(_DWORD *)(a1 + 172);
    }
    else
    {
      int v29 = 1;
    }
    v5 += v29 + 2;
    if ((v3 & 0x20000) == 0)
    {
LABEL_79:
      if ((v3 & 0x40000) == 0) {
        goto LABEL_80;
      }
      goto LABEL_95;
    }
  }
  else if ((v3 & 0x20000) == 0)
  {
    goto LABEL_79;
  }
  unint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 140);
  if ((v30 & 0x80000000) != 0)
  {
    int v31 = 10;
  }
  else if (v30 >= 0x80)
  {
    int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
    int v3 = *(_DWORD *)(a1 + 172);
  }
  else
  {
    int v31 = 1;
  }
  v5 += v31 + 2;
  if ((v3 & 0x40000) == 0)
  {
LABEL_80:
    if ((v3 & 0x80000) == 0) {
      goto LABEL_81;
    }
LABEL_101:
    unint64_t v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 148);
    if ((v34 & 0x80000000) != 0)
    {
      int v35 = 12;
    }
    else if (v34 >= 0x80)
    {
      int v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34, a2) + 2;
      int v3 = *(_DWORD *)(a1 + 172);
    }
    else
    {
      int v35 = 3;
    }
    v5 += v35;
    if ((v3 & 0x100000) == 0) {
      goto LABEL_113;
    }
    goto LABEL_107;
  }
LABEL_95:
  unint64_t v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 144);
  if ((v32 & 0x80000000) != 0)
  {
    int v33 = 12;
  }
  else if (v32 >= 0x80)
  {
    int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32, a2) + 2;
    int v3 = *(_DWORD *)(a1 + 172);
  }
  else
  {
    int v33 = 3;
  }
  v5 += v33;
  if ((v3 & 0x80000) != 0) {
    goto LABEL_101;
  }
LABEL_81:
  if ((v3 & 0x100000) != 0)
  {
LABEL_107:
    uint64_t v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 160);
    if ((v36 & 0x80000000) != 0)
    {
      int v37 = 12;
    }
    else if (v36 >= 0x80)
    {
      int v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36, a2) + 2;
      int v3 = *(_DWORD *)(a1 + 172);
    }
    else
    {
      int v37 = 3;
    }
    v5 += v37;
  }
LABEL_113:
  if ((v3 & 0x200000) != 0) {
    v5 += 10;
  }
  if ((v3 & 0x400000) != 0)
  {
    uint64_t v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 164);
    if ((v38 & 0x80000000) != 0)
    {
      int v39 = 12;
    }
    else if (v38 >= 0x80)
    {
      int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38, a2) + 2;
    }
    else
    {
      int v39 = 3;
    }
    v5 += v39;
  }
LABEL_122:
  int v40 = *(_DWORD *)(a1 + 32);
  int v41 = v40 + v5;
  if (v40 >= 1)
  {
    uint64_t v42 = 0;
    do
      v41 += sub_10009EBE8(*(void *)(*(void *)(a1 + 24) + 8 * v42++)) + 1;
    while (v42 < *(int *)(a1 + 32));
  }
  int v43 = *(_DWORD *)(a1 + 112);
  uint64_t v44 = (v43 + v41);
  if (v43 >= 1)
  {
    uint64_t v45 = 0;
    do
    {
      uint64_t v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009E548(*(void *)(*(void *)(a1 + 104)+ 8 * v45), a2);
      int v47 = (int)v46;
      if (v46 >= 0x80) {
        int v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v46, a2);
      }
      else {
        int v48 = 1;
      }
      uint64_t v44 = (v47 + v44 + v48);
      ++v45;
    }
    while (v45 < *(int *)(a1 + 112));
  }
  *(_DWORD *)(a1 + 168) = v44;
  return v44;
}

void sub_1000A1B0C(uint64_t a1, void *lpsrc)
{
  sub_10009F938(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000A1BB0()
{
  return 1;
}

void *sub_1000A1BB8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.SvInfo");
}

float sub_1000A1BC8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  if (!(_BYTE)v5) {
    return *(float *)&v4;
  }
  if (*(unsigned char *)(a2 + 32))
  {
    unsigned int v6 = *(_DWORD *)(a2 + 16);
    if (v6 >= 0xD) {
      __assert_rtn("set_band", "CLPGnssMeasApi.pb.h", 11445, "::CLP::LogEntry::PrivateData::Band_IsValid(value)");
    }
    *(_DWORD *)(a1 + 32) |= 1u;
    *(_DWORD *)(a1 + 16) = v6;
    int v5 = *(_DWORD *)(a2 + 32);
  }
  if ((v5 & 2) == 0)
  {
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_13:
    LODWORD(v4) = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(_DWORD *)(a1 + 20) = v4;
    if ((*(_DWORD *)(a2 + 32) & 8) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 32) |= 2u;
  *(void *)(a1 + 8) = v4;
  int v5 = *(_DWORD *)(a2 + 32);
  if ((v5 & 4) != 0) {
    goto LABEL_13;
  }
LABEL_9:
  if ((v5 & 8) != 0)
  {
LABEL_10:
    LODWORD(v4) = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_DWORD *)(a1 + 24) = v4;
  }
  return *(float *)&v4;
}

void sub_1000A1CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000A1CF8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C710;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000A1D18(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C710;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000A1D6C()
{
}

uint64_t sub_1000A1DBC(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1000A1DD4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        v14[0] = 0;
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v14);
          if (!result) {
            return result;
          }
          unsigned int v9 = v14[0];
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 0xC)
        {
          *(_DWORD *)(a1 + 32) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_27;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_17;
        }
LABEL_27:
        *(void *)unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v14) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v14;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        int v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 29) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_31:
        v14[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v14) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 20) = v14[0];
        *(_DWORD *)(a1 + 32) |= 4u;
        int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 37) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_35:
        v14[0] = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v14))
        {
          *(_DWORD *)(a1 + 24) = v14[0];
          *(_DWORD *)(a1 + 32) |= 8u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_31;
        }
        goto LABEL_17;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_17;
        }
        goto LABEL_35;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000A2040(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(float *)(v5 + 20), a3);
      if ((*(_DWORD *)(v5 + 32) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 8), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  float v7 = *(float *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, v7, a3);
}

uint64_t sub_1000A20E8(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 32))
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v6 & 0x80000000) != 0)
      {
        unsigned int v4 = 11;
      }
      else if (v6 >= 0x80)
      {
        unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 32);
      }
      else
      {
        unsigned int v4 = 2;
      }
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      uint64_t result = v4 + 5;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 28) = result;
  return result;
}

float sub_1000A2178(uint64_t a1, void *lpsrc)
{
  return sub_1000A1BC8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000A221C()
{
  return 1;
}

void *sub_1000A2224@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.ReceiverBandCorrections");
}

void sub_1000A2234(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(void *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v6;
    }
  }
}

void sub_1000A22E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000A22F8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C788;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000A2318(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C788;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000A236C()
{
}

uint64_t sub_1000A23BC(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1000A23D4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      uint64_t v11 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
        if (!result) {
          return result;
        }
        int v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        unint64_t *v5 = *v11;
        int v12 = v11 + 1;
        *((void *)this + 1) = v12;
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        int v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_24:
        unsigned int v16 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
          unint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v10;
          unint64_t v14 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 16) = v13;
        *(_DWORD *)(a1 + 24) |= 2u;
        if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000A2580(uint64_t result, unint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, v4, a4);
  }
  return result;
}

uint64_t sub_1000A25EC(uint64_t a1, unint64_t a2)
{
  if (*(unsigned char *)(a1 + 24))
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_13;
      }
    }
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v4 & 0x80000000) != 0)
    {
      int v5 = 11;
    }
    else if (v4 >= 0x80)
    {
      int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    }
    else
    {
      int v5 = 2;
    }
    uint64_t v3 = (v5 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_13:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1000A2674(uint64_t a1, void *lpsrc)
{
  sub_1000A2234(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000A2718()
{
  return 1;
}

void *sub_1000A2720@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.LeapSecondChange");
}

void sub_1000A2730(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 12);
      if (v6 >= 5) {
        __assert_rtn("set_change_knowledge", "CLPGnssMeasApi.pb.h", 11608, "::CLP::LogEntry::PrivateData::LeapSecondChangeKnowledge_IsValid(value)");
      }
      *(_DWORD *)(a1 + 28) |= 2u;
      *(_DWORD *)(a1 + 12) = v6;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 4u;
      uint64_t v7 = *(void *)(a1 + 16);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 16);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_100114610 + 16);
      }
      sub_1000A2234(v7, v8);
    }
  }
}

void sub_1000A2878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000A2890(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010C800;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_100114610 != this)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000A2920(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000A2890(a1);

  operator delete();
}

void sub_1000A2958()
{
}

uint64_t CLP::LogEntry::PrivateData::LeapSecondInfo::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 28);
  if (v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 4) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 24))
        {
          *(void *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
      }
    }
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t sub_1000A29D8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unsigned int v6 = (char *)*((void *)this + 1);
          if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v6;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v6 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v8 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v9 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          uint64_t v11 = (char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!result) {
              return result;
            }
            int v12 = (unsigned char *)*((void *)this + 1);
            unint64_t v10 = *((void *)this + 2);
          }
          else
          {
            unsigned int *v5 = *v11;
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
          }
          *(_DWORD *)(a1 + 28) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            unsigned int v13 = v12 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_27;
          }
        }
        if (v8 != 2) {
          break;
        }
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v13 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_27:
        unsigned int v26 = 0;
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!result) {
            return result;
          }
          unsigned int v15 = v26;
        }
        else
        {
          unsigned int v15 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (v15 <= 4)
        {
          *(_DWORD *)(a1 + 28) |= 2u;
          *(_DWORD *)(a1 + 12) = v15;
        }
        unsigned int v16 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v16 < *((void *)this + 2) && *v16 == 26)
        {
          *((void *)this + 1) = v16 + 1;
          goto LABEL_37;
        }
      }
      if (v8 != 3)
      {
        int v9 = TagFallback & 7;
        goto LABEL_19;
      }
      int v9 = TagFallback & 7;
      if (v9 == 2) {
        break;
      }
LABEL_19:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_37:
    *(_DWORD *)(a1 + 28) |= 4u;
    uint64_t v17 = *(void *)(a1 + 16);
    if (!v17) {
      operator new();
    }
    unsigned int v27 = 0;
    unint64_t v18 = (char *)*((void *)this + 1);
    if ((unint64_t)v18 >= *((void *)this + 2) || *v18 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27)) {
        return 0;
      }
    }
    else
    {
      unsigned int v27 = *v18;
      *((void *)this + 1) = v18 + 1;
    }
    int v19 = *((_DWORD *)this + 14);
    int v20 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v19 + 1;
    if (v19 >= v20) {
      return 0;
    }
    int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
    if (!sub_1000A23D4(v17, this, v22) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
    int v23 = *((_DWORD *)this + 14);
    BOOL v24 = __OFSUB__(v23, 1);
    int v25 = v23 - 1;
    if (v25 < 0 == v24) {
      *((_DWORD *)this + 14) = v25;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1000A2CB8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_100114610 + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_1000A2D54(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_23;
  }
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 28);
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_16;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_16:
  if ((v3 & 4) != 0)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_100114610 + 16);
    }
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A25EC(v8, a2);
    int v11 = (int)v9;
    if (v9 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
  }
LABEL_23:
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

void sub_1000A2E40(uint64_t a1, void *lpsrc)
{
  sub_1000A2730(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000A2EE4()
{
  return 1;
}

void *sub_1000A2EEC@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.LeapSecondInfo");
}

double sub_1000A2EFC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 44);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 44))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 44) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 44);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(double *)(a1 + 16) = result;
    int v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return result;
      }
      goto LABEL_8;
    }
LABEL_12:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(double *)(a1 + 24) = result;
    if ((*(_DWORD *)(a2 + 44) & 8) == 0) {
      return result;
    }
LABEL_8:
    double result = *(double *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(double *)(a1 + 32) = result;
  }
  return result;
}

void sub_1000A2FF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000A3008(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C878;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000A3028(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C878;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000A307C()
{
}

uint64_t sub_1000A30D4(uint64_t result)
{
  if (*(unsigned char *)(result + 44))
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_1000A30F0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v10;
          int v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_26;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_18;
        }
LABEL_26:
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v15;
        *(_DWORD *)(a1 + 44) |= 2u;
        unsigned int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 25) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_30:
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v15;
        *(_DWORD *)(a1 + 44) |= 4u;
        unint64_t v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 33) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_34:
        unint64_t v15 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15))
        {
          *(void *)(a1 + 32) = v15;
          *(_DWORD *)(a1 + 44) |= 8u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_30;
        }
        goto LABEL_18;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_18;
        }
        goto LABEL_34;
      default:
        int v8 = TagFallback & 7;
LABEL_18:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000A3358(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v4, *(double *)(v5 + 24), a3);
      if ((*(_DWORD *)(v5 + 44) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v4, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  double v7 = *(double *)(v5 + 32);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v4, v7, a3);
}

uint64_t sub_1000A3400(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 44))
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 44);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

double sub_1000A3474(uint64_t a1, void *lpsrc)
{
  return sub_1000A2EFC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000A3518()
{
  return 1;
}

void *sub_1000A3520@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.GpsToUtcConversion");
}

double sub_1000A3530(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      int v6 = *(_DWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(_DWORD *)(a1 + 24) = v6;
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_14;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 32) |= 2u;
    uint64_t v7 = *(void *)(a1 + 8);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_100114620 + 8);
    }
    sub_1000A2730(v7, v8);
    if ((*(_DWORD *)(a2 + 32) & 4) != 0)
    {
LABEL_14:
      *(_DWORD *)(a1 + 32) |= 4u;
      uint64_t v9 = *(void *)(a1 + 16);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = *(void *)(a2 + 16);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_100114620 + 16);
      }
      return sub_1000A2EFC(v9, v10);
    }
  }
  return result;
}

void sub_1000A36B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1000A36D0(void *result)
{
  if ((void *)qword_100114620 != result)
  {
    char v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    double result = (void *)v1[2];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1000A3770(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C8F0;
  sub_1000A36D0(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000A37C4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C8F0;
  sub_1000A36D0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000A382C()
{
}

uint64_t CLP::LogEntry::PrivateData::GpsTimeInfo::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 32);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 24) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CLP::LogEntry::PrivateData::LeapSecondInfo::Clear(this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 44))
        {
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + 8) = 0u;
        }
        *(_DWORD *)(v3 + 44) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return this;
}

uint64_t sub_1000A38E4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 24);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v6 = (char *)*((void *)this + 1);
          if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v6;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v6 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v8 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v9 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          int v11 = (char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!result) {
              return result;
            }
            int v12 = (unsigned char *)*((void *)this + 1);
            unint64_t v10 = *((void *)this + 2);
          }
          else
          {
            unsigned int *v5 = *v11;
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
          }
          int v13 = *(_DWORD *)(a1 + 32) | 1;
          *(_DWORD *)(a1 + 32) = v13;
          if ((unint64_t)v12 < v10 && *v12 == 18)
          {
            *((void *)this + 1) = v12 + 1;
            goto LABEL_27;
          }
        }
        if (v8 != 2) {
          break;
        }
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_19;
        }
        int v13 = *(_DWORD *)(a1 + 32);
LABEL_27:
        *(_DWORD *)(a1 + 32) = v13 | 2;
        uint64_t v15 = *(void *)(a1 + 8);
        if (!v15) {
          operator new();
        }
        unsigned int v33 = 0;
        unsigned int v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33))return 0; {
        }
          }
        else
        {
          unsigned int v33 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)this + 14);
        int v18 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v17 + 1;
        if (v17 >= v18) {
          return 0;
        }
        int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v33);
        if (!sub_1000A29D8(v15, this, v20) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
        int v21 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)this + 14) = v23;
        }
        BOOL v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 < *((void *)this + 2) && *v24 == 26)
        {
          *((void *)this + 1) = v24 + 1;
          goto LABEL_41;
        }
      }
      if (v8 != 3) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_19;
      }
LABEL_41:
      *(_DWORD *)(a1 + 32) |= 4u;
      uint64_t v25 = *(void *)(a1 + 16);
      if (!v25) {
        operator new();
      }
      unsigned int v34 = 0;
      unsigned int v26 = (char *)*((void *)this + 1);
      if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34))return 0; {
      }
        }
      else
      {
        unsigned int v34 = *v26;
        *((void *)this + 1) = v26 + 1;
      }
      int v27 = *((_DWORD *)this + 14);
      int v28 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v27 + 1;
      if (v27 >= v28) {
        return 0;
      }
      int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
      if (!sub_1000A30F0(v25, this, v30) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
      int v31 = *((_DWORD *)this + 14);
      BOOL v22 = __OFSUB__(v31, 1);
      int v32 = v31 - 1;
      if (v32 < 0 == v22) {
        *((_DWORD *)this + 14) = v32;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v9 = TagFallback & 7;
LABEL_19:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000A3C64(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 24), a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_100114620 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0)
  {
LABEL_9:
    uint64_t v8 = *(void *)(v5 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_100114620 + 16);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  }
  return result;
}

uint64_t sub_1000A3D10(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_23;
  }
  if ((*(unsigned char *)(a1 + 32) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_16;
    }
LABEL_10:
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_100114620 + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A2D54(v6, a2);
    int v8 = (int)v7;
    if (v7 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
    }
    else {
      int v9 = 1;
    }
    uint64_t v4 = (v4 + v8 + v9 + 1);
    int v3 = *(_DWORD *)(a1 + 32);
    goto LABEL_16;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v5 >= 0x80)
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_10;
  }
  uint64_t v4 = 2;
  if ((v3 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_100114620 + 16);
    }
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A3400(v10, a2);
    int v13 = (int)v11;
    if (v11 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, v12);
    }
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }
LABEL_23:
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

double sub_1000A3E10(uint64_t a1, void *lpsrc)
{
  return sub_1000A3530(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000A3EB4()
{
  return 1;
}

void *sub_1000A3EBC@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.GpsTimeInfo");
}

double sub_1000A3ECC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      double result = *(double *)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 2u;
      *(double *)(a1 + 16) = result;
    }
  }
  return result;
}

void sub_1000A3F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000A3F90(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C968;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000A3FB0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C968;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000A4004()
{
}

uint64_t sub_1000A4050(uint64_t result)
{
  if (*(unsigned char *)(result + 28))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1000A4064(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_16;
        }
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v10;
          int v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }
        *(_DWORD *)(a1 + 28) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_24;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 1) {
        goto LABEL_16;
      }
LABEL_24:
      unint64_t v13 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
        return 0;
      }
      *(void *)(a1 + 16) = v13;
      *(_DWORD *)(a1 + 28) |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_1000A41F0(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if ((v6 & 2) != 0)
  {
    double v7 = *(double *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v4, v7, a3);
  }
  return result;
}

uint64_t sub_1000A425C(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 28))
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 28);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 24) = result;
  return result;
}

double sub_1000A42B8(uint64_t a1, void *lpsrc)
{
  return sub_1000A3ECC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000A435C()
{
  return 1;
}

void *sub_1000A4364@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.GlonassSubsecondConversion");
}

double sub_1000A4374(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 40);
  if (!(_BYTE)v5) {
    return result;
  }
  if (*(unsigned char *)(a2 + 40))
  {
    int v6 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(_DWORD *)(a1 + 8) = v6;
    int v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_12:
      unsigned int v8 = *(_DWORD *)(a2 + 32);
      if (v8 >= 6) {
        __assert_rtn("set_leap_second_deprecated", "CLPGnssMeasApi.pb.h", 11971, "::CLP::LogEntry::PrivateData::GlonassLeapSecondDeprecated_IsValid(value)");
      }
      *(_DWORD *)(a1 + 40) |= 4u;
      *(_DWORD *)(a1 + 32) = v8;
      int v5 = *(_DWORD *)(a2 + 40);
      if ((v5 & 8) == 0)
      {
LABEL_8:
        if ((v5 & 0x10) == 0) {
          return result;
        }
        goto LABEL_19;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a2 + 40) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v7 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 40) |= 2u;
  *(_DWORD *)(a1 + 12) = v7;
  int v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_7:
  if ((v5 & 8) == 0) {
    goto LABEL_8;
  }
LABEL_14:
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = *(void *)(a2 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_100114630 + 16);
  }
  double result = sub_1000A3ECC(v9, v10);
  if ((*(_DWORD *)(a2 + 40) & 0x10) != 0)
  {
LABEL_19:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v11 = *(void *)(a1 + 24);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 24);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_100114630 + 24);
    }
    return sub_1000A3ECC(v11, v12);
  }
  return result;
}

void sub_1000A4558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1000A4570(void *result)
{
  if ((void *)qword_100114630 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    double result = (void *)v1[3];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1000A4610(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C9E0;
  sub_1000A4570(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000A4664(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010C9E0;
  sub_1000A4570(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000A46CC()
{
}

uint64_t CLP::LogEntry::PrivateData::GlonassTimeInfo::Clear(uint64_t this)
{
  LOBYTE(v1) = *(unsigned char *)(this + 40);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    *(_DWORD *)(this + 32) = 0;
    if ((v1 & 8) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 28))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 28) = 0;
        int v1 = *(_DWORD *)(this + 40);
      }
    }
    if ((v1 & 0x10) != 0)
    {
      uint64_t v3 = *(void *)(this + 24);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 28))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
      }
    }
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t sub_1000A4778(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 12);
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v11;
          uint64_t v12 = v11 + 1;
          *((void *)this + 1) = v12;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        if ((unint64_t)v12 < v10 && *v12 == 16)
        {
          unint64_t v13 = v12 + 1;
          *((void *)this + 1) = v13;
          goto LABEL_28;
        }
        continue;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_28:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v13;
          unsigned int v16 = v13 + 1;
          *((void *)this + 1) = v16;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        if ((unint64_t)v16 >= v10 || *v16 != 24) {
          continue;
        }
        int v14 = v16 + 1;
        *((void *)this + 1) = v14;
LABEL_36:
        unsigned int v37 = 0;
        if ((unint64_t)v14 >= v10 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37);
          if (!result) {
            return result;
          }
          unsigned int v17 = v37;
        }
        else
        {
          unsigned int v17 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        if (v17 <= 5)
        {
          *(_DWORD *)(a1 + 40) |= 4u;
          *(_DWORD *)(a1 + 32) = v17;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 34) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_46:
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v19 = *(void *)(a1 + 16);
        if (!v19) {
          operator new();
        }
        unsigned int v38 = 0;
        unsigned int v20 = (char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38))return 0; {
        }
          }
        else
        {
          unsigned int v38 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v38);
        if (!sub_1000A4064(v19, this, v24) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v25 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v25, 1);
        int v27 = v25 - 1;
        if (v27 < 0 == v26) {
          *((_DWORD *)this + 14) = v27;
        }
        int v28 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 != 42) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_60:
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v29 = *(void *)(a1 + 24);
        if (!v29) {
          operator new();
        }
        unsigned int v39 = 0;
        unsigned int v30 = (char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39))return 0; {
        }
          }
        else
        {
          unsigned int v39 = *v30;
          *((void *)this + 1) = v30 + 1;
        }
        int v31 = *((_DWORD *)this + 14);
        int v32 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v31 + 1;
        if (v31 < v32)
        {
          int v33 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v39);
          if (sub_1000A4064(v29, this, v34))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v33);
              int v35 = *((_DWORD *)this + 14);
              BOOL v26 = __OFSUB__(v35, 1);
              int v36 = v35 - 1;
              if (v36 < 0 == v26) {
                *((_DWORD *)this + 14) = v36;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_36;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_46;
        }
        goto LABEL_20;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_20;
        }
        goto LABEL_60;
      default:
        int v9 = TagFallback & 7;
LABEL_20:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000A4C08(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 32), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_10:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_100114630 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 0x10) != 0)
  {
LABEL_13:
    uint64_t v8 = *(void *)(v5 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_100114630 + 24);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, a2, a4);
  }
  return result;
}

uint64_t sub_1000A4CEC(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_36;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_36;
      }
      goto LABEL_30;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_100114630 + 16);
  }
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A425C(v10, a2);
  int v12 = (int)v11;
  if (v11 >= 0x80) {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
  }
  else {
    int v13 = 1;
  }
  uint64_t v4 = (v4 + v12 + v13 + 1);
  if ((*(_DWORD *)(a1 + 40) & 0x10) != 0)
  {
LABEL_30:
    uint64_t v14 = *(void *)(a1 + 24);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_100114630 + 24);
    }
    uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A425C(v14, a2);
    int v17 = (int)v15;
    if (v15 >= 0x80) {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, v16);
    }
    else {
      int v18 = 1;
    }
    uint64_t v4 = (v4 + v17 + v18 + 1);
  }
LABEL_36:
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

double sub_1000A4E54(uint64_t a1, void *lpsrc)
{
  return sub_1000A4374(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000A4EF8()
{
  return 1;
}

void *sub_1000A4F00@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.GlonassTimeInfo");
}

double sub_1000A4F10(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }
  return result;
}

void sub_1000A4FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000A4FFC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010CA58;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000A501C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010CA58;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000A5070()
{
}

uint64_t sub_1000A50C4(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1000A50DC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = (char *)*((void *)this + 1);
          if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v6;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v6 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v8 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v9 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          uint64_t v11 = (char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
            if (!result) {
              return result;
            }
            int v12 = (unsigned char *)*((void *)this + 1);
            unint64_t v10 = *((void *)this + 2);
          }
          else
          {
            unint64_t *v5 = *v11;
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
          }
          *(_DWORD *)(a1 + 36) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 17)
          {
            *((void *)this + 1) = v12 + 1;
            goto LABEL_27;
          }
        }
        if (v8 != 2) {
          break;
        }
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_19;
        }
LABEL_27:
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v15;
        *(_DWORD *)(a1 + 36) |= 2u;
        uint64_t v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 < *((void *)this + 2) && *v14 == 25)
        {
          *((void *)this + 1) = v14 + 1;
          goto LABEL_31;
        }
      }
      if (v8 != 3) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 1) {
        goto LABEL_19;
      }
LABEL_31:
      unint64_t v15 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
        return 0;
      }
      *(void *)(a1 + 24) = v15;
      *(_DWORD *)(a1 + 36) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v9 = TagFallback & 7;
LABEL_19:
    if (v9 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_1000A52C8(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v4, *(double *)(v5 + 16), a3);
    if ((*(_DWORD *)(v5 + 36) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  double v7 = *(double *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v4, v7, a3);
}

uint64_t sub_1000A5354(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 36))
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

double sub_1000A53BC(uint64_t a1, void *lpsrc)
{
  return sub_1000A4F10(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000A5460()
{
  return 1;
}

void *sub_1000A5468@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.SubSecondConversion");
}

double sub_1000A5478(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 56);
  if (!(_BYTE)v5) {
    return result;
  }
  if (*(unsigned char *)(a2 + 56))
  {
    int v6 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 56) |= 1u;
    *(_DWORD *)(a1 + 48) = v6;
    int v5 = *(_DWORD *)(a2 + 56);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_17;
    }
  }
  else if ((*(unsigned char *)(a2 + 56) & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 56) |= 2u;
  uint64_t v7 = *(void *)(a1 + 8);
  if (!v7) {
    operator new();
  }
  uint64_t v8 = *(void *)(a2 + 8);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_100114640 + 8);
  }
  sub_1000A2730(v7, v8);
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_22:
    *(_DWORD *)(a1 + 56) |= 8u;
    uint64_t v11 = *(void *)(a1 + 24);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 24);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_100114640 + 24);
    }
    double result = sub_1000A4F10(v11, v12);
    int v5 = *(_DWORD *)(a2 + 56);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        return result;
      }
      goto LABEL_32;
    }
    goto LABEL_27;
  }
LABEL_17:
  *(_DWORD *)(a1 + 56) |= 4u;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = *(void *)(a2 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_100114640 + 16);
  }
  double result = sub_1000A4F10(v9, v10);
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 8) != 0) {
    goto LABEL_22;
  }
LABEL_8:
  if ((v5 & 0x10) == 0) {
    goto LABEL_9;
  }
LABEL_27:
  *(_DWORD *)(a1 + 56) |= 0x10u;
  uint64_t v13 = *(void *)(a1 + 32);
  if (!v13) {
    operator new();
  }
  uint64_t v14 = *(void *)(a2 + 32);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_100114640 + 32);
  }
  double result = sub_1000A4F10(v13, v14);
  if ((*(_DWORD *)(a2 + 56) & 0x20) != 0)
  {
LABEL_32:
    *(_DWORD *)(a1 + 56) |= 0x20u;
    uint64_t v15 = *(void *)(a1 + 40);
    if (!v15) {
      operator new();
    }
    uint64_t v16 = *(void *)(a2 + 40);
    if (!v16) {
      uint64_t v16 = *(void *)(qword_100114640 + 40);
    }
    return sub_1000A4F10(v15, v16);
  }
  return result;
}

void sub_1000A5770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1000A5788(void *result)
{
  if ((void *)qword_100114640 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    double result = (void *)v1[5];
    if (result)
    {
      int v6 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v6();
    }
  }
  return result;
}

void sub_1000A58AC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010CAD0;
  sub_1000A5788(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000A5900(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010CAD0;
  sub_1000A5788(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000A5968()
{
}

uint64_t CLP::LogEntry::PrivateData::BeidouTimeInfo::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 56);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 48) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CLP::LogEntry::PrivateData::LeapSecondInfo::Clear(this);
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 32);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 36))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
          *(void *)(v5 + 24) = 0;
        }
        *(_DWORD *)(v5 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      uint64_t v6 = *(void *)(v1 + 40);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 36))
        {
          *(void *)(v6 + 8) = 0;
          *(void *)(v6 + 16) = 0;
          *(void *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 56) = 0;
  return this;
}

uint64_t sub_1000A5A94(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 < *((void *)this + 2) && (*v6 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v10;
          uint64_t v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }
        int v12 = *(_DWORD *)(a1 + 56) | 1;
        *(_DWORD *)(a1 + 56) = v12;
        if ((unint64_t)v11 < v9 && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_30;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_22;
        }
        int v12 = *(_DWORD *)(a1 + 56);
LABEL_30:
        *(_DWORD *)(a1 + 56) = v12 | 2;
        uint64_t v14 = *(void *)(a1 + 8);
        if (!v14) {
          operator new();
        }
        unsigned int v59 = 0;
        uint64_t v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0; {
        }
          }
        else
        {
          unsigned int v59 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v16 = *((_DWORD *)this + 14);
        int v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0;
        }
        int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        if (!sub_1000A29D8(v14, this, v19) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 26) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_44:
        *(_DWORD *)(a1 + 56) |= 4u;
        uint64_t v24 = *(void *)(a1 + 16);
        if (!v24) {
          operator new();
        }
        unsigned int v59 = 0;
        int v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0; {
        }
          }
        else
        {
          unsigned int v59 = *v25;
          *((void *)this + 1) = v25 + 1;
        }
        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        if (!sub_1000A50DC(v24, this, v29) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v21) {
          *((_DWORD *)this + 14) = v31;
        }
        int v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 34) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_58:
        *(_DWORD *)(a1 + 56) |= 8u;
        uint64_t v33 = *(void *)(a1 + 24);
        if (!v33) {
          operator new();
        }
        unsigned int v59 = 0;
        unsigned int v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0; {
        }
          }
        else
        {
          unsigned int v59 = *v34;
          *((void *)this + 1) = v34 + 1;
        }
        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        if (!sub_1000A50DC(v33, this, v38) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v39 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v21) {
          *((_DWORD *)this + 14) = v40;
        }
        int v41 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 != 42) {
          continue;
        }
        *((void *)this + 1) = v41 + 1;
LABEL_72:
        *(_DWORD *)(a1 + 56) |= 0x10u;
        uint64_t v42 = *(void *)(a1 + 32);
        if (!v42) {
          operator new();
        }
        unsigned int v59 = 0;
        int v43 = (char *)*((void *)this + 1);
        if ((unint64_t)v43 >= *((void *)this + 2) || *v43 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0; {
        }
          }
        else
        {
          unsigned int v59 = *v43;
          *((void *)this + 1) = v43 + 1;
        }
        int v44 = *((_DWORD *)this + 14);
        int v45 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v44 + 1;
        if (v44 >= v45) {
          return 0;
        }
        int v46 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        if (!sub_1000A50DC(v42, this, v47) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v46);
        int v48 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v48, 1);
        int v49 = v48 - 1;
        if (v49 < 0 == v21) {
          *((_DWORD *)this + 14) = v49;
        }
        int v50 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v50 >= *((void *)this + 2) || *v50 != 50) {
          continue;
        }
        *((void *)this + 1) = v50 + 1;
LABEL_86:
        *(_DWORD *)(a1 + 56) |= 0x20u;
        uint64_t v51 = *(void *)(a1 + 40);
        if (!v51) {
          operator new();
        }
        unsigned int v59 = 0;
        uint64_t v52 = (char *)*((void *)this + 1);
        if ((unint64_t)v52 >= *((void *)this + 2) || *v52 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0; {
        }
          }
        else
        {
          unsigned int v59 = *v52;
          *((void *)this + 1) = v52 + 1;
        }
        int v53 = *((_DWORD *)this + 14);
        int v54 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v53 + 1;
        if (v53 >= v54) {
          return 0;
        }
        int v55 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        if (!sub_1000A50DC(v51, this, v56) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v55);
        int v57 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v57, 1);
        int v58 = v57 - 1;
        if (v58 < 0 == v21) {
          *((_DWORD *)this + 14) = v58;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_44;
        }
        goto LABEL_22;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_58;
        }
        goto LABEL_22;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_72;
        }
        goto LABEL_22;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_22;
        }
        goto LABEL_86;
      default:
        int v8 = TagFallback & 7;
LABEL_22:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000A619C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 48), a2, a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_100114640 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_100114640 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_15:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_100114640 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_18:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_100114640 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  if ((*(_DWORD *)(v5 + 56) & 0x20) != 0)
  {
LABEL_21:
    uint64_t v11 = *(void *)(v5 + 40);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_100114640 + 40);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v11, a2, a4);
  }
  return result;
}

uint64_t sub_1000A62CC(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 56);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_45;
  }
  if (*(unsigned char *)(a1 + 56))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      int v3 = *(_DWORD *)(a1 + 56);
    }
    else
    {
      int v6 = 1;
    }
    uint64_t v4 = (v6 + 1);
    if ((v3 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 56) & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_100114640 + 8);
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A2D54(v7, a2);
  int v9 = (int)v8;
  if (v8 >= 0x80) {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
  }
  else {
    int v10 = 1;
  }
  uint64_t v4 = (v4 + v9 + v10 + 1);
  int v3 = *(_DWORD *)(a1 + 56);
LABEL_16:
  if ((v3 & 4) != 0)
  {
    uint64_t v11 = *(void *)(a1 + 16);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_100114640 + 16);
    }
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A5354(v11, a2);
    int v13 = (int)v12;
    if (v12 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
    }
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
    int v3 = *(_DWORD *)(a1 + 56);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_33;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  uint64_t v15 = *(void *)(a1 + 24);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_100114640 + 24);
  }
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A5354(v15, a2);
  int v17 = (int)v16;
  if (v16 >= 0x80) {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
  }
  else {
    int v18 = 1;
  }
  uint64_t v4 = (v4 + v17 + v18 + 1);
  int v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 0x10) == 0)
  {
LABEL_19:
    if ((v3 & 0x20) == 0) {
      goto LABEL_45;
    }
    goto LABEL_39;
  }
LABEL_33:
  uint64_t v19 = *(void *)(a1 + 32);
  if (!v19) {
    uint64_t v19 = *(void *)(qword_100114640 + 32);
  }
  int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A5354(v19, a2);
  int v21 = (int)v20;
  if (v20 >= 0x80) {
    int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
  }
  else {
    int v22 = 1;
  }
  uint64_t v4 = (v4 + v21 + v22 + 1);
  if ((*(_DWORD *)(a1 + 56) & 0x20) != 0)
  {
LABEL_39:
    uint64_t v23 = *(void *)(a1 + 40);
    if (!v23) {
      uint64_t v23 = *(void *)(qword_100114640 + 40);
    }
    uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A5354(v23, a2);
    int v26 = (int)v24;
    if (v24 >= 0x80) {
      int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, v25);
    }
    else {
      int v27 = 1;
    }
    uint64_t v4 = (v4 + v26 + v27 + 1);
  }
LABEL_45:
  *(_DWORD *)(a1 + 52) = v4;
  return v4;
}

double sub_1000A64B0(uint64_t a1, void *lpsrc)
{
  return sub_1000A5478(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000A6554()
{
  return 1;
}

void *sub_1000A655C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.BeidouTimeInfo");
}

double sub_1000A656C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 40);
  if (!(_BYTE)v5) {
    return result;
  }
  if ((*(unsigned char *)(a2 + 40) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 40) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v7 = *(void *)(a1 + 8);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_100114648 + 8);
    }
    sub_1000A2730(v7, v8);
    int v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return result;
      }
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  int v6 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) |= 1u;
  *(_DWORD *)(a1 + 32) = v6;
  int v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v5 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_15:
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = *(void *)(a2 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_100114648 + 16);
  }
  double result = sub_1000A4F10(v9, v10);
  if ((*(_DWORD *)(a2 + 40) & 8) != 0)
  {
LABEL_20:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v11 = *(void *)(a1 + 24);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 24);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_100114648 + 24);
    }
    return sub_1000A4F10(v11, v12);
  }
  return result;
}

void sub_1000A676C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1000A6784(void *result)
{
  if ((void *)qword_100114648 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    double result = (void *)v1[3];
    if (result)
    {
      uint64_t v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_1000A6850(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010CB48;
  sub_1000A6784(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000A68A4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010CB48;
  sub_1000A6784(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000A690C()
{
}

uint64_t CLP::LogEntry::PrivateData::GalileoTimeInfo::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 40);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 32) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CLP::LogEntry::PrivateData::LeapSecondInfo::Clear(this);
        int v2 = *(_DWORD *)(v1 + 40);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 40);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 40) = 0;
  return this;
}

uint64_t sub_1000A69EC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 32);
  while (1)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 < *((void *)this + 2) && (*v6 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v10;
          uint64_t v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }
        int v12 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 40) = v12;
        if ((unint64_t)v11 < v9 && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_26;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        int v12 = *(_DWORD *)(a1 + 40);
LABEL_26:
        *(_DWORD *)(a1 + 40) = v12 | 2;
        uint64_t v14 = *(void *)(a1 + 8);
        if (!v14) {
          operator new();
        }
        unsigned int v41 = 0;
        uint64_t v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41))return 0; {
        }
          }
        else
        {
          unsigned int v41 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v16 = *((_DWORD *)this + 14);
        int v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0;
        }
        int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
        if (!sub_1000A29D8(v14, this, v19) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        uint64_t v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 26) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_40:
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v24 = *(void *)(a1 + 16);
        if (!v24) {
          operator new();
        }
        unsigned int v42 = 0;
        unsigned int v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42))return 0; {
        }
          }
        else
        {
          unsigned int v42 = *v25;
          *((void *)this + 1) = v25 + 1;
        }
        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v42);
        if (!sub_1000A50DC(v24, this, v29) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v21) {
          *((_DWORD *)this + 14) = v31;
        }
        int v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 34) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_54:
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v33 = *(void *)(a1 + 24);
        if (!v33) {
          operator new();
        }
        unsigned int v43 = 0;
        unsigned int v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43))return 0; {
        }
          }
        else
        {
          unsigned int v43 = *v34;
          *((void *)this + 1) = v34 + 1;
        }
        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v43);
        if (!sub_1000A50DC(v33, this, v38) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v39 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v21) {
          *((_DWORD *)this + 14) = v40;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_40;
        }
        goto LABEL_18;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        goto LABEL_54;
      default:
        int v8 = TagFallback & 7;
LABEL_18:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000A6EAC(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 32), a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_100114648 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_10:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_100114648 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 8) != 0)
  {
LABEL_13:
    uint64_t v9 = *(void *)(v5 + 24);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_100114648 + 24);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  }
  return result;
}

uint64_t sub_1000A6F84(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_31;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_100114648 + 8);
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A2D54(v6, a2);
  int v8 = (int)v7;
  if (v7 >= 0x80) {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
  }
  else {
    int v9 = 1;
  }
  uint64_t v4 = (v4 + v8 + v9 + 1);
  int v3 = *(_DWORD *)(a1 + 40);
LABEL_16:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_31;
    }
    goto LABEL_25;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_100114648 + 16);
  }
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A5354(v10, a2);
  int v12 = (int)v11;
  if (v11 >= 0x80) {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
  }
  else {
    int v13 = 1;
  }
  uint64_t v4 = (v4 + v12 + v13 + 1);
  if ((*(_DWORD *)(a1 + 40) & 8) != 0)
  {
LABEL_25:
    uint64_t v14 = *(void *)(a1 + 24);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_100114648 + 24);
    }
    uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A5354(v14, a2);
    int v17 = (int)v15;
    if (v15 >= 0x80) {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, v16);
    }
    else {
      int v18 = 1;
    }
    uint64_t v4 = (v4 + v17 + v18 + 1);
  }
LABEL_31:
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

double sub_1000A70D4(uint64_t a1, void *lpsrc)
{
  return sub_1000A656C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000A7178()
{
  return 1;
}

void *sub_1000A7180@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.GalileoTimeInfo");
}

void sub_1000A7190(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      *(_DWORD *)(a1 + 24) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_100114650 + 8);
      }
      sub_1000A4F10(v5, v6);
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v7;
    }
  }
}

void sub_1000A7298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000A72B0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010CBC0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_100114650 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000A7340(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000A72B0(a1);

  operator delete();
}

void sub_1000A7378()
{
}

uint64_t CLP::LogEntry::PrivateData::NavicTimeInfo::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    if (*(unsigned char *)(this + 24))
    {
      uint64_t v1 = *(void *)(this + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(_DWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t sub_1000A73FC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          uint64_t v10 = (char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
          goto LABEL_30;
        }
      }
      else
      {
        int v8 = TagFallback & 7;
      }
LABEL_18:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
    int v8 = TagFallback & 7;
    if (v8 != 2) {
      goto LABEL_18;
    }
    *(_DWORD *)(a1 + 24) |= 1u;
    uint64_t v11 = *(void *)(a1 + 8);
    if (!v11) {
      operator new();
    }
    unsigned int v23 = 0;
    int v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23)) {
        return 0;
      }
    }
    else
    {
      unsigned int v23 = *v12;
      *((void *)this + 1) = v12 + 1;
    }
    int v13 = *((_DWORD *)this + 14);
    int v14 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v13 + 1;
    if (v13 >= v14) {
      return 0;
    }
    int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_1000A50DC(v11, this, v16) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
    int v17 = *((_DWORD *)this + 14);
    BOOL v18 = __OFSUB__(v17, 1);
    int v19 = v17 - 1;
    if (v19 < 0 == v18) {
      *((_DWORD *)this + 14) = v19;
    }
    int v20 = (unsigned char *)*((void *)this + 1);
    unint64_t v9 = *((void *)this + 2);
    if ((unint64_t)v20 < v9 && *v20 == 16)
    {
      uint64_t v10 = v20 + 1;
      *((void *)this + 1) = v10;
LABEL_30:
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        BOOL v21 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        unsigned int *v5 = *v10;
        BOOL v21 = (unsigned __int8 *)(v10 + 1);
        *((void *)this + 1) = v21;
      }
      *(_DWORD *)(a1 + 24) |= 2u;
      if (v21 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
  }
}

uint64_t sub_1000A7658(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_100114650 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 24) & 2) != 0)
  {
LABEL_7:
    int v8 = *(_DWORD *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return result;
}

uint64_t sub_1000A76D8(uint64_t a1, unint64_t a2)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4) {
    uint64_t v4 = *(void *)(qword_100114650 + 8);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A5354(v4, a2);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  }
  else {
    int v7 = 1;
  }
  uint64_t v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 24) & 2) != 0)
  {
LABEL_12:
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    uint64_t v3 = (v9 + v3);
  }
LABEL_16:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1000A7784(uint64_t a1, void *lpsrc)
{
  sub_1000A7190(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000A7828()
{
  return 1;
}

void *sub_1000A7830@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.NavicTimeInfo");
}

void sub_1000A7840(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 52);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 52))
  {
    *(_DWORD *)(a1 + 52) |= 1u;
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_100114658 + 8);
    }
    sub_1000A3530(v5, v6);
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_20:
      *(_DWORD *)(a1 + 52) |= 4u;
      uint64_t v9 = *(void *)(a1 + 24);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = *(void *)(a2 + 24);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_100114658 + 24);
      }
      sub_1000A5478(v9, v10);
      int v4 = *(_DWORD *)(a2 + 52);
      if ((v4 & 8) == 0)
      {
LABEL_8:
        if ((v4 & 0x10) == 0) {
          return;
        }
        goto LABEL_30;
      }
      goto LABEL_25;
    }
  }
  else if ((*(unsigned char *)(a2 + 52) & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 52) |= 2u;
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7) {
    operator new();
  }
  uint64_t v8 = *(void *)(a2 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_100114658 + 16);
  }
  sub_1000A4374(v7, v8);
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 4) != 0) {
    goto LABEL_20;
  }
LABEL_7:
  if ((v4 & 8) == 0) {
    goto LABEL_8;
  }
LABEL_25:
  *(_DWORD *)(a1 + 52) |= 8u;
  uint64_t v11 = *(void *)(a1 + 32);
  if (!v11) {
    operator new();
  }
  uint64_t v12 = *(void *)(a2 + 32);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_100114658 + 32);
  }
  sub_1000A656C(v11, v12);
  if ((*(_DWORD *)(a2 + 52) & 0x10) != 0)
  {
LABEL_30:
    *(_DWORD *)(a1 + 52) |= 0x10u;
    uint64_t v13 = *(void *)(a1 + 40);
    if (!v13) {
      operator new();
    }
    uint64_t v14 = *(void *)(a2 + 40);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_100114658 + 40);
    }
    sub_1000A7190(v13, v14);
  }
}

void sub_1000A7B28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1000A7B40(void *result)
{
  if ((void *)qword_100114658 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t result = (void *)v1[5];
    if (result)
    {
      uint64_t v6 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v6();
    }
  }
  return result;
}

void sub_1000A7C64(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010CC38;
  sub_1000A7B40(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000A7CB8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010CC38;
  sub_1000A7B40(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000A7D20()
{
}

uint64_t CLP::LogEntry::PrivateData::TimeConversionInfo::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 52);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 52))
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CLP::LogEntry::PrivateData::GpsTimeInfo::Clear(this);
        int v2 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(void *)(v1 + 16);
      if (this)
      {
        this = CLP::LogEntry::PrivateData::GlonassTimeInfo::Clear(this);
        int v2 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v2 & 4) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        this = CLP::LogEntry::PrivateData::BeidouTimeInfo::Clear(this);
        int v2 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        this = CLP::LogEntry::PrivateData::GalileoTimeInfo::Clear(this);
        int v2 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this) {
        this = CLP::LogEntry::PrivateData::NavicTimeInfo::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 52) = 0;
  return this;
}

uint64_t sub_1000A7E04(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v54 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v54))return 0; {
        }
          }
        else
        {
          unsigned int v54 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v54);
        if (!sub_1000A38E4(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 18) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_33;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
LABEL_33:
        *(_DWORD *)(a1 + 52) |= 2u;
        uint64_t v18 = *(void *)(a1 + 16);
        if (!v18) {
          operator new();
        }
        unsigned int v54 = 0;
        int v19 = (char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v54))return 0; {
        }
          }
        else
        {
          unsigned int v54 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v54);
        if (!sub_1000A4778(v18, this, v23) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v24 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v15) {
          *((_DWORD *)this + 14) = v25;
        }
        int v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 26) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_47:
        *(_DWORD *)(a1 + 52) |= 4u;
        uint64_t v27 = *(void *)(a1 + 24);
        if (!v27) {
          operator new();
        }
        unsigned int v54 = 0;
        int v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v54))return 0; {
        }
          }
        else
        {
          unsigned int v54 = *v28;
          *((void *)this + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0;
        }
        int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v54);
        if (!sub_1000A5A94(v27, this, v32) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        int v33 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v15) {
          *((_DWORD *)this + 14) = v34;
        }
        int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 34) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_61:
        *(_DWORD *)(a1 + 52) |= 8u;
        uint64_t v36 = *(void *)(a1 + 32);
        if (!v36) {
          operator new();
        }
        unsigned int v54 = 0;
        int v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v54))return 0; {
        }
          }
        else
        {
          unsigned int v54 = *v37;
          *((void *)this + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v54);
        if (!sub_1000A69EC(v36, this, v41) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v42 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v15) {
          *((_DWORD *)this + 14) = v43;
        }
        int v44 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v44 >= *((void *)this + 2) || *v44 != 42) {
          continue;
        }
        *((void *)this + 1) = v44 + 1;
LABEL_75:
        *(_DWORD *)(a1 + 52) |= 0x10u;
        uint64_t v45 = *(void *)(a1 + 40);
        if (!v45) {
          operator new();
        }
        unsigned int v54 = 0;
        int v46 = (char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v54))return 0; {
        }
          }
        else
        {
          unsigned int v54 = *v46;
          *((void *)this + 1) = v46 + 1;
        }
        int v47 = *((_DWORD *)this + 14);
        int v48 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v47 + 1;
        if (v47 >= v48) {
          return 0;
        }
        int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v54);
        if (!sub_1000A73FC(v45, this, v50) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
        int v51 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v51, 1);
        int v52 = v51 - 1;
        if (v52 < 0 == v15) {
          *((_DWORD *)this + 14) = v52;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_47;
        }
        goto LABEL_21;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_61;
        }
        goto LABEL_21;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
        goto LABEL_75;
      default:
        int v7 = TagFallback & 7;
LABEL_21:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000A849C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_100114658 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_100114658 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_13:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_100114658 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_16:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_100114658 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x10) != 0)
  {
LABEL_19:
    uint64_t v11 = *(void *)(v5 + 40);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_100114658 + 40);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  }
  return result;
}

uint64_t sub_1000A85B0(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_40;
  }
  if ((*(unsigned char *)(a1 + 52) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_100114658 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A3D10(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_100114658 + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A4CEC(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 52);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_100114658 + 24);
    }
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A62CC(v13, a2);
    int v15 = (int)v14;
    if (v14 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
    }
    else {
      int v16 = 1;
    }
    uint64_t v4 = (v4 + v15 + v16 + 1);
    int v3 = *(_DWORD *)(a1 + 52);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_40;
      }
      goto LABEL_34;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)(a1 + 32);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_100114658 + 32);
  }
  uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A6F84(v17, a2);
  int v19 = (int)v18;
  if (v18 >= 0x80) {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
  }
  else {
    int v20 = 1;
  }
  uint64_t v4 = (v4 + v19 + v20 + 1);
  if ((*(_DWORD *)(a1 + 52) & 0x10) != 0)
  {
LABEL_34:
    uint64_t v21 = *(void *)(a1 + 40);
    if (!v21) {
      uint64_t v21 = *(void *)(qword_100114658 + 40);
    }
    int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A76D8(v21, a2);
    int v24 = (int)v22;
    if (v22 >= 0x80) {
      int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, v23);
    }
    else {
      int v25 = 1;
    }
    uint64_t v4 = (v4 + v24 + v25 + 1);
  }
LABEL_40:
  *(_DWORD *)(a1 + 48) = v4;
  return v4;
}

void sub_1000A8768(uint64_t a1, void *lpsrc)
{
  sub_1000A7840(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000A880C()
{
  return 1;
}

void *sub_1000A8814@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.TimeConversionInfo");
}

float sub_1000A8824(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  int v5 = *(_DWORD *)(a2 + 52);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(void *)(a1 + 8) = v6;
    int v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  float result = *(float *)(a2 + 16);
  *(_DWORD *)(a1 + 52) |= 2u;
  *(float *)(a1 + 16) = result;
  int v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  float result = *(float *)(a2 + 20);
  *(_DWORD *)(a1 + 52) |= 4u;
  *(float *)(a1 + 20) = result;
  int v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  float result = *(float *)(a2 + 24);
  *(_DWORD *)(a1 + 52) |= 8u;
  *(float *)(a1 + 24) = result;
  int v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    float result = *(float *)(a2 + 32);
    *(_DWORD *)(a1 + 52) |= 0x20u;
    *(float *)(a1 + 32) = result;
    int v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_20:
  float result = *(float *)(a2 + 28);
  *(_DWORD *)(a1 + 52) |= 0x10u;
  *(float *)(a1 + 28) = result;
  int v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 0x20) != 0) {
    goto LABEL_21;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_22:
  float result = *(float *)(a2 + 36);
  *(_DWORD *)(a1 + 52) |= 0x40u;
  *(float *)(a1 + 36) = result;
  int v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    float result = *(float *)(a2 + 40);
    *(_DWORD *)(a1 + 52) |= 0x80u;
    *(float *)(a1 + 40) = result;
    int v5 = *(_DWORD *)(a2 + 52);
  }
LABEL_13:
  if ((v5 & 0x100) != 0)
  {
    float result = *(float *)(a2 + 44);
    *(_DWORD *)(a1 + 52) |= 0x100u;
    *(float *)(a1 + 44) = result;
  }
  return result;
}

void sub_1000A89B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000A89D0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010CCB0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000A89F0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010CCB0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000A8A44()
{
}

uint64_t sub_1000A8A9C(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 52);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0) {
    *(_DWORD *)(result + 44) = 0;
  }
  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_1000A8ACC(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 2);
  while (2)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v10;
          int v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }
        a1[13] |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 21)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_36;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_28;
        }
LABEL_36:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        a1[4] = v20;
        a1[13] |= 2u;
        uint64_t v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 29) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_40:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        a1[5] = v20;
        a1[13] |= 4u;
        int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 37) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_44:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        a1[6] = v20;
        a1[13] |= 8u;
        int v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 45) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_48:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        a1[7] = v20;
        a1[13] |= 0x10u;
        int v16 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 != 53) {
          continue;
        }
        *((void *)this + 1) = v16 + 1;
LABEL_52:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        a1[8] = v20;
        a1[13] |= 0x20u;
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 61) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
LABEL_56:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        a1[9] = v20;
        a1[13] |= 0x40u;
        uint64_t v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 69) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_60:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        a1[10] = v20;
        a1[13] |= 0x80u;
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 77) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_64:
        unsigned int v20 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20))
        {
          a1[11] = v20;
          a1[13] |= 0x100u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_40;
        }
        goto LABEL_28;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_44;
        }
        goto LABEL_28;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_48;
        }
        goto LABEL_28;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_52;
        }
        goto LABEL_28;
      case 7u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_56;
        }
        goto LABEL_28;
      case 8u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_60;
        }
        goto LABEL_28;
      case 9u:
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_28;
        }
        goto LABEL_64;
      default:
        int v8 = TagFallback & 7;
LABEL_28:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000A8F00(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v4, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v4, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v4, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v4, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v4, *(float *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v4, *(float *)(v5 + 40), a3);
    if ((*(_DWORD *)(v5 + 52) & 0x100) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v4, *(float *)(v5 + 36), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x80) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v6 & 0x100) == 0) {
    return result;
  }
LABEL_19:
  float v7 = *(float *)(v5 + 44);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v4, v7, a3);
}

uint64_t sub_1000A9034(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 52);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 52);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 5;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 5;
    }
  }
  else
  {
    unsigned int v4 = 0;
  }
  if ((v3 & 0x100) != 0) {
    uint64_t result = v4 + 5;
  }
  else {
    uint64_t result = v4;
  }
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

float sub_1000A90E8(uint64_t a1, void *lpsrc)
{
  return sub_1000A8824(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000A918C()
{
  return 1;
}

void *sub_1000A9194@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.KlobucharModelParameters");
}

double sub_1000A91A4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }
  return result;
}

void sub_1000A9278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000A9290(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010CD28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000A92B0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010CD28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000A9304()
{
}

uint64_t sub_1000A9358(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1000A9370(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        unint64_t v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 17)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          unint64_t v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 16) = v12;
          *(_DWORD *)(a1 + 36) |= 2u;
          uint64_t v10 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 25)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }
      int v8 = TagFallback & 7;
      if (v8 == 1) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unint64_t v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 24) = v12;
    *(_DWORD *)(a1 + 36) |= 4u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1000A9538(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 36);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v4 + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
  int v5 = *(_DWORD *)(v4 + 36);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return result;
  }
LABEL_7:
  double v6 = *(double *)(v4 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, v6, a3);
}

uint64_t sub_1000A95C4(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 36);
  if (*(unsigned char *)(a1 + 36))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 32) = v1;
  return v1;
}

double sub_1000A95FC(uint64_t a1, void *lpsrc)
{
  return sub_1000A91A4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000A96A0()
{
  return 1;
}

void *sub_1000A96A8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.SfcfXyz");
}

double sub_1000A96B8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_100114670 + 8);
      }
      sub_10008EA18(v6, v7);
      int v5 = *(_DWORD *)(a2 + 36);
    }
    if ((v5 & 2) != 0)
    {
      unsigned int v8 = *(_DWORD *)(a2 + 16);
      if (v8 >= 0xD) {
        __assert_rtn("set_band", "CLPGnssMeasApi.pb.h", 13136, "::CLP::LogEntry::PrivateData::Band_IsValid(value)");
      }
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_DWORD *)(a1 + 16) = v8;
      int v5 = *(_DWORD *)(a2 + 36);
    }
    if ((v5 & 4) != 0)
    {
      unsigned int v9 = *(_DWORD *)(a2 + 20);
      if (v9 >= 4) {
        __assert_rtn("set_sv_reference_point", "CLPGnssMeasApi.pb.h", 13159, "::CLP::LogEntry::PrivateData::SvReferencePoint_IsValid(value)");
      }
      *(_DWORD *)(a1 + 36) |= 4u;
      *(_DWORD *)(a1 + 20) = v9;
      int v5 = *(_DWORD *)(a2 + 36);
    }
    if ((v5 & 8) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 8u;
      uint64_t v10 = *(void *)(a1 + 24);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = *(void *)(a2 + 24);
      if (!v11) {
        uint64_t v11 = *(void *)(qword_100114670 + 24);
      }
      return sub_1000A91A4(v10, v11);
    }
  }
  return result;
}

void sub_1000A98A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1000A98B8(void *result)
{
  if ((void *)qword_100114670 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    double result = (void *)v1[3];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1000A9958(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010CDA0;
  sub_1000A98B8(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000A99AC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010CDA0;
  sub_1000A98B8(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000A9A14()
{
}

uint64_t sub_1000A9A68(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 36);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 36))
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_10008EC54(result);
        int v2 = *(_DWORD *)(v1 + 36);
      }
    }
    *(void *)(v1 + 16) = 0;
    if ((v2 & 8) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 24);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return result;
}

uint64_t sub_1000A9ACC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v35 = 0;
        unsigned int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35))return 0; {
        }
          }
        else
        {
          unsigned int v35 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
        if (!sub_10008EC94(v8, this, v17) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v18 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)this + 14) = v20;
        }
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v21 >= v10 || *v21 != 16) {
          continue;
        }
        uint64_t v11 = v21 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_31;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_31:
        unsigned int v35 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35);
          if (!result) {
            return result;
          }
          unsigned int v22 = v35;
        }
        else
        {
          unsigned int v22 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v22 <= 0xC)
        {
          *(_DWORD *)(a1 + 36) |= 2u;
          *(_DWORD *)(a1 + 16) = v22;
        }
        int v24 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v24 >= v12 || *v24 != 24) {
          continue;
        }
        uint64_t v13 = v24 + 1;
        *((void *)this + 1) = v13;
LABEL_41:
        unsigned int v35 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35);
          if (!result) {
            return result;
          }
          unsigned int v25 = v35;
        }
        else
        {
          unsigned int v25 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (v25 <= 3)
        {
          *(_DWORD *)(a1 + 36) |= 4u;
          *(_DWORD *)(a1 + 20) = v25;
        }
        int v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 34) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_51:
        *(_DWORD *)(a1 + 36) |= 8u;
        uint64_t v27 = *(void *)(a1 + 24);
        if (!v27) {
          operator new();
        }
        unsigned int v35 = 0;
        int v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35))return 0; {
        }
          }
        else
        {
          unsigned int v35 = *v28;
          *((void *)this + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 < v30)
        {
          int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
          if (sub_1000A9370(v27, this, v32))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
              int v33 = *((_DWORD *)this + 14);
              BOOL v19 = __OFSUB__(v33, 1);
              int v34 = v33 - 1;
              if (v34 < 0 == v19) {
                *((_DWORD *)this + 14) = v34;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_41;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        goto LABEL_51;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000A9EF4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_100114670 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 20), (int)a2, a4);
      if ((*(_DWORD *)(v5 + 36) & 8) == 0) {
        return result;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 16), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_11:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_100114670 + 24);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
}

uint64_t sub_1000A9FBC(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_36;
  }
  if ((*(unsigned char *)(a1 + 36) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_100114670 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10008EF74(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 11;
    }
    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v4 = (v10 + v4);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v12 = 2;
    }
    uint64_t v4 = (v12 + v4);
    if ((v3 & 8) == 0) {
      goto LABEL_36;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_36;
  }
  uint64_t v13 = *(void *)(a1 + 24);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_100114670 + 24);
  }
  int v14 = *(unsigned __int8 *)(v13 + 36);
  if (*(unsigned char *)(v13 + 36))
  {
    int v15 = (v14 << 31 >> 31) & 9;
    if ((v14 & 2) != 0) {
      v15 += 9;
    }
    if ((v14 & 4) != 0) {
      int v14 = v15 + 9;
    }
    else {
      int v14 = v15;
    }
  }
  *(_DWORD *)(v13 + 32) = v14;
  uint64_t v4 = (v4 + v14 + 2);
LABEL_36:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

double sub_1000AA104(uint64_t a1, void *lpsrc)
{
  return sub_1000A96B8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000AA1A8()
{
  return 1;
}

void *sub_1000AA1B0@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.AntennaPhaseCenterSvOffset");
}

double sub_1000AA1C0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }
  return result;
}

void sub_1000AA294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000AA2AC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010CE18;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000AA2CC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010CE18;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000AA320()
{
}

uint64_t sub_1000AA374(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1000AA38C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        unsigned int v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 17)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          unint64_t v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 16) = v12;
          *(_DWORD *)(a1 + 36) |= 2u;
          int v10 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 25)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }
      int v8 = TagFallback & 7;
      if (v8 == 1) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unint64_t v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 24) = v12;
    *(_DWORD *)(a1 + 36) |= 4u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1000AA554(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 36);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v4 + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
  int v5 = *(_DWORD *)(v4 + 36);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return result;
  }
LABEL_7:
  double v6 = *(double *)(v4 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, v6, a3);
}

uint64_t sub_1000AA5E0(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 36);
  if (*(unsigned char *)(a1 + 36))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 32) = v1;
  return v1;
}

double sub_1000AA618(uint64_t a1, void *lpsrc)
{
  return sub_1000AA1C0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000AA6BC()
{
  return 1;
}

void *sub_1000AA6C4@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.ReceivedTimeStamp");
}

float CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::MergeFrom(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *this, const CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v30);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)((char *)this + 24), *((_DWORD *)a2 + 8) + *((_DWORD *)this + 8));
  if (*((int *)a2 + 8) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*((void *)a2 + 3) + 8 * v4);
      int v6 = *((_DWORD *)this + 9);
      uint64_t v7 = *((int *)this + 8);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 10))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)((char *)this + 24), v6 + 1);
          int v6 = *((_DWORD *)this + 9);
        }
        *((_DWORD *)this + 9) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 3);
      *((_DWORD *)this + 8) = v7 + 1;
      sub_10009F938(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 8));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)((char *)this + 48), *((_DWORD *)a2 + 14) + *((_DWORD *)this + 14));
  if (*((int *)a2 + 14) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(void *)(*((void *)a2 + 6) + 8 * v9);
      int v11 = *((_DWORD *)this + 15);
      uint64_t v12 = *((int *)this + 14);
      if ((int)v12 >= v11)
      {
        if (v11 == *((_DWORD *)this + 16))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)((char *)this + 48), v11 + 1);
          int v11 = *((_DWORD *)this + 15);
        }
        *((_DWORD *)this + 15) = v11 + 1;
        operator new();
      }
      uint64_t v13 = *((void *)this + 6);
      *((_DWORD *)this + 14) = v12 + 1;
      sub_1000A1BC8(*(void *)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *((int *)a2 + 14));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)((char *)this + 104), *((_DWORD *)a2 + 28) + *((_DWORD *)this + 28));
  if (*((int *)a2 + 28) >= 1)
  {
    uint64_t v15 = 0;
    do
    {
      uint64_t v16 = *(void *)(*((void *)a2 + 13) + 8 * v15);
      int v17 = *((_DWORD *)this + 29);
      uint64_t v18 = *((int *)this + 28);
      if ((int)v18 >= v17)
      {
        if (v17 == *((_DWORD *)this + 30))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)((char *)this + 104), v17 + 1);
          int v17 = *((_DWORD *)this + 29);
        }
        *((_DWORD *)this + 29) = v17 + 1;
        operator new();
      }
      uint64_t v19 = *((void *)this + 13);
      *((_DWORD *)this + 28) = v18 + 1;
      double v14 = sub_1000A96B8(*(void *)(v19 + 8 * v18), v16);
      ++v15;
    }
    while (v15 < *((int *)a2 + 28));
  }
  LOBYTE(v20) = *((unsigned char *)a2 + 132);
  if ((_BYTE)v20)
  {
    if (*((unsigned char *)a2 + 132))
    {
      *((_DWORD *)this + 33) |= 1u;
      uint64_t v21 = *((void *)this + 1);
      if (!v21) {
        operator new();
      }
      uint64_t v22 = *((void *)a2 + 1);
      if (!v22) {
        uint64_t v22 = *(void *)(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_ + 8);
      }
      double v14 = sub_1000AA1C0(v21, v22);
      int v20 = *((_DWORD *)a2 + 33);
      if ((v20 & 2) == 0)
      {
LABEL_30:
        if ((v20 & 0x10) == 0) {
          goto LABEL_31;
        }
        goto LABEL_45;
      }
    }
    else if ((*((unsigned char *)a2 + 132) & 2) == 0)
    {
      goto LABEL_30;
    }
    *((_DWORD *)this + 33) |= 2u;
    uint64_t v23 = *((void *)this + 2);
    if (!v23) {
      operator new();
    }
    uint64_t v24 = *((void *)a2 + 2);
    if (!v24) {
      uint64_t v24 = *(void *)(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_ + 16);
    }
    double v14 = sub_10009D0B0(v23, v24);
    int v20 = *((_DWORD *)a2 + 33);
    if ((v20 & 0x10) == 0)
    {
LABEL_31:
      if ((v20 & 0x20) == 0) {
        goto LABEL_32;
      }
      goto LABEL_50;
    }
LABEL_45:
    *((_DWORD *)this + 33) |= 0x10u;
    uint64_t v25 = *((void *)this + 9);
    if (!v25) {
      operator new();
    }
    uint64_t v26 = *((void *)a2 + 9);
    if (!v26) {
      uint64_t v26 = *(void *)(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_ + 72);
    }
    sub_1000A7840(v25, v26);
    int v20 = *((_DWORD *)a2 + 33);
    if ((v20 & 0x20) == 0)
    {
LABEL_32:
      if ((v20 & 0x40) == 0) {
        goto LABEL_33;
      }
      goto LABEL_51;
    }
LABEL_50:
    double v14 = *((double *)a2 + 10);
    *((_DWORD *)this + 33) |= 0x20u;
    *((double *)this + 10) = v14;
    int v20 = *((_DWORD *)a2 + 33);
    if ((v20 & 0x40) == 0)
    {
LABEL_33:
      if ((v20 & 0x80) == 0) {
        return *(float *)&v14;
      }
LABEL_52:
      *((_DWORD *)this + 33) |= 0x80u;
      uint64_t v27 = *((void *)this + 12);
      if (!v27) {
        operator new();
      }
      uint64_t v28 = *((void *)a2 + 12);
      if (!v28) {
        uint64_t v28 = *(void *)(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_ + 96);
      }
      *(float *)&double v14 = sub_1000A8824(v27, v28);
      return *(float *)&v14;
    }
LABEL_51:
    double v14 = *((double *)a2 + 11);
    *((_DWORD *)this + 33) |= 0x40u;
    *((double *)this + 11) = v14;
    if ((*((_DWORD *)a2 + 33) & 0x80) == 0) {
      return *(float *)&v14;
    }
    goto LABEL_52;
  }
  return *(float *)&v14;
}

void sub_1000AAC50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000AAC68(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010CE90;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 9);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 12);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
  }
  int v6 = *((_DWORD *)this + 29);
  if (v6 >= 1)
  {
    for (uint64_t i = 0; i < v6; ++i)
    {
      uint64_t v8 = *(void *)(*((void *)this + 13) + 8 * i);
      if (v8)
      {
        (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
        int v6 = *((_DWORD *)this + 29);
      }
    }
  }
  if (*((void *)this + 13)) {
    operator delete[]();
  }
  int v9 = *((_DWORD *)this + 15);
  if (v9 >= 1)
  {
    for (uint64_t j = 0; j < v9; ++j)
    {
      uint64_t v11 = *(void *)(*((void *)this + 6) + 8 * j);
      if (v11)
      {
        (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
        int v9 = *((_DWORD *)this + 15);
      }
    }
  }
  if (*((void *)this + 6)) {
    operator delete[]();
  }
  int v12 = *((_DWORD *)this + 9);
  if (v12 >= 1)
  {
    for (uint64_t k = 0; k < v12; ++k)
    {
      uint64_t v14 = *(void *)(*((void *)this + 3) + 8 * k);
      if (v14)
      {
        (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
        int v12 = *((_DWORD *)this + 9);
      }
    }
  }
  if (*((void *)this + 3)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000AAEC0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000AAC68(a1);

  operator delete();
}

void sub_1000AAEF8()
{
}

uint64_t CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::Clear(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 132);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 132))
    {
      uint64_t v3 = *((void *)this + 1);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *((_DWORD *)this + 33);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v4 = (CLP::LogEntry::PrivateData::MeasurementReport *)*((void *)this + 2);
      if (v4)
      {
        CLP::LogEntry::PrivateData::MeasurementReport::Clear(v4);
        int v2 = *((_DWORD *)this + 33);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t v5 = *((void *)this + 9);
      if (v5)
      {
        CLP::LogEntry::PrivateData::TimeConversionInfo::Clear(v5);
        int v2 = *((_DWORD *)this + 33);
      }
    }
    *((void *)this + 10) = 0;
    *((void *)this + 11) = 0;
    if ((v2 & 0x80) != 0)
    {
      uint64_t v6 = *((void *)this + 12);
      if (v6)
      {
        int v7 = *(_DWORD *)(v6 + 52);
        if ((_BYTE)v7)
        {
          *(_DWORD *)(v6 + 40) = 0;
          *(_OWORD *)(v6 + 24) = 0u;
          *(_OWORD *)(v6 + 8) = 0u;
        }
        if ((v7 & 0xFF00) != 0) {
          *(_DWORD *)(v6 + 44) = 0;
        }
        *(_DWORD *)(v6 + 52) = 0;
      }
    }
  }
  sub_10003AD6C((uint64_t)this + 24);
  sub_10003AD6C((uint64_t)this + 48);
  uint64_t result = sub_10003AD6C((uint64_t)this + 104);
  *((_DWORD *)this + 33) = 0;
  return result;
}

uint64_t CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::MergePartialFromCodedStream(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)((char *)this + 24);
  uint64_t v6 = (CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)((char *)this + 48);
  int v7 = (CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)((char *)this + 104);
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v8 < *((void *)a2 + 2) && (*v8 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_30;
        }
        *((_DWORD *)this + 33) |= 1u;
        uint64_t v11 = *((void *)this + 1);
        if (!v11) {
          operator new();
        }
        v88[0] = 0;
        int v12 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v88))return 0; {
        }
          }
        else
        {
          v88[0] = *v12;
          *((void *)a2 + 1) = v12 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v88[0]);
        if (!sub_1000AA38C(v11, a2, v17) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v16);
        int v18 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v20;
        }
        uint64_t v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
        goto LABEL_42;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_30;
        }
LABEL_42:
        *((_DWORD *)this + 33) |= 2u;
        uint64_t v22 = *((void *)this + 2);
        if (!v22) {
          operator new();
        }
        v88[0] = 0;
        uint64_t v23 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v88))return 0; {
        }
          }
        else
        {
          v88[0] = *v23;
          *((void *)a2 + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)a2 + 14);
        int v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v88[0]);
        if (!sub_10009D488(v22, a2, v27) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v26);
        int v28 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v29;
        }
        int v30 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 != 26) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v30 + 1;
LABEL_56:
          int v31 = *((_DWORD *)this + 9);
          uint64_t v32 = *((int *)this + 8);
          if ((int)v32 >= v31)
          {
            if (v31 == *((_DWORD *)this + 10))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v31 + 1);
              int v31 = *((_DWORD *)this + 9);
            }
            *((_DWORD *)this + 9) = v31 + 1;
            operator new();
          }
          uint64_t v33 = *((void *)this + 3);
          *((_DWORD *)this + 8) = v32 + 1;
          uint64_t v34 = *(void *)(v33 + 8 * v32);
          v88[0] = 0;
          unsigned int v35 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v88))return 0; {
          }
            }
          else
          {
            v88[0] = *v35;
            *((void *)a2 + 1) = v35 + 1;
          }
          int v36 = *((_DWORD *)a2 + 14);
          int v37 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v36 + 1;
          if (v36 >= v37) {
            return 0;
          }
          int v38 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v88[0]);
          if (!sub_1000A042C(v34, a2, v39) || !*((unsigned char *)a2 + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v38);
          int v40 = *((_DWORD *)a2 + 14);
          BOOL v19 = __OFSUB__(v40, 1);
          int v41 = v40 - 1;
          if (v41 < 0 == v19) {
            *((_DWORD *)a2 + 14) = v41;
          }
          int v30 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v30 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v42 = *v30;
        }
        while (v42 == 26);
        if (v42 != 34) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v30 + 1;
LABEL_74:
          int v43 = *((_DWORD *)this + 15);
          uint64_t v44 = *((int *)this + 14);
          if ((int)v44 >= v43)
          {
            if (v43 == *((_DWORD *)this + 16))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v43 + 1);
              int v43 = *((_DWORD *)this + 15);
            }
            *((_DWORD *)this + 15) = v43 + 1;
            operator new();
          }
          uint64_t v45 = *((void *)this + 6);
          *((_DWORD *)this + 14) = v44 + 1;
          uint64_t v46 = *(void *)(v45 + 8 * v44);
          v88[0] = 0;
          int v47 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v47 >= *((void *)a2 + 2) || *v47 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v88))return 0; {
          }
            }
          else
          {
            v88[0] = *v47;
            *((void *)a2 + 1) = v47 + 1;
          }
          int v48 = *((_DWORD *)a2 + 14);
          int v49 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v48 + 1;
          if (v48 >= v49) {
            return 0;
          }
          int v50 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v88[0]);
          if (!sub_1000A1DD4(v46, a2, v51) || !*((unsigned char *)a2 + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v50);
          int v52 = *((_DWORD *)a2 + 14);
          BOOL v19 = __OFSUB__(v52, 1);
          int v53 = v52 - 1;
          if (v53 < 0 == v19) {
            *((_DWORD *)a2 + 14) = v53;
          }
          int v30 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v30 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v54 = *v30;
        }
        while (v54 == 34);
        if (v54 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v30 + 1;
LABEL_92:
        *((_DWORD *)this + 33) |= 0x10u;
        uint64_t v55 = *((void *)this + 9);
        if (!v55) {
          operator new();
        }
        v88[0] = 0;
        unsigned int v56 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v56 >= *((void *)a2 + 2) || *v56 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v88))return 0; {
        }
          }
        else
        {
          v88[0] = *v56;
          *((void *)a2 + 1) = v56 + 1;
        }
        int v57 = *((_DWORD *)a2 + 14);
        int v58 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v57 + 1;
        if (v57 >= v58) {
          return 0;
        }
        int v59 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v88[0]);
        if (!sub_1000A7E04(v55, a2, v60) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v59);
        int v61 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v61, 1);
        int v62 = v61 - 1;
        if (v62 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v62;
        }
        unsigned int v63 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v63 >= *((void *)a2 + 2) || *v63 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v63 + 1;
LABEL_106:
        *(void *)unint64_t v88 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v88) & 1) == 0)return 0; {
        *((void *)this + 10) = *(void *)v88;
        }
        *((_DWORD *)this + 33) |= 0x20u;
        int v64 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v64 >= *((void *)a2 + 2) || *v64 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v64 + 1;
LABEL_110:
        *(void *)unint64_t v88 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v88) & 1) == 0)return 0; {
        *((void *)this + 11) = *(void *)v88;
        }
        int v13 = *((_DWORD *)this + 33) | 0x40;
        *((_DWORD *)this + 33) = v13;
        int v65 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v65 >= *((void *)a2 + 2) || *v65 != 66) {
          continue;
        }
        *((void *)a2 + 1) = v65 + 1;
LABEL_114:
        *((_DWORD *)this + 33) = v13 | 0x80;
        int v66 = (_DWORD *)*((void *)this + 12);
        if (!v66) {
          operator new();
        }
        v88[0] = 0;
        unsigned int v67 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v67 >= *((void *)a2 + 2) || *v67 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v88))return 0; {
        }
          }
        else
        {
          v88[0] = *v67;
          *((void *)a2 + 1) = v67 + 1;
        }
        int v68 = *((_DWORD *)a2 + 14);
        int v69 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v68 + 1;
        if (v68 >= v69) {
          return 0;
        }
        int v70 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v88[0]);
        if (!sub_1000A8ACC(v66, a2, v71) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v70);
        int v72 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v72, 1);
        int v73 = v72 - 1;
        if (v73 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v73;
        }
        int v74 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v74 < *((void *)a2 + 2) && *v74 == 74)
        {
          do
          {
            *((void *)a2 + 1) = v74 + 1;
LABEL_128:
            int v75 = *((_DWORD *)this + 29);
            uint64_t v76 = *((int *)this + 28);
            if ((int)v76 >= v75)
            {
              if (v75 == *((_DWORD *)this + 30))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v75 + 1);
                int v75 = *((_DWORD *)this + 29);
              }
              *((_DWORD *)this + 29) = v75 + 1;
              operator new();
            }
            uint64_t v77 = *((void *)this + 13);
            *((_DWORD *)this + 28) = v76 + 1;
            uint64_t v78 = *(void *)(v77 + 8 * v76);
            v88[0] = 0;
            uint64_t v79 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v79 >= *((void *)a2 + 2) || *v79 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v88))return 0; {
            }
              }
            else
            {
              v88[0] = *v79;
              *((void *)a2 + 1) = v79 + 1;
            }
            int v80 = *((_DWORD *)a2 + 14);
            int v81 = *((_DWORD *)a2 + 15);
            *((_DWORD *)a2 + 14) = v80 + 1;
            if (v80 >= v81) {
              return 0;
            }
            int v82 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v88[0]);
            if (!sub_1000A9ACC(v78, a2, v83) || !*((unsigned char *)a2 + 36)) {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v82);
            int v84 = *((_DWORD *)a2 + 14);
            BOOL v19 = __OFSUB__(v84, 1);
            int v85 = v84 - 1;
            if (v85 < 0 == v19) {
              *((_DWORD *)a2 + 14) = v85;
            }
            int v74 = (unsigned char *)*((void *)a2 + 1);
            int v86 = (unsigned char *)*((void *)a2 + 2);
          }
          while (v74 < v86 && *v74 == 74);
          if (v74 == v86 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
        }
        break;
      case 3u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_56;
        }
        goto LABEL_30;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_74;
        }
        goto LABEL_30;
      case 5u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_92;
        }
        goto LABEL_30;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 == 1) {
          goto LABEL_106;
        }
        goto LABEL_30;
      case 7u:
        int v10 = TagFallback & 7;
        if (v10 == 1) {
          goto LABEL_110;
        }
        goto LABEL_30;
      case 8u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_30;
        }
        int v13 = *((_DWORD *)this + 33);
        goto LABEL_114;
      case 9u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_30;
        }
        goto LABEL_128;
      default:
        int v10 = TagFallback & 7;
LABEL_30:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000ABAF0(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 132);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_ + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 132);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = *(void *)(v5 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_ + 16);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v9 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 24) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 32));
  }
  if (*(int *)(v5 + 56) >= 1)
  {
    uint64_t v10 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 48) + 8 * v10++), a2, a4);
    while (v10 < *(int *)(v5 + 56));
  }
  int v11 = *(_DWORD *)(v5 + 132);
  if ((v11 & 0x10) != 0)
  {
    uint64_t v12 = *(void *)(v5 + 72);
    if (!v12) {
      uint64_t v12 = *(void *)(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_ + 72);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v12, a2, a4);
    int v11 = *(_DWORD *)(v5 + 132);
    if ((v11 & 0x20) == 0)
    {
LABEL_17:
      if ((v11 & 0x40) == 0) {
        goto LABEL_18;
      }
      goto LABEL_24;
    }
  }
  else if ((v11 & 0x20) == 0)
  {
    goto LABEL_17;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 80), a3);
  int v11 = *(_DWORD *)(v5 + 132);
  if ((v11 & 0x40) == 0)
  {
LABEL_18:
    if ((v11 & 0x80) == 0) {
      goto LABEL_28;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 88), a3);
  if ((*(_DWORD *)(v5 + 132) & 0x80) == 0) {
    goto LABEL_28;
  }
LABEL_25:
  uint64_t v13 = *(void *)(v5 + 96);
  if (!v13) {
    uint64_t v13 = *(void *)(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_ + 96);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v13, a2, a4);
LABEL_28:
  if (*(int *)(v5 + 112) >= 1)
  {
    uint64_t v14 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(void *)(*(void *)(v5 + 104) + 8 * v14++), a2, a4);
    while (v14 < *(int *)(v5 + 112));
  }
  return result;
}

uint64_t CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::ByteSize(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *this, unint64_t a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 132);
  if (!(_BYTE)v3)
  {
    int v5 = 0;
    goto LABEL_40;
  }
  if (*((unsigned char *)this + 132))
  {
    uint64_t v6 = *((void *)this + 1);
    if (!v6) {
      uint64_t v6 = *(void *)(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_ + 8);
    }
    int v7 = *(unsigned __int8 *)(v6 + 36);
    if (*(unsigned char *)(v6 + 36))
    {
      int v8 = (v7 << 31 >> 31) & 9;
      if ((v7 & 2) != 0) {
        v8 += 9;
      }
      if ((v7 & 4) != 0) {
        int v7 = v8 + 9;
      }
      else {
        int v7 = v8;
      }
    }
    *(_DWORD *)(v6 + 32) = v7;
    int v4 = v7 + 2;
    int v3 = *((_DWORD *)this + 33);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  int v4 = 0;
  if ((*((unsigned char *)this + 132) & 2) != 0)
  {
LABEL_15:
    uint64_t v9 = *((void *)this + 2);
    if (!v9) {
      uint64_t v9 = *(void *)(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_ + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009D890(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    v4 += v11 + v12 + 1;
    int v3 = *((_DWORD *)this + 33);
  }
LABEL_21:
  if ((v3 & 0x10) != 0)
  {
    uint64_t v13 = *((void *)this + 9);
    if (!v13) {
      uint64_t v13 = *(void *)(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_ + 72);
    }
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A85B0(v13, a2);
    int v15 = (int)v14;
    if (v14 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
    }
    else {
      int v16 = 1;
    }
    v4 += v15 + v16 + 1;
    int v3 = *((_DWORD *)this + 33);
  }
  int v17 = v4 + 9;
  if ((v3 & 0x20) == 0) {
    int v17 = v4;
  }
  if ((v3 & 0x40) != 0) {
    int v5 = v17 + 9;
  }
  else {
    int v5 = v17;
  }
  if ((v3 & 0x80) != 0)
  {
    uint64_t v18 = *((void *)this + 12);
    if (!v18) {
      uint64_t v18 = *(void *)(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_ + 96);
    }
    BOOL v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A9034(v18, a2);
    int v20 = (int)v19;
    if (v19 >= 0x80) {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
    }
    else {
      int v21 = 1;
    }
    v5 += v20 + v21 + 1;
  }
LABEL_40:
  int v22 = *((_DWORD *)this + 8);
  int v23 = v22 + v5;
  if (v22 >= 1)
  {
    uint64_t v24 = 0;
    do
    {
      int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A16AC(*(void *)(*((void *)this + 3)+ 8 * v24), a2);
      int v26 = (int)v25;
      if (v25 >= 0x80) {
        int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
      }
      else {
        int v27 = 1;
      }
      v23 += v26 + v27;
      ++v24;
    }
    while (v24 < *((int *)this + 8));
  }
  int v28 = *((_DWORD *)this + 14);
  int v29 = v28 + v23;
  if (v28 >= 1)
  {
    uint64_t v30 = 0;
    do
    {
      int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A20E8(*(void *)(*((void *)this + 6)+ 8 * v30), a2);
      int v32 = (int)v31;
      if (v31 >= 0x80) {
        int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2);
      }
      else {
        int v33 = 1;
      }
      v29 += v32 + v33;
      ++v30;
    }
    while (v30 < *((int *)this + 14));
  }
  int v34 = *((_DWORD *)this + 28);
  uint64_t v35 = (v34 + v29);
  if (v34 >= 1)
  {
    uint64_t v36 = 0;
    do
    {
      int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A9FBC(*(void *)(*((void *)this + 13)+ 8 * v36), a2);
      int v38 = (int)v37;
      if (v37 >= 0x80) {
        int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37, a2);
      }
      else {
        int v39 = 1;
      }
      uint64_t v35 = (v38 + v35 + v39);
      ++v36;
    }
    while (v36 < *((int *)this + 28));
  }
  *((_DWORD *)this + 32) = v35;
  return v35;
}

float sub_1000ABF1C(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *a1, void *lpsrc)
{
  return CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::MergeFrom(a1, (const CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)lpsrc);
}

uint64_t sub_1000ABFC0()
{
  return 1;
}

void *sub_1000ABFC8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.MeasurementReportCallbackContents");
}

uint64_t sub_1000ABFD8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_1000ABFE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_1000ABFE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1000ABFF0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_1000ABFF8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_1000AC000(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_1000AC008(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_1000AC010(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_1000AC018(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_1000AC020(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_1000AC028(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_1000AC030(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_1000AC038(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_1000AC040(uint64_t a1)
{
  return *(unsigned int *)(a1 + 92);
}

uint64_t sub_1000AC048(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1000AC050(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1000AC058(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1000AC060(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_1000AC068(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1000AC070(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1000AC078(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_1000AC080(uint64_t a1)
{
  return *(unsigned int *)(a1 + 112);
}

uint64_t sub_1000AC088(uint64_t a1)
{
  return *(unsigned int *)(a1 + 108);
}

uint64_t sub_1000AC090(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1000AC098(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1000AC0A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1000AC0A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1000AC0B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1000AC0B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000AC0C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1000AC0C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1000AC0D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_1000AC0D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 168);
}

uint64_t sub_1000AC0E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1000AC0E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_1000AC0F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1000AC0F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1000AC100(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1000AC108(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1000AC110(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1000AC118(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000AC120(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_1000AC128(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1000AC130(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_1000AC138(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1000AC140(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1000AC148(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000AC150(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000AC158(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000AC160(uint64_t a1)
{
  return *(unsigned int *)(a1 + 128);
}

uint64_t GnssEmergencyManager_Private::GnssEmergencyManager_Private(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = *(void *)(a2 + 24);
  if (v7)
  {
    if (v7 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 16))(v7);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  sub_100018E30(a1 + 32, a3);
  *(void *)(a1 + 64) = *a4;
  *(unsigned char *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  if (*(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) == 107) {
    GpsdPlatformInfo::instance(0);
  }
  v17[4] = a1;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  unsigned int v18[2] = sub_1000AC4E8;
  v18[3] = &unk_10010D3A8;
  v18[4] = a1;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_1000AC7AC;
  v17[3] = &unk_10010D3A8;
  id v8 = [objc_alloc((Class)CoreGnssEmergencyManager) initForComm:v18 sendIndicationToRemoteCallback:v17 dispatch_queue_t:*(void *)(a1 + 64) GemDeviceType:2];
  *(void *)(a1 + 80) = v8;
  if (!v8)
  {
    uint64_t v10 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "fExternGem,nullptr", buf, 2u);
      uint64_t v10 = qword_100114840;
    }
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      int v20 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Emergency/GnssEmergencyManager_Private.mm";
      __int16 v21 = 1026;
      int v22 = 86;
      __int16 v23 = 2082;
      uint64_t v24 = "GnssEmergencyManager_Private";
      _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
    }
    sub_1000033AC(v15, "assert");
    sub_1000033AC(v13, "GnssEmergencyManager_Private");
    sub_1000033AC(__p, "fExternGem,nullptr");
    gpsd::util::triggerDiagnosticReport((uint64_t)v15, (long long *)v13, (long long *)__p);
    if (v12 < 0) {
      operator delete(__p[0]);
    }
    if (v14 < 0) {
      operator delete(v13[0]);
    }
    if (v16 < 0) {
      operator delete(v15[0]);
    }
    __assert_rtn("GnssEmergencyManager_Private", "GnssEmergencyManager_Private.mm", 86, "false && \"fExternGem,nullptr\"");
  }
  return a1;
}

void sub_1000AC47C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  sub_1000273C8(v27);
  _Unwind_Resume(a1);
}

void sub_1000AC4E8()
{
}

void sub_1000AC754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
  _Unwind_Resume(a1);
}

void sub_1000AC7AC()
{
}

void sub_1000AC9F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
  _Unwind_Resume(a1);
}

void GnssEmergencyManager_Private::handleRemoteRequest(uint64_t a1, wireless_diagnostics::google::protobuf::MessageLite **a2, uint64_t a3)
{
  int v4 = *a2;
  if ((*((unsigned char *)*a2 + 388) & 4) == 0)
  {
    int v5 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      LOWORD(__p) = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "handleRemoteRequest,noType", (uint8_t *)&__p, 2u);
    }
    return;
  }
  uint64_t v8 = (*((_DWORD *)v4 + 5) - 34);
  if (v8 <= 0x2A)
  {
    if (((1 << (*((unsigned char *)v4 + 20) - 34)) & 0x64C701E0001) != 0) {
      return;
    }
    if (v8 == 21)
    {
      char v9 = 1;
      goto LABEL_11;
    }
    if (v8 == 22)
    {
      char v9 = 0;
LABEL_11:
      *(unsigned char *)(a1 + 72) = v9;
    }
  }
  int v10 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::MessageLite *))(*(void *)v4 + 72))(v4);
  sub_100037468(&__p, v10);
  wireless_diagnostics::google::protobuf::MessageLite::SerializeToArray(*a2, __p);
  int v11 = +[NSData dataWithBytes:__p length:v14 - (unsigned char *)__p];
  char v12 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 67109120;
    int v16 = v10;
    _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "Calling handleRemoteRequest,length,%d", buf, 8u);
  }
  [*(id *)(a1 + 80) handleRemoteRequest:v11 machconttimens:a3];
  if (__p)
  {
    uint64_t v14 = __p;
    operator delete(__p);
  }
}

void sub_1000ACC2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void GnssEmergencyManager_Private::handleDeviceIndication(GnssEmergencyManager_Private *this, const proto::gpsd::Indication *a2)
{
}

void sub_1000ACE48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  _Unwind_Resume(a1);
}

BOOL ReceiverClockConversion::isRxClockValid(ReceiverClockConversion *this, uint64_t a2)
{
  unint64_t v2 = a2 - 1;
  if ((unint64_t)(a2 - 1) >= 0xFFFFFFFFFFFFFFFELL)
  {
    int v4 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = 134349056;
      uint64_t v7 = a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#rxClockConv,missing rx clock,%{public}llu", (uint8_t *)&v6, 0xCu);
    }
  }
  return v2 < 0xFFFFFFFFFFFFFFFELL;
}

double ReceiverClockConversion::feedPvtmCallback(ReceiverClockConversion *this, unint64_t a2, double a3)
{
  return *(double *)this + (double)a2 * 0.000000001;
}

void ReceiverClockConversion::checkRxClockForHwReset(ReceiverClockConversion *this, uint64_t a2)
{
  unint64_t v4 = *((void *)this + 3);
  if (a2 + 2000000000 < v4)
  {
    int v5 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = 134349312;
      unint64_t v7 = v4;
      __int16 v8 = 2050;
      uint64_t v9 = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#rxClockConv,reset detected,lastNs,%{public}llu,currNs,%{public}llu", (uint8_t *)&v6, 0x16u);
    }
    *((unsigned char *)this + 32) = 0;
    *(_OWORD *)this = 0u;
    *((_OWORD *)this + 1) = 0u;
  }
  *((void *)this + 3) = a2;
}

void ReceiverClockConversion::usePvtmReceiptTime(ReceiverClockConversion *this, unint64_t a2, double a3)
{
  if (!*((unsigned char *)this + 32))
  {
    double v3 = a3 + (double)a2 * -0.000000001 + -0.166;
    *(double *)this = v3;
    *((double *)this + 1) = a3;
    *((void *)this + 2) = 0x3FD3333333333333;
    *((unsigned char *)this + 32) = 1;
    unint64_t v4 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 134349312;
      double v6 = v3;
      __int16 v7 = 2050;
      uint64_t v8 = 0x3FD3333333333333;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#rxClockConv,method,receipt,rxClockToMct,%{public}.4f,uncSec,%{public}.4f", (uint8_t *)&v5, 0x16u);
    }
  }
}

void ReceiverClockConversion::feedTimemark(ReceiverClockConversion *this, uint64_t a2, double a3, double a4)
{
  if (!ReceiverClockConversion::isRxClockValid(this, a2))
  {
    uint64_t v14 = qword_100114838;
    if (!os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_DWORD *)int v20 = 134349056;
    *(void *)&v20[4] = a2;
    int v15 = "#rxClockConv,feedTimemark,invalid rxClockNs,%{public}llu";
    int v16 = v14;
    uint32_t v17 = 12;
    goto LABEL_19;
  }
  double v8 = a3 + (double)(unint64_t)a2 * -0.000000001;
  if (*((unsigned char *)this + 32))
  {
    double v9 = *((double *)this + 2) + vabdd_f64(a3, *((double *)this + 1)) * 0.00002 + a4 + 0.001;
    if (vabdd_f64(v8, *(double *)this) / v9 > 50.0)
    {
      double v10 = v8 - *(double *)this;
      int v11 = (GpsdPlatformInfo *)GpsdPlatformInfo::instance(0);
      int HaveRaven = GpsdPlatformInfo::expectedToHaveRaven(v11);
      uint64_t v13 = qword_100114840;
      if (HaveRaven)
      {
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)int v20 = 134349824;
          *(double *)&v20[4] = v10;
          __int16 v21 = 2050;
          double v22 = v9;
          __int16 v23 = 2050;
          uint64_t v24 = *(void **)&v8;
          __int16 v25 = 2050;
          double v26 = a4 + 0.001;
          _os_log_fault_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_FAULT, "#rxClockConv,disagreement,%{public}.3f,%{public}.3f,newRxClockToMct,%{public}.4f,newUncSec,%{public}.4f", v20, 0x2Au);
        }
        sub_1000033AC(v20, "Monitoring");
        sub_1000033AC(&v24, "RxClockConv");
        sub_1000033AC(&__p, "TimemarkInconsistency");
        char v30 = 0;
        gpsd::util::triggerDiagnosticReport((uint64_t)v20);
        if (v29 < 0) {
          operator delete(__p);
        }
        if (v27 < 0) {
          operator delete(v24);
        }
        if (SHIBYTE(v23) < 0) {
          operator delete(*(void **)v20);
        }
      }
      else if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int v20 = 134349824;
        *(double *)&v20[4] = v10;
        __int16 v21 = 2050;
        double v22 = v9;
        __int16 v23 = 2050;
        uint64_t v24 = *(void **)&v8;
        __int16 v25 = 2050;
        double v26 = a4 + 0.001;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#rxClockConv,disagreement,%{public}.3f,%{public}.3f,newRxClockToMct,%{public}.4f,newUncSec,%{public}.4f", v20, 0x2Au);
      }
    }
  }
  *(double *)this = v8;
  *((double *)this + 1) = a3;
  double v18 = a4 + 0.001;
  *((double *)this + 2) = v18;
  *((unsigned char *)this + 32) = 1;
  uint64_t v19 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int v20 = 134349312;
    *(double *)&v20[4] = v8;
    __int16 v21 = 2050;
    double v22 = v18;
    int v15 = "#rxClockConv,method,timemark,rxClockToMct,%{public}.4f,uncSec,%{public}.4f";
    int v16 = v19;
    uint32_t v17 = 22;
LABEL_19:
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, v15, v20, v17);
  }
}

void sub_1000AD4B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
}

uint64_t GpsdPlatformInfoHardware::detectHardware(GpsdPlatformInfoHardware *this)
{
  long long v3 = xmmword_1000EA058;
  int v4 = 710807826;
  if (MGIsDeviceOfType()) {
    return 10401;
  }
  int v4 = 470738981;
  long long v3 = xmmword_1000EA06C;
  if (MGIsDeviceOfType()) {
    return 10401;
  }
  int v4 = -2085056298;
  long long v3 = xmmword_1000EA080;
  if (MGIsDeviceOfType()) {
    return 10403;
  }
  int v4 = 1860682089;
  long long v3 = xmmword_1000EA094;
  if (MGIsDeviceOfType()) {
    return 10403;
  }
  int v4 = -338255497;
  long long v3 = xmmword_1000EA0A8;
  if (MGIsDeviceOfType()) {
    return 10509;
  }
  int v4 = 152704997;
  long long v3 = xmmword_1000EA0BC;
  if (MGIsDeviceOfType()) {
    return 10509;
  }
  int v4 = 283967174;
  long long v3 = xmmword_1000EA0D0;
  if (MGIsDeviceOfType()) {
    return 10511;
  }
  int v4 = -1040127899;
  long long v3 = xmmword_1000EA0E4;
  if (MGIsDeviceOfType()) {
    return 10511;
  }
  int v4 = -1742178852;
  long long v3 = xmmword_1000EA0F8;
  if (MGIsDeviceOfType()) {
    return 10501;
  }
  int v4 = 2146530832;
  long long v3 = xmmword_1000EA10C;
  if (MGIsDeviceOfType()) {
    return 10501;
  }
  int v4 = 1330813729;
  long long v3 = xmmword_1000EA120;
  if (MGIsDeviceOfType()) {
    return 10503;
  }
  int v4 = 617174804;
  long long v3 = xmmword_1000EA134;
  if (MGIsDeviceOfType()) {
    return 10503;
  }
  int v4 = -871113647;
  long long v3 = xmmword_1000EA148;
  if (MGIsDeviceOfType()) {
    return 10601;
  }
  int v4 = 1530707451;
  long long v3 = xmmword_1000EA15C;
  if (MGIsDeviceOfType()) {
    return 10601;
  }
  int v4 = 1472775220;
  long long v3 = xmmword_1000EA170;
  if (MGIsDeviceOfType()) {
    return 10603;
  }
  int v4 = 483476120;
  long long v3 = xmmword_1000EA184;
  if (MGIsDeviceOfType()) {
    return 10603;
  }
  int v4 = 282158961;
  long long v3 = xmmword_1000EA198;
  if (MGIsDeviceOfType()) {
    return 10606;
  }
  int v4 = 56502976;
  long long v3 = xmmword_1000EA1AC;
  if (MGIsDeviceOfType()) {
    return 10606;
  }
  int v4 = -961843768;
  long long v3 = xmmword_1000EA1C0;
  if (MGIsDeviceOfType()) {
    return 10608;
  }
  int v4 = 1282132887;
  long long v3 = xmmword_1000EA1D4;
  if (MGIsDeviceOfType()) {
    return 10608;
  }
  int v4 = -441172408;
  long long v3 = xmmword_1000EA1E8;
  if (MGIsDeviceOfType()) {
    return 10610;
  }
  int v4 = 1326690998;
  long long v3 = xmmword_1000EA1FC;
  if (MGIsDeviceOfType()) {
    return 10610;
  }
  int v4 = 1756484512;
  long long v3 = xmmword_1000EA210;
  if (MGIsDeviceOfType()) {
    return 10612;
  }
  int v4 = -126099363;
  long long v3 = xmmword_1000EA224;
  if (MGIsDeviceOfType()) {
    return 10612;
  }
  int v4 = -1092155788;
  long long v3 = xmmword_1000EA238;
  if (MGIsDeviceOfType()) {
    return 10614;
  }
  int v4 = 763775061;
  long long v3 = xmmword_1000EA24C;
  if (MGIsDeviceOfType()) {
    return 10614;
  }
  int v4 = -63049871;
  long long v3 = xmmword_1000EA260;
  if (MGIsDeviceOfType()) {
    return 10616;
  }
  int v4 = -557458837;
  long long v3 = xmmword_1000EA274;
  if (MGIsDeviceOfType()) {
    return 10616;
  }
  int v4 = 1730000236;
  long long v3 = xmmword_1000EA288;
  if (MGIsDeviceOfType()) {
    return 10618;
  }
  int v4 = 1530338216;
  long long v3 = xmmword_1000EA29C;
  if (MGIsDeviceOfType()) {
    return 10701;
  }
  int v4 = 406601745;
  long long v3 = xmmword_1000EA2B0;
  if (MGIsDeviceOfType()) {
    return 10701;
  }
  int v4 = 1654218604;
  long long v3 = xmmword_1000EA2C4;
  if (MGIsDeviceOfType()) {
    return 10703;
  }
  int v4 = -1930811061;
  long long v3 = xmmword_1000EA2D8;
  if (MGIsDeviceOfType()) {
    return 10703;
  }
  int v4 = -182498503;
  long long v3 = xmmword_1000EA2EC;
  if (MGIsDeviceOfType()) {
    return 10705;
  }
  int v4 = 841005628;
  long long v3 = xmmword_1000EA300;
  if (MGIsDeviceOfType()) {
    return 10708;
  }
  int v4 = -2030489149;
  long long v3 = xmmword_1000EA314;
  if (MGIsDeviceOfType()) {
    return 10708;
  }
  int v4 = 1219348060;
  long long v3 = xmmword_1000EA328;
  if (MGIsDeviceOfType()) {
    return 10710;
  }
  int v4 = 223445260;
  long long v3 = xmmword_1000EA33C;
  if (MGIsDeviceOfType()) {
    return 10710;
  }
  int v4 = -232427879;
  long long v3 = xmmword_1000EA350;
  if (MGIsDeviceOfType()) {
    return 21102;
  }
  int v4 = -427474227;
  long long v3 = xmmword_1000EA364;
  if (MGIsDeviceOfType()) {
    return 21106;
  }
  int v4 = 1477534141;
  long long v3 = xmmword_1000EA378;
  if (MGIsDeviceOfType()) {
    return 21106;
  }
  int v4 = -1843102369;
  long long v3 = xmmword_1000EA38C;
  if (MGIsDeviceOfType()) {
    return 21108;
  }
  int v4 = -61007701;
  long long v3 = xmmword_1000EA3A0;
  if (MGIsDeviceOfType()) {
    return 21203;
  }
  int v4 = -235416490;
  long long v3 = xmmword_1000EA3B4;
  if (MGIsDeviceOfType()) {
    return 21205;
  }
  int v4 = -820493242;
  long long v3 = xmmword_1000EA3C8;
  if (MGIsDeviceOfType()) {
    return 21201;
  }
  int v4 = -121925081;
  long long v3 = xmmword_1000EA3DC;
  if (MGIsDeviceOfType()) {
    return 21210;
  }
  int v4 = -1820426635;
  long long v3 = xmmword_1000EA3F0;
  if (MGIsDeviceOfType()) {
    return 21502;
  }
  int v4 = -937652876;
  long long v3 = xmmword_1000EA404;
  if (MGIsDeviceOfType()) {
    return 21503;
  }
  int v4 = 1874287171;
  long long v3 = xmmword_1000EA418;
  if (MGIsDeviceOfType()) {
    return 21603;
  }
  int v4 = -781324731;
  long long v3 = xmmword_1000EA42C;
  if (MGIsDeviceOfType()) {
    return 21602;
  }
  int v4 = 1214880059;
  long long v3 = xmmword_1000EA440;
  if (MGIsDeviceOfType()) {
    return 21701;
  }
  int v4 = 426359977;
  long long v3 = xmmword_1000EA454;
  if (MGIsDeviceOfType()) {
    return 21702;
  }
  int v4 = -1841712216;
  long long v3 = xmmword_1000EA468;
  if (MGIsDeviceOfType()) {
    return 31102;
  }
  int v4 = 213746202;
  long long v3 = xmmword_1000EA47C;
  if (MGIsDeviceOfType()) {
    return 31104;
  }
  int v4 = 300442574;
  long long v3 = xmmword_1000EA490;
  if (MGIsDeviceOfType()) {
    return 30808;
  }
  int v4 = 440949464;
  long long v3 = xmmword_1000EA4A4;
  if (MGIsDeviceOfType()) {
    return 31302;
  }
  int v4 = -762483149;
  long long v3 = xmmword_1000EA4B8;
  if (MGIsDeviceOfType()) {
    return 30804;
  }
  int v4 = -1294188889;
  long long v3 = xmmword_1000EA4CC;
  if (MGIsDeviceOfType()) {
    return 30808;
  }
  int v4 = -1926937532;
  long long v3 = xmmword_1000EA4E0;
  if (MGIsDeviceOfType()) {
    return 30804;
  }
  int v4 = -2132668294;
  long long v3 = xmmword_1000EA4F4;
  if (MGIsDeviceOfType()) {
    return 30712;
  }
  int v4 = -858079590;
  long long v3 = xmmword_1000EA508;
  if (MGIsDeviceOfType()) {
    return 31107;
  }
  int v4 = -1675932945;
  long long v3 = xmmword_1000EA51C;
  if (MGIsDeviceOfType()) {
    return 30812;
  }
  int v4 = 300130091;
  long long v3 = xmmword_1000EA530;
  if (MGIsDeviceOfType()) {
    return 30810;
  }
  int v4 = 646100384;
  long long v3 = xmmword_1000EA544;
  if (MGIsDeviceOfType()) {
    return 31202;
  }
  unint64_t v2 = qword_100114840;
  uint64_t result = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR);
  if (result)
  {
    LODWORD(v3) = 67109120;
    DWORD1(v3) = MGGetProductType();
    _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "GpsdPlatformInfo,Unknown or unsupported hardware,%x", (uint8_t *)&v3, 8u);
    return 0;
  }
  return result;
}

uint64_t sub_1000AE0F8()
{
  if (proto::gnss::Position::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Position::default_instance_ + 8))(proto::gnss::Position::default_instance_);
  }
  if (qword_100114688) {
    (*(void (**)(uint64_t))(*(void *)qword_100114688 + 8))(qword_100114688);
  }
  if (qword_100114690) {
    (*(void (**)(uint64_t))(*(void *)qword_100114690 + 8))(qword_100114690);
  }
  if (proto::gnss::Fix::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Fix::default_instance_ + 8))(proto::gnss::Fix::default_instance_);
  }
  if (proto::gnss::TimeTransferData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::TimeTransferData::default_instance_ + 8))(proto::gnss::TimeTransferData::default_instance_);
  }
  if (proto::gnss::TimeTransferDataExtend::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::TimeTransferDataExtend::default_instance_ + 8))(proto::gnss::TimeTransferDataExtend::default_instance_);
  }
  if (qword_100114698) {
    (*(void (**)(uint64_t))(*(void *)qword_100114698 + 8))(qword_100114698);
  }
  if (qword_1001146A0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001146A0 + 8))(qword_1001146A0);
  }
  if (qword_1001146A8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001146A8 + 8))(qword_1001146A8);
  }
  if (proto::gnss::PwrMeasurement::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::PwrMeasurement::default_instance_ + 8))(proto::gnss::PwrMeasurement::default_instance_);
  }
  if (proto::gnss::DecodedRti::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::DecodedRti::default_instance_ + 8))(proto::gnss::DecodedRti::default_instance_);
  }
  uint64_t result = proto::gnss::DecodedExtendedEphemeris::default_instance_;
  if (proto::gnss::DecodedExtendedEphemeris::default_instance_)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)proto::gnss::DecodedExtendedEphemeris::default_instance_ + 8);
    return v1();
  }
  return result;
}

void proto::gnss::protobuf_AddDesc_GnssTypes_2eproto(proto::gnss *this, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_100114680 & 1) == 0)
  {
    byte_100114680 = 1;
    int v4 = (CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"Sources/Protobuf/Generated/GnssTypes.pb.cc", a4);
    CLP::LogEntry::PrivateData::protobuf_AddDesc_CLPGnssMeasApi_2eproto(v4, v5, v6, v7);
    operator new();
  }
}

BOOL proto::gnss::Reliability_IsValid(proto::gnss *this)
{
  unsigned int v1 = this;
  BOOL result = 1;
  if (v1 > 0x32 || ((1 << v1) & 0x4000002000403) == 0) {
    return v1 == 75;
  }
  return result;
}

void proto::gnss::Position::MergeFrom(proto::gnss::Position *this, const proto::gnss::Position *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  int v4 = *((_DWORD *)a2 + 24);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v10 = *((void *)a2 + 1);
    *((_DWORD *)this + 24) |= 1u;
    *((void *)this + 1) = v10;
    int v4 = *((_DWORD *)a2 + 24);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_27;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v11 = *((void *)a2 + 2);
  *((_DWORD *)this + 24) |= 2u;
  *((void *)this + 2) = v11;
  int v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v12 = *((void *)a2 + 3);
  *((_DWORD *)this + 24) |= 4u;
  *((void *)this + 3) = v12;
  int v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v13 = *((void *)a2 + 4);
  *((_DWORD *)this + 24) |= 8u;
  *((void *)this + 4) = v13;
  int v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_30:
    uint64_t v15 = *((void *)a2 + 6);
    *((_DWORD *)this + 24) |= 0x20u;
    *((void *)this + 6) = v15;
    int v4 = *((_DWORD *)a2 + 24);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_29:
  uint64_t v14 = *((void *)a2 + 5);
  *((_DWORD *)this + 24) |= 0x10u;
  *((void *)this + 5) = v14;
  int v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 0x20) != 0) {
    goto LABEL_30;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_31:
  uint64_t v16 = *((void *)a2 + 7);
  *((_DWORD *)this + 24) |= 0x40u;
  *((void *)this + 7) = v16;
  int v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    uint64_t v5 = *((void *)a2 + 8);
    *((_DWORD *)this + 24) |= 0x80u;
    *((void *)this + 8) = v5;
    int v4 = *((_DWORD *)a2 + 24);
  }
LABEL_13:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      int v6 = *((_DWORD *)a2 + 18);
      *((_DWORD *)this + 24) |= 0x100u;
      *((_DWORD *)this + 18) = v6;
      int v4 = *((_DWORD *)a2 + 24);
    }
    if ((v4 & 0x200) != 0)
    {
      unsigned int v7 = *((_DWORD *)a2 + 19);
      if (!proto::gnss::Reliability_IsValid((proto::gnss *)v7)) {
        __assert_rtn("set_reliability", "GnssTypes.pb.h", 1975, "::proto::gnss::Reliability_IsValid(value)");
      }
      *((_DWORD *)this + 24) |= 0x200u;
      *((_DWORD *)this + 19) = v7;
      int v4 = *((_DWORD *)a2 + 24);
    }
    if ((v4 & 0x400) != 0)
    {
      uint64_t v8 = *((void *)a2 + 10);
      *((_DWORD *)this + 24) |= 0x400u;
      *((void *)this + 10) = v8;
      int v4 = *((_DWORD *)a2 + 24);
    }
    if ((v4 & 0x800) != 0)
    {
      unsigned int v9 = *((_DWORD *)a2 + 22);
      if (v9 >= 6) {
        __assert_rtn("set_gnss_content_in_fix", "GnssTypes.pb.h", 2020, "::proto::gnss::GnssContent_IsValid(value)");
      }
      *((_DWORD *)this + 24) |= 0x800u;
      *((_DWORD *)this + 22) = v9;
    }
  }
}

void sub_1000AEA94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000AEAAC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D3D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000AEACC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D3D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000AEB20()
{
}

uint64_t proto::gnss::Position::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 96);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(this + 56) = 0u;
    *(_OWORD *)(this + 40) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 72) = 0;
    *(void *)(this + 80) = 0;
    *(_DWORD *)(this + 88) = 0;
  }
  *(_DWORD *)(this + 96) = 0;
  return this;
}

uint64_t proto::gnss::Position::MergePartialFromCodedStream(proto::gnss::Position *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 72);
  int v6 = (unint64_t *)((char *)this + 80);
  while (2)
  {
    unsigned int v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_59;
        }
        *(void *)char v30 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v30) & 1) == 0)return 0; {
        *((void *)this + 1) = *(void *)v30;
        }
        *((_DWORD *)this + 24) |= 1u;
        uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_59;
        }
LABEL_15:
        *(void *)char v30 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v30) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v30;
        }
        *((_DWORD *)this + 24) |= 2u;
        uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v11 + 1;
LABEL_20:
        *(void *)char v30 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v30) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v30;
        }
        *((_DWORD *)this + 24) |= 4u;
        uint64_t v12 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v12 + 1;
LABEL_25:
        *(void *)char v30 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v30) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v30;
        }
        *((_DWORD *)this + 24) |= 8u;
        uint64_t v13 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v13 + 1;
LABEL_30:
        *(void *)char v30 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v30) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v30;
        }
        *((_DWORD *)this + 24) |= 0x10u;
        uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_35:
        *(void *)char v30 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v30) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v30;
        }
        *((_DWORD *)this + 24) |= 0x20u;
        uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_40:
        *(void *)char v30 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v30) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v30;
        }
        *((_DWORD *)this + 24) |= 0x40u;
        uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_45:
        *(void *)char v30 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v30))
        {
          *((void *)this + 8) = *(void *)v30;
          *((_DWORD *)this + 24) |= 0x80u;
          double v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
          if ((unint64_t)v18 < v17 && *v18 == 72)
          {
            uint64_t v19 = v18 + 1;
            *((void *)a2 + 1) = v19;
LABEL_51:
            if ((unint64_t)v19 >= v17 || *v19 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
              if (!result) {
                return result;
              }
              int v20 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v17 = *((void *)a2 + 2);
            }
            else
            {
              unsigned int *v5 = *v19;
              int v20 = v19 + 1;
              *((void *)a2 + 1) = v20;
            }
            *((_DWORD *)this + 24) |= 0x100u;
            if ((unint64_t)v20 < v17 && *v20 == 80)
            {
              __int16 v21 = v20 + 1;
              *((void *)a2 + 1) = v21;
LABEL_68:
              v30[0] = 0;
              if ((unint64_t)v21 >= v17 || *v21 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v30);
                if (!result) {
                  return result;
                }
                unint64_t v26 = v30[0];
              }
              else
              {
                unint64_t v26 = *v21;
                *((void *)a2 + 1) = v21 + 1;
              }
              if (proto::gnss::Reliability_IsValid((proto::gnss *)v26))
              {
                *((_DWORD *)this + 24) |= 0x200u;
                *((_DWORD *)this + 19) = v26;
              }
              char v27 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v22 = *((void *)a2 + 2);
              if ((unint64_t)v27 < v22 && *v27 == 88)
              {
                __int16 v23 = v27 + 1;
                *((void *)a2 + 1) = v23;
LABEL_78:
                if ((unint64_t)v23 >= v22 || *v23 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
                  if (!result) {
                    return result;
                  }
                  int v28 = (unsigned char *)*((void *)a2 + 1);
                  unint64_t v22 = *((void *)a2 + 2);
                }
                else
                {
                  *int v6 = *v23;
                  int v28 = v23 + 1;
                  *((void *)a2 + 1) = v28;
                }
                *((_DWORD *)this + 24) |= 0x400u;
                if ((unint64_t)v28 < v22 && *v28 == 96)
                {
                  uint64_t v24 = v28 + 1;
                  *((void *)a2 + 1) = v24;
LABEL_86:
                  v30[0] = 0;
                  if ((unint64_t)v24 >= v22 || *v24 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v30);
                    if (!result) {
                      return result;
                    }
                    unsigned int v29 = v30[0];
                  }
                  else
                  {
                    unsigned int v29 = *v24;
                    *((void *)a2 + 1) = v24 + 1;
                  }
                  if (v29 <= 5)
                  {
                    *((_DWORD *)this + 24) |= 0x800u;
                    *((_DWORD *)this + 22) = v29;
                  }
                  if (*((void *)a2 + 1) == *((void *)a2 + 2)
                    && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                  {
                    *((_DWORD *)a2 + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)a2 + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_59;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_25;
        }
        goto LABEL_59;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_30;
        }
        goto LABEL_59;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_35;
        }
        goto LABEL_59;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_40;
        }
        goto LABEL_59;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_45;
        }
        goto LABEL_59;
      case 9u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_59;
        }
        uint64_t v19 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_51;
      case 0xAu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_59;
        }
        __int16 v21 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_68;
      case 0xBu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_59;
        }
        __int16 v23 = (char *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_78;
      case 0xCu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_59;
        }
        uint64_t v24 = (char *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_86;
      default:
        int v9 = TagFallback & 7;
LABEL_59:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000AF180(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 96);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 72), a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(void *)(v5 + 80), a2, a4);
    if ((*(_DWORD *)(v5 + 96) & 0x800) == 0) {
      return result;
    }
    goto LABEL_25;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 76), a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x400) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v6 & 0x800) == 0) {
    return result;
  }
LABEL_25:
  int v7 = *(_DWORD *)(v5 + 88);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v7, a2, a4);
}

uint64_t proto::gnss::Position::ByteSize(proto::gnss::Position *this, unint64_t a2)
{
  int v3 = *((_DWORD *)this + 24);
  if ((_BYTE)v3)
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
      if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        int v3 = *((_DWORD *)this + 24);
      }
      else
      {
        int v7 = 2;
      }
      uint64_t v5 = (v7 + v5);
      if ((v3 & 0x200) == 0)
      {
LABEL_21:
        if ((v3 & 0x400) == 0) {
          goto LABEL_22;
        }
        goto LABEL_34;
      }
    }
    else if ((v3 & 0x200) == 0)
    {
      goto LABEL_21;
    }
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *((_DWORD *)this + 24);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v5 = (v9 + v5);
    if ((v3 & 0x400) == 0)
    {
LABEL_22:
      if ((v3 & 0x800) == 0) {
        goto LABEL_41;
      }
LABEL_35:
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
      if ((v10 & 0x80000000) != 0)
      {
        int v11 = 11;
      }
      else if (v10 >= 0x80)
      {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
      }
      else
      {
        int v11 = 2;
      }
      uint64_t v5 = (v11 + v5);
      goto LABEL_41;
    }
LABEL_34:
    uint64_t v5 = v5
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 10), a2)+ 1;
    if ((*((_DWORD *)this + 24) & 0x800) == 0) {
      goto LABEL_41;
    }
    goto LABEL_35;
  }
LABEL_41:
  *((_DWORD *)this + 23) = v5;
  return v5;
}

void sub_1000AF460(proto::gnss::Position *a1, void *lpsrc)
{
  proto::gnss::Position::MergeFrom(a1, (const proto::gnss::Position *)lpsrc);
}

uint64_t sub_1000AF504()
{
  return 1;
}

void *sub_1000AF50C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Position");
}

double sub_1000AF51C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 60);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 60))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 60) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 60);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_14;
      }
    }
    else if ((*(unsigned char *)(a2 + 60) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 60) |= 2u;
    *(double *)(a1 + 16) = result;
    int v5 = *(_DWORD *)(a2 + 60);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_15;
    }
LABEL_14:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 60) |= 4u;
    *(double *)(a1 + 24) = result;
    int v5 = *(_DWORD *)(a2 + 60);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
LABEL_15:
    double result = *(double *)(a2 + 32);
    *(_DWORD *)(a1 + 60) |= 8u;
    *(double *)(a1 + 32) = result;
    int v5 = *(_DWORD *)(a2 + 60);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        return result;
      }
      goto LABEL_10;
    }
LABEL_16:
    double result = *(double *)(a2 + 40);
    *(_DWORD *)(a1 + 60) |= 0x10u;
    *(double *)(a1 + 40) = result;
    if ((*(_DWORD *)(a2 + 60) & 0x20) == 0) {
      return result;
    }
LABEL_10:
    double result = *(double *)(a2 + 48);
    *(_DWORD *)(a1 + 60) |= 0x20u;
    *(double *)(a1 + 48) = result;
  }
  return result;
}

void sub_1000AF650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000AF668(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D450;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000AF688(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D450;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000AF6DC()
{
}

uint64_t sub_1000AF738(uint64_t result)
{
  if (*(unsigned char *)(result + 60))
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  *(_DWORD *)(result + 60) = 0;
  return result;
}

uint64_t sub_1000AF758(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_39;
        }
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v14;
        *(_DWORD *)(a1 + 60) |= 1u;
        uint64_t v8 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 != 17) {
          continue;
        }
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_39;
        }
LABEL_14:
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 60) |= 2u;
        int v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 != 25) {
          continue;
        }
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v14;
        *(_DWORD *)(a1 + 60) |= 4u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 33) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
LABEL_24:
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v14;
        *(_DWORD *)(a1 + 60) |= 8u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 41) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_29:
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 40) = v14;
        *(_DWORD *)(a1 + 60) |= 0x10u;
        uint64_t v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 49) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_34:
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 48) = v14;
        *(_DWORD *)(a1 + 60) |= 0x20u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_19;
        }
        goto LABEL_39;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_24;
        }
        goto LABEL_39;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_29;
        }
        goto LABEL_39;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_34;
        }
        goto LABEL_39;
      default:
        int v7 = TagFallback & 7;
LABEL_39:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t sub_1000AFA58(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 60);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    int v5 = *(_DWORD *)(v4 + 60);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v4 + 16), a3);
  int v5 = *(_DWORD *)(v4 + 60);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v4 + 24), a3);
  int v5 = *(_DWORD *)(v4 + 60);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, a2, *(double *)(v4 + 40), a3);
    if ((*(_DWORD *)(v4 + 60) & 0x20) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(v4 + 32), a3);
  int v5 = *(_DWORD *)(v4 + 60);
  if ((v5 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v5 & 0x20) == 0) {
    return result;
  }
LABEL_13:
  double v6 = *(double *)(v4 + 48);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, a2, v6, a3);
}

uint64_t sub_1000AFB38(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 60);
  if (*(unsigned char *)(a1 + 60))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x20) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 56) = v1;
  return v1;
}

double sub_1000AFB94(uint64_t a1, void *lpsrc)
{
  return sub_1000AF51C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000AFC38()
{
  return 1;
}

void *sub_1000AFC40@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Velocity");
}

void sub_1000AFC50(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  int v4 = *(_DWORD *)(a2 + 72);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v7 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 72) |= 1u;
    *(void *)(a1 + 8) = v7;
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 72) |= 2u;
  *(_DWORD *)(a1 + 16) = v8;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  char v9 = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 72) |= 4u;
  *(unsigned char *)(a1 + 20) = v9;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v10 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 72) |= 8u;
  *(_DWORD *)(a1 + 64) = v10;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    uint64_t v12 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 72) |= 0x20u;
    *(void *)(a1 + 32) = v12;
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_20:
  uint64_t v11 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 72) |= 0x10u;
  *(void *)(a1 + 24) = v11;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x20) != 0) {
    goto LABEL_21;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_22:
  uint64_t v13 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 72) |= 0x40u;
  *(void *)(a1 + 40) = v13;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    uint64_t v5 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 72) |= 0x80u;
    *(void *)(a1 + 48) = v5;
    int v4 = *(_DWORD *)(a2 + 72);
  }
LABEL_13:
  if ((v4 & 0x100) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 72) |= 0x100u;
    *(void *)(a1 + 56) = v6;
  }
}

void sub_1000AFDE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000AFDFC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D4C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000AFE1C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D4C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000AFE70()
{
}

uint64_t sub_1000AFED4(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 72);
  if ((_BYTE)v1)
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(unsigned char *)(result + 20) = 0;
    *(_DWORD *)(result + 64) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
  }
  if ((v1 & 0xFF00) != 0) {
    *(void *)(result + 56) = 0;
  }
  *(_DWORD *)(result + 72) = 0;
  return result;
}

uint64_t sub_1000AFF10(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  uint64_t v6 = (unint64_t *)(a1 + 24);
  uint64_t v7 = (unint64_t *)(a1 + 48);
  int v8 = (unint64_t *)(a1 + 56);
  while (2)
  {
    char v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          unint64_t v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v13;
          unint64_t v14 = v13 + 1;
          *((void *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 72) |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 21)
        {
          *((void *)this + 1) = v14 + 1;
          goto LABEL_37;
        }
        continue;
      case 2u:
        int v11 = TagFallback & 7;
        if (v11 != 5) {
          goto LABEL_28;
        }
LABEL_37:
        v33[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v33) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 16) = v33[0];
        *(_DWORD *)(a1 + 72) |= 2u;
        __int16 v23 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v23 >= v15 || *v23 != 24) {
          continue;
        }
        uint64_t v16 = v23 + 1;
        *((void *)this + 1) = v16;
LABEL_41:
        v33[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v33);
          if (!result) {
            return result;
          }
          unsigned int v24 = v33[0];
          __int16 v25 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v24 = *v16;
          __int16 v25 = v16 + 1;
          *((void *)this + 1) = v25;
        }
        *(unsigned char *)(a1 + 20) = v24 != 0;
        *(_DWORD *)(a1 + 72) |= 4u;
        if ((unint64_t)v25 >= v15 || *v25 != 32) {
          continue;
        }
        unint64_t v17 = v25 + 1;
        *((void *)this + 1) = v17;
LABEL_49:
        v33[0] = 0;
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v33);
          if (!result) {
            return result;
          }
          unsigned int v26 = v33[0];
          char v27 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v26 = *v17;
          char v27 = v17 + 1;
          *((void *)this + 1) = v27;
        }
        *(_DWORD *)(a1 + 64) = v26;
        *(_DWORD *)(a1 + 72) |= 8u;
        if ((unint64_t)v27 >= v15 || *v27 != 40) {
          continue;
        }
        double v18 = v27 + 1;
        *((void *)this + 1) = v18;
LABEL_57:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v18;
          int v28 = v18 + 1;
          *((void *)this + 1) = v28;
        }
        *(_DWORD *)(a1 + 72) |= 0x10u;
        if ((unint64_t)v28 >= v15 || *v28 != 49) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_65:
        *(void *)int v33 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v33) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v33;
        }
        *(_DWORD *)(a1 + 72) |= 0x20u;
        unsigned int v29 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v29 >= *((void *)this + 2) || *v29 != 57) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
LABEL_69:
        *(void *)int v33 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v33))
        {
          *(void *)(a1 + 40) = *(void *)v33;
          *(_DWORD *)(a1 + 72) |= 0x40u;
          char v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v19 = *((void *)this + 2);
          if ((unint64_t)v30 < v19 && *v30 == 64)
          {
            int v20 = v30 + 1;
            *((void *)this + 1) = v20;
LABEL_73:
            if ((unint64_t)v20 >= v19 || *v20 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
              if (!result) {
                return result;
              }
              int v31 = (unsigned char *)*((void *)this + 1);
              unint64_t v19 = *((void *)this + 2);
            }
            else
            {
              unint64_t *v7 = *v20;
              int v31 = v20 + 1;
              *((void *)this + 1) = v31;
            }
            *(_DWORD *)(a1 + 72) |= 0x80u;
            if ((unint64_t)v31 < v19 && *v31 == 72)
            {
              __int16 v21 = v31 + 1;
              *((void *)this + 1) = v21;
LABEL_81:
              if ((unint64_t)v21 >= v19 || *v21 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v8);
                if (!result) {
                  return result;
                }
                int v32 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v19 = *((void *)this + 2);
              }
              else
              {
                *int v8 = *v21;
                int v32 = (unsigned __int8 *)(v21 + 1);
                *((void *)this + 1) = v32;
              }
              *(_DWORD *)(a1 + 72) |= 0x100u;
              if (v32 == (unsigned __int8 *)v19
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_41;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_49;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        double v18 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_57;
      case 6u:
        int v11 = TagFallback & 7;
        if (v11 == 1) {
          goto LABEL_65;
        }
        goto LABEL_28;
      case 7u:
        int v11 = TagFallback & 7;
        if (v11 == 1) {
          goto LABEL_69;
        }
        goto LABEL_28;
      case 8u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        goto LABEL_73;
      case 9u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        __int16 v21 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        goto LABEL_81;
      default:
        int v11 = TagFallback & 7;
LABEL_28:
        if (v11 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000B03EC(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 72);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 64), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(v5 + 48), a2, a4);
    if ((*(_DWORD *)(v5 + 72) & 0x100) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x80) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v6 & 0x100) == 0) {
    return result;
  }
LABEL_19:
  uint64_t v7 = *(void *)(v5 + 56);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v7, a2, a4);
}

uint64_t sub_1000B0520(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 72);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 5;
    }
    if ((v3 & 4) != 0) {
      unsigned int v6 = v4 + 2;
    }
    else {
      unsigned int v6 = v4;
    }
    if ((v3 & 8) != 0)
    {
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
      if ((v7 & 0x80000000) != 0)
      {
        int v8 = 11;
      }
      else if (v7 >= 0x80)
      {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 72);
      }
      else
      {
        int v8 = 2;
      }
      v6 += v8;
    }
    if ((v3 & 0x10) != 0)
    {
      v6 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 72);
    }
    unsigned int v9 = v6 + 9;
    if ((v3 & 0x20) == 0) {
      unsigned int v9 = v6;
    }
    if ((v3 & 0x40) != 0) {
      uint64_t v5 = v9 + 9;
    }
    else {
      uint64_t v5 = v9;
    }
    if ((v3 & 0x80) != 0)
    {
      uint64_t v5 = v5
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 48), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 72);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  if ((v3 & 0x100) != 0) {
    uint64_t v5 = v5
  }
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 56), a2)+ 1;
  *(_DWORD *)(a1 + 68) = v5;
  return v5;
}

void sub_1000B0620(uint64_t a1, void *lpsrc)
{
  sub_1000AFC50(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000B06C4()
{
  return 1;
}

void *sub_1000B06CC@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Time");
}

void proto::gnss::Fix::MergeFrom(proto::gnss::Fix *this, const proto::gnss::Fix *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 48);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 48))
    {
      *((_DWORD *)this + 12) |= 1u;
      uint64_t v5 = *((void *)this + 1);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *((void *)a2 + 1);
      if (!v6) {
        uint64_t v6 = *(void *)(proto::gnss::Fix::default_instance_ + 8);
      }
      sub_1000AFC50(v5, v6);
      int v4 = *((_DWORD *)a2 + 12);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_20;
      }
    }
    else if ((*((unsigned char *)a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)this + 12) |= 2u;
    uint64_t v7 = (proto::gnss::Position *)*((void *)this + 2);
    if (!v7) {
      operator new();
    }
    int v8 = (const proto::gnss::Position *)*((void *)a2 + 2);
    if (!v8) {
      int v8 = *(const proto::gnss::Position **)(proto::gnss::Fix::default_instance_ + 16);
    }
    proto::gnss::Position::MergeFrom(v7, v8);
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_25;
    }
LABEL_20:
    *((_DWORD *)this + 12) |= 4u;
    uint64_t v9 = *((void *)this + 3);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = *((void *)a2 + 3);
    if (!v10) {
      uint64_t v10 = *(void *)(proto::gnss::Fix::default_instance_ + 24);
    }
    sub_1000AF51C(v9, v10);
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
LABEL_26:
      unsigned int v12 = *((_DWORD *)a2 + 10);
      if (v12 >= 5) {
        __assert_rtn("set_estimation_technology", "GnssTypes.pb.h", 2533, "::proto::gnss::EstimationTechnology_IsValid(value)");
      }
      *((_DWORD *)this + 12) |= 0x10u;
      *((_DWORD *)this + 10) = v12;
      return;
    }
LABEL_25:
    uint64_t v11 = *((void *)a2 + 4);
    *((_DWORD *)this + 12) |= 8u;
    *((void *)this + 4) = v11;
    if ((*((_DWORD *)a2 + 12) & 0x10) == 0) {
      return;
    }
    goto LABEL_26;
  }
}

void sub_1000B0954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1000B096C(void *result)
{
  if ((void *)proto::gnss::Fix::default_instance_ != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[3];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_1000B0A38(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D540;
  sub_1000B096C(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000B0A8C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D540;
  sub_1000B096C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000B0AF4()
{
}

uint64_t proto::gnss::Fix::Clear(uint64_t this)
{
  LOBYTE(v1) = *(unsigned char *)(this + 48);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(this + 48))
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        int v3 = *(_DWORD *)(v2 + 72);
        if ((_BYTE)v3)
        {
          *(void *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
          *(unsigned char *)(v2 + 20) = 0;
          *(_DWORD *)(v2 + 64) = 0;
          *(_OWORD *)(v2 + 24) = 0u;
          *(_OWORD *)(v2 + 40) = 0u;
        }
        if ((v3 & 0xFF00) != 0) {
          *(void *)(v2 + 56) = 0;
        }
        *(_DWORD *)(v2 + 72) = 0;
        int v1 = *(_DWORD *)(this + 48);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v4 = *(void *)(this + 16);
      if (v4)
      {
        int v5 = *(_DWORD *)(v4 + 96);
        if ((_BYTE)v5)
        {
          *(_OWORD *)(v4 + 56) = 0u;
          *(_OWORD *)(v4 + 40) = 0u;
          *(_OWORD *)(v4 + 24) = 0u;
          *(_OWORD *)(v4 + 8) = 0u;
        }
        if ((v5 & 0xFF00) != 0)
        {
          *(void *)(v4 + 72) = 0;
          *(void *)(v4 + 80) = 0;
          *(_DWORD *)(v4 + 88) = 0;
        }
        *(_DWORD *)(v4 + 96) = 0;
        int v1 = *(_DWORD *)(this + 48);
      }
    }
    if ((v1 & 4) != 0)
    {
      uint64_t v6 = *(void *)(this + 24);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 60))
        {
          *(_OWORD *)(v6 + 40) = 0u;
          *(_OWORD *)(v6 + 24) = 0u;
          *(_OWORD *)(v6 + 8) = 0u;
        }
        *(_DWORD *)(v6 + 60) = 0;
      }
    }
    *(void *)(this + 32) = 0;
    *(_DWORD *)(this + 40) = 0;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t proto::gnss::Fix::MergePartialFromCodedStream(proto::gnss::Fix *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  int v5 = (unint64_t *)((char *)this + 32);
  while (1)
  {
    uint64_t v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 < *((void *)a2 + 2) && (*v6 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_22;
        }
        *((_DWORD *)this + 12) |= 1u;
        uint64_t v9 = *((void *)this + 1);
        if (!v9) {
          operator new();
        }
        unsigned int v43 = 0;
        uint64_t v10 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43))return 0; {
        }
          }
        else
        {
          unsigned int v43 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v43);
        if (!sub_1000AFF10(v9, a2, v17) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v16);
        int v18 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v20;
        }
        __int16 v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
        goto LABEL_35;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_22;
        }
LABEL_35:
        *((_DWORD *)this + 12) |= 2u;
        unint64_t v22 = (proto::gnss::Position *)*((void *)this + 2);
        if (!v22) {
          operator new();
        }
        unsigned int v43 = 0;
        __int16 v23 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43))return 0; {
        }
          }
        else
        {
          unsigned int v43 = *v23;
          *((void *)a2 + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)a2 + 14);
        int v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v43);
        if (!proto::gnss::Position::MergePartialFromCodedStream(v22, a2, v27) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v26);
        int v28 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v29;
        }
        char v30 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v30 + 1;
LABEL_49:
        *((_DWORD *)this + 12) |= 4u;
        uint64_t v31 = *((void *)this + 3);
        if (!v31) {
          operator new();
        }
        unsigned int v43 = 0;
        int v32 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v32 >= *((void *)a2 + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43))return 0; {
        }
          }
        else
        {
          unsigned int v43 = *v32;
          *((void *)a2 + 1) = v32 + 1;
        }
        int v33 = *((_DWORD *)a2 + 14);
        int v34 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v43);
        if (!sub_1000AF758(v31, a2, v36) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v35);
        int v37 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v38;
        }
        int v39 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v39 < v11 && *v39 == 32)
        {
          unsigned int v12 = v39 + 1;
          *((void *)a2 + 1) = v12;
LABEL_63:
          if ((unint64_t)v12 >= v11 || *v12 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
            if (!result) {
              return result;
            }
            int v40 = (unsigned char *)*((void *)a2 + 1);
            unint64_t v11 = *((void *)a2 + 2);
          }
          else
          {
            unint64_t *v5 = *v12;
            int v40 = v12 + 1;
            *((void *)a2 + 1) = v40;
          }
          *((_DWORD *)this + 12) |= 8u;
          if ((unint64_t)v40 < v11 && *v40 == 40)
          {
            uint64_t v13 = v40 + 1;
            *((void *)a2 + 1) = v13;
LABEL_71:
            unsigned int v43 = 0;
            if ((unint64_t)v13 >= v11 || *v13 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43);
              if (!result) {
                return result;
              }
              unsigned int v42 = v43;
            }
            else
            {
              unsigned int v42 = *v13;
              *((void *)a2 + 1) = v13 + 1;
            }
            if (v42 <= 4)
            {
              *((_DWORD *)this + 12) |= 0x10u;
              *((_DWORD *)this + 10) = v42;
            }
            if (*((void *)a2 + 1) == *((void *)a2 + 2)
              && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)a2 + 36) = 1;
              return result;
            }
          }
        }
        break;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_49;
        }
        goto LABEL_22;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_63;
      case 5u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        uint64_t v13 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_71;
      default:
        int v8 = TagFallback & 7;
LABEL_22:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000B1190(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(proto::gnss::Fix::default_instance_ + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(proto::gnss::Fix::default_instance_ + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_16:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 32), (unint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 48) & 0x10) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_13:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(proto::gnss::Fix::default_instance_ + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) != 0) {
    goto LABEL_16;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_17:
  int v10 = *(_DWORD *)(v5 + 40);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, (int)a2, a4);
}

uint64_t proto::gnss::Fix::ByteSize(proto::gnss::Fix *this, unint64_t a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 48);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_32;
  }
  if ((*((unsigned char *)this + 48) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*((unsigned char *)this + 48) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *((void *)this + 1);
  if (!v5) {
    uint64_t v5 = *(void *)(proto::gnss::Fix::default_instance_ + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B0520(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *((_DWORD *)this + 12);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = (proto::gnss::Position *)*((void *)this + 2);
    if (!v9) {
      uint64_t v9 = *(proto::gnss::Position **)(proto::gnss::Fix::default_instance_ + 16);
    }
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Position::ByteSize(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *((_DWORD *)this + 12);
  }
LABEL_18:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_20;
    }
LABEL_25:
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 4), a2)+ 1;
    if ((*((_DWORD *)this + 12) & 0x10) == 0) {
      goto LABEL_32;
    }
    goto LABEL_26;
  }
  uint64_t v13 = *((void *)this + 3);
  if (!v13) {
    uint64_t v13 = *(void *)(proto::gnss::Fix::default_instance_ + 24);
  }
  uint64_t v4 = v4 + sub_1000AFB38(v13) + 2;
  int v3 = *((_DWORD *)this + 12);
  if ((v3 & 8) != 0) {
    goto LABEL_25;
  }
LABEL_20:
  if ((v3 & 0x10) == 0) {
    goto LABEL_32;
  }
LABEL_26:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if ((v14 & 0x80000000) != 0)
  {
    int v15 = 11;
  }
  else if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2) + 1;
  }
  else
  {
    int v15 = 2;
  }
  uint64_t v4 = (v15 + v4);
LABEL_32:
  *((_DWORD *)this + 11) = v4;
  return v4;
}

void sub_1000B13D8(proto::gnss::Fix *a1, void *lpsrc)
{
  proto::gnss::Fix::MergeFrom(a1, (const proto::gnss::Fix *)lpsrc);
}

uint64_t sub_1000B147C()
{
  return 1;
}

void *sub_1000B1484@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Fix");
}

void sub_1000B1494(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 48);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 48))
  {
    char v6 = *(unsigned char *)(a2 + 16);
    *(_DWORD *)(a1 + 48) |= 1u;
    *(unsigned char *)(a1 + 16) = v6;
    int v4 = *(_DWORD *)(a2 + 48);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  else if ((*(unsigned char *)(a2 + 48) & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 48) |= 2u;
  uint64_t v7 = *(void *)(a1 + 8);
  if (!v7) {
    operator new();
  }
  uint64_t v8 = *(void *)(a2 + 8);
  if (!v8) {
    uint64_t v8 = *(void *)(proto::gnss::TimeTransferData::default_instance_ + 8);
  }
  sub_1000AFC50(v7, v8);
  int v4 = *(_DWORD *)(a2 + 48);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_20:
    int v10 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 48) |= 8u;
    *(_DWORD *)(a1 + 40) = v10;
    int v4 = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        return;
      }
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_18:
  unsigned int v9 = *(_DWORD *)(a2 + 20);
  if (v9 >= 7) {
    __assert_rtn("set_quality", "GnssTypes.pb.h", 2624, "::proto::gnss::TimeQuality_IsValid(value)");
  }
  *(_DWORD *)(a1 + 48) |= 4u;
  *(_DWORD *)(a1 + 20) = v9;
  int v4 = *(_DWORD *)(a2 + 48);
  if ((v4 & 8) != 0) {
    goto LABEL_20;
  }
LABEL_8:
  if ((v4 & 0x10) == 0) {
    goto LABEL_9;
  }
LABEL_21:
  uint64_t v11 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 48) |= 0x10u;
  *(void *)(a1 + 24) = v11;
  if ((*(_DWORD *)(a2 + 48) & 0x20) != 0)
  {
LABEL_10:
    uint64_t v5 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 48) |= 0x20u;
    *(void *)(a1 + 32) = v5;
  }
}

void sub_1000B165C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000B1674(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010D5B8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::TimeTransferData::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000B1704(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000B1674(a1);

  operator delete();
}

void sub_1000B173C()
{
}

uint64_t proto::gnss::TimeTransferData::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 48);
  if (v1)
  {
    *(unsigned char *)(this + 16) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        int v3 = *(_DWORD *)(v2 + 72);
        if ((_BYTE)v3)
        {
          *(void *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
          *(unsigned char *)(v2 + 20) = 0;
          *(_DWORD *)(v2 + 64) = 0;
          *(_OWORD *)(v2 + 24) = 0u;
          *(_OWORD *)(v2 + 40) = 0u;
        }
        if ((v3 & 0xFF00) != 0) {
          *(void *)(v2 + 56) = 0;
        }
        *(_DWORD *)(v2 + 72) = 0;
      }
    }
    *(void *)(this + 28) = 0;
    *(void *)(this + 20) = 0;
    *(void *)(this + 36) = 0;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t sub_1000B17F8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 40);
  char v6 = (unint64_t *)(a1 + 24);
  uint64_t v7 = (unint64_t *)(a1 + 32);
  while (2)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v39 = 0;
        int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39);
          if (!result) {
            return result;
          }
          unsigned int v13 = v39;
          int v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v12;
          int v14 = v12 + 1;
          *((void *)this + 1) = v14;
        }
        *(unsigned char *)(a1 + 16) = v13 != 0;
        int v15 = *(_DWORD *)(a1 + 48) | 1;
        *(_DWORD *)(a1 + 48) = v15;
        if ((unint64_t)v14 < v11 && *v14 == 18)
        {
          *((void *)this + 1) = v14 + 1;
          goto LABEL_31;
        }
        continue;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_22;
        }
        int v15 = *(_DWORD *)(a1 + 48);
LABEL_31:
        *(_DWORD *)(a1 + 48) = v15 | 2;
        uint64_t v23 = *(void *)(a1 + 8);
        if (!v23) {
          operator new();
        }
        unsigned int v40 = 0;
        int v24 = (char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40))return 0; {
        }
          }
        else
        {
          unsigned int v40 = *v24;
          *((void *)this + 1) = v24 + 1;
        }
        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 < v26)
        {
          int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v40);
          if (sub_1000AFF10(v23, this, v28))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
              int v29 = *((_DWORD *)this + 14);
              BOOL v30 = __OFSUB__(v29, 1);
              int v31 = v29 - 1;
              if (v31 < 0 == v30) {
                *((_DWORD *)this + 14) = v31;
              }
              int v32 = (unsigned char *)*((void *)this + 1);
              unint64_t v16 = *((void *)this + 2);
              if ((unint64_t)v32 < v16 && *v32 == 24)
              {
                unsigned int v17 = v32 + 1;
                *((void *)this + 1) = v17;
LABEL_45:
                unsigned int v38 = 0;
                if ((unint64_t)v17 >= v16 || *v17 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38);
                  if (!result) {
                    return result;
                  }
                  unsigned int v33 = v38;
                }
                else
                {
                  unsigned int v33 = *v17;
                  *((void *)this + 1) = v17 + 1;
                }
                if (v33 <= 6)
                {
                  *(_DWORD *)(a1 + 48) |= 4u;
                  *(_DWORD *)(a1 + 20) = v33;
                }
                int v34 = (unsigned char *)*((void *)this + 1);
                unint64_t v18 = *((void *)this + 2);
                if ((unint64_t)v34 < v18 && *v34 == 32)
                {
                  BOOL v19 = v34 + 1;
                  *((void *)this + 1) = v19;
LABEL_55:
                  if ((unint64_t)v19 >= v18 || *v19 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
                    if (!result) {
                      return result;
                    }
                    int v35 = (unsigned char *)*((void *)this + 1);
                    unint64_t v18 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int *v5 = *v19;
                    int v35 = v19 + 1;
                    *((void *)this + 1) = v35;
                  }
                  *(_DWORD *)(a1 + 48) |= 8u;
                  if ((unint64_t)v35 < v18 && *v35 == 40)
                  {
                    int v20 = v35 + 1;
                    *((void *)this + 1) = v20;
LABEL_63:
                    if ((unint64_t)v20 >= v18 || *v20 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
                      if (!result) {
                        return result;
                      }
                      unsigned int v36 = (unsigned char *)*((void *)this + 1);
                      unint64_t v18 = *((void *)this + 2);
                    }
                    else
                    {
                      *char v6 = *v20;
                      unsigned int v36 = v20 + 1;
                      *((void *)this + 1) = v36;
                    }
                    *(_DWORD *)(a1 + 48) |= 0x10u;
                    if ((unint64_t)v36 < v18 && *v36 == 48)
                    {
                      __int16 v21 = v36 + 1;
                      *((void *)this + 1) = v21;
LABEL_71:
                      if ((unint64_t)v21 >= v18 || *v21 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
                        if (!result) {
                          return result;
                        }
                        int v37 = (unsigned __int8 *)*((void *)this + 1);
                        unint64_t v18 = *((void *)this + 2);
                      }
                      else
                      {
                        unint64_t *v7 = *v21;
                        int v37 = (unsigned __int8 *)(v21 + 1);
                        *((void *)this + 1) = v37;
                      }
                      *(_DWORD *)(a1 + 48) |= 0x20u;
                      if (v37 == (unsigned __int8 *)v18
                        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                      {
                        *((_DWORD *)this + 8) = 0;
                        uint64_t result = 1;
                        *((unsigned char *)this + 36) = 1;
                        return result;
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_45;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        BOOL v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_55;
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_63;
      case 6u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        __int16 v21 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_71;
      default:
        int v10 = TagFallback & 7;
LABEL_22:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000B1C8C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 16), (BOOL)a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::TimeTransferData::default_instance_ + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 20), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(v5 + 24), (unint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 48) & 0x20) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 40), a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x10) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return result;
  }
LABEL_15:
  uint64_t v8 = *(void *)(v5 + 32);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v8, (unint64_t)a2, a4);
}

uint64_t proto::gnss::TimeTransferData::ByteSize(proto::gnss::TimeTransferData *this, unint64_t a2)
{
  int v3 = *((_DWORD *)this + 12);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_27;
  }
  uint64_t v4 = 2 * (v3 & 1u);
  if ((v3 & 2) != 0)
  {
    uint64_t v5 = *((void *)this + 1);
    if (!v5) {
      uint64_t v5 = *(void *)(proto::gnss::TimeTransferData::default_instance_ + 8);
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B0520(v5, a2);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    }
    else {
      int v8 = 1;
    }
    uint64_t v4 = (v4 | 1) + v7 + v8;
    int v3 = *((_DWORD *)this + 12);
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0) {
        goto LABEL_5;
      }
LABEL_21:
      unint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
      if (v11 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
        int v3 = *((_DWORD *)this + 12);
      }
      else
      {
        int v12 = 2;
      }
      uint64_t v4 = (v12 + v4);
      if ((v3 & 0x10) == 0)
      {
LABEL_6:
        if ((v3 & 0x20) == 0) {
          goto LABEL_27;
        }
        goto LABEL_26;
      }
      goto LABEL_25;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if ((v9 & 0x80000000) != 0)
  {
    int v10 = 11;
  }
  else if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    int v3 = *((_DWORD *)this + 12);
  }
  else
  {
    int v10 = 2;
  }
  uint64_t v4 = (v10 + v4);
  if ((v3 & 8) != 0) {
    goto LABEL_21;
  }
LABEL_5:
  if ((v3 & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_25:
  uint64_t v4 = v4
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 3), a2)+ 1;
  if ((*((_DWORD *)this + 12) & 0x20) != 0) {
LABEL_26:
  }
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 4), a2)+ 1;
LABEL_27:
  *((_DWORD *)this + 11) = v4;
  return v4;
}

void sub_1000B1EA8(uint64_t a1, void *lpsrc)
{
  sub_1000B1494(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000B1F4C()
{
  return 1;
}

void *sub_1000B1F54@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.TimeTransferData");
}

void proto::gnss::TimeTransferDataExtend::MergeFrom(proto::gnss::TimeTransferDataExtend *this, const proto::gnss::TimeTransferDataExtend *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 52);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 52))
    {
      *((_DWORD *)this + 13) |= 1u;
      uint64_t v6 = *((void *)this + 1);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *((void *)a2 + 1);
      if (!v7) {
        uint64_t v7 = *(void *)(proto::gnss::TimeTransferDataExtend::default_instance_ + 8);
      }
      sub_1000B1494(v6, v7);
      int v4 = *((_DWORD *)a2 + 13);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_17;
      }
    }
    else if ((*((unsigned char *)a2 + 52) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v8 = *((void *)a2 + 2);
    *((_DWORD *)this + 13) |= 2u;
    *((void *)this + 2) = v8;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_18;
    }
LABEL_17:
    uint64_t v9 = *((void *)a2 + 3);
    *((_DWORD *)this + 13) |= 4u;
    *((void *)this + 3) = v9;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_18:
    uint64_t v10 = *((void *)a2 + 4);
    *((_DWORD *)this + 13) |= 8u;
    *((void *)this + 4) = v10;
    if ((*((_DWORD *)a2 + 13) & 0x10) == 0) {
      return;
    }
LABEL_9:
    uint64_t v5 = *((void *)a2 + 5);
    *((_DWORD *)this + 13) |= 0x10u;
    *((void *)this + 5) = v5;
  }
}

void sub_1000B20D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000B20F0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010D630;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::TimeTransferDataExtend::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000B2180(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000B20F0(a1);

  operator delete();
}

void sub_1000B21B8()
{
}

uint64_t proto::gnss::TimeTransferDataExtend::Clear(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 52))
  {
    if (*(unsigned char *)(this + 52))
    {
      this = *(void *)(this + 8);
      if (this) {
        this = proto::gnss::TimeTransferData::Clear(this);
      }
    }
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
  }
  *(_DWORD *)(v1 + 52) = 0;
  return this;
}

uint64_t proto::gnss::TimeTransferDataExtend::MergePartialFromCodedStream(proto::gnss::TimeTransferDataExtend *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)((char *)this + 16);
  uint64_t v6 = (unint64_t *)((char *)this + 24);
  uint64_t v7 = (unint64_t *)((char *)this + 32);
  uint64_t v8 = (unint64_t *)((char *)this + 40);
  while (2)
  {
    uint64_t v9 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_22;
        }
        *((_DWORD *)this + 13) |= 1u;
        uint64_t v12 = *((void *)this + 1);
        if (!v12) {
          operator new();
        }
        unsigned int v32 = 0;
        unsigned int v13 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        int v19 = *((_DWORD *)a2 + 14);
        int v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v32);
        if (!sub_1000B17F8(v12, a2, v22) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v21);
        int v23 = *((_DWORD *)a2 + 14);
        BOOL v24 = __OFSUB__(v23, 1);
        int v25 = v23 - 1;
        if (v25 < 0 == v24) {
          *((_DWORD *)a2 + 14) = v25;
        }
        int v26 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v26 >= v14 || *v26 != 16) {
          continue;
        }
        int v15 = v26 + 1;
        *((void *)a2 + 1) = v15;
        goto LABEL_35;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
LABEL_35:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v27 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v5 = *v15;
          int v27 = v15 + 1;
          *((void *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 13) |= 2u;
        if ((unint64_t)v27 >= v14 || *v27 != 24) {
          continue;
        }
        unint64_t v16 = v27 + 1;
        *((void *)a2 + 1) = v16;
LABEL_43:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v6 = *v16;
          int v29 = v16 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 13) |= 4u;
        if ((unint64_t)v29 >= v14 || *v29 != 32) {
          continue;
        }
        unsigned int v17 = v29 + 1;
        *((void *)a2 + 1) = v17;
LABEL_51:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v7);
          if (!result) {
            return result;
          }
          BOOL v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v7 = *v17;
          BOOL v30 = v17 + 1;
          *((void *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 13) |= 8u;
        if ((unint64_t)v30 >= v14 || *v30 != 40) {
          continue;
        }
        unint64_t v18 = v30 + 1;
        *((void *)a2 + 1) = v18;
LABEL_59:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v8);
          if (!result) {
            return result;
          }
          int v31 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v8 = *v18;
          int v31 = (unsigned __int8 *)(v18 + 1);
          *((void *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 13) |= 0x10u;
        if (v31 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unint64_t v16 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_43;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v17 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_51;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unint64_t v18 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_59;
      default:
        int v11 = TagFallback & 7;
LABEL_22:
        if (v11 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1000B264C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(proto::gnss::TimeTransferDataExtend::default_instance_ + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_12:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 32), (unint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 52) & 0x10) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 24), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_13:
  uint64_t v8 = *(void *)(v5 + 40);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, (unint64_t)a2, a4);
}

uint64_t proto::gnss::TimeTransferDataExtend::ByteSize(proto::gnss::TimeTransferDataExtend *this, unint64_t a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 52);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_17;
  }
  if ((*((unsigned char *)this + 52) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*((unsigned char *)this + 52) & 2) == 0) {
      goto LABEL_13;
    }
LABEL_12:
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2), a2)+ 1;
    int v3 = *((_DWORD *)this + 13);
    goto LABEL_13;
  }
  uint64_t v5 = (proto::gnss::TimeTransferData *)*((void *)this + 1);
  if (!v5) {
    uint64_t v5 = *(proto::gnss::TimeTransferData **)(proto::gnss::TimeTransferDataExtend::default_instance_ + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::TimeTransferData::ByteSize(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *((_DWORD *)this + 13);
  if ((v3 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_13:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_15;
    }
LABEL_19:
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 4), a2)+ 1;
    if ((*((_DWORD *)this + 13) & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  uint64_t v4 = v4
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 3), a2)+ 1;
  int v3 = *((_DWORD *)this + 13);
  if ((v3 & 8) != 0) {
    goto LABEL_19;
  }
LABEL_15:
  if ((v3 & 0x10) != 0) {
LABEL_16:
  }
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 5), a2)+ 1;
LABEL_17:
  *((_DWORD *)this + 12) = v4;
  return v4;
}

void sub_1000B2810(proto::gnss::TimeTransferDataExtend *a1, void *lpsrc)
{
  proto::gnss::TimeTransferDataExtend::MergeFrom(a1, (const proto::gnss::TimeTransferDataExtend *)lpsrc);
}

uint64_t sub_1000B28B4()
{
  return 1;
}

void *sub_1000B28BC@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.TimeTransferDataExtend");
}

float proto::gnss::RawPressureSample::MergeFrom(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 24);
    }
    if ((v5 & 2) != 0)
    {
      float result = *(float *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 2u;
      *(float *)(a1 + 16) = result;
    }
  }
  return result;
}

void sub_1000B2978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000B2990(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D6A8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000B29B0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D6A8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000B2A04()
{
}

uint64_t sub_1000B2A54(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t proto::gnss::RawPressureSample::MergePartialFromCodedStream(proto::gnss::RawPressureSample *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  int v5 = (unint64_t *)((char *)this + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_16;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v5 = *v10;
          int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 6) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 21)
        {
          *((void *)a2 + 1) = v11 + 1;
          goto LABEL_24;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 5) {
        goto LABEL_16;
      }
LABEL_24:
      unsigned int v13 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v13) & 1) == 0) {
        return 0;
      }
      *((_DWORD *)this + 4) = v13;
      *((_DWORD *)this + 6) |= 2u;
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_1000B2BF8(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    float v7 = *(float *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v4, v7, a3);
  }
  return result;
}

uint64_t proto::gnss::RawPressureSample::ByteSize(proto::gnss::RawPressureSample *this, unint64_t a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 24);
  if ((_BYTE)v3)
  {
    if (*((unsigned char *)this + 24))
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1), a2)+ 1;
      int v3 = *((_DWORD *)this + 6);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      uint64_t result = v4 + 5;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 5) = result;
  return result;
}

float sub_1000B2CC0(uint64_t a1, void *lpsrc)
{
  return proto::gnss::RawPressureSample::MergeFrom(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000B2D64()
{
  return 1;
}

void *sub_1000B2D6C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.RawPressureSample");
}

float proto::gnss::SensorSample3Axis::MergeFrom(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    float result = *(float *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(float *)(a1 + 16) = result;
    int v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return result;
      }
      goto LABEL_8;
    }
LABEL_12:
    float result = *(float *)(a2 + 20);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(float *)(a1 + 20) = result;
    if ((*(_DWORD *)(a2 + 32) & 8) == 0) {
      return result;
    }
LABEL_8:
    float result = *(float *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(float *)(a1 + 24) = result;
  }
  return result;
}

void sub_1000B2E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000B2E88(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D720;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000B2EA8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D720;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000B2EFC()
{
}

uint64_t sub_1000B2F4C(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t proto::gnss::SensorSample3Axis::MergePartialFromCodedStream(proto::gnss::SensorSample3Axis *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  int v5 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    uint64_t v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v5 = *v10;
          int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 21)
        {
          *((void *)a2 + 1) = v11 + 1;
          goto LABEL_26;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_18;
        }
LABEL_26:
        unsigned int v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 4) = v17;
        *((_DWORD *)this + 8) |= 2u;
        unsigned int v13 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 != 29) {
          continue;
        }
        *((void *)a2 + 1) = v13 + 1;
LABEL_30:
        unsigned int v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v16) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 5) = v16;
        *((_DWORD *)this + 8) |= 4u;
        unint64_t v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_34:
        unsigned int v15 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v15))
        {
          *((_DWORD *)this + 6) = v15;
          *((_DWORD *)this + 8) |= 8u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_30;
        }
        goto LABEL_18;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_18;
        }
        goto LABEL_34;
      default:
        int v8 = TagFallback & 7;
LABEL_18:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000B31CC(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v4, *(float *)(v5 + 20), a3);
      if ((*(_DWORD *)(v5 + 32) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v4, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  float v7 = *(float *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v4, v7, a3);
}

uint64_t proto::gnss::SensorSample3Axis::ByteSize(proto::gnss::SensorSample3Axis *this, unint64_t a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 32);
  if ((_BYTE)v3)
  {
    if (*((unsigned char *)this + 32))
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1), a2)+ 1;
      int v3 = *((_DWORD *)this + 8);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 5;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      uint64_t result = v4 + 5;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 7) = result;
  return result;
}

float sub_1000B32E8(uint64_t a1, void *lpsrc)
{
  return proto::gnss::SensorSample3Axis::MergeFrom(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000B338C()
{
  return 1;
}

void *sub_1000B3394@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.SensorSample3Axis");
}

void proto::gnss::SvId::MergeFrom(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[8] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[8] |= 2u;
    a1[3] = v7;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    int v8 = *(_DWORD *)(a2 + 16);
    a1[8] |= 4u;
    a1[4] = v8;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_14:
    int v9 = *(_DWORD *)(a2 + 20);
    a1[8] |= 8u;
    a1[5] = v9;
    if ((*(_DWORD *)(a2 + 32) & 0x10) == 0) {
      return;
    }
LABEL_9:
    int v5 = *(_DWORD *)(a2 + 24);
    a1[8] |= 0x10u;
    a1[6] = v5;
  }
}

void sub_1000B34B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000B34D0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D798;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000B34F0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D798;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000B3544()
{
}

uint64_t sub_1000B3594(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t proto::gnss::SvId::MergePartialFromCodedStream(proto::gnss::SvId *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  int v5 = (unsigned int *)((char *)this + 8);
  int v6 = (unsigned int *)((char *)this + 16);
  int v7 = (unsigned int *)((char *)this + 20);
  while (2)
  {
    int v8 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v12 < v11 && (*v12 & 0x80000000) == 0)
        {
          unsigned int *v5 = *v12;
          unsigned int v13 = v12 + 1;
          *((void *)a2 + 1) = v13;
LABEL_26:
          *((_DWORD *)this + 8) |= 1u;
          if ((unint64_t)v13 < v11 && *v13 == 16)
          {
            unint64_t v14 = v13 + 1;
            *((void *)a2 + 1) = v14;
            goto LABEL_29;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
        if (result)
        {
          unsigned int v13 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unint64_t v14 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
LABEL_29:
        unsigned int v25 = 0;
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25);
          if (!result) {
            return result;
          }
          unsigned int v18 = v25;
          int v19 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v18 = *v14;
          int v19 = v14 + 1;
          *((void *)a2 + 1) = v19;
        }
        *((_DWORD *)this + 3) = v18;
        *((_DWORD *)this + 8) |= 2u;
        if ((unint64_t)v19 >= v11 || *v19 != 24) {
          continue;
        }
        unsigned int v15 = v19 + 1;
        *((void *)a2 + 1) = v15;
LABEL_37:
        if ((unint64_t)v15 >= v11 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v20 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v15;
          int v20 = v15 + 1;
          *((void *)a2 + 1) = v20;
        }
        *((_DWORD *)this + 8) |= 4u;
        if ((unint64_t)v20 >= v11 || *v20 != 32) {
          continue;
        }
        unsigned int v16 = v20 + 1;
        *((void *)a2 + 1) = v16;
LABEL_45:
        if ((unint64_t)v16 >= v11 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          int v21 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v7 = *v16;
          int v21 = v16 + 1;
          *((void *)a2 + 1) = v21;
        }
        *((_DWORD *)this + 8) |= 8u;
        if ((unint64_t)v21 >= v11 || *v21 != 40) {
          continue;
        }
        unsigned int v17 = v21 + 1;
        *((void *)a2 + 1) = v17;
LABEL_53:
        unsigned int v26 = 0;
        if ((unint64_t)v17 >= v11 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
          if (!result) {
            return result;
          }
          unsigned int v22 = v26;
          int v23 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v22 = *v17;
          int v23 = (unsigned __int8 *)(v17 + 1);
          *((void *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 6) = -(v22 & 1) ^ (v22 >> 1);
        *((_DWORD *)this + 8) |= 0x10u;
        if (v23 != (unsigned __int8 *)v11 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v15 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_37;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v16 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_45;
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v17 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_53;
      default:
        int v10 = TagFallback & 7;
LABEL_20:
        if (v10 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_1000B3900(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[8];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[8];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
    if ((v5[8] & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[8];
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = v5[6];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t proto::gnss::SvId::ByteSize(proto::gnss::SvId *this, unsigned int a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_32;
  }
  if (*((unsigned char *)this + 32))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *((_DWORD *)this + 8);
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_16;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *((_DWORD *)this + 8);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_16:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *((_DWORD *)this + 8);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_32;
      }
      goto LABEL_28;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *((_DWORD *)this + 8);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v4 = (v11 + v4);
  if ((v3 & 0x10) != 0)
  {
LABEL_28:
    uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *((_DWORD *)this + 6)) ^ (*((int *)this + 6) >> 31));
    if (v12 >= 0x80) {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    }
    else {
      int v13 = 2;
    }
    uint64_t v4 = (v13 + v4);
  }
LABEL_32:
  *((_DWORD *)this + 7) = v4;
  return v4;
}

void sub_1000B3AEC(_DWORD *a1, void *lpsrc)
{
  proto::gnss::SvId::MergeFrom(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000B3B90()
{
  return 1;
}

void *sub_1000B3B98@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.SvId");
}

void proto::gnss::PwrMeasurement::MergeFrom(proto::gnss::PwrMeasurement *this, const proto::gnss::PwrMeasurement *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 48);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 48))
    {
      uint64_t v5 = *((void *)a2 + 1);
      *((_DWORD *)this + 12) |= 1u;
      *((void *)this + 1) = v5;
      int v4 = *((_DWORD *)a2 + 12);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*((unsigned char *)a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v6 = *((void *)a2 + 2);
    *((_DWORD *)this + 12) |= 2u;
    *((void *)this + 2) = v6;
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_12:
    uint64_t v7 = *((void *)a2 + 3);
    *((_DWORD *)this + 12) |= 4u;
    *((void *)this + 3) = v7;
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
LABEL_14:
      unsigned int v9 = *((_DWORD *)a2 + 10);
      if (v9 >= 2) {
        __assert_rtn("set_status", "GnssTypes.pb.h", 3193, "::proto::gnss::PwrMeasurement_PowerLoggingStatus_IsValid(value)");
      }
      *((_DWORD *)this + 12) |= 0x10u;
      *((_DWORD *)this + 10) = v9;
      return;
    }
LABEL_13:
    uint64_t v8 = *((void *)a2 + 4);
    *((_DWORD *)this + 12) |= 8u;
    *((void *)this + 4) = v8;
    if ((*((_DWORD *)a2 + 12) & 0x10) == 0) {
      return;
    }
    goto LABEL_14;
  }
}

void sub_1000B3CE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000B3CFC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D810;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000B3D1C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D810;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000B3D70()
{
}

uint64_t proto::gnss::PwrMeasurement::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 48))
  {
    *(_DWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t proto::gnss::PwrMeasurement::MergePartialFromCodedStream(proto::gnss::PwrMeasurement *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_29;
        }
        *(void *)unsigned int v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v16) & 1) == 0)return 0; {
        *((void *)this + 1) = *(void *)v16;
        }
        *((_DWORD *)this + 12) |= 1u;
        uint64_t v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_29;
        }
LABEL_14:
        *(void *)unsigned int v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v16) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v16;
        }
        *((_DWORD *)this + 12) |= 2u;
        unsigned int v9 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v9 + 1;
LABEL_19:
        *(void *)unsigned int v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v16) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v16;
        }
        *((_DWORD *)this + 12) |= 4u;
        int v10 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v10 + 1;
LABEL_24:
        *(void *)unsigned int v16 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v16))
        {
          *((void *)this + 4) = *(void *)v16;
          *((_DWORD *)this + 12) |= 8u;
          uint64_t v12 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          if ((unint64_t)v12 < v11 && *v12 == 40)
          {
            int v13 = v12 + 1;
            *((void *)a2 + 1) = v13;
LABEL_33:
            v16[0] = 0;
            if ((unint64_t)v13 >= v11 || *v13 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v16);
              if (!result) {
                return result;
              }
              unsigned int v14 = v16[0];
            }
            else
            {
              unsigned int v14 = *v13;
              *((void *)a2 + 1) = v13 + 1;
            }
            if (v14 <= 1)
            {
              *((_DWORD *)this + 12) |= 0x10u;
              *((_DWORD *)this + 10) = v14;
            }
            if (*((void *)a2 + 1) == *((void *)a2 + 2)
              && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_19;
        }
        goto LABEL_29;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_24;
        }
        goto LABEL_29;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_33;
      default:
        int v7 = TagFallback & 7;
LABEL_29:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000B40B4(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(v5 + 32), a3);
    if ((*(_DWORD *)(v5 + 48) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = *(_DWORD *)(v5 + 40);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t proto::gnss::PwrMeasurement::ByteSize(proto::gnss::PwrMeasurement *this, unsigned int a2)
{
  int v3 = *((unsigned __int8 *)this + 48);
  if (*((unsigned char *)this + 48))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 0x10) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
      if ((v6 & 0x80000000) != 0)
      {
        int v7 = 11;
      }
      else if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      }
      else
      {
        int v7 = 2;
      }
      uint64_t v5 = (v7 + v5);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  *((_DWORD *)this + 11) = v5;
  return v5;
}

void sub_1000B4210(proto::gnss::PwrMeasurement *a1, void *lpsrc)
{
  proto::gnss::PwrMeasurement::MergeFrom(a1, (const proto::gnss::PwrMeasurement *)lpsrc);
}

uint64_t sub_1000B42B4()
{
  return 1;
}

void *sub_1000B42BC@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.PwrMeasurement");
}

void proto::gnss::DecodedRti::MergeFrom(proto::gnss::DecodedRti *this, const proto::gnss::DecodedRti *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      uint64_t v5 = *((void *)a2 + 1);
      *((_DWORD *)this + 6) |= 1u;
      *((void *)this + 1) = v5;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      char v6 = *((unsigned char *)a2 + 16);
      *((_DWORD *)this + 6) |= 2u;
      *((unsigned char *)this + 16) = v6;
    }
  }
}

void sub_1000B4378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000B4390(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D888;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000B43B0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D888;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000B4404()
{
}

uint64_t proto::gnss::DecodedRti::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(void *)(this + 8) = 0;
    *(unsigned char *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t proto::gnss::DecodedRti::MergePartialFromCodedStream(proto::gnss::DecodedRti *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      char v6 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unint64_t v11 = (char *)*((void *)a2 + 1);
      unint64_t v9 = *((void *)a2 + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
        if (!result) {
          return result;
        }
        uint64_t v12 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
      }
      else
      {
        unint64_t *v5 = *v11;
        uint64_t v12 = v11 + 1;
        *((void *)a2 + 1) = v12;
      }
      *((_DWORD *)this + 6) |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        int v10 = v12 + 1;
        *((void *)a2 + 1) = v10;
LABEL_24:
        unsigned int v16 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
          unsigned int v14 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v13 = *v10;
          unsigned int v14 = (unsigned __int8 *)(v10 + 1);
          *((void *)a2 + 1) = v14;
        }
        *((unsigned char *)this + 16) = v13 != 0;
        *((_DWORD *)this + 6) |= 2u;
        if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000B4620(uint64_t result, unint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  BOOL v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(unsigned __int8 *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, v4, a4);
  }
  return result;
}

uint64_t proto::gnss::DecodedRti::ByteSize(proto::gnss::DecodedRti *this, unint64_t a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 24);
  if ((_BYTE)v3)
  {
    if (*((unsigned char *)this + 24))
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1), a2)+ 1;
      int v3 = *((_DWORD *)this + 6);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      uint64_t result = v4 + 2;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 5) = result;
  return result;
}

void sub_1000B46E8(proto::gnss::DecodedRti *a1, void *lpsrc)
{
  proto::gnss::DecodedRti::MergeFrom(a1, (const proto::gnss::DecodedRti *)lpsrc);
}

uint64_t sub_1000B478C()
{
  return 1;
}

void *sub_1000B4794@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.DecodedRti");
}

void proto::gnss::DecodedExtendedEphemeris::MergeFrom(proto::gnss::DecodedExtendedEphemeris *this, const proto::gnss::DecodedExtendedEphemeris *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 36))
    {
      uint64_t v5 = *((void *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((void *)this + 1) = v5;
      int v4 = *((_DWORD *)a2 + 9);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_11;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    char v6 = *((unsigned char *)a2 + 24);
    *((_DWORD *)this + 9) |= 2u;
    *((unsigned char *)this + 24) = v6;
    int v4 = *((_DWORD *)a2 + 9);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
LABEL_12:
      unsigned int v8 = *((_DWORD *)a2 + 7);
      if (v8 >= 7) {
        __assert_rtn("set_assistance_file_type", "GnssTypes.pb.h", 3334, "::CLP::LogEntry::PrivateData::SvPositionSource_IsValid(value)");
      }
      *((_DWORD *)this + 9) |= 8u;
      *((_DWORD *)this + 7) = v8;
      return;
    }
LABEL_11:
    uint64_t v7 = *((void *)a2 + 2);
    *((_DWORD *)this + 9) |= 4u;
    *((void *)this + 2) = v7;
    if ((*((_DWORD *)a2 + 9) & 8) == 0) {
      return;
    }
    goto LABEL_12;
  }
}

void sub_1000B48C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000B48D8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D900;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000B48F8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010D900;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000B494C()
{
}

uint64_t proto::gnss::DecodedExtendedEphemeris::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 36))
  {
    *(_DWORD *)(this + 28) = 0;
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(unsigned char *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t proto::gnss::DecodedExtendedEphemeris::MergePartialFromCodedStream(proto::gnss::DecodedExtendedEphemeris *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  char v6 = (unint64_t *)((char *)this + 16);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          unint64_t *v5 = *v11;
          uint64_t v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
LABEL_24:
          *((_DWORD *)this + 9) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            unsigned int v13 = v12 + 1;
            *((void *)a2 + 1) = v13;
            goto LABEL_27;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
        if (result)
        {
          uint64_t v12 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v13 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
LABEL_27:
        unsigned int v22 = 0;
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!result) {
            return result;
          }
          unsigned int v16 = v22;
          unsigned int v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v16 = *v13;
          unsigned int v17 = v13 + 1;
          *((void *)a2 + 1) = v17;
        }
        *((unsigned char *)this + 24) = v16 != 0;
        *((_DWORD *)this + 9) |= 2u;
        if ((unint64_t)v17 >= v10 || *v17 != 24) {
          continue;
        }
        unsigned int v14 = v17 + 1;
        *((void *)a2 + 1) = v14;
LABEL_35:
        if ((unint64_t)v14 >= v10 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!result) {
            return result;
          }
          unsigned int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *char v6 = *v14;
          unsigned int v18 = v14 + 1;
          *((void *)a2 + 1) = v18;
        }
        *((_DWORD *)this + 9) |= 4u;
        if ((unint64_t)v18 >= v10 || *v18 != 32) {
          continue;
        }
        unsigned int v15 = v18 + 1;
        *((void *)a2 + 1) = v15;
LABEL_43:
        unsigned int v21 = 0;
        if ((unint64_t)v15 >= v10 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!result) {
            return result;
          }
          unsigned int v19 = v21;
        }
        else
        {
          unsigned int v19 = *v15;
          *((void *)a2 + 1) = v15 + 1;
        }
        if (v19 <= 6)
        {
          *((_DWORD *)this + 9) |= 8u;
          *((_DWORD *)this + 7) = v19;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v14 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_35;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v15 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_43;
      default:
        int v9 = TagFallback & 7;
LABEL_18:
        if (v9 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1000B4C98(uint64_t result, unint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 16), a2, a4);
      if ((*(_DWORD *)(v5 + 36) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = *(_DWORD *)(v5 + 28);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t proto::gnss::DecodedExtendedEphemeris::ByteSize(proto::gnss::DecodedExtendedEphemeris *this, unint64_t a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 36);
  if ((_BYTE)v3)
  {
    if (*((unsigned char *)this + 36))
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1), a2)+ 1;
      int v3 = *((_DWORD *)this + 9);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      uint64_t v5 = v4 + 2;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 4) != 0)
    {
      uint64_t v5 = v5
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2), a2)+ 1;
      int v3 = *((_DWORD *)this + 9);
    }
    if ((v3 & 8) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
      if ((v6 & 0x80000000) != 0)
      {
        int v7 = 11;
      }
      else if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      }
      else
      {
        int v7 = 2;
      }
      uint64_t v5 = (v7 + v5);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  *((_DWORD *)this + 8) = v5;
  return v5;
}

void sub_1000B4DE8(proto::gnss::DecodedExtendedEphemeris *a1, void *lpsrc)
{
  proto::gnss::DecodedExtendedEphemeris::MergeFrom(a1, (const proto::gnss::DecodedExtendedEphemeris *)lpsrc);
}

uint64_t sub_1000B4E8C()
{
  return 1;
}

void *sub_1000B4E94@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.DecodedExtendedEphemeris");
}

uint64_t sub_1000B4EA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 92);
}

uint64_t sub_1000B4EAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_1000B4EB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_1000B4EBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_1000B4EC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_1000B4ECC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1000B4ED4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_1000B4EDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1000B4EE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1000B4EEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_1000B4EF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_1000B4EFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000B4F08()
{
  if (proto::gpsd::Request::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gpsd::Request::default_instance_ + 8))(proto::gpsd::Request::default_instance_);
  }
  if (qword_1001146B8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001146B8 + 8))(qword_1001146B8);
  }
  if (proto::gpsd::Indication::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gpsd::Indication::default_instance_ + 8))(proto::gpsd::Indication::default_instance_);
  }
  if (qword_1001146C0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001146C0 + 8))(qword_1001146C0);
  }
  if (qword_1001146C8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001146C8 + 8))(qword_1001146C8);
  }
  if (qword_1001146D0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001146D0 + 8))(qword_1001146D0);
  }
  if (qword_1001146D8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001146D8 + 8))(qword_1001146D8);
  }
  if (qword_1001146E0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001146E0 + 8))(qword_1001146E0);
  }
  if (proto::gpsd::InjectAssistancePosition::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gpsd::InjectAssistancePosition::default_instance_ + 8))(proto::gpsd::InjectAssistancePosition::default_instance_);
  }
  if (qword_1001146E8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001146E8 + 8))(qword_1001146E8);
  }
  if (qword_1001146F0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001146F0 + 8))(qword_1001146F0);
  }
  if (qword_1001146F8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001146F8 + 8))(qword_1001146F8);
  }
  if (qword_100114700) {
    (*(void (**)(uint64_t))(*(void *)qword_100114700 + 8))(qword_100114700);
  }
  if (qword_100114708) {
    (*(void (**)(uint64_t))(*(void *)qword_100114708 + 8))(qword_100114708);
  }
  if (qword_100114710) {
    (*(void (**)(uint64_t))(*(void *)qword_100114710 + 8))(qword_100114710);
  }
  if (qword_100114718) {
    (*(void (**)(uint64_t))(*(void *)qword_100114718 + 8))(qword_100114718);
  }
  if (qword_100114720) {
    (*(void (**)(uint64_t))(*(void *)qword_100114720 + 8))(qword_100114720);
  }
  if (qword_100114728) {
    (*(void (**)(uint64_t))(*(void *)qword_100114728 + 8))(qword_100114728);
  }
  if (qword_100114730) {
    (*(void (**)(uint64_t))(*(void *)qword_100114730 + 8))(qword_100114730);
  }
  if (qword_100114738) {
    (*(void (**)(uint64_t))(*(void *)qword_100114738 + 8))(qword_100114738);
  }
  if (qword_100114740) {
    (*(void (**)(uint64_t))(*(void *)qword_100114740 + 8))(qword_100114740);
  }
  if (qword_100114748) {
    (*(void (**)(uint64_t))(*(void *)qword_100114748 + 8))(qword_100114748);
  }
  if (qword_100114750) {
    (*(void (**)(uint64_t))(*(void *)qword_100114750 + 8))(qword_100114750);
  }
  if (qword_100114758) {
    (*(void (**)(uint64_t))(*(void *)qword_100114758 + 8))(qword_100114758);
  }
  if (qword_100114760) {
    (*(void (**)(uint64_t))(*(void *)qword_100114760 + 8))(qword_100114760);
  }
  if (qword_100114768) {
    (*(void (**)(uint64_t))(*(void *)qword_100114768 + 8))(qword_100114768);
  }
  if (qword_100114770) {
    (*(void (**)(uint64_t))(*(void *)qword_100114770 + 8))(qword_100114770);
  }
  if (qword_100114778) {
    (*(void (**)(uint64_t))(*(void *)qword_100114778 + 8))(qword_100114778);
  }
  if (qword_100114780) {
    (*(void (**)(uint64_t))(*(void *)qword_100114780 + 8))(qword_100114780);
  }
  if (proto::gpsd::RecoveryStatistics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gpsd::RecoveryStatistics::default_instance_ + 8))(proto::gpsd::RecoveryStatistics::default_instance_);
  }
  if (qword_100114788) {
    (*(void (**)(uint64_t))(*(void *)qword_100114788 + 8))(qword_100114788);
  }
  if (qword_100114790) {
    (*(void (**)(uint64_t))(*(void *)qword_100114790 + 8))(qword_100114790);
  }
  if (qword_100114798) {
    (*(void (**)(uint64_t))(*(void *)qword_100114798 + 8))(qword_100114798);
  }
  if (proto::gpsd::LtlInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gpsd::LtlInfo::default_instance_ + 8))(proto::gpsd::LtlInfo::default_instance_);
  }
  if (qword_1001147A0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001147A0 + 8))(qword_1001147A0);
  }
  if (qword_1001147A8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001147A8 + 8))(qword_1001147A8);
  }
  if (qword_1001147B0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001147B0 + 8))(qword_1001147B0);
  }
  if (qword_1001147B8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001147B8 + 8))(qword_1001147B8);
  }
  if (qword_1001147C0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001147C0 + 8))(qword_1001147C0);
  }
  if (qword_1001147C8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001147C8 + 8))(qword_1001147C8);
  }
  if (qword_1001147D0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001147D0 + 8))(qword_1001147D0);
  }
  if (qword_1001147D8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001147D8 + 8))(qword_1001147D8);
  }
  if (proto::gpsd::LogEntry::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gpsd::LogEntry::default_instance_ + 8))(proto::gpsd::LogEntry::default_instance_);
  }
  uint64_t result = qword_1001147E0;
  if (qword_1001147E0)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_1001147E0 + 8);
    return v1();
  }
  return result;
}

void proto::gpsd::protobuf_AddDesc_GpsdProtocol_2eproto(proto::gpsd *this, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_1001146B0 & 1) == 0)
  {
    byte_1001146B0 = 1;
    unsigned int v4 = (proto::gnss *)wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"Sources/Protobuf/Generated/GpsdProtocol.pb.cc", a4);
    proto::gnss::protobuf_AddDesc_GnssTypes_2eproto(v4, v5, v6, v7);
    proto::gnss::Emergency::protobuf_AddDesc_GnssEmergencyTypes_2eproto(v8, v9, v10, v11);
    CLP::LogEntry::PrivateData::protobuf_AddDesc_CLPGnssMeasApi_2eproto(v12, v13, v14, v15);
    operator new();
  }
}

uint64_t proto::gpsd::Request_Type_IsValid(proto::gpsd *this)
{
  return 1;
}

proto::gpsd::Request *proto::gpsd::Request::Request(proto::gpsd::Request *this, const proto::gpsd::Request *a2)
{
  *(void *)this = &off_10010DA98;
  *(_OWORD *)((char *)this + 364) = 0u;
  *(_OWORD *)((char *)this + 380) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *((unsigned char *)this + 360) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 280) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *(_OWORD *)((char *)this + 328) = 0u;
  *(_OWORD *)((char *)this + 344) = 0u;
  proto::gpsd::Request::MergeFrom(this, a2);
  return this;
}

void sub_1000B6D90(_Unwind_Exception *a1)
{
  if (*((void *)v1 + 43)) {
    operator delete[]();
  }
  if (*((void *)v1 + 40)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void proto::gpsd::Request::MergeFrom(proto::gpsd::Request *this, const proto::gpsd::Request *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v93);
  }
  int v4 = *((_DWORD *)a2 + 82);
  if (v4)
  {
    sub_10002D764((uint64_t)this + 320, *((_DWORD *)this + 82) + v4);
    memcpy((void *)(*((void *)this + 40) + 4 * *((int *)this + 82)), *((const void **)a2 + 40), 4 * *((int *)a2 + 82));
    *((_DWORD *)this + 82) += *((_DWORD *)a2 + 82);
  }
  int v5 = *((_DWORD *)a2 + 88);
  if (v5)
  {
    sub_10002D764((uint64_t)this + 344, *((_DWORD *)this + 88) + v5);
    memcpy((void *)(*((void *)this + 43) + 4 * *((int *)this + 88)), *((const void **)a2 + 43), 4 * *((int *)a2 + 88));
    *((_DWORD *)this + 88) += *((_DWORD *)a2 + 88);
  }
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if (!(_BYTE)v6) {
    goto LABEL_46;
  }
  if (v6)
  {
    uint64_t v7 = *((void *)a2 + 1);
    *((_DWORD *)this + 97) |= 1u;
    *((void *)this + 1) = v7;
    unsigned int v6 = *((_DWORD *)a2 + 97);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  int v8 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 97) |= 2u;
  *((_DWORD *)this + 4) = v8;
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
LABEL_19:
  unsigned int v9 = *((_DWORD *)a2 + 5);
  if ((proto::gpsd::Request_Type_IsValid((proto::gpsd *)v9) & 1) == 0) {
    __assert_rtn("set_type", "GpsdProtocol.pb.h", 5854, "::proto::gpsd::Request_Type_IsValid(value)");
  }
  *((_DWORD *)this + 97) |= 4u;
  *((_DWORD *)this + 5) = v9;
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_26;
  }
LABEL_21:
  *((_DWORD *)this + 97) |= 8u;
  uint64_t v10 = *((void *)this + 3);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = *((void *)a2 + 3);
  if (!v11) {
    uint64_t v11 = *(void *)(proto::gpsd::Request::default_instance_ + 24);
  }
  sub_1000BE4BC(v10, v11);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x10) == 0)
  {
LABEL_13:
    if ((v6 & 0x20) == 0) {
      goto LABEL_14;
    }
LABEL_31:
    *((_DWORD *)this + 97) |= 0x20u;
    uint64_t v14 = (_DWORD *)*((void *)this + 5);
    if (!v14) {
      operator new();
    }
    uint64_t v15 = *((void *)a2 + 5);
    if (!v15) {
      uint64_t v15 = *(void *)(proto::gpsd::Request::default_instance_ + 40);
    }
    sub_1000BE738(v14, v15);
    unsigned int v6 = *((_DWORD *)a2 + 97);
    if ((v6 & 0x40) == 0)
    {
LABEL_15:
      if ((v6 & 0x80) == 0) {
        goto LABEL_46;
      }
      goto LABEL_41;
    }
    goto LABEL_36;
  }
LABEL_26:
  *((_DWORD *)this + 97) |= 0x10u;
  uint64_t v12 = *((void *)this + 4);
  if (!v12) {
    operator new();
  }
  uint64_t v13 = *((void *)a2 + 4);
  if (!v13) {
    uint64_t v13 = *(void *)(proto::gpsd::Request::default_instance_ + 32);
  }
  sub_1000BE64C(v12, v13);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x20) != 0) {
    goto LABEL_31;
  }
LABEL_14:
  if ((v6 & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_36:
  *((_DWORD *)this + 97) |= 0x40u;
  unsigned int v16 = (_DWORD *)*((void *)this + 6);
  if (!v16) {
    operator new();
  }
  uint64_t v17 = *((void *)a2 + 6);
  if (!v17) {
    uint64_t v17 = *(void *)(proto::gpsd::Request::default_instance_ + 48);
  }
  sub_1000BE8B0(v16, v17);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x80) != 0)
  {
LABEL_41:
    *((_DWORD *)this + 97) |= 0x80u;
    unsigned int v18 = (_DWORD *)*((void *)this + 7);
    if (!v18) {
      operator new();
    }
    uint64_t v19 = *((void *)a2 + 7);
    if (!v19) {
      uint64_t v19 = *(void *)(proto::gpsd::Request::default_instance_ + 56);
    }
    sub_1000BEA28(v18, v19);
    unsigned int v6 = *((_DWORD *)a2 + 97);
  }
LABEL_46:
  if ((v6 & 0xFF00) == 0) {
    goto LABEL_96;
  }
  if ((v6 & 0x100) != 0)
  {
    *((_DWORD *)this + 97) |= 0x100u;
    uint64_t v20 = *((void *)this + 8);
    if (!v20) {
      operator new();
    }
    uint64_t v21 = *((void *)a2 + 8);
    if (!v21) {
      uint64_t v21 = *(void *)(proto::gpsd::Request::default_instance_ + 64);
    }
    sub_1000BEBA0(v20, v21);
    unsigned int v6 = *((_DWORD *)a2 + 97);
    if ((v6 & 0x200) == 0)
    {
LABEL_49:
      if ((v6 & 0x400) == 0) {
        goto LABEL_50;
      }
      goto LABEL_66;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_49;
  }
  *((_DWORD *)this + 97) |= 0x200u;
  uint64_t v22 = *((void *)this + 9);
  if (!v22) {
    operator new();
  }
  uint64_t v23 = *((void *)a2 + 9);
  if (!v23) {
    uint64_t v23 = *(void *)(proto::gpsd::Request::default_instance_ + 72);
  }
  sub_1000BEC8C(v22, v23);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x400) == 0)
  {
LABEL_50:
    if ((v6 & 0x800) == 0) {
      goto LABEL_51;
    }
    goto LABEL_71;
  }
LABEL_66:
  *((_DWORD *)this + 97) |= 0x400u;
  uint64_t v24 = *((void *)this + 10);
  if (!v24) {
    operator new();
  }
  uint64_t v25 = *((void *)a2 + 10);
  if (!v25) {
    uint64_t v25 = *(void *)(proto::gpsd::Request::default_instance_ + 80);
  }
  sub_1000BEEC4(v24, v25);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x800) == 0)
  {
LABEL_51:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_76;
  }
LABEL_71:
  *((_DWORD *)this + 97) |= 0x800u;
  uint64_t v26 = *((void *)this + 11);
  if (!v26) {
    operator new();
  }
  uint64_t v27 = *((void *)a2 + 11);
  if (!v27) {
    uint64_t v27 = *(void *)(proto::gpsd::Request::default_instance_ + 88);
  }
  sub_1000BF03C(v26, v27);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x1000) == 0)
  {
LABEL_52:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_81;
  }
LABEL_76:
  *((_DWORD *)this + 97) |= 0x1000u;
  uint64_t v28 = *((void *)this + 12);
  if (!v28) {
    operator new();
  }
  uint64_t v29 = *((void *)a2 + 12);
  if (!v29) {
    uint64_t v29 = *(void *)(proto::gpsd::Request::default_instance_ + 96);
  }
  sub_1000BF12C(v28, v29);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x2000) == 0)
  {
LABEL_53:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_86;
  }
LABEL_81:
  *((_DWORD *)this + 97) |= 0x2000u;
  uint64_t v30 = *((void *)this + 13);
  if (!v30) {
    operator new();
  }
  uint64_t v31 = *((void *)a2 + 13);
  if (!v31) {
    uint64_t v31 = *(void *)(proto::gpsd::Request::default_instance_ + 104);
  }
  sub_1000BF200(v30, v31);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x4000) == 0)
  {
LABEL_54:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_91;
  }
LABEL_86:
  *((_DWORD *)this + 97) |= 0x4000u;
  uint64_t v32 = *((void *)this + 14);
  if (!v32) {
    operator new();
  }
  uint64_t v33 = *((void *)a2 + 14);
  if (!v33) {
    uint64_t v33 = *(void *)(proto::gpsd::Request::default_instance_ + 112);
  }
  sub_1000BF30C(v32, v33);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x8000) != 0)
  {
LABEL_91:
    *((_DWORD *)this + 97) |= 0x8000u;
    uint64_t v34 = *((void *)this + 15);
    if (!v34) {
      operator new();
    }
    uint64_t v35 = *((void *)a2 + 15);
    if (!v35) {
      uint64_t v35 = *(void *)(proto::gpsd::Request::default_instance_ + 120);
    }
    sub_1000BF3F8(v34, v35);
    unsigned int v6 = *((_DWORD *)a2 + 97);
  }
LABEL_96:
  if ((v6 & 0xFF0000) == 0) {
    goto LABEL_146;
  }
  if ((v6 & 0x10000) != 0)
  {
    *((_DWORD *)this + 97) |= 0x10000u;
    uint64_t v36 = *((void *)this + 16);
    if (!v36) {
      operator new();
    }
    uint64_t v37 = *((void *)a2 + 16);
    if (!v37) {
      uint64_t v37 = *(void *)(proto::gpsd::Request::default_instance_ + 128);
    }
    sub_1000BF528(v36, v37);
    unsigned int v6 = *((_DWORD *)a2 + 97);
    if ((v6 & 0x20000) == 0)
    {
LABEL_99:
      if ((v6 & 0x40000) == 0) {
        goto LABEL_100;
      }
      goto LABEL_116;
    }
  }
  else if ((v6 & 0x20000) == 0)
  {
    goto LABEL_99;
  }
  *((_DWORD *)this + 97) |= 0x20000u;
  unsigned int v38 = (_DWORD *)*((void *)this + 17);
  if (!v38) {
    operator new();
  }
  uint64_t v39 = *((void *)a2 + 17);
  if (!v39) {
    uint64_t v39 = *(void *)(proto::gpsd::Request::default_instance_ + 136);
  }
  sub_1000BF608(v38, v39);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x40000) == 0)
  {
LABEL_100:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_121;
  }
LABEL_116:
  *((_DWORD *)this + 97) |= 0x40000u;
  uint64_t v40 = *((void *)this + 18);
  if (!v40) {
    operator new();
  }
  uint64_t v41 = *((void *)a2 + 18);
  if (!v41) {
    uint64_t v41 = *(void *)(proto::gpsd::Request::default_instance_ + 144);
  }
  sub_1000BF780(v40, v41);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x80000) == 0)
  {
LABEL_101:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_102;
    }
    goto LABEL_126;
  }
LABEL_121:
  *((_DWORD *)this + 97) |= 0x80000u;
  uint64_t v42 = *((void *)this + 19);
  if (!v42) {
    operator new();
  }
  unsigned int v43 = (unsigned char *)*((void *)a2 + 19);
  if (!v43) {
    unsigned int v43 = *(unsigned char **)(proto::gpsd::Request::default_instance_ + 152);
  }
  sub_1000BF824(v42, v43);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x100000) == 0)
  {
LABEL_102:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_131;
  }
LABEL_126:
  *((_DWORD *)this + 97) |= 0x100000u;
  uint64_t v44 = *((void *)this + 20);
  if (!v44) {
    operator new();
  }
  uint64_t v45 = *((void *)a2 + 20);
  if (!v45) {
    uint64_t v45 = *(void *)(proto::gpsd::Request::default_instance_ + 160);
  }
  sub_1000BF970(v44, v45);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x200000) == 0)
  {
LABEL_103:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_104;
    }
    goto LABEL_136;
  }
LABEL_131:
  *((_DWORD *)this + 97) |= 0x200000u;
  uint64_t v46 = *((void *)this + 21);
  if (!v46) {
    operator new();
  }
  uint64_t v47 = *((void *)a2 + 21);
  if (!v47) {
    uint64_t v47 = *(void *)(proto::gpsd::Request::default_instance_ + 168);
  }
  sub_1000BFA14(v46, v47);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x400000) == 0)
  {
LABEL_104:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_146;
    }
    goto LABEL_141;
  }
LABEL_136:
  *((_DWORD *)this + 97) |= 0x400000u;
  int v48 = (_DWORD *)*((void *)this + 22);
  if (!v48) {
    operator new();
  }
  uint64_t v49 = *((void *)a2 + 22);
  if (!v49) {
    uint64_t v49 = *(void *)(proto::gpsd::Request::default_instance_ + 176);
  }
  sub_1000BFAD8(v48, v49);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x800000) != 0)
  {
LABEL_141:
    *((_DWORD *)this + 97) |= 0x800000u;
    uint64_t v50 = *((void *)this + 23);
    if (!v50) {
      operator new();
    }
    uint64_t v51 = *((void *)a2 + 23);
    if (!v51) {
      uint64_t v51 = *(void *)(proto::gpsd::Request::default_instance_ + 184);
    }
    sub_1000BFB9C(v50, v51);
    unsigned int v6 = *((_DWORD *)a2 + 97);
  }
LABEL_146:
  if (!HIBYTE(v6)) {
    goto LABEL_196;
  }
  if ((v6 & 0x1000000) != 0)
  {
    *((_DWORD *)this + 97) |= 0x1000000u;
    uint64_t v52 = *((void *)this + 24);
    if (!v52) {
      operator new();
    }
    uint64_t v53 = *((void *)a2 + 24);
    if (!v53) {
      uint64_t v53 = *(void *)(proto::gpsd::Request::default_instance_ + 192);
    }
    sub_1000BFC40(v52, v53);
    unsigned int v6 = *((_DWORD *)a2 + 97);
    if ((v6 & 0x2000000) == 0)
    {
LABEL_149:
      if ((v6 & 0x4000000) == 0) {
        goto LABEL_150;
      }
      goto LABEL_166;
    }
  }
  else if ((v6 & 0x2000000) == 0)
  {
    goto LABEL_149;
  }
  *((_DWORD *)this + 97) |= 0x2000000u;
  uint64_t v54 = *((void *)this + 25);
  if (!v54) {
    operator new();
  }
  uint64_t v55 = *((void *)a2 + 25);
  if (!v55) {
    uint64_t v55 = *(void *)(proto::gpsd::Request::default_instance_ + 200);
  }
  sub_1000BFD20(v54, v55);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_150:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_151;
    }
    goto LABEL_171;
  }
LABEL_166:
  *((_DWORD *)this + 97) |= 0x4000000u;
  uint64_t v56 = *((void *)this + 26);
  if (!v56) {
    operator new();
  }
  uint64_t v57 = *((void *)a2 + 26);
  if (!v57) {
    uint64_t v57 = *(void *)(proto::gpsd::Request::default_instance_ + 208);
  }
  sub_1000BFE00(v56, v57);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_151:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_152;
    }
    goto LABEL_176;
  }
LABEL_171:
  *((_DWORD *)this + 97) |= 0x8000000u;
  uint64_t v58 = *((void *)this + 27);
  if (!v58) {
    operator new();
  }
  uint64_t v59 = *((void *)a2 + 27);
  if (!v59) {
    uint64_t v59 = *(void *)(proto::gpsd::Request::default_instance_ + 216);
  }
  sub_1000C0108(v58, v59);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_152:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_153;
    }
    goto LABEL_181;
  }
LABEL_176:
  *((_DWORD *)this + 97) |= 0x10000000u;
  uint64_t v60 = *((void *)this + 28);
  if (!v60) {
    operator new();
  }
  uint64_t v61 = *((void *)a2 + 28);
  if (!v61) {
    uint64_t v61 = *(void *)(proto::gpsd::Request::default_instance_ + 224);
  }
  sub_1000C0214(v60, v61);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_153:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_154;
    }
    goto LABEL_186;
  }
LABEL_181:
  *((_DWORD *)this + 97) |= 0x20000000u;
  uint64_t v62 = *((void *)this + 29);
  if (!v62) {
    operator new();
  }
  uint64_t v63 = *((void *)a2 + 29);
  if (!v63) {
    uint64_t v63 = *(void *)(proto::gpsd::Request::default_instance_ + 232);
  }
  sub_1000C02E0(v62, v63);
  unsigned int v6 = *((_DWORD *)a2 + 97);
  if ((v6 & 0x40000000) == 0)
  {
LABEL_154:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_196;
    }
    goto LABEL_191;
  }
LABEL_186:
  *((_DWORD *)this + 97) |= 0x40000000u;
  uint64_t v64 = *((void *)this + 30);
  if (!v64) {
    operator new();
  }
  int v65 = (unsigned char *)*((void *)a2 + 30);
  if (!v65) {
    int v65 = *(unsigned char **)(proto::gpsd::Request::default_instance_ + 240);
  }
  sub_1000C03A4(v64, v65);
  if ((*((_DWORD *)a2 + 97) & 0x80000000) != 0)
  {
LABEL_191:
    *((_DWORD *)this + 97) |= 0x80000000;
    int v66 = (proto::gnss::Emergency::EmergConfig *)*((void *)this + 31);
    if (!v66) {
      operator new();
    }
    unsigned int v67 = (const proto::gnss::Emergency::EmergConfig *)*((void *)a2 + 31);
    if (!v67) {
      unsigned int v67 = *(const proto::gnss::Emergency::EmergConfig **)(proto::gpsd::Request::default_instance_ + 248);
    }
    proto::gnss::Emergency::EmergConfig::MergeFrom(v66, v67);
  }
LABEL_196:
  int v68 = *((_DWORD *)a2 + 98);
  if (!(_BYTE)v68) {
    goto LABEL_242;
  }
  if (v68)
  {
    *((_DWORD *)this + 98) |= 1u;
    int v69 = (proto::gnss::Emergency::PositionRequest *)*((void *)this + 32);
    if (!v69) {
      operator new();
    }
    int v70 = (const proto::gnss::Emergency::PositionRequest *)*((void *)a2 + 32);
    if (!v70) {
      int v70 = *(const proto::gnss::Emergency::PositionRequest **)(proto::gpsd::Request::default_instance_ + 256);
    }
    proto::gnss::Emergency::PositionRequest::MergeFrom(v69, v70);
    int v68 = *((_DWORD *)a2 + 98);
    if ((v68 & 2) == 0)
    {
LABEL_199:
      if ((v68 & 4) == 0) {
        goto LABEL_200;
      }
      goto LABEL_212;
    }
  }
  else if ((v68 & 2) == 0)
  {
    goto LABEL_199;
  }
  int v71 = *((_DWORD *)a2 + 74);
  *((_DWORD *)this + 98) |= 2u;
  *((_DWORD *)this + 74) = v71;
  int v68 = *((_DWORD *)a2 + 98);
  if ((v68 & 4) == 0)
  {
LABEL_200:
    if ((v68 & 8) == 0) {
      goto LABEL_201;
    }
    goto LABEL_217;
  }
LABEL_212:
  *((_DWORD *)this + 98) |= 4u;
  int v72 = (proto::gnss::Emergency::GpsReferenceTime *)*((void *)this + 33);
  if (!v72) {
    operator new();
  }
  int v73 = (const proto::gnss::Emergency::GpsReferenceTime *)*((void *)a2 + 33);
  if (!v73) {
    int v73 = *(const proto::gnss::Emergency::GpsReferenceTime **)(proto::gpsd::Request::default_instance_ + 264);
  }
  proto::gnss::Emergency::GpsReferenceTime::MergeFrom(v72, v73);
  int v68 = *((_DWORD *)a2 + 98);
  if ((v68 & 8) == 0)
  {
LABEL_201:
    if ((v68 & 0x10) == 0) {
      goto LABEL_202;
    }
    goto LABEL_222;
  }
LABEL_217:
  *((_DWORD *)this + 98) |= 8u;
  int v74 = (proto::gnss::Emergency::ReferenceLocation *)*((void *)this + 34);
  if (!v74) {
    operator new();
  }
  int v75 = (const proto::gnss::Emergency::ReferenceLocation *)*((void *)a2 + 34);
  if (!v75) {
    int v75 = *(const proto::gnss::Emergency::ReferenceLocation **)(proto::gpsd::Request::default_instance_ + 272);
  }
  proto::gnss::Emergency::ReferenceLocation::MergeFrom(v74, v75);
  int v68 = *((_DWORD *)a2 + 98);
  if ((v68 & 0x10) == 0)
  {
LABEL_202:
    if ((v68 & 0x20) == 0) {
      goto LABEL_203;
    }
    goto LABEL_227;
  }
LABEL_222:
  *((_DWORD *)this + 98) |= 0x10u;
  uint64_t v76 = (proto::gnss::Emergency::GpsNavigationModel *)*((void *)this + 35);
  if (!v76) {
    operator new();
  }
  uint64_t v77 = (const proto::gnss::Emergency::GpsNavigationModel *)*((void *)a2 + 35);
  if (!v77) {
    uint64_t v77 = *(const proto::gnss::Emergency::GpsNavigationModel **)(proto::gpsd::Request::default_instance_ + 280);
  }
  proto::gnss::Emergency::GpsNavigationModel::MergeFrom(v76, v77);
  int v68 = *((_DWORD *)a2 + 98);
  if ((v68 & 0x20) == 0)
  {
LABEL_203:
    if ((v68 & 0x40) == 0) {
      goto LABEL_204;
    }
    goto LABEL_232;
  }
LABEL_227:
  *((_DWORD *)this + 98) |= 0x20u;
  uint64_t v78 = (proto::gnss::Emergency::GpsAcqAssistance *)*((void *)this + 36);
  if (!v78) {
    operator new();
  }
  uint64_t v79 = (const proto::gnss::Emergency::GpsAcqAssistance *)*((void *)a2 + 36);
  if (!v79) {
    uint64_t v79 = *(const proto::gnss::Emergency::GpsAcqAssistance **)(proto::gpsd::Request::default_instance_ + 288);
  }
  proto::gnss::Emergency::GpsAcqAssistance::MergeFrom(v78, v79);
  int v68 = *((_DWORD *)a2 + 98);
  if ((v68 & 0x40) == 0)
  {
LABEL_204:
    if ((v68 & 0x80) == 0) {
      goto LABEL_242;
    }
    goto LABEL_237;
  }
LABEL_232:
  *((_DWORD *)this + 98) |= 0x40u;
  int v80 = (proto::gnss::Emergency::CellFTAssistance *)*((void *)this + 38);
  if (!v80) {
    operator new();
  }
  int v81 = (const proto::gnss::Emergency::CellFTAssistance *)*((void *)a2 + 38);
  if (!v81) {
    int v81 = *(const proto::gnss::Emergency::CellFTAssistance **)(proto::gpsd::Request::default_instance_ + 304);
  }
  proto::gnss::Emergency::CellFTAssistance::MergeFrom(v80, v81);
  int v68 = *((_DWORD *)a2 + 98);
  if ((v68 & 0x80) != 0)
  {
LABEL_237:
    *((_DWORD *)this + 98) |= 0x80u;
    int v82 = (proto::gnss::Emergency::CplaneContext *)*((void *)this + 39);
    if (!v82) {
      operator new();
    }
    unsigned int v83 = (const proto::gnss::Emergency::CplaneContext *)*((void *)a2 + 39);
    if (!v83) {
      unsigned int v83 = *(const proto::gnss::Emergency::CplaneContext **)(proto::gpsd::Request::default_instance_ + 312);
    }
    proto::gnss::Emergency::CplaneContext::MergeFrom(v82, v83);
    int v68 = *((_DWORD *)a2 + 98);
  }
LABEL_242:
  if ((v68 & 0x1FE00) == 0) {
    return;
  }
  if ((v68 & 0x200) != 0)
  {
    *((_DWORD *)this + 98) |= 0x200u;
    int v84 = (proto::gnss::Emergency::LocationId *)*((void *)this + 42);
    if (!v84) {
      operator new();
    }
    int v85 = (const proto::gnss::Emergency::LocationId *)*((void *)a2 + 42);
    if (!v85) {
      int v85 = *(const proto::gnss::Emergency::LocationId **)(proto::gpsd::Request::default_instance_ + 336);
    }
    proto::gnss::Emergency::LocationId::MergeFrom(v84, v85);
    int v68 = *((_DWORD *)a2 + 98);
    if ((v68 & 0x400) == 0)
    {
LABEL_245:
      if ((v68 & 0x1000) == 0) {
        goto LABEL_246;
      }
      goto LABEL_256;
    }
  }
  else if ((v68 & 0x400) == 0)
  {
    goto LABEL_245;
  }
  int v86 = *((_DWORD *)a2 + 75);
  *((_DWORD *)this + 98) |= 0x400u;
  *((_DWORD *)this + 75) = v86;
  int v68 = *((_DWORD *)a2 + 98);
  if ((v68 & 0x1000) == 0)
  {
LABEL_246:
    if ((v68 & 0x2000) == 0) {
      goto LABEL_247;
    }
    goto LABEL_257;
  }
LABEL_256:
  char v87 = *((unsigned char *)a2 + 360);
  *((_DWORD *)this + 98) |= 0x1000u;
  *((unsigned char *)this + 360) = v87;
  int v68 = *((_DWORD *)a2 + 98);
  if ((v68 & 0x2000) == 0)
  {
LABEL_247:
    if ((v68 & 0x4000) == 0) {
      goto LABEL_248;
    }
    goto LABEL_258;
  }
LABEL_257:
  int v88 = *((_DWORD *)a2 + 91);
  *((_DWORD *)this + 98) |= 0x2000u;
  *((_DWORD *)this + 91) = v88;
  int v68 = *((_DWORD *)a2 + 98);
  if ((v68 & 0x4000) == 0)
  {
LABEL_248:
    if ((v68 & 0x8000) == 0) {
      return;
    }
    goto LABEL_263;
  }
LABEL_258:
  *((_DWORD *)this + 98) |= 0x4000u;
  uint64_t v89 = (proto::gnss::Emergency::SuplContext *)*((void *)this + 46);
  if (!v89) {
    operator new();
  }
  int v90 = (const proto::gnss::Emergency::SuplContext *)*((void *)a2 + 46);
  if (!v90) {
    int v90 = *(const proto::gnss::Emergency::SuplContext **)(proto::gpsd::Request::default_instance_ + 368);
  }
  proto::gnss::Emergency::SuplContext::MergeFrom(v89, v90);
  if ((*((_DWORD *)a2 + 98) & 0x8000) != 0)
  {
LABEL_263:
    *((_DWORD *)this + 98) |= 0x8000u;
    int v91 = (proto::gnss::Emergency::WlanMeasurementList *)*((void *)this + 47);
    if (!v91) {
      operator new();
    }
    int v92 = (const proto::gnss::Emergency::WlanMeasurementList *)*((void *)a2 + 47);
    if (!v92) {
      int v92 = *(const proto::gnss::Emergency::WlanMeasurementList **)(proto::gpsd::Request::default_instance_ + 376);
    }
    proto::gnss::Emergency::WlanMeasurementList::MergeFrom(v91, v92);
  }
}

void sub_1000B8344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void proto::gpsd::Request::~Request(proto::gpsd::Request *this)
{
  *(void *)this = &off_10010DA98;
  proto::gpsd::Request::SharedDtor(this);
  if (*((void *)this + 43)) {
    operator delete[]();
  }
  if (*((void *)this + 40)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void *proto::gpsd::Request::SharedDtor(void *this)
{
  if ((void *)proto::gpsd::Request::default_instance_ != this)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[3];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[4];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[5];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[6];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[7];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[8];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = v1[9];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = v1[10];
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = v1[11];
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = v1[12];
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t v12 = v1[13];
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
    uint64_t v13 = v1[14];
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    }
    uint64_t v14 = v1[15];
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    }
    uint64_t v15 = v1[16];
    if (v15) {
      (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    }
    uint64_t v16 = v1[17];
    if (v16) {
      (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    }
    uint64_t v17 = v1[18];
    if (v17) {
      (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
    }
    uint64_t v18 = v1[19];
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
    }
    uint64_t v19 = v1[20];
    if (v19) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
    }
    uint64_t v20 = v1[21];
    if (v20) {
      (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
    }
    uint64_t v21 = v1[22];
    if (v21) {
      (*(void (**)(uint64_t))(*(void *)v21 + 8))(v21);
    }
    uint64_t v22 = v1[23];
    if (v22) {
      (*(void (**)(uint64_t))(*(void *)v22 + 8))(v22);
    }
    uint64_t v23 = v1[24];
    if (v23) {
      (*(void (**)(uint64_t))(*(void *)v23 + 8))(v23);
    }
    uint64_t v24 = v1[25];
    if (v24) {
      (*(void (**)(uint64_t))(*(void *)v24 + 8))(v24);
    }
    uint64_t v25 = v1[26];
    if (v25) {
      (*(void (**)(uint64_t))(*(void *)v25 + 8))(v25);
    }
    uint64_t v26 = v1[27];
    if (v26) {
      (*(void (**)(uint64_t))(*(void *)v26 + 8))(v26);
    }
    uint64_t v27 = v1[28];
    if (v27) {
      (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
    }
    uint64_t v28 = v1[29];
    if (v28) {
      (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
    }
    uint64_t v29 = v1[30];
    if (v29) {
      (*(void (**)(uint64_t))(*(void *)v29 + 8))(v29);
    }
    uint64_t v30 = v1[31];
    if (v30) {
      (*(void (**)(uint64_t))(*(void *)v30 + 8))(v30);
    }
    uint64_t v31 = v1[32];
    if (v31) {
      (*(void (**)(uint64_t))(*(void *)v31 + 8))(v31);
    }
    uint64_t v32 = v1[33];
    if (v32) {
      (*(void (**)(uint64_t))(*(void *)v32 + 8))(v32);
    }
    uint64_t v33 = v1[34];
    if (v33) {
      (*(void (**)(uint64_t))(*(void *)v33 + 8))(v33);
    }
    uint64_t v34 = v1[35];
    if (v34) {
      (*(void (**)(uint64_t))(*(void *)v34 + 8))(v34);
    }
    uint64_t v35 = v1[36];
    if (v35) {
      (*(void (**)(uint64_t))(*(void *)v35 + 8))(v35);
    }
    uint64_t v36 = v1[38];
    if (v36) {
      (*(void (**)(uint64_t))(*(void *)v36 + 8))(v36);
    }
    uint64_t v37 = v1[39];
    if (v37) {
      (*(void (**)(uint64_t))(*(void *)v37 + 8))(v37);
    }
    uint64_t v38 = v1[42];
    if (v38) {
      (*(void (**)(uint64_t))(*(void *)v38 + 8))(v38);
    }
    uint64_t v39 = v1[46];
    if (v39) {
      (*(void (**)(uint64_t))(*(void *)v39 + 8))(v39);
    }
    this = (void *)v1[47];
    if (this)
    {
      uint64_t v40 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v40();
    }
  }
  return this;
}

void sub_1000B8AE8(proto::gpsd::Request *a1)
{
  proto::gpsd::Request::~Request(a1);

  operator delete();
}

void sub_1000B8B20()
{
}

uint64_t proto::gpsd::Request::Clear(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = (unsigned int *)(this + 388);
  unsigned int v3 = *(_DWORD *)(this + 388);
  if ((_BYTE)v3)
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    if ((v3 & 8) != 0)
    {
      this = *(void *)(this + 24);
      if (this)
      {
        this = sub_1000B91F0(this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x10) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 32);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x20) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 40);
      if (v5)
      {
        this = sub_10003AD6C(v5 + 8);
        *(_DWORD *)(v5 + 36) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x40) != 0)
    {
      uint64_t v6 = *(void *)(v1 + 48);
      if (v6)
      {
        this = sub_10003AD6C(v6 + 8);
        *(_DWORD *)(v6 + 36) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x80) != 0)
    {
      uint64_t v7 = *(void *)(v1 + 56);
      if (v7)
      {
        this = sub_10003AD6C(v7 + 8);
        *(_DWORD *)(v7 + 36) = 0;
        unsigned int v3 = *v2;
      }
    }
  }
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      uint64_t v8 = *(void *)(v1 + 64);
      if (v8)
      {
        if (*(unsigned char *)(v8 + 36))
        {
          *(void *)(v8 + 8) = 0;
          *(void *)(v8 + 16) = 0;
          *(void *)(v8 + 24) = 0;
        }
        *(_DWORD *)(v8 + 36) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x200) != 0)
    {
      uint64_t v9 = *(void *)(v1 + 72);
      if (v9)
      {
        int v10 = *(_DWORD *)(v9 + 76);
        if ((_BYTE)v10)
        {
          *(_OWORD *)(v9 + 49) = 0u;
          *(_OWORD *)(v9 + 40) = 0u;
          *(_OWORD *)(v9 + 24) = 0u;
          *(_OWORD *)(v9 + 8) = 0u;
        }
        if ((v10 & 0xFF00) != 0)
        {
          *(unsigned char *)(v9 + 69) = 0;
          *(_DWORD *)(v9 + 65) = 0;
        }
        *(_DWORD *)(v9 + 76) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x400) != 0)
    {
      uint64_t v11 = *(void *)(v1 + 80);
      if (v11)
      {
        if (*(unsigned char *)(v11 + 32))
        {
          *(void *)(v11 + 8) = 0;
          *(void *)(v11 + 16) = 0x400000000;
          *(_DWORD *)(v11 + 24) = 0;
        }
        *(_DWORD *)(v11 + 32) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x800) != 0)
    {
      uint64_t v12 = *(void *)(v1 + 88);
      if (v12)
      {
        if (*(unsigned char *)(v12 + 24))
        {
          *(void *)(v12 + 8) = 0;
          *(_DWORD *)(v12 + 16) = 4;
        }
        *(_DWORD *)(v12 + 24) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x1000) != 0)
    {
      uint64_t v13 = *(void *)(v1 + 96);
      if (v13)
      {
        if (*(unsigned char *)(v13 + 16)) {
          *(_DWORD *)(v13 + 8) = 15;
        }
        *(_DWORD *)(v13 + 16) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x2000) != 0)
    {
      uint64_t v14 = *(void *)(v1 + 104);
      if (v14)
      {
        if (*(unsigned char *)(v14 + 44))
        {
          *(_OWORD *)(v14 + 24) = 0u;
          *(_OWORD *)(v14 + 8) = 0u;
        }
        *(_DWORD *)(v14 + 44) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x4000) != 0)
    {
      uint64_t v15 = *(void *)(v1 + 112);
      if (v15)
      {
        if (*(unsigned char *)(v15 + 36))
        {
          *(void *)(v15 + 8) = 0;
          *(void *)(v15 + 16) = 0;
          *(void *)(v15 + 24) = 0;
        }
        *(_DWORD *)(v15 + 36) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x8000) != 0)
    {
      this = *(void *)(v1 + 120);
      if (this)
      {
        this = sub_1000B93C4(this);
        unsigned int v3 = *v2;
      }
    }
  }
  if ((v3 & 0xFF0000) != 0)
  {
    if ((v3 & 0x10000) != 0)
    {
      uint64_t v16 = *(void *)(v1 + 128);
      if (v16)
      {
        if (*(unsigned char *)(v16 + 20))
        {
          uint64_t v17 = *(void *)(v16 + 8);
          if ((_UNKNOWN *)v17 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          {
            if (*(char *)(v17 + 23) < 0)
            {
              **(unsigned char **)uint64_t v17 = 0;
              *(void *)(v17 + 8) = 0;
            }
            else
            {
              *(unsigned char *)uint64_t v17 = 0;
              *(unsigned char *)(v17 + 23) = 0;
            }
          }
        }
        *(_DWORD *)(v16 + 20) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x20000) != 0)
    {
      uint64_t v18 = *(void *)(v1 + 136);
      if (v18)
      {
        this = sub_10003AD6C(v18 + 8);
        *(_DWORD *)(v18 + 36) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x40000) != 0)
    {
      uint64_t v19 = *(void *)(v1 + 144);
      if (v19)
      {
        if (*(unsigned char *)(v19 + 20)) {
          *(void *)(v19 + 8) = 0;
        }
        *(_DWORD *)(v19 + 20) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x80000) != 0)
    {
      uint64_t v20 = *(void *)(v1 + 152);
      if (v20)
      {
        if (*(unsigned char *)(v20 + 20))
        {
          *(unsigned char *)(v20 + 8) = 1;
          *(_DWORD *)(v20 + 9) = 0;
          *(unsigned char *)(v20 + 13) = 0;
        }
        *(_DWORD *)(v20 + 20) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x100000) != 0)
    {
      uint64_t v21 = *(void *)(v1 + 160);
      if (v21)
      {
        if (*(unsigned char *)(v21 + 20)) {
          *(void *)(v21 + 8) = 0;
        }
        *(_DWORD *)(v21 + 20) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x200000) != 0)
    {
      uint64_t v22 = *(void *)(v1 + 168);
      if (v22)
      {
        if (*(unsigned char *)(v22 + 20))
        {
          *(unsigned char *)(v22 + 8) = 0;
          *(_DWORD *)(v22 + 12) = 0;
        }
        *(_DWORD *)(v22 + 20) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x400000) != 0)
    {
      uint64_t v23 = *(void *)(v1 + 176);
      if (v23)
      {
        if (*(unsigned char *)(v23 + 20)) {
          *(void *)(v23 + 8) = 0;
        }
        *(_DWORD *)(v23 + 20) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x800000) != 0)
    {
      uint64_t v24 = *(void *)(v1 + 184);
      if (v24)
      {
        if (*(unsigned char *)(v24 + 16)) {
          *(unsigned char *)(v24 + 8) = 0;
        }
        *(_DWORD *)(v24 + 16) = 0;
        unsigned int v3 = *v2;
      }
    }
  }
  if (HIBYTE(v3))
  {
    if ((v3 & 0x1000000) != 0)
    {
      uint64_t v25 = *(void *)(v1 + 192);
      if (v25)
      {
        if (*(unsigned char *)(v25 + 20))
        {
          uint64_t v26 = *(void *)(v25 + 8);
          if ((_UNKNOWN *)v26 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          {
            if (*(char *)(v26 + 23) < 0)
            {
              **(unsigned char **)uint64_t v26 = 0;
              *(void *)(v26 + 8) = 0;
            }
            else
            {
              *(unsigned char *)uint64_t v26 = 0;
              *(unsigned char *)(v26 + 23) = 0;
            }
          }
        }
        *(_DWORD *)(v25 + 20) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x2000000) != 0)
    {
      uint64_t v27 = *(void *)(v1 + 200);
      if (v27)
      {
        if (*(unsigned char *)(v27 + 20))
        {
          uint64_t v28 = *(void *)(v27 + 8);
          if ((_UNKNOWN *)v28 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
          {
            if (*(char *)(v28 + 23) < 0)
            {
              **(unsigned char **)uint64_t v28 = 0;
              *(void *)(v28 + 8) = 0;
            }
            else
            {
              *(unsigned char *)uint64_t v28 = 0;
              *(unsigned char *)(v28 + 23) = 0;
            }
          }
        }
        *(_DWORD *)(v27 + 20) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x4000000) != 0)
    {
      this = *(void *)(v1 + 208);
      if (this)
      {
        this = sub_1000B9590(this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x8000000) != 0)
    {
      uint64_t v29 = *(void *)(v1 + 216);
      if (v29)
      {
        if (*(unsigned char *)(v29 + 24))
        {
          *(_DWORD *)(v29 + 15) = 0;
          *(void *)(v29 + 8) = 0;
        }
        *(_DWORD *)(v29 + 24) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x10000000) != 0)
    {
      uint64_t v30 = *(void *)(v1 + 224);
      if (v30)
      {
        if (*(unsigned char *)(v30 + 16)) {
          *(_DWORD *)(v30 + 8) = 0;
        }
        *(_DWORD *)(v30 + 16) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x20000000) != 0)
    {
      uint64_t v31 = *(void *)(v1 + 232);
      if (v31)
      {
        if (*(unsigned char *)(v31 + 24))
        {
          *(void *)(v31 + 8) = 0;
          *(_DWORD *)(v31 + 16) = 0;
        }
        *(_DWORD *)(v31 + 24) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x40000000) != 0)
    {
      uint64_t v32 = *(void *)(v1 + 240);
      if (v32)
      {
        if (*(unsigned char *)(v32 + 16)) {
          *(_WORD *)(v32 + 8) = 0;
        }
        *(_DWORD *)(v32 + 16) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x80000000) != 0)
    {
      this = *(void *)(v1 + 248);
      if (this) {
        this = proto::gnss::Emergency::EmergConfig::Clear(this);
      }
    }
  }
  int v33 = *(_DWORD *)(v1 + 392);
  if ((_BYTE)v33)
  {
    if (v33)
    {
      uint64_t v34 = *(void *)(v1 + 256);
      if (v34)
      {
        int v35 = *(_DWORD *)(v34 + 80);
        if ((_BYTE)v35)
        {
          *(_OWORD *)(v34 + 24) = 0u;
          *(_OWORD *)(v34 + 8) = 0u;
        }
        if ((v35 & 0xFF00) != 0)
        {
          *(_OWORD *)(v34 + 56) = 0u;
          *(_OWORD *)(v34 + 40) = 0u;
        }
        if ((v35 & 0xFF0000) != 0) {
          *(_DWORD *)(v34 + 72) = 0;
        }
        *(_DWORD *)(v34 + 80) = 0;
        int v33 = *(_DWORD *)(v1 + 392);
      }
    }
    *(_DWORD *)(v1 + 296) = 0;
    if ((v33 & 4) != 0)
    {
      this = *(void *)(v1 + 264);
      if (this)
      {
        this = proto::gnss::Emergency::GpsReferenceTime::Clear((proto::gnss::Emergency::GpsReferenceTime *)this);
        int v33 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v33 & 8) != 0)
    {
      uint64_t v36 = *(void *)(v1 + 272);
      if (v36)
      {
        int v37 = *(_DWORD *)(v36 + 68);
        if ((_BYTE)v37)
        {
          *(_OWORD *)(v36 + 24) = 0u;
          *(_OWORD *)(v36 + 8) = 0u;
        }
        if ((v37 & 0xFF00) != 0)
        {
          *(void *)(v36 + 40) = 0;
          *(void *)(v36 + 48) = 0;
          *(void *)(v36 + 56) = 0;
        }
        *(_DWORD *)(v36 + 68) = 0;
        int v33 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v33 & 0x10) != 0)
    {
      uint64_t v38 = *(void *)(v1 + 280);
      if (v38)
      {
        if (*(unsigned char *)(v38 + 52))
        {
          *(void *)(v38 + 32) = 0;
          *(void *)(v38 + 40) = 0;
        }
        this = sub_10003AD6C(v38 + 8);
        *(_DWORD *)(v38 + 52) = 0;
        int v33 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v33 & 0x20) != 0)
    {
      this = *(void *)(v1 + 288);
      if (this)
      {
        this = proto::gnss::Emergency::GpsAcqAssistance::Clear((proto::gnss::Emergency::GpsAcqAssistance *)this);
        int v33 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v33 & 0x40) != 0)
    {
      this = *(void *)(v1 + 304);
      if (this)
      {
        this = proto::gnss::Emergency::CellFTAssistance::Clear(this);
        int v33 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v33 & 0x80) != 0)
    {
      this = *(void *)(v1 + 312);
      if (this)
      {
        this = proto::gnss::Emergency::CplaneContext::Clear(this);
        int v33 = *(_DWORD *)(v1 + 392);
      }
    }
  }
  if ((v33 & 0x1FE00) != 0)
  {
    if ((v33 & 0x200) != 0)
    {
      this = *(void *)(v1 + 336);
      if (this)
      {
        this = proto::gnss::Emergency::LocationId::Clear((proto::gnss::Emergency::LocationId *)this);
        int v33 = *(_DWORD *)(v1 + 392);
      }
    }
    *(_DWORD *)(v1 + 300) = 0;
    *(unsigned char *)(v1 + 360) = 0;
    *(_DWORD *)(v1 + 364) = 0;
    if ((v33 & 0x4000) != 0)
    {
      this = *(void *)(v1 + 368);
      if (this)
      {
        this = proto::gnss::Emergency::SuplContext::Clear(this);
        int v33 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v33 & 0x8000) != 0)
    {
      uint64_t v39 = *(void *)(v1 + 376);
      if (v39)
      {
        if (*(unsigned char *)(v39 + 40)) {
          *(_DWORD *)(v39 + 32) = 0;
        }
        this = sub_10003AD6C(v39 + 8);
        *(_DWORD *)(v39 + 40) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 328) = 0;
  *(_DWORD *)(v1 + 352) = 0;
  *(void *)uint64_t v2 = 0;
  return this;
}

uint64_t sub_1000B91F0(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    if (*(unsigned char *)(result + 36))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        int v2 = *(_DWORD *)(v1 + 96);
        if ((_BYTE)v2)
        {
          *(_OWORD *)(v1 + 56) = 0u;
          *(_OWORD *)(v1 + 40) = 0u;
          *(_OWORD *)(v1 + 24) = 0u;
          *(_OWORD *)(v1 + 8) = 0u;
        }
        if ((v2 & 0xFF00) != 0)
        {
          *(void *)(v1 + 72) = 0;
          *(void *)(v1 + 80) = 0;
          *(_DWORD *)(v1 + 88) = 0;
        }
        *(_DWORD *)(v1 + 96) = 0;
      }
    }
    *(_DWORD *)(result + 16) = 0;
    *(unsigned char *)(result + 20) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1000B924C(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1000B9264(uint64_t a1)
{
  uint64_t result = sub_10003AD6C(a1 + 8);
  *(_DWORD *)(a1 + 36) = 0;
  return result;
}

uint64_t sub_1000B9290(uint64_t a1)
{
  uint64_t result = sub_10003AD6C(a1 + 8);
  *(_DWORD *)(a1 + 36) = 0;
  return result;
}

uint64_t sub_1000B92BC(uint64_t a1)
{
  uint64_t result = sub_10003AD6C(a1 + 8);
  *(_DWORD *)(a1 + 36) = 0;
  return result;
}

uint64_t sub_1000B92E8(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1000B9300(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 76);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 49) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(unsigned char *)(result + 69) = 0;
    *(_DWORD *)(result + 65) = 0;
  }
  *(_DWORD *)(result + 76) = 0;
  return result;
}

uint64_t sub_1000B9338(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0x400000000;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1000B935C(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 4;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1000B9378(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 15;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1000B9390(uint64_t result)
{
  if (*(unsigned char *)(result + 44))
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_1000B93AC(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1000B93C4(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    if (*(unsigned char *)(result + 24))
    {
      uint64_t v1 = *(void *)(result + 8);
      if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(unsigned char **)uint64_t v1 = 0;
          *(void *)(v1 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v1 = 0;
          *(unsigned char *)(v1 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1000B9410(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    uint64_t v1 = *(void *)(result + 8);
    if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(unsigned char **)uint64_t v1 = 0;
        *(void *)(v1 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v1 = 0;
        *(unsigned char *)(v1 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1000B9454(uint64_t a1)
{
  uint64_t result = sub_10003AD6C(a1 + 8);
  *(_DWORD *)(a1 + 36) = 0;
  return result;
}

uint64_t sub_1000B9480(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1000B9494(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    *(unsigned char *)(result + 8) = 1;
    *(_DWORD *)(result + 9) = 0;
    *(unsigned char *)(result + 13) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1000B94B4(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1000B94C8(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)(result + 12) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1000B94E0(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1000B94F4(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(unsigned char *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1000B9508(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    uint64_t v1 = *(void *)(result + 8);
    if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(unsigned char **)uint64_t v1 = 0;
        *(void *)(v1 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v1 = 0;
        *(unsigned char *)(v1 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1000B954C(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    uint64_t v1 = *(void *)(result + 8);
    if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(unsigned char **)uint64_t v1 = 0;
        *(void *)(v1 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v1 = 0;
        *(unsigned char *)(v1 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1000B9590(uint64_t result)
{
  LOBYTE(v1) = *(unsigned char *)(result + 56);
  if ((_BYTE)v1)
  {
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)(result + 12) = 0;
    *(_DWORD *)(result + 48) = 0;
    if ((v1 & 8) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if (v2)
      {
        int v3 = *(_DWORD *)(v2 + 56);
        if ((_BYTE)v3)
        {
          *(_DWORD *)(v2 + 36) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
          *(void *)(v2 + 8) = 0;
          *(unsigned char *)(v2 + 32) = 0;
        }
        if ((v3 & 0xFF00) != 0)
        {
          *(void *)(v2 + 40) = 0;
          *(_DWORD *)(v2 + 48) = 0;
        }
        *(_DWORD *)(v2 + 56) = 0;
        int v1 = *(_DWORD *)(result + 56);
      }
    }
    if ((v1 & 0x10) != 0)
    {
      uint64_t v4 = *(void *)(result + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 52)) {
          *(void *)(v4 + 8) = 0;
        }
        *(_DWORD *)(v4 + 24) = 0;
        *(_DWORD *)(v4 + 40) = 0;
        *(_DWORD *)(v4 + 52) = 0;
        int v1 = *(_DWORD *)(result + 56);
      }
    }
    if ((v1 & 0x20) != 0)
    {
      uint64_t v5 = *(void *)(result + 32);
      if (v5)
      {
        if ((*(_WORD *)(v5 + 36) & 0x1FE) != 0) {
          *(void *)(v5 + 24) = 0;
        }
        *(_DWORD *)(v5 + 16) = 0;
        *(_DWORD *)(v5 + 36) = 0;
        int v1 = *(_DWORD *)(result + 56);
      }
    }
    if ((v1 & 0x40) != 0)
    {
      uint64_t v6 = *(void *)(result + 40);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 20)) {
          *(void *)(v6 + 8) = 0;
        }
        *(_DWORD *)(v6 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1000B9658(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(_DWORD *)(result + 15) = 0;
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1000B9670(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1000B9684(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1000B969C(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_WORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1000B96B0(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5 = (char **)((char *)this + 8);
  uint64_t v6 = a1 + 344;
  uint64_t v7 = a1 + 320;
  uint64_t v8 = (unsigned int *)(a1 + 16);
  uint64_t v9 = (unsigned int *)(a1 + 296);
  int v10 = (unsigned int *)(a1 + 300);
  v412 = (unint64_t *)(a1 + 8);
  v413 = (unsigned int *)(a1 + 364);
LABEL_2:
  while (2)
  {
    uint64_t v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_108;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v412);
          if (!result) {
            return result;
          }
          uint64_t v16 = (char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v412 = *v15;
          uint64_t v16 = v15 + 1;
          unint64_t *v5 = v16;
        }
        *(_DWORD *)(a1 + 388) |= 1u;
        if ((unint64_t)v16 < v14 && *v16 == 16)
        {
          uint64_t v17 = v16 + 1;
          unint64_t *v5 = v17;
          goto LABEL_120;
        }
        continue;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_108;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_120:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          uint64_t v31 = (char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v8 = *v17;
          uint64_t v31 = v17 + 1;
          unint64_t *v5 = v31;
        }
        *(_DWORD *)(a1 + 388) |= 2u;
        if ((unint64_t)v31 >= v14 || *v31 != 24) {
          continue;
        }
        uint64_t v18 = v31 + 1;
        unint64_t *v5 = v18;
LABEL_128:
        v415[0] = 0;
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415);
          if (!result) {
            return result;
          }
          unint64_t v32 = v415[0];
        }
        else
        {
          unint64_t v32 = *v18;
          unint64_t *v5 = v18 + 1;
        }
        if (proto::gpsd::Request_Type_IsValid((proto::gpsd *)v32))
        {
          *(_DWORD *)(a1 + 388) |= 4u;
          *(_DWORD *)(a1 + 20) = v32;
        }
        int v33 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v33 >= *((void *)this + 2) || *v33 != 34) {
          continue;
        }
        unint64_t *v5 = v33 + 1;
LABEL_138:
        *(_DWORD *)(a1 + 388) |= 8u;
        uint64_t v34 = *(void *)(a1 + 24);
        if (!v34) {
          operator new();
        }
        v415[0] = 0;
        int v35 = (char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v35;
          unint64_t *v5 = v35 + 1;
        }
        int v36 = *((_DWORD *)this + 14);
        int v37 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v36 + 1;
        if (v36 >= v37) {
          return 0;
        }
        int v38 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000C713C(v34, this, v39) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v38);
        int v40 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v40, 1);
        int v42 = v40 - 1;
        if (v42 < 0 == v41) {
          *((_DWORD *)this + 14) = v42;
        }
        unsigned int v43 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v43 >= *((void *)this + 2) || *v43 != 42) {
          continue;
        }
        unint64_t *v5 = v43 + 1;
LABEL_152:
        *(_DWORD *)(a1 + 388) |= 0x10u;
        uint64_t v44 = *(void *)(a1 + 32);
        if (!v44) {
          operator new();
        }
        v415[0] = 0;
        uint64_t v45 = (char *)*((void *)this + 1);
        if ((unint64_t)v45 >= *((void *)this + 2) || *v45 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v45;
          unint64_t *v5 = v45 + 1;
        }
        int v46 = *((_DWORD *)this + 14);
        int v47 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v46 + 1;
        if (v46 >= v47) {
          return 0;
        }
        int v48 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000C7808(v44, this, v49) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v48);
        int v50 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v50, 1);
        int v51 = v50 - 1;
        if (v51 < 0 == v41) {
          *((_DWORD *)this + 14) = v51;
        }
        uint64_t v52 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v52 >= *((void *)this + 2) || *v52 != 50) {
          continue;
        }
        unint64_t *v5 = v52 + 1;
LABEL_166:
        *(_DWORD *)(a1 + 388) |= 0x20u;
        uint64_t v53 = *(int **)(a1 + 40);
        if (!v53) {
          operator new();
        }
        v415[0] = 0;
        uint64_t v54 = (char *)*((void *)this + 1);
        if ((unint64_t)v54 >= *((void *)this + 2) || *v54 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v54;
          unint64_t *v5 = v54 + 1;
        }
        int v55 = *((_DWORD *)this + 14);
        int v56 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v55 + 1;
        if (v55 >= v56) {
          return 0;
        }
        int v57 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000C831C(v53, this, v58) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v57);
        int v59 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v59, 1);
        int v60 = v59 - 1;
        if (v60 < 0 == v41) {
          *((_DWORD *)this + 14) = v60;
        }
        uint64_t v61 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v61 >= *((void *)this + 2) || *v61 != 58) {
          continue;
        }
        unint64_t *v5 = v61 + 1;
LABEL_180:
        *(_DWORD *)(a1 + 388) |= 0x40u;
        uint64_t v62 = *(int **)(a1 + 48);
        if (!v62) {
          operator new();
        }
        v415[0] = 0;
        uint64_t v63 = (char *)*((void *)this + 1);
        if ((unint64_t)v63 >= *((void *)this + 2) || *v63 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v63;
          unint64_t *v5 = v63 + 1;
        }
        int v64 = *((_DWORD *)this + 14);
        int v65 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v64 + 1;
        if (v64 >= v65) {
          return 0;
        }
        int v66 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000C87CC(v62, this, v67) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v66);
        int v68 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v68, 1);
        int v69 = v68 - 1;
        if (v69 < 0 == v41) {
          *((_DWORD *)this + 14) = v69;
        }
        int v70 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v70 >= *((void *)this + 2) || *v70 != 66) {
          continue;
        }
        unint64_t *v5 = v70 + 1;
LABEL_194:
        *(_DWORD *)(a1 + 388) |= 0x80u;
        int v71 = *(int **)(a1 + 56);
        if (!v71) {
          operator new();
        }
        v415[0] = 0;
        int v72 = (char *)*((void *)this + 1);
        if ((unint64_t)v72 >= *((void *)this + 2) || *v72 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v72;
          unint64_t *v5 = v72 + 1;
        }
        int v73 = *((_DWORD *)this + 14);
        int v74 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v73 + 1;
        if (v73 >= v74) {
          return 0;
        }
        int v75 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000C8C7C(v71, this, v76) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v75);
        int v77 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v77, 1);
        int v78 = v77 - 1;
        if (v78 < 0 == v41) {
          *((_DWORD *)this + 14) = v78;
        }
        uint64_t v79 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v79 >= *((void *)this + 2) || *v79 != 74) {
          continue;
        }
        unint64_t *v5 = v79 + 1;
LABEL_208:
        *(_DWORD *)(a1 + 388) |= 0x100u;
        uint64_t v80 = *(void *)(a1 + 64);
        if (!v80) {
          operator new();
        }
        v415[0] = 0;
        int v81 = (char *)*((void *)this + 1);
        if ((unint64_t)v81 >= *((void *)this + 2) || *v81 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v81;
          unint64_t *v5 = v81 + 1;
        }
        int v82 = *((_DWORD *)this + 14);
        int v83 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v82 + 1;
        if (v82 >= v83) {
          return 0;
        }
        int v84 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000C910C(v80, this, v85) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v84);
        int v86 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v86, 1);
        int v87 = v86 - 1;
        if (v87 < 0 == v41) {
          *((_DWORD *)this + 14) = v87;
        }
        int v88 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v88 >= *((void *)this + 2) || *v88 != 82) {
          continue;
        }
        unint64_t *v5 = v88 + 1;
LABEL_222:
        *(_DWORD *)(a1 + 388) |= 0x200u;
        uint64_t v89 = *(void *)(a1 + 72);
        if (!v89) {
          operator new();
        }
        v415[0] = 0;
        int v90 = (char *)*((void *)this + 1);
        if ((unint64_t)v90 >= *((void *)this + 2) || *v90 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v90;
          unint64_t *v5 = v90 + 1;
        }
        int v91 = *((_DWORD *)this + 14);
        int v92 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v91 + 1;
        if (v91 >= v92) {
          return 0;
        }
        int v93 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000C957C(v89, this, v94) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v93);
        int v95 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v95, 1);
        int v96 = v95 - 1;
        if (v96 < 0 == v41) {
          *((_DWORD *)this + 14) = v96;
        }
        int v97 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v97 >= *((void *)this + 2) || *v97 != 90) {
          continue;
        }
        unint64_t *v5 = v97 + 1;
LABEL_236:
        *(_DWORD *)(a1 + 388) |= 0x400u;
        unsigned int v98 = *(_DWORD **)(a1 + 80);
        if (!v98) {
          operator new();
        }
        v415[0] = 0;
        unsigned int v99 = (char *)*((void *)this + 1);
        if ((unint64_t)v99 >= *((void *)this + 2) || *v99 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v99;
          unint64_t *v5 = v99 + 1;
        }
        int v100 = *((_DWORD *)this + 14);
        int v101 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v100 + 1;
        if (v100 >= v101) {
          return 0;
        }
        int v102 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000CA02C(v98, this, v103) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v102);
        int v104 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v104, 1);
        int v105 = v104 - 1;
        if (v105 < 0 == v41) {
          *((_DWORD *)this + 14) = v105;
        }
        unsigned int v106 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v106 >= *((void *)this + 2) || *v106 != 98) {
          continue;
        }
        unint64_t *v5 = v106 + 1;
LABEL_250:
        *(_DWORD *)(a1 + 388) |= 0x800u;
        uint64_t v107 = *(void *)(a1 + 88);
        if (!v107) {
          operator new();
        }
        v415[0] = 0;
        v108 = (char *)*((void *)this + 1);
        if ((unint64_t)v108 >= *((void *)this + 2) || *v108 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v108;
          unint64_t *v5 = v108 + 1;
        }
        int v109 = *((_DWORD *)this + 14);
        int v110 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v109 + 1;
        if (v109 >= v110) {
          return 0;
        }
        int v111 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000CA63C(v107, this, v112) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v111);
        int v113 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v113, 1);
        int v114 = v113 - 1;
        if (v114 < 0 == v41) {
          *((_DWORD *)this + 14) = v114;
        }
        v115 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v115 >= *((void *)this + 2) || *v115 != 106) {
          continue;
        }
        unint64_t *v5 = v115 + 1;
LABEL_264:
        *(_DWORD *)(a1 + 388) |= 0x1000u;
        uint64_t v116 = *(void *)(a1 + 96);
        if (!v116) {
          operator new();
        }
        v415[0] = 0;
        v117 = (char *)*((void *)this + 1);
        if ((unint64_t)v117 >= *((void *)this + 2) || *v117 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v117;
          unint64_t *v5 = v117 + 1;
        }
        int v118 = *((_DWORD *)this + 14);
        int v119 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v118 + 1;
        if (v118 >= v119) {
          return 0;
        }
        int v120 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000CAA70(v116, this, v121) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v120);
        int v122 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v122, 1);
        int v123 = v122 - 1;
        if (v123 < 0 == v41) {
          *((_DWORD *)this + 14) = v123;
        }
        v124 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v124 >= *((void *)this + 2) || *v124 != 114) {
          continue;
        }
        unint64_t *v5 = v124 + 1;
LABEL_278:
        *(_DWORD *)(a1 + 388) |= 0x2000u;
        uint64_t v125 = *(void *)(a1 + 104);
        if (!v125) {
          operator new();
        }
        v415[0] = 0;
        v126 = (char *)*((void *)this + 1);
        if ((unint64_t)v126 >= *((void *)this + 2) || *v126 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v126;
          unint64_t *v5 = v126 + 1;
        }
        int v127 = *((_DWORD *)this + 14);
        int v128 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v127 + 1;
        if (v127 >= v128) {
          return 0;
        }
        int v129 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000CAD94(v125, this, v130) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v129);
        int v131 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v131, 1);
        int v132 = v131 - 1;
        if (v132 < 0 == v41) {
          *((_DWORD *)this + 14) = v132;
        }
        v133 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v133 >= *((void *)this + 2) || *v133 != 122) {
          continue;
        }
        unint64_t *v5 = v133 + 1;
LABEL_292:
        *(_DWORD *)(a1 + 388) |= 0x4000u;
        uint64_t v134 = *(void *)(a1 + 112);
        if (!v134) {
          operator new();
        }
        v415[0] = 0;
        v135 = (char *)*((void *)this + 1);
        if ((unint64_t)v135 >= *((void *)this + 2) || *v135 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v135;
          unint64_t *v5 = v135 + 1;
        }
        int v136 = *((_DWORD *)this + 14);
        int v137 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v136 + 1;
        if (v136 >= v137) {
          return 0;
        }
        int v138 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000CB29C(v134, this, v139) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v138);
        int v140 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v140, 1);
        int v141 = v140 - 1;
        if (v141 < 0 == v41) {
          *((_DWORD *)this + 14) = v141;
        }
        v142 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v142 <= 1 || *v142 != 130 || v142[1] != 1) {
          continue;
        }
        unint64_t *v5 = (char *)(v142 + 2);
LABEL_307:
        *(_DWORD *)(a1 + 388) |= 0x8000u;
        uint64_t v143 = *(void *)(a1 + 120);
        if (!v143) {
          operator new();
        }
        v415[0] = 0;
        v144 = (char *)*((void *)this + 1);
        if ((unint64_t)v144 >= *((void *)this + 2) || *v144 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v144;
          unint64_t *v5 = v144 + 1;
        }
        int v145 = *((_DWORD *)this + 14);
        int v146 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v145 + 1;
        if (v145 >= v146) {
          return 0;
        }
        int v147 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000C63C8(v143, this, v148) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v147);
        int v149 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v149, 1);
        int v150 = v149 - 1;
        if (v150 < 0 == v41) {
          *((_DWORD *)this + 14) = v150;
        }
        v151 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v151 <= 1 || *v151 != 138 || v151[1] != 1) {
          continue;
        }
        unint64_t *v5 = (char *)(v151 + 2);
LABEL_322:
        *(_DWORD *)(a1 + 388) |= 0x10000u;
        uint64_t v152 = *(void *)(a1 + 128);
        if (!v152) {
          operator new();
        }
        v415[0] = 0;
        v153 = (char *)*((void *)this + 1);
        if ((unint64_t)v153 >= *((void *)this + 2) || *v153 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v153;
          unint64_t *v5 = v153 + 1;
        }
        int v154 = *((_DWORD *)this + 14);
        int v155 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v154 + 1;
        if (v154 >= v155) {
          return 0;
        }
        int v156 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000C6894(v152, this, v157) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v156);
        int v158 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v158, 1);
        int v159 = v158 - 1;
        if (v159 < 0 == v41) {
          *((_DWORD *)this + 14) = v159;
        }
        v160 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v160 <= 1 || *v160 != 146 || v160[1] != 1) {
          continue;
        }
        unint64_t *v5 = (char *)(v160 + 2);
LABEL_337:
        *(_DWORD *)(a1 + 388) |= 0x20000u;
        v161 = *(int **)(a1 + 136);
        if (!v161) {
          operator new();
        }
        v415[0] = 0;
        v162 = (char *)*((void *)this + 1);
        if ((unint64_t)v162 >= *((void *)this + 2) || *v162 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v162;
          unint64_t *v5 = v162 + 1;
        }
        int v163 = *((_DWORD *)this + 14);
        int v164 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v163 + 1;
        if (v163 >= v164) {
          return 0;
        }
        int v165 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000C6C58(v161, this, v166) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v165);
        int v167 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v167, 1);
        int v168 = v167 - 1;
        if (v168 < 0 == v41) {
          *((_DWORD *)this + 14) = v168;
        }
        v169 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v169 <= 1 || *v169 != 154 || v169[1] != 1) {
          continue;
        }
        unint64_t *v5 = (char *)(v169 + 2);
LABEL_352:
        *(_DWORD *)(a1 + 388) |= 0x40000u;
        uint64_t v170 = *(void *)(a1 + 144);
        if (!v170) {
          operator new();
        }
        v415[0] = 0;
        v171 = (char *)*((void *)this + 1);
        if ((unint64_t)v171 >= *((void *)this + 2) || *v171 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v171;
          unint64_t *v5 = v171 + 1;
        }
        int v172 = *((_DWORD *)this + 14);
        int v173 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v172 + 1;
        if (v172 >= v173) {
          return 0;
        }
        int v174 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000C7CB8(v170, this, v175) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v174);
        int v176 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v176, 1);
        int v177 = v176 - 1;
        if (v177 < 0 == v41) {
          *((_DWORD *)this + 14) = v177;
        }
        v178 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v178 <= 1 || *v178 != 162 || v178[1] != 1) {
          continue;
        }
        unint64_t *v5 = (char *)(v178 + 2);
LABEL_367:
        *(_DWORD *)(a1 + 388) |= 0x80000u;
        uint64_t v179 = *(void *)(a1 + 152);
        if (!v179) {
          operator new();
        }
        v415[0] = 0;
        v180 = (char *)*((void *)this + 1);
        if ((unint64_t)v180 >= *((void *)this + 2) || *v180 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v180;
          unint64_t *v5 = v180 + 1;
        }
        int v181 = *((_DWORD *)this + 14);
        int v182 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v181 + 1;
        if (v181 >= v182) {
          return 0;
        }
        int v183 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000C5CC0(v179, this, v184) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v183);
        int v185 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v185, 1);
        int v186 = v185 - 1;
        if (v186 < 0 == v41) {
          *((_DWORD *)this + 14) = v186;
        }
        v187 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v187 <= 1 || *v187 != 170 || v187[1] != 1) {
          continue;
        }
        unint64_t *v5 = (char *)(v187 + 2);
LABEL_382:
        *(_DWORD *)(a1 + 388) |= 0x100000u;
        uint64_t v188 = *(void *)(a1 + 160);
        if (!v188) {
          operator new();
        }
        v415[0] = 0;
        v189 = (char *)*((void *)this + 1);
        if ((unint64_t)v189 >= *((void *)this + 2) || *v189 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v189;
          unint64_t *v5 = v189 + 1;
        }
        int v190 = *((_DWORD *)this + 14);
        int v191 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v190 + 1;
        if (v190 >= v191) {
          return 0;
        }
        int v192 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000C7FA4(v188, this, v193) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v192);
        int v194 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v194, 1);
        int v195 = v194 - 1;
        if (v195 < 0 == v41) {
          *((_DWORD *)this + 14) = v195;
        }
        v196 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v196 <= 1 || *v196 != 178 || v196[1] != 1) {
          continue;
        }
        unint64_t *v5 = (char *)(v196 + 2);
LABEL_397:
        *(_DWORD *)(a1 + 388) |= 0x200000u;
        uint64_t v197 = *(void *)(a1 + 168);
        if (!v197) {
          operator new();
        }
        v415[0] = 0;
        v198 = (char *)*((void *)this + 1);
        if ((unint64_t)v198 >= *((void *)this + 2) || *v198 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v198;
          unint64_t *v5 = v198 + 1;
        }
        int v199 = *((_DWORD *)this + 14);
        int v200 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v199 + 1;
        if (v199 >= v200) {
          return 0;
        }
        int v201 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000CBB08(v197, this, v202) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v201);
        int v203 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v203, 1);
        int v204 = v203 - 1;
        if (v204 < 0 == v41) {
          *((_DWORD *)this + 14) = v204;
        }
        v205 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v205 <= 1 || *v205 != 186 || v205[1] != 1) {
          continue;
        }
        unint64_t *v5 = (char *)(v205 + 2);
LABEL_412:
        *(_DWORD *)(a1 + 388) |= 0x400000u;
        v206 = *(unsigned int **)(a1 + 176);
        if (!v206) {
          operator new();
        }
        v415[0] = 0;
        v207 = (char *)*((void *)this + 1);
        if ((unint64_t)v207 >= *((void *)this + 2) || *v207 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v207;
          unint64_t *v5 = v207 + 1;
        }
        int v208 = *((_DWORD *)this + 14);
        int v209 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v208 + 1;
        if (v208 >= v209) {
          return 0;
        }
        int v210 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000CBF10(v206, this, v211) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v210);
        int v212 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v212, 1);
        int v213 = v212 - 1;
        if (v213 < 0 == v41) {
          *((_DWORD *)this + 14) = v213;
        }
        v214 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v214 <= 1 || *v214 != 194 || v214[1] != 1) {
          continue;
        }
        unint64_t *v5 = (char *)(v214 + 2);
LABEL_427:
        *(_DWORD *)(a1 + 388) |= 0x800000u;
        uint64_t v215 = *(void *)(a1 + 184);
        if (!v215) {
          operator new();
        }
        v415[0] = 0;
        v216 = (char *)*((void *)this + 1);
        if ((unint64_t)v216 >= *((void *)this + 2) || *v216 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v216;
          unint64_t *v5 = v216 + 1;
        }
        int v217 = *((_DWORD *)this + 14);
        int v218 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v217 + 1;
        if (v217 >= v218) {
          return 0;
        }
        int v219 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000CC6F8(v215, this, v220) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v219);
        int v221 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v221, 1);
        int v222 = v221 - 1;
        if (v222 < 0 == v41) {
          *((_DWORD *)this + 14) = v222;
        }
        v223 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v223 <= 1 || *v223 != 202 || v223[1] != 1) {
          continue;
        }
        unint64_t *v5 = (char *)(v223 + 2);
LABEL_442:
        *(_DWORD *)(a1 + 388) |= 0x1000000u;
        uint64_t v224 = *(void *)(a1 + 192);
        if (!v224) {
          operator new();
        }
        v415[0] = 0;
        v225 = (char *)*((void *)this + 1);
        if ((unint64_t)v225 >= *((void *)this + 2) || *v225 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v225;
          unint64_t *v5 = v225 + 1;
        }
        int v226 = *((_DWORD *)this + 14);
        int v227 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v226 + 1;
        if (v226 >= v227) {
          return 0;
        }
        int v228 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000CCA24(v224, this, v229) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v228);
        int v230 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v230, 1);
        int v231 = v230 - 1;
        if (v231 < 0 == v41) {
          *((_DWORD *)this + 14) = v231;
        }
        v232 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v232 <= 1 || *v232 != 210 || v232[1] != 1) {
          continue;
        }
        unint64_t *v5 = (char *)(v232 + 2);
LABEL_457:
        *(_DWORD *)(a1 + 388) |= 0x2000000u;
        uint64_t v233 = *(void *)(a1 + 200);
        if (!v233) {
          operator new();
        }
        v415[0] = 0;
        v234 = (char *)*((void *)this + 1);
        if ((unint64_t)v234 >= *((void *)this + 2) || *v234 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v234;
          unint64_t *v5 = v234 + 1;
        }
        int v235 = *((_DWORD *)this + 14);
        int v236 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v235 + 1;
        if (v235 >= v236) {
          return 0;
        }
        int v237 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000CCDB4(v233, this, v238) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v237);
        int v239 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v239, 1);
        int v240 = v239 - 1;
        if (v240 < 0 == v41) {
          *((_DWORD *)this + 14) = v240;
        }
        v241 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v241 <= 1 || *v241 != 218 || v241[1] != 1) {
          continue;
        }
        unint64_t *v5 = (char *)(v241 + 2);
LABEL_472:
        *(_DWORD *)(a1 + 388) |= 0x4000000u;
        uint64_t v242 = *(void *)(a1 + 208);
        if (!v242) {
          operator new();
        }
        v415[0] = 0;
        v243 = (char *)*((void *)this + 1);
        if ((unint64_t)v243 >= *((void *)this + 2) || *v243 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v243;
          unint64_t *v5 = v243 + 1;
        }
        int v244 = *((_DWORD *)this + 14);
        int v245 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v244 + 1;
        if (v244 >= v245) {
          return 0;
        }
        int v246 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000D1208(v242, this, v247) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v246);
        int v248 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v248, 1);
        int v249 = v248 - 1;
        if (v249 < 0 == v41) {
          *((_DWORD *)this + 14) = v249;
        }
        v250 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v250 <= 1 || *v250 != 226 || v250[1] != 1) {
          continue;
        }
        unint64_t *v5 = (char *)(v250 + 2);
LABEL_487:
        *(_DWORD *)(a1 + 388) |= 0x8000000u;
        uint64_t v251 = *(void *)(a1 + 216);
        if (!v251) {
          operator new();
        }
        v415[0] = 0;
        v252 = (char *)*((void *)this + 1);
        if ((unint64_t)v252 >= *((void *)this + 2) || *v252 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v252;
          unint64_t *v5 = v252 + 1;
        }
        int v253 = *((_DWORD *)this + 14);
        int v254 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v253 + 1;
        if (v253 >= v254) {
          return 0;
        }
        int v255 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000D3CC4(v251, this, v256) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v255);
        int v257 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v257, 1);
        int v258 = v257 - 1;
        if (v258 < 0 == v41) {
          *((_DWORD *)this + 14) = v258;
        }
        v259 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v259 <= 1 || *v259 != 234 || v259[1] != 1) {
          continue;
        }
        unint64_t *v5 = (char *)(v259 + 2);
LABEL_502:
        *(_DWORD *)(a1 + 388) |= 0x10000000u;
        uint64_t v260 = *(void *)(a1 + 224);
        if (!v260) {
          operator new();
        }
        v415[0] = 0;
        v261 = (char *)*((void *)this + 1);
        if ((unint64_t)v261 >= *((void *)this + 2) || *v261 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v261;
          unint64_t *v5 = v261 + 1;
        }
        int v262 = *((_DWORD *)this + 14);
        int v263 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v262 + 1;
        if (v262 >= v263) {
          return 0;
        }
        int v264 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000D1D98(v260, this, v265) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v264);
        int v266 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v266, 1);
        int v267 = v266 - 1;
        if (v267 < 0 == v41) {
          *((_DWORD *)this + 14) = v267;
        }
        v268 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v268 <= 1 || *v268 != 242 || v268[1] != 1) {
          continue;
        }
        unint64_t *v5 = (char *)(v268 + 2);
LABEL_517:
        *(_DWORD *)(a1 + 388) |= 0x20000000u;
        uint64_t v269 = *(void *)(a1 + 232);
        if (!v269) {
          operator new();
        }
        v415[0] = 0;
        v270 = (char *)*((void *)this + 1);
        if ((unint64_t)v270 >= *((void *)this + 2) || *v270 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v270;
          unint64_t *v5 = v270 + 1;
        }
        int v271 = *((_DWORD *)this + 14);
        int v272 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v271 + 1;
        if (v271 >= v272) {
          return 0;
        }
        int v273 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000CB6FC(v269, this, v274) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v273);
        int v275 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v275, 1);
        int v276 = v275 - 1;
        if (v276 < 0 == v41) {
          *((_DWORD *)this + 14) = v276;
        }
        v277 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v277 <= 1 || *v277 != 250 || v277[1] != 1) {
          continue;
        }
        unint64_t *v5 = (char *)(v277 + 2);
LABEL_532:
        *(_DWORD *)(a1 + 388) |= 0x40000000u;
        uint64_t v278 = *(void *)(a1 + 240);
        if (!v278) {
          operator new();
        }
        v415[0] = 0;
        v279 = (char *)*((void *)this + 1);
        if ((unint64_t)v279 >= *((void *)this + 2) || *v279 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v279;
          unint64_t *v5 = v279 + 1;
        }
        int v280 = *((_DWORD *)this + 14);
        int v281 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v280 + 1;
        if (v280 >= v281) {
          return 0;
        }
        int v282 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!sub_1000CC32C(v278, this, v283) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v282);
        int v284 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v284, 1);
        int v285 = v284 - 1;
        if (v285 < 0 == v41) {
          *((_DWORD *)this + 14) = v285;
        }
        v286 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v286 <= 1 || *v286 != 146 || v286[1] != 3) {
          continue;
        }
        unint64_t *v5 = (char *)(v286 + 2);
LABEL_547:
        *(_DWORD *)(a1 + 388) |= 0x80000000;
        v287 = *(proto::gnss::Emergency::EmergConfig **)(a1 + 248);
        if (!v287) {
          operator new();
        }
        v415[0] = 0;
        v288 = (char *)*((void *)this + 1);
        if ((unint64_t)v288 >= *((void *)this + 2) || *v288 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v288;
          unint64_t *v5 = v288 + 1;
        }
        int v289 = *((_DWORD *)this + 14);
        int v290 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v289 + 1;
        if (v289 >= v290) {
          return 0;
        }
        int v291 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!proto::gnss::Emergency::EmergConfig::MergePartialFromCodedStream(v287, this, v292)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v291);
        int v293 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v293, 1);
        int v294 = v293 - 1;
        if (v294 < 0 == v41) {
          *((_DWORD *)this + 14) = v294;
        }
        v295 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v295 <= 1 || *v295 != 226 || v295[1] != 3) {
          continue;
        }
        unint64_t *v5 = (char *)(v295 + 2);
LABEL_562:
        *(_DWORD *)(a1 + 392) |= 1u;
        v296 = *(proto::gnss::Emergency::PositionRequest **)(a1 + 256);
        if (!v296) {
          operator new();
        }
        v415[0] = 0;
        v297 = (char *)*((void *)this + 1);
        if ((unint64_t)v297 >= *((void *)this + 2) || *v297 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v297;
          unint64_t *v5 = v297 + 1;
        }
        int v298 = *((_DWORD *)this + 14);
        int v299 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v298 + 1;
        if (v298 >= v299) {
          return 0;
        }
        int v300 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!proto::gnss::Emergency::PositionRequest::MergePartialFromCodedStream(v296, this, v301)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v300);
        int v302 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v302, 1);
        int v303 = v302 - 1;
        if (v303 < 0 == v41) {
          *((_DWORD *)this + 14) = v303;
        }
        v304 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        if ((int)v19 - (int)v304 <= 1 || *v304 != 232 || v304[1] != 3) {
          continue;
        }
        uint64_t v20 = (char *)(v304 + 2);
        unint64_t *v5 = v20;
LABEL_577:
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          v305 = (char *)*((void *)this + 1);
          unint64_t v19 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v9 = *v20;
          v305 = v20 + 1;
          unint64_t *v5 = v305;
        }
        int v21 = *(_DWORD *)(a1 + 392) | 2;
        *(_DWORD *)(a1 + 392) = v21;
        if ((int)v19 - (int)v305 < 2 || *v305 != 242 || v305[1] != 3) {
          continue;
        }
        unint64_t *v5 = v305 + 2;
LABEL_586:
        *(_DWORD *)(a1 + 392) = v21 | 4;
        v306 = *(proto::gnss::Emergency::GpsReferenceTime **)(a1 + 264);
        if (!v306) {
          operator new();
        }
        v415[0] = 0;
        v307 = (char *)*((void *)this + 1);
        if ((unint64_t)v307 >= *((void *)this + 2) || *v307 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v307;
          unint64_t *v5 = v307 + 1;
        }
        int v308 = *((_DWORD *)this + 14);
        int v309 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v308 + 1;
        if (v308 >= v309) {
          return 0;
        }
        int v310 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!proto::gnss::Emergency::GpsReferenceTime::MergePartialFromCodedStream(v306, this, v311)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v310);
        int v312 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v312, 1);
        int v313 = v312 - 1;
        if (v313 < 0 == v41) {
          *((_DWORD *)this + 14) = v313;
        }
        v314 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v314 <= 1 || *v314 != 250 || v314[1] != 3) {
          continue;
        }
        unint64_t *v5 = (char *)(v314 + 2);
LABEL_601:
        *(_DWORD *)(a1 + 392) |= 8u;
        v315 = *(proto::gnss::Emergency::ReferenceLocation **)(a1 + 272);
        if (!v315) {
          operator new();
        }
        v415[0] = 0;
        v316 = (char *)*((void *)this + 1);
        if ((unint64_t)v316 >= *((void *)this + 2) || *v316 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v316;
          unint64_t *v5 = v316 + 1;
        }
        int v317 = *((_DWORD *)this + 14);
        int v318 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v317 + 1;
        if (v317 >= v318) {
          return 0;
        }
        int v319 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!proto::gnss::Emergency::ReferenceLocation::MergePartialFromCodedStream(v315, this, v320)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v319);
        int v321 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v321, 1);
        int v322 = v321 - 1;
        if (v322 < 0 == v41) {
          *((_DWORD *)this + 14) = v322;
        }
        v323 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v323 <= 1 || *v323 != 130 || v323[1] != 4) {
          continue;
        }
        unint64_t *v5 = (char *)(v323 + 2);
LABEL_616:
        *(_DWORD *)(a1 + 392) |= 0x10u;
        v324 = *(proto::gnss::Emergency::GpsNavigationModel **)(a1 + 280);
        if (!v324) {
          operator new();
        }
        v415[0] = 0;
        v325 = (char *)*((void *)this + 1);
        if ((unint64_t)v325 >= *((void *)this + 2) || *v325 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v325;
          unint64_t *v5 = v325 + 1;
        }
        int v326 = *((_DWORD *)this + 14);
        int v327 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v326 + 1;
        if (v326 >= v327) {
          return 0;
        }
        int v328 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!proto::gnss::Emergency::GpsNavigationModel::MergePartialFromCodedStream(v324, this, v329)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v328);
        int v330 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v330, 1);
        int v331 = v330 - 1;
        if (v331 < 0 == v41) {
          *((_DWORD *)this + 14) = v331;
        }
        v332 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v332 <= 1 || *v332 != 138 || v332[1] != 4) {
          continue;
        }
        unint64_t *v5 = (char *)(v332 + 2);
LABEL_631:
        *(_DWORD *)(a1 + 392) |= 0x20u;
        v333 = *(proto::gnss::Emergency::GpsAcqAssistance **)(a1 + 288);
        if (!v333) {
          operator new();
        }
        v415[0] = 0;
        v334 = (char *)*((void *)this + 1);
        if ((unint64_t)v334 >= *((void *)this + 2) || *v334 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v334;
          unint64_t *v5 = v334 + 1;
        }
        int v335 = *((_DWORD *)this + 14);
        int v336 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v335 + 1;
        if (v335 >= v336) {
          return 0;
        }
        int v337 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!proto::gnss::Emergency::GpsAcqAssistance::MergePartialFromCodedStream(v333, this, v338)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v337);
        int v339 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v339, 1);
        int v340 = v339 - 1;
        if (v340 < 0 == v41) {
          *((_DWORD *)this + 14) = v340;
        }
        v341 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v341 <= 1 || *v341 != 146 || v341[1] != 4) {
          continue;
        }
        unint64_t *v5 = (char *)(v341 + 2);
LABEL_646:
        *(_DWORD *)(a1 + 392) |= 0x40u;
        v342 = *(proto::gnss::Emergency::CellFTAssistance **)(a1 + 304);
        if (!v342) {
          operator new();
        }
        v415[0] = 0;
        v343 = (char *)*((void *)this + 1);
        if ((unint64_t)v343 >= *((void *)this + 2) || *v343 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v343;
          unint64_t *v5 = v343 + 1;
        }
        int v344 = *((_DWORD *)this + 14);
        int v345 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v344 + 1;
        if (v344 >= v345) {
          return 0;
        }
        int v346 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!proto::gnss::Emergency::CellFTAssistance::MergePartialFromCodedStream(v342, this, v347)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v346);
        int v348 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v348, 1);
        int v349 = v348 - 1;
        if (v349 < 0 == v41) {
          *((_DWORD *)this + 14) = v349;
        }
        v350 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v350 <= 1 || *v350 != 154 || v350[1] != 4) {
          continue;
        }
        unint64_t *v5 = (char *)(v350 + 2);
LABEL_661:
        *(_DWORD *)(a1 + 392) |= 0x80u;
        v351 = *(proto::gnss::Emergency::CplaneContext **)(a1 + 312);
        if (!v351) {
          operator new();
        }
        v415[0] = 0;
        v352 = (char *)*((void *)this + 1);
        if ((unint64_t)v352 >= *((void *)this + 2) || *v352 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
        }
          }
        else
        {
          v415[0] = *v352;
          unint64_t *v5 = v352 + 1;
        }
        int v353 = *((_DWORD *)this + 14);
        int v354 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v353 + 1;
        if (v353 >= v354) {
          return 0;
        }
        int v355 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
        if (!proto::gnss::Emergency::CplaneContext::MergePartialFromCodedStream(v351, this, v356)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v355);
        int v357 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v357, 1);
        int v358 = v357 - 1;
        if (v358 < 0 == v41) {
          *((_DWORD *)this + 14) = v358;
        }
        v359 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        if ((int)v22 - (int)v359 > 1)
        {
          int v360 = *v359;
          goto LABEL_696;
        }
        continue;
      case 3u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_108;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_128;
      case 4u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_138;
        }
        goto LABEL_108;
      case 5u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_152;
        }
        goto LABEL_108;
      case 6u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_166;
        }
        goto LABEL_108;
      case 7u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_180;
        }
        goto LABEL_108;
      case 8u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_194;
        }
        goto LABEL_108;
      case 9u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_208;
        }
        goto LABEL_108;
      case 0xAu:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_222;
        }
        goto LABEL_108;
      case 0xBu:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_236;
        }
        goto LABEL_108;
      case 0xCu:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_250;
        }
        goto LABEL_108;
      case 0xDu:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_264;
        }
        goto LABEL_108;
      case 0xEu:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_278;
        }
        goto LABEL_108;
      case 0xFu:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_292;
        }
        goto LABEL_108;
      case 0x10u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_307;
        }
        goto LABEL_108;
      case 0x11u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_322;
        }
        goto LABEL_108;
      case 0x12u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_337;
        }
        goto LABEL_108;
      case 0x13u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_352;
        }
        goto LABEL_108;
      case 0x14u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_367;
        }
        goto LABEL_108;
      case 0x15u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_382;
        }
        goto LABEL_108;
      case 0x16u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_397;
        }
        goto LABEL_108;
      case 0x17u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_412;
        }
        goto LABEL_108;
      case 0x18u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_427;
        }
        goto LABEL_108;
      case 0x19u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_442;
        }
        goto LABEL_108;
      case 0x1Au:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_457;
        }
        goto LABEL_108;
      case 0x1Bu:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_472;
        }
        goto LABEL_108;
      case 0x1Cu:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_487;
        }
        goto LABEL_108;
      case 0x1Du:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_502;
        }
        goto LABEL_108;
      case 0x1Eu:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_517;
        }
        goto LABEL_108;
      case 0x1Fu:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_532;
        }
        goto LABEL_108;
      case 0x32u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_547;
        }
        goto LABEL_108;
      case 0x3Cu:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_562;
        }
        goto LABEL_108;
      case 0x3Du:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_108;
        }
        uint64_t v20 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        goto LABEL_577;
      case 0x3Eu:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_108;
        }
        int v21 = *(_DWORD *)(a1 + 392);
        goto LABEL_586;
      case 0x3Fu:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_601;
        }
        goto LABEL_108;
      case 0x40u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_616;
        }
        goto LABEL_108;
      case 0x41u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_631;
        }
        goto LABEL_108;
      case 0x42u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_646;
        }
        goto LABEL_108;
      case 0x43u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_661;
        }
        goto LABEL_108;
      case 0x46u:
        int v13 = TagFallback & 7;
        if (v13 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            uint64_t v23 = (char *)*((void *)this + 1);
            unint64_t v22 = *((void *)this + 2);
            goto LABEL_676;
          }
          goto LABEL_108;
        }
        uint64_t result = sub_10005630C(this, v7);
        if (!result) {
          return result;
        }
        while (1)
        {
          v359 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
          if ((int)v22 - (int)v359 < 2) {
            goto LABEL_2;
          }
          int v360 = *v359;
          if (v360 == 186) {
            break;
          }
LABEL_696:
          if (v360 != 176 || v359[1] != 4) {
            goto LABEL_2;
          }
          uint64_t v23 = (char *)(v359 + 2);
          unint64_t *v5 = v23;
LABEL_676:
          unsigned int v414 = 0;
          if ((unint64_t)v23 >= v22 || *v23 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v414))return 0; {
          }
            }
          else
          {
            unsigned int v414 = *v23;
            unint64_t *v5 = v23 + 1;
          }
          int v361 = *(_DWORD *)(a1 + 328);
          if (v361 == *(_DWORD *)(a1 + 332))
          {
            sub_10002D764(v7, v361 + 1);
            int v361 = *(_DWORD *)(a1 + 328);
          }
          unsigned int v362 = v414;
          uint64_t v363 = *(void *)(a1 + 320);
          *(_DWORD *)(a1 + 328) = v361 + 1;
          *(_DWORD *)(v363 + 4 * v361) = v362;
          int v364 = *(_DWORD *)(a1 + 332) - *(_DWORD *)(a1 + 328);
          if (v364 >= 1)
          {
            int v365 = v364 + 1;
            do
            {
              v366 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v367 = *((void *)this + 2);
              if ((int)v367 - (int)v366 < 2 || *v366 != 176 || v366[1] != 4) {
                break;
              }
              unint64_t *v5 = (char *)(v366 + 2);
              if ((unint64_t)(v366 + 2) >= v367 || (char)v366[2] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v414))return 0; {
              }
                }
              else
              {
                unsigned int v414 = v366[2];
                unint64_t *v5 = (char *)(v366 + 3);
              }
              int v368 = *(_DWORD *)(a1 + 328);
              if (v368 >= *(_DWORD *)(a1 + 332))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v415);
                int v368 = *(_DWORD *)(a1 + 328);
              }
              unsigned int v369 = v414;
              uint64_t v370 = *(void *)(a1 + 320);
              *(_DWORD *)(a1 + 328) = v368 + 1;
              *(_DWORD *)(v370 + 4 * v368) = v369;
              --v365;
            }
            while (v365 > 1);
          }
        }
        if (v359[1] == 4)
        {
          unint64_t *v5 = (char *)(v359 + 2);
LABEL_700:
          *(_DWORD *)(a1 + 392) |= 0x200u;
          v371 = *(proto::gnss::Emergency::LocationId **)(a1 + 336);
          if (!v371) {
            operator new();
          }
          v415[0] = 0;
          v372 = (char *)*((void *)this + 1);
          if ((unint64_t)v372 >= *((void *)this + 2) || *v372 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
          }
            }
          else
          {
            v415[0] = *v372;
            unint64_t *v5 = v372 + 1;
          }
          int v373 = *((_DWORD *)this + 14);
          int v374 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v373 + 1;
          if (v373 >= v374) {
            return 0;
          }
          int v375 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
          if (!proto::gnss::Emergency::LocationId::MergePartialFromCodedStream(v371, this, v376)
            || !*((unsigned char *)this + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v375);
          int v377 = *((_DWORD *)this + 14);
          BOOL v41 = __OFSUB__(v377, 1);
          int v378 = v377 - 1;
          if (v378 < 0 == v41) {
            *((_DWORD *)this + 14) = v378;
          }
          v379 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
          if ((int)v24 - (int)v379 > 1 && *v379 == 192 && v379[1] == 4)
          {
            uint64_t v25 = (char *)(v379 + 2);
            unint64_t *v5 = v25;
LABEL_715:
            if ((unint64_t)v25 >= v24 || *v25 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
              if (!result) {
                return result;
              }
              v380 = (char *)*((void *)this + 1);
              unint64_t v24 = *((void *)this + 2);
            }
            else
            {
              *int v10 = *v25;
              v380 = v25 + 1;
              unint64_t *v5 = v380;
            }
            *(_DWORD *)(a1 + 392) |= 0x400u;
            if ((int)v24 - (int)v380 >= 2)
            {
              int v381 = *v380;
              goto LABEL_744;
            }
          }
        }
        continue;
      case 0x47u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_700;
        }
        goto LABEL_108;
      case 0x48u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_108;
        }
        uint64_t v25 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_715;
      case 0x49u:
        int v13 = TagFallback & 7;
        if (v13 == 2)
        {
          uint64_t result = sub_10005630C(this, v6);
          if (!result) {
            return result;
          }
          while (1)
          {
            v380 = (char *)*((void *)this + 1);
            unint64_t v24 = *((void *)this + 2);
            if ((int)v24 - (int)v380 < 2) {
              goto LABEL_2;
            }
            int v381 = *v380;
            if (v381 == 208) {
              break;
            }
LABEL_744:
            if (v381 != 200 || v380[1] != 4) {
              goto LABEL_2;
            }
            uint64_t v26 = v380 + 2;
            unint64_t *v5 = v26;
LABEL_724:
            unsigned int v414 = 0;
            if ((unint64_t)v26 >= v24 || *v26 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v414))return 0; {
            }
              }
            else
            {
              unsigned int v414 = *v26;
              unint64_t *v5 = v26 + 1;
            }
            int v382 = *(_DWORD *)(a1 + 352);
            if (v382 == *(_DWORD *)(a1 + 356))
            {
              sub_10002D764(v6, v382 + 1);
              int v382 = *(_DWORD *)(a1 + 352);
            }
            unsigned int v383 = v414;
            uint64_t v384 = *(void *)(a1 + 344);
            *(_DWORD *)(a1 + 352) = v382 + 1;
            *(_DWORD *)(v384 + 4 * v382) = v383;
            int v385 = *(_DWORD *)(a1 + 356) - *(_DWORD *)(a1 + 352);
            if (v385 >= 1)
            {
              int v386 = v385 + 1;
              do
              {
                v387 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v388 = *((void *)this + 2);
                if ((int)v388 - (int)v387 < 2 || *v387 != 200 || v387[1] != 4) {
                  break;
                }
                unint64_t *v5 = (char *)(v387 + 2);
                if ((unint64_t)(v387 + 2) >= v388 || (char)v387[2] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v414))return 0; {
                }
                  }
                else
                {
                  unsigned int v414 = v387[2];
                  unint64_t *v5 = (char *)(v387 + 3);
                }
                int v389 = *(_DWORD *)(a1 + 352);
                if (v389 >= *(_DWORD *)(a1 + 356))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v415);
                  int v389 = *(_DWORD *)(a1 + 352);
                }
                unsigned int v390 = v414;
                uint64_t v391 = *(void *)(a1 + 344);
                *(_DWORD *)(a1 + 352) = v389 + 1;
                *(_DWORD *)(v391 + 4 * v389) = v390;
                --v386;
              }
              while (v386 > 1);
            }
          }
          if (v380[1] == 4)
          {
            uint64_t v27 = v380 + 2;
            unint64_t *v5 = v27;
LABEL_748:
            v415[0] = 0;
            if ((unint64_t)v27 >= v24 || *v27 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415);
              if (!result) {
                return result;
              }
              unsigned int v392 = v415[0];
              v393 = (char *)*((void *)this + 1);
              unint64_t v24 = *((void *)this + 2);
            }
            else
            {
              unsigned int v392 = *v27;
              v393 = v27 + 1;
              unint64_t *v5 = v393;
            }
            *(unsigned char *)(a1 + 360) = v392 != 0;
            *(_DWORD *)(a1 + 392) |= 0x1000u;
            if ((int)v24 - (int)v393 >= 2 && *v393 == 216 && v393[1] == 4)
            {
              uint64_t v28 = v393 + 2;
              unint64_t *v5 = v28;
LABEL_757:
              if ((unint64_t)v28 >= v24 || *v28 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v413);
                if (!result) {
                  return result;
                }
                v394 = (char *)*((void *)this + 1);
                unint64_t v24 = *((void *)this + 2);
              }
              else
              {
                unsigned int *v413 = *v28;
                v394 = v28 + 1;
                unint64_t *v5 = v394;
              }
              int v29 = *(_DWORD *)(a1 + 392) | 0x2000;
              *(_DWORD *)(a1 + 392) = v29;
              if ((int)v24 - (int)v394 >= 2 && *v394 == 226 && v394[1] == 4)
              {
                unint64_t *v5 = v394 + 2;
LABEL_766:
                *(_DWORD *)(a1 + 392) = v29 | 0x4000;
                v395 = *(proto::gnss::Emergency::SuplContext **)(a1 + 368);
                if (!v395) {
                  operator new();
                }
                v415[0] = 0;
                v396 = (char *)*((void *)this + 1);
                if ((unint64_t)v396 >= *((void *)this + 2) || *v396 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
                }
                  }
                else
                {
                  v415[0] = *v396;
                  unint64_t *v5 = v396 + 1;
                }
                int v397 = *((_DWORD *)this + 14);
                int v398 = *((_DWORD *)this + 15);
                *((_DWORD *)this + 14) = v397 + 1;
                if (v397 >= v398) {
                  return 0;
                }
                int v399 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
                if (!proto::gnss::Emergency::SuplContext::MergePartialFromCodedStream(v395, this, v400)
                  || !*((unsigned char *)this + 36))
                {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v399);
                int v401 = *((_DWORD *)this + 14);
                BOOL v41 = __OFSUB__(v401, 1);
                int v402 = v401 - 1;
                if (v402 < 0 == v41) {
                  *((_DWORD *)this + 14) = v402;
                }
                v403 = (unsigned __int8 *)*((void *)this + 1);
                if (*((_DWORD *)this + 4) - (int)v403 > 1 && *v403 == 234 && v403[1] == 4)
                {
                  unint64_t *v5 = (char *)(v403 + 2);
LABEL_781:
                  *(_DWORD *)(a1 + 392) |= 0x8000u;
                  v404 = *(proto::gnss::Emergency::WlanMeasurementList **)(a1 + 376);
                  if (!v404) {
                    operator new();
                  }
                  v415[0] = 0;
                  v405 = (char *)*((void *)this + 1);
                  if ((unint64_t)v405 >= *((void *)this + 2) || *v405 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v415))return 0; {
                  }
                    }
                  else
                  {
                    v415[0] = *v405;
                    unint64_t *v5 = v405 + 1;
                  }
                  int v406 = *((_DWORD *)this + 14);
                  int v407 = *((_DWORD *)this + 15);
                  *((_DWORD *)this + 14) = v406 + 1;
                  if (v406 >= v407) {
                    return 0;
                  }
                  int v408 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v415[0]);
                  if (!proto::gnss::Emergency::WlanMeasurementList::MergePartialFromCodedStream(v404, this, v409)|| !*((unsigned char *)this + 36))
                  {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v408);
                  int v410 = *((_DWORD *)this + 14);
                  BOOL v41 = __OFSUB__(v410, 1);
                  int v411 = v410 - 1;
                  if (v411 < 0 == v41) {
                    *((_DWORD *)this + 14) = v411;
                  }
                  if (*((void *)this + 1) == *((void *)this + 2)
                    && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                  {
                    *((_DWORD *)this + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)this + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          uint64_t v26 = (char *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
          goto LABEL_724;
        }
LABEL_108:
        if (v13 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      case 0x4Au:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_108;
        }
        uint64_t v27 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_748;
      case 0x4Bu:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_108;
        }
        uint64_t v28 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_757;
      case 0x4Cu:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_108;
        }
        int v29 = *(_DWORD *)(a1 + 392);
        goto LABEL_766;
      case 0x4Du:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_108;
        }
        goto LABEL_781;
      default:
        int v13 = TagFallback & 7;
        goto LABEL_108;
    }
  }
}

void sub_1000BCCF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000BCE48(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 388);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), (unint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 388);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_36;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 20), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_40;
  }
LABEL_37:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gpsd::Request::default_instance_ + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_43;
  }
LABEL_40:
  uint64_t v8 = *(void *)(v5 + 32);
  if (!v8) {
    uint64_t v8 = *(void *)(proto::gpsd::Request::default_instance_ + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_46;
  }
LABEL_43:
  uint64_t v9 = *(void *)(v5 + 40);
  if (!v9) {
    uint64_t v9 = *(void *)(proto::gpsd::Request::default_instance_ + 40);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_49;
  }
LABEL_46:
  uint64_t v10 = *(void *)(v5 + 48);
  if (!v10) {
    uint64_t v10 = *(void *)(proto::gpsd::Request::default_instance_ + 48);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_52;
  }
LABEL_49:
  uint64_t v11 = *(void *)(v5 + 56);
  if (!v11) {
    uint64_t v11 = *(void *)(proto::gpsd::Request::default_instance_ + 56);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_55;
  }
LABEL_52:
  uint64_t v12 = *(void *)(v5 + 64);
  if (!v12) {
    uint64_t v12 = *(void *)(proto::gpsd::Request::default_instance_ + 64);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_58;
  }
LABEL_55:
  uint64_t v13 = *(void *)(v5 + 72);
  if (!v13) {
    uint64_t v13 = *(void *)(proto::gpsd::Request::default_instance_ + 72);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v13, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_61;
  }
LABEL_58:
  uint64_t v14 = *(void *)(v5 + 80);
  if (!v14) {
    uint64_t v14 = *(void *)(proto::gpsd::Request::default_instance_ + 80);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v14, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_64;
  }
LABEL_61:
  uint64_t v15 = *(void *)(v5 + 88);
  if (!v15) {
    uint64_t v15 = *(void *)(proto::gpsd::Request::default_instance_ + 88);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v15, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_67;
  }
LABEL_64:
  uint64_t v16 = *(void *)(v5 + 96);
  if (!v16) {
    uint64_t v16 = *(void *)(proto::gpsd::Request::default_instance_ + 96);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v16, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_70;
  }
LABEL_67:
  uint64_t v17 = *(void *)(v5 + 104);
  if (!v17) {
    uint64_t v17 = *(void *)(proto::gpsd::Request::default_instance_ + 104);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v17, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_73;
  }
LABEL_70:
  uint64_t v18 = *(void *)(v5 + 112);
  if (!v18) {
    uint64_t v18 = *(void *)(proto::gpsd::Request::default_instance_ + 112);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v18, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_76;
  }
LABEL_73:
  uint64_t v19 = *(void *)(v5 + 120);
  if (!v19) {
    uint64_t v19 = *(void *)(proto::gpsd::Request::default_instance_ + 120);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v19, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_79;
  }
LABEL_76:
  uint64_t v20 = *(void *)(v5 + 128);
  if (!v20) {
    uint64_t v20 = *(void *)(proto::gpsd::Request::default_instance_ + 128);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v20, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_82;
  }
LABEL_79:
  uint64_t v21 = *(void *)(v5 + 136);
  if (!v21) {
    uint64_t v21 = *(void *)(proto::gpsd::Request::default_instance_ + 136);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v21, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_85;
  }
LABEL_82:
  uint64_t v22 = *(void *)(v5 + 144);
  if (!v22) {
    uint64_t v22 = *(void *)(proto::gpsd::Request::default_instance_ + 144);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v22, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_88;
  }
LABEL_85:
  uint64_t v23 = *(void *)(v5 + 152);
  if (!v23) {
    uint64_t v23 = *(void *)(proto::gpsd::Request::default_instance_ + 152);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, v23, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_91;
  }
LABEL_88:
  uint64_t v24 = *(void *)(v5 + 160);
  if (!v24) {
    uint64_t v24 = *(void *)(proto::gpsd::Request::default_instance_ + 160);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, v24, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_94;
  }
LABEL_91:
  uint64_t v25 = *(void *)(v5 + 168);
  if (!v25) {
    uint64_t v25 = *(void *)(proto::gpsd::Request::default_instance_ + 168);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, v25, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_97;
  }
LABEL_94:
  uint64_t v26 = *(void *)(v5 + 176);
  if (!v26) {
    uint64_t v26 = *(void *)(proto::gpsd::Request::default_instance_ + 176);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, v26, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_100;
  }
LABEL_97:
  uint64_t v27 = *(void *)(v5 + 184);
  if (!v27) {
    uint64_t v27 = *(void *)(proto::gpsd::Request::default_instance_ + 184);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v27, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_103;
  }
LABEL_100:
  uint64_t v28 = *(void *)(v5 + 192);
  if (!v28) {
    uint64_t v28 = *(void *)(proto::gpsd::Request::default_instance_ + 192);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, v28, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_106;
  }
LABEL_103:
  uint64_t v29 = *(void *)(v5 + 200);
  if (!v29) {
    uint64_t v29 = *(void *)(proto::gpsd::Request::default_instance_ + 200);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, v29, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_109;
  }
LABEL_106:
  uint64_t v30 = *(void *)(v5 + 208);
  if (!v30) {
    uint64_t v30 = *(void *)(proto::gpsd::Request::default_instance_ + 208);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, v30, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_112;
  }
LABEL_109:
  uint64_t v31 = *(void *)(v5 + 216);
  if (!v31) {
    uint64_t v31 = *(void *)(proto::gpsd::Request::default_instance_ + 216);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, v31, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_115;
  }
LABEL_112:
  uint64_t v32 = *(void *)(v5 + 224);
  if (!v32) {
    uint64_t v32 = *(void *)(proto::gpsd::Request::default_instance_ + 224);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, v32, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_118;
  }
LABEL_115:
  uint64_t v33 = *(void *)(v5 + 232);
  if (!v33) {
    uint64_t v33 = *(void *)(proto::gpsd::Request::default_instance_ + 232);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, v33, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_124;
    }
    goto LABEL_121;
  }
LABEL_118:
  uint64_t v34 = *(void *)(v5 + 240);
  if (!v34) {
    uint64_t v34 = *(void *)(proto::gpsd::Request::default_instance_ + 240);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, v34, a2, a4);
  if ((*(_DWORD *)(v5 + 388) & 0x80000000) != 0)
  {
LABEL_121:
    uint64_t v35 = *(void *)(v5 + 248);
    if (!v35) {
      uint64_t v35 = *(void *)(proto::gpsd::Request::default_instance_ + 248);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x32, v35, a2, a4);
  }
LABEL_124:
  int v36 = *(_DWORD *)(v5 + 392);
  if (v36)
  {
    uint64_t v37 = *(void *)(v5 + 256);
    if (!v37) {
      uint64_t v37 = *(void *)(proto::gpsd::Request::default_instance_ + 256);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3C, v37, a2, a4);
    int v36 = *(_DWORD *)(v5 + 392);
    if ((v36 & 2) == 0)
    {
LABEL_126:
      if ((v36 & 4) == 0) {
        goto LABEL_127;
      }
      goto LABEL_137;
    }
  }
  else if ((v36 & 2) == 0)
  {
    goto LABEL_126;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3D, *(_DWORD *)(v5 + 296), a2, a4);
  int v36 = *(_DWORD *)(v5 + 392);
  if ((v36 & 4) == 0)
  {
LABEL_127:
    if ((v36 & 8) == 0) {
      goto LABEL_128;
    }
    goto LABEL_140;
  }
LABEL_137:
  uint64_t v38 = *(void *)(v5 + 264);
  if (!v38) {
    uint64_t v38 = *(void *)(proto::gpsd::Request::default_instance_ + 264);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E, v38, a2, a4);
  int v36 = *(_DWORD *)(v5 + 392);
  if ((v36 & 8) == 0)
  {
LABEL_128:
    if ((v36 & 0x10) == 0) {
      goto LABEL_129;
    }
    goto LABEL_143;
  }
LABEL_140:
  uint64_t v39 = *(void *)(v5 + 272);
  if (!v39) {
    uint64_t v39 = *(void *)(proto::gpsd::Request::default_instance_ + 272);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F, v39, a2, a4);
  int v36 = *(_DWORD *)(v5 + 392);
  if ((v36 & 0x10) == 0)
  {
LABEL_129:
    if ((v36 & 0x20) == 0) {
      goto LABEL_130;
    }
    goto LABEL_146;
  }
LABEL_143:
  uint64_t v40 = *(void *)(v5 + 280);
  if (!v40) {
    uint64_t v40 = *(void *)(proto::gpsd::Request::default_instance_ + 280);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x40, v40, a2, a4);
  int v36 = *(_DWORD *)(v5 + 392);
  if ((v36 & 0x20) == 0)
  {
LABEL_130:
    if ((v36 & 0x40) == 0) {
      goto LABEL_131;
    }
    goto LABEL_149;
  }
LABEL_146:
  uint64_t v41 = *(void *)(v5 + 288);
  if (!v41) {
    uint64_t v41 = *(void *)(proto::gpsd::Request::default_instance_ + 288);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x41, v41, a2, a4);
  int v36 = *(_DWORD *)(v5 + 392);
  if ((v36 & 0x40) == 0)
  {
LABEL_131:
    if ((v36 & 0x80) == 0) {
      goto LABEL_155;
    }
    goto LABEL_152;
  }
LABEL_149:
  uint64_t v42 = *(void *)(v5 + 304);
  if (!v42) {
    uint64_t v42 = *(void *)(proto::gpsd::Request::default_instance_ + 304);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x42, v42, a2, a4);
  if ((*(_DWORD *)(v5 + 392) & 0x80) != 0)
  {
LABEL_152:
    uint64_t v43 = *(void *)(v5 + 312);
    if (!v43) {
      uint64_t v43 = *(void *)(proto::gpsd::Request::default_instance_ + 312);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x43, v43, a2, a4);
  }
LABEL_155:
  if (*(int *)(v5 + 328) >= 1)
  {
    uint64_t v44 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x46, *(_DWORD *)(*(void *)(v5 + 320) + 4 * v44++), a2, a4);
    while (v44 < *(int *)(v5 + 328));
  }
  int v45 = *(_DWORD *)(v5 + 392);
  if ((v45 & 0x200) != 0)
  {
    uint64_t v46 = *(void *)(v5 + 336);
    if (!v46) {
      uint64_t v46 = *(void *)(proto::gpsd::Request::default_instance_ + 336);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x47, v46, a2, a4);
    int v45 = *(_DWORD *)(v5 + 392);
  }
  if ((v45 & 0x400) != 0) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x48, *(_DWORD *)(v5 + 300), a2, a4);
  }
  if (*(int *)(v5 + 352) >= 1)
  {
    uint64_t v47 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x49, *(_DWORD *)(*(void *)(v5 + 344) + 4 * v47++), a2, a4);
    while (v47 < *(int *)(v5 + 352));
  }
  int v48 = *(_DWORD *)(v5 + 392);
  if ((v48 & 0x1000) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4A, *(unsigned __int8 *)(v5 + 360), (BOOL)a2, a4);
    int v48 = *(_DWORD *)(v5 + 392);
    if ((v48 & 0x2000) == 0)
    {
LABEL_169:
      if ((v48 & 0x4000) == 0) {
        goto LABEL_170;
      }
      goto LABEL_174;
    }
  }
  else if ((v48 & 0x2000) == 0)
  {
    goto LABEL_169;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4B, *(_DWORD *)(v5 + 364), a2, a4);
  int v48 = *(_DWORD *)(v5 + 392);
  if ((v48 & 0x4000) == 0)
  {
LABEL_170:
    if ((v48 & 0x8000) == 0) {
      return result;
    }
    goto LABEL_177;
  }
LABEL_174:
  uint64_t v49 = *(void *)(v5 + 368);
  if (!v49) {
    uint64_t v49 = *(void *)(proto::gpsd::Request::default_instance_ + 368);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4C, v49, a2, a4);
  if ((*(_DWORD *)(v5 + 392) & 0x8000) != 0)
  {
LABEL_177:
    uint64_t v50 = *(void *)(v5 + 376);
    if (!v50) {
      uint64_t v50 = *(void *)(proto::gpsd::Request::default_instance_ + 376);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4D, v50, a2, a4);
  }
  return result;
}

uint64_t sub_1000BD664(uint64_t a1, unint64_t a2)
{
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_54;
  }
  if (v3)
  {
    int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
    unsigned int v3 = *(_DWORD *)(a1 + 388);
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 388);
  }
  else
  {
    int v6 = 1;
  }
  v4 += v6 + 1;
LABEL_11:
  if ((v3 & 4) != 0)
  {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if ((v7 & 0x80000000) != 0)
    {
      int v8 = 10;
    }
    else if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      unsigned int v3 = *(_DWORD *)(a1 + 388);
    }
    else
    {
      int v8 = 1;
    }
    v4 += v8 + 1;
    if ((v3 & 8) == 0)
    {
LABEL_13:
      if ((v3 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_30;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_13;
  }
  uint64_t v9 = *(void *)(a1 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(proto::gpsd::Request::default_instance_ + 24);
  }
  uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C75A8(v9, a2);
  int v11 = (int)v10;
  if (v10 >= 0x80) {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
  }
  else {
    int v12 = 1;
  }
  v4 += v11 + v12 + 1;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x10) == 0)
  {
LABEL_14:
    if ((v3 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_36;
  }
LABEL_30:
  uint64_t v13 = *(void *)(a1 + 32);
  if (!v13) {
    uint64_t v13 = *(void *)(proto::gpsd::Request::default_instance_ + 32);
  }
  uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C7AB8(v13, a2);
  int v15 = (int)v14;
  if (v14 >= 0x80) {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  }
  else {
    int v16 = 1;
  }
  v4 += v15 + v16 + 1;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x20) == 0)
  {
LABEL_15:
    if ((v3 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_42;
  }
LABEL_36:
  uint64_t v17 = *(void *)(a1 + 40);
  if (!v17) {
    uint64_t v17 = *(void *)(proto::gpsd::Request::default_instance_ + 40);
  }
  uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C85A8(v17, a2);
  int v19 = (int)v18;
  if (v18 >= 0x80) {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
  }
  else {
    int v20 = 1;
  }
  v4 += v19 + v20 + 1;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x40) == 0)
  {
LABEL_16:
    if ((v3 & 0x80) == 0) {
      goto LABEL_54;
    }
    goto LABEL_48;
  }
LABEL_42:
  uint64_t v21 = *(void *)(a1 + 48);
  if (!v21) {
    uint64_t v21 = *(void *)(proto::gpsd::Request::default_instance_ + 48);
  }
  uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C8A58(v21, a2);
  int v23 = (int)v22;
  if (v22 >= 0x80) {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
  }
  else {
    int v24 = 1;
  }
  v4 += v23 + v24 + 1;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x80) != 0)
  {
LABEL_48:
    uint64_t v25 = *(void *)(a1 + 56);
    if (!v25) {
      uint64_t v25 = *(void *)(proto::gpsd::Request::default_instance_ + 56);
    }
    uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C8F08(v25, a2);
    int v27 = (int)v26;
    if (v26 >= 0x80) {
      int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
    }
    else {
      int v28 = 1;
    }
    v4 += v27 + v28 + 1;
    unsigned int v3 = *(_DWORD *)(a1 + 388);
  }
LABEL_54:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_112;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t v29 = *(void *)(a1 + 64);
    if (!v29) {
      uint64_t v29 = *(void *)(proto::gpsd::Request::default_instance_ + 64);
    }
    uint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C9384(v29, a2);
    int v31 = (int)v30;
    if (v30 >= 0x80) {
      int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
    }
    else {
      int v32 = 1;
    }
    v4 += v31 + v32 + 1;
    unsigned int v3 = *(_DWORD *)(a1 + 388);
    if ((v3 & 0x200) == 0)
    {
LABEL_57:
      if ((v3 & 0x400) == 0) {
        goto LABEL_58;
      }
      goto LABEL_76;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_57;
  }
  uint64_t v33 = *(void *)(a1 + 72);
  if (!v33) {
    uint64_t v33 = *(void *)(proto::gpsd::Request::default_instance_ + 72);
  }
  uint64_t v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C9DB8(v33, a2);
  int v35 = (int)v34;
  if (v34 >= 0x80) {
    int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34, a2);
  }
  else {
    int v36 = 1;
  }
  v4 += v35 + v36 + 1;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x400) == 0)
  {
LABEL_58:
    if ((v3 & 0x800) == 0) {
      goto LABEL_59;
    }
    goto LABEL_82;
  }
LABEL_76:
  uint64_t v37 = *(void *)(a1 + 80);
  if (!v37) {
    uint64_t v37 = *(void *)(proto::gpsd::Request::default_instance_ + 80);
  }
  uint64_t v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000CA3BC(v37, a2);
  int v39 = (int)v38;
  if (v38 >= 0x80) {
    int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38, a2);
  }
  else {
    int v40 = 1;
  }
  v4 += v39 + v40 + 1;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x800) == 0)
  {
LABEL_59:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_88;
  }
LABEL_82:
  uint64_t v41 = *(void *)(a1 + 88);
  if (!v41) {
    uint64_t v41 = *(void *)(proto::gpsd::Request::default_instance_ + 88);
  }
  uint64_t v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000CA860(v41, a2);
  int v43 = (int)v42;
  if (v42 >= 0x80) {
    int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42, a2);
  }
  else {
    int v44 = 1;
  }
  v4 += v43 + v44 + 1;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x1000) == 0)
  {
LABEL_60:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_94;
  }
LABEL_88:
  uint64_t v45 = *(void *)(a1 + 96);
  if (!v45) {
    uint64_t v45 = *(void *)(proto::gpsd::Request::default_instance_ + 96);
  }
  uint64_t v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000CABB0(v45, a2);
  int v47 = (int)v46;
  if (v46 >= 0x80) {
    int v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v46, a2);
  }
  else {
    int v48 = 1;
  }
  v4 += v47 + v48 + 1;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x2000) == 0)
  {
LABEL_61:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_100;
  }
LABEL_94:
  uint64_t v49 = *(void *)(a1 + 104);
  if (!v49) {
    uint64_t v49 = *(void *)(proto::gpsd::Request::default_instance_ + 104);
  }
  uint64_t v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000CB0A4(v49, a2);
  int v51 = (int)v50;
  if (v50 >= 0x80) {
    int v52 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v50, a2);
  }
  else {
    int v52 = 1;
  }
  v4 += v51 + v52 + 1;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x4000) == 0)
  {
LABEL_62:
    if ((v3 & 0x8000) == 0) {
      goto LABEL_112;
    }
    goto LABEL_106;
  }
LABEL_100:
  uint64_t v53 = *(void *)(a1 + 112);
  if (!v53) {
    uint64_t v53 = *(void *)(proto::gpsd::Request::default_instance_ + 112);
  }
  uint64_t v54 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000CB514(v53, a2);
  int v55 = (int)v54;
  if (v54 >= 0x80) {
    int v56 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v54, a2);
  }
  else {
    int v56 = 1;
  }
  v4 += v55 + v56 + 1;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x8000) != 0)
  {
LABEL_106:
    uint64_t v57 = *(void *)(a1 + 120);
    if (!v57) {
      uint64_t v57 = *(void *)(proto::gpsd::Request::default_instance_ + 120);
    }
    unsigned int v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C65F8(v57, a2);
    int v59 = (int)v58;
    if (v58 >= 0x80) {
      int v60 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v58, a2);
    }
    else {
      int v60 = 1;
    }
    v4 += v59 + v60 + 2;
    unsigned int v3 = *(_DWORD *)(a1 + 388);
  }
LABEL_112:
  if ((v3 & 0xFF0000) == 0) {
    goto LABEL_171;
  }
  if ((v3 & 0x10000) != 0)
  {
    uint64_t v61 = *(void *)(a1 + 128);
    if (!v61) {
      uint64_t v61 = *(void *)(proto::gpsd::Request::default_instance_ + 128);
    }
    uint64_t v62 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C69D0(v61, a2);
    int v63 = (int)v62;
    if (v62 >= 0x80) {
      int v64 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v62, a2);
    }
    else {
      int v64 = 1;
    }
    v4 += v63 + v64 + 2;
    unsigned int v3 = *(_DWORD *)(a1 + 388);
    if ((v3 & 0x20000) == 0)
    {
LABEL_115:
      if ((v3 & 0x40000) == 0) {
        goto LABEL_116;
      }
      goto LABEL_134;
    }
  }
  else if ((v3 & 0x20000) == 0)
  {
    goto LABEL_115;
  }
  uint64_t v65 = *(void *)(a1 + 136);
  if (!v65) {
    uint64_t v65 = *(void *)(proto::gpsd::Request::default_instance_ + 136);
  }
  int v66 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C6EE4(v65, a2);
  int v67 = (int)v66;
  if (v66 >= 0x80) {
    int v68 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v66, a2);
  }
  else {
    int v68 = 1;
  }
  v4 += v67 + v68 + 2;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x40000) == 0)
  {
LABEL_116:
    if ((v3 & 0x80000) == 0) {
      goto LABEL_117;
    }
    goto LABEL_142;
  }
LABEL_134:
  uint64_t v69 = *(void *)(a1 + 144);
  if (!v69) {
    uint64_t v69 = *(void *)(proto::gpsd::Request::default_instance_ + 144);
  }
  if ((*(unsigned char *)(v69 + 20) & 1) == 0)
  {
    int v70 = 0;
    *(_DWORD *)(v69 + 16) = 0;
LABEL_139:
    int v72 = 1;
    goto LABEL_141;
  }
  int v71 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v69 + 8), a2);
  int v70 = v71 + 1;
  *(_DWORD *)(v69 + 16) = v71 + 1;
  if ((v71 + 1) < 0x80) {
    goto LABEL_139;
  }
  int v72 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v71 + 1), a2);
LABEL_141:
  v4 += v70 + v72 + 2;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x80000) == 0)
  {
LABEL_117:
    if ((v3 & 0x100000) == 0) {
      goto LABEL_118;
    }
    goto LABEL_145;
  }
LABEL_142:
  uint64_t v73 = *(void *)(a1 + 152);
  if (!v73) {
    uint64_t v73 = *(void *)(proto::gpsd::Request::default_instance_ + 152);
  }
  v4 += sub_1000C6190(v73) + 3;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x100000) == 0)
  {
LABEL_118:
    if ((v3 & 0x200000) == 0) {
      goto LABEL_119;
    }
    goto LABEL_153;
  }
LABEL_145:
  uint64_t v74 = *(void *)(a1 + 160);
  if (!v74) {
    uint64_t v74 = *(void *)(proto::gpsd::Request::default_instance_ + 160);
  }
  if ((*(unsigned char *)(v74 + 20) & 1) == 0)
  {
    int v75 = 0;
    *(_DWORD *)(v74 + 16) = 0;
LABEL_150:
    int v77 = 1;
    goto LABEL_152;
  }
  int v76 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v74 + 8), a2);
  int v75 = v76 + 1;
  *(_DWORD *)(v74 + 16) = v76 + 1;
  if ((v76 + 1) < 0x80) {
    goto LABEL_150;
  }
  int v77 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v76 + 1), a2);
LABEL_152:
  v4 += v75 + v77 + 2;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x200000) == 0)
  {
LABEL_119:
    if ((v3 & 0x400000) == 0) {
      goto LABEL_120;
    }
    goto LABEL_159;
  }
LABEL_153:
  int v78 = *(unsigned int **)(a1 + 168);
  if (!v78) {
    int v78 = *(unsigned int **)(proto::gpsd::Request::default_instance_ + 168);
  }
  uint64_t v79 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000CBD24(v78, a2);
  int v80 = (int)v79;
  if (v79 >= 0x80) {
    int v81 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v79, a2);
  }
  else {
    int v81 = 1;
  }
  v4 += v80 + v81 + 2;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x400000) == 0)
  {
LABEL_120:
    if ((v3 & 0x800000) == 0) {
      goto LABEL_171;
    }
    goto LABEL_165;
  }
LABEL_159:
  uint64_t v82 = *(void *)(a1 + 176);
  if (!v82) {
    uint64_t v82 = *(void *)(proto::gpsd::Request::default_instance_ + 176);
  }
  int v83 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000CC11C(v82, a2);
  int v84 = (int)v83;
  if (v83 >= 0x80) {
    int v85 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v83, a2);
  }
  else {
    int v85 = 1;
  }
  v4 += v84 + v85 + 2;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x800000) != 0)
  {
LABEL_165:
    uint64_t v86 = *(void *)(a1 + 184);
    if (!v86) {
      uint64_t v86 = *(void *)(proto::gpsd::Request::default_instance_ + 184);
    }
    if (*(_DWORD *)(v86 + 16)) {
      int v87 = 2 * (*(_DWORD *)(v86 + 16) & 1);
    }
    else {
      int v87 = 0;
    }
    *(_DWORD *)(v86 + 12) = v87;
    v4 += v87 + 3;
    unsigned int v3 = *(_DWORD *)(a1 + 388);
  }
LABEL_171:
  if (!HIBYTE(v3)) {
    goto LABEL_231;
  }
  if ((v3 & 0x1000000) != 0)
  {
    uint64_t v88 = *(void *)(a1 + 192);
    if (!v88) {
      uint64_t v88 = *(void *)(proto::gpsd::Request::default_instance_ + 192);
    }
    uint64_t v89 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000CCB60(v88, a2);
    int v90 = (int)v89;
    if (v89 >= 0x80) {
      int v91 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v89, a2);
    }
    else {
      int v91 = 1;
    }
    v4 += v90 + v91 + 2;
    unsigned int v3 = *(_DWORD *)(a1 + 388);
    if ((v3 & 0x2000000) == 0)
    {
LABEL_174:
      if ((v3 & 0x4000000) == 0) {
        goto LABEL_175;
      }
      goto LABEL_193;
    }
  }
  else if ((v3 & 0x2000000) == 0)
  {
    goto LABEL_174;
  }
  uint64_t v92 = *(void *)(a1 + 200);
  if (!v92) {
    uint64_t v92 = *(void *)(proto::gpsd::Request::default_instance_ + 200);
  }
  int v93 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000CCEF0(v92, a2);
  int v94 = (int)v93;
  if (v93 >= 0x80) {
    int v95 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v93, a2);
  }
  else {
    int v95 = 1;
  }
  v4 += v94 + v95 + 2;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x4000000) == 0)
  {
LABEL_175:
    if ((v3 & 0x8000000) == 0) {
      goto LABEL_176;
    }
    goto LABEL_199;
  }
LABEL_193:
  uint64_t v96 = *(void *)(a1 + 208);
  if (!v96) {
    uint64_t v96 = *(void *)(proto::gpsd::Request::default_instance_ + 208);
  }
  int v97 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000D1A38(v96, a2);
  int v98 = (int)v97;
  if (v97 >= 0x80) {
    int v99 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v97, a2);
  }
  else {
    int v99 = 1;
  }
  v4 += v98 + v99 + 2;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x8000000) == 0)
  {
LABEL_176:
    if ((v3 & 0x10000000) == 0) {
      goto LABEL_177;
    }
    goto LABEL_205;
  }
LABEL_199:
  uint64_t v100 = *(void *)(a1 + 216);
  if (!v100) {
    uint64_t v100 = *(void *)(proto::gpsd::Request::default_instance_ + 216);
  }
  int v101 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000D4050(v100, a2);
  int v102 = (int)v101;
  if (v101 >= 0x80) {
    int v103 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v101, a2);
  }
  else {
    int v103 = 1;
  }
  v4 += v102 + v103 + 2;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x10000000) == 0)
  {
LABEL_177:
    if ((v3 & 0x20000000) == 0) {
      goto LABEL_178;
    }
    goto LABEL_211;
  }
LABEL_205:
  uint64_t v104 = *(void *)(a1 + 224);
  if (!v104) {
    uint64_t v104 = *(void *)(proto::gpsd::Request::default_instance_ + 224);
  }
  int v105 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000D1ED4(v104, a2);
  int v106 = (int)v105;
  if (v105 >= 0x80) {
    int v107 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v105, a2);
  }
  else {
    int v107 = 1;
  }
  v4 += v106 + v107 + 2;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x20000000) == 0)
  {
LABEL_178:
    if ((v3 & 0x40000000) == 0) {
      goto LABEL_179;
    }
    goto LABEL_217;
  }
LABEL_211:
  uint64_t v108 = *(void *)(a1 + 232);
  if (!v108) {
    uint64_t v108 = *(void *)(proto::gpsd::Request::default_instance_ + 232);
  }
  int v109 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000CB908(v108, a2);
  int v110 = (int)v109;
  if (v109 >= 0x80) {
    int v111 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v109, a2);
  }
  else {
    int v111 = 1;
  }
  v4 += v110 + v111 + 2;
  unsigned int v3 = *(_DWORD *)(a1 + 388);
  if ((v3 & 0x40000000) == 0)
  {
LABEL_179:
    if ((v3 & 0x80000000) == 0) {
      goto LABEL_231;
    }
    goto LABEL_225;
  }
LABEL_217:
  uint64_t v112 = *(void *)(a1 + 240);
  if (!v112) {
    uint64_t v112 = *(void *)(proto::gpsd::Request::default_instance_ + 240);
  }
  int v113 = 2 * (*(_DWORD *)(v112 + 16) & 1);
  if ((*(_DWORD *)(v112 + 16) & 2) != 0) {
    v113 += 2;
  }
  if (*(_DWORD *)(v112 + 16)) {
    int v114 = v113;
  }
  else {
    int v114 = 0;
  }
  *(_DWORD *)(v112 + 12) = v114;
  v4 += v114 + 3;
  if ((*(_DWORD *)(a1 + 388) & 0x80000000) != 0)
  {
LABEL_225:
    v115 = *(proto::gnss::Emergency::EmergConfig **)(a1 + 248);
    if (!v115) {
      v115 = *(proto::gnss::Emergency::EmergConfig **)(proto::gpsd::Request::default_instance_ + 248);
    }
    uint64_t v116 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::EmergConfig::ByteSize(v115, a2);
    int v117 = (int)v116;
    if (v116 >= 0x80) {
      int v118 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v116, a2);
    }
    else {
      int v118 = 1;
    }
    v4 += v117 + v118 + 2;
  }
LABEL_231:
  int v119 = *(_DWORD *)(a1 + 392);
  if (!(_BYTE)v119) {
    goto LABEL_287;
  }
  if (v119)
  {
    int v120 = *(proto::gnss::Emergency::PositionRequest **)(a1 + 256);
    if (!v120) {
      int v120 = *(proto::gnss::Emergency::PositionRequest **)(proto::gpsd::Request::default_instance_ + 256);
    }
    unsigned int v121 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::PositionRequest::ByteSize(v120, a2);
    int v122 = (int)v121;
    if (v121 >= 0x80) {
      int v123 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v121, a2);
    }
    else {
      int v123 = 1;
    }
    v4 += v122 + v123 + 2;
    int v119 = *(_DWORD *)(a1 + 392);
    if ((v119 & 2) == 0)
    {
LABEL_234:
      if ((v119 & 4) == 0) {
        goto LABEL_235;
      }
      goto LABEL_251;
    }
  }
  else if ((v119 & 2) == 0)
  {
    goto LABEL_234;
  }
  v124 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 296);
  if (v124 >= 0x80)
  {
    int v125 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v124, a2);
    int v119 = *(_DWORD *)(a1 + 392);
  }
  else
  {
    int v125 = 1;
  }
  v4 += v125 + 2;
  if ((v119 & 4) == 0)
  {
LABEL_235:
    if ((v119 & 8) == 0) {
      goto LABEL_236;
    }
    goto LABEL_257;
  }
LABEL_251:
  v126 = *(proto::gnss::Emergency::GpsReferenceTime **)(a1 + 264);
  if (!v126) {
    v126 = *(proto::gnss::Emergency::GpsReferenceTime **)(proto::gpsd::Request::default_instance_ + 264);
  }
  int v127 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::GpsReferenceTime::ByteSize(v126, a2);
  int v128 = (int)v127;
  if (v127 >= 0x80) {
    int v129 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v127, a2);
  }
  else {
    int v129 = 1;
  }
  v4 += v128 + v129 + 2;
  int v119 = *(_DWORD *)(a1 + 392);
  if ((v119 & 8) == 0)
  {
LABEL_236:
    if ((v119 & 0x10) == 0) {
      goto LABEL_237;
    }
    goto LABEL_263;
  }
LABEL_257:
  unsigned int v130 = *(proto::gnss::Emergency::ReferenceLocation **)(a1 + 272);
  if (!v130) {
    unsigned int v130 = *(proto::gnss::Emergency::ReferenceLocation **)(proto::gpsd::Request::default_instance_ + 272);
  }
  int v131 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::ReferenceLocation::ByteSize(v130, a2);
  int v132 = (int)v131;
  if (v131 >= 0x80) {
    int v133 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v131, a2);
  }
  else {
    int v133 = 1;
  }
  v4 += v132 + v133 + 2;
  int v119 = *(_DWORD *)(a1 + 392);
  if ((v119 & 0x10) == 0)
  {
LABEL_237:
    if ((v119 & 0x20) == 0) {
      goto LABEL_238;
    }
    goto LABEL_269;
  }
LABEL_263:
  uint64_t v134 = *(proto::gnss::Emergency::GpsNavigationModel **)(a1 + 280);
  if (!v134) {
    uint64_t v134 = *(proto::gnss::Emergency::GpsNavigationModel **)(proto::gpsd::Request::default_instance_ + 280);
  }
  v135 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::GpsNavigationModel::ByteSize(v134, a2);
  int v136 = (int)v135;
  if (v135 >= 0x80) {
    int v137 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v135, a2);
  }
  else {
    int v137 = 1;
  }
  v4 += v136 + v137 + 2;
  int v119 = *(_DWORD *)(a1 + 392);
  if ((v119 & 0x20) == 0)
  {
LABEL_238:
    if ((v119 & 0x40) == 0) {
      goto LABEL_239;
    }
    goto LABEL_275;
  }
LABEL_269:
  int v138 = *(proto::gnss::Emergency::GpsAcqAssistance **)(a1 + 288);
  if (!v138) {
    int v138 = *(proto::gnss::Emergency::GpsAcqAssistance **)(proto::gpsd::Request::default_instance_ + 288);
  }
  unsigned int v139 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::GpsAcqAssistance::ByteSize(v138, a2);
  int v140 = (int)v139;
  if (v139 >= 0x80) {
    int v141 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v139, a2);
  }
  else {
    int v141 = 1;
  }
  v4 += v140 + v141 + 2;
  int v119 = *(_DWORD *)(a1 + 392);
  if ((v119 & 0x40) == 0)
  {
LABEL_239:
    if ((v119 & 0x80) == 0) {
      goto LABEL_287;
    }
    goto LABEL_281;
  }
LABEL_275:
  v142 = *(proto::gnss::Emergency::CellFTAssistance **)(a1 + 304);
  if (!v142) {
    v142 = *(proto::gnss::Emergency::CellFTAssistance **)(proto::gpsd::Request::default_instance_ + 304);
  }
  uint64_t v143 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::CellFTAssistance::ByteSize(v142, a2);
  int v144 = (int)v143;
  if (v143 >= 0x80) {
    int v145 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v143, a2);
  }
  else {
    int v145 = 1;
  }
  v4 += v144 + v145 + 2;
  int v119 = *(_DWORD *)(a1 + 392);
  if ((v119 & 0x80) != 0)
  {
LABEL_281:
    int v146 = *(proto::gnss::Emergency::CplaneContext **)(a1 + 312);
    if (!v146) {
      int v146 = *(proto::gnss::Emergency::CplaneContext **)(proto::gpsd::Request::default_instance_ + 312);
    }
    int v147 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::CplaneContext::ByteSize(v146);
    int v148 = (int)v147;
    if (v147 >= 0x80) {
      int v149 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v147, a2);
    }
    else {
      int v149 = 1;
    }
    v4 += v148 + v149 + 2;
    int v119 = *(_DWORD *)(a1 + 392);
  }
LABEL_287:
  if ((v119 & 0x1FE00) == 0) {
    goto LABEL_322;
  }
  if ((v119 & 0x200) != 0)
  {
    int v150 = *(proto::gnss::Emergency::LocationId **)(a1 + 336);
    if (!v150) {
      int v150 = *(proto::gnss::Emergency::LocationId **)(proto::gpsd::Request::default_instance_ + 336);
    }
    v151 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::LocationId::ByteSize(v150, a2);
    int v152 = (int)v151;
    if (v151 >= 0x80) {
      int v153 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v151, a2);
    }
    else {
      int v153 = 1;
    }
    v4 += v152 + v153 + 2;
    int v119 = *(_DWORD *)(a1 + 392);
  }
  if ((v119 & 0x400) != 0)
  {
    int v154 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 300);
    if (v154 >= 0x80)
    {
      int v155 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v154, a2) + 2;
      int v119 = *(_DWORD *)(a1 + 392);
    }
    else
    {
      int v155 = 3;
    }
    v4 += v155;
  }
  if ((v119 & 0x1000) != 0) {
    v4 += 3;
  }
  if ((v119 & 0x2000) != 0)
  {
    int v156 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 364);
    if (v156 >= 0x80)
    {
      int v157 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v156, a2) + 2;
      int v119 = *(_DWORD *)(a1 + 392);
    }
    else
    {
      int v157 = 3;
    }
    v4 += v157;
    if ((v119 & 0x4000) == 0)
    {
LABEL_304:
      if ((v119 & 0x8000) == 0) {
        goto LABEL_322;
      }
      goto LABEL_316;
    }
  }
  else if ((v119 & 0x4000) == 0)
  {
    goto LABEL_304;
  }
  int v158 = *(proto::gnss::Emergency::SuplContext **)(a1 + 368);
  if (!v158) {
    int v158 = *(proto::gnss::Emergency::SuplContext **)(proto::gpsd::Request::default_instance_ + 368);
  }
  int v159 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::SuplContext::ByteSize(v158, a2);
  int v160 = (int)v159;
  if (v159 >= 0x80) {
    int v161 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v159, a2);
  }
  else {
    int v161 = 1;
  }
  v4 += v160 + v161 + 2;
  if ((*(_DWORD *)(a1 + 392) & 0x8000) != 0)
  {
LABEL_316:
    v162 = *(proto::gnss::Emergency::WlanMeasurementList **)(a1 + 376);
    if (!v162) {
      v162 = *(proto::gnss::Emergency::WlanMeasurementList **)(proto::gpsd::Request::default_instance_ + 376);
    }
    int v163 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::WlanMeasurementList::ByteSize(v162, a2);
    int v164 = (int)v163;
    if (v163 >= 0x80) {
      int v165 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v163, a2);
    }
    else {
      int v165 = 1;
    }
    v4 += v164 + v165 + 2;
  }
LABEL_322:
  int v166 = *(_DWORD *)(a1 + 328);
  if (v166 < 1)
  {
    int v168 = 0;
  }
  else
  {
    uint64_t v167 = 0;
    int v168 = 0;
    do
    {
      v169 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 320)
                                                                                              + 4 * v167);
      if (v169 >= 0x80)
      {
        int v170 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v169, a2);
        int v166 = *(_DWORD *)(a1 + 328);
      }
      else
      {
        int v170 = 1;
      }
      v168 += v170;
      ++v167;
    }
    while (v167 < v166);
  }
  int v171 = *(_DWORD *)(a1 + 352);
  if (v171 < 1)
  {
    int v173 = 0;
  }
  else
  {
    uint64_t v172 = 0;
    int v173 = 0;
    do
    {
      int v174 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 344)
                                                                                              + 4 * v172);
      if (v174 >= 0x80)
      {
        int v175 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v174, a2);
        int v171 = *(_DWORD *)(a1 + 352);
      }
      else
      {
        int v175 = 1;
      }
      v173 += v175;
      ++v172;
    }
    while (v172 < v171);
  }
  uint64_t result = (v168 + v4 + v173 + 2 * (v171 + v166));
  *(_DWORD *)(a1 + 384) = result;
  return result;
}

void sub_1000BE418(proto::gpsd::Request *a1, void *lpsrc)
{
  proto::gpsd::Request::MergeFrom(a1, (const proto::gpsd::Request *)lpsrc);
}

void sub_1000BE4BC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      uint64_t v5 = *(proto::gnss::Position **)(a1 + 8);
      if (!v5) {
        operator new();
      }
      int v6 = *(const proto::gnss::Position **)(a2 + 8);
      if (!v6) {
        int v6 = *(const proto::gnss::Position **)(proto::gpsd::InjectAssistancePosition::default_instance_ + 8);
      }
      proto::gnss::Position::MergeFrom(v5, v6);
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 16);
      if (v7 >= 4) {
        __assert_rtn("set_position_assist_type", "GpsdProtocol.pb.h", 9288, "::proto::gnss::PositionAssistType_IsValid(value)");
      }
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_DWORD *)(a1 + 16) = v7;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 4) != 0)
    {
      char v8 = *(unsigned char *)(a2 + 20);
      *(_DWORD *)(a1 + 36) |= 4u;
      *(unsigned char *)(a1 + 20) = v8;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 8) != 0)
    {
      uint64_t v9 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 8u;
      *(void *)(a1 + 24) = v9;
    }
  }
}

void sub_1000BE634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BE64C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(void *)(a1 + 16) = v7;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return;
    }
LABEL_7:
    uint64_t v5 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(void *)(a1 + 24) = v5;
  }
}

void sub_1000BE720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BE738(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), *(_DWORD *)(a2 + 16) + a1[4]);
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 8) + 8 * v4);
      int v6 = a1[5];
      uint64_t v7 = (int)a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), v6 + 1);
          int v6 = a1[5];
        }
        a1[5] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 1);
      a1[4] = v7 + 1;
      proto::gnss::RawPressureSample::MergeFrom(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
}

void sub_1000BE898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BE8B0(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), *(_DWORD *)(a2 + 16) + a1[4]);
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 8) + 8 * v4);
      int v6 = a1[5];
      uint64_t v7 = (int)a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), v6 + 1);
          int v6 = a1[5];
        }
        a1[5] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 1);
      a1[4] = v7 + 1;
      proto::gnss::SensorSample3Axis::MergeFrom(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
}

void sub_1000BEA10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BEA28(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), *(_DWORD *)(a2 + 16) + a1[4]);
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 8) + 8 * v4);
      int v6 = a1[5];
      uint64_t v7 = (int)a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), v6 + 1);
          int v6 = a1[5];
        }
        a1[5] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 1);
      a1[4] = v7 + 1;
      proto::gnss::SensorSample3Axis::MergeFrom(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
}

void sub_1000BEB88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_1000BEBA0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }
  return result;
}

void sub_1000BEC74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BEC8C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  int v4 = *(_DWORD *)(a2 + 76);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v7 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 76) |= 1u;
    *(void *)(a1 + 8) = v7;
    int v4 = *(_DWORD *)(a2 + 76);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 76) |= 2u;
  *(void *)(a1 + 16) = v8;
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v9 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 76) |= 4u;
  *(void *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  char v10 = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 76) |= 8u;
  *(unsigned char *)(a1 + 64) = v10;
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_26:
    uint64_t v12 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 76) |= 0x20u;
    *(void *)(a1 + 40) = v12;
    int v4 = *(_DWORD *)(a2 + 76);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t v11 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 76) |= 0x10u;
  *(void *)(a1 + 32) = v11;
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x20) != 0) {
    goto LABEL_26;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_27:
  uint64_t v13 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 76) |= 0x40u;
  *(void *)(a1 + 48) = v13;
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    uint64_t v5 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 76) |= 0x80u;
    *(void *)(a1 + 56) = v5;
    int v4 = *(_DWORD *)(a2 + 76);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    char v14 = *(unsigned char *)(a2 + 65);
    *(_DWORD *)(a1 + 76) |= 0x100u;
    *(unsigned char *)(a1 + 65) = v14;
    int v4 = *(_DWORD *)(a2 + 76);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_31;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  char v15 = *(unsigned char *)(a2 + 66);
  *(_DWORD *)(a1 + 76) |= 0x200u;
  *(unsigned char *)(a1 + 66) = v15;
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_32;
  }
LABEL_31:
  char v16 = *(unsigned char *)(a2 + 67);
  *(_DWORD *)(a1 + 76) |= 0x400u;
  *(unsigned char *)(a1 + 67) = v16;
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      return;
    }
    goto LABEL_19;
  }
LABEL_32:
  char v17 = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 76) |= 0x800u;
  *(unsigned char *)(a1 + 68) = v17;
  if ((*(_DWORD *)(a2 + 76) & 0x1000) == 0) {
    return;
  }
LABEL_19:
  char v6 = *(unsigned char *)(a2 + 69);
  *(_DWORD *)(a1 + 76) |= 0x1000u;
  *(unsigned char *)(a1 + 69) = v6;
}

void sub_1000BEEAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BEEC4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(void *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 16);
      if (v6 >= 0xA) {
        __assert_rtn("set_context", "GpsdProtocol.pb.h", 9950, "::proto::gnss::MotionActivityContext_IsValid(value)");
      }
      *(_DWORD *)(a1 + 32) |= 2u;
      *(_DWORD *)(a1 + 16) = v6;
      int v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 4) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 20);
      if (v7 >= 5) {
        __assert_rtn("set_moving_state", "GpsdProtocol.pb.h", 9973, "::proto::gnss::MovingState_IsValid(value)");
      }
      *(_DWORD *)(a1 + 32) |= 4u;
      *(_DWORD *)(a1 + 20) = v7;
      int v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 8) != 0)
    {
      uint64_t v8 = (proto::gnss *)*(unsigned int *)(a2 + 24);
      if (!proto::gnss::Reliability_IsValid(v8)) {
        __assert_rtn("set_motion_reliability", "GpsdProtocol.pb.h", 9996, "::proto::gnss::Reliability_IsValid(value)");
      }
      *(_DWORD *)(a1 + 32) |= 8u;
      *(_DWORD *)(a1 + 24) = v8;
    }
  }
}

void sub_1000BF024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BF03C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(void *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 16);
      if ((v6 - 1) >= 4) {
        __assert_rtn("set_mount_state", "GpsdProtocol.pb.h", 10045, "::proto::gnss::DeviceMountState_IsValid(value)");
      }
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v6;
    }
  }
}

void sub_1000BF114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BF12C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    unsigned int v4 = *(_DWORD *)(a2 + 8);
    if (v4 >= 7 && v4 != 15) {
      __assert_rtn("set_signal_environment_type", "GpsdProtocol.pb.h", 10072, "::proto::gnss::SignalEnvironmentType_IsValid(value)");
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 8) = v4;
  }
}

void sub_1000BF1E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_1000BF200(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 44);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 44))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 44) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 44);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(double *)(a1 + 16) = result;
    int v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return result;
      }
      goto LABEL_8;
    }
LABEL_12:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(double *)(a1 + 24) = result;
    if ((*(_DWORD *)(a2 + 44) & 8) == 0) {
      return result;
    }
LABEL_8:
    double result = *(double *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(double *)(a1 + 32) = result;
  }
  return result;
}

void sub_1000BF2F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_1000BF30C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }
  return result;
}

void sub_1000BF3E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BF3F8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      int v5 = *(const std::string **)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      uint64_t v6 = *(std::string **)(a1 + 8);
      if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v6, v5);
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 16);
      if (v7 >= 3) {
        __assert_rtn("set_compression_type", "GpsdProtocol.pb.h", 9116, "::proto::gpsd::CompressionType_IsValid(value)");
      }
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v7;
    }
  }
}

void sub_1000BF510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BF528(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (*(unsigned char *)(a2 + 20))
  {
    int v4 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 20) |= 1u;
    int v5 = *(std::string **)(a1 + 8);
    if (v5 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v5, v4);
  }
}

void sub_1000BF5F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BF608(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), *(_DWORD *)(a2 + 16) + a1[4]);
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 8) + 8 * v4);
      int v6 = a1[5];
      uint64_t v7 = (int)a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), v6 + 1);
          int v6 = a1[5];
        }
        a1[5] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 1);
      a1[4] = v7 + 1;
      proto::gnss::SvId::MergeFrom(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
}

void sub_1000BF768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BF780(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 20) |= 1u;
    *(void *)(a1 + 8) = v4;
  }
}

void sub_1000BF80C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BF824(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = a2[20];
  if ((_BYTE)v4)
  {
    if (a2[20])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 20) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 5);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_14;
      }
    }
    else if ((a2[20] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 20) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_15;
    }
LABEL_14:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 20) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
LABEL_15:
    char v9 = a2[11];
    *(_DWORD *)(a1 + 20) |= 8u;
    *(unsigned char *)(a1 + 11) = v9;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        return;
      }
      goto LABEL_10;
    }
LABEL_16:
    char v10 = a2[12];
    *(_DWORD *)(a1 + 20) |= 0x10u;
    *(unsigned char *)(a1 + 12) = v10;
    if ((*((_DWORD *)a2 + 5) & 0x20) == 0) {
      return;
    }
LABEL_10:
    char v5 = a2[13];
    *(_DWORD *)(a1 + 20) |= 0x20u;
    *(unsigned char *)(a1 + 13) = v5;
  }
}

void sub_1000BF958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BF970(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 20) |= 1u;
    *(void *)(a1 + 8) = v4;
  }
}

void sub_1000BF9FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BFA14(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      char v5 = *(unsigned char *)(a2 + 8);
      *(_DWORD *)(a1 + 20) |= 1u;
      *(unsigned char *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      *(_DWORD *)(a1 + 20) |= 2u;
      *(_DWORD *)(a1 + 12) = v6;
    }
  }
}

void sub_1000BFAC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BFAD8(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_1000BFB84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BFB9C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    char v4 = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(unsigned char *)(a1 + 8) = v4;
  }
}

void sub_1000BFC28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BFC40(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (*(unsigned char *)(a2 + 20))
  {
    char v4 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 20) |= 1u;
    int v5 = *(std::string **)(a1 + 8);
    if (v5 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v5, v4);
  }
}

void sub_1000BFD08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BFD20(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (*(unsigned char *)(a2 + 20))
  {
    char v4 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 20) |= 1u;
    int v5 = *(std::string **)(a1 + 8);
    if (v5 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v5, v4);
  }
}

void sub_1000BFDE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000BFE00(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 56);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 56))
  {
    char v5 = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 56) |= 1u;
    *(unsigned char *)(a1 + 8) = v5;
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a2 + 56) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v6 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 56) |= 2u;
  *(_DWORD *)(a1 + 12) = v6;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_14:
  unsigned int v7 = *(_DWORD *)(a2 + 48);
  if (v7 >= 5) {
    __assert_rtn("set_info_type", "GpsdProtocol.pb.h", 11492, "::proto::gpsd::LtlInfoType_IsValid(value)");
  }
  *(_DWORD *)(a1 + 56) |= 4u;
  *(_DWORD *)(a1 + 48) = v7;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_21:
    *(_DWORD *)(a1 + 56) |= 0x10u;
    uint64_t v10 = *(void *)(a1 + 24);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 24);
    if (!v11) {
      uint64_t v11 = *(void *)(proto::gpsd::LtlInfo::default_instance_ + 24);
    }
    sub_1000CE980(v10, v11);
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        return;
      }
      goto LABEL_31;
    }
    goto LABEL_26;
  }
LABEL_16:
  *(_DWORD *)(a1 + 56) |= 8u;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9) {
    uint64_t v9 = *(void *)(proto::gpsd::LtlInfo::default_instance_ + 16);
  }
  sub_1000D0248(v8, v9);
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x10) != 0) {
    goto LABEL_21;
  }
LABEL_9:
  if ((v4 & 0x20) == 0) {
    goto LABEL_10;
  }
LABEL_26:
  *(_DWORD *)(a1 + 56) |= 0x20u;
  uint64_t v12 = *(void *)(a1 + 32);
  if (!v12) {
    operator new();
  }
  uint64_t v13 = *(void *)(a2 + 32);
  if (!v13) {
    uint64_t v13 = *(void *)(proto::gpsd::LtlInfo::default_instance_ + 32);
  }
  sub_1000CF530(v12, v13);
  if ((*(_DWORD *)(a2 + 56) & 0x40) != 0)
  {
LABEL_31:
    *(_DWORD *)(a1 + 56) |= 0x40u;
    char v14 = *(_DWORD **)(a1 + 40);
    if (!v14) {
      operator new();
    }
    uint64_t v15 = *(void *)(a2 + 40);
    if (!v15) {
      uint64_t v15 = *(void *)(proto::gpsd::LtlInfo::default_instance_ + 40);
    }
    sub_1000CFD3C(v14, v15);
  }
}

void sub_1000C00F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000C0108(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      char v6 = *(unsigned char *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(unsigned char *)(a1 + 16) = v6;
      int v4 = *(_DWORD *)(a2 + 24);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = *(unsigned char *)(a2 + 17);
    *(_DWORD *)(a1 + 24) |= 2u;
    *(unsigned char *)(a1 + 17) = v7;
    int v4 = *(_DWORD *)(a2 + 24);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = *(unsigned char *)(a2 + 18);
    *(_DWORD *)(a1 + 24) |= 4u;
    *(unsigned char *)(a1 + 18) = v8;
    if ((*(_DWORD *)(a2 + 24) & 8) == 0) {
      return;
    }
LABEL_8:
    uint64_t v5 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 24) |= 8u;
    *(void *)(a1 + 8) = v5;
  }
}

void sub_1000C01FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000C0214(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    unsigned int v4 = *(_DWORD *)(a2 + 8);
    if (v4 >= 7) {
      __assert_rtn("set_status", "GpsdProtocol.pb.h", 11687, "::proto::gpsd::CntinStatus_IsValid(value)");
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 8) = v4;
  }
}

void sub_1000C02C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000C02E0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(void *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v6;
    }
  }
}

void sub_1000C038C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000C03A4(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v5 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v5;
      int v4 = *((_DWORD *)a2 + 4);
    }
    if ((v4 & 2) != 0)
    {
      char v6 = a2[9];
      *(_DWORD *)(a1 + 16) |= 2u;
      *(unsigned char *)(a1 + 9) = v6;
    }
  }
}

void sub_1000C0450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000C0468()
{
  return 1;
}

void *sub_1000C0470@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.Request");
}

proto::gpsd::Response *proto::gpsd::Response::Response(proto::gpsd::Response *this, const proto::gpsd::Response *a2)
{
  *(void *)this = &off_10010DB10;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  proto::gpsd::Response::MergeFrom((uint64_t)this, (uint64_t)a2);
  return this;
}

void sub_1000C04C8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void proto::gpsd::Response::MergeFrom(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 16);
      if ((proto::gpsd::Request_Type_IsValid((proto::gpsd *)v5) & 1) == 0) {
        __assert_rtn("set_request_type", "GpsdProtocol.pb.h", 7657, "::proto::gpsd::Request_Type_IsValid(value)");
      }
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 2u;
      *(void *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 4) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 20);
      if (v7 >= 0xA) {
        __assert_rtn("set_result_code", "GpsdProtocol.pb.h", 7702, "::proto::gnss::Result_IsValid(value)");
      }
      *(_DWORD *)(a1 + 28) |= 4u;
      *(_DWORD *)(a1 + 20) = v7;
    }
  }
}

void sub_1000C0600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void proto::gpsd::Response::~Response(proto::gpsd::Response *this)
{
  *(void *)this = &off_10010DB10;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000C0638(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &off_10010DB10;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000C068C()
{
}

uint64_t sub_1000C06D8(uint64_t result)
{
  if (*(unsigned char *)(result + 28))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1000C06EC(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int v5 = (unint64_t *)(a1 + 2);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v8 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v20 = 0;
        uint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20);
          if (!result) {
            return result;
          }
          unint64_t v13 = v20;
        }
        else
        {
          unint64_t v13 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        if (proto::gpsd::Request_Type_IsValid((proto::gpsd *)v13))
        {
          a1[7] |= 1u;
          a1[4] = v13;
        }
        uint64_t v15 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v15 < v10 && *v15 == 16)
        {
          char v14 = v15 + 1;
          *((void *)this + 1) = v14;
          goto LABEL_29;
        }
      }
      if (v8 != 2) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      char v14 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
LABEL_29:
      if ((unint64_t)v14 >= v10 || *v14 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
        if (!result) {
          return result;
        }
        char v16 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        unint64_t *v5 = *v14;
        char v16 = v14 + 1;
        *((void *)this + 1) = v16;
      }
      a1[7] |= 2u;
      if ((unint64_t)v16 < v10 && *v16 == 24)
      {
        uint64_t v11 = v16 + 1;
        *((void *)this + 1) = v11;
LABEL_37:
        unsigned int v19 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v19);
          if (!result) {
            return result;
          }
          unsigned int v17 = v19;
        }
        else
        {
          unsigned int v17 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v17 <= 9)
        {
          a1[7] |= 4u;
          a1[5] = v17;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v8 == 3)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_37;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_19:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000C092C(uint64_t result, unint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 8), a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = *(_DWORD *)(v5 + 20);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_1000C09B8(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_21;
  }
  if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if ((v5 & 0x80000000) != 0)
  {
    uint64_t v4 = 11;
    if ((v3 & 2) != 0) {
      goto LABEL_13;
    }
  }
  else
  {
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 28);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    uint64_t v4 = 2;
    if ((v3 & 2) != 0)
    {
LABEL_13:
      uint64_t v4 = v4
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 28);
    }
  }
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else
    {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
LABEL_21:
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

void sub_1000C0A7C(uint64_t a1, void *lpsrc)
{
  proto::gpsd::Response::MergeFrom(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000C0B20()
{
  return 1;
}

void *sub_1000C0B28@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.Response");
}

proto::gpsd::Indication *proto::gpsd::Indication::Indication(proto::gpsd::Indication *this, const proto::gpsd::Indication *a2)
{
  *(void *)this = &off_10010DB88;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *((_DWORD *)this + 54) = 0;
  proto::gpsd::Indication::MergeFrom(this, a2);
  return this;
}

void sub_1000C0BB8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void proto::gpsd::Indication::MergeFrom(proto::gpsd::Indication *this, const proto::gpsd::Indication *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v56);
  }
  unsigned int v4 = *((_DWORD *)a2 + 54);
  if (!(_BYTE)v4) {
    goto LABEL_46;
  }
  if (v4)
  {
    unsigned int v5 = *((_DWORD *)a2 + 2);
    if (v5 - 9 >= 0x12 && v5 >= 6) {
      __assert_rtn("set_type", "GpsdProtocol.pb.h", 7729, "::proto::gpsd::Indication_Type_IsValid(value)");
    }
    *((_DWORD *)this + 54) |= 1u;
    *((_DWORD *)this + 2) = v5;
    unsigned int v4 = *((_DWORD *)a2 + 54);
  }
  if ((v4 & 2) != 0)
  {
    unsigned int v7 = *((_DWORD *)a2 + 3);
    if ((proto::gpsd::Request_Type_IsValid((proto::gpsd *)v7) & 1) == 0) {
      __assert_rtn("set_request_type", "GpsdProtocol.pb.h", 7752, "::proto::gpsd::Request_Type_IsValid(value)");
    }
    *((_DWORD *)this + 54) |= 2u;
    *((_DWORD *)this + 3) = v7;
    unsigned int v4 = *((_DWORD *)a2 + 54);
  }
  if ((v4 & 4) != 0)
  {
    uint64_t v8 = *((void *)a2 + 2);
    *((_DWORD *)this + 54) |= 4u;
    *((void *)this + 2) = v8;
    unsigned int v4 = *((_DWORD *)a2 + 54);
    if ((v4 & 8) == 0)
    {
LABEL_15:
      if ((v4 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_26;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_15;
  }
  *((_DWORD *)this + 54) |= 8u;
  int v9 = (proto::gnss::Fix *)*((void *)this + 3);
  if (!v9) {
    operator new();
  }
  unint64_t v10 = (const proto::gnss::Fix *)*((void *)a2 + 3);
  if (!v10) {
    unint64_t v10 = *(const proto::gnss::Fix **)(proto::gpsd::Indication::default_instance_ + 24);
  }
  proto::gnss::Fix::MergeFrom(v9, v10);
  unsigned int v4 = *((_DWORD *)a2 + 54);
  if ((v4 & 0x10) == 0)
  {
LABEL_16:
    if ((v4 & 0x20) == 0) {
      goto LABEL_17;
    }
LABEL_31:
    *((_DWORD *)this + 54) |= 0x20u;
    unint64_t v13 = (proto::gnss::PwrMeasurement *)*((void *)this + 5);
    if (!v13) {
      operator new();
    }
    char v14 = (const proto::gnss::PwrMeasurement *)*((void *)a2 + 5);
    if (!v14) {
      char v14 = *(const proto::gnss::PwrMeasurement **)(proto::gpsd::Indication::default_instance_ + 40);
    }
    proto::gnss::PwrMeasurement::MergeFrom(v13, v14);
    unsigned int v4 = *((_DWORD *)a2 + 54);
    if ((v4 & 0x40) == 0)
    {
LABEL_18:
      if ((v4 & 0x80) == 0) {
        goto LABEL_46;
      }
      goto LABEL_41;
    }
    goto LABEL_36;
  }
LABEL_26:
  *((_DWORD *)this + 54) |= 0x10u;
  uint64_t v11 = (CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)*((void *)this + 4);
  if (!v11) {
    operator new();
  }
  uint64_t v12 = (const CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)*((void *)a2 + 4);
  if (!v12) {
    uint64_t v12 = *(const CLP::LogEntry::PrivateData::MeasurementReportCallbackContents **)(proto::gpsd::Indication::default_instance_
  }
                                                                                  + 32);
  CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::MergeFrom(v11, v12);
  unsigned int v4 = *((_DWORD *)a2 + 54);
  if ((v4 & 0x20) != 0) {
    goto LABEL_31;
  }
LABEL_17:
  if ((v4 & 0x40) == 0) {
    goto LABEL_18;
  }
LABEL_36:
  *((_DWORD *)this + 54) |= 0x40u;
  uint64_t v15 = *((void *)this + 6);
  if (!v15) {
    operator new();
  }
  uint64_t v16 = *((void *)a2 + 6);
  if (!v16) {
    uint64_t v16 = *(void *)(proto::gpsd::Indication::default_instance_ + 48);
  }
  sub_1000C4EFC(v15, v16);
  unsigned int v4 = *((_DWORD *)a2 + 54);
  if ((v4 & 0x80) != 0)
  {
LABEL_41:
    *((_DWORD *)this + 54) |= 0x80u;
    unsigned int v17 = (proto::gnss::TimeTransferDataExtend *)*((void *)this + 7);
    if (!v17) {
      operator new();
    }
    uint64_t v18 = (const proto::gnss::TimeTransferDataExtend *)*((void *)a2 + 7);
    if (!v18) {
      uint64_t v18 = *(const proto::gnss::TimeTransferDataExtend **)(proto::gpsd::Indication::default_instance_ + 56);
    }
    proto::gnss::TimeTransferDataExtend::MergeFrom(v17, v18);
    unsigned int v4 = *((_DWORD *)a2 + 54);
  }
LABEL_46:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_90;
  }
  if ((v4 & 0x100) != 0)
  {
    *((_DWORD *)this + 54) |= 0x100u;
    uint64_t v19 = *((void *)this + 8);
    if (!v19) {
      operator new();
    }
    uint64_t v20 = *((void *)a2 + 8);
    if (!v20) {
      uint64_t v20 = *(void *)(proto::gpsd::Indication::default_instance_ + 64);
    }
    sub_1000C5028(v19, v20);
    unsigned int v4 = *((_DWORD *)a2 + 54);
    if ((v4 & 0x200) == 0)
    {
LABEL_49:
      if ((v4 & 0x400) == 0) {
        goto LABEL_50;
      }
      goto LABEL_66;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_49;
  }
  *((_DWORD *)this + 54) |= 0x200u;
  uint64_t v21 = *((void *)this + 9);
  if (!v21) {
    operator new();
  }
  uint64_t v22 = *((void *)a2 + 9);
  if (!v22) {
    uint64_t v22 = *(void *)(proto::gpsd::Indication::default_instance_ + 72);
  }
  sub_1000C5220(v21, v22);
  unsigned int v4 = *((_DWORD *)a2 + 54);
  if ((v4 & 0x400) == 0)
  {
LABEL_50:
    if ((v4 & 0x800) == 0) {
      goto LABEL_51;
    }
    goto LABEL_71;
  }
LABEL_66:
  *((_DWORD *)this + 54) |= 0x400u;
  int v23 = (proto::gnss::DecodedExtendedEphemeris *)*((void *)this + 10);
  if (!v23) {
    operator new();
  }
  int v24 = (const proto::gnss::DecodedExtendedEphemeris *)*((void *)a2 + 10);
  if (!v24) {
    int v24 = *(const proto::gnss::DecodedExtendedEphemeris **)(proto::gpsd::Indication::default_instance_ + 80);
  }
  proto::gnss::DecodedExtendedEphemeris::MergeFrom(v23, v24);
  unsigned int v4 = *((_DWORD *)a2 + 54);
  if ((v4 & 0x800) == 0)
  {
LABEL_51:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_76;
  }
LABEL_71:
  *((_DWORD *)this + 54) |= 0x800u;
  uint64_t v25 = (proto::gnss::DecodedRti *)*((void *)this + 11);
  if (!v25) {
    operator new();
  }
  uint64_t v26 = (const proto::gnss::DecodedRti *)*((void *)a2 + 11);
  if (!v26) {
    uint64_t v26 = *(const proto::gnss::DecodedRti **)(proto::gpsd::Indication::default_instance_ + 88);
  }
  proto::gnss::DecodedRti::MergeFrom(v25, v26);
  unsigned int v4 = *((_DWORD *)a2 + 54);
  if ((v4 & 0x1000) == 0)
  {
LABEL_52:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_78;
  }
LABEL_76:
  unsigned int v27 = *((_DWORD *)a2 + 24);
  if (v27 >= 0xA) {
    __assert_rtn("set_start_status", "GpsdProtocol.pb.h", 8175, "::proto::gnss::Result_IsValid(value)");
  }
  *((_DWORD *)this + 54) |= 0x1000u;
  *((_DWORD *)this + 24) = v27;
  unsigned int v4 = *((_DWORD *)a2 + 54);
  if ((v4 & 0x2000) == 0)
  {
LABEL_53:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_80;
  }
LABEL_78:
  unsigned int v28 = *((_DWORD *)a2 + 25);
  if (v28 >= 0xA) {
    __assert_rtn("set_stop_status", "GpsdProtocol.pb.h", 8198, "::proto::gnss::Result_IsValid(value)");
  }
  *((_DWORD *)this + 54) |= 0x2000u;
  *((_DWORD *)this + 25) = v28;
  unsigned int v4 = *((_DWORD *)a2 + 54);
  if ((v4 & 0x4000) == 0)
  {
LABEL_54:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_85;
  }
LABEL_80:
  *((_DWORD *)this + 54) |= 0x4000u;
  uint64_t v29 = *((void *)this + 13);
  if (!v29) {
    operator new();
  }
  uint64_t v30 = *((void *)a2 + 13);
  if (!v30) {
    uint64_t v30 = *(void *)(proto::gpsd::Indication::default_instance_ + 104);
  }
  sub_1000C52EC(v29, v30);
  unsigned int v4 = *((_DWORD *)a2 + 54);
  if ((v4 & 0x8000) != 0)
  {
LABEL_85:
    *((_DWORD *)this + 54) |= 0x8000u;
    int v31 = (_DWORD *)*((void *)this + 14);
    if (!v31) {
      operator new();
    }
    uint64_t v32 = *((void *)a2 + 14);
    if (!v32) {
      uint64_t v32 = *(void *)(proto::gpsd::Indication::default_instance_ + 112);
    }
    sub_1000C5390(v31, v32);
    unsigned int v4 = *((_DWORD *)a2 + 54);
  }
LABEL_90:
  if ((v4 & 0xFF0000) == 0) {
    goto LABEL_140;
  }
  if ((v4 & 0x10000) != 0)
  {
    *((_DWORD *)this + 54) |= 0x10000u;
    uint64_t v33 = *((void *)this + 15);
    if (!v33) {
      operator new();
    }
    uint64_t v34 = *((void *)a2 + 15);
    if (!v34) {
      uint64_t v34 = *(void *)(proto::gpsd::Indication::default_instance_ + 120);
    }
    sub_1000C547C(v33, v34);
    unsigned int v4 = *((_DWORD *)a2 + 54);
    if ((v4 & 0x20000) == 0)
    {
LABEL_93:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_94;
      }
      goto LABEL_110;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_93;
  }
  *((_DWORD *)this + 54) |= 0x20000u;
  int v35 = (proto::gnss::Emergency::SummaryReport *)*((void *)this + 16);
  if (!v35) {
    operator new();
  }
  int v36 = (const proto::gnss::Emergency::SummaryReport *)*((void *)a2 + 16);
  if (!v36) {
    int v36 = *(const proto::gnss::Emergency::SummaryReport **)(proto::gpsd::Indication::default_instance_ + 128);
  }
  proto::gnss::Emergency::SummaryReport::MergeFrom(v35, v36);
  unsigned int v4 = *((_DWORD *)a2 + 54);
  if ((v4 & 0x40000) == 0)
  {
LABEL_94:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_115;
  }
LABEL_110:
  *((_DWORD *)this + 54) |= 0x40000u;
  uint64_t v37 = (proto::gnss::Emergency::PositionReport *)*((void *)this + 17);
  if (!v37) {
    operator new();
  }
  uint64_t v38 = (const proto::gnss::Emergency::PositionReport *)*((void *)a2 + 17);
  if (!v38) {
    uint64_t v38 = *(const proto::gnss::Emergency::PositionReport **)(proto::gpsd::Indication::default_instance_ + 136);
  }
  proto::gnss::Emergency::PositionReport::MergeFrom(v37, v38);
  unsigned int v4 = *((_DWORD *)a2 + 54);
  if ((v4 & 0x80000) == 0)
  {
LABEL_95:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_120;
  }
LABEL_115:
  *((_DWORD *)this + 54) |= 0x80000u;
  int v39 = (proto::gnss::Emergency::MeasurementReport *)*((void *)this + 18);
  if (!v39) {
    operator new();
  }
  int v40 = (const proto::gnss::Emergency::MeasurementReport *)*((void *)a2 + 18);
  if (!v40) {
    int v40 = *(const proto::gnss::Emergency::MeasurementReport **)(proto::gpsd::Indication::default_instance_ + 144);
  }
  proto::gnss::Emergency::MeasurementReport::MergeFrom(v39, v40);
  unsigned int v4 = *((_DWORD *)a2 + 54);
  if ((v4 & 0x100000) == 0)
  {
LABEL_96:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_125;
  }
LABEL_120:
  *((_DWORD *)this + 54) |= 0x100000u;
  uint64_t v41 = (proto::gnss::Emergency::AssistanceNeededReport *)*((void *)this + 19);
  if (!v41) {
    operator new();
  }
  uint64_t v42 = (const proto::gnss::Emergency::AssistanceNeededReport *)*((void *)a2 + 19);
  if (!v42) {
    uint64_t v42 = *(const proto::gnss::Emergency::AssistanceNeededReport **)(proto::gpsd::Indication::default_instance_ + 152);
  }
  proto::gnss::Emergency::AssistanceNeededReport::MergeFrom(v41, v42);
  unsigned int v4 = *((_DWORD *)a2 + 54);
  if ((v4 & 0x200000) == 0)
  {
LABEL_97:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_130;
  }
LABEL_125:
  *((_DWORD *)this + 54) |= 0x200000u;
  int v43 = (proto::gnss::Emergency::CellFTAssistanceRequest *)*((void *)this + 20);
  if (!v43) {
    operator new();
  }
  int v44 = (const proto::gnss::Emergency::CellFTAssistanceRequest *)*((void *)a2 + 20);
  if (!v44) {
    int v44 = *(const proto::gnss::Emergency::CellFTAssistanceRequest **)(proto::gpsd::Indication::default_instance_ + 160);
  }
  proto::gnss::Emergency::CellFTAssistanceRequest::MergeFrom(v43, v44);
  unsigned int v4 = *((_DWORD *)a2 + 54);
  if ((v4 & 0x400000) == 0)
  {
LABEL_98:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_140;
    }
    goto LABEL_135;
  }
LABEL_130:
  *((_DWORD *)this + 54) |= 0x400000u;
  uint64_t v45 = (proto::gnss::Emergency::MeasurementReportWithEstimate *)*((void *)this + 21);
  if (!v45) {
    operator new();
  }
  uint64_t v46 = (const proto::gnss::Emergency::MeasurementReportWithEstimate *)*((void *)a2 + 21);
  if (!v46) {
    uint64_t v46 = *(const proto::gnss::Emergency::MeasurementReportWithEstimate **)(proto::gpsd::Indication::default_instance_
  }
                                                                          + 168);
  proto::gnss::Emergency::MeasurementReportWithEstimate::MergeFrom(v45, v46);
  unsigned int v4 = *((_DWORD *)a2 + 54);
  if ((v4 & 0x800000) != 0)
  {
LABEL_135:
    *((_DWORD *)this + 54) |= 0x800000u;
    int v47 = (proto::gnss::Emergency::SessionStatus *)*((void *)this + 22);
    if (!v47) {
      operator new();
    }
    int v48 = (const proto::gnss::Emergency::SessionStatus *)*((void *)a2 + 22);
    if (!v48) {
      int v48 = *(const proto::gnss::Emergency::SessionStatus **)(proto::gpsd::Indication::default_instance_ + 176);
    }
    proto::gnss::Emergency::SessionStatus::MergeFrom(v47, v48);
    unsigned int v4 = *((_DWORD *)a2 + 54);
  }
LABEL_140:
  if (!HIBYTE(v4)) {
    return;
  }
  if ((v4 & 0x1000000) != 0)
  {
    *((_DWORD *)this + 54) |= 0x1000000u;
    int v52 = (proto::gnss::Emergency::Init *)*((void *)this + 23);
    if (!v52) {
      operator new();
    }
    uint64_t v53 = (const proto::gnss::Emergency::Init *)*((void *)a2 + 23);
    if (!v53) {
      uint64_t v53 = *(const proto::gnss::Emergency::Init **)(proto::gpsd::Indication::default_instance_ + 184);
    }
    proto::gnss::Emergency::Init::MergeFrom(v52, v53);
    unsigned int v4 = *((_DWORD *)a2 + 54);
    if ((v4 & 0x2000000) == 0)
    {
LABEL_143:
      if ((v4 & 0x4000000) == 0) {
        goto LABEL_144;
      }
      goto LABEL_159;
    }
  }
  else if ((v4 & 0x2000000) == 0)
  {
    goto LABEL_143;
  }
  int v54 = *((_DWORD *)a2 + 48);
  *((_DWORD *)this + 54) |= 0x2000000u;
  *((_DWORD *)this + 48) = v54;
  unsigned int v4 = *((_DWORD *)a2 + 54);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_144:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_146;
    }
    goto LABEL_145;
  }
LABEL_159:
  unsigned int v55 = *((_DWORD *)a2 + 49);
  if (v55 >= 3 && v55 != 4) {
    __assert_rtn("set_supl_init_decode_result", "GpsdProtocol.pb.h", 8705, "::proto::gpsd::SuplInitDecodeResult_IsValid(value)");
  }
  *((_DWORD *)this + 54) |= 0x4000000u;
  *((_DWORD *)this + 49) = v55;
  unsigned int v4 = *((_DWORD *)a2 + 54);
  if ((v4 & 0x8000000) == 0) {
    goto LABEL_146;
  }
LABEL_145:
  int v49 = *((_DWORD *)a2 + 52);
  *((_DWORD *)this + 54) |= 0x8000000u;
  *((_DWORD *)this + 52) = v49;
  unsigned int v4 = *((_DWORD *)a2 + 54);
LABEL_146:
  if ((v4 & 0x10000000) != 0)
  {
    *((_DWORD *)this + 54) |= 0x10000000u;
    uint64_t v50 = (proto::gnss::Emergency::WlanMeasurementRequest *)*((void *)this + 25);
    if (!v50) {
      operator new();
    }
    int v51 = (const proto::gnss::Emergency::WlanMeasurementRequest *)*((void *)a2 + 25);
    if (!v51) {
      int v51 = *(const proto::gnss::Emergency::WlanMeasurementRequest **)(proto::gpsd::Indication::default_instance_ + 200);
    }
    proto::gnss::Emergency::WlanMeasurementRequest::MergeFrom(v50, v51);
  }
}

void sub_1000C18CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *proto::gpsd::Indication::SharedDtor(void *this)
{
  if ((void *)proto::gpsd::Indication::default_instance_ != this)
  {
    int v1 = this;
    uint64_t v2 = this[3];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[4];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[5];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[6];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[7];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[8];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = v1[9];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = v1[10];
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = v1[11];
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = v1[13];
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t v12 = v1[14];
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
    uint64_t v13 = v1[15];
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    }
    uint64_t v14 = v1[16];
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    }
    uint64_t v15 = v1[17];
    if (v15) {
      (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    }
    uint64_t v16 = v1[18];
    if (v16) {
      (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    }
    uint64_t v17 = v1[19];
    if (v17) {
      (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
    }
    uint64_t v18 = v1[20];
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
    }
    uint64_t v19 = v1[21];
    if (v19) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
    }
    uint64_t v20 = v1[22];
    if (v20) {
      (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
    }
    uint64_t v21 = v1[23];
    if (v21) {
      (*(void (**)(uint64_t))(*(void *)v21 + 8))(v21);
    }
    this = (void *)v1[25];
    if (this)
    {
      uint64_t v22 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v22();
    }
  }
  return this;
}

void proto::gpsd::Indication::~Indication(proto::gpsd::Indication *this)
{
  *(void *)this = &off_10010DB88;
  proto::gpsd::Indication::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000C1D1C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &off_10010DB88;
  proto::gpsd::Indication::SharedDtor(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000C1D84()
{
}

uint64_t proto::gpsd::Indication::Clear(uint64_t this)
{
  uint64_t v1 = this;
  unsigned int v2 = *(_DWORD *)(this + 216);
  if ((_BYTE)v2)
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    if ((v2 & 8) != 0)
    {
      this = *(void *)(this + 24);
      if (this)
      {
        this = proto::gnss::Fix::Clear(this);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        this = CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::Clear((CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)this);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 40);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 48))
        {
          *(_DWORD *)(v3 + 40) = 0;
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + 8) = 0u;
        }
        *(_DWORD *)(v3 + 48) = 0;
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 48);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 32))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(_DWORD *)(v4 + 23) = 0;
        }
        *(_DWORD *)(v4 + 32) = 0;
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x80) != 0)
    {
      this = *(void *)(v1 + 56);
      if (this)
      {
        this = proto::gnss::TimeTransferDataExtend::Clear(this);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      this = *(void *)(v1 + 64);
      if (this)
      {
        this = sub_1000C20F0(this);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x200) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 72);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 16)) {
          *(_DWORD *)(v5 + 8) = 0;
        }
        *(_DWORD *)(v5 + 16) = 0;
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x400) != 0)
    {
      uint64_t v6 = *(void *)(v1 + 80);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 36))
        {
          *(_DWORD *)(v6 + 28) = 0;
          *(void *)(v6 + 8) = 0;
          *(void *)(v6 + 16) = 0;
          *(unsigned char *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 36) = 0;
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x800) != 0)
    {
      uint64_t v7 = *(void *)(v1 + 88);
      if (v7)
      {
        if (*(unsigned char *)(v7 + 24))
        {
          *(void *)(v7 + 8) = 0;
          *(unsigned char *)(v7 + 16) = 0;
        }
        *(_DWORD *)(v7 + 24) = 0;
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    *(void *)(v1 + 96) = 0;
    if ((v2 & 0x4000) != 0)
    {
      uint64_t v8 = *(void *)(v1 + 104);
      if (v8)
      {
        if (*(unsigned char *)(v8 + 16)) {
          *(unsigned char *)(v8 + 8) = 0;
        }
        *(_DWORD *)(v8 + 16) = 0;
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x8000) != 0)
    {
      uint64_t v9 = *(void *)(v1 + 112);
      if (v9)
      {
        if (*(unsigned char *)(v9 + 24))
        {
          *(void *)(v9 + 8) = 0;
          *(_DWORD *)(v9 + 16) = 0;
        }
        *(_DWORD *)(v9 + 24) = 0;
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      this = *(void *)(v1 + 120);
      if (this)
      {
        this = sub_1000C21C8(this);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x20000) != 0)
    {
      uint64_t v10 = *(void *)(v1 + 128);
      if (v10)
      {
        int v11 = *(_DWORD *)(v10 + 124);
        if ((_BYTE)v11)
        {
          *(void *)(v10 + 56) = 0;
          *(_OWORD *)(v10 + 40) = 0u;
          *(_OWORD *)(v10 + 24) = 0u;
          *(_OWORD *)(v10 + 8) = 0u;
        }
        if ((v11 & 0xFF00) != 0)
        {
          *(_OWORD *)(v10 + 89) = 0u;
          *(_OWORD *)(v10 + 64) = 0u;
          *(_OWORD *)(v10 + 80) = 0u;
        }
        if ((v11 & 0xFF0000) != 0)
        {
          *(unsigned char *)(v10 + 105) = 0;
          *(void *)(v10 + 112) = 0;
          *(_DWORD *)(v10 + 108) = 0;
        }
        *(_DWORD *)(v10 + 124) = 0;
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x40000) != 0)
    {
      this = *(void *)(v1 + 136);
      if (this)
      {
        this = proto::gnss::Emergency::PositionReport::Clear(this);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x80000) != 0)
    {
      this = *(void *)(v1 + 144);
      if (this)
      {
        this = proto::gnss::Emergency::MeasurementReport::Clear(this);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x100000) != 0)
    {
      this = *(void *)(v1 + 152);
      if (this)
      {
        this = proto::gnss::Emergency::AssistanceNeededReport::Clear(this);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x200000) != 0)
    {
      uint64_t v12 = *(void *)(v1 + 160);
      if (v12)
      {
        if (*(unsigned char *)(v12 + 16)) {
          *(_DWORD *)(v12 + 8) = 0;
        }
        *(_DWORD *)(v12 + 16) = 0;
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x400000) != 0)
    {
      this = *(void *)(v1 + 168);
      if (this)
      {
        this = proto::gnss::Emergency::MeasurementReportWithEstimate::Clear(this);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x800000) != 0)
    {
      this = *(void *)(v1 + 176);
      if (this)
      {
        this = proto::gnss::Emergency::SessionStatus::Clear(this);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
  }
  if (HIBYTE(v2))
  {
    if ((v2 & 0x1000000) != 0)
    {
      this = *(void *)(v1 + 184);
      if (this)
      {
        this = proto::gnss::Emergency::Init::Clear(this);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    *(void *)(v1 + 192) = 0;
    *(_DWORD *)(v1 + 208) = 0;
    if ((v2 & 0x10000000) != 0)
    {
      uint64_t v13 = *(void *)(v1 + 200);
      if (v13)
      {
        if (*(unsigned char *)(v13 + 20))
        {
          *(_DWORD *)(v13 + 8) = 0;
          *(unsigned char *)(v13 + 12) = 0;
        }
        *(_DWORD *)(v13 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 216) = 0;
  return this;
}

uint64_t sub_1000C20D8(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 23) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1000C20F0(uint64_t result)
{
  uint64_t v1 = result;
  if ((*(unsigned char *)(result + 44) & 2) != 0)
  {
    uint64_t v2 = *(void *)(result + 32);
    if (v2)
    {
      if (*(unsigned char *)(v2 + 20))
      {
        *(_DWORD *)(v2 + 11) = 0;
        *(_DWORD *)(v2 + 8) = 0;
      }
      *(_DWORD *)(v2 + 20) = 0;
    }
  }
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(v1 + 8) + 8 * v3);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return result;
}

uint64_t sub_1000C2188(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1000C219C(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(unsigned char *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1000C21B0(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1000C21C8(uint64_t result)
{
  char v1 = *(unsigned char *)(result + 36);
  if (v1)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    if ((v1 & 4) != 0)
    {
      uint64_t v2 = *(void *)(result + 24);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1000C2214(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 16);
  uint64_t v6 = (unsigned int *)(a1 + 192);
  uint64_t v7 = (unsigned int *)(a1 + 208);
  while (2)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        unsigned int v233 = 0;
        int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && (*v11 & 0x80000000) == 0)
        {
          unsigned int v12 = *v11;
          *((void *)this + 1) = v11 + 1;
          goto LABEL_89;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233);
        if (result)
        {
          unsigned int v12 = v233;
LABEL_89:
          if (v12 - 9 < 0x12 || v12 <= 5)
          {
            if (v12 - 9 >= 0x12 && v12 >= 6) {
              __assert_rtn("set_type", "GpsdProtocol.pb.h", 7729, "::proto::gpsd::Indication_Type_IsValid(value)");
            }
            *(_DWORD *)(a1 + 216) |= 1u;
            *(_DWORD *)(a1 + 8) = v12;
          }
          int v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
          if ((unint64_t)v40 < v20 && *v40 == 16)
          {
            uint64_t v21 = v40 + 1;
            *((void *)this + 1) = v21;
            goto LABEL_101;
          }
          continue;
        }
        break;
      case 2u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        uint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
LABEL_101:
        unsigned int v233 = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233);
          if (!result) {
            return result;
          }
          unint64_t v41 = v233;
        }
        else
        {
          unint64_t v41 = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        if (proto::gpsd::Request_Type_IsValid((proto::gpsd *)v41))
        {
          *(_DWORD *)(a1 + 216) |= 2u;
          *(_DWORD *)(a1 + 12) = v41;
        }
        uint64_t v42 = (unsigned char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        if ((unint64_t)v42 >= v22 || *v42 != 24) {
          continue;
        }
        int v23 = v42 + 1;
        *((void *)this + 1) = v23;
LABEL_111:
        if ((unint64_t)v23 >= v22 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v43 = (unsigned char *)*((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v23;
          int v43 = v23 + 1;
          *((void *)this + 1) = v43;
        }
        int v24 = *(_DWORD *)(a1 + 216) | 4;
        *(_DWORD *)(a1 + 216) = v24;
        if ((unint64_t)v43 >= v22 || *v43 != 34) {
          continue;
        }
        *((void *)this + 1) = v43 + 1;
LABEL_119:
        *(_DWORD *)(a1 + 216) = v24 | 8;
        int v44 = *(proto::gnss::Fix **)(a1 + 24);
        if (!v44) {
          operator new();
        }
        unsigned int v233 = 0;
        uint64_t v45 = (char *)*((void *)this + 1);
        if ((unint64_t)v45 >= *((void *)this + 2) || *v45 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v45;
          *((void *)this + 1) = v45 + 1;
        }
        int v46 = *((_DWORD *)this + 14);
        int v47 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v46 + 1;
        if (v46 >= v47) {
          return 0;
        }
        int v48 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!proto::gnss::Fix::MergePartialFromCodedStream(v44, this, v49) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v48);
        int v50 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v50, 1);
        int v51 = v50 - 1;
        if (v51 < 0 == v35) {
          *((_DWORD *)this + 14) = v51;
        }
        int v52 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v52 >= *((void *)this + 2) || *v52 != 42) {
          continue;
        }
        *((void *)this + 1) = v52 + 1;
LABEL_133:
        *(_DWORD *)(a1 + 216) |= 0x10u;
        uint64_t v53 = *(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents **)(a1 + 32);
        if (!v53) {
          operator new();
        }
        unsigned int v233 = 0;
        int v54 = (char *)*((void *)this + 1);
        if ((unint64_t)v54 >= *((void *)this + 2) || *v54 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v54;
          *((void *)this + 1) = v54 + 1;
        }
        int v55 = *((_DWORD *)this + 14);
        int v56 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v55 + 1;
        if (v55 >= v56) {
          return 0;
        }
        int v57 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::MergePartialFromCodedStream(v53, this, v58)|| !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v57);
        int v59 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v59, 1);
        int v60 = v59 - 1;
        if (v60 < 0 == v35) {
          *((_DWORD *)this + 14) = v60;
        }
        uint64_t v61 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v61 >= *((void *)this + 2) || *v61 != 50) {
          continue;
        }
        *((void *)this + 1) = v61 + 1;
LABEL_147:
        *(_DWORD *)(a1 + 216) |= 0x20u;
        uint64_t v62 = *(proto::gnss::PwrMeasurement **)(a1 + 40);
        if (!v62) {
          operator new();
        }
        unsigned int v233 = 0;
        int v63 = (char *)*((void *)this + 1);
        if ((unint64_t)v63 >= *((void *)this + 2) || *v63 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v63;
          *((void *)this + 1) = v63 + 1;
        }
        int v64 = *((_DWORD *)this + 14);
        int v65 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v64 + 1;
        if (v64 >= v65) {
          return 0;
        }
        int v66 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!proto::gnss::PwrMeasurement::MergePartialFromCodedStream(v62, this, v67)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v66);
        int v68 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v68, 1);
        int v69 = v68 - 1;
        if (v69 < 0 == v35) {
          *((_DWORD *)this + 14) = v69;
        }
        int v70 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v70 >= *((void *)this + 2) || *v70 != 74) {
          continue;
        }
        *((void *)this + 1) = v70 + 1;
LABEL_161:
        *(_DWORD *)(a1 + 216) |= 0x40u;
        uint64_t v71 = *(void *)(a1 + 48);
        if (!v71) {
          operator new();
        }
        unsigned int v233 = 0;
        int v72 = (char *)*((void *)this + 1);
        if ((unint64_t)v72 >= *((void *)this + 2) || *v72 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v72;
          *((void *)this + 1) = v72 + 1;
        }
        int v73 = *((_DWORD *)this + 14);
        int v74 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v73 + 1;
        if (v73 >= v74) {
          return 0;
        }
        int v75 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!sub_1000C5684(v71, this, v76) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v75);
        int v77 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v77, 1);
        int v78 = v77 - 1;
        if (v78 < 0 == v35) {
          *((_DWORD *)this + 14) = v78;
        }
        uint64_t v79 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v79 >= *((void *)this + 2) || *v79 != 82) {
          continue;
        }
        *((void *)this + 1) = v79 + 1;
LABEL_175:
        *(_DWORD *)(a1 + 216) |= 0x80u;
        int v80 = *(proto::gnss::TimeTransferDataExtend **)(a1 + 56);
        if (!v80) {
          operator new();
        }
        unsigned int v233 = 0;
        int v81 = (char *)*((void *)this + 1);
        if ((unint64_t)v81 >= *((void *)this + 2) || *v81 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v81;
          *((void *)this + 1) = v81 + 1;
        }
        int v82 = *((_DWORD *)this + 14);
        int v83 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v82 + 1;
        if (v82 >= v83) {
          return 0;
        }
        int v84 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!proto::gnss::TimeTransferDataExtend::MergePartialFromCodedStream(v80, this, v85)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v84);
        int v86 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v86, 1);
        int v87 = v86 - 1;
        if (v87 < 0 == v35) {
          *((_DWORD *)this + 14) = v87;
        }
        uint64_t v88 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v88 <= 1 || *v88 != 130 || v88[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v88 + 2;
LABEL_190:
        *(_DWORD *)(a1 + 216) |= 0x100u;
        uint64_t v89 = *(void *)(a1 + 64);
        if (!v89) {
          operator new();
        }
        unsigned int v233 = 0;
        int v90 = (char *)*((void *)this + 1);
        if ((unint64_t)v90 >= *((void *)this + 2) || *v90 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v90;
          *((void *)this + 1) = v90 + 1;
        }
        int v91 = *((_DWORD *)this + 14);
        int v92 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v91 + 1;
        if (v91 >= v92) {
          return 0;
        }
        int v93 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!sub_1000CE0D0(v89, this, v94) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v93);
        int v95 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v95, 1);
        int v96 = v95 - 1;
        if (v96 < 0 == v35) {
          *((_DWORD *)this + 14) = v96;
        }
        int v97 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v97 <= 1 || *v97 != 138 || v97[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v97 + 2;
LABEL_205:
        *(_DWORD *)(a1 + 216) |= 0x200u;
        uint64_t v98 = *(void *)(a1 + 72);
        if (!v98) {
          operator new();
        }
        unsigned int v233 = 0;
        int v99 = (char *)*((void *)this + 1);
        if ((unint64_t)v99 >= *((void *)this + 2) || *v99 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v99;
          *((void *)this + 1) = v99 + 1;
        }
        int v100 = *((_DWORD *)this + 14);
        int v101 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v100 + 1;
        if (v100 >= v101) {
          return 0;
        }
        int v102 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!sub_1000CE72C(v98, this, v103) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v102);
        int v104 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v104, 1);
        int v105 = v104 - 1;
        if (v105 < 0 == v35) {
          *((_DWORD *)this + 14) = v105;
        }
        int v106 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v106 <= 1 || *v106 != 146 || v106[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v106 + 2;
LABEL_220:
        *(_DWORD *)(a1 + 216) |= 0x400u;
        int v107 = *(proto::gnss::DecodedExtendedEphemeris **)(a1 + 80);
        if (!v107) {
          operator new();
        }
        unsigned int v233 = 0;
        uint64_t v108 = (char *)*((void *)this + 1);
        if ((unint64_t)v108 >= *((void *)this + 2) || *v108 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v108;
          *((void *)this + 1) = v108 + 1;
        }
        int v109 = *((_DWORD *)this + 14);
        int v110 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v109 + 1;
        if (v109 >= v110) {
          return 0;
        }
        int v111 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!proto::gnss::DecodedExtendedEphemeris::MergePartialFromCodedStream(v107, this, v112)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v111);
        int v113 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v113, 1);
        int v114 = v113 - 1;
        if (v114 < 0 == v35) {
          *((_DWORD *)this + 14) = v114;
        }
        v115 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v115 <= 1 || *v115 != 154 || v115[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v115 + 2;
LABEL_235:
        *(_DWORD *)(a1 + 216) |= 0x800u;
        uint64_t v116 = *(proto::gnss::DecodedRti **)(a1 + 88);
        if (!v116) {
          operator new();
        }
        unsigned int v233 = 0;
        int v117 = (char *)*((void *)this + 1);
        if ((unint64_t)v117 >= *((void *)this + 2) || *v117 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v117;
          *((void *)this + 1) = v117 + 1;
        }
        int v118 = *((_DWORD *)this + 14);
        int v119 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v118 + 1;
        if (v118 >= v119) {
          return 0;
        }
        int v120 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!proto::gnss::DecodedRti::MergePartialFromCodedStream(v116, this, v121)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v120);
        int v122 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v122, 1);
        int v123 = v122 - 1;
        if (v123 < 0 == v35) {
          *((_DWORD *)this + 14) = v123;
        }
        v124 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((int)v15 - (int)v124 <= 1 || *v124 != 160 || v124[1] != 1) {
          continue;
        }
        uint64_t v16 = (char *)(v124 + 2);
        *((void *)this + 1) = v16;
LABEL_250:
        unsigned int v233 = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233);
          if (!result) {
            return result;
          }
          unsigned int v125 = v233;
        }
        else
        {
          unsigned int v125 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        if (v125 <= 9)
        {
          *(_DWORD *)(a1 + 216) |= 0x2000u;
          *(_DWORD *)(a1 + 100) = v125;
        }
        v126 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v126 < 2 || *v126 != 170 || v126[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v126 + 2;
LABEL_261:
        *(_DWORD *)(a1 + 216) |= 0x4000u;
        uint64_t v127 = *(void *)(a1 + 104);
        if (!v127) {
          operator new();
        }
        unsigned int v233 = 0;
        int v128 = (char *)*((void *)this + 1);
        if ((unint64_t)v128 >= *((void *)this + 2) || *v128 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v128;
          *((void *)this + 1) = v128 + 1;
        }
        int v129 = *((_DWORD *)this + 14);
        int v130 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v129 + 1;
        if (v129 >= v130) {
          return 0;
        }
        int v131 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!sub_1000D20B0(v127, this, v132) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v131);
        int v133 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v133, 1);
        int v134 = v133 - 1;
        if (v134 < 0 == v35) {
          *((_DWORD *)this + 14) = v134;
        }
        v135 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v25 = *((void *)this + 2);
        if ((int)v25 - (int)v135 <= 1 || *v135 != 176 || v135[1] != 1) {
          continue;
        }
        uint64_t v26 = (char *)(v135 + 2);
        *((void *)this + 1) = v26;
LABEL_276:
        unsigned int v233 = 0;
        if ((unint64_t)v26 >= v25 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233);
          if (!result) {
            return result;
          }
          unsigned int v136 = v233;
        }
        else
        {
          unsigned int v136 = *v26;
          *((void *)this + 1) = v26 + 1;
        }
        if (v136 <= 9)
        {
          *(_DWORD *)(a1 + 216) |= 0x1000u;
          *(_DWORD *)(a1 + 96) = v136;
        }
        int v137 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v137 < 2 || *v137 != 186 || v137[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v137 + 2;
LABEL_287:
        *(_DWORD *)(a1 + 216) |= 0x8000u;
        int v138 = *(_DWORD **)(a1 + 112);
        if (!v138) {
          operator new();
        }
        unsigned int v233 = 0;
        unsigned int v139 = (char *)*((void *)this + 1);
        if ((unint64_t)v139 >= *((void *)this + 2) || *v139 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v139;
          *((void *)this + 1) = v139 + 1;
        }
        int v140 = *((_DWORD *)this + 14);
        int v141 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v140 + 1;
        if (v140 >= v141) {
          return 0;
        }
        int v142 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!sub_1000D2388(v138, this, v143) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v142);
        int v144 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v144, 1);
        int v145 = v144 - 1;
        if (v145 < 0 == v35) {
          *((_DWORD *)this + 14) = v145;
        }
        int v146 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v146 <= 1 || *v146 != 202 || v146[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v146 + 2;
LABEL_302:
        *(_DWORD *)(a1 + 216) |= 0x10000u;
        uint64_t v147 = *(void *)(a1 + 120);
        if (!v147) {
          operator new();
        }
        unsigned int v233 = 0;
        int v148 = (char *)*((void *)this + 1);
        if ((unint64_t)v148 >= *((void *)this + 2) || *v148 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v148;
          *((void *)this + 1) = v148 + 1;
        }
        int v149 = *((_DWORD *)this + 14);
        int v150 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v149 + 1;
        if (v149 >= v150) {
          return 0;
        }
        int v151 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!sub_1000D28F4(v147, this, v152) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v151);
        int v153 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v153, 1);
        int v154 = v153 - 1;
        if (v154 < 0 == v35) {
          *((_DWORD *)this + 14) = v154;
        }
        int v155 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v155 <= 1 || *v155 != 242 || v155[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v155 + 2;
LABEL_317:
        *(_DWORD *)(a1 + 216) |= 0x20000u;
        int v156 = *(proto::gnss::Emergency::SummaryReport **)(a1 + 128);
        if (!v156) {
          operator new();
        }
        unsigned int v233 = 0;
        int v157 = (char *)*((void *)this + 1);
        if ((unint64_t)v157 >= *((void *)this + 2) || *v157 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v157;
          *((void *)this + 1) = v157 + 1;
        }
        int v158 = *((_DWORD *)this + 14);
        int v159 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v158 + 1;
        if (v158 >= v159) {
          return 0;
        }
        int v160 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!proto::gnss::Emergency::SummaryReport::MergePartialFromCodedStream(v156, this, v161)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v160);
        int v162 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v162, 1);
        int v163 = v162 - 1;
        if (v163 < 0 == v35) {
          *((_DWORD *)this + 14) = v163;
        }
        int v164 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v164 <= 1 || *v164 != 194 || v164[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v164 + 2;
LABEL_332:
        *(_DWORD *)(a1 + 216) |= 0x40000u;
        int v165 = *(proto::gnss::Emergency::PositionReport **)(a1 + 136);
        if (!v165) {
          operator new();
        }
        unsigned int v233 = 0;
        int v166 = (char *)*((void *)this + 1);
        if ((unint64_t)v166 >= *((void *)this + 2) || *v166 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v166;
          *((void *)this + 1) = v166 + 1;
        }
        int v167 = *((_DWORD *)this + 14);
        int v168 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v167 + 1;
        if (v167 >= v168) {
          return 0;
        }
        int v169 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!proto::gnss::Emergency::PositionReport::MergePartialFromCodedStream(v165, this, v170)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v169);
        int v171 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v171, 1);
        int v172 = v171 - 1;
        if (v172 < 0 == v35) {
          *((_DWORD *)this + 14) = v172;
        }
        int v173 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v173 <= 1 || *v173 != 202 || v173[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v173 + 2;
LABEL_347:
        *(_DWORD *)(a1 + 216) |= 0x80000u;
        int v174 = *(proto::gnss::Emergency::MeasurementReport **)(a1 + 144);
        if (!v174) {
          operator new();
        }
        unsigned int v233 = 0;
        int v175 = (char *)*((void *)this + 1);
        if ((unint64_t)v175 >= *((void *)this + 2) || *v175 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v175;
          *((void *)this + 1) = v175 + 1;
        }
        int v176 = *((_DWORD *)this + 14);
        int v177 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v176 + 1;
        if (v176 >= v177) {
          return 0;
        }
        int v178 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!proto::gnss::Emergency::MeasurementReport::MergePartialFromCodedStream(v174, this, v179)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v178);
        int v180 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v180, 1);
        int v181 = v180 - 1;
        if (v181 < 0 == v35) {
          *((_DWORD *)this + 14) = v181;
        }
        int v182 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v182 <= 1 || *v182 != 210 || v182[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v182 + 2;
LABEL_362:
        *(_DWORD *)(a1 + 216) |= 0x100000u;
        int v183 = *(proto::gnss::Emergency::AssistanceNeededReport **)(a1 + 152);
        if (!v183) {
          operator new();
        }
        unsigned int v233 = 0;
        unsigned int v184 = (char *)*((void *)this + 1);
        if ((unint64_t)v184 >= *((void *)this + 2) || *v184 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v184;
          *((void *)this + 1) = v184 + 1;
        }
        int v185 = *((_DWORD *)this + 14);
        int v186 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v185 + 1;
        if (v185 >= v186) {
          return 0;
        }
        int v187 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!proto::gnss::Emergency::AssistanceNeededReport::MergePartialFromCodedStream(v183, this, v188)|| !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v187);
        int v189 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v189, 1);
        int v190 = v189 - 1;
        if (v190 < 0 == v35) {
          *((_DWORD *)this + 14) = v190;
        }
        int v191 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v191 <= 1 || *v191 != 218 || v191[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v191 + 2;
LABEL_377:
        *(_DWORD *)(a1 + 216) |= 0x200000u;
        int v192 = *(proto::gnss::Emergency::CellFTAssistanceRequest **)(a1 + 160);
        if (!v192) {
          operator new();
        }
        unsigned int v233 = 0;
        unsigned int v193 = (char *)*((void *)this + 1);
        if ((unint64_t)v193 >= *((void *)this + 2) || *v193 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v193;
          *((void *)this + 1) = v193 + 1;
        }
        int v194 = *((_DWORD *)this + 14);
        int v195 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v194 + 1;
        if (v194 >= v195) {
          return 0;
        }
        int v196 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!proto::gnss::Emergency::CellFTAssistanceRequest::MergePartialFromCodedStream(v192, this, v197)|| !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v196);
        int v198 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v198, 1);
        int v199 = v198 - 1;
        if (v199 < 0 == v35) {
          *((_DWORD *)this + 14) = v199;
        }
        int v200 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v200 <= 1 || *v200 != 226 || v200[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v200 + 2;
LABEL_392:
        *(_DWORD *)(a1 + 216) |= 0x400000u;
        int v201 = *(proto::gnss::Emergency::MeasurementReportWithEstimate **)(a1 + 168);
        if (!v201) {
          operator new();
        }
        unsigned int v233 = 0;
        unsigned int v202 = (char *)*((void *)this + 1);
        if ((unint64_t)v202 >= *((void *)this + 2) || *v202 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v202;
          *((void *)this + 1) = v202 + 1;
        }
        int v203 = *((_DWORD *)this + 14);
        int v204 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v203 + 1;
        if (v203 >= v204) {
          return 0;
        }
        int v205 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!proto::gnss::Emergency::MeasurementReportWithEstimate::MergePartialFromCodedStream(v201, this, v206)|| !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v205);
        int v207 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v207, 1);
        int v208 = v207 - 1;
        if (v208 < 0 == v35) {
          *((_DWORD *)this + 14) = v208;
        }
        int v209 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v209 <= 1 || *v209 != 146 || v209[1] != 3) {
          continue;
        }
        *((void *)this + 1) = v209 + 2;
LABEL_407:
        *(_DWORD *)(a1 + 216) |= 0x800000u;
        int v210 = *(proto::gnss::Emergency::SessionStatus **)(a1 + 176);
        if (!v210) {
          operator new();
        }
        unsigned int v233 = 0;
        unsigned int v211 = (char *)*((void *)this + 1);
        if ((unint64_t)v211 >= *((void *)this + 2) || *v211 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v211;
          *((void *)this + 1) = v211 + 1;
        }
        int v212 = *((_DWORD *)this + 14);
        int v213 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v212 + 1;
        if (v212 >= v213) {
          return 0;
        }
        int v214 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!proto::gnss::Emergency::SessionStatus::MergePartialFromCodedStream(v210, this, v215)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v214);
        int v216 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v216, 1);
        int v217 = v216 - 1;
        if (v217 < 0 == v35) {
          *((_DWORD *)this + 14) = v217;
        }
        int v218 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v218 <= 1 || *v218 != 154 || v218[1] != 3) {
          continue;
        }
        *((void *)this + 1) = v218 + 2;
LABEL_422:
        *(_DWORD *)(a1 + 216) |= 0x1000000u;
        int v219 = *(proto::gnss::Emergency::Init **)(a1 + 184);
        if (!v219) {
          operator new();
        }
        unsigned int v233 = 0;
        unsigned int v220 = (char *)*((void *)this + 1);
        if ((unint64_t)v220 >= *((void *)this + 2) || *v220 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v220;
          *((void *)this + 1) = v220 + 1;
        }
        int v221 = *((_DWORD *)this + 14);
        int v222 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v221 + 1;
        if (v221 >= v222) {
          return 0;
        }
        int v223 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!proto::gnss::Emergency::Init::MergePartialFromCodedStream(v219, this, v224)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v223);
        int v225 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v225, 1);
        int v226 = v225 - 1;
        if (v226 < 0 == v35) {
          *((_DWORD *)this + 14) = v226;
        }
        int v227 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((int)v13 - (int)v227 <= 1 || *v227 != 160 || v227[1] != 3) {
          continue;
        }
        uint64_t v14 = v227 + 2;
        *((void *)this + 1) = v14;
LABEL_437:
        if ((unint64_t)v14 >= v13 || (char)*v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v228 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v14;
          int v228 = v14 + 1;
          *((void *)this + 1) = v228;
        }
        *(_DWORD *)(a1 + 216) |= 0x2000000u;
        if ((int)v13 - (int)v228 < 2 || *v228 != 168 || v228[1] != 3) {
          continue;
        }
        unsigned int v27 = (char *)(v228 + 2);
        *((void *)this + 1) = v27;
LABEL_446:
        unsigned int v233 = 0;
        if ((unint64_t)v27 >= v13 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233);
          if (!result) {
            return result;
          }
          unsigned int v229 = v233;
        }
        else
        {
          unsigned int v229 = *v27;
          *((void *)this + 1) = v27 + 1;
        }
        if (v229 <= 4 && v229 != 3)
        {
          *(_DWORD *)(a1 + 216) |= 0x4000000u;
          *(_DWORD *)(a1 + 196) = v229;
        }
        int v231 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v28 = *((void *)this + 2);
        if ((int)v28 - (int)v231 < 2 || *v231 != 176 || v231[1] != 3) {
          continue;
        }
        uint64_t v29 = v231 + 2;
        *((void *)this + 1) = v29;
LABEL_460:
        if ((unint64_t)v29 >= v28 || (char)*v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          v232 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v29;
          v232 = v29 + 1;
          *((void *)this + 1) = v232;
        }
        int v17 = *(_DWORD *)(a1 + 216) | 0x8000000;
        *(_DWORD *)(a1 + 216) = v17;
        if ((int)v28 - (int)v232 < 2 || *v232 != 186 || v232[1] != 3) {
          continue;
        }
        *((void *)this + 1) = v232 + 2;
LABEL_30:
        *(_DWORD *)(a1 + 216) = v17 | 0x10000000;
        uint64_t v18 = *(proto::gnss::Emergency::WlanMeasurementRequest **)(a1 + 200);
        if (!v18) {
          operator new();
        }
        unsigned int v233 = 0;
        uint64_t v19 = (char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v233))return 0; {
        }
          }
        else
        {
          unsigned int v233 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        int v30 = *((_DWORD *)this + 14);
        int v31 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v30 + 1;
        if (v30 >= v31) {
          return 0;
        }
        int v32 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v233);
        if (!proto::gnss::Emergency::WlanMeasurementRequest::MergePartialFromCodedStream(v18, this, v33)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v32);
        int v34 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v34, 1);
        int v36 = v34 - 1;
        if (v36 < 0 == v35) {
          *((_DWORD *)this + 14) = v36;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        int v23 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_111;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_73;
        }
        int v24 = *(_DWORD *)(a1 + 216);
        goto LABEL_119;
      case 5u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_133;
        }
        goto LABEL_73;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_147;
        }
        goto LABEL_73;
      case 9u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_161;
        }
        goto LABEL_73;
      case 0xAu:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_175;
        }
        goto LABEL_73;
      case 0x10u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_190;
        }
        goto LABEL_73;
      case 0x11u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_205;
        }
        goto LABEL_73;
      case 0x12u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_220;
        }
        goto LABEL_73;
      case 0x13u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_235;
        }
        goto LABEL_73;
      case 0x14u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_250;
      case 0x15u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_261;
        }
        goto LABEL_73;
      case 0x16u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        uint64_t v26 = (char *)*((void *)this + 1);
        unint64_t v25 = *((void *)this + 2);
        goto LABEL_276;
      case 0x17u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_287;
        }
        goto LABEL_73;
      case 0x19u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_302;
        }
        goto LABEL_73;
      case 0x1Eu:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_317;
        }
        goto LABEL_73;
      case 0x28u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_332;
        }
        goto LABEL_73;
      case 0x29u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_347;
        }
        goto LABEL_73;
      case 0x2Au:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_362;
        }
        goto LABEL_73;
      case 0x2Bu:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_377;
        }
        goto LABEL_73;
      case 0x2Cu:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_392;
        }
        goto LABEL_73;
      case 0x32u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_407;
        }
        goto LABEL_73;
      case 0x33u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_422;
        }
        goto LABEL_73;
      case 0x34u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        uint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_437;
      case 0x35u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        unsigned int v27 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_446;
      case 0x36u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        uint64_t v29 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v28 = *((void *)this + 2);
        goto LABEL_460;
      case 0x37u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_73;
        }
        int v17 = *(_DWORD *)(a1 + 216);
        goto LABEL_30;
      default:
        int v10 = TagFallback & 7;
LABEL_73:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t sub_1000C4194(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 216);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 216);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_33;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 16), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_37;
  }
LABEL_34:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gpsd::Indication::default_instance_ + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_40;
  }
LABEL_37:
  uint64_t v8 = *(void *)(v5 + 32);
  if (!v8) {
    uint64_t v8 = *(void *)(proto::gpsd::Indication::default_instance_ + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_43;
  }
LABEL_40:
  uint64_t v9 = *(void *)(v5 + 40);
  if (!v9) {
    uint64_t v9 = *(void *)(proto::gpsd::Indication::default_instance_ + 40);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_46;
  }
LABEL_43:
  uint64_t v10 = *(void *)(v5 + 48);
  if (!v10) {
    uint64_t v10 = *(void *)(proto::gpsd::Indication::default_instance_ + 48);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_49;
  }
LABEL_46:
  uint64_t v11 = *(void *)(v5 + 56);
  if (!v11) {
    uint64_t v11 = *(void *)(proto::gpsd::Indication::default_instance_ + 56);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_52;
  }
LABEL_49:
  uint64_t v12 = *(void *)(v5 + 64);
  if (!v12) {
    uint64_t v12 = *(void *)(proto::gpsd::Indication::default_instance_ + 64);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_55;
  }
LABEL_52:
  uint64_t v13 = *(void *)(v5 + 72);
  if (!v13) {
    uint64_t v13 = *(void *)(proto::gpsd::Indication::default_instance_ + 72);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v13, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_58;
  }
LABEL_55:
  uint64_t v14 = *(void *)(v5 + 80);
  if (!v14) {
    uint64_t v14 = *(void *)(proto::gpsd::Indication::default_instance_ + 80);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v14, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_61;
  }
LABEL_58:
  uint64_t v15 = *(void *)(v5 + 88);
  if (!v15) {
    uint64_t v15 = *(void *)(proto::gpsd::Indication::default_instance_ + 88);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v15, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x2000) == 0)
  {
LABEL_14:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(_DWORD *)(v5 + 100), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x4000) == 0)
  {
LABEL_15:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_65;
  }
LABEL_62:
  uint64_t v16 = *(void *)(v5 + 104);
  if (!v16) {
    uint64_t v16 = *(void *)(proto::gpsd::Indication::default_instance_ + 104);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, v16, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x1000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(_DWORD *)(v5 + 96), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_69;
  }
LABEL_66:
  uint64_t v17 = *(void *)(v5 + 112);
  if (!v17) {
    uint64_t v17 = *(void *)(proto::gpsd::Indication::default_instance_ + 112);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, v17, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_72;
  }
LABEL_69:
  uint64_t v18 = *(void *)(v5 + 120);
  if (!v18) {
    uint64_t v18 = *(void *)(proto::gpsd::Indication::default_instance_ + 120);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, v18, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_75;
  }
LABEL_72:
  uint64_t v19 = *(void *)(v5 + 128);
  if (!v19) {
    uint64_t v19 = *(void *)(proto::gpsd::Indication::default_instance_ + 128);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, v19, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_78;
  }
LABEL_75:
  uint64_t v20 = *(void *)(v5 + 136);
  if (!v20) {
    uint64_t v20 = *(void *)(proto::gpsd::Indication::default_instance_ + 136);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, v20, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_81;
  }
LABEL_78:
  uint64_t v21 = *(void *)(v5 + 144);
  if (!v21) {
    uint64_t v21 = *(void *)(proto::gpsd::Indication::default_instance_ + 144);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, v21, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_84;
  }
LABEL_81:
  uint64_t v22 = *(void *)(v5 + 152);
  if (!v22) {
    uint64_t v22 = *(void *)(proto::gpsd::Indication::default_instance_ + 152);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, v22, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_87;
  }
LABEL_84:
  uint64_t v23 = *(void *)(v5 + 160);
  if (!v23) {
    uint64_t v23 = *(void *)(proto::gpsd::Indication::default_instance_ + 160);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, v23, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_90;
  }
LABEL_87:
  uint64_t v24 = *(void *)(v5 + 168);
  if (!v24) {
    uint64_t v24 = *(void *)(proto::gpsd::Indication::default_instance_ + 168);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2C, v24, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_93;
  }
LABEL_90:
  uint64_t v25 = *(void *)(v5 + 176);
  if (!v25) {
    uint64_t v25 = *(void *)(proto::gpsd::Indication::default_instance_ + 176);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x32, v25, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_96;
  }
LABEL_93:
  uint64_t v26 = *(void *)(v5 + 184);
  if (!v26) {
    uint64_t v26 = *(void *)(proto::gpsd::Indication::default_instance_ + 184);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x33, v26, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_97;
  }
LABEL_96:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x34, *(_DWORD *)(v5 + 192), a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
LABEL_98:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x36, *(_DWORD *)(v5 + 208), a2, a4);
    if ((*(_DWORD *)(v5 + 216) & 0x10000000) == 0) {
      return result;
    }
    goto LABEL_99;
  }
LABEL_97:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x35, *(_DWORD *)(v5 + 196), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x8000000) != 0) {
    goto LABEL_98;
  }
LABEL_29:
  if ((v6 & 0x10000000) == 0) {
    return result;
  }
LABEL_99:
  uint64_t v27 = *(void *)(v5 + 200);
  if (!v27) {
    uint64_t v27 = *(void *)(proto::gpsd::Indication::default_instance_ + 200);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x37, v27, a2, a4);
}

uint64_t sub_1000C4648(uint64_t a1, unint64_t a2)
{
  unsigned int v3 = *(_DWORD *)(a1 + 216);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_56;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 216);
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v7 & 0x80000000) != 0)
    {
      int v8 = 10;
    }
    else if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      unsigned int v3 = *(_DWORD *)(a1 + 216);
    }
    else
    {
      int v8 = 1;
    }
    uint64_t v4 = (v4 + v8 + 1);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), a2)+ 1;
    unsigned int v3 = *(_DWORD *)(a1 + 216);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_32;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v9 = *(proto::gnss::Fix **)(a1 + 24);
  if (!v9) {
    uint64_t v9 = *(proto::gnss::Fix **)(proto::gpsd::Indication::default_instance_ + 24);
  }
  uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Fix::ByteSize(v9, a2);
  int v11 = (int)v10;
  if (v10 >= 0x80) {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
  }
  else {
    int v12 = 1;
  }
  uint64_t v4 = (v4 + v11 + v12 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 216);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_38;
  }
LABEL_32:
  uint64_t v13 = *(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents **)(a1 + 32);
  if (!v13) {
    uint64_t v13 = *(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents **)(proto::gpsd::Indication::default_instance_
  }
                                                                            + 32);
  uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::ByteSize(v13, a2);
  int v15 = (int)v14;
  if (v14 >= 0x80) {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  }
  else {
    int v16 = 1;
  }
  uint64_t v4 = (v4 + v15 + v16 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 216);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_44;
  }
LABEL_38:
  uint64_t v17 = *(proto::gnss::PwrMeasurement **)(a1 + 40);
  if (!v17) {
    uint64_t v17 = *(proto::gnss::PwrMeasurement **)(proto::gpsd::Indication::default_instance_ + 40);
  }
  uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::PwrMeasurement::ByteSize(v17, a2);
  int v19 = (int)v18;
  if (v18 >= 0x80) {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
  }
  else {
    int v20 = 1;
  }
  uint64_t v4 = (v4 + v19 + v20 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 216);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0) {
      goto LABEL_56;
    }
    goto LABEL_50;
  }
LABEL_44:
  uint64_t v21 = *(void *)(a1 + 48);
  if (!v21) {
    uint64_t v21 = *(void *)(proto::gpsd::Indication::default_instance_ + 48);
  }
  uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C5AA4(v21, a2);
  int v23 = (int)v22;
  if (v22 >= 0x80) {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
  }
  else {
    int v24 = 1;
  }
  uint64_t v4 = (v4 + v23 + v24 + 1);
  unsigned int v3 = *(_DWORD *)(a1 + 216);
  if ((v3 & 0x80) != 0)
  {
LABEL_50:
    uint64_t v25 = *(proto::gnss::TimeTransferDataExtend **)(a1 + 56);
    if (!v25) {
      uint64_t v25 = *(proto::gnss::TimeTransferDataExtend **)(proto::gpsd::Indication::default_instance_ + 56);
    }
    uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::TimeTransferDataExtend::ByteSize(v25, a2);
    int v27 = (int)v26;
    if (v26 >= 0x80) {
      int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
    }
    else {
      int v28 = 1;
    }
    uint64_t v4 = (v4 + v27 + v28 + 1);
    unsigned int v3 = *(_DWORD *)(a1 + 216);
  }
LABEL_56:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_114;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t v29 = *(void *)(a1 + 64);
    if (!v29) {
      uint64_t v29 = *(void *)(proto::gpsd::Indication::default_instance_ + 64);
    }
    int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000CE4E0(v29, a2);
    int v31 = (int)v30;
    if (v30 >= 0x80) {
      int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
    }
    else {
      int v32 = 1;
    }
    uint64_t v4 = (v4 + v31 + v32 + 2);
    unsigned int v3 = *(_DWORD *)(a1 + 216);
    if ((v3 & 0x200) == 0)
    {
LABEL_59:
      if ((v3 & 0x400) == 0) {
        goto LABEL_60;
      }
      goto LABEL_78;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_59;
  }
  uint64_t v33 = *(void *)(a1 + 72);
  if (!v33) {
    uint64_t v33 = *(void *)(proto::gpsd::Indication::default_instance_ + 72);
  }
  int v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000CE868(v33, a2);
  int v35 = (int)v34;
  if (v34 >= 0x80) {
    int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34, a2);
  }
  else {
    int v36 = 1;
  }
  uint64_t v4 = (v4 + v35 + v36 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 216);
  if ((v3 & 0x400) == 0)
  {
LABEL_60:
    if ((v3 & 0x800) == 0) {
      goto LABEL_61;
    }
    goto LABEL_84;
  }
LABEL_78:
  uint64_t v37 = *(proto::gnss::DecodedExtendedEphemeris **)(a1 + 80);
  if (!v37) {
    uint64_t v37 = *(proto::gnss::DecodedExtendedEphemeris **)(proto::gpsd::Indication::default_instance_ + 80);
  }
  uint64_t v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::DecodedExtendedEphemeris::ByteSize(v37, a2);
  int v39 = (int)v38;
  if (v38 >= 0x80) {
    int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38, a2);
  }
  else {
    int v40 = 1;
  }
  uint64_t v4 = (v4 + v39 + v40 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 216);
  if ((v3 & 0x800) == 0)
  {
LABEL_61:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_90;
  }
LABEL_84:
  unint64_t v41 = *(proto::gnss::DecodedRti **)(a1 + 88);
  if (!v41) {
    unint64_t v41 = *(proto::gnss::DecodedRti **)(proto::gpsd::Indication::default_instance_ + 88);
  }
  uint64_t v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::DecodedRti::ByteSize(v41, a2);
  int v43 = (int)v42;
  if (v42 >= 0x80) {
    int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42, a2);
  }
  else {
    int v44 = 1;
  }
  uint64_t v4 = (v4 + v43 + v44 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 216);
  if ((v3 & 0x1000) == 0)
  {
LABEL_62:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_96;
  }
LABEL_90:
  uint64_t v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 96);
  if ((v45 & 0x80000000) != 0)
  {
    int v46 = 10;
  }
  else if (v45 >= 0x80)
  {
    int v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 216);
  }
  else
  {
    int v46 = 1;
  }
  uint64_t v4 = (v4 + v46 + 2);
  if ((v3 & 0x2000) == 0)
  {
LABEL_63:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_102;
  }
LABEL_96:
  int v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 100);
  if ((v47 & 0x80000000) != 0)
  {
    int v48 = 10;
  }
  else if (v47 >= 0x80)
  {
    int v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 216);
  }
  else
  {
    int v48 = 1;
  }
  uint64_t v4 = (v4 + v48 + 2);
  if ((v3 & 0x4000) == 0)
  {
LABEL_64:
    if ((v3 & 0x8000) == 0) {
      goto LABEL_114;
    }
    goto LABEL_108;
  }
LABEL_102:
  uint64_t v49 = *(void *)(a1 + 104);
  if (!v49) {
    uint64_t v49 = *(void *)(proto::gpsd::Indication::default_instance_ + 104);
  }
  if (*(_DWORD *)(v49 + 16)) {
    int v50 = 2 * (*(_DWORD *)(v49 + 16) & 1);
  }
  else {
    int v50 = 0;
  }
  *(_DWORD *)(v49 + 12) = v50;
  uint64_t v4 = (v4 + v50 + 3);
  unsigned int v3 = *(_DWORD *)(a1 + 216);
  if ((v3 & 0x8000) != 0)
  {
LABEL_108:
    uint64_t v51 = *(void *)(a1 + 112);
    if (!v51) {
      uint64_t v51 = *(void *)(proto::gpsd::Indication::default_instance_ + 112);
    }
    int v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000D263C(v51, a2);
    int v53 = (int)v52;
    if (v52 >= 0x80) {
      int v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v52, a2);
    }
    else {
      int v54 = 1;
    }
    uint64_t v4 = (v4 + v53 + v54 + 2);
    unsigned int v3 = *(_DWORD *)(a1 + 216);
  }
LABEL_114:
  if ((v3 & 0xFF0000) == 0) {
    goto LABEL_172;
  }
  if ((v3 & 0x10000) != 0)
  {
    uint64_t v55 = *(void *)(a1 + 120);
    if (!v55) {
      uint64_t v55 = *(void *)(proto::gpsd::Indication::default_instance_ + 120);
    }
    int v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000D2B9C(v55, a2);
    int v57 = (int)v56;
    if (v56 >= 0x80) {
      int v58 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v56, a2);
    }
    else {
      int v58 = 1;
    }
    uint64_t v4 = (v4 + v57 + v58 + 2);
    unsigned int v3 = *(_DWORD *)(a1 + 216);
    if ((v3 & 0x20000) == 0)
    {
LABEL_117:
      if ((v3 & 0x40000) == 0) {
        goto LABEL_118;
      }
      goto LABEL_136;
    }
  }
  else if ((v3 & 0x20000) == 0)
  {
    goto LABEL_117;
  }
  int v59 = *(proto::gnss::Emergency::SummaryReport **)(a1 + 128);
  if (!v59) {
    int v59 = *(proto::gnss::Emergency::SummaryReport **)(proto::gpsd::Indication::default_instance_ + 128);
  }
  int v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::SummaryReport::ByteSize(v59, a2);
  int v61 = (int)v60;
  if (v60 >= 0x80) {
    int v62 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v60, a2);
  }
  else {
    int v62 = 1;
  }
  uint64_t v4 = (v4 + v61 + v62 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 216);
  if ((v3 & 0x40000) == 0)
  {
LABEL_118:
    if ((v3 & 0x80000) == 0) {
      goto LABEL_119;
    }
    goto LABEL_142;
  }
LABEL_136:
  int v63 = *(proto::gnss::Emergency::PositionReport **)(a1 + 136);
  if (!v63) {
    int v63 = *(proto::gnss::Emergency::PositionReport **)(proto::gpsd::Indication::default_instance_ + 136);
  }
  int v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::PositionReport::ByteSize(v63, a2);
  int v65 = (int)v64;
  if (v64 >= 0x80) {
    int v66 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v64, a2);
  }
  else {
    int v66 = 1;
  }
  uint64_t v4 = (v4 + v65 + v66 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 216);
  if ((v3 & 0x80000) == 0)
  {
LABEL_119:
    if ((v3 & 0x100000) == 0) {
      goto LABEL_120;
    }
    goto LABEL_148;
  }
LABEL_142:
  unsigned int v67 = *(proto::gnss::Emergency::MeasurementReport **)(a1 + 144);
  if (!v67) {
    unsigned int v67 = *(proto::gnss::Emergency::MeasurementReport **)(proto::gpsd::Indication::default_instance_ + 144);
  }
  int v68 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::MeasurementReport::ByteSize(v67, a2);
  int v69 = (int)v68;
  if (v68 >= 0x80) {
    int v70 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v68, a2);
  }
  else {
    int v70 = 1;
  }
  uint64_t v4 = (v4 + v69 + v70 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 216);
  if ((v3 & 0x100000) == 0)
  {
LABEL_120:
    if ((v3 & 0x200000) == 0) {
      goto LABEL_121;
    }
    goto LABEL_154;
  }
LABEL_148:
  uint64_t v71 = *(proto::gnss::Emergency::AssistanceNeededReport **)(a1 + 152);
  if (!v71) {
    uint64_t v71 = *(proto::gnss::Emergency::AssistanceNeededReport **)(proto::gpsd::Indication::default_instance_ + 152);
  }
  int v72 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::AssistanceNeededReport::ByteSize(v71, a2);
  int v73 = (int)v72;
  if (v72 >= 0x80) {
    int v74 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v72, a2);
  }
  else {
    int v74 = 1;
  }
  uint64_t v4 = (v4 + v73 + v74 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 216);
  if ((v3 & 0x200000) == 0)
  {
LABEL_121:
    if ((v3 & 0x400000) == 0) {
      goto LABEL_122;
    }
    goto LABEL_160;
  }
LABEL_154:
  int v75 = *(proto::gnss::Emergency::CellFTAssistanceRequest **)(a1 + 160);
  if (!v75) {
    int v75 = *(proto::gnss::Emergency::CellFTAssistanceRequest **)(proto::gpsd::Indication::default_instance_ + 160);
  }
  unsigned int v76 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::CellFTAssistanceRequest::ByteSize(v75, a2);
  int v77 = (int)v76;
  if (v76 >= 0x80) {
    int v78 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v76, a2);
  }
  else {
    int v78 = 1;
  }
  uint64_t v4 = (v4 + v77 + v78 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 216);
  if ((v3 & 0x400000) == 0)
  {
LABEL_122:
    if ((v3 & 0x800000) == 0) {
      goto LABEL_172;
    }
    goto LABEL_166;
  }
LABEL_160:
  uint64_t v79 = *(proto::gnss::Emergency::MeasurementReportWithEstimate **)(a1 + 168);
  if (!v79) {
    uint64_t v79 = *(proto::gnss::Emergency::MeasurementReportWithEstimate **)(proto::gpsd::Indication::default_instance_ + 168);
  }
  int v80 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::MeasurementReportWithEstimate::ByteSize(v79, a2);
  int v81 = (int)v80;
  if (v80 >= 0x80) {
    int v82 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v80, a2);
  }
  else {
    int v82 = 1;
  }
  uint64_t v4 = (v4 + v81 + v82 + 2);
  unsigned int v3 = *(_DWORD *)(a1 + 216);
  if ((v3 & 0x800000) != 0)
  {
LABEL_166:
    int v83 = *(proto::gnss::Emergency::SessionStatus **)(a1 + 176);
    if (!v83) {
      int v83 = *(proto::gnss::Emergency::SessionStatus **)(proto::gpsd::Indication::default_instance_ + 176);
    }
    int v84 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::SessionStatus::ByteSize(v83, a2);
    int v85 = (int)v84;
    if (v84 >= 0x80) {
      int v86 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v84, a2);
    }
    else {
      int v86 = 1;
    }
    uint64_t v4 = (v4 + v85 + v86 + 2);
    unsigned int v3 = *(_DWORD *)(a1 + 216);
  }
LABEL_172:
  if (!HIBYTE(v3)) {
    goto LABEL_205;
  }
  if ((v3 & 0x1000000) != 0)
  {
    int v87 = *(proto::gnss::Emergency::Init **)(a1 + 184);
    if (!v87) {
      int v87 = *(proto::gnss::Emergency::Init **)(proto::gpsd::Indication::default_instance_ + 184);
    }
    uint64_t v88 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::Init::ByteSize(v87, a2);
    int v89 = (int)v88;
    if (v88 >= 0x80) {
      int v90 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v88, a2);
    }
    else {
      int v90 = 1;
    }
    uint64_t v4 = (v4 + v89 + v90 + 2);
    unsigned int v3 = *(_DWORD *)(a1 + 216);
    if ((v3 & 0x2000000) == 0)
    {
LABEL_175:
      if ((v3 & 0x4000000) == 0) {
        goto LABEL_176;
      }
      goto LABEL_189;
    }
  }
  else if ((v3 & 0x2000000) == 0)
  {
    goto LABEL_175;
  }
  int v91 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 192);
  if (v91 >= 0x80)
  {
    int v92 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v91, a2) + 2;
    unsigned int v3 = *(_DWORD *)(a1 + 216);
  }
  else
  {
    int v92 = 3;
  }
  uint64_t v4 = (v92 + v4);
  if ((v3 & 0x4000000) == 0)
  {
LABEL_176:
    if ((v3 & 0x8000000) == 0) {
      goto LABEL_177;
    }
LABEL_195:
    int v95 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 208);
    if (v95 >= 0x80)
    {
      int v96 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v95, a2) + 2;
      unsigned int v3 = *(_DWORD *)(a1 + 216);
    }
    else
    {
      int v96 = 3;
    }
    uint64_t v4 = (v96 + v4);
    if ((v3 & 0x10000000) == 0) {
      goto LABEL_205;
    }
    goto LABEL_199;
  }
LABEL_189:
  int v93 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 196);
  if ((v93 & 0x80000000) != 0)
  {
    int v94 = 12;
  }
  else if (v93 >= 0x80)
  {
    int v94 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v93, a2) + 2;
    unsigned int v3 = *(_DWORD *)(a1 + 216);
  }
  else
  {
    int v94 = 3;
  }
  uint64_t v4 = (v94 + v4);
  if ((v3 & 0x8000000) != 0) {
    goto LABEL_195;
  }
LABEL_177:
  if ((v3 & 0x10000000) == 0) {
    goto LABEL_205;
  }
LABEL_199:
  int v97 = *(proto::gnss::Emergency::WlanMeasurementRequest **)(a1 + 200);
  if (!v97) {
    int v97 = *(proto::gnss::Emergency::WlanMeasurementRequest **)(proto::gpsd::Indication::default_instance_ + 200);
  }
  uint64_t v98 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::WlanMeasurementRequest::ByteSize(v97, a2);
  int v100 = (int)v98;
  if (v98 >= 0x80) {
    int v101 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v98, v99);
  }
  else {
    int v101 = 1;
  }
  uint64_t v4 = (v4 + v100 + v101 + 2);
LABEL_205:
  *(_DWORD *)(a1 + 212) = v4;
  return v4;
}

void sub_1000C4E58(proto::gpsd::Indication *a1, void *lpsrc)
{
  proto::gpsd::Indication::MergeFrom(a1, (const proto::gpsd::Indication *)lpsrc);
}

void sub_1000C4EFC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    char v8 = *(unsigned char *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(unsigned char *)(a1 + 24) = v8;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_14:
    char v9 = *(unsigned char *)(a2 + 25);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(unsigned char *)(a1 + 25) = v9;
    if ((*(_DWORD *)(a2 + 32) & 0x10) == 0) {
      return;
    }
LABEL_9:
    char v5 = *(unsigned char *)(a2 + 26);
    *(_DWORD *)(a1 + 32) |= 0x10u;
    *(unsigned char *)(a1 + 26) = v5;
  }
}

void sub_1000C5010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000C5028(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8), *(_DWORD *)(a2 + 16) + *(_DWORD *)(a1 + 16));
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 8) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 20);
      uint64_t v7 = *(int *)(a1 + 16);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 24))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 20);
        }
        *(_DWORD *)(a1 + 20) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 8);
      *(_DWORD *)(a1 + 16) = v7 + 1;
      sub_1000CD6E4(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
  if ((*(unsigned char *)(a2 + 44) & 2) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 2u;
    uint64_t v9 = *(void *)(a1 + 32);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = *(void *)(a2 + 32);
    if (!v10) {
      uint64_t v10 = *(void *)(proto::gpsd::RecoveryStatistics::default_instance_ + 32);
    }
    sub_1000CD02C(v9, v10);
  }
}

void sub_1000C5208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000C5220(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    unsigned int v4 = *(_DWORD *)(a2 + 8);
    if (v4 >= 5) {
      __assert_rtn("set_info_type", "GpsdProtocol.pb.h", 10956, "::proto::gpsd::LtlInfoType_IsValid(value)");
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 8) = v4;
  }
}

void sub_1000C52D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000C52EC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    char v4 = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(unsigned char *)(a1 + 8) = v4;
  }
}

void sub_1000C5378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000C5390(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 24);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v7;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return;
    }
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v5;
  }
}

void sub_1000C5464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000C547C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_10;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v6 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(void *)(a1 + 16) = v6;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return;
    }
LABEL_10:
    int v7 = *(const std::string **)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    uint64_t v8 = *(std::string **)(a1 + 24);
    if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v8, v7);
  }
}

void sub_1000C558C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000C55A4()
{
  return 1;
}

void *sub_1000C55AC@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.Indication");
}

void sub_1000C55BC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010DC00;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000C55DC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010DC00;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000C5630()
{
}

uint64_t sub_1000C5684(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  uint64_t v6 = (unint64_t *)(a1 + 16);
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          unint64_t *v5 = *v11;
          int v12 = v11 + 1;
          *((void *)this + 1) = v12;
LABEL_26:
          *(_DWORD *)(a1 + 32) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            uint64_t v13 = v12 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_29;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
        if (result)
        {
          int v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_29:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v13;
          uint64_t v17 = v13 + 1;
          *((void *)this + 1) = v17;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        if ((unint64_t)v17 >= v10 || *v17 != 24) {
          continue;
        }
        uint64_t v14 = v17 + 1;
        *((void *)this + 1) = v14;
LABEL_37:
        unsigned int v27 = 0;
        if ((unint64_t)v14 >= v10 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!result) {
            return result;
          }
          unsigned int v18 = v27;
          int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v18 = *v14;
          int v19 = v14 + 1;
          *((void *)this + 1) = v19;
        }
        *(unsigned char *)(a1 + 24) = v18 != 0;
        *(_DWORD *)(a1 + 32) |= 4u;
        if ((unint64_t)v19 >= v10 || *v19 != 32) {
          continue;
        }
        int v15 = v19 + 1;
        *((void *)this + 1) = v15;
LABEL_45:
        unsigned int v26 = 0;
        if ((unint64_t)v15 >= v10 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!result) {
            return result;
          }
          unsigned int v20 = v26;
          uint64_t v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v20 = *v15;
          uint64_t v21 = v15 + 1;
          *((void *)this + 1) = v21;
        }
        *(unsigned char *)(a1 + 25) = v20 != 0;
        *(_DWORD *)(a1 + 32) |= 8u;
        if ((unint64_t)v21 >= v10 || *v21 != 40) {
          continue;
        }
        int v16 = v21 + 1;
        *((void *)this + 1) = v16;
LABEL_53:
        unsigned int v25 = 0;
        if ((unint64_t)v16 >= v10 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v22 = v25;
          int v23 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v22 = *v16;
          int v23 = (unsigned __int8 *)(v16 + 1);
          *((void *)this + 1) = v23;
        }
        *(unsigned char *)(a1 + 26) = v22 != 0;
        *(_DWORD *)(a1 + 32) |= 0x10u;
        if (v23 != (unsigned __int8 *)v10 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_37;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_45;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_53;
      default:
        int v9 = TagFallback & 7;
LABEL_20:
        if (v9 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1000C59E0(uint64_t result, unint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 25), a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = *(unsigned __int8 *)(v5 + 26);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_1000C5AA4(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0;
    goto LABEL_15;
  }
  if ((*(unsigned char *)(a1 + 32) & 1) == 0)
  {
    unsigned int v4 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
  int v3 = *(_DWORD *)(a1 + 32);
  if ((v3 & 2) != 0)
  {
LABEL_7:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }
LABEL_8:
  unsigned int v6 = v4 + 2;
  if ((v3 & 4) == 0) {
    unsigned int v6 = v4;
  }
  if ((v3 & 8) != 0) {
    v6 += 2;
  }
  if ((v3 & 0x10) != 0) {
    uint64_t result = v6 + 2;
  }
  else {
    uint64_t result = v6;
  }
LABEL_15:
  *(_DWORD *)(a1 + 28) = result;
  return result;
}

void sub_1000C5B34(uint64_t a1, void *lpsrc)
{
  sub_1000C4EFC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000C5BD8()
{
  return 1;
}

void *sub_1000C5BE0@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.Status");
}

void sub_1000C5BF0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010DC78;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000C5C10(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010DC78;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000C5C64()
{
}

uint64_t sub_1000C5CC0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        unsigned int v28 = 0;
        int v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_27:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 20) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_30;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28);
        if (result)
        {
          unsigned int v10 = v28;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_27;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_30:
        unsigned int v28 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28);
          if (!result) {
            return result;
          }
          unsigned int v17 = v28;
          unsigned int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v12;
          unsigned int v18 = v12 + 1;
          *((void *)this + 1) = v18;
        }
        *(unsigned char *)(a1 + 9) = v17 != 0;
        *(_DWORD *)(a1 + 20) |= 2u;
        if ((unint64_t)v18 >= v8 || *v18 != 24) {
          continue;
        }
        uint64_t v13 = v18 + 1;
        *((void *)this + 1) = v13;
LABEL_38:
        unsigned int v28 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28);
          if (!result) {
            return result;
          }
          unsigned int v19 = v28;
          unsigned int v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v13;
          unsigned int v20 = v13 + 1;
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 10) = v19 != 0;
        *(_DWORD *)(a1 + 20) |= 4u;
        if ((unint64_t)v20 >= v8 || *v20 != 32) {
          continue;
        }
        uint64_t v14 = v20 + 1;
        *((void *)this + 1) = v14;
LABEL_46:
        unsigned int v28 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28);
          if (!result) {
            return result;
          }
          unsigned int v21 = v28;
          unsigned int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v21 = *v14;
          unsigned int v22 = v14 + 1;
          *((void *)this + 1) = v22;
        }
        *(unsigned char *)(a1 + 11) = v21 != 0;
        *(_DWORD *)(a1 + 20) |= 8u;
        if ((unint64_t)v22 >= v8 || *v22 != 40) {
          continue;
        }
        int v15 = v22 + 1;
        *((void *)this + 1) = v15;
LABEL_54:
        unsigned int v28 = 0;
        if ((unint64_t)v15 >= v8 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28);
          if (!result) {
            return result;
          }
          unsigned int v23 = v28;
          int v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v23 = *v15;
          int v24 = v15 + 1;
          *((void *)this + 1) = v24;
        }
        *(unsigned char *)(a1 + 12) = v23 != 0;
        *(_DWORD *)(a1 + 20) |= 0x10u;
        if ((unint64_t)v24 >= v8 || *v24 != 48) {
          continue;
        }
        int v16 = v24 + 1;
        *((void *)this + 1) = v16;
LABEL_62:
        unsigned int v28 = 0;
        if ((unint64_t)v16 >= v8 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28);
          if (!result) {
            return result;
          }
          unsigned int v25 = v28;
          unsigned int v26 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v25 = *v16;
          unsigned int v26 = (unsigned __int8 *)(v16 + 1);
          *((void *)this + 1) = v26;
        }
        *(unsigned char *)(a1 + 13) = v25 != 0;
        *(_DWORD *)(a1 + 20) |= 0x20u;
        if (v26 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_38;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_46;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_54;
      case 6u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_62;
      default:
        int v7 = TagFallback & 7;
LABEL_21:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1000C60B0(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 12), a2, a4);
    if ((*(_DWORD *)(v5 + 20) & 0x20) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return result;
  }
LABEL_13:
  int v7 = *(unsigned __int8 *)(v5 + 13);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, a2, a4);
}

uint64_t sub_1000C6190(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 20);
  if ((_BYTE)v1)
  {
    unsigned int v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x20) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_1000C61F0(uint64_t a1, unsigned char *lpsrc)
{
  sub_1000BF824(a1, lpsrc);
}

uint64_t sub_1000C6294()
{
  return 1;
}

void *sub_1000C629C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.SetPvtmReport");
}

void sub_1000C62AC(uint64_t *a1)
{
  *a1 = (uint64_t)off_10010DCF0;
  sub_1000508A8(a1[1]);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1000C6304(uint64_t *a1)
{
  *a1 = (uint64_t)off_10010DCF0;
  sub_1000508A8(a1[1]);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);

  operator delete();
}

void sub_1000C6370()
{
}

uint64_t sub_1000C63C8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 2) {
        goto LABEL_21;
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      if (*(_UNKNOWN **)(a1 + 8) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
      if (!result) {
        return result;
      }
      int v11 = (unsigned char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v11 < v8 && *v11 == 16)
      {
        int v9 = v11 + 1;
        *((void *)this + 1) = v9;
LABEL_17:
        unsigned int v13 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
          if (!result) {
            return result;
          }
          unsigned int v12 = v13;
        }
        else
        {
          unsigned int v12 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        if (v12 <= 2)
        {
          *(_DWORD *)(a1 + 24) |= 2u;
          *(_DWORD *)(a1 + 16) = v12;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_17;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_21:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000C658C(uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1000C65F8(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_21;
  }
  if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v10 = v11 + 1;
    int v3 = *(_DWORD *)(a1 + 24);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 2;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  uint64_t v4 = (v10 + v6);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v12 & 0x80000000) != 0)
    {
      int v13 = 11;
    }
    else if (v12 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    }
    else
    {
      int v13 = 2;
    }
    uint64_t v4 = (v13 + v4);
  }
LABEL_21:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1000C66C0(uint64_t a1, void *lpsrc)
{
  sub_1000BF3F8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000C6764()
{
  return 1;
}

void *sub_1000C676C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.InjectAssistanceFile");
}

void sub_1000C677C(uint64_t *a1)
{
  *a1 = (uint64_t)off_10010DD68;
  sub_1000508A8(a1[1]);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1000C67D4(uint64_t *a1)
{
  *a1 = (uint64_t)off_10010DD68;
  sub_1000508A8(a1[1]);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);

  operator delete();
}

void sub_1000C6840()
{
}

uint64_t sub_1000C6894(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      if (*(_UNKNOWN **)(a1 + 8) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
      if (!result) {
        return result;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_1000C69B4(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  }
  return result;
}

uint64_t sub_1000C69D0(uint64_t a1, unsigned int a2)
{
  if (*(unsigned char *)(a1 + 20))
  {
    uint64_t v4 = *(void *)(a1 + 8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    char v6 = v5;
    uint64_t v7 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
    }
    else {
      unint64_t v8 = v7;
    }
    if (v8 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8, a2);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v7 = *(void *)(v4 + 8);
      int v9 = v10 + 1;
      char v6 = *(unsigned char *)(v4 + 23);
    }
    else
    {
      int v9 = 2;
    }
    if (v6 < 0) {
      int v5 = v7;
    }
    uint64_t result = (v9 + v5);
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

void sub_1000C6A50(uint64_t a1, void *lpsrc)
{
  sub_1000BF528(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000C6AF4()
{
  return 1;
}

void *sub_1000C6AFC@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.InjectRtiFile");
}

void sub_1000C6B0C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010DDE0;
  int v2 = *((_DWORD *)this + 5);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*((void *)this + 1) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)this + 5);
      }
    }
  }
  if (*((void *)this + 1)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000C6BCC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000C6B0C(a1);

  operator delete();
}

void sub_1000C6C04()
{
}

uint64_t sub_1000C6C58(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
LABEL_2:
    char v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
    }
    if (TagFallback == 10)
    {
      while (1)
      {
        int v8 = a1[5];
        uint64_t v9 = a1[4];
        if ((int)v9 >= v8)
        {
          if (v8 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v8 + 1);
            int v8 = a1[5];
          }
          a1[5] = v8 + 1;
          operator new();
        }
        uint64_t v10 = *((void *)a1 + 1);
        a1[4] = v9 + 1;
        int v11 = *(proto::gnss::SvId **)(v10 + 8 * v9);
        unsigned int v23 = 0;
        unsigned int v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23))return 0; {
        }
          }
        else
        {
          unsigned int v23 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        int v13 = *((_DWORD *)this + 14);
        int v14 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0;
        }
        int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
        if (!proto::gnss::SvId::MergePartialFromCodedStream(v11, this, v16) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
        int v17 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)this + 14) = v19;
        }
        unsigned int v20 = (unsigned char *)*((void *)this + 1);
        unsigned int v21 = (unsigned char *)*((void *)this + 2);
        if (v20 >= v21 || *v20 != 10)
        {
          if (v20 == v21 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)this + 1) = v20 + 1;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000C6E84(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v5 = result;
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_1000C6EE4(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::SvId::ByteSize(*(proto::gnss::SvId **)(*(void *)(a1 + 8) + 8 * v4), a2);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      }
      else {
        int v7 = 1;
      }
      uint64_t v3 = (v6 + v3 + v7);
      ++v4;
    }
    while (v4 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 32) = v3;
  return v3;
}

void sub_1000C6F64(_DWORD *a1, void *lpsrc)
{
  sub_1000BF608(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000C7008()
{
  return 1;
}

void *sub_1000C7010@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.InjectSvidBlocklist");
}

void sub_1000C7020(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010DE58;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gpsd::InjectAssistancePosition::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000C70B0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000C7020(a1);

  operator delete();
}

void sub_1000C70E8()
{
}

uint64_t sub_1000C713C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 24);
  while (2)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_20;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        uint64_t v9 = *(proto::gnss::Position **)(a1 + 8);
        if (!v9) {
          operator new();
        }
        unsigned int v32 = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        int v16 = *((_DWORD *)this + 14);
        int v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0;
        }
        int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
        if (!proto::gnss::Position::MergePartialFromCodedStream(v9, this, v19) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        unsigned int v23 = (unsigned char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v23 >= v11 || *v23 != 16) {
          continue;
        }
        unsigned int v12 = v23 + 1;
        *((void *)this + 1) = v12;
        goto LABEL_33;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_33:
        unsigned int v30 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v30);
          if (!result) {
            return result;
          }
          unsigned int v24 = v30;
        }
        else
        {
          unsigned int v24 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        if (v24 <= 3)
        {
          *(_DWORD *)(a1 + 36) |= 2u;
          *(_DWORD *)(a1 + 16) = v24;
        }
        unsigned int v26 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v26 >= v13 || *v26 != 24) {
          continue;
        }
        int v14 = v26 + 1;
        *((void *)this + 1) = v14;
LABEL_43:
        unsigned int v31 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31);
          if (!result) {
            return result;
          }
          unsigned int v27 = v31;
          unsigned int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int v27 = *v14;
          unsigned int v28 = v14 + 1;
          *((void *)this + 1) = v28;
        }
        *(unsigned char *)(a1 + 20) = v27 != 0;
        *(_DWORD *)(a1 + 36) |= 4u;
        if ((unint64_t)v28 >= v13 || *v28 != 80) {
          continue;
        }
        int v15 = v28 + 1;
        *((void *)this + 1) = v15;
LABEL_51:
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v29 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v15;
          uint64_t v29 = (unsigned __int8 *)(v15 + 1);
          *((void *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 36) |= 8u;
        if (v29 != (unsigned __int8 *)v13 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_43;
      case 0xAu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_51;
      default:
        int v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1000C74F0(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(proto::gpsd::InjectAssistancePosition::default_instance_ + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 20), (BOOL)a2, a4);
      if ((*(_DWORD *)(v5 + 36) & 8) == 0) {
        return result;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 16), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_11:
  uint64_t v8 = *(void *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v8, (unint64_t)a2, a4);
}

uint64_t sub_1000C75A8(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_23;
  }
  if (*(unsigned char *)(a1 + 36))
  {
    uint64_t v5 = *(proto::gnss::Position **)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(proto::gnss::Position **)(proto::gpsd::InjectAssistancePosition::default_instance_ + 8);
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Position::ByteSize(v5, a2);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    }
    else {
      int v8 = 1;
    }
    LODWORD(v4) = v7 + v8 + 1;
    int v3 = *(_DWORD *)(a1 + 36);
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  LODWORD(v4) = 0;
  if ((*(unsigned char *)(a1 + 36) & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 11;
    }
    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v10 = 2;
    }
    LODWORD(v4) = v10 + v4;
  }
LABEL_18:
  if ((v3 & 4) != 0) {
    uint64_t v4 = (v4 + 2);
  }
  else {
    uint64_t v4 = v4;
  }
  if ((v3 & 8) != 0) {
    uint64_t v4 = v4
  }
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), a2)+ 1;
LABEL_23:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_1000C7684(uint64_t a1, void *lpsrc)
{
  sub_1000BE4BC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000C7728()
{
  return 1;
}

void *sub_1000C7730@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.InjectAssistancePosition");
}

void sub_1000C7740(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010DED0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000C7760(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010DED0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000C77B4()
{
}

uint64_t sub_1000C7808(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  int v6 = (unint64_t *)(a1 + 16);
  int v7 = (unint64_t *)(a1 + 24);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v14;
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        if ((unint64_t)v15 < v12 && *v15 == 16)
        {
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_27;
        }
      }
      if (v10 != 2) {
        break;
      }
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      int v16 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_27:
      if ((unint64_t)v16 >= v12 || *v16 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
        if (!result) {
          return result;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        *int v6 = *v16;
        int v17 = v16 + 1;
        *((void *)this + 1) = v17;
      }
      *(_DWORD *)(a1 + 36) |= 2u;
      if ((unint64_t)v17 < v12 && *v17 == 24)
      {
        unint64_t v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_35:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v18 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v7 = *v13;
          int v18 = (unsigned __int8 *)(v13 + 1);
          *((void *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 36) |= 4u;
        if (v18 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      int v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000C7A2C(uint64_t result, unint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), a2, a4);
    if ((*(_DWORD *)(v5 + 36) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_1000C7AB8(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_10;
  }
  if (*(unsigned char *)(a1 + 36))
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 36);
    if ((v3 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v4 = 0;
  if ((*(unsigned char *)(a1 + 36) & 2) != 0)
  {
LABEL_7:
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
LABEL_8:
  if ((v3 & 4) != 0) {
    uint64_t v4 = v4
  }
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), a2)+ 1;
LABEL_10:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_1000C7B3C(uint64_t a1, void *lpsrc)
{
  sub_1000BE64C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000C7BE0()
{
  return 1;
}

void *sub_1000C7BE8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.InjectAssistanceTime");
}

void sub_1000C7BF8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010DF48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000C7C18(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010DF48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000C7C6C()
{
}

uint64_t sub_1000C7CB8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      uint64_t v9 = (char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v9 >= v8 || *v9 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
        if (!result) {
          return result;
        }
        unsigned int v10 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
      }
      else
      {
        unint64_t *v5 = *v9;
        unsigned int v10 = (unsigned __int8 *)(v9 + 1);
        *((void *)this + 1) = v10;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      if (v10 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_1000C7DCC(uint64_t result, unint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 20)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_1000C7DE8(uint64_t a1, unint64_t a2)
{
  if (*(unsigned char *)(a1 + 20)) {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
  }
  else {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

void sub_1000C7E28(uint64_t a1, void *lpsrc)
{
  sub_1000BF780(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000C7ECC()
{
  return 1;
}

void *sub_1000C7ED4@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.DeleteGnssData");
}

void sub_1000C7EE4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010DFC0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000C7F04(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010DFC0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000C7F58()
{
}

uint64_t sub_1000C7FA4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      uint64_t v9 = (char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v9 >= v8 || *v9 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
        if (!result) {
          return result;
        }
        unsigned int v10 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
      }
      else
      {
        unint64_t *v5 = *v9;
        unsigned int v10 = (unsigned __int8 *)(v9 + 1);
        *((void *)this + 1) = v10;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      if (v10 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_1000C80B8(uint64_t result, unint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 20)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_1000C80D4(uint64_t a1, unint64_t a2)
{
  if (*(unsigned char *)(a1 + 20)) {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
  }
  else {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

void sub_1000C8114(uint64_t a1, void *lpsrc)
{
  sub_1000BF970(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000C81B8()
{
  return 1;
}

void *sub_1000C81C0@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.SetNmeaHandler");
}

void sub_1000C81D0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010E038;
  int v2 = *((_DWORD *)this + 5);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*((void *)this + 1) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)this + 5);
      }
    }
  }
  if (*((void *)this + 1)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000C8290(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000C81D0(a1);

  operator delete();
}

void sub_1000C82C8()
{
}

uint64_t sub_1000C831C(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
LABEL_2:
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
    }
    if (TagFallback == 10)
    {
      while (1)
      {
        int v8 = a1[5];
        uint64_t v9 = a1[4];
        if ((int)v9 >= v8)
        {
          if (v8 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v8 + 1);
            int v8 = a1[5];
          }
          a1[5] = v8 + 1;
          operator new();
        }
        uint64_t v10 = *((void *)a1 + 1);
        a1[4] = v9 + 1;
        int v11 = *(proto::gnss::RawPressureSample **)(v10 + 8 * v9);
        unsigned int v23 = 0;
        unint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23))return 0; {
        }
          }
        else
        {
          unsigned int v23 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        int v13 = *((_DWORD *)this + 14);
        int v14 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0;
        }
        int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
        if (!proto::gnss::RawPressureSample::MergePartialFromCodedStream(v11, this, v16)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
        int v17 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)this + 14) = v19;
        }
        int v20 = (unsigned char *)*((void *)this + 1);
        BOOL v21 = (unsigned char *)*((void *)this + 2);
        if (v20 >= v21 || *v20 != 10)
        {
          if (v20 == v21 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)this + 1) = v20 + 1;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000C8548(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v5 = result;
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_1000C85A8(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::RawPressureSample::ByteSize(*(proto::gnss::RawPressureSample **)(*(void *)(a1 + 8) + 8 * v4), a2);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      }
      else {
        int v7 = 1;
      }
      uint64_t v3 = (v6 + v3 + v7);
      ++v4;
    }
    while (v4 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 32) = v3;
  return v3;
}

void sub_1000C8628(_DWORD *a1, void *lpsrc)
{
  sub_1000BE738(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000C86CC()
{
  return 1;
}

void *sub_1000C86D4@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.SetAssistancePressure");
}

void sub_1000C86E4(uint64_t *a1)
{
  *a1 = (uint64_t)off_10010E0B0;
  sub_10003ADDC(a1 + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1000C8740(uint64_t *a1)
{
  sub_1000C86E4(a1);

  operator delete();
}

void sub_1000C8778()
{
}

uint64_t sub_1000C87CC(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
LABEL_2:
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
    }
    if (TagFallback == 10)
    {
      while (1)
      {
        int v8 = a1[5];
        uint64_t v9 = a1[4];
        if ((int)v9 >= v8)
        {
          if (v8 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v8 + 1);
            int v8 = a1[5];
          }
          a1[5] = v8 + 1;
          operator new();
        }
        uint64_t v10 = *((void *)a1 + 1);
        a1[4] = v9 + 1;
        int v11 = *(proto::gnss::SensorSample3Axis **)(v10 + 8 * v9);
        unsigned int v23 = 0;
        unint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23))return 0; {
        }
          }
        else
        {
          unsigned int v23 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        int v13 = *((_DWORD *)this + 14);
        int v14 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0;
        }
        int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
        if (!proto::gnss::SensorSample3Axis::MergePartialFromCodedStream(v11, this, v16)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
        int v17 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)this + 14) = v19;
        }
        int v20 = (unsigned char *)*((void *)this + 1);
        BOOL v21 = (unsigned char *)*((void *)this + 2);
        if (v20 >= v21 || *v20 != 10)
        {
          if (v20 == v21 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)this + 1) = v20 + 1;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000C89F8(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v5 = result;
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_1000C8A58(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::SensorSample3Axis::ByteSize(*(proto::gnss::SensorSample3Axis **)(*(void *)(a1 + 8) + 8 * v4), a2);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      }
      else {
        int v7 = 1;
      }
      uint64_t v3 = (v6 + v3 + v7);
      ++v4;
    }
    while (v4 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 32) = v3;
  return v3;
}

void sub_1000C8AD8(_DWORD *a1, void *lpsrc)
{
  sub_1000BE8B0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000C8B7C()
{
  return 1;
}

void *sub_1000C8B84@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.SetAssistanceAccel");
}

void sub_1000C8B94(uint64_t *a1)
{
  *a1 = (uint64_t)off_10010E128;
  sub_10003ADDC(a1 + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1000C8BF0(uint64_t *a1)
{
  sub_1000C8B94(a1);

  operator delete();
}

void sub_1000C8C28()
{
}

uint64_t sub_1000C8C7C(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
LABEL_2:
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
    }
    if (TagFallback == 10)
    {
      while (1)
      {
        int v8 = a1[5];
        uint64_t v9 = a1[4];
        if ((int)v9 >= v8)
        {
          if (v8 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v8 + 1);
            int v8 = a1[5];
          }
          a1[5] = v8 + 1;
          operator new();
        }
        uint64_t v10 = *((void *)a1 + 1);
        a1[4] = v9 + 1;
        int v11 = *(proto::gnss::SensorSample3Axis **)(v10 + 8 * v9);
        unsigned int v23 = 0;
        unint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23))return 0; {
        }
          }
        else
        {
          unsigned int v23 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        int v13 = *((_DWORD *)this + 14);
        int v14 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0;
        }
        int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
        if (!proto::gnss::SensorSample3Axis::MergePartialFromCodedStream(v11, this, v16)
          || !*((unsigned char *)this + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
        int v17 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)this + 14) = v19;
        }
        int v20 = (unsigned char *)*((void *)this + 1);
        BOOL v21 = (unsigned char *)*((void *)this + 2);
        if (v20 >= v21 || *v20 != 10)
        {
          if (v20 == v21 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)this + 1) = v20 + 1;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000C8EA8(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v5 = result;
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_1000C8F08(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::SensorSample3Axis::ByteSize(*(proto::gnss::SensorSample3Axis **)(*(void *)(a1 + 8) + 8 * v4), a2);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      }
      else {
        int v7 = 1;
      }
      uint64_t v3 = (v6 + v3 + v7);
      ++v4;
    }
    while (v4 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 32) = v3;
  return v3;
}

void sub_1000C8F88(_DWORD *a1, void *lpsrc)
{
  sub_1000BEA28(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000C902C()
{
  return 1;
}

void *sub_1000C9034@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.SetAssistanceGyro");
}

void sub_1000C9044(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E1A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000C9064(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E1A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000C90B8()
{
}

uint64_t sub_1000C910C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v6 = (char *)*((void *)this + 1);
          if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v6;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v6 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v8 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v9 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          int v11 = (char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
            if (!result) {
              return result;
            }
            unint64_t v12 = (unsigned char *)*((void *)this + 1);
            unint64_t v10 = *((void *)this + 2);
          }
          else
          {
            unint64_t *v5 = *v11;
            unint64_t v12 = v11 + 1;
            *((void *)this + 1) = v12;
          }
          *(_DWORD *)(a1 + 36) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 17)
          {
            *((void *)this + 1) = v12 + 1;
            goto LABEL_27;
          }
        }
        if (v8 != 2) {
          break;
        }
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_19;
        }
LABEL_27:
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v15;
        *(_DWORD *)(a1 + 36) |= 2u;
        int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 < *((void *)this + 2) && *v14 == 25)
        {
          *((void *)this + 1) = v14 + 1;
          goto LABEL_31;
        }
      }
      if (v8 != 3) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 1) {
        goto LABEL_19;
      }
LABEL_31:
      unint64_t v15 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
        return 0;
      }
      *(void *)(a1 + 24) = v15;
      *(_DWORD *)(a1 + 36) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v9 = TagFallback & 7;
LABEL_19:
    if (v9 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_1000C92F8(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v4, *(double *)(v5 + 16), a3);
    if ((*(_DWORD *)(v5 + 36) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  double v7 = *(double *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v4, v7, a3);
}

uint64_t sub_1000C9384(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 36))
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

double sub_1000C93EC(uint64_t a1, void *lpsrc)
{
  return sub_1000BEBA0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000C9490()
{
  return 1;
}

void *sub_1000C9498@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.SetAssistanceDem");
}

void sub_1000C94A8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E218;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000C94C8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E218;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000C951C()
{
}

uint64_t sub_1000C957C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  while (2)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v10;
          int v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }
        *(_DWORD *)(a1 + 76) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_45;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_36;
        }
LABEL_45:
        *(void *)int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v39) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v39;
        }
        *(_DWORD *)(a1 + 76) |= 2u;
        BOOL v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 25) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
LABEL_49:
        *(void *)int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v39) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v39;
        }
        *(_DWORD *)(a1 + 76) |= 4u;
        int v22 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v22 >= v12 || *v22 != 32) {
          continue;
        }
        int v13 = v22 + 1;
        *((void *)this + 1) = v13;
LABEL_53:
        v39[0] = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v39);
          if (!result) {
            return result;
          }
          unsigned int v23 = v39[0];
          unsigned int v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v23 = *v13;
          unsigned int v24 = v13 + 1;
          *((void *)this + 1) = v24;
        }
        *(unsigned char *)(a1 + 64) = v23 != 0;
        *(_DWORD *)(a1 + 76) |= 8u;
        if ((unint64_t)v24 >= v12 || *v24 != 41) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_61:
        *(void *)int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v39) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v39;
        }
        *(_DWORD *)(a1 + 76) |= 0x10u;
        unsigned int v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 49) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_65:
        *(void *)int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v39) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v39;
        }
        *(_DWORD *)(a1 + 76) |= 0x20u;
        unsigned int v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 57) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_69:
        *(void *)int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v39) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v39;
        }
        *(_DWORD *)(a1 + 76) |= 0x40u;
        unsigned int v27 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v27 >= *((void *)this + 2) || *v27 != 65) {
          continue;
        }
        *((void *)this + 1) = v27 + 1;
LABEL_73:
        *(void *)int v39 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v39))
        {
          *(void *)(a1 + 56) = *(void *)v39;
          *(_DWORD *)(a1 + 76) |= 0x80u;
          unsigned int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          if ((unint64_t)v28 < v14 && *v28 == 72)
          {
            unint64_t v15 = v28 + 1;
            *((void *)this + 1) = v15;
LABEL_77:
            v39[0] = 0;
            if ((unint64_t)v15 >= v14 || *v15 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v39);
              if (!result) {
                return result;
              }
              unsigned int v29 = v39[0];
              unsigned int v30 = (unsigned char *)*((void *)this + 1);
              unint64_t v14 = *((void *)this + 2);
            }
            else
            {
              unsigned int v29 = *v15;
              unsigned int v30 = v15 + 1;
              *((void *)this + 1) = v30;
            }
            *(unsigned char *)(a1 + 65) = v29 != 0;
            *(_DWORD *)(a1 + 76) |= 0x100u;
            if ((unint64_t)v30 < v14 && *v30 == 80)
            {
              unsigned int v16 = v30 + 1;
              *((void *)this + 1) = v16;
LABEL_85:
              v39[0] = 0;
              if ((unint64_t)v16 >= v14 || *v16 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v39);
                if (!result) {
                  return result;
                }
                unsigned int v31 = v39[0];
                unsigned int v32 = (unsigned char *)*((void *)this + 1);
                unint64_t v14 = *((void *)this + 2);
              }
              else
              {
                unsigned int v31 = *v16;
                unsigned int v32 = v16 + 1;
                *((void *)this + 1) = v32;
              }
              *(unsigned char *)(a1 + 66) = v31 != 0;
              *(_DWORD *)(a1 + 76) |= 0x200u;
              if ((unint64_t)v32 < v14 && *v32 == 88)
              {
                int v17 = v32 + 1;
                *((void *)this + 1) = v17;
LABEL_93:
                v39[0] = 0;
                if ((unint64_t)v17 >= v14 || *v17 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v39);
                  if (!result) {
                    return result;
                  }
                  unsigned int v33 = v39[0];
                  int v34 = (unsigned char *)*((void *)this + 1);
                  unint64_t v14 = *((void *)this + 2);
                }
                else
                {
                  unsigned int v33 = *v17;
                  int v34 = v17 + 1;
                  *((void *)this + 1) = v34;
                }
                *(unsigned char *)(a1 + 67) = v33 != 0;
                *(_DWORD *)(a1 + 76) |= 0x400u;
                if ((unint64_t)v34 < v14 && *v34 == 96)
                {
                  BOOL v18 = v34 + 1;
                  *((void *)this + 1) = v18;
LABEL_101:
                  v39[0] = 0;
                  if ((unint64_t)v18 >= v14 || *v18 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v39);
                    if (!result) {
                      return result;
                    }
                    unsigned int v35 = v39[0];
                    int v36 = (unsigned char *)*((void *)this + 1);
                    unint64_t v14 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int v35 = *v18;
                    int v36 = v18 + 1;
                    *((void *)this + 1) = v36;
                  }
                  *(unsigned char *)(a1 + 68) = v35 != 0;
                  *(_DWORD *)(a1 + 76) |= 0x800u;
                  if ((unint64_t)v36 < v14 && *v36 == 104)
                  {
                    int v19 = v36 + 1;
                    *((void *)this + 1) = v19;
LABEL_109:
                    v39[0] = 0;
                    if ((unint64_t)v19 >= v14 || *v19 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v39);
                      if (!result) {
                        return result;
                      }
                      unsigned int v37 = v39[0];
                      uint64_t v38 = (unsigned __int8 *)*((void *)this + 1);
                      unint64_t v14 = *((void *)this + 2);
                    }
                    else
                    {
                      unsigned int v37 = *v19;
                      uint64_t v38 = (unsigned __int8 *)(v19 + 1);
                      *((void *)this + 1) = v38;
                    }
                    *(unsigned char *)(a1 + 69) = v37 != 0;
                    *(_DWORD *)(a1 + 76) |= 0x1000u;
                    if (v38 == (unsigned __int8 *)v14
                      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                    {
                      *((_DWORD *)this + 8) = 0;
                      uint64_t result = 1;
                      *((unsigned char *)this + 36) = 1;
                      return result;
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_49;
        }
        goto LABEL_36;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_53;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_61;
        }
        goto LABEL_36;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_65;
        }
        goto LABEL_36;
      case 7u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_69;
        }
        goto LABEL_36;
      case 8u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_73;
        }
        goto LABEL_36;
      case 9u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_77;
      case 0xAu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unsigned int v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_85;
      case 0xBu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_93;
      case 0xCu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        BOOL v18 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_101;
      case 0xDu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_109;
      default:
        int v8 = TagFallback & 7;
LABEL_36:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000C9C14(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 76);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v4, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v4, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 64), v4, a4);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v4, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v4, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v4, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v4, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 65), v4, a4);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 66), v4, a4);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned __int8 *)(v5 + 68), v4, a4);
    if ((*(_DWORD *)(v5 + 76) & 0x1000) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 67), v4, a4);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x800) != 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((v6 & 0x1000) == 0) {
    return result;
  }
LABEL_27:
  int v7 = *(unsigned __int8 *)(v5 + 69);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v7, v4, a4);
}

uint64_t sub_1000C9DB8(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 76);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 76);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v6 = result + 2;
    if ((v3 & 0x100) == 0) {
      unsigned int v6 = result;
    }
    if ((v3 & 0x200) != 0) {
      v6 += 2;
    }
    if ((v3 & 0x400) != 0) {
      v6 += 2;
    }
    if ((v3 & 0x800) != 0) {
      v6 += 2;
    }
    if ((v3 & 0x1000) != 0) {
      uint64_t result = v6 + 2;
    }
    else {
      uint64_t result = v6;
    }
  }
  *(_DWORD *)(a1 + 72) = result;
  return result;
}

void sub_1000C9EA4(uint64_t a1, void *lpsrc)
{
  sub_1000BEC8C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000C9F48()
{
  return 1;
}

void *sub_1000C9F50@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.SetAssistanceMapVector");
}

void sub_1000C9F60(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E290;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000C9F80(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E290;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000C9FD4()
{
}

uint64_t sub_1000CA02C(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 2);
  while (2)
  {
    unsigned int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          unint64_t *v5 = *v10;
          int v11 = v10 + 1;
          *((void *)this + 1) = v11;
LABEL_24:
          a1[8] |= 1u;
          if ((unint64_t)v11 < v9 && *v11 == 16)
          {
            unint64_t v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_27;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
        if (result)
        {
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
LABEL_27:
        unsigned int v25 = 0;
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v17 = v25;
        }
        else
        {
          unsigned int v17 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        if (v17 <= 9)
        {
          a1[8] |= 2u;
          a1[4] = v17;
        }
        BOOL v18 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v18 >= v13 || *v18 != 24) {
          continue;
        }
        unint64_t v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_37:
        unsigned int v24 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
          if (!result) {
            return result;
          }
          unsigned int v19 = v24;
        }
        else
        {
          unsigned int v19 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        if (v19 <= 4)
        {
          a1[8] |= 4u;
          a1[5] = v19;
        }
        int v20 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v20 >= v15 || *v20 != 32) {
          continue;
        }
        unsigned int v16 = v20 + 1;
        *((void *)this + 1) = v16;
LABEL_47:
        unsigned int v23 = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
          if (!result) {
            return result;
          }
          unint64_t v21 = v23;
        }
        else
        {
          unint64_t v21 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        if (proto::gnss::Reliability_IsValid((proto::gnss *)v21))
        {
          a1[8] |= 8u;
          a1[6] = v21;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_37;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_47;
      default:
        int v8 = TagFallback & 7;
LABEL_18:
        if (v8 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1000CA314(uint64_t result, unint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], v4, a4);
      if ((v5[8] & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], v4, a4);
  int v6 = v5[8];
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = v5[6];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, v4, a4);
}

uint64_t sub_1000CA3BC(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_28;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_13;
    }
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 11;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v6 = 2;
  }
  uint64_t v4 = (v6 + v4);
LABEL_13:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_28;
    }
    goto LABEL_22;
  }
  int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if ((v7 & 0x80000000) != 0)
  {
    int v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v8 = 2;
  }
  uint64_t v4 = (v8 + v4);
  if ((v3 & 8) != 0)
  {
LABEL_22:
    unint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 11;
    }
    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v4 = (v10 + v4);
  }
LABEL_28:
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

void sub_1000CA4B4(uint64_t a1, void *lpsrc)
{
  sub_1000BEEC4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000CA558()
{
  return 1;
}

void *sub_1000CA560@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.SetAssistanceMotionActivityContext");
}

void sub_1000CA570(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E308;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000CA590(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E308;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000CA5E4()
{
}

uint64_t sub_1000CA63C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      int v11 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
        if (!result) {
          return result;
        }
        unint64_t v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        unint64_t *v5 = *v11;
        unint64_t v12 = v11 + 1;
        *((void *)this + 1) = v12;
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        int v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_24:
        unsigned int v15 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v15);
          if (!result) {
            return result;
          }
          unsigned int v13 = v15;
        }
        else
        {
          unsigned int v13 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        if (v13 - 1 <= 3)
        {
          *(_DWORD *)(a1 + 24) |= 2u;
          *(_DWORD *)(a1 + 16) = v13;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000CA7F4(uint64_t result, unint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, v4, a4);
  }
  return result;
}

uint64_t sub_1000CA860(uint64_t a1, unint64_t a2)
{
  if (*(unsigned char *)(a1 + 24))
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_13;
      }
    }
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v4 & 0x80000000) != 0)
    {
      int v5 = 11;
    }
    else if (v4 >= 0x80)
    {
      int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    }
    else
    {
      int v5 = 2;
    }
    uint64_t v3 = (v5 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_13:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1000CA8E8(uint64_t a1, void *lpsrc)
{
  sub_1000BF03C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000CA98C()
{
  return 1;
}

void *sub_1000CA994@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.SetAssistanceMountState");
}

void sub_1000CA9A4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E380;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000CA9C4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E380;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000CAA18()
{
}

uint64_t sub_1000CAA70(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      unsigned int v11 = 0;
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
        if (!result) {
          return result;
        }
        unsigned int v8 = v11;
      }
      else
      {
        unsigned int v8 = *v7;
        *((void *)this + 1) = v7 + 1;
      }
      if (v8 < 7 || v8 == 15)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 8) = v8;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_1000CAB94(uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_1000CABB0(uint64_t a1, unsigned int a2)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t result = 11;
    }
    else if (v4 >= 0x80)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2)
             + 1;
    }
    else
    {
      uint64_t result = 2;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 12) = result;
  return result;
}

void sub_1000CAC0C(uint64_t a1, void *lpsrc)
{
  sub_1000BF12C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000CACB0()
{
  return 1;
}

void *sub_1000CACB8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.SetAssistanceSignalEnvironment");
}

void sub_1000CACC8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E3F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000CACE8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E3F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000CAD3C()
{
}

uint64_t sub_1000CAD94(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 8);
  while (2)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v10;
          unsigned int v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_26;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_18;
        }
LABEL_26:
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v15;
        *(_DWORD *)(a1 + 44) |= 2u;
        unsigned int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 25) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_30:
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v15;
        *(_DWORD *)(a1 + 44) |= 4u;
        unint64_t v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 33) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_34:
        unint64_t v15 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15))
        {
          *(void *)(a1 + 32) = v15;
          *(_DWORD *)(a1 + 44) |= 8u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_30;
        }
        goto LABEL_18;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_18;
        }
        goto LABEL_34;
      default:
        int v8 = TagFallback & 7;
LABEL_18:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000CAFFC(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v4, *(double *)(v5 + 24), a3);
      if ((*(_DWORD *)(v5 + 44) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v4, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  double v7 = *(double *)(v5 + 32);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v4, v7, a3);
}

uint64_t sub_1000CB0A4(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 44))
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 44);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

double sub_1000CB118(uint64_t a1, void *lpsrc)
{
  return sub_1000BF200(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000CB1BC()
{
  return 1;
}

void *sub_1000CB1C4@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.SetAssistanceSpeedConstraint");
}

void sub_1000CB1D4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E470;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000CB1F4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E470;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000CB248()
{
}

uint64_t sub_1000CB29C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v6 = (char *)*((void *)this + 1);
          if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v6;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v6 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v8 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v9 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          unsigned int v11 = (char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
            if (!result) {
              return result;
            }
            unint64_t v12 = (unsigned char *)*((void *)this + 1);
            unint64_t v10 = *((void *)this + 2);
          }
          else
          {
            unint64_t *v5 = *v11;
            unint64_t v12 = v11 + 1;
            *((void *)this + 1) = v12;
          }
          *(_DWORD *)(a1 + 36) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 17)
          {
            *((void *)this + 1) = v12 + 1;
            goto LABEL_27;
          }
        }
        if (v8 != 2) {
          break;
        }
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_19;
        }
LABEL_27:
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v15;
        *(_DWORD *)(a1 + 36) |= 2u;
        unint64_t v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 < *((void *)this + 2) && *v14 == 25)
        {
          *((void *)this + 1) = v14 + 1;
          goto LABEL_31;
        }
      }
      if (v8 != 3) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 1) {
        goto LABEL_19;
      }
LABEL_31:
      unint64_t v15 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
        return 0;
      }
      *(void *)(a1 + 24) = v15;
      *(_DWORD *)(a1 + 36) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v9 = TagFallback & 7;
LABEL_19:
    if (v9 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_1000CB488(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v4, *(double *)(v5 + 16), a3);
    if ((*(_DWORD *)(v5 + 36) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  double v7 = *(double *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v4, v7, a3);
}

uint64_t sub_1000CB514(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 36))
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

double sub_1000CB57C(uint64_t a1, void *lpsrc)
{
  return sub_1000BF30C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000CB620()
{
  return 1;
}

void *sub_1000CB628@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.SetAssistanceAlongTrackVelocity");
}

void sub_1000CB638(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E4E8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000CB658(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E4E8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000CB6AC()
{
}

uint64_t sub_1000CB6FC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      double v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unint64_t v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
        if (!result) {
          return result;
        }
        unsigned int v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        unint64_t *v5 = *v12;
        unsigned int v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        unsigned int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          unint64_t v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 24) |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unsigned int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000CB89C(uint64_t result, unint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, v4, a4);
  }
  return result;
}

uint64_t sub_1000CB908(uint64_t a1, unint64_t a2)
{
  if (*(unsigned char *)(a1 + 24))
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_11;
      }
    }
    unsigned int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v4 >= 0x80) {
      int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    }
    else {
      int v5 = 2;
    }
    uint64_t v3 = (v5 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_11:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1000CB984(uint64_t a1, void *lpsrc)
{
  sub_1000C02E0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000CBA28()
{
  return 1;
}

void *sub_1000CBA30@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.SetThermalRiskState");
}

void sub_1000CBA40(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E560;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000CBA60(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E560;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000CBAB4()
{
}

uint64_t sub_1000CBB08(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v16 = 0;
      unint64_t v10 = (char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
        if (!result) {
          return result;
        }
        unsigned int v11 = v16;
        unint64_t v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
      }
      else
      {
        unsigned int v11 = *v10;
        unint64_t v12 = v10 + 1;
        *((void *)this + 1) = v12;
      }
      *(unsigned char *)(a1 + 8) = v11 != 0;
      *(_DWORD *)(a1 + 20) |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)this + 1) = v9;
LABEL_23:
        unsigned int v17 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17);
          if (!result) {
            return result;
          }
          unsigned int v13 = v17;
          unint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v9;
          unint64_t v14 = (unsigned __int8 *)(v9 + 1);
          *((void *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 12) = v13;
        *(_DWORD *)(a1 + 20) |= 2u;
        if (v14 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_23;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_15:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000CBCB8(uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1000CBD24(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[5];
  if ((_BYTE)v3)
  {
    uint64_t v4 = 2 * (v3 & 1);
    if ((v3 & 2) != 0)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
      if ((v5 & 0x80000000) != 0)
      {
        int v6 = 11;
      }
      else if (v5 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      }
      else
      {
        int v6 = 2;
      }
      uint64_t v4 = (v6 + v4);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  a1[4] = v4;
  return v4;
}

void sub_1000CBD94(uint64_t a1, void *lpsrc)
{
  sub_1000BFA14(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000CBE38()
{
  return 1;
}

void *sub_1000CBE40@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.SetConfigSimulatorMode");
}

void sub_1000CBE50(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E5D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000CBE70(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E5D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000CBEC4()
{
}

uint64_t sub_1000CBF10(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unint64_t v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        unsigned int v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        unsigned int *v5 = *v12;
        unsigned int v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        unsigned int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          unint64_t v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unsigned int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000CC0B0(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1000CC11C(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1000CC1AC(_DWORD *a1, void *lpsrc)
{
  sub_1000BFAD8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000CC250()
{
  return 1;
}

void *sub_1000CC258@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.SetConfigEnableGnssConstellations");
}

void sub_1000CC268(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E650;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000CC288(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E650;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000CC2DC()
{
}

uint64_t sub_1000CC32C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v17 = 0;
      unint64_t v10 = (char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17);
        if (!result) {
          return result;
        }
        unsigned int v11 = v17;
        unint64_t v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
      }
      else
      {
        unsigned int v11 = *v10;
        unint64_t v12 = v10 + 1;
        *((void *)this + 1) = v12;
      }
      *(unsigned char *)(a1 + 8) = v11 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)this + 1) = v9;
LABEL_23:
        unsigned int v16 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
          unint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v9;
          unint64_t v14 = (unsigned __int8 *)(v9 + 1);
          *((void *)this + 1) = v14;
        }
        *(unsigned char *)(a1 + 9) = v13 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if (v14 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_23;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_15:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000CC4E4(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 16);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(unsigned __int8 *)(v5 + 9);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1000CC550(uint64_t a1)
{
  unsigned int v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  if ((*(_DWORD *)(a1 + 16) & 2) != 0) {
    v1 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 12) = v2;
  return v2;
}

void sub_1000CC578(uint64_t a1, unsigned char *lpsrc)
{
  sub_1000C03A4(a1, lpsrc);
}

uint64_t sub_1000CC61C()
{
  return 1;
}

void *sub_1000CC624@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.SetConfigRfBandEnable");
}

void sub_1000CC634(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E6C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000CC654(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E6C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000CC6A8()
{
}

uint64_t sub_1000CC6F8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      unsigned int v12 = 0;
      unint64_t v8 = (char *)*((void *)this + 1);
      unint64_t v7 = *((void *)this + 2);
      if ((unint64_t)v8 >= v7 || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
        if (!result) {
          return result;
        }
        unsigned int v9 = v12;
        unint64_t v10 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
      }
      else
      {
        unsigned int v9 = *v8;
        unint64_t v10 = (unsigned __int8 *)(v8 + 1);
        *((void *)this + 1) = v10;
      }
      *(unsigned char *)(a1 + 8) = v9 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if (v10 == (unsigned __int8 *)v7 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_1000CC818(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_1000CC834(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1u);
  }
  else {
    uint64_t v1 = 0;
  }
  *(_DWORD *)(a1 + 12) = v1;
  return v1;
}

void sub_1000CC850(uint64_t a1, void *lpsrc)
{
  sub_1000BFB9C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000CC8F4()
{
  return 1;
}

void *sub_1000CC8FC@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.SetConfigDutyCycling");
}

void sub_1000CC90C(uint64_t *a1)
{
  *a1 = (uint64_t)off_10010E740;
  sub_1000508A8(a1[1]);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1000CC964(uint64_t *a1)
{
  *a1 = (uint64_t)off_10010E740;
  sub_1000508A8(a1[1]);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);

  operator delete();
}

void sub_1000CC9D0()
{
}

uint64_t sub_1000CCA24(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      if (*(_UNKNOWN **)(a1 + 8) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_1000CCB44(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  }
  return result;
}

uint64_t sub_1000CCB60(uint64_t a1, unsigned int a2)
{
  if (*(unsigned char *)(a1 + 20))
  {
    uint64_t v4 = *(void *)(a1 + 8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    char v6 = v5;
    uint64_t v7 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
    }
    else {
      unint64_t v8 = v7;
    }
    if (v8 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8, a2);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v7 = *(void *)(v4 + 8);
      int v9 = v10 + 1;
      char v6 = *(unsigned char *)(v4 + 23);
    }
    else
    {
      int v9 = 2;
    }
    if (v6 < 0) {
      int v5 = v7;
    }
    uint64_t result = (v9 + v5);
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

void sub_1000CCBE0(uint64_t a1, void *lpsrc)
{
  sub_1000BFC40(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000CCC84()
{
  return 1;
}

void *sub_1000CCC8C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.TerminationImminent");
}

void sub_1000CCC9C(uint64_t *a1)
{
  *a1 = (uint64_t)off_10010E7B8;
  sub_1000508A8(a1[1]);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1000CCCF4(uint64_t *a1)
{
  *a1 = (uint64_t)off_10010E7B8;
  sub_1000508A8(a1[1]);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);

  operator delete();
}

void sub_1000CCD60()
{
}

uint64_t sub_1000CCDB4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      if (*(_UNKNOWN **)(a1 + 8) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_1000CCED4(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  }
  return result;
}

uint64_t sub_1000CCEF0(uint64_t a1, unsigned int a2)
{
  if (*(unsigned char *)(a1 + 20))
  {
    uint64_t v4 = *(void *)(a1 + 8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    char v6 = v5;
    uint64_t v7 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
    }
    else {
      unint64_t v8 = v7;
    }
    if (v8 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8, a2);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v7 = *(void *)(v4 + 8);
      int v9 = v10 + 1;
      char v6 = *(unsigned char *)(v4 + 23);
    }
    else
    {
      int v9 = 2;
    }
    if (v6 < 0) {
      int v5 = v7;
    }
    uint64_t result = (v9 + v5);
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

void sub_1000CCF70(uint64_t a1, void *lpsrc)
{
  sub_1000BFD20(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000CD014()
{
  return 1;
}

void *sub_1000CD01C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.ExitMessage");
}

void sub_1000CD02C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      char v6 = *(unsigned char *)(a2 + 12);
      *(_DWORD *)(a1 + 20) |= 1u;
      *(unsigned char *)(a1 + 12) = v6;
      int v4 = *(_DWORD *)(a2 + 20);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 20) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 20) |= 2u;
    *(_DWORD *)(a1 + 8) = v7;
    int v4 = *(_DWORD *)(a2 + 20);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = *(unsigned char *)(a2 + 13);
    *(_DWORD *)(a1 + 20) |= 4u;
    *(unsigned char *)(a1 + 13) = v8;
    if ((*(_DWORD *)(a2 + 20) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = *(unsigned char *)(a2 + 14);
    *(_DWORD *)(a1 + 20) |= 8u;
    *(unsigned char *)(a1 + 14) = v5;
  }
}

void sub_1000CD120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000CD138(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E830;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000CD158(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E830;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000CD1AC()
{
}

uint64_t sub_1000CD200(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    *(_DWORD *)(result + 11) = 0;
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1000CD218(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v22 = 0;
        int v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          unsigned int v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_23:
          *(unsigned char *)(a1 + 12) = v10 != 0;
          *(_DWORD *)(a1 + 20) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            unsigned int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_26;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if (result)
        {
          unsigned int v10 = v22;
          unsigned int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_26:
        unsigned int v22 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v15 = v22;
          unsigned int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v15 = *v12;
          unsigned int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }
        *(_DWORD *)(a1 + 8) = v15;
        *(_DWORD *)(a1 + 20) |= 2u;
        if ((unint64_t)v16 >= v8 || *v16 != 24) {
          continue;
        }
        unsigned int v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        unsigned int v22 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v17 = v22;
          BOOL v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v13;
          BOOL v18 = v13 + 1;
          *((void *)this + 1) = v18;
        }
        *(unsigned char *)(a1 + 13) = v17 != 0;
        *(_DWORD *)(a1 + 20) |= 4u;
        if ((unint64_t)v18 >= v8 || *v18 != 32) {
          continue;
        }
        unint64_t v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        unsigned int v22 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v19 = v22;
          int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v14;
          int v20 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 14) = v19 != 0;
        *(_DWORD *)(a1 + 20) |= 8u;
        if (v20 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1000CD4F8(uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 12), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 13), a2, a4);
      if ((*(_DWORD *)(v5 + 20) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = *(unsigned __int8 *)(v5 + 14);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_1000CD5A0(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[5];
  if ((_BYTE)v3)
  {
    int v4 = 2 * (v3 & 1);
    if ((v3 & 2) != 0)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
      if ((v5 & 0x80000000) != 0)
      {
        int v6 = 11;
      }
      else if (v5 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
        unsigned int v3 = a1[5];
      }
      else
      {
        int v6 = 2;
      }
      v4 += v6;
    }
    unsigned int v8 = v4 + 2;
    if ((v3 & 4) == 0) {
      unsigned int v8 = v4;
    }
    if ((v3 & 8) != 0) {
      uint64_t result = v8 + 2;
    }
    else {
      uint64_t result = v8;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  a1[4] = result;
  return result;
}

void sub_1000CD628(uint64_t a1, void *lpsrc)
{
  sub_1000CD02C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000CD6CC()
{
  return 1;
}

void *sub_1000CD6D4@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.RecoveryStatistics.RecoveryStatus");
}

void sub_1000CD6E4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      uint64_t v5 = *(const std::string **)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      int v6 = *(std::string **)(a1 + 8);
      if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v6, v5);
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v7;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return;
    }
LABEL_12:
    unsigned int v8 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 4u;
    int v9 = *(std::string **)(a1 + 16);
    if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v9, v8);
  }
}

void sub_1000CD830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000CD848(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  uint64_t v3 = *(void *)(result + 16);
  if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  return result;
}

void sub_1000CD904(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E8A8;
  sub_1000CD848((uint64_t)a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000CD958(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E8A8;
  sub_1000CD848((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000CD9C0()
{
}

uint64_t sub_1000CDA18(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    if (*(unsigned char *)(result + 32))
    {
      uint64_t v1 = *(void *)(result + 8);
      if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(unsigned char **)uint64_t v1 = 0;
          *(void *)(v1 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v1 = 0;
          *(unsigned char *)(v1 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(result + 24) = 0;
    if ((*(unsigned char *)(result + 32) & 4) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1000CDA98(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_24;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          if (*(_UNKNOWN **)(a1 + 8) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
            operator new();
          }
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
          if (!result) {
            return result;
          }
          unsigned int v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
          if ((unint64_t)v12 < v11 && *v12 == 16)
          {
            unsigned int v13 = v12 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_20;
          }
        }
        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v13 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_20:
        unsigned int v16 = 0;
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
          if (!result) {
            return result;
          }
          unsigned int v14 = v16;
          unsigned int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v14 = *v13;
          unsigned int v15 = v13 + 1;
          *((void *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 24) = v14;
        int v9 = *(_DWORD *)(a1 + 32) | 2;
        *(_DWORD *)(a1 + 32) = v9;
        if ((unint64_t)v15 < v11 && *v15 == 26)
        {
          *((void *)this + 1) = v15 + 1;
          goto LABEL_32;
        }
      }
      if (v7 != 3) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_24;
      }
      int v9 = *(_DWORD *)(a1 + 32);
LABEL_32:
      *(_DWORD *)(a1 + 32) = v9 | 4;
      if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_24:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000CDCD8(uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
}

uint64_t sub_1000CDD64(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_31;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v5 = *(void *)(a1 + 8);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    char v7 = v6;
    uint64_t v8 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      unint64_t v9 = v8;
    }
    if (v9 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v8 = *(void *)(v5 + 8);
      int v10 = v11 + 1;
      int v3 = *(_DWORD *)(a1 + 32);
      char v7 = *(unsigned char *)(v5 + 23);
    }
    else
    {
      int v10 = 2;
    }
    if (v7 < 0) {
      int v6 = v8;
    }
    uint64_t v4 = (v10 + v6);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }
  unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v12 & 0x80000000) != 0)
  {
    int v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v4 = (v13 + v4);
LABEL_21:
  if ((v3 & 4) != 0)
  {
    uint64_t v14 = *(void *)(a1 + 16);
    int v15 = *(unsigned __int8 *)(v14 + 23);
    char v16 = v15;
    uint64_t v17 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      unint64_t v18 = *(unsigned __int8 *)(v14 + 23);
    }
    else {
      unint64_t v18 = v17;
    }
    if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18, a2);
      int v15 = *(unsigned __int8 *)(v14 + 23);
      uint64_t v17 = *(void *)(v14 + 8);
      char v16 = *(unsigned char *)(v14 + 23);
    }
    else
    {
      int v19 = 1;
    }
    if (v16 < 0) {
      int v15 = v17;
    }
    uint64_t v4 = (v4 + v19 + v15 + 1);
  }
LABEL_31:
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

void sub_1000CDE8C(uint64_t a1, void *lpsrc)
{
  sub_1000CD6E4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000CDF30()
{
  return 1;
}

void *sub_1000CDF38@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.RecoveryStatistics.RecoveryPoint");
}

void sub_1000CDF48(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010E920;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gpsd::RecoveryStatistics::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 4);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  int v3 = *((_DWORD *)this + 5);
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i < v3; ++i)
    {
      uint64_t v5 = *(void *)(*((void *)this + 1) + 8 * i);
      if (v5)
      {
        (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
        int v3 = *((_DWORD *)this + 5);
      }
    }
  }
  if (*((void *)this + 1)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000CE044(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000CDF48(a1);

  operator delete();
}

void sub_1000CE07C()
{
}

uint64_t sub_1000CE0D0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8);
  do
  {
    while (1)
    {
LABEL_2:
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 == 2)
      {
        while (1)
        {
          int v11 = *(_DWORD *)(a1 + 20);
          uint64_t v12 = *(int *)(a1 + 16);
          if ((int)v12 >= v11)
          {
            if (v11 == *(_DWORD *)(a1 + 24))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v11 + 1);
              int v11 = *(_DWORD *)(a1 + 20);
            }
            *(_DWORD *)(a1 + 20) = v11 + 1;
            operator new();
          }
          uint64_t v13 = *(void *)(a1 + 8);
          *(_DWORD *)(a1 + 16) = v12 + 1;
          uint64_t v14 = *(void *)(v13 + 8 * v12);
          unsigned int v32 = 0;
          int v15 = (char *)*((void *)this + 1);
          if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
          }
            }
          else
          {
            unsigned int v32 = *v15;
            *((void *)this + 1) = v15 + 1;
          }
          int v16 = *((_DWORD *)this + 14);
          int v17 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v16 + 1;
          if (v16 >= v17) {
            return 0;
          }
          int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
          if (!sub_1000CDA98(v14, this, v19) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
          int v20 = *((_DWORD *)this + 14);
          BOOL v21 = __OFSUB__(v20, 1);
          int v22 = v20 - 1;
          if (v22 < 0 == v21) {
            *((_DWORD *)this + 14) = v22;
          }
          unsigned int v23 = (unsigned __int8 *)*((void *)this + 1);
          if ((unint64_t)v23 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v24 = *v23;
          if (v24 != 10)
          {
            if (v24 != 18) {
              goto LABEL_2;
            }
            *((void *)this + 1) = v23 + 1;
            goto LABEL_10;
          }
          *((void *)this + 1) = v23 + 1;
        }
      }
LABEL_34:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
    if (TagFallback >> 3 != 2)
    {
      int v8 = TagFallback & 7;
      goto LABEL_34;
    }
    int v8 = TagFallback & 7;
    if (v8 != 2) {
      goto LABEL_34;
    }
LABEL_10:
    *(_DWORD *)(a1 + 44) |= 2u;
    uint64_t v9 = *(void *)(a1 + 32);
    if (!v9) {
      operator new();
    }
    unsigned int v33 = 0;
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33)) {
        return 0;
      }
    }
    else
    {
      unsigned int v33 = *v10;
      *((void *)this + 1) = v10 + 1;
    }
    int v25 = *((_DWORD *)this + 14);
    int v26 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v25 + 1;
    if (v25 >= v26) {
      return 0;
    }
    int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v33);
    if (!sub_1000CD218(v9, this, v28) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
    int v29 = *((_DWORD *)this + 14);
    BOOL v21 = __OFSUB__(v29, 1);
    int v30 = v29 - 1;
    if (v30 < 0 == v21) {
      *((_DWORD *)this + 14) = v30;
    }
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1000CE43C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if ((*(unsigned char *)(v5 + 44) & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 32);
    if (!v7) {
      uint64_t v7 = *(void *)(proto::gpsd::RecoveryStatistics::default_instance_ + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1000CE4E0(uint64_t a1, unsigned int a2)
{
  if ((*(unsigned char *)(a1 + 44) & 2) != 0)
  {
    uint64_t v4 = *(unsigned int **)(a1 + 32);
    if (!v4) {
      uint64_t v4 = *(unsigned int **)(proto::gpsd::RecoveryStatistics::default_instance_ + 32);
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000CD5A0(v4, a2);
    int v6 = (int)v5;
    if (v5 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    }
    else {
      int v7 = 1;
    }
    int v3 = v6 + v7 + 1;
  }
  else
  {
    int v3 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  uint64_t v9 = (v8 + v3);
  if (v8 >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000CDD64(*(void *)(*(void *)(a1 + 8) + 8 * v10), a2);
      int v12 = (int)v11;
      if (v11 >= 0x80) {
        int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      }
      else {
        int v13 = 1;
      }
      uint64_t v9 = (v12 + v9 + v13);
      ++v10;
    }
    while (v10 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 40) = v9;
  return v9;
}

void sub_1000CE5B0(uint64_t a1, void *lpsrc)
{
  sub_1000C5028(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000CE654()
{
  return 1;
}

void *sub_1000CE65C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.RecoveryStatistics");
}

void sub_1000CE66C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E998;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000CE68C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010E998;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000CE6E0()
{
}

uint64_t sub_1000CE72C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      unsigned int v10 = 0;
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v10);
        if (!result) {
          return result;
        }
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v8 = *v7;
        *((void *)this + 1) = v7 + 1;
      }
      if (v8 <= 4)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 8) = v8;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_1000CE84C(uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_1000CE868(uint64_t a1, unsigned int a2)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t result = 11;
    }
    else if (v4 >= 0x80)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2)
             + 1;
    }
    else
    {
      uint64_t result = 2;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 12) = result;
  return result;
}

void sub_1000CE8C4(uint64_t a1, void *lpsrc)
{
  sub_1000C5220(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000CE968()
{
  return 1;
}

void *sub_1000CE970@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.LtlInfoRequest");
}

void sub_1000CE980(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    sub_10002D764(a1 + 16, *(_DWORD *)(a1 + 24) + v4);
    memcpy((void *)(*(void *)(a1 + 16) + 4 * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  int v5 = *(_DWORD *)(a2 + 40);
  if (v5)
  {
    sub_10002D764(a1 + 32, *(_DWORD *)(a1 + 40) + v5);
    memcpy((void *)(*(void *)(a1 + 32) + 4 * *(int *)(a1 + 40)), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 40));
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
  }
  LOBYTE(v6) = *(unsigned char *)(a2 + 52);
  if ((_BYTE)v6)
  {
    if (*(unsigned char *)(a2 + 52))
    {
      int v7 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 52) |= 1u;
      *(_DWORD *)(a1 + 8) = v7;
      int v6 = *(_DWORD *)(a2 + 52);
    }
    if ((v6 & 2) != 0)
    {
      int v8 = *(_DWORD *)(a2 + 12);
      *(_DWORD *)(a1 + 52) |= 2u;
      *(_DWORD *)(a1 + 12) = v8;
    }
  }
}

void sub_1000CEAB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000CEACC(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010EA10;
  if (*((void *)this + 4)) {
    operator delete[]();
  }
  if (*((void *)this + 2)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000CEB58(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000CEACC(a1);

  operator delete();
}

void sub_1000CEB90()
{
}

uint64_t sub_1000CEBE8(uint64_t result)
{
  if (*(unsigned char *)(result + 52)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_1000CEC04(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5 = a1 + 32;
  uint64_t v6 = a1 + 16;
  int v7 = (unsigned int *)(a1 + 8);
  int v8 = (unsigned int *)(a1 + 12);
LABEL_2:
  while (2)
  {
    uint64_t v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v13 = (char *)*((void *)this + 1);
        int v12 = (char *)*((void *)this + 2);
        if (v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          uint64_t v14 = (char *)*((void *)this + 1);
          int v12 = (char *)*((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v13;
          uint64_t v14 = v13 + 1;
          *((void *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        if (v14 < v12 && *v14 == 16)
        {
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
          goto LABEL_33;
        }
        continue;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v15 = (char *)*((void *)this + 1);
        int v12 = (char *)*((void *)this + 2);
LABEL_33:
        if (v15 >= v12 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          unsigned int v19 = (char *)*((void *)this + 1);
          int v12 = (char *)*((void *)this + 2);
        }
        else
        {
          *int v8 = *v15;
          unsigned int v19 = v15 + 1;
          *((void *)this + 1) = v19;
        }
        *(_DWORD *)(a1 + 52) |= 2u;
        if (v19 >= v12) {
          continue;
        }
        int v20 = *v19;
        goto LABEL_61;
      case 3u:
        int v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            int v16 = (char *)*((void *)this + 1);
            int v12 = (char *)*((void *)this + 2);
            goto LABEL_40;
          }
          goto LABEL_21;
        }
        uint64_t result = sub_1000CF148(this, v6);
        if (!result) {
          return result;
        }
        while (1)
        {
          unsigned int v19 = (char *)*((void *)this + 1);
          int v12 = (char *)*((void *)this + 2);
          if (v19 >= v12) {
            goto LABEL_2;
          }
          int v20 = *v19;
          if (v20 == 32) {
            goto LABEL_82;
          }
LABEL_61:
          if (v20 != 24) {
            goto LABEL_2;
          }
          int v16 = v19 + 1;
          *((void *)this + 1) = v16;
LABEL_40:
          v42[0] = 0;
          if (v16 >= v12 || *v16 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v42);
            if (!result) {
              return result;
            }
            unsigned int v21 = v42[0];
          }
          else
          {
            unsigned int v21 = *v16;
            *((void *)this + 1) = v16 + 1;
          }
          int v22 = *(_DWORD *)(a1 + 24);
          if (v22 == *(_DWORD *)(a1 + 28))
          {
            sub_10002D764(v6, v22 + 1);
            int v22 = *(_DWORD *)(a1 + 24);
          }
          uint64_t v23 = *(void *)(a1 + 16);
          *(_DWORD *)(a1 + 24) = v22 + 1;
          *(_DWORD *)(v23 + 4 * v22) = v21;
          int v24 = *(_DWORD *)(a1 + 28) - *(_DWORD *)(a1 + 24);
          if (v24 >= 1)
          {
            int v25 = v24 + 1;
            do
            {
              int v26 = (unsigned char *)*((void *)this + 1);
              unint64_t v27 = *((void *)this + 2);
              if ((unint64_t)v26 >= v27 || *v26 != 24) {
                break;
              }
              *((void *)this + 1) = v26 + 1;
              v42[0] = 0;
              if ((unint64_t)(v26 + 1) >= v27 || (char)v26[1] < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v42);
                if (!result) {
                  return result;
                }
                unsigned int v28 = v42[0];
              }
              else
              {
                unsigned int v28 = v26[1];
                *((void *)this + 1) = v26 + 2;
              }
              int v29 = *(_DWORD *)(a1 + 24);
              if (v29 >= *(_DWORD *)(a1 + 28))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v42);
                int v29 = *(_DWORD *)(a1 + 24);
              }
              uint64_t v30 = *(void *)(a1 + 16);
              *(_DWORD *)(a1 + 24) = v29 + 1;
              *(_DWORD *)(v30 + 4 * v29) = v28;
              --v25;
            }
            while (v25 > 1);
          }
        }
      case 4u:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = sub_10005630C(this, v5);
          if (!result) {
            return result;
          }
          while (1)
          {
            unsigned int v19 = (char *)*((void *)this + 1);
            int v12 = (char *)*((void *)this + 2);
            if (v19 >= v12 || *v19 != 32) {
              break;
            }
LABEL_82:
            int v17 = v19 + 1;
            *((void *)this + 1) = v17;
LABEL_63:
            unsigned int v41 = 0;
            if (v17 >= v12 || *v17 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41))return 0; {
            }
              }
            else
            {
              unsigned int v41 = *v17;
              *((void *)this + 1) = v17 + 1;
            }
            int v31 = *(_DWORD *)(a1 + 40);
            if (v31 == *(_DWORD *)(a1 + 44))
            {
              sub_10002D764(v5, v31 + 1);
              int v31 = *(_DWORD *)(a1 + 40);
            }
            unsigned int v32 = v41;
            uint64_t v33 = *(void *)(a1 + 32);
            *(_DWORD *)(a1 + 40) = v31 + 1;
            *(_DWORD *)(v33 + 4 * v31) = v32;
            int v34 = *(_DWORD *)(a1 + 44) - *(_DWORD *)(a1 + 40);
            if (v34 >= 1)
            {
              int v35 = v34 + 1;
              do
              {
                int v36 = (unsigned char *)*((void *)this + 1);
                unint64_t v37 = *((void *)this + 2);
                if ((unint64_t)v36 >= v37 || *v36 != 32) {
                  break;
                }
                *((void *)this + 1) = v36 + 1;
                if ((unint64_t)(v36 + 1) >= v37 || (char)v36[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41))return 0; {
                }
                  }
                else
                {
                  unsigned int v41 = v36[1];
                  *((void *)this + 1) = v36 + 2;
                }
                int v38 = *(_DWORD *)(a1 + 40);
                if (v38 >= *(_DWORD *)(a1 + 44))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v42);
                  int v38 = *(_DWORD *)(a1 + 40);
                }
                unsigned int v39 = v41;
                uint64_t v40 = *(void *)(a1 + 32);
                *(_DWORD *)(a1 + 40) = v38 + 1;
                *(_DWORD *)(v40 + 4 * v38) = v39;
                --v35;
              }
              while (v35 > 1);
            }
          }
          if (v19 == v12 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          int v17 = (char *)*((void *)this + 1);
          int v12 = (char *)*((void *)this + 2);
          goto LABEL_63;
        }
LABEL_21:
        if (v11 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      default:
        int v11 = TagFallback & 7;
        goto LABEL_21;
    }
  }
}

void sub_1000CF118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000CF148(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v12 = 0;
  int v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
    if (!result) {
      return result;
    }
    unsigned int v5 = v12;
  }
  else
  {
    unsigned int v5 = *v4;
    unsigned int v12 = v5;
    *((void *)this + 1) = v4 + 1;
  }
  int v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      unsigned int v13 = 0;
      int v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
        if (!result) {
          return result;
        }
        unsigned int v9 = v13;
      }
      else
      {
        unsigned int v9 = *v8;
        *((void *)this + 1) = v8 + 1;
      }
      int v10 = *(_DWORD *)(a2 + 8);
      if (v10 == *(_DWORD *)(a2 + 12))
      {
        sub_10002D764(a2, v10 + 1);
        int v10 = *(_DWORD *)(a2 + 8);
      }
      uint64_t v11 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v10 + 1;
      *(_DWORD *)(v11 + 4 * v10) = v9;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
  return 1;
}

uint64_t sub_1000CF260(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
  }
  if ((v6 & 2) != 0) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(*(void *)(v5 + 16) + 4 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(*(void *)(v5 + 32) + 4 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 40));
  }
  return result;
}

uint64_t sub_1000CF324(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 52);
  if (!v3)
  {
    int v4 = 0;
    goto LABEL_14;
  }
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      if ((*(_DWORD *)(a1 + 52) & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
  }
  else {
    int v7 = 2;
  }
  v4 += v7;
LABEL_14:
  int v8 = *(_DWORD *)(a1 + 24);
  if (v8 < 1)
  {
    int v10 = 0;
  }
  else
  {
    uint64_t v9 = 0;
    int v10 = 0;
    do
    {
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 16)
                                                                                             + 4 * v9);
      if ((v11 & 0x80000000) != 0)
      {
        int v12 = 10;
      }
      else if (v11 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
        int v8 = *(_DWORD *)(a1 + 24);
      }
      else
      {
        int v12 = 1;
      }
      v10 += v12;
      ++v9;
    }
    while (v9 < v8);
  }
  int v13 = *(_DWORD *)(a1 + 40);
  if (v13 < 1)
  {
    int v15 = 0;
  }
  else
  {
    uint64_t v14 = 0;
    int v15 = 0;
    do
    {
      int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 32)
                                                                                             + 4 * v14);
      if (v16 >= 0x80)
      {
        int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
        int v13 = *(_DWORD *)(a1 + 40);
      }
      else
      {
        int v17 = 1;
      }
      v15 += v17;
      ++v14;
    }
    while (v14 < v13);
  }
  uint64_t result = (v10 + v4 + v13 + v8 + v15);
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

void sub_1000CF474(uint64_t a1, void *lpsrc)
{
  sub_1000CE980(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000CF518()
{
  return 1;
}

void *sub_1000CF520@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.LtlInfo.LtlLutParams");
}

void sub_1000CF530(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v4 = *(_DWORD *)(a2 + 16);
  if (v4)
  {
    sub_10002D764(a1 + 8, *(_DWORD *)(a1 + 16) + v4);
    memcpy((void *)(*(void *)(a1 + 8) + 4 * *(int *)(a1 + 16)), *(const void **)(a2 + 8), 4 * *(int *)(a2 + 16));
    *(_DWORD *)(a1 + 16) += *(_DWORD *)(a2 + 16);
  }
  int v5 = *(_DWORD *)(a2 + 36);
  if ((v5 & 0x1FE) != 0)
  {
    if ((v5 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_DWORD *)(a1 + 24) = v6;
      int v5 = *(_DWORD *)(a2 + 36);
    }
    if ((v5 & 4) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 28);
      *(_DWORD *)(a1 + 36) |= 4u;
      *(_DWORD *)(a1 + 28) = v7;
    }
  }
}

void sub_1000CF624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000CF63C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010EA88;
  if (*((void *)this + 1)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000CF6AC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000CF63C(a1);

  operator delete();
}

void sub_1000CF6E4()
{
}

uint64_t sub_1000CF738(uint64_t result)
{
  if ((*(_WORD *)(result + 36) & 0x1FE) != 0) {
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1000CF754(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5 = a1 + 8;
  int v6 = (unsigned int *)(a1 + 24);
  int v7 = (unsigned int *)(a1 + 28);
  while (1)
  {
    while (1)
    {
      while (1)
      {
LABEL_2:
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            uint64_t v14 = (char *)*((void *)this + 1);
            unint64_t v12 = *((void *)this + 2);
            goto LABEL_23;
          }
          goto LABEL_18;
        }
        uint64_t result = sub_1000CF148(this, v5);
        if (!result) {
          return result;
        }
        while (1)
        {
          int v26 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v26 >= v12) {
            break;
          }
          int v27 = *v26;
          if (v27 == 16)
          {
            int v15 = (char *)(v26 + 1);
            *((void *)this + 1) = v15;
            goto LABEL_47;
          }
          if (v27 != 8) {
            goto LABEL_2;
          }
          uint64_t v14 = (char *)(v26 + 1);
          *((void *)this + 1) = v14;
LABEL_23:
          v31[0] = 0;
          if ((unint64_t)v14 >= v12 || *v14 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v31);
            if (!result) {
              return result;
            }
            unsigned int v16 = v31[0];
          }
          else
          {
            unsigned int v16 = *v14;
            *((void *)this + 1) = v14 + 1;
          }
          int v17 = *(_DWORD *)(a1 + 16);
          if (v17 == *(_DWORD *)(a1 + 20))
          {
            sub_10002D764(v5, v17 + 1);
            int v17 = *(_DWORD *)(a1 + 16);
          }
          uint64_t v18 = *(void *)(a1 + 8);
          *(_DWORD *)(a1 + 16) = v17 + 1;
          *(_DWORD *)(v18 + 4 * v17) = v16;
          int v19 = *(_DWORD *)(a1 + 20) - *(_DWORD *)(a1 + 16);
          if (v19 >= 1)
          {
            int v20 = v19 + 1;
            do
            {
              unsigned int v21 = (unsigned char *)*((void *)this + 1);
              unint64_t v22 = *((void *)this + 2);
              if ((unint64_t)v21 >= v22 || *v21 != 8) {
                break;
              }
              *((void *)this + 1) = v21 + 1;
              v31[0] = 0;
              if ((unint64_t)(v21 + 1) >= v22 || (char)v21[1] < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v31);
                if (!result) {
                  return result;
                }
                unsigned int v23 = v31[0];
              }
              else
              {
                unsigned int v23 = v21[1];
                *((void *)this + 1) = v21 + 2;
              }
              int v24 = *(_DWORD *)(a1 + 16);
              if (v24 >= *(_DWORD *)(a1 + 20))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v31);
                int v24 = *(_DWORD *)(a1 + 16);
              }
              uint64_t v25 = *(void *)(a1 + 8);
              *(_DWORD *)(a1 + 16) = v24 + 1;
              *(_DWORD *)(v25 + 4 * v24) = v23;
              --v20;
            }
            while (v20 > 1);
          }
        }
      }
      if (v10 != 2) {
        break;
      }
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_18;
      }
      int v15 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_47:
      if ((unint64_t)v15 >= v12 || *v15 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!result) {
          return result;
        }
        unsigned int v28 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        *int v6 = *v15;
        unsigned int v28 = v15 + 1;
        *((void *)this + 1) = v28;
      }
      *(_DWORD *)(a1 + 36) |= 2u;
      if ((unint64_t)v28 < v12 && *v28 == 24)
      {
        int v13 = v28 + 1;
        *((void *)this + 1) = v13;
LABEL_55:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v29 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v13;
          int v29 = (unsigned __int8 *)(v13 + 1);
          *((void *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 36) |= 4u;
        if (v29 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_55;
      }
    }
    else
    {
      int v11 = TagFallback & 7;
    }
LABEL_18:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_1000CFAC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000CFADC(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(*(void *)(v5 + 8) + 4 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  int v7 = *(_DWORD *)(v5 + 36);
  if ((v7 & 2) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
    int v7 = *(_DWORD *)(v5 + 36);
  }
  if ((v7 & 4) != 0)
  {
    int v8 = *(_DWORD *)(v5 + 28);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  }
  return result;
}

uint64_t sub_1000CFB88(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 0x1FE) == 0)
  {
    int v4 = 0;
    goto LABEL_14;
  }
  if ((v3 & 2) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      if ((*(_DWORD *)(a1 + 36) & 4) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 4) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((v3 & 4) == 0) {
      goto LABEL_14;
    }
  }
  uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v6 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
  }
  else {
    int v7 = 2;
  }
  v4 += v7;
LABEL_14:
  int v8 = *(_DWORD *)(a1 + 16);
  if (v8 < 1)
  {
    int v10 = 0;
  }
  else
  {
    uint64_t v9 = 0;
    int v10 = 0;
    do
    {
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 8)
                                                                                             + 4 * v9);
      if ((v11 & 0x80000000) != 0)
      {
        int v12 = 10;
      }
      else if (v11 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
        int v8 = *(_DWORD *)(a1 + 16);
      }
      else
      {
        int v12 = 1;
      }
      v10 += v12;
      ++v9;
    }
    while (v9 < v8);
  }
  uint64_t result = (v10 + v4 + v8);
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

void sub_1000CFC80(uint64_t a1, void *lpsrc)
{
  sub_1000CF530(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000CFD24()
{
  return 1;
}

void *sub_1000CFD2C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.LtlInfo.LtlCurrentSrcCalibData");
}

void sub_1000CFD3C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_1000CFDE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000CFE00(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010EB00;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000CFE20(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010EB00;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000CFE74()
{
}

uint64_t sub_1000CFEC0(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1000CFED4(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v16 = 0;
      int v11 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
        if (!result) {
          return result;
        }
        unsigned int v12 = v16;
        int v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        unsigned int v12 = *v11;
        int v13 = v11 + 1;
        *((void *)this + 1) = v13;
      }
      a1[2] = v12;
      a1[5] |= 1u;
      if ((unint64_t)v13 < v9 && *v13 == 16)
      {
        int v10 = v13 + 1;
        *((void *)this + 1) = v10;
LABEL_24:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v10;
          uint64_t v14 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000D0080(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1000D00EC(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_17;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_17;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_17;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_17:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1000D018C(_DWORD *a1, void *lpsrc)
{
  sub_1000CFD3C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000D0230()
{
  return 1;
}

void *sub_1000D0238@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.LtlInfo.LtlRacPmicAdcPreCalData");
}

void sub_1000D0248(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  int v4 = *(_DWORD *)(a2 + 56);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v7 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 56) |= 1u;
    *(_DWORD *)(a1 + 8) = v7;
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 56) |= 2u;
  *(_DWORD *)(a1 + 12) = v8;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v9 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 56) |= 4u;
  *(_DWORD *)(a1 + 16) = v9;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v10 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 56) |= 8u;
  *(_DWORD *)(a1 + 20) = v10;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_24:
    int v12 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 56) |= 0x20u;
    *(_DWORD *)(a1 + 28) = v12;
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_23:
  int v11 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 56) |= 0x10u;
  *(_DWORD *)(a1 + 24) = v11;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_25:
  char v13 = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 56) |= 0x40u;
  *(unsigned char *)(a1 + 32) = v13;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 56) |= 0x80u;
    *(_DWORD *)(a1 + 36) = v5;
    int v4 = *(_DWORD *)(a2 + 56);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v14 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 56) |= 0x100u;
    *(_DWORD *)(a1 + 40) = v14;
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        return;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v15 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 56) |= 0x200u;
  *(_DWORD *)(a1 + 44) = v15;
  if ((*(_DWORD *)(a2 + 56) & 0x400) == 0) {
    return;
  }
LABEL_17:
  int v6 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) |= 0x400u;
  *(_DWORD *)(a1 + 48) = v6;
}

void sub_1000D0428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000D0440(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010EB78;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000D0460(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010EB78;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000D04B4()
{
}

uint64_t sub_1000D0510(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 56);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(result + 36) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 32) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 40) = 0;
    *(_DWORD *)(result + 48) = 0;
  }
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1000D0544(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 40);
  int v6 = (unsigned int *)(a1 + 44);
  int v7 = (unsigned int *)(a1 + 48);
  while (2)
  {
    int v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v43 = 0;
        int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v12 < v11 && (*v12 & 0x80000000) == 0)
        {
          unsigned int v13 = *v12;
          int v14 = v12 + 1;
          *((void *)this + 1) = v14;
LABEL_38:
          *(_DWORD *)(a1 + 8) = v13;
          *(_DWORD *)(a1 + 56) |= 1u;
          if ((unint64_t)v14 < v11 && *v14 == 16)
          {
            int v15 = v14 + 1;
            *((void *)this + 1) = v15;
            goto LABEL_41;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43);
        if (result)
        {
          unsigned int v13 = v43;
          int v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
          goto LABEL_38;
        }
        break;
      case 2u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_41:
        unsigned int v43 = 0;
        if ((unint64_t)v15 >= v11 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43);
          if (!result) {
            return result;
          }
          unsigned int v25 = v43;
          int v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v25 = *v15;
          int v26 = v15 + 1;
          *((void *)this + 1) = v26;
        }
        *(_DWORD *)(a1 + 12) = v25;
        *(_DWORD *)(a1 + 56) |= 2u;
        if ((unint64_t)v26 >= v11 || *v26 != 24) {
          continue;
        }
        unsigned int v16 = v26 + 1;
        *((void *)this + 1) = v16;
LABEL_49:
        unsigned int v43 = 0;
        if ((unint64_t)v16 >= v11 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43);
          if (!result) {
            return result;
          }
          unsigned int v27 = v43;
          unsigned int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v27 = *v16;
          unsigned int v28 = v16 + 1;
          *((void *)this + 1) = v28;
        }
        *(_DWORD *)(a1 + 16) = v27;
        *(_DWORD *)(a1 + 56) |= 4u;
        if ((unint64_t)v28 >= v11 || *v28 != 32) {
          continue;
        }
        int v17 = v28 + 1;
        *((void *)this + 1) = v17;
LABEL_57:
        unsigned int v43 = 0;
        if ((unint64_t)v17 >= v11 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43);
          if (!result) {
            return result;
          }
          unsigned int v29 = v43;
          uint64_t v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v29 = *v17;
          uint64_t v30 = v17 + 1;
          *((void *)this + 1) = v30;
        }
        *(_DWORD *)(a1 + 20) = v29;
        *(_DWORD *)(a1 + 56) |= 8u;
        if ((unint64_t)v30 >= v11 || *v30 != 40) {
          continue;
        }
        uint64_t v18 = v30 + 1;
        *((void *)this + 1) = v18;
LABEL_65:
        unsigned int v43 = 0;
        if ((unint64_t)v18 >= v11 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43);
          if (!result) {
            return result;
          }
          unsigned int v31 = v43;
          unsigned int v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v31 = *v18;
          unsigned int v32 = v18 + 1;
          *((void *)this + 1) = v32;
        }
        *(_DWORD *)(a1 + 24) = v31;
        *(_DWORD *)(a1 + 56) |= 0x10u;
        if ((unint64_t)v32 >= v11 || *v32 != 48) {
          continue;
        }
        int v19 = v32 + 1;
        *((void *)this + 1) = v19;
LABEL_73:
        unsigned int v43 = 0;
        if ((unint64_t)v19 >= v11 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43);
          if (!result) {
            return result;
          }
          unsigned int v33 = v43;
          int v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v33 = *v19;
          int v34 = v19 + 1;
          *((void *)this + 1) = v34;
        }
        *(_DWORD *)(a1 + 28) = v33;
        *(_DWORD *)(a1 + 56) |= 0x20u;
        if ((unint64_t)v34 >= v11 || *v34 != 56) {
          continue;
        }
        int v20 = v34 + 1;
        *((void *)this + 1) = v20;
LABEL_81:
        unsigned int v43 = 0;
        if ((unint64_t)v20 >= v11 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43);
          if (!result) {
            return result;
          }
          unsigned int v35 = v43;
          int v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v35 = *v20;
          int v36 = v20 + 1;
          *((void *)this + 1) = v36;
        }
        *(unsigned char *)(a1 + 32) = v35 != 0;
        *(_DWORD *)(a1 + 56) |= 0x40u;
        if ((unint64_t)v36 >= v11 || *v36 != 64) {
          continue;
        }
        unsigned int v21 = v36 + 1;
        *((void *)this + 1) = v21;
LABEL_89:
        unsigned int v43 = 0;
        if ((unint64_t)v21 >= v11 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43);
          if (!result) {
            return result;
          }
          unsigned int v37 = v43;
          int v38 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v37 = *v21;
          int v38 = v21 + 1;
          *((void *)this + 1) = v38;
        }
        *(_DWORD *)(a1 + 36) = v37;
        *(_DWORD *)(a1 + 56) |= 0x80u;
        if ((unint64_t)v38 >= v11 || *v38 != 72) {
          continue;
        }
        unint64_t v22 = v38 + 1;
        *((void *)this + 1) = v22;
LABEL_97:
        if ((unint64_t)v22 >= v11 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v22;
          unsigned int v39 = v22 + 1;
          *((void *)this + 1) = v39;
        }
        *(_DWORD *)(a1 + 56) |= 0x100u;
        if ((unint64_t)v39 >= v11 || *v39 != 80) {
          continue;
        }
        unsigned int v23 = v39 + 1;
        *((void *)this + 1) = v23;
LABEL_105:
        if ((unint64_t)v23 >= v11 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v23;
          uint64_t v40 = v23 + 1;
          *((void *)this + 1) = v40;
        }
        *(_DWORD *)(a1 + 56) |= 0x200u;
        if ((unint64_t)v40 >= v11 || *v40 != 88) {
          continue;
        }
        int v24 = v40 + 1;
        *((void *)this + 1) = v24;
LABEL_113:
        if ((unint64_t)v24 >= v11 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v41 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v24;
          unsigned int v41 = (unsigned __int8 *)(v24 + 1);
          *((void *)this + 1) = v41;
        }
        *(_DWORD *)(a1 + 56) |= 0x400u;
        if (v41 != (unsigned __int8 *)v11 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v16 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_49;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_57;
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_65;
      case 6u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_73;
      case 7u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_81;
      case 8u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v21 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_89;
      case 9u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unint64_t v22 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_97;
      case 0xAu:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v23 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_105;
      case 0xBu:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_113;
      default:
        int v10 = TagFallback & 7;
LABEL_32:
        if (v10 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1000D0B7C(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 28), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 32), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 36), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 44), a2, a4);
    if ((*(_DWORD *)(v5 + 56) & 0x400) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 40), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x200) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v6 & 0x400) == 0) {
    return result;
  }
LABEL_23:
  int v7 = *(_DWORD *)(v5 + 48);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v7, a2, a4);
}

uint64_t sub_1000D0CE8(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[14];
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_57;
  }
  if ((v3 & 1) == 0)
  {
    LODWORD(v4) = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    unsigned int v3 = a1[14];
  }
  else
  {
    int v6 = 1;
  }
  LODWORD(v4) = v6 + 1;
  if ((v3 & 2) != 0)
  {
LABEL_12:
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if ((v7 & 0x80000000) != 0)
    {
      int v8 = 10;
    }
    else if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      unsigned int v3 = a1[14];
    }
    else
    {
      int v8 = 1;
    }
    LODWORD(v4) = v4 + v8 + 1;
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 10;
    }
    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      unsigned int v3 = a1[14];
    }
    else
    {
      int v10 = 1;
    }
    LODWORD(v4) = v4 + v10 + 1;
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_35;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  unint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if ((v11 & 0x80000000) != 0)
  {
    int v12 = 11;
  }
  else if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    unsigned int v3 = a1[14];
  }
  else
  {
    int v12 = 2;
  }
  LODWORD(v4) = v12 + v4;
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_47;
    }
    goto LABEL_41;
  }
LABEL_35:
  unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if ((v13 & 0x80000000) != 0)
  {
    int v14 = 11;
  }
  else if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    unsigned int v3 = a1[14];
  }
  else
  {
    int v14 = 2;
  }
  LODWORD(v4) = v14 + v4;
  if ((v3 & 0x20) != 0)
  {
LABEL_41:
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
    if ((v15 & 0x80000000) != 0)
    {
      int v16 = 11;
    }
    else if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
      unsigned int v3 = a1[14];
    }
    else
    {
      int v16 = 2;
    }
    LODWORD(v4) = v16 + v4;
  }
LABEL_47:
  if ((v3 & 0x40) != 0) {
    uint64_t v4 = (v4 + 2);
  }
  else {
    uint64_t v4 = v4;
  }
  if ((v3 & 0x80) != 0)
  {
    int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
    if ((v17 & 0x80000000) != 0)
    {
      int v18 = 11;
    }
    else if (v17 >= 0x80)
    {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
      unsigned int v3 = a1[14];
    }
    else
    {
      int v18 = 2;
    }
    uint64_t v4 = (v18 + v4);
  }
LABEL_57:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_74;
  }
  if ((v3 & 0x100) != 0)
  {
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v19 >= 0x80)
    {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
      unsigned int v3 = a1[14];
    }
    else
    {
      int v20 = 2;
    }
    uint64_t v4 = (v20 + v4);
    if ((v3 & 0x200) == 0)
    {
LABEL_60:
      if ((v3 & 0x400) == 0) {
        goto LABEL_74;
      }
      goto LABEL_70;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_60;
  }
  unsigned int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[11];
  if (v21 >= 0x80)
  {
    int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
    unsigned int v3 = a1[14];
  }
  else
  {
    int v22 = 2;
  }
  uint64_t v4 = (v22 + v4);
  if ((v3 & 0x400) != 0)
  {
LABEL_70:
    unsigned int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[12];
    if (v23 >= 0x80) {
      int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2) + 1;
    }
    else {
      int v24 = 2;
    }
    uint64_t v4 = (v24 + v4);
  }
LABEL_74:
  a1[13] = v4;
  return v4;
}

void sub_1000D0F3C(uint64_t a1, void *lpsrc)
{
  sub_1000D0248(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000D0FE0()
{
  return 1;
}

void *sub_1000D0FE8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.LtlInfo.LtlInitialParams");
}

void *sub_1000D0FF8(void *result)
{
  if ((void *)proto::gpsd::LtlInfo::default_instance_ != result)
  {
    int v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[4];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t result = (void *)v1[5];
    if (result)
    {
      uint64_t v5 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v5();
    }
  }
  return result;
}

void sub_1000D10F0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010EBF0;
  sub_1000D0FF8(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000D1144(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010EBF0;
  sub_1000D0FF8(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000D11AC()
{
}

uint64_t sub_1000D1208(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        unsigned int v55 = 0;
        int v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55);
          if (!result) {
            return result;
          }
          unsigned int v10 = v55;
          unint64_t v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v10 = *v9;
          unint64_t v11 = v9 + 1;
          *((void *)this + 1) = v11;
        }
        *(unsigned char *)(a1 + 8) = v10 != 0;
        *(_DWORD *)(a1 + 56) |= 1u;
        if ((unint64_t)v11 < v8 && *v11 == 16)
        {
          int v12 = v11 + 1;
          *((void *)this + 1) = v12;
          goto LABEL_31;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_31:
        unsigned int v55 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55);
          if (!result) {
            return result;
          }
          unsigned int v15 = v55;
          int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v15 = *v12;
          int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }
        *(_DWORD *)(a1 + 12) = v15;
        *(_DWORD *)(a1 + 56) |= 2u;
        if ((unint64_t)v16 >= v8 || *v16 != 24) {
          continue;
        }
        unsigned int v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_39:
        unsigned int v55 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55);
          if (!result) {
            return result;
          }
          unsigned int v17 = v55;
        }
        else
        {
          unsigned int v17 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (v17 <= 4)
        {
          *(_DWORD *)(a1 + 56) |= 4u;
          *(_DWORD *)(a1 + 48) = v17;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 34) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_49:
        *(_DWORD *)(a1 + 56) |= 8u;
        uint64_t v19 = *(void *)(a1 + 16);
        if (!v19) {
          operator new();
        }
        unsigned int v55 = 0;
        int v20 = (char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55))return 0; {
        }
          }
        else
        {
          unsigned int v55 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v55);
        if (!sub_1000D0544(v19, this, v24) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v25 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v25, 1);
        int v27 = v25 - 1;
        if (v27 < 0 == v26) {
          *((_DWORD *)this + 14) = v27;
        }
        unsigned int v28 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 != 42) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_63:
        *(_DWORD *)(a1 + 56) |= 0x10u;
        uint64_t v29 = *(void *)(a1 + 24);
        if (!v29) {
          operator new();
        }
        unsigned int v55 = 0;
        uint64_t v30 = (char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55))return 0; {
        }
          }
        else
        {
          unsigned int v55 = *v30;
          *((void *)this + 1) = v30 + 1;
        }
        int v31 = *((_DWORD *)this + 14);
        int v32 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v31 + 1;
        if (v31 >= v32) {
          return 0;
        }
        int v33 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v55);
        if (!sub_1000CEC04(v29, this, v34) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v33);
        int v35 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v35, 1);
        int v36 = v35 - 1;
        if (v36 < 0 == v26) {
          *((_DWORD *)this + 14) = v36;
        }
        unsigned int v37 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 != 50) {
          continue;
        }
        *((void *)this + 1) = v37 + 1;
LABEL_77:
        *(_DWORD *)(a1 + 56) |= 0x20u;
        uint64_t v38 = *(void *)(a1 + 32);
        if (!v38) {
          operator new();
        }
        unsigned int v55 = 0;
        unsigned int v39 = (char *)*((void *)this + 1);
        if ((unint64_t)v39 >= *((void *)this + 2) || *v39 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55))return 0; {
        }
          }
        else
        {
          unsigned int v55 = *v39;
          *((void *)this + 1) = v39 + 1;
        }
        int v40 = *((_DWORD *)this + 14);
        int v41 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v40 + 1;
        if (v40 >= v41) {
          return 0;
        }
        int v42 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v55);
        if (!sub_1000CF754(v38, this, v43) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v42);
        int v44 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v44, 1);
        int v45 = v44 - 1;
        if (v45 < 0 == v26) {
          *((_DWORD *)this + 14) = v45;
        }
        int v46 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 != 58) {
          continue;
        }
        *((void *)this + 1) = v46 + 1;
LABEL_91:
        *(_DWORD *)(a1 + 56) |= 0x40u;
        int v47 = *(_DWORD **)(a1 + 40);
        if (!v47) {
          operator new();
        }
        unsigned int v55 = 0;
        int v48 = (char *)*((void *)this + 1);
        if ((unint64_t)v48 >= *((void *)this + 2) || *v48 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55))return 0; {
        }
          }
        else
        {
          unsigned int v55 = *v48;
          *((void *)this + 1) = v48 + 1;
        }
        int v49 = *((_DWORD *)this + 14);
        int v50 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v49 + 1;
        if (v49 >= v50) {
          return 0;
        }
        int v51 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v55);
        if (!sub_1000CFED4(v47, this, v52) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v51);
        int v53 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v53, 1);
        int v54 = v53 - 1;
        if (v54 < 0 == v26) {
          *((_DWORD *)this + 14) = v54;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        unsigned int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_39;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_49;
        }
        goto LABEL_23;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_63;
        }
        goto LABEL_23;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_77;
        }
        goto LABEL_23;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_23;
        }
        goto LABEL_91;
      default:
        int v7 = TagFallback & 7;
LABEL_23:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000D18FC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), (BOOL)a2, a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 48), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gpsd::LtlInfo::default_instance_ + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_15:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(proto::gpsd::LtlInfo::default_instance_ + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_18:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9) {
    uint64_t v9 = *(void *)(proto::gpsd::LtlInfo::default_instance_ + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 56) & 0x40) != 0)
  {
LABEL_21:
    uint64_t v10 = *(void *)(v5 + 40);
    if (!v10) {
      uint64_t v10 = *(void *)(proto::gpsd::LtlInfo::default_instance_ + 40);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, a2, a4);
  }
  return result;
}

uint64_t sub_1000D1A38(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 56);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_46;
  }
  uint64_t v4 = 2 * (v3 & 1u);
  if ((v3 & 2) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v5 & 0x80000000) != 0)
    {
      int v6 = 11;
    }
    else if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 56);
    }
    else
    {
      int v6 = 2;
    }
    uint64_t v4 = (v6 + v4);
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0) {
        goto LABEL_5;
      }
      goto LABEL_22;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if ((v7 & 0x80000000) != 0)
  {
    int v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 56);
  }
  else
  {
    int v8 = 2;
  }
  uint64_t v4 = (v8 + v4);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
LABEL_22:
  uint64_t v9 = *(unsigned int **)(a1 + 16);
  if (!v9) {
    uint64_t v9 = *(unsigned int **)(proto::gpsd::LtlInfo::default_instance_ + 16);
  }
  uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000D0CE8(v9, a2);
  int v11 = (int)v10;
  if (v10 >= 0x80) {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
  }
  else {
    int v12 = 1;
  }
  uint64_t v4 = (v4 + v11 + v12 + 1);
  int v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_34;
  }
LABEL_28:
  uint64_t v13 = *(void *)(a1 + 24);
  if (!v13) {
    uint64_t v13 = *(void *)(proto::gpsd::LtlInfo::default_instance_ + 24);
  }
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000CF324(v13, a2);
  int v15 = (int)v14;
  if (v14 >= 0x80) {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  }
  else {
    int v16 = 1;
  }
  uint64_t v4 = (v4 + v15 + v16 + 1);
  int v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0) {
      goto LABEL_46;
    }
    goto LABEL_40;
  }
LABEL_34:
  uint64_t v17 = *(void *)(a1 + 32);
  if (!v17) {
    uint64_t v17 = *(void *)(proto::gpsd::LtlInfo::default_instance_ + 32);
  }
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000CFB88(v17, a2);
  int v19 = (int)v18;
  if (v18 >= 0x80) {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
  }
  else {
    int v20 = 1;
  }
  uint64_t v4 = (v4 + v19 + v20 + 1);
  if ((*(_DWORD *)(a1 + 56) & 0x40) != 0)
  {
LABEL_40:
    uint64_t v21 = *(void *)(a1 + 40);
    if (!v21) {
      uint64_t v21 = *(void *)(proto::gpsd::LtlInfo::default_instance_ + 40);
    }
    int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000D00EC(v21, a2);
    int v24 = (int)v22;
    if (v22 >= 0x80) {
      int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, v23);
    }
    else {
      int v25 = 1;
    }
    uint64_t v4 = (v4 + v24 + v25 + 1);
  }
LABEL_46:
  *(_DWORD *)(a1 + 52) = v4;
  return v4;
}

void sub_1000D1C1C(uint64_t a1, void *lpsrc)
{
  sub_1000BFE00(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000D1CC0()
{
  return 1;
}

void *sub_1000D1CC8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.LtlInfo");
}

void sub_1000D1CD8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010EC68;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000D1CF8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010EC68;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000D1D4C()
{
}

uint64_t sub_1000D1D98(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      unsigned int v10 = 0;
      uint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v10);
        if (!result) {
          return result;
        }
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v8 = *v7;
        *((void *)this + 1) = v7 + 1;
      }
      if (v8 <= 6)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 8) = v8;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_1000D1EB8(uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_1000D1ED4(uint64_t a1, unsigned int a2)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t result = 11;
    }
    else if (v4 >= 0x80)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2)
             + 1;
    }
    else
    {
      uint64_t result = 2;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 12) = result;
  return result;
}

void sub_1000D1F30(uint64_t a1, void *lpsrc)
{
  sub_1000C0214(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000D1FD4()
{
  return 1;
}

void *sub_1000D1FDC@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.CntinStatusMessage");
}

void sub_1000D1FEC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010ECE0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000D200C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010ECE0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000D2060()
{
}

uint64_t sub_1000D20B0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      unsigned int v12 = 0;
      unsigned int v8 = (char *)*((void *)this + 1);
      unint64_t v7 = *((void *)this + 2);
      if ((unint64_t)v8 >= v7 || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
        if (!result) {
          return result;
        }
        unsigned int v9 = v12;
        unsigned int v10 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
      }
      else
      {
        unsigned int v9 = *v8;
        unsigned int v10 = (unsigned __int8 *)(v8 + 1);
        *((void *)this + 1) = v10;
      }
      *(unsigned char *)(a1 + 8) = v9 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if (v10 == (unsigned __int8 *)v7 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_1000D21D0(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_1000D21EC(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1u);
  }
  else {
    uint64_t v1 = 0;
  }
  *(_DWORD *)(a1 + 12) = v1;
  return v1;
}

void sub_1000D2208(uint64_t a1, void *lpsrc)
{
  sub_1000C52EC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000D22AC()
{
  return 1;
}

void *sub_1000D22B4@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.CntinClockControl");
}

void sub_1000D22C4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010ED58;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000D22E4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010ED58;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000D2338()
{
}

uint64_t sub_1000D2388(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v22 = 0;
        int v11 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v12 = v22;
          uint64_t v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v12 = *v11;
          uint64_t v13 = v11 + 1;
          *((void *)this + 1) = v13;
        }
        a1[2] = v12;
        a1[6] |= 1u;
        if ((unint64_t)v13 < v9 && *v13 == 16)
        {
          int v14 = v13 + 1;
          *((void *)this + 1) = v14;
          goto LABEL_26;
        }
      }
      if (v7 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_18;
      }
      int v14 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
LABEL_26:
      unsigned int v21 = 0;
      if ((unint64_t)v14 >= v9 || *v14 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
        if (!result) {
          return result;
        }
        unsigned int v15 = v21;
        int v16 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        unsigned int v15 = *v14;
        int v16 = v14 + 1;
        *((void *)this + 1) = v16;
      }
      a1[3] = v15;
      a1[6] |= 2u;
      if ((unint64_t)v16 < v9 && *v16 == 24)
      {
        unsigned int v10 = v16 + 1;
        *((void *)this + 1) = v10;
LABEL_34:
        unsigned int v20 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20);
          if (!result) {
            return result;
          }
          unsigned int v17 = v20;
          int v18 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v10;
          int v18 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v18;
        }
        a1[4] = v17;
        a1[6] |= 4u;
        if (v18 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v7 == 3)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unsigned int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_34;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_18:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

int *sub_1000D25B0(int *result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = result[6];
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
    if ((v5[6] & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
  int v6 = v5[6];
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = v5[4];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_1000D263C(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_26;
  }
  if (*(unsigned char *)(a1 + 24))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_19;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_19:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
  }
LABEL_26:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1000D271C(_DWORD *a1, void *lpsrc)
{
  sub_1000C5390(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000D27C0()
{
  return 1;
}

void *sub_1000D27C8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.Exception");
}

void sub_1000D27D8(uint64_t *a1)
{
  *a1 = (uint64_t)off_10010EDD0;
  sub_1000508A8(a1[3]);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1000D2830(uint64_t *a1)
{
  *a1 = (uint64_t)off_10010EDD0;
  sub_1000508A8(a1[3]);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);

  operator delete();
}

void sub_1000D289C()
{
}

uint64_t sub_1000D28F4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if (v8 != 1) {
            goto LABEL_22;
          }
          unint64_t v16 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 8) = v16;
          *(_DWORD *)(a1 + 36) |= 1u;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 < v10 && *v11 == 16)
          {
            unsigned int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_18;
          }
        }
        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_18:
        unint64_t v16 = 0;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v16);
          if (!result) {
            return result;
          }
          unint64_t v13 = v16;
          int v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unint64_t v13 = *v12;
          int v14 = v12 + 1;
          *((void *)this + 1) = v14;
        }
        *(void *)(a1 + 16) = v13;
        int v9 = *(_DWORD *)(a1 + 36) | 2;
        *(_DWORD *)(a1 + 36) = v9;
        if ((unint64_t)v14 < v10 && *v14 == 26)
        {
          *((void *)this + 1) = v14 + 1;
          goto LABEL_30;
        }
      }
      if (v7 != 3) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_22;
      }
      int v9 = *(_DWORD *)(a1 + 36);
LABEL_30:
      *(_DWORD *)(a1 + 36) = v9 | 4;
      if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_22:
    if (v8 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_1000D2B10(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), a2, a4);
    if ((*(_DWORD *)(v5 + 36) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
}

uint64_t sub_1000D2B9C(uint64_t a1, unint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 36);
  if (*(unsigned char *)(a1 + 36))
  {
    uint64_t v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
    {
      uint64_t v4 = v4
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    if ((v3 & 4) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 24);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      char v7 = v6;
      uint64_t v8 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
      }
      else {
        unint64_t v9 = v8;
      }
      if (v9 >= 0x80)
      {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
        int v6 = *(unsigned __int8 *)(v5 + 23);
        uint64_t v8 = *(void *)(v5 + 8);
        char v7 = *(unsigned char *)(v5 + 23);
      }
      else
      {
        int v10 = 1;
      }
      if (v7 < 0) {
        int v6 = v8;
      }
      uint64_t v4 = (v4 + v10 + v6 + 1);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_1000D2C54(uint64_t a1, void *lpsrc)
{
  sub_1000C547C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000D2CF8()
{
  return 1;
}

void *sub_1000D2D00@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.AskBasebandReset");
}

void proto::gpsd::LogEntry::MergeFrom(proto::gpsd::LogEntry *this, const proto::gpsd::LogEntry *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 52);
  if (!(_BYTE)v4) {
    return;
  }
  if (*((unsigned char *)a2 + 52))
  {
    uint64_t v5 = *((void *)a2 + 1);
    *((_DWORD *)this + 13) |= 1u;
    *((void *)this + 1) = v5;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_14:
      *((_DWORD *)this + 13) |= 4u;
      uint64_t v8 = (proto::gpsd::Request *)*((void *)this + 3);
      if (!v8) {
        operator new();
      }
      unint64_t v9 = (const proto::gpsd::Request *)*((void *)a2 + 3);
      if (!v9) {
        unint64_t v9 = *(const proto::gpsd::Request **)(proto::gpsd::LogEntry::default_instance_ + 24);
      }
      proto::gpsd::Request::MergeFrom(v8, v9);
      int v4 = *((_DWORD *)a2 + 13);
      if ((v4 & 8) == 0)
      {
LABEL_8:
        if ((v4 & 0x10) == 0) {
          return;
        }
        goto LABEL_24;
      }
      goto LABEL_19;
    }
  }
  else if ((*((unsigned char *)a2 + 52) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v6 = (const std::string *)*((void *)a2 + 2);
  *((_DWORD *)this + 13) |= 2u;
  char v7 = (std::string *)*((void *)this + 2);
  if (v7 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v7, v6);
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 8) == 0) {
    goto LABEL_8;
  }
LABEL_19:
  *((_DWORD *)this + 13) |= 8u;
  uint64_t v10 = *((void *)this + 4);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = *((void *)a2 + 4);
  if (!v11) {
    uint64_t v11 = *(void *)(proto::gpsd::LogEntry::default_instance_ + 32);
  }
  proto::gpsd::Response::MergeFrom(v10, v11);
  if ((*((_DWORD *)a2 + 13) & 0x10) != 0)
  {
LABEL_24:
    *((_DWORD *)this + 13) |= 0x10u;
    unsigned int v12 = (proto::gpsd::Indication *)*((void *)this + 5);
    if (!v12) {
      operator new();
    }
    unint64_t v13 = (const proto::gpsd::Indication *)*((void *)a2 + 5);
    if (!v13) {
      unint64_t v13 = *(const proto::gpsd::Indication **)(proto::gpsd::LogEntry::default_instance_ + 40);
    }
    proto::gpsd::Indication::MergeFrom(v12, v13);
  }
}

void sub_1000D2FF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1000D3010(void *result)
{
  uint64_t v1 = result;
  uint64_t v2 = result[2];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if ((void *)proto::gpsd::LogEntry::default_instance_ != result)
  {
    uint64_t v4 = result[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t result = (void *)v1[5];
    if (result)
    {
      int v6 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v6();
    }
  }
  return result;
}

void sub_1000D311C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010EE48;
  sub_1000D3010(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000D3170(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010EE48;
  sub_1000D3010(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000D31D8()
{
}

uint64_t proto::gpsd::LogEntry::Clear(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 52);
  if (v2)
  {
    *(void *)(this + 8) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    int v4 = *(_DWORD *)(this + 52);
    if ((v4 & 4) != 0)
    {
      this = *(void *)(this + 24);
      if (this)
      {
        this = proto::gpsd::Request::Clear(this);
        int v4 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v4 & 8) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 32);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 28))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 28) = 0;
        int v4 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v4 & 0x10) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this) {
        this = proto::gpsd::Indication::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 52) = 0;
  return this;
}

uint64_t proto::gpsd::LogEntry::MergePartialFromCodedStream(proto::gpsd::LogEntry *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    int v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 < *((void *)a2 + 2) && (*v6 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v5 = *v10;
          uint64_t v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        int v12 = *((_DWORD *)this + 13) | 1;
        *((_DWORD *)this + 13) = v12;
        if ((unint64_t)v11 < v9 && *v11 == 18)
        {
          *((void *)a2 + 1) = v11 + 1;
          goto LABEL_28;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_20;
        }
        int v12 = *((_DWORD *)this + 13);
LABEL_28:
        *((_DWORD *)this + 13) = v12 | 2;
        if (*((_UNKNOWN **)this + 2) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_34:
        *((_DWORD *)this + 13) |= 4u;
        uint64_t v15 = *((void *)this + 3);
        if (!v15) {
          operator new();
        }
        unsigned int v42 = 0;
        unint64_t v16 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v42))return 0; {
        }
          }
        else
        {
          unsigned int v42 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18) {
          return 0;
        }
        int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v42);
        if (!sub_1000B96B0(v15, a2, v20) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v19);
        int v21 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v23;
        }
        int v24 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v24 + 1;
LABEL_48:
        *((_DWORD *)this + 13) |= 8u;
        int v25 = (_DWORD *)*((void *)this + 4);
        if (!v25) {
          operator new();
        }
        unsigned int v43 = 0;
        BOOL v26 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43))return 0; {
        }
          }
        else
        {
          unsigned int v43 = *v26;
          *((void *)a2 + 1) = v26 + 1;
        }
        int v27 = *((_DWORD *)a2 + 14);
        int v28 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v27 + 1;
        if (v27 >= v28) {
          return 0;
        }
        int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v43);
        if (!sub_1000C06EC(v25, a2, v30) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v29);
        int v31 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v31, 1);
        int v32 = v31 - 1;
        if (v32 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v32;
        }
        int v33 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v33 >= *((void *)a2 + 2) || *v33 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v33 + 1;
LABEL_62:
        *((_DWORD *)this + 13) |= 0x10u;
        uint64_t v34 = *((void *)this + 5);
        if (!v34) {
          operator new();
        }
        unsigned int v44 = 0;
        int v35 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44))return 0; {
        }
          }
        else
        {
          unsigned int v44 = *v35;
          *((void *)a2 + 1) = v35 + 1;
        }
        int v36 = *((_DWORD *)a2 + 14);
        int v37 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v36 + 1;
        if (v36 >= v37) {
          return 0;
        }
        int v38 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v44);
        if (!sub_1000C2214(v34, a2, v39) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v38);
        int v40 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v40, 1);
        int v41 = v40 - 1;
        if (v41 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v41;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_34;
        }
        goto LABEL_20;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_48;
        }
        goto LABEL_20;
      case 7u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_20;
        }
        goto LABEL_62;
      default:
        int v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000D38B8(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), (unint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_9:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gpsd::LogEntry::default_instance_ + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v8 = *(void *)(v5 + 32);
  if (!v8) {
    uint64_t v8 = *(void *)(proto::gpsd::LogEntry::default_instance_ + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x10) != 0)
  {
LABEL_15:
    uint64_t v9 = *(void *)(v5 + 40);
    if (!v9) {
      uint64_t v9 = *(void *)(proto::gpsd::LogEntry::default_instance_ + 40);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v9, a2, a4);
  }
  return result;
}

uint64_t proto::gpsd::LogEntry::ByteSize(proto::gpsd::LogEntry *this, unint64_t a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 52);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_38;
  }
  if (*((unsigned char *)this + 52))
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1), a2)+ 1;
    int v3 = *((_DWORD *)this + 13);
    if ((v3 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*((unsigned char *)this + 52) & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v5 = *((void *)this + 2);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v3 = *((_DWORD *)this + 13);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 1;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  uint64_t v4 = (v4 + v10 + v6 + 1);
LABEL_16:
  if ((v3 & 4) != 0)
  {
    uint64_t v11 = *((void *)this + 3);
    if (!v11) {
      uint64_t v11 = *(void *)(proto::gpsd::LogEntry::default_instance_ + 24);
    }
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000BD664(v11, a2);
    int v13 = (int)v12;
    if (v12 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
    }
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
    int v3 = *((_DWORD *)this + 13);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_38;
      }
      goto LABEL_32;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  uint64_t v15 = *((void *)this + 4);
  if (!v15) {
    uint64_t v15 = *(void *)(proto::gpsd::LogEntry::default_instance_ + 32);
  }
  unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C09B8(v15, a2);
  int v17 = (int)v16;
  if (v16 >= 0x80) {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
  }
  else {
    int v18 = 1;
  }
  uint64_t v4 = (v4 + v17 + v18 + 1);
  if ((*((_DWORD *)this + 13) & 0x10) != 0)
  {
LABEL_32:
    uint64_t v19 = *((void *)this + 5);
    if (!v19) {
      uint64_t v19 = *(void *)(proto::gpsd::LogEntry::default_instance_ + 40);
    }
    unsigned int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C4648(v19, a2);
    int v22 = (int)v20;
    if (v20 >= 0x80) {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, v21);
    }
    else {
      int v23 = 1;
    }
    uint64_t v4 = (v4 + v22 + v23 + 1);
  }
LABEL_38:
  *((_DWORD *)this + 12) = v4;
  return v4;
}

void sub_1000D3B44(proto::gpsd::LogEntry *a1, void *lpsrc)
{
  proto::gpsd::LogEntry::MergeFrom(a1, (const proto::gpsd::LogEntry *)lpsrc);
}

uint64_t sub_1000D3BE8()
{
  return 1;
}

void *sub_1000D3BF0@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.LogEntry");
}

void sub_1000D3C00(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010EEC0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000D3C20(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010EEC0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000D3C74()
{
}

uint64_t sub_1000D3CC4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  while (2)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v24 = 0;
        int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          unsigned int v11 = *v10;
          int v12 = v10 + 1;
          *((void *)this + 1) = v12;
LABEL_24:
          *(unsigned char *)(a1 + 16) = v11 != 0;
          *(_DWORD *)(a1 + 24) |= 1u;
          if ((unint64_t)v12 < v9 && *v12 == 16)
          {
            int v13 = v12 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_27;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
        if (result)
        {
          unsigned int v11 = v24;
          int v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
LABEL_27:
        unsigned int v23 = 0;
        if ((unint64_t)v13 >= v9 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
          if (!result) {
            return result;
          }
          unsigned int v16 = v23;
          int v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v16 = *v13;
          int v17 = v13 + 1;
          *((void *)this + 1) = v17;
        }
        *(unsigned char *)(a1 + 17) = v16 != 0;
        *(_DWORD *)(a1 + 24) |= 2u;
        if ((unint64_t)v17 >= v9 || *v17 != 24) {
          continue;
        }
        int v14 = v17 + 1;
        *((void *)this + 1) = v14;
LABEL_35:
        unsigned int v22 = 0;
        if ((unint64_t)v14 >= v9 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v18 = v22;
          uint64_t v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v18 = *v14;
          uint64_t v19 = v14 + 1;
          *((void *)this + 1) = v19;
        }
        *(unsigned char *)(a1 + 18) = v18 != 0;
        *(_DWORD *)(a1 + 24) |= 4u;
        if ((unint64_t)v19 >= v9 || *v19 != 32) {
          continue;
        }
        uint64_t v15 = v19 + 1;
        *((void *)this + 1) = v15;
LABEL_43:
        if ((unint64_t)v15 >= v9 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v15;
          unsigned int v20 = (unsigned __int8 *)(v15 + 1);
          *((void *)this + 1) = v20;
        }
        *(_DWORD *)(a1 + 24) |= 8u;
        if (v20 != (unsigned __int8 *)v9 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_35;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_43;
      default:
        int v8 = TagFallback & 7;
LABEL_18:
        if (v8 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1000D3FA8(uint64_t result, unint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 18), a2, a4);
      if ((*(_DWORD *)(v5 + 24) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 17), a2, a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v7 = *(void *)(v5 + 8);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_1000D4050(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 24);
  if ((_BYTE)v3)
  {
    unsigned int v4 = 2 * (v3 & 1);
    if ((v3 & 2) != 0) {
      v4 += 2;
    }
    if ((v3 & 4) != 0) {
      uint64_t v5 = v4 + 2;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 8) != 0) {
      uint64_t v5 = (v5 | 1)
    }
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2);
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(_DWORD *)(a1 + 20) = v5;
  return v5;
}

void sub_1000D40BC(uint64_t a1, void *lpsrc)
{
  sub_1000C0108(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000D4160()
{
  return 1;
}

void *sub_1000D4168@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gpsd.StartContext");
}

uint64_t sub_1000D4178(uint64_t a1)
{
  return *(unsigned int *)(a1 + 384);
}

uint64_t sub_1000D4180(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1000D4188(uint64_t a1)
{
  return *(unsigned int *)(a1 + 212);
}

uint64_t sub_1000D4190(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1000D4198(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_1000D41A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_1000D41A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_1000D41B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000D41B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000D41C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000D41C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_1000D41D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_1000D41D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000D41E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000D41E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000D41F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000D41F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_1000D4200(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1000D4208(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_1000D4210(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_1000D4218(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1000D4220(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000D4228(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_1000D4230(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_1000D4238(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_1000D4240(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_1000D4248(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_1000D4250(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_1000D4258(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_1000D4260(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_1000D4268(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1000D4270(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1000D4278(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_1000D4280(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1000D4288(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000D4290(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_1000D4298(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_1000D42A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_1000D42A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_1000D42B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_1000D42B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_1000D42C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000D42C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1000D42D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void gnss::stringify(int a1@<W0>, void *a2@<X8>)
{
  switch(a1)
  {
    case 0:
      int v3 = "kDropped";
      goto LABEL_11;
    case 1:
      int v3 = "kSuccess";
      goto LABEL_11;
    case 2:
      int v3 = "kAborted";
      goto LABEL_11;
    case 3:
      int v3 = "kInUse";
      goto LABEL_11;
    case 4:
      int v3 = "kInvalidArgument";
      goto LABEL_11;
    case 5:
      int v3 = "kPermissionDenied";
      goto LABEL_11;
    case 6:
      int v3 = "kTimeout";
      goto LABEL_11;
    case 7:
      int v3 = "kUnavailable";
      goto LABEL_11;
    case 8:
      int v3 = "kCompletedWithFailure";
LABEL_11:
      sub_1000033AC(a2, v3);
      break;
    default:
      std::to_string(&v6, a1);
      unsigned int v4 = std::string::insert(&v6, 0, "unknown ");
      long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      a2[2] = *((void *)&v4->__r_.__value_.__l + 2);
      *(_OWORD *)a2 = v5;
      v4->__r_.__value_.__l.__size_ = 0;
      v4->__r_.__value_.__r.__words[2] = 0;
      v4->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v6.__r_.__value_.__l.__data_);
      }
      break;
  }
}

void sub_1000D4400(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t gnss::MeasurementData::fillIsUsableFlag(gnss::MeasurementData *this)
{
  uint64_t result = GpsdPlatformInfo::instance(0);
  unsigned int v3 = *(_DWORD *)(result + 8) - 103;
  BOOL v4 = v3 > 4;
  int v5 = (1 << v3) & 0x19;
  if (!v4 && v5 != 0)
  {
    uint64_t v7 = *((void *)this + 19);
    for (uint64_t i = *((void *)this + 20); v7 != i; v7 += 176)
    {
      if (*(double *)(v7 + 48) < 0.0
        || (float v9 = *(float *)(v7 + 56), v9 <= 0.0)
        || (*(void *)(v7 + 64) & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
      {
        BOOL v11 = 0;
      }
      else
      {
        double v10 = *(double *)(v7 + 72);
        BOOL v11 = v9 < 5000.0;
        if (v10 <= 0.0) {
          BOOL v11 = 0;
        }
        if (v10 >= 50.0) {
          BOOL v11 = 0;
        }
      }
      *(unsigned char *)(v7 + 173) = v11;
    }
  }
  return result;
}

unint64_t gpsd::util::getMachContinuousTimeNs(gpsd::util *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_100114A48, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_100114A48))
  {
    sub_1000D45A8();
    __cxa_guard_release(&qword_100114A48);
  }
  uint64_t v1 = mach_continuous_time();
  char v2 = 8;
  if (!byte_100114A88) {
    char v2 = 0;
  }
  return ((v1 >> v2) * qword_100114A78 / qword_100114A80) << v2;
}

void sub_1000D4590(_Unwind_Exception *a1)
{
}

void sub_1000D45A8()
{
  if (!qword_100114A78)
  {
    mach_timebase_info(&info);
    if (info.denom)
    {
      uint32_t denom = info.denom;
      uint32_t numer = info.numer;
      do
      {
        uint32_t v2 = denom;
        uint32_t denom = numer % denom;
        uint32_t numer = v2;
      }
      while (denom);
    }
    else
    {
      uint32_t v2 = info.numer;
      if (!info.numer)
      {
        float v9 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "gcd result is zero", buf, 2u);
          float v9 = qword_100114840;
        }
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 136446722;
          unsigned int v21 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Daemon/GpsdUtil.mm";
          __int16 v22 = 1026;
          *(_DWORD *)unsigned int v23 = 86;
          *(_WORD *)&v23[4] = 2082;
          *(void *)&v23[6] = "getTickToNsInfo";
          _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
        }
        sub_1000033AC(&v18, "assert");
        sub_1000033AC(&v17, "getTickToNsInfo");
        sub_1000033AC(&v16, "gcd result is zero");
        gpsd::util::triggerDiagnosticReport((uint64_t)&v18, (long long *)&v17, (long long *)&v16);
        std::string::~string(&v16);
        std::string::~string(&v17);
        std::string::~string(&v18);
        __assert_rtn("getTickToNsInfo", "GpsdUtil.mm", 86, "false && \"gcd result is zero\"");
      }
    }
    qword_100114A80 = info.denom / v2;
    qword_100114A78 = info.numer / v2;
    if (v2 > info.denom)
    {
      uint64_t v7 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "info.denominator is zero", buf, 2u);
        uint64_t v7 = qword_100114840;
      }
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136446722;
        unsigned int v21 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Daemon/GpsdUtil.mm";
        __int16 v22 = 1026;
        *(_DWORD *)unsigned int v23 = 89;
        *(_WORD *)&v23[4] = 2082;
        *(void *)&v23[6] = "getTickToNsInfo";
        _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
      }
      sub_1000033AC(&v15, "assert");
      sub_1000033AC(&v14, "getTickToNsInfo");
      sub_1000033AC(&v13, "info.denominator is zero");
      gpsd::util::triggerDiagnosticReport((uint64_t)&v15, (long long *)&v14, (long long *)&v13);
      std::string::~string(&v13);
      std::string::~string(&v14);
      std::string::~string(&v15);
      __assert_rtn("getTickToNsInfo", "GpsdUtil.mm", 89, "false && \"info.denominator is zero\"");
    }
    if (v2 > info.numer)
    {
      int v8 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "info.numerator is zero", buf, 2u);
        int v8 = qword_100114840;
      }
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136446722;
        unsigned int v21 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Daemon/GpsdUtil.mm";
        __int16 v22 = 1026;
        *(_DWORD *)unsigned int v23 = 90;
        *(_WORD *)&v23[4] = 2082;
        *(void *)&v23[6] = "getTickToNsInfo";
        _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
      }
      sub_1000033AC(&v12, "assert");
      sub_1000033AC(&v11, "getTickToNsInfo");
      sub_1000033AC(&v10, "info.numerator is zero");
      gpsd::util::triggerDiagnosticReport((uint64_t)&v12, (long long *)&v11, (long long *)&v10);
      std::string::~string(&v10);
      std::string::~string(&v11);
      std::string::~string(&v12);
      __assert_rtn("getTickToNsInfo", "GpsdUtil.mm", 90, "false && \"info.numerator is zero\"");
    }
    unint64_t v3 = info.numer / v2 * (unint64_t)(info.denom / v2);
    if (v3 >= 0x17D)
    {
      byte_100114A88 = 1;
      BOOL v4 = qword_100114840;
      if (v3 >> 10 > 0x5E)
      {
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "#gpsdUtil,Cannot protect against overflow in tick to ns", buf, 2u);
        }
      }
      else if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "#gpsdUtil,Reducing tick to ns precision to avoid overflow risk", buf, 2u);
      }
    }
    int v5 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      if (byte_100114A88) {
        int v6 = 8;
      }
      else {
        int v6 = 0;
      }
      *(_DWORD *)buf = 134218496;
      unsigned int v21 = (const char *)qword_100114A78;
      __int16 v22 = 2048;
      *(void *)unsigned int v23 = qword_100114A80;
      *(_WORD *)&v23[8] = 1024;
      *(_DWORD *)&v23[10] = v6;
      _os_log_debug_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "#gpsdUtil,Tick to ns info,Numerator,%llu,Denominator,%llu,PrecisionReductionBits,%d", buf, 0x1Cu);
    }
  }
}

void sub_1000D4B24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,char a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *__p,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  if (a50 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v50 - 129) < 0) {
    operator delete(*(void **)(v50 - 152));
  }
  if (*(char *)(v50 - 105) < 0) {
    operator delete(*(void **)(v50 - 128));
  }
  _Unwind_Resume(exception_object);
}

unint64_t gpsd::util::getMachAbsoluteTimeNs(gpsd::util *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_100114A50, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_100114A50))
  {
    sub_1000D45A8();
    __cxa_guard_release(&qword_100114A50);
  }
  uint64_t v1 = mach_absolute_time();
  char v2 = 8;
  if (!byte_100114A88) {
    char v2 = 0;
  }
  return ((v1 >> v2) * qword_100114A78 / qword_100114A80) << v2;
}

void sub_1000D4C8C(_Unwind_Exception *a1)
{
}

unint64_t gpsd::util::convertMachTimeInTicksToNs(unint64_t this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_100114A58, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_100114A58))
  {
    sub_1000D45A8();
    __cxa_guard_release(&qword_100114A58);
  }
  char v2 = 8;
  if (!byte_100114A88) {
    char v2 = 0;
  }
  return ((this >> v2) * qword_100114A78 / qword_100114A80) << v2;
}

void sub_1000D4D2C(_Unwind_Exception *a1)
{
}

unint64_t gpsd::util::convertNsToMachTimeInTicks(unint64_t this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_100114A60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_100114A60))
  {
    sub_1000D45A8();
    __cxa_guard_release(&qword_100114A60);
  }
  char v2 = 8;
  if (!byte_100114A88) {
    char v2 = 0;
  }
  return ((this >> v2) * qword_100114A80 / qword_100114A78) << v2;
}

void sub_1000D4DCC(_Unwind_Exception *a1)
{
}

BOOL gpsd::util::getCurrentMachContinuousMinusMachAbsoluteTicks(gpsd::util *this, unint64_t *a2)
{
  if (mach_get_times())
  {
    unint64_t v3 = qword_100114840;
    BOOL result = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR);
    if (result)
    {
      *(_WORD *)buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "#gpsdUtil,mach_get_times failed", buf, 2u);
      return 0;
    }
  }
  else
  {
    *(void *)this = 0;
    return 1;
  }
  return result;
}

BOOL gpsd::util::getCurrentMachContinuousMinusMachAbsoluteNanoseconds(gpsd::util *this, unint64_t *a2)
{
  int v5 = 0;
  BOOL CurrentMachContinuousMinusMachAbsoluteTicks = gpsd::util::getCurrentMachContinuousMinusMachAbsoluteTicks((gpsd::util *)&v5, a2);
  if (CurrentMachContinuousMinusMachAbsoluteTicks) {
    *(void *)this = gpsd::util::convertMachTimeInTicksToNs((unint64_t)v5);
  }
  return CurrentMachContinuousMinusMachAbsoluteTicks;
}

double gpsd::util::getProcessUptimeSec(gpsd::util *this)
{
  if (!qword_100114A68)
  {
    this = (gpsd::util *)gpsd::util::getMachContinuousTimeNs(this);
    qword_100114A68 = (uint64_t)this;
  }
  return (double)(gpsd::util::getMachContinuousTimeNs(this) - qword_100114A68) * 0.000000001;
}

void gpsd::util::stringify(unsigned int __val@<W0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  if (__val >= 0x1B || ((0x7FFFE3Fu >> __val) & 1) == 0) {
    goto LABEL_6;
  }
  std::string::assign((std::string *)a2, (&off_10010F370)[__val]);
  uint64_t v4 = *(unsigned __int8 *)(a2 + 23);
  if (*(char *)(a2 + 23) < 0) {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  if (!v4)
  {
LABEL_6:
    std::to_string(&__p, __val);
    int v5 = std::string::insert(&__p, 0, "unknown_");
    std::string::size_type v6 = v5->__r_.__value_.__r.__words[0];
    v9[0] = v5->__r_.__value_.__l.__size_;
    *(void *)((char *)v9 + 7) = *(std::string::size_type *)((char *)&v5->__r_.__value_.__r.__words[1] + 7);
    char v7 = HIBYTE(v5->__r_.__value_.__r.__words[2]);
    v5->__r_.__value_.__l.__size_ = 0;
    v5->__r_.__value_.__r.__words[2] = 0;
    v5->__r_.__value_.__r.__words[0] = 0;
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    *(void *)a2 = v6;
    *(void *)(a2 + 8) = v9[0];
    *(void *)(a2 + 15) = *(void *)((char *)v9 + 7);
    *(unsigned char *)(a2 + 23) = v7;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1000D50CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (*(char *)(v14 + 23) < 0) {
    operator delete(*(void **)v14);
  }
  _Unwind_Resume(exception_object);
}

void gpsd::util::stringify(int __val@<W0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  uint64_t v4 = "START";
  switch(__val)
  {
    case 0:
      uint64_t v4 = "PROTO_DEFAULT";
      goto LABEL_62;
    case 1:
      goto LABEL_62;
    case 2:
      uint64_t v4 = "STOP";
      goto LABEL_62;
    case 3:
      uint64_t v4 = "RESET";
      goto LABEL_62;
    case 4:
      uint64_t v4 = "CLEAR";
      goto LABEL_62;
    case 5:
      uint64_t v4 = "DELETE_GNSS_DATA";
      goto LABEL_62;
    case 6:
      uint64_t v4 = "SET_PVTM_REPORT";
      goto LABEL_62;
    case 7:
      uint64_t v4 = "SET_NMEA_HANDLER";
      goto LABEL_62;
    case 8:
      uint64_t v4 = "INJECT_ASSISTANCE_POSITION";
      goto LABEL_62;
    case 9:
      uint64_t v4 = "INJECT_ASSISTANCE_TIME";
      goto LABEL_62;
    case 10:
      uint64_t v4 = "INJECT_ASSISTANCE_FILE";
      goto LABEL_62;
    case 11:
      uint64_t v4 = "INJECT_RTI_FILE";
      goto LABEL_62;
    case 12:
      uint64_t v4 = "INJECT_SVID_BLOCKLIST";
      goto LABEL_62;
    case 13:
      uint64_t v4 = "SET_ASSISTANCE_PRESSURE";
      goto LABEL_62;
    case 14:
      uint64_t v4 = "SET_ASSISTANCE_ACCEL";
      goto LABEL_62;
    case 15:
      uint64_t v4 = "SET_ASSISTANCE_GYRO";
      goto LABEL_62;
    case 16:
      uint64_t v4 = "SET_ASSISTANCE_DEM";
      goto LABEL_62;
    case 17:
      uint64_t v4 = "SET_ASSISTANCE_MAP_VECTOR";
      goto LABEL_62;
    case 18:
      uint64_t v4 = "SET_ASSISTANCE_MOTION_ACTIVITY_CONTEXT";
      goto LABEL_62;
    case 19:
      uint64_t v4 = "SET_ASSISTANCE_MOUNT_STATE";
      goto LABEL_62;
    case 20:
      uint64_t v4 = "SET_ASSISTANCE_SIGNAL_ENVIRONMENT";
      goto LABEL_62;
    case 21:
      uint64_t v4 = "SET_ASSISTANCE_SPEED_CONSTRAINT";
      goto LABEL_62;
    case 22:
      uint64_t v4 = "SET_ASSISTANCE_ALONG_TRACK_VELOCITY";
      goto LABEL_62;
    case 23:
      uint64_t v4 = "SET_POWER_REPORT";
      goto LABEL_62;
    case 24:
      uint64_t v4 = "SET_CONFIG_SIMULATOR_MODE";
      goto LABEL_62;
    case 25:
      uint64_t v4 = "SET_CONFIG_ENABLE_GNSS_CONSTELLATIONS";
      goto LABEL_62;
    case 26:
      uint64_t v4 = "SET_CONFIG_DUTY_CYCLING";
      goto LABEL_62;
    case 27:
      uint64_t v4 = "SET_TIME_TRANSFER_PULSE";
      goto LABEL_62;
    case 28:
      uint64_t v4 = "CLEAN_TIME_TRANSFER_PULSE";
      goto LABEL_62;
    case 29:
      uint64_t v4 = "INJECT_LTL_INFO";
      goto LABEL_62;
    case 30:
      uint64_t v4 = "CNTIN_STATUS_UPDATE";
      goto LABEL_62;
    case 31:
      uint64_t v4 = "SET_THERMAL_RISK_STATE";
      goto LABEL_62;
    case 32:
      uint64_t v4 = "PING";
      goto LABEL_62;
    case 34:
      uint64_t v4 = "BUILD_DEVICE";
      goto LABEL_62;
    case 35:
      uint64_t v4 = "TERMINATION_IMMINENT";
      goto LABEL_62;
    case 36:
      uint64_t v4 = "EXIT";
      goto LABEL_62;
    case 37:
      uint64_t v4 = "FORCE_CLEAR_ALL_NV";
      goto LABEL_62;
    case 38:
      uint64_t v4 = "SET_CONFIG_RF_BAND_ENABLE";
      goto LABEL_62;
    case 51:
      uint64_t v4 = "START_EMERGENCY_PREEMPTIVE_SESSION";
      goto LABEL_62;
    case 52:
      uint64_t v4 = "STOP_EMERGENCY_PREEMPTIVE_SESSION";
      goto LABEL_62;
    case 53:
      uint64_t v4 = "SET_EMERGENCY_CONFIG";
      goto LABEL_62;
    case 54:
      uint64_t v4 = "SET_EMERGENCY_SESSION_SUMMARY_REPORT";
      goto LABEL_62;
    case 55:
      uint64_t v4 = "ENTER_EMERGENCY_MODE";
      goto LABEL_62;
    case 56:
      uint64_t v4 = "EXIT_EMERGENCY_MODE";
      goto LABEL_62;
    case 60:
      uint64_t v4 = "START_EMERGENCY_POSITION";
      goto LABEL_62;
    case 61:
      uint64_t v4 = "STOP_EMERGENCY_POSITION";
      goto LABEL_62;
    case 62:
      uint64_t v4 = "SET_EMERGENCY_POSITION_REPORT";
      goto LABEL_62;
    case 63:
      uint64_t v4 = "SET_EMERGENCY_MEASUREMENT_REPORT";
      goto LABEL_62;
    case 64:
      uint64_t v4 = "SET_NW_ASSISTANCE_NEEDED_REPORT";
      goto LABEL_62;
    case 65:
      uint64_t v4 = "SET_NW_ASSISTANCE_GPS_REF_TIME";
      goto LABEL_62;
    case 66:
      uint64_t v4 = "SET_NW_ASSISTANCE_REF_POSITION";
      goto LABEL_62;
    case 67:
      uint64_t v4 = "SET_NW_ASSISTANCE_GPS_EPHEMERIS";
      goto LABEL_62;
    case 68:
      uint64_t v4 = "SET_NW_ASSISTANCE_GPS_ACQUISITION";
      goto LABEL_62;
    case 69:
      uint64_t v4 = "INJECT_FT_ASSISTANCE";
      goto LABEL_62;
    case 70:
      uint64_t v4 = "DECODE_SUPL_INIT";
      goto LABEL_62;
    case 71:
      uint64_t v4 = "SET_SUPL_INIT";
      goto LABEL_62;
    case 72:
      uint64_t v4 = "SET_SUPL_LOCATIONID_NEEDED_REPORT";
      goto LABEL_62;
    case 73:
      uint64_t v4 = "SET_SUPL_LOCATIONID";
      goto LABEL_62;
    case 74:
      uint64_t v4 = "ABORT_SUPL_SESSION";
      goto LABEL_62;
    case 75:
      uint64_t v4 = "SET_SUPL_SESSION_STATUS_REPORT";
      goto LABEL_62;
    case 76:
      uint64_t v4 = "SET_SUPL_WLAN_MEAS";
LABEL_62:
      std::string::assign((std::string *)a2, v4);
      uint64_t v5 = *(unsigned __int8 *)(a2 + 23);
      if (*(char *)(a2 + 23) < 0) {
        uint64_t v5 = *(void *)(a2 + 8);
      }
      if (!v5) {
        goto LABEL_65;
      }
      return;
    default:
LABEL_65:
      std::to_string(&__p, __val);
      std::string::size_type v6 = std::string::insert(&__p, 0, "unknown_");
      std::string::size_type v7 = v6->__r_.__value_.__r.__words[0];
      v10[0] = v6->__r_.__value_.__l.__size_;
      *(void *)((char *)v10 + 7) = *(std::string::size_type *)((char *)&v6->__r_.__value_.__r.__words[1] + 7);
      char v8 = HIBYTE(v6->__r_.__value_.__r.__words[2]);
      v6->__r_.__value_.__l.__size_ = 0;
      v6->__r_.__value_.__r.__words[2] = 0;
      v6->__r_.__value_.__r.__words[0] = 0;
      if (*(char *)(a2 + 23) < 0) {
        operator delete(*(void **)a2);
      }
      *(void *)a2 = v7;
      *(void *)(a2 + 8) = v10[0];
      *(void *)(a2 + 15) = *(void *)((char *)v10 + 7);
      *(unsigned char *)(a2 + 23) = v8;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      return;
  }
}

void sub_1000D5508(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v14 + 23) < 0) {
    operator delete(*(void **)v14);
  }
  _Unwind_Resume(exception_object);
}

void gpsd::util::shorthandStringify(int a1@<W0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  unint64_t v3 = "INJECT_TIME";
  switch(a1)
  {
    case 8:
      unint64_t v3 = "INJECT_POSITION";
      goto LABEL_45;
    case 9:
      goto LABEL_45;
    case 10:
      unint64_t v3 = "INJECT_FILE";
      goto LABEL_45;
    case 11:
      unint64_t v3 = "INJECT_RTI";
      goto LABEL_45;
    case 12:
      unint64_t v3 = "INJECT_BLOCKLIST";
      goto LABEL_45;
    case 14:
      unint64_t v3 = "ACCEL";
      goto LABEL_45;
    case 15:
      unint64_t v3 = "GYRO";
      goto LABEL_45;
    case 16:
      unint64_t v3 = "DEM";
      goto LABEL_45;
    case 17:
      unint64_t v3 = "MAP_VECTOR";
      goto LABEL_45;
    case 18:
      unint64_t v3 = "MOTION_CONTEXT";
      goto LABEL_45;
    case 19:
      unint64_t v3 = "MOUNT_STATE";
      goto LABEL_45;
    case 20:
      unint64_t v3 = "SIGNAL_ENV";
      goto LABEL_45;
    case 21:
      unint64_t v3 = "SPEED_CONSTRAINT";
      goto LABEL_45;
    case 22:
      unint64_t v3 = "ALONG_TRACK_VEL";
      goto LABEL_45;
    case 23:
      unint64_t v3 = "SET_POWER_REPORT";
      goto LABEL_45;
    case 24:
      unint64_t v3 = "CONFIG_SIM";
      goto LABEL_45;
    case 25:
      unint64_t v3 = "CONFIG_CONSTELL";
      goto LABEL_45;
    case 26:
      unint64_t v3 = "CONFIG_DUTY";
      goto LABEL_45;
    case 27:
      unint64_t v3 = "SET_TT_PULSE";
      goto LABEL_45;
    case 28:
      unint64_t v3 = "CLEAN_TT_PULSE";
      goto LABEL_45;
    case 31:
      unint64_t v3 = "THERMAL_RISK";
      goto LABEL_45;
    case 35:
      unint64_t v3 = "TERM_IMMINENT";
      goto LABEL_45;
    case 37:
      unint64_t v3 = "FORCE_CLEAR";
      goto LABEL_45;
    case 38:
      unint64_t v3 = "CONFIG_BANDS";
      goto LABEL_45;
    case 51:
      unint64_t v3 = "START_PREEMPT";
      goto LABEL_45;
    case 52:
      unint64_t v3 = "STOP_PREEMPT";
      goto LABEL_45;
    case 53:
      unint64_t v3 = "EMERG_CONFIG";
      goto LABEL_45;
    case 54:
      unint64_t v3 = "EMERG_SUMMARY";
      goto LABEL_45;
    case 60:
      unint64_t v3 = "START_EMERG";
      goto LABEL_45;
    case 61:
      unint64_t v3 = "STOP_EMERG";
      goto LABEL_45;
    case 62:
      unint64_t v3 = "EMERG_POS_RPT";
      goto LABEL_45;
    case 64:
      unint64_t v3 = "NW_NEEDED_RPT";
      goto LABEL_45;
    case 65:
      unint64_t v3 = "NW_REF_TIME";
      goto LABEL_45;
    case 66:
      unint64_t v3 = "NW_REF_POS";
      goto LABEL_45;
    case 67:
      unint64_t v3 = "NW_EPHEM";
      goto LABEL_45;
    case 68:
      unint64_t v3 = "NW_GPS_ACQUISITION";
      goto LABEL_45;
    case 69:
      unint64_t v3 = "INJECT_FTA_1x";
      goto LABEL_45;
    case 70:
      unint64_t v3 = "DEC_SUPL_INIT";
      goto LABEL_45;
    case 71:
      unint64_t v3 = "SUPL_INIT";
      goto LABEL_45;
    case 72:
      unint64_t v3 = "SUPL_LOCID_NEED";
      goto LABEL_45;
    case 73:
      unint64_t v3 = "SUPL_LOCID";
      goto LABEL_45;
    case 74:
      unint64_t v3 = "ABORT_SUPL";
      goto LABEL_45;
    case 75:
      unint64_t v3 = "SUPL_STATUS";
LABEL_45:
      std::string::assign(a2, v3);
      break;
    default:
      gpsd::util::stringify(a1, (uint64_t)&v4);
      *(_OWORD *)&a2->__r_.__value_.__l.__data_ = v4;
      a2->__r_.__value_.__r.__words[2] = v5;
      break;
  }
}

void sub_1000D58F0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t gpsd::util::truncatedSha256(gpsd::util *this, const void *a2)
{
  if (CC_SHA256(this, (CC_LONG)a2, md)) {
    return bswap32(*(unsigned int *)md);
  }
  std::string::size_type v5 = qword_100114840;
  uint64_t result = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR);
  if (result)
  {
    int v6 = 134218240;
    std::string::size_type v7 = this;
    __int16 v8 = 2048;
    float v9 = a2;
    _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "#gpsdUtil,CC_SHA256 failed on,%p,%zu", (uint8_t *)&v6, 0x16u);
    return 0;
  }
  return result;
}

BOOL gpsd::util::getVersionNumberFromDylib(gpsd::util *this, _DWORD *a2, int *a3)
{
  long long v4 = (uint64_t (*)(void))dlsym(this, "getGnssDeviceVersion");
  std::string::size_type v5 = v4;
  if (v4)
  {
    *a2 = v4();
  }
  else
  {
    int v6 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)__int16 v8 = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "gpsdUtil,Could not dlsym for version number", v8, 2u);
    }
  }
  return v5 != 0;
}

BOOL gpsd::util::getVersionStringFromDylib(void *a1, std::string *a2)
{
  unint64_t v3 = (uint64_t (*)(void))dlsym(a1, "getVersionString");
  long long v4 = v3;
  if (v3)
  {
    uint64_t v5 = v3();
    if (v5) {
      int v6 = (const std::string::value_type *)v5;
    }
    else {
      int v6 = "(null)";
    }
    std::string::assign(a2, v6);
  }
  else
  {
    std::string::size_type v7 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)float v9 = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "gpsdUtil,Could not dlsym for version string", v9, 2u);
    }
  }
  return v4 != 0;
}

void *sub_1000D5C30(void *a1)
{
  std::filebuf::~filebuf();
  std::istream::~istream();
  std::ios::~ios();
  return a1;
}

void gpsd::util::changeFileToClassD(FILE *this, __sFILE *a2)
{
  if (this)
  {
    int v2 = fileno(this);
    if (v2 == -1)
    {
      uint64_t v4 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        int v10 = *__error();
        *(_DWORD *)buf = 67240192;
        int v12 = v10;
        int v6 = "#utilFileClass,fileno failed,%{public}d";
        goto LABEL_12;
      }
    }
    else
    {
      int v3 = v2;
      if (fcntl(v2, 63) != 4)
      {
        if (fcntl(v3, 64, 4))
        {
          uint64_t v4 = qword_100114840;
          if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
          {
            int v5 = *__error();
            *(_DWORD *)buf = 67240192;
            int v12 = v5;
            int v6 = "#utilFileClass,set class failed,%{public}d";
LABEL_12:
            __int16 v8 = v4;
            uint32_t v9 = 8;
            goto LABEL_13;
          }
        }
      }
    }
  }
  else
  {
    uint64_t v7 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      int v6 = "#utilFileClass,nullptr";
      __int16 v8 = v7;
      uint32_t v9 = 2;
LABEL_13:
      _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, v6, buf, v9);
    }
  }
}

void gpsd::util::triggerDiagnosticReport(uint64_t a1, long long *a2, long long *a3)
{
  if (*(char *)(a1 + 23) < 0)
  {
    sub_1000186E8(v5, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)int v5 = *(_OWORD *)a1;
    uint64_t v6 = *(void *)(a1 + 16);
  }
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000186E8(&v7, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v7 = *a2;
    uint64_t v8 = *((void *)a2 + 2);
  }
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000186E8(&__p, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long __p = *a3;
    uint64_t v10 = *((void *)a3 + 2);
  }
  char v11 = 0;
  gpsd::util::triggerDiagnosticReport((uint64_t)v5);
  if (SHIBYTE(v10) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v8) < 0) {
    operator delete((void *)v7);
  }
  if (SHIBYTE(v6) < 0) {
    operator delete(v5[0]);
  }
}

void sub_1000D5F4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  _Unwind_Resume(exception_object);
}

void gpsd::util::triggerDiagnosticReport(uint64_t a1)
{
  if (objc_opt_class())
  {
    id v2 = objc_alloc_init((Class)SDRDiagnosticReporter);
    if (*(char *)(a1 + 23) >= 0) {
      uint64_t v3 = a1;
    }
    else {
      uint64_t v3 = *(void *)a1;
    }
    uint64_t v4 = +[NSString stringWithUTF8String:v3];
    if (*(char *)(a1 + 47) >= 0) {
      uint64_t v5 = a1 + 24;
    }
    else {
      uint64_t v5 = *(void *)(a1 + 24);
    }
    uint64_t v6 = +[NSString stringWithUTF8String:v5];
    if (*(char *)(a1 + 71) >= 0) {
      uint64_t v7 = a1 + 48;
    }
    else {
      uint64_t v7 = *(void *)(a1 + 48);
    }
    id v8 = [v2 signatureWithDomain:@"GPSDaemon" type:v4 subType:v6 subtypeContext:[NSString stringWithUTF8String:v7] detectedProcess:@"com.apple.gpsd" triggerThresholdValues:0];
    uint32_t v9 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      if (*(char *)(a1 + 23) >= 0) {
        uint64_t v10 = a1;
      }
      else {
        uint64_t v10 = *(void *)a1;
      }
      if (*(char *)(a1 + 47) >= 0) {
        uint64_t v11 = a1 + 24;
      }
      else {
        uint64_t v11 = *(void *)(a1 + 24);
      }
      if (*(char *)(a1 + 71) >= 0) {
        uint64_t v12 = a1 + 48;
      }
      else {
        uint64_t v12 = *(void *)(a1 + 48);
      }
      LODWORD(buf.__m_.__sig) = 136315650;
      *(uint64_t *)((char *)&buf.__m_.__sig + 4) = v10;
      *(_WORD *)&buf.__m_.__opaque[4] = 2080;
      *(void *)&buf.__m_.__opaque[6] = v11;
      *(_WORD *)&buf.__m_.__opaque[14] = 2080;
      *(void *)&buf.__m_.__opaque[16] = v12;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#gsdr,type,%s,subtype,%s,context,%s", (uint8_t *)&buf, 0x20u);
    }
    memset(v32.__cv_.__opaque, 0, sizeof(v32.__cv_.__opaque));
    v32.__cv_.__sig = 1018212795;
    uint64_t v24 = 0;
    int v25 = &v24;
    uint64_t v26 = 0x3812000000;
    int v27 = sub_1000D64A4;
    uint64_t v29 = 0;
    unsigned int v30 = 0;
    int v28 = sub_1000D64B4;
    if (*(unsigned char *)(a1 + 72)) {
      operator new();
    }
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472;
    v23[2] = sub_1000D64C0;
    v23[3] = &unk_10010F350;
    v23[4] = &v24;
    if ([v2 snapshotWithSignature:v8 duration:0 events:0 payload:0 actions:v23 reply:0.0])
    {
      if (*(unsigned char *)(a1 + 72))
      {
        memset(buf.__m_.__opaque, 0, sizeof(buf.__m_.__opaque));
        buf.__m_.__sig = 850045863;
        __lk.__m_ = &buf;
        __lk.__owns_ = 1;
        std::mutex::lock(&buf);
        std::string v13 = (std::condition_variable *)v25[6];
        v14.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
        v15.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
        if (v15.__d_.__rep_)
        {
          if (v15.__d_.__rep_ < 1)
          {
            if ((unint64_t)v15.__d_.__rep_ >= 0xFFDF3B645A1CAC09) {
              v16.__d_.__rep_ = 1000 * v15.__d_.__rep_ + 5000000000;
            }
            else {
              v16.__d_.__rep_ = 0x800000012A05F200;
            }
          }
          else if ((unint64_t)v15.__d_.__rep_ < 0x20C49BA59708B8)
          {
            v16.__d_.__rep_ = 1000 * v15.__d_.__rep_ + 5000000000;
          }
          else
          {
            v16.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
          }
        }
        else
        {
          v16.__d_.__rep_ = 5000000000;
        }
        std::condition_variable::__do_timed_wait(v13, &__lk, v16);
        if (std::chrono::steady_clock::now().__d_.__rep_ - v14.__d_.__rep_ > 0x12A05F1FFLL)
        {
          std::string v18 = qword_100114840;
          if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
          {
            v21[0] = 0;
            _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "#gsdr,wait timeout", (uint8_t *)v21, 2u);
          }
        }
        if (__lk.__owns_) {
          std::mutex::unlock(__lk.__m_);
        }
        std::mutex::~mutex(&buf);
      }
    }
    else
    {
      std::string v17 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        LOWORD(buf.__m_.__sig) = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "#gsdr,return failure", (uint8_t *)&buf, 2u);
      }
    }
    uint64_t v19 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf.__m_.__sig) = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "#gsdr,exit", (uint8_t *)&buf, 2u);
    }

    _Block_object_dispose(&v24, 8);
    unsigned int v20 = v30;
    unsigned int v30 = 0;
    if (v20)
    {
      std::condition_variable::~condition_variable(v20);
      operator delete();
    }
    std::condition_variable::~condition_variable(&v32);
  }
}

void sub_1000D6460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, std::mutex *a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  std::mutex::~mutex((std::mutex *)&a25);
  _Block_object_dispose(&a18, 8);
  sub_1000D6C50((std::condition_variable **)(v25 + 48), 0);
  std::condition_variable::~condition_variable((std::condition_variable *)(v26 - 136));
  _Unwind_Resume(a1);
}

uint64_t sub_1000D64A4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0;
  *(void *)(result + 48) = v2;
  return result;
}

std::condition_variable *sub_1000D64B4(uint64_t a1)
{
  return sub_1000D6C50((std::condition_variable **)(a1 + 48), 0);
}

void sub_1000D64C0(uint64_t a1, void *a2)
{
  if (objc_msgSend(objc_msgSend(a2, "objectForKeyedSubscript:", kSymptomDiagnosticReplySuccess), "BOOLValue"))
  {
    id v4 = [a2 objectForKeyedSubscript:kSymptomDiagnosticReplySessionID];
    uint64_t v5 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_7;
    }
    int v12 = 136315138;
    id v13 = [v4 UTF8String];
    uint64_t v6 = "#gsdr,accepted,%s";
    uint64_t v7 = v5;
    uint32_t v8 = 12;
  }
  else
  {
    id v9 = [a2 objectForKeyedSubscript:kSymptomDiagnosticReplyReason];
    uint64_t v10 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_7;
    }
    int v12 = 67109120;
    LODWORD(v13) = [v9 intValue];
    uint64_t v6 = "#gsdr,rejected,reason,%d";
    uint64_t v7 = v10;
    uint32_t v8 = 8;
  }
  _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v6, (uint8_t *)&v12, v8);
LABEL_7:
  uint64_t v11 = *(std::condition_variable **)(*(void *)(*(void *)(a1 + 32) + 8) + 48);
  if (v11) {
    std::condition_variable::notify_one(v11);
  }
}

char *gpsd::util::getGpsWeekFromBuildDate(gpsd::util *this)
{
  uint64_t result = (char *)dword_100114A70;
  if (dword_100114A70 <= 0)
  {
    memset(&v4, 0, sizeof(v4));
    uint64_t result = strptime("Nov 10 2024 02:27:50", "%b %d %Y %H:%M:%S", &v4);
    if (result)
    {
      time_t v2 = mktime(&v4);
      if (v2 < 0)
      {
        return 0;
      }
      else
      {
        double v3 = ((double)v2 + -315964800.0 + -259200.0) / 604800.0;
        uint64_t result = (char *)(int)v3;
        dword_100114A70 = (int)v3;
      }
    }
  }
  return result;
}

void gpsd::util::charToHex(gpsd::util *this@<X0>, const unsigned __int8 *a2@<X1>, int __c@<W2>, std::string *a4@<X8>)
{
  if (a2)
  {
    uint32_t v8 = 0;
    a4->__r_.__value_.__r.__words[0] = 0;
    a4->__r_.__value_.__l.__size_ = 0;
    a4->__r_.__value_.__r.__words[2] = 0;
    do
    {
      if (__c)
      {
        if (v8) {
          std::string::push_back(a4, __c);
        }
      }
      std::string::push_back(a4, a0123456789abcd[(unint64_t)v8[(void)this] >> 4]);
      std::string::push_back(a4, a0123456789abcd[(v8++)[(void)this] & 0xF]);
    }
    while (a2 != v8);
  }
  else
  {
    sub_1000033AC(a4, "EmptyBuffer");
  }
}

void sub_1000D679C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void gpsd::util::logBinaryBytes(gpsd::util *this, const unsigned __int8 *a2, uint64_t a3, const char *a4)
{
  if (a2)
  {
    unint64_t v7 = 0;
    uint32_t v8 = a2;
    do
    {
      id v9 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
      {
        if ((unint64_t)v8 >= 0x40) {
          uint64_t v10 = 64;
        }
        else {
          uint64_t v10 = (uint64_t)v8;
        }
        gpsd::util::charToHex((gpsd::util *)((char *)this + v7), (const unsigned __int8 *)v10, 0, &__p);
        p_p = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)std::mutex buf = 136315906;
        uint64_t v14 = a3;
        __int16 v15 = 2048;
        std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v16 = a2;
        __int16 v17 = 2048;
        unint64_t v18 = v7;
        __int16 v19 = 2080;
        unsigned int v20 = p_p;
        _os_log_debug_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "%s,%zu,%zu,%s", buf, 0x2Au);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      v7 += 64;
      v8 -= 64;
    }
    while (v7 < (unint64_t)a2);
  }
}

void gpsd::util::dispatchQueueInit(dispatch_queue_t *a1, dispatch_qos_class_t a2, const std::string::value_type *a3)
{
  uint64_t v6 = (std::string *)sub_1000033AC(buf, "com.apple.gpsd.");
  unint64_t v7 = std::string::append(v6, a3);
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  int64_t v23 = v7->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SBYTE3(v28) < 0) {
    operator delete(*(void **)buf);
  }
  id v9 = dispatch_queue_attr_make_with_qos_class(0, a2, 0);
  if (!v9)
  {
    uint64_t v10 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = __p;
      if (v23 < 0) {
        uint64_t v11 = (void **)__p[0];
      }
      *(_DWORD *)std::mutex buf = 136446210;
      *(void *)&uint8_t buf[4] = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "dispatchQueueInit,nullattr,%{public}s", buf, 0xCu);
    }
  }
  if (v23 >= 0) {
    int v12 = __p;
  }
  else {
    int v12 = (void **)__p[0];
  }
  dispatch_queue_t v13 = dispatch_queue_create((const char *)v12, v9);
  *a1 = v13;
  if (!v13)
  {
    uint64_t v14 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      __int16 v15 = __p;
      if (v23 < 0) {
        __int16 v15 = (void **)__p[0];
      }
      *(_DWORD *)std::mutex buf = 136446210;
      *(void *)&uint8_t buf[4] = v15;
      _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "dispatchQueueInit,queue,null,%{public}s", buf, 0xCu);
      uint64_t v14 = qword_100114840;
    }
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::mutex buf = 136446722;
      *(void *)&uint8_t buf[4] = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Daemon/GpsdUtil.mm";
      __int16 v25 = 1026;
      int v26 = 636;
      __int16 v27 = 2082;
      int v28 = "dispatchQueueInit";
      _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
    }
    sub_1000033AC(v20, "assert");
    sub_1000033AC(v18, "dispatchQueueInit");
    sub_1000033AC(v16, "dispatchQueueInit,queue,null,%{public}s");
    gpsd::util::triggerDiagnosticReport((uint64_t)v20, (long long *)v18, (long long *)v16);
    if (v17 < 0) {
      operator delete(v16[0]);
    }
    if (v19 < 0) {
      operator delete(v18[0]);
    }
    if (v21 < 0) {
      operator delete(v20[0]);
    }
    __assert_rtn("dispatchQueueInit", "GpsdUtil.mm", 636, "false && \"dispatchQueueInit,queue,null,%{public}s\"");
  }
  if (SHIBYTE(v23) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1000D6BD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 57) < 0) {
    operator delete(*(void **)(v33 - 80));
  }
  _Unwind_Resume(exception_object);
}

std::condition_variable *sub_1000D6C50(std::condition_variable **a1, std::condition_variable *a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    std::condition_variable::~condition_variable(result);
    operator delete();
  }
  return result;
}

uint64_t GpsdPlatformInfo::isPhone(GpsdPlatformInfo *this)
{
  if (qword_1001147F0 != -1) {
    dispatch_once(&qword_1001147F0, &stru_10010F448);
  }
  return byte_1001147E8;
}

void sub_1000D6CE4(id a1)
{
  uint64_t v1 = (const void *)MGCopyAnswer();
  if (v1)
  {
    time_t v2 = v1;
    if (CFEqual(v1, @"iPhone")) {
      byte_1001147E8 = 1;
    }
    CFRelease(v2);
  }
}

void GpsdPlatformInfo::vendorDylibFullPathName(GpsdPlatformInfo *this@<X0>, void *a2@<X8>)
{
  int v3 = *((_DWORD *)this + 2);
  if ((v3 - 201) <= 1)
  {
    tm v4 = "/usr/lib/libolaf.dylib";
LABEL_9:
    sub_1000033AC(a2, v4);
    return;
  }
  if (v3 == 106)
  {
LABEL_8:
    tm v4 = "/usr/lib/libfire6.dylib";
    goto LABEL_9;
  }
  if (v3 == 107)
  {
    tm v4 = "/usr/lib/libfire7.dylib";
    goto LABEL_9;
  }
  uint64_t v6 = (id *)GpsdPreferences::instance(0);
  unsigned int v7 = GpsdPreferences::isRavenExpected(v6);
  int v8 = *((_DWORD *)this + 2);
  if (v7)
  {
    if (v8 == 103) {
      goto LABEL_8;
    }
  }
  else if (v8 == 103)
  {
    id v9 = (id *)GpsdPreferences::instance(0);
    if ((GpsdPreferences::isRavenExpected(v9) & 1) == 0)
    {
      tm v4 = "/usr/lib/libfire3.dylib";
      goto LABEL_9;
    }
  }
  uint64_t v10 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)uint64_t v11 = 0;
    _os_log_fault_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "PlatformInfo,unknown vendorDylibFullPathName", v11, 2u);
  }
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
}

uint64_t GpsdPlatformInfo::expectedToHaveRaven(GpsdPlatformInfo *this)
{
  int v1 = *((_DWORD *)this + 2);
  if ((v1 - 201) <= 1)
  {
    if (qword_1001147F0 != -1) {
      dispatch_once(&qword_1001147F0, &stru_10010F448);
    }
    if (byte_1001147E8) {
      return 1;
    }
    int v1 = *((_DWORD *)this + 2);
  }
  unsigned int v3 = v1 - 103;
  BOOL v4 = v3 > 4;
  int v5 = (1 << v3) & 0x19;
  if (!v4 && v5 != 0)
  {
    if (qword_1001147F0 != -1) {
      dispatch_once(&qword_1001147F0, &stru_10010F448);
    }
    if (byte_1001147E8) {
      return 1;
    }
  }
  return 0;
}

BOOL GpsdPlatformInfo::supportsNavic(GpsdPlatformInfo *this)
{
  if (qword_1001147F0 != -1) {
    dispatch_once(&qword_1001147F0, &stru_10010F448);
  }
  return byte_1001147E8 == 1 && *((_DWORD *)this + 2) == 107;
}

void GpsdPlatformInfo::glonassPerFrequencyGroupDelayMeters(GpsdPlatformInfo *this@<X0>, float64x2_t **a2@<X8>)
{
  if (*((_DWORD *)this + 2) == 107)
  {
    if (*((unsigned char *)this + 40)) {
      double v3 = *((double *)this + 4);
    }
    else {
      double v3 = 15.0;
    }
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    BOOL v4 = (float64x2_t *)operator new(0x70uLL);
    double v5 = v3 + -520.569214 + 0.1;
    a2[2] = v4 + 7;
    float64x2_t v6 = (float64x2_t)vdupq_lane_s64(COERCE__INT64(v3 + -520.569214), 0);
    *BOOL v4 = vaddq_f64(v6, (float64x2_t)xmmword_1000EAD50);
    v4[1] = vaddq_f64(v6, (float64x2_t)xmmword_1000EAD60);
    v4[2] = vaddq_f64(v6, (float64x2_t)xmmword_1000EAD70);
    v4[3] = vaddq_f64(v6, (float64x2_t)xmmword_1000EAD80);
    v4[4] = vaddq_f64(v6, (float64x2_t)xmmword_1000EAD90);
    v4[5].f64[0] = v3 + -520.569214;
    v4[5].f64[1] = v5;
    v4[6].f64[0] = v5;
    v4[6].f64[1] = v5;
    *a2 = v4;
    a2[1] = v4 + 7;
    unsigned int v7 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 134349056;
      double v9 = v3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "glonassExternalCalMeters,%{public}.2f", (uint8_t *)&v8, 0xCu);
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
}

double GpsdPlatformInfo::getGpsCrossCorrelationMinThreshold_dBHz(GpsdPlatformInfo *this)
{
  if (qword_1001147F0 != -1) {
    dispatch_once(&qword_1001147F0, &stru_10010F448);
  }
  double v2 = 24.0;
  if ((byte_1001147E8 & 1) == 0)
  {
    double v3 = qword_100114840;
    double v2 = -1.0;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      int v5 = *(_DWORD *)this;
      v6[0] = 67240192;
      v6[1] = v5;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "HalExtensions,Unexpected hardware,%{public}d", (uint8_t *)v6, 8u);
    }
  }
  return v2;
}

uint64_t GpsdPlatformInfo::instance(int a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000D7280;
  block[3] = &unk_10010F468;
  int v3 = a1;
  if (qword_100114800 != -1) {
    dispatch_once(&qword_100114800, block);
  }
  return qword_1001147F8;
}

void sub_1000D7280(GpsdPlatformInfoHardware *a1)
{
  if (!*((_DWORD *)a1 + 8))
  {
    int v1 = GpsdPlatformInfoHardware::detectHardware(a1);
    double v2 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::mutex buf = 67240448;
      *(_DWORD *)&uint8_t buf[4] = v1;
      __int16 v4 = 1026;
      int has_internal_diagnostics = os_variant_has_internal_diagnostics();
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PlatformInfo,Product type detected,%{public}d,isInternal,%{public}d", buf, 0xEu);
    }
  }
  operator new();
}

void sub_1000D7F90(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete();
}

id GpsdPreferences::vendorLogQA(id *this)
{
  return [*this BOOLForKey:@"VendorLogQA"];
}

id GpsdPreferences::vendorLogAllToOsLog(id *this)
{
  return [*this BOOLForKey:@"VendorLogAllToOsLog"];
}

id GpsdPreferences::dumpSettingsToLog(id *this)
{
  id v11 = [*this dictionaryRepresentation];
  id v1 = [[objc_msgSend(v11, "allKeys") sortedArrayUsingSelector:@"compare:"];
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id result = [v1 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (result)
  {
    id v4 = result;
    uint64_t v5 = *(void *)v13;
    *(void *)&long long v3 = 138412546;
    long long v10 = v3;
    do
    {
      float64x2_t v6 = 0;
      do
      {
        if (*(void *)v13 != v5) {
          objc_enumerationMutation(v1);
        }
        unsigned int v7 = *(void **)(*((void *)&v12 + 1) + 8 * (void)v6);
        if ((objc_msgSend(v7, "isEqualToString:", @"AppleLanguages", v10) & 1) == 0
          && ([v7 isEqualToString:@"NSLanguages"] & 1) == 0
          && ([v7 isEqualToString:@"NSInterfaceStyle"] & 1) == 0)
        {
          id v8 = [v11 objectForKeyedSubscript:v7];
          double v9 = qword_100114840;
          if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)std::mutex buf = v10;
            char v17 = v7;
            __int16 v18 = 2112;
            id v19 = v8;
            _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Pref: %@ = %@", buf, 0x16u);
          }
        }
        float64x2_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id result = [v1 countByEnumeratingWithState:&v12 objects:v20 count:16];
      id v4 = result;
    }
    while (result);
  }
  return result;
}

uint64_t GpsdPreferences::instance(int a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000D82AC;
  block[3] = &unk_10010F468;
  int v3 = a1;
  if (qword_100114810 != -1) {
    dispatch_once(&qword_100114810, block);
  }
  return qword_100114808;
}

void sub_1000D82AC()
{
}

void sub_1000D8D2C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p) {
    operator delete(__p);
  }
  operator delete();
}

id GpsdPreferences::vendorLogLz4(id *this)
{
  return [*this BOOLForKey:@"VendorLogLz4"];
}

id GpsdPreferences::vendorLogLzfse(id *this)
{
  return [*this BOOLForKey:@"VendorLogLzfse"];
}

id GpsdPreferences::vendorLogZlib(id *this)
{
  return [*this BOOLForKey:@"VendorLogZlib"];
}

void *GpsdPreferences::vendorLogDirectory@<X0>(id *this@<X0>, void *a2@<X8>)
{
  switch(*((_DWORD *)this + 2))
  {
    case 1:
      int v3 = "/var/root/gpstool_logs";
      break;
    case 2:
      int v3 = "/var/root/gpsfactorytest_logs";
      break;
    case 3:
      int v3 = "/var/root/gps_unittest_logs";
      break;
    case 4:
      int v3 = "/private/var/logs/BurnIn/gps";
      break;
    default:
      int v3 = (char *)[[*this stringForKey:@"VendorLogDirectory"] UTF8String];
      break;
  }

  return sub_1000033AC(a2, v3);
}

id GpsdPreferences::vendorLogPrefixWithTimestamp(id *this)
{
  if (*((_DWORD *)this + 2) == 3) {
    return 0;
  }
  else {
    return [*this BOOLForKey:@"VendorLogPrefixWithTimestamp"];
  }
}

id GpsdPreferences::vendorLogMaxDirectorySizeMB(id *this)
{
  id v2 = [*this integerForKey:@"VendorLogMaxDirectorySizeMB"];
  if (![*this BOOLForKey:@"VendorLogQA"]) {
    return v2;
  }
  LODWORD(result) = [&off_1001105C0 intValue];
  if ((int)result <= (int)v2) {
    return (id)v2;
  }
  else {
    return (id)result;
  }
}

uint64_t GpsdPreferences::vendorLogRotationSizeMB(GpsdPreferences *this)
{
  if (*((_DWORD *)this + 2) == 3) {
    return 2000;
  }
  id v1 = [*(id *)this integerForKey:@"VendorLogRotationSizeMB"];
  if (![*(id *)this BOOLForKey:@"VendorLogQA"]) {
    return (uint64_t)v1;
  }
  LODWORD(result) = [&off_1001105C0 intValue];
  if ((int)result <= (int)v1) {
    return v1;
  }
  else {
    return result;
  }
}

id GpsdPreferences::vendorLogMaxNumberOfFiles(id *this)
{
  id v2 = [*this integerForKey:@"VendorLogMaxNumberOfFiles"];
  if (![*this BOOLForKey:@"VendorLogQA"]) {
    return v2;
  }
  LODWORD(result) = [&off_1001105D8 intValue];
  if ((int)result <= (int)v2) {
    return (id)v2;
  }
  else {
    return (id)result;
  }
}

id GpsdPreferences::vendorLogRetentionDays(id *this)
{
  return [*this floatForKey:@"VendorLogRetentionDays"];
}

id GpsdPreferences::bigPowerSwitch(id *this)
{
  return [*this BOOLForKey:@"BigPowerSwitch"];
}

id GpsdPreferences::baudRate4M8(id *this)
{
  return [*this BOOLForKey:@"BaudRate4M8"];
}

id GpsdPreferences::usesAsyncCommRead(id *this)
{
  return [*this BOOLForKey:@"UsesAsyncCommRead"];
}

void *GpsdPreferences::forceGnssDeviceLibraryName@<X0>(id *this@<X0>, void *a2@<X8>)
{
  int v3 = (char *)[[*this stringForKey:@"ForceGnssDeviceLibraryName"] UTF8String];

  return sub_1000033AC(a2, v3);
}

uint64_t sub_1000D9048(unsigned int a1)
{
  if (a1 < 9) {
    return dword_1000EADB8[a1];
  }
  int v3 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    v4[0] = 67240192;
    v4[1] = a1;
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Invalid LogLevel preference %{public}d", (uint8_t *)v4, 8u);
  }
  return 3;
}

uint64_t GpsdPreferences::getLogLevel(id *this)
{
  unsigned int v1 = [*this integerForKey:@"LogLevel"];

  return sub_1000D9048(v1);
}

uint64_t GpsdPreferences::getSecondaryLogLevel(id *this)
{
  unsigned int v1 = [*this integerForKey:@"SecondaryLogLevel"];

  return sub_1000D9048(v1);
}

uint64_t GpsdPreferences::getLogMask(id *this)
{
  uint64_t v1 = (uint64_t)[*this integerForKey:@"LogMask"];
  return v1 & ~(v1 >> 63);
}

id GpsdPreferences::getPvtmTimeOut(id *this)
{
  id v1 = [*this integerForKey:@"PvtmTimeOut"];
  id v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    v4[0] = 67109120;
    v4[1] = v1;
    _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Pref: kPvtmTimeOut = %d", (uint8_t *)v4, 8u);
  }
  return v1;
}

uint64_t GpsdPreferences::nmeaMaskOverride(id *this)
{
  id v1 = [*this stringForKey:@"NmeaMaskOverride"];
  uint64_t v4 = 0;
  [+[NSScanner scannerWithString:v1] scanHexLongLong:&v4];
  id v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::mutex buf = 134217984;
    uint64_t v6 = v4;
    _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Pref: kNmeaMaskOverride = 0x%llx", buf, 0xCu);
  }
  return v4;
}

id GpsdPreferences::enableMeasurementApi(id *this)
{
  return [*this BOOLForKey:@"EnableMeasurementApi"];
}

id GpsdPreferences::enableXocalRequests(id *this)
{
  return [*this BOOLForKey:@"EnableXocalRequests"];
}

id GpsdPreferences::forceEnableXocalLearning(id *this)
{
  return [*this BOOLForKey:@"ForceEnableXocalLearning"];
}

uint64_t GpsdPreferences::maxSchedulerQos(id *this)
{
  unsigned int v1 = [*this integerForKey:@"MaxSchedulerQos"];
  if (v1 == 2)
  {
    uint64_t v4 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)unsigned int v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Pref,maxSchedulerQos,UserInteractive", v7, 2u);
    }
    return 33;
  }
  else if (v1 == 1)
  {
    id v2 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::mutex buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Pref,maxSchedulerQos,UserInitiated", buf, 2u);
    }
    return 25;
  }
  else
  {
    uint64_t v5 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Pref,maxSchedulerQos,Default", v6, 2u);
    }
    return 21;
  }
}

id GpsdPreferences::forceDisableGpsd(id *this)
{
  return [*this BOOLForKey:@"ForceDisableGpsd"];
}

id GpsdPreferences::enableBasebandReset(id *this)
{
  return [*this BOOLForKey:@"EnableBasebandReset"];
}

id GpsdPreferences::enableProtobufBinaryLog(id *this)
{
  return [*this BOOLForKey:@"EnableProtobufBinaryLog"];
}

void *GpsdPreferences::protobufLogDirectory@<X0>(id *this@<X0>, void *a2@<X8>)
{
  int v3 = (char *)[[*this stringForKey:@"ProtobufLogDirectory"] UTF8String];

  return sub_1000033AC(a2, v3);
}

id GpsdPreferences::protobufLogRetentionDays(id *this)
{
  return [*this floatForKey:@"ProtobufLogRetentionDays"];
}

id GpsdPreferences::enableProtobufTextLog(id *this)
{
  return [*this BOOLForKey:@"EnableProtobufTextLog"];
}

id GpsdPreferences::enableInterfaceTelemetry(id *this)
{
  return [*this BOOLForKey:@"EnableInterfaceTelemetry"];
}

void *GpsdPreferences::nvStorePath@<X0>(id *this@<X0>, void *a2@<X8>)
{
  id v4 = [*this stringForKey:@"DatabasePath"];
  if (v4)
  {
    uint64_t v5 = (char *)[v4 UTF8String];
  }
  else
  {
    switch(*((_DWORD *)this + 2))
    {
      case 1:
        uint64_t v5 = "/var/root/gpstool/";
        break;
      case 2:
        uint64_t v5 = "/var/root/gpsfactorytest/";
        break;
      case 3:
        uint64_t v5 = "/var/mobile/CoreGPS_UnitTests/";
        break;
      case 4:
        uint64_t v5 = "/var/logs/BurnIn/gps/";
        break;
      default:
        uint64_t v5 = "/var/db/gpsd/";
        break;
    }
  }

  return sub_1000033AC(a2, v5);
}

void *GpsdPreferences::bundleName@<X0>(GpsdPreferences *this@<X0>, void *a2@<X8>)
{
  return sub_1000033AC(a2, off_10010F488[*((int *)this + 2)]);
}

void *GpsdPreferences::nvStoreFile@<X0>(GpsdPreferences *this@<X0>, void *a2@<X8>)
{
  int v3 = *((_DWORD *)this + 2);
  if ((v3 - 1) < 2)
  {
    id v4 = "/var/root/gpstool_nvstore.bin";
  }
  else if (v3 == 4)
  {
    id v4 = "/private/var/logs/BurnIn/gps/nvstore.bin";
  }
  else if (v3 == 3)
  {
    id v4 = "/var/mobile/CoreGPS_UnitTests_nvstore.bin";
  }
  else
  {
    id v4 = [(char *)[*(id *)this stringForKey:@"NvStoreFile"] UTF8String];
  }

  return sub_1000033AC(a2, v4);
}

id GpsdPreferences::verboseNvStore(id *this)
{
  return [*this BOOLForKey:@"VerboseNvStore"];
}

id GpsdPreferences::verboseCommDataSize(id *this)
{
  return [*this BOOLForKey:@"VerboseCommDataSize"];
}

id GpsdPreferences::verboseCommDataSniffer(id *this)
{
  return [*this BOOLForKey:@"VerboseCommDataSniffer"];
}

id GpsdPreferences::genericTestCase(id *this)
{
  return [*this integerForKey:@"GenericTestCase"];
}

id GpsdPreferences::performanceReportIntervalSeconds(id *this)
{
  return [*this integerForKey:@"PerformanceReportIntervalSeconds"];
}

id GpsdPreferences::enableL5(id *this)
{
  return [*this BOOLForKey:@"EnableL5"];
}

id GpsdPreferences::useB14LteFilterSettingsForB13(id *this)
{
  return [*this BOOLForKey:@"CoexUseB14LteFilterSettingsForB13"];
}

uint64_t GpsdPreferences::enableConstellationsBitfield(id *this)
{
  unsigned int v2 = [*this BOOLForKey:@"EnableGps"];
  if ([*this BOOLForKey:@"EnableQzss"]) {
    int v3 = 16;
  }
  else {
    int v3 = 0;
  }
  int v4 = v3 | v2;
  if ([*this BOOLForKey:@"EnableGlonass"]) {
    int v5 = 2;
  }
  else {
    int v5 = 0;
  }
  if ([*this BOOLForKey:@"EnableGalileo"]) {
    int v6 = 8;
  }
  else {
    int v6 = 0;
  }
  int v7 = v4 | v5 | v6;
  if ([*this BOOLForKey:@"EnableBeidou"]) {
    int v8 = 4;
  }
  else {
    int v8 = 0;
  }
  if ([*this BOOLForKey:@"EnableNavic"]) {
    int v9 = 32;
  }
  else {
    int v9 = 0;
  }
  return v7 | v8 | v9;
}

unint64_t GpsdPreferences::libolafCoexFlagsBitfield(id *this)
{
  unsigned int v2 = [*this BOOLForKey:@"EnableCoexBitEnhancedFreqAsst"];
  unsigned int v24 = [*this BOOLForKey:@"EnableCoexBitCdmaFineTimeAsst"];
  unsigned int v25 = [*this BOOLForKey:@"EnableCoexBitBlankingGpsL1"];
  unsigned int v3 = [*this BOOLForKey:@"EnableCoexBitBlankingGloL1"];
  unsigned int v4 = [*this BOOLForKey:@"EnableCoexBitBlankingBdsB1I"];
  unsigned int v5 = [*this BOOLForKey:@"EnableCoexBitStaticSpur"];
  unsigned int v6 = [*this BOOLForKey:@"EnableCoexBitDynamicNotch"];
  unsigned int v7 = [*this BOOLForKey:@"EnableCoexBitJammer"];
  unsigned int v8 = [*this integerForKey:@"CoexForceGpsL1Filter"];
  unsigned int v9 = [*this integerForKey:@"CoexForceGloL1Filter"];
  unsigned int v10 = [*this integerForKey:@"CoexForceB1IFilter"];
  id v11 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)std::mutex buf = 67242752;
    unsigned int v27 = v2;
    __int16 v28 = 1026;
    unsigned int v29 = v24;
    __int16 v30 = 1026;
    unsigned int v31 = v25;
    __int16 v32 = 1026;
    unsigned int v33 = v3;
    __int16 v34 = 1026;
    unsigned int v35 = v4;
    __int16 v36 = 1026;
    unsigned int v37 = v8;
    __int16 v38 = 1026;
    unsigned int v39 = v9;
    __int16 v40 = 1026;
    unsigned int v41 = v10;
    __int16 v42 = 1026;
    unsigned int v43 = v5;
    __int16 v44 = 1026;
    unsigned int v45 = v6;
    __int16 v46 = 1026;
    unsigned int v47 = v7;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "#coex,eFA,%{public}d,FTA,%{public}d,blankingGPS/GLO/B1I,%{public}d,%{public}d,%{public}d,forceFilterGPS/GLO/B1I,%{public}d,%{public}d,%{public}d,enableSpurStatic,%{public}d,enableSpurDynamic,%{public}d,enableJammer,%{public}d", buf, 0x44u);
  }
  if (v8 - 1 > 3) {
    uint64_t v12 = 30720;
  }
  else {
    uint64_t v12 = qword_1000EADE0[v8 - 1];
  }
  if (v10 - 1 > 2) {
    uint64_t v13 = 917504;
  }
  else {
    uint64_t v13 = qword_1000EAE00[v10 - 1];
  }
  uint64_t v14 = 98304;
  if (v9 == 2) {
    uint64_t v14 = 0x10000;
  }
  if (v9 == 1) {
    uint64_t v14 = 0x8000;
  }
  unint64_t v15 = 0x100000;
  if (!(v8 | v9)) {
    unint64_t v15 = (unint64_t)(v10 != 0) << 20;
  }
  uint64_t v16 = 4;
  if (!v2) {
    uint64_t v16 = 0;
  }
  uint64_t v17 = 8;
  if (!v5) {
    uint64_t v17 = 0;
  }
  uint64_t v18 = 16;
  if (!v6) {
    uint64_t v18 = 0;
  }
  uint64_t v19 = 32;
  if (!v7) {
    uint64_t v19 = 0;
  }
  uint64_t v20 = 256;
  if (!v25) {
    uint64_t v20 = 0;
  }
  uint64_t v21 = 512;
  if (!v3) {
    uint64_t v21 = 0;
  }
  uint64_t v22 = 1024;
  if (!v4) {
    uint64_t v22 = 0;
  }
  return v16 | v24 | v20 | v21 | v22 | v17 | v18 | v19 | v14 | v15 | v12 | v13;
}

id GpsdPreferences::groupDelayL1InCAChips(id *this)
{
  return [*this doubleForKey:@"GroupDelayL1InCAChips"];
}

id GpsdPreferences::externalToChipL5GroupDelayMeters(id *this)
{
  return [*this doubleForKey:@"ExternalToChipL5GroupDelayMeters"];
}

void GpsdPreferences::glonassPerFrequencyGroupDelayMeters(id *this@<X0>, char **a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  id v3 = [*this arrayForKey:@"GlonassPerFrequencyGroupDelayMeters"];
  unsigned int v4 = v3;
  if (v3 && (unint64_t)[v3 count] > 0xD)
  {
    long long v23 = 0u;
    long long v24 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    id v6 = [v4 countByEnumeratingWithState:&v21 objects:v26 count:16];
    if (v6)
    {
      unsigned int v7 = 0;
      uint64_t v8 = *(void *)v22;
      do
      {
        unsigned int v9 = 0;
        unsigned int v10 = a2[2];
        id v11 = *a2;
        do
        {
          if (*(void *)v22 != v8) {
            objc_enumerationMutation(v4);
          }
          [*(id *)(*((void *)&v21 + 1) + 8 * (void)v9) doubleValue];
          uint64_t v13 = v12;
          if (v7 >= v10)
          {
            uint64_t v14 = (v7 - v11) >> 3;
            unint64_t v15 = v14 + 1;
            if ((unint64_t)(v14 + 1) >> 61) {
              sub_100007204();
            }
            if ((v10 - v11) >> 2 > v15) {
              unint64_t v15 = (v10 - v11) >> 2;
            }
            if ((unint64_t)(v10 - v11) >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v16 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v16 = v15;
            }
            if (v16)
            {
              if (v16 >> 61) {
                sub_100007254();
              }
              uint64_t v17 = (char *)operator new(8 * v16);
            }
            else
            {
              uint64_t v17 = 0;
            }
            uint64_t v18 = &v17[8 * v14];
            *(void *)uint64_t v18 = v13;
            uint64_t v19 = v18 + 8;
            while (v7 != v11)
            {
              uint64_t v20 = *((void *)v7 - 1);
              v7 -= 8;
              *((void *)v18 - 1) = v20;
              v18 -= 8;
            }
            unsigned int v10 = &v17[8 * v16];
            *a2 = v18;
            a2[1] = v19;
            a2[2] = v10;
            if (v11) {
              operator delete(v11);
            }
            id v11 = v18;
            unsigned int v7 = v19;
          }
          else
          {
            *(void *)unsigned int v7 = v12;
            v7 += 8;
          }
          a2[1] = v7;
          unsigned int v9 = (char *)v9 + 1;
        }
        while (v9 != v6);
        id v6 = [v4 countByEnumeratingWithState:&v21 objects:v26 count:16];
      }
      while (v6);
    }
  }
  else
  {
    unsigned int v5 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::mutex buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Invalid glonassPerFrequencyGroupDelayMeters parameters", buf, 2u);
    }
  }
}

void sub_1000D9D48(_Unwind_Exception *exception_object)
{
  id v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

id GpsdPreferences::isRavenExpected(id *this)
{
  return [*this BOOLForKey:@"RavenExpected"];
}

id GpsdPreferences::forceFireExtensionsPlatform(id *this)
{
  return [*this integerForKey:@"ForceFireExtensionsPlatform"];
}

id GpsdPreferences::useInternalEmergencyStack(id *this)
{
  return [*this BOOLForKey:@"UseInternalEmergencyStack"];
}

id GpsdPreferences::debugFeaturesBitmask(id *this)
{
  id v1 = [*this integerForKey:@"DebugFeaturesBitmask"];
  unsigned int v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 134217984;
    id v5 = v1;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "debugFeaturesBitmask,0x%llx", (uint8_t *)&v4, 0xCu);
  }
  return v1;
}

void *GpsdPreferences::debugSettingsString@<X0>(id *this@<X0>, void *a2@<X8>)
{
  id v3 = [(char *)[*this stringForKey:@"DebugSettingsString"] UTF8String];

  return sub_1000033AC(a2, v3);
}

uint64_t GpsdPreferences::platformSpecificFeaturesBitmask(id *this)
{
  if (*(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) != 107) {
    return 0;
  }
  uint64_t v2 = [*this BOOLForKey:@"EnableCoexL5NotchFilter"];
  if ([*this BOOLForKey:@"HasXtalFreqJumpRisk"]) {
    return v2 | 2;
  }
  else {
    return v2;
  }
}

id GpsdPreferences::allowAssistanceTimeTo10Milliseconds(id *this)
{
  return [*this BOOLForKey:@"AllowAssistanceTimeTo10Milliseconds"];
}

void GnssHal::CommSpi::CommSpi(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = off_10010F4C0;
  sub_10001D360(a1 + 8, a2);
  id v5 = (id *)GpsdPreferences::instance(0);
  *(unsigned char *)(a1 + 40) = GpsdPreferences::verboseCommDataSize(v5);
  id v6 = (id *)GpsdPreferences::instance(0);
  unsigned __int8 v7 = GpsdPreferences::verboseCommDataSniffer(v6);
  *(_OWORD *)(a1 + 96) = 0u;
  *(unsigned char *)(a1 + 41) = v7;
  *(unsigned char *)(a1 + 42) = 0;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = a3;
  *(_OWORD *)(a1 + 112) = 0u;
  *(void *)(a1 + 128) = 0;
  uint64_t v8 = (id *)GpsdPreferences::instance(0);
  dispatch_qos_class_t v9 = GpsdPreferences::maxSchedulerQos(v8);
  gpsd::util::dispatchQueueInit((dispatch_queue_t *)(a1 + 96), v9, "commTx");
  gpsd::util::dispatchQueueInit((dispatch_queue_t *)(a1 + 104), QOS_CLASS_USER_INITIATED, "commRx");
  if (!*(void *)(a1 + 88)) {
    *(void *)(a1 + 88) = *(void *)(a1 + 104);
  }
  operator new();
}

void sub_1000DA3C0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,uint64_t a40,int a41,__int16 a42,char a43,char a44)
{
  sub_10003DF34((void *)(v44 - 112));
  operator delete();
}

void sub_1000DA4C8(uint64_t a1, int a2)
{
  if (sub_1000DA7F4(*(void *)(a1 + 112)) == a2)
  {
    int v4 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::mutex buf = 67240192;
      *(_DWORD *)uint64_t v14 = a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#spi,setGnssChipPowerStateOn,alreadyInState,%{public}d", buf, 8u);
    }
  }
  if (a2) {
    uint64_t v5 = 2;
  }
  else {
    uint64_t v5 = 1;
  }
  mach_error_t v6 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 112) + 96))(*(void *)(a1 + 112), v5);
  unsigned __int8 v7 = qword_100114840;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      dispatch_qos_class_t v9 = mach_error_string(v6);
      *(_DWORD *)std::mutex buf = 67240450;
      *(_DWORD *)uint64_t v14 = v6;
      *(_WORD *)&v14[4] = 2082;
      *(void *)&v14[6] = v9;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "#spi,fail,gpti,SetPowerState,errCode,0x%{public}X,%{public}s", buf, 0x12u);
      unsigned __int8 v7 = qword_100114840;
    }
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::mutex buf = 136446722;
      *(void *)uint64_t v14 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/HAL/Implementation/GnssHalCommSpi.mm";
      *(_WORD *)&v14[8] = 1026;
      *(_DWORD *)&v14[10] = 60;
      __int16 v15 = 2082;
      unint64_t v16 = "setGnssChipPowerStateOn";
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
    }
    sub_1000033AC(&v12, "assert");
    sub_1000033AC(&v11, "setGnssChipPowerStateOn");
    sub_1000033AC(&v10, "#spi,fail,gpti,SetPowerState,errCode,0x%{public}X,%{public}s");
    gpsd::util::triggerDiagnosticReport((uint64_t)&v12, (long long *)&v11, (long long *)&v10);
    std::string::~string(&v10);
    std::string::~string(&v11);
    std::string::~string(&v12);
    __assert_rtn("setGnssChipPowerStateOn", "GnssHalCommSpi.mm", 60, "false && \"#spi,fail,\" \"gpti,\" \"SetPowerState\" \",errCode,0x%{public}X,%{public}s\"");
  }
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::mutex buf = 67240448;
    *(_DWORD *)uint64_t v14 = a2;
    *(_WORD *)&v14[4] = 1026;
    *(_DWORD *)&v14[6] = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#spi,setGnssChipPowerStateOn,enable,%{public}d,set,%{public}d", buf, 0xEu);
  }
  if (sub_1000DA7F4(*(void *)(a1 + 112)) != a2)
  {
    uint64_t v8 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::mutex buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "#spi,setGnssChipPowerStateOn,failed", buf, 2u);
    }
  }
}

void sub_1000DA7A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1000DA7F4(uint64_t a1)
{
  int v8 = 0;
  mach_error_t v1 = (*(uint64_t (**)(uint64_t, int *))(*(void *)a1 + 104))(a1, &v8);
  uint64_t v2 = qword_100114840;
  if (v1)
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      int v4 = mach_error_string(v1);
      *(_DWORD *)std::mutex buf = 67240450;
      *(_DWORD *)std::string v10 = v1;
      *(_WORD *)&v10[4] = 2082;
      *(void *)&v10[6] = v4;
      _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "#spi,fail,gpti,GetGnssChipPowerState,errCode,0x%{public}X,%{public}s", buf, 0x12u);
      uint64_t v2 = qword_100114840;
    }
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::mutex buf = 136446722;
      *(void *)std::string v10 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/HAL/Implementation/GnssHalCommSpi.mm";
      *(_WORD *)&v10[8] = 1026;
      *(_DWORD *)&v10[10] = 70;
      __int16 v11 = 2082;
      std::string v12 = "isGnssChipPowerStateOn";
      _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
    }
    sub_1000033AC(&v7, "assert");
    sub_1000033AC(&v6, "isGnssChipPowerStateOn");
    sub_1000033AC(&v5, "#spi,fail,gpti,GetGnssChipPowerState,errCode,0x%{public}X,%{public}s");
    gpsd::util::triggerDiagnosticReport((uint64_t)&v7, (long long *)&v6, (long long *)&v5);
    std::string::~string(&v5);
    std::string::~string(&v6);
    std::string::~string(&v7);
    __assert_rtn("isGnssChipPowerStateOn", "GnssHalCommSpi.mm", 70, "false && \"#spi,fail,\" \"gpti,\" \"GetGnssChipPowerState\" \",errCode,0x%{public}X,%{public}s\"");
  }
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::mutex buf = 67240192;
    *(_DWORD *)std::string v10 = v8;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#spi,GetGnssChipPowerState,%{public}d", buf, 8u);
  }
  return v8 == 2;
}

void sub_1000DAA08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000DAA5C(void *a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(void *))(*a1 + 72))(a1);
  if (v4)
  {
    std::string v5 = a1 + 7;
    if (a1[10])
    {
      std::string v6 = qword_100114838;
      if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::mutex buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#spi,setReadCallback,overwrite", buf, 2u);
      }
    }
    sub_10003DDB0(v5, a2);
    uint64_t v7 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
    {
      __int16 v14 = 0;
      int v8 = "#spi,setReadCallback";
      dispatch_qos_class_t v9 = (uint8_t *)&v14;
      std::string v10 = v7;
      os_log_type_t v11 = OS_LOG_TYPE_INFO;
LABEL_9:
      _os_log_impl((void *)&_mh_execute_header, v10, v11, v8, v9, 2u);
    }
  }
  else
  {
    uint64_t v12 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)unint64_t v16 = 0;
      int v8 = "#spi,setReadCallback,notSupported";
      dispatch_qos_class_t v9 = v16;
      std::string v10 = v12;
      os_log_type_t v11 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_9;
    }
  }
  return v4;
}

uint64_t sub_1000DAB94(uint64_t a1)
{
  if (!(*(unsigned int (**)(uint64_t))(*(void *)a1 + 32))(a1))
  {
    id v3 = (void **)(a1 + 48);
    uint64_t v4 = *(void *)(a1 + 48);
    if (v4)
    {
      uint64_t v5 = *(void *)(a1 + 112);
      if (v5)
      {
        std::string v6 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::mutex buf = 134349312;
          *(void *)int v68 = v4;
          *(_WORD *)&v68[8] = 2050;
          *(void *)&v68[10] = v5;
          _os_log_debug_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "#spi,open,existing,plugin,%{public}p,ifc,%{public}p", buf, 0x16u);
        }
        goto LABEL_23;
      }
    }
    else
    {
      CFDictionaryRef v7 = IOServiceNameMatching("gnss");
      io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v7);
      if (!MatchingService)
      {
        __int16 v30 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)std::mutex buf = 0;
          _os_log_error_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_ERROR, "#spi,fail,IOServiceGetMatchingService", buf, 2u);
          __int16 v30 = qword_100114840;
        }
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)std::mutex buf = 136446722;
          *(void *)int v68 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/HAL/Implementation/GnssHalCommSpi.mm";
          *(_WORD *)&v68[8] = 1026;
          *(_DWORD *)&v68[10] = 127;
          *(_WORD *)&v68[14] = 2082;
          *(void *)&v68[16] = "createIoPlugin";
          _os_log_error_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
        }
        sub_1000033AC(&v66, "assert");
        sub_1000033AC(&v65, "createIoPlugin");
        sub_1000033AC(&v64, "#spi,fail,IOServiceGetMatchingService");
        gpsd::util::triggerDiagnosticReport((uint64_t)&v66, (long long *)&v65, (long long *)&v64);
        std::string::~string(&v64);
        std::string::~string(&v65);
        std::string::~string(&v66);
        __assert_rtn("createIoPlugin", "GnssHalCommSpi.mm", 127, "false && \"#spi,fail,IOServiceGetMatchingService\"");
      }
      io_registry_entry_t child = 0;
      mach_error_t ChildEntry = IORegistryEntryGetChildEntry(MatchingService, "IOService", &child);
      if (ChildEntry)
      {
        unsigned int v31 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          __int16 v32 = mach_error_string(ChildEntry);
          *(_DWORD *)std::mutex buf = 67240450;
          *(_DWORD *)int v68 = ChildEntry;
          *(_WORD *)&v68[4] = 2082;
          *(void *)&v68[6] = v32;
          _os_log_error_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_ERROR, "#spi,fail,kern,IORegistryEntryGetChildEntry,errCode,0x%{public}X,%{public}s", buf, 0x12u);
          unsigned int v31 = qword_100114840;
        }
        if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)std::mutex buf = 136446722;
          *(void *)int v68 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/HAL/Implementation/GnssHalCommSpi.mm";
          *(_WORD *)&v68[8] = 1026;
          *(_DWORD *)&v68[10] = 131;
          *(_WORD *)&v68[14] = 2082;
          *(void *)&v68[16] = "createIoPlugin";
          _os_log_error_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
        }
        sub_1000033AC(&v62, "assert");
        sub_1000033AC(&v61, "createIoPlugin");
        sub_1000033AC(&v60, "#spi,fail,kern,IORegistryEntryGetChildEntry,errCode,0x%{public}X,%{public}s");
        gpsd::util::triggerDiagnosticReport((uint64_t)&v62, (long long *)&v61, (long long *)&v60);
        std::string::~string(&v60);
        std::string::~string(&v61);
        std::string::~string(&v62);
        __assert_rtn("createIoPlugin", "GnssHalCommSpi.mm", 131, "false && \"#spi,fail,\" \"kern,\" \"IORegistryEntryGetChildEntry\" \",errCode,0x%{public}X,%{public}s\"");
      }
      SInt32 theScore = 0;
      io_service_t v10 = child;
      CFUUIDRef v11 = CFUUIDGetConstantUUIDWithBytes(kCFAllocatorSystemDefault, 0x31u, 0x68u, 0xB0u, 0x8Eu, 0xE5u, 0x7Du, 0x4Eu, 4u, 0x92u, 0xC9u, 0xC0u, 0x15u, 0xB8u, 0xB0u, 0xE9u, 0xABu);
      CFUUIDRef v12 = CFUUIDGetConstantUUIDWithBytes(0, 0xC2u, 0x44u, 0xE8u, 0x58u, 0x10u, 0x9Cu, 0x11u, 0xD4u, 0x91u, 0xD4u, 0, 0x50u, 0xE4u, 0xC6u, 0x42u, 0x6Fu);
      mach_error_t v13 = IOCreatePlugInInterfaceForService(v10, v11, v12, (IOCFPlugInInterface ***)(a1 + 48), &theScore);
      if (v13)
      {
        unsigned int v35 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          __int16 v36 = mach_error_string(v13);
          *(_DWORD *)std::mutex buf = 67240450;
          *(_DWORD *)int v68 = v13;
          *(_WORD *)&v68[4] = 2082;
          *(void *)&v68[6] = v36;
          _os_log_error_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_ERROR, "#spi,fail,kern,IOCreatePlugInInterfaceForService,errCode,0x%{public}X,%{public}s", buf, 0x12u);
          unsigned int v35 = qword_100114840;
        }
        if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)std::mutex buf = 136446722;
          *(void *)int v68 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/HAL/Implementation/GnssHalCommSpi.mm";
          *(_WORD *)&v68[8] = 1026;
          *(_DWORD *)&v68[10] = 135;
          *(_WORD *)&v68[14] = 2082;
          *(void *)&v68[16] = "createIoPlugin";
          _os_log_error_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
        }
        sub_1000033AC(&v58, "assert");
        sub_1000033AC(&v57, "createIoPlugin");
        sub_1000033AC(&v56, "#spi,fail,kern,IOCreatePlugInInterfaceForService,errCode,0x%{public}X,%{public}s");
        gpsd::util::triggerDiagnosticReport((uint64_t)&v58, (long long *)&v57, (long long *)&v56);
        std::string::~string(&v56);
        std::string::~string(&v57);
        std::string::~string(&v58);
        __assert_rtn("createIoPlugin", "GnssHalCommSpi.mm", 135, "false && \"#spi,fail,\" \"kern,\" \"IOCreatePlugInInterfaceForService\" \",errCode,0x%{public}X,%{public}s\"");
      }
      __int16 v14 = *v3;
      if (!*v3 || !*v14)
      {
        unsigned int v29 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)std::mutex buf = 0;
          _os_log_error_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_ERROR, "#spi,fIOCFPluginInterface,nullptr", buf, 2u);
          unsigned int v29 = qword_100114840;
        }
        if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)std::mutex buf = 136446722;
          *(void *)int v68 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/HAL/Implementation/GnssHalCommSpi.mm";
          *(_WORD *)&v68[8] = 1026;
          *(_DWORD *)&v68[10] = 136;
          *(_WORD *)&v68[14] = 2082;
          *(void *)&v68[16] = "createIoPlugin";
          _os_log_error_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
        }
        sub_1000033AC(&v55, "assert");
        sub_1000033AC(&v54, "createIoPlugin");
        sub_1000033AC(&v53, "#spi,fIOCFPluginInterface,nullptr");
        gpsd::util::triggerDiagnosticReport((uint64_t)&v55, (long long *)&v54, (long long *)&v53);
        std::string::~string(&v53);
        std::string::~string(&v54);
        std::string::~string(&v55);
        __assert_rtn("createIoPlugin", "GnssHalCommSpi.mm", 136, "false && \"#spi,fIOCFPluginInterface,nullptr\"");
      }
      __int16 v15 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::mutex buf = 134349312;
        *(void *)int v68 = v14;
        *(_WORD *)&v68[8] = 1026;
        *(_DWORD *)&v68[10] = theScore;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#spi,opened,plugin,%{public}p,score,%{public}d", buf, 0x12u);
      }
      unint64_t v16 = *(void **)(a1 + 112);
      if (v16)
      {
LABEL_22:
        if (*v16)
        {
LABEL_23:
          sub_1000DA4C8(a1, 0);
          sub_1000DA4C8(a1, 1);
          *(unsigned char *)(a1 + 42) = 1;
          return 1;
        }
LABEL_25:
        __int16 v28 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)std::mutex buf = 0;
          _os_log_error_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_ERROR, "#spi,open,failed,fGNSSPassthroughInterface,nullptr", buf, 2u);
          __int16 v28 = qword_100114840;
        }
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)std::mutex buf = 136446722;
          *(void *)int v68 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/HAL/Implementation/GnssHalCommSpi.mm";
          *(_WORD *)&v68[8] = 1026;
          *(_DWORD *)&v68[10] = 149;
          *(_WORD *)&v68[14] = 2082;
          *(void *)&v68[16] = "createIoPlugin";
          _os_log_error_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
        }
        sub_1000033AC(&v43, "assert");
        sub_1000033AC(&v42, "createIoPlugin");
        sub_1000033AC(&v41, "#spi,open,failed,fGNSSPassthroughInterface,nullptr");
        gpsd::util::triggerDiagnosticReport((uint64_t)&v43, (long long *)&v42, (long long *)&v41);
        std::string::~string(&v41);
        std::string::~string(&v42);
        std::string::~string(&v43);
        __assert_rtn("createIoPlugin", "GnssHalCommSpi.mm", 149, "false && \"#spi,open,failed,fGNSSPassthroughInterface,nullptr\"");
      }
    }
    uint64_t v17 = *(void *)(a1 + 48);
    uint64_t v18 = *(void (**)(uint64_t, void, void, uint64_t))(*(void *)v17 + 8);
    CFUUIDRef v19 = CFUUIDGetConstantUUIDWithBytes(kCFAllocatorSystemDefault, 0xE8u, 0x77u, 0xCDu, 0x61u, 0x8Du, 0x30u, 0x46u, 0x2Du, 0xA3u, 0xB7u, 0xB0u, 0x11u, 0x5Au, 0x2Cu, 0xF8u, 0xA8u);
    CFUUIDBytes v20 = CFUUIDGetUUIDBytes(v19);
    long long v21 = (void *)(a1 + 112);
    v18(v17, *(void *)&v20.byte0, *(void *)&v20.byte8, a1 + 112);
    (*(void (**)(void))(**(void **)(a1 + 48) + 24))(*(void *)(a1 + 48));
    long long v22 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      long long v23 = (void *)*v21;
      *(_DWORD *)std::mutex buf = 134349056;
      *(void *)int v68 = v23;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "#spi,opened,ifc,%{public}p", buf, 0xCu);
    }
    mach_error_t v24 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 112) + 64))(*(void *)(a1 + 112), *(void *)(a1 + 104));
    if (v24)
    {
      unsigned int v33 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        __int16 v34 = mach_error_string(v24);
        *(_DWORD *)std::mutex buf = 67240450;
        *(_DWORD *)int v68 = v24;
        *(_WORD *)&v68[4] = 2082;
        *(void *)&v68[6] = v34;
        _os_log_error_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_ERROR, "#spi,fail,gpti,SetDispatchQueue,errCode,0x%{public}X,%{public}s", buf, 0x12u);
        unsigned int v33 = qword_100114840;
      }
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::mutex buf = 136446722;
        *(void *)int v68 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/HAL/Implementation/GnssHalCommSpi.mm";
        *(_WORD *)&v68[8] = 1026;
        *(_DWORD *)&v68[10] = 144;
        *(_WORD *)&v68[14] = 2082;
        *(void *)&v68[16] = "createIoPlugin";
        _os_log_error_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
      }
      sub_1000033AC(&v52, "assert");
      sub_1000033AC(&v51, "createIoPlugin");
      sub_1000033AC(&v50, "#spi,fail,gpti,SetDispatchQueue,errCode,0x%{public}X,%{public}s");
      gpsd::util::triggerDiagnosticReport((uint64_t)&v52, (long long *)&v51, (long long *)&v50);
      std::string::~string(&v50);
      std::string::~string(&v51);
      std::string::~string(&v52);
      __assert_rtn("createIoPlugin", "GnssHalCommSpi.mm", 144, "false && \"#spi,fail,\" \"gpti,\" \"SetDispatchQueue\" \",errCode,0x%{public}X,%{public}s\"");
    }
    mach_error_t v25 = (*(uint64_t (**)(void, void, uint64_t))(**(void **)(a1 + 112) + 72))(*(void *)(a1 + 112), sub_1000DBCB8, a1);
    if (v25)
    {
      unsigned int v37 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        __int16 v38 = mach_error_string(v25);
        *(_DWORD *)std::mutex buf = 67240450;
        *(_DWORD *)int v68 = v25;
        *(_WORD *)&v68[4] = 2082;
        *(void *)&v68[6] = v38;
        _os_log_error_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_ERROR, "#spi,fail,gpti,RegisterDataHandler,errCode,0x%{public}X,%{public}s", buf, 0x12u);
        unsigned int v37 = qword_100114840;
      }
      if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::mutex buf = 136446722;
        *(void *)int v68 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/HAL/Implementation/GnssHalCommSpi.mm";
        *(_WORD *)&v68[8] = 1026;
        *(_DWORD *)&v68[10] = 145;
        *(_WORD *)&v68[14] = 2082;
        *(void *)&v68[16] = "createIoPlugin";
        _os_log_error_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
      }
      sub_1000033AC(&v49, "assert");
      sub_1000033AC(&v48, "createIoPlugin");
      sub_1000033AC(&v47, "#spi,fail,gpti,RegisterDataHandler,errCode,0x%{public}X,%{public}s");
      gpsd::util::triggerDiagnosticReport((uint64_t)&v49, (long long *)&v48, (long long *)&v47);
      std::string::~string(&v47);
      std::string::~string(&v48);
      std::string::~string(&v49);
      __assert_rtn("createIoPlugin", "GnssHalCommSpi.mm", 145, "false && \"#spi,fail,\" \"gpti,\" \"RegisterDataHandler\" \",errCode,0x%{public}X,%{public}s\"");
    }
    mach_error_t v26 = (*(uint64_t (**)(void, void (*)(const char *, int, gpsd::util *, const unsigned __int8 *), uint64_t))(**(void **)(a1 + 112) + 88))(*(void *)(a1 + 112), sub_1000DBF70, a1);
    if (v26)
    {
      unsigned int v39 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        __int16 v40 = mach_error_string(v26);
        *(_DWORD *)std::mutex buf = 67240450;
        *(_DWORD *)int v68 = v26;
        *(_WORD *)&v68[4] = 2082;
        *(void *)&v68[6] = v40;
        _os_log_error_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_ERROR, "#spi,fail,gpti,RegisterEventHandler,errCode,0x%{public}X,%{public}s", buf, 0x12u);
        unsigned int v39 = qword_100114840;
      }
      if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::mutex buf = 136446722;
        *(void *)int v68 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/HAL/Implementation/GnssHalCommSpi.mm";
        *(_WORD *)&v68[8] = 1026;
        *(_DWORD *)&v68[10] = 146;
        *(_WORD *)&v68[14] = 2082;
        *(void *)&v68[16] = "createIoPlugin";
        _os_log_error_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
      }
      sub_1000033AC(&v46, "assert");
      sub_1000033AC(&v45, "createIoPlugin");
      sub_1000033AC(&v44, "#spi,fail,gpti,RegisterEventHandler,errCode,0x%{public}X,%{public}s");
      gpsd::util::triggerDiagnosticReport((uint64_t)&v46, (long long *)&v45, (long long *)&v44);
      std::string::~string(&v44);
      std::string::~string(&v45);
      std::string::~string(&v46);
      __assert_rtn("createIoPlugin", "GnssHalCommSpi.mm", 146, "false && \"#spi,fail,\" \"gpti,\" \"RegisterEventHandler\" \",errCode,0x%{public}X,%{public}s\"");
    }
    unint64_t v16 = (void *)*v21;
    if (!*v21) {
      goto LABEL_25;
    }
    goto LABEL_22;
  }
  uint64_t v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::mutex buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#spi,open,alreadyOpen", buf, 2u);
  }
  return 1;
}

void sub_1000DB9E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  if (a31 < 0) {
    operator delete(a26);
  }
  if (a37 < 0) {
    operator delete(a32);
  }
  _Unwind_Resume(a1);
}

void sub_1000DBC14(unsigned char *a1)
{
  if ((*(uint64_t (**)(unsigned char *))(*(void *)a1 + 32))(a1))
  {
    sub_1000DA4C8((uint64_t)a1, 0);
    a1[42] = 0;
  }
  else
  {
    uint64_t v2 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#spi,close,notOpen", v3, 2u);
    }
  }
}

void sub_1000DBCB8(uint64_t a1, char *a2, int64_t a3)
{
  if (a2 && a3)
  {
    if (!a1)
    {
      dispatch_qos_class_t v9 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)blocuint64_t k = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "#spi,readCallback,commSpiObj,null", block, 2u);
        dispatch_qos_class_t v9 = qword_100114840;
      }
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)blocuint64_t k = 136446722;
        *(void *)&void block[4] = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/HAL/Implementation/GnssHalCommSpi.mm";
        *(_WORD *)&block[12] = 1026;
        *(_DWORD *)&block[14] = 165;
        *(_WORD *)&block[18] = 2082;
        *(void *)&block[20] = "readCallback";
        _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", block, 0x1Cu);
      }
      sub_1000033AC(&v12, "assert");
      sub_1000033AC(&v11, "readCallback");
      sub_1000033AC(&v10, "#spi,readCallback,commSpiObj,null");
      gpsd::util::triggerDiagnosticReport((uint64_t)&v12, (long long *)&v11, (long long *)&v10);
      std::string::~string(&v10);
      std::string::~string(&v11);
      std::string::~string(&v12);
      __assert_rtn("readCallback", "GnssHalCommSpi.mm", 165, "false && \"#spi,readCallback,commSpiObj,null\"");
    }
    sub_1000DC210(*(void *)(a1 + 128), a2, a3);
    std::string v6 = *(NSObject ***)(a1 + 128);
    CFDictionaryRef v7 = *v6;
    *(void *)blocuint64_t k = _NSConcreteStackBlock;
    *(void *)&block[8] = 3221225472;
    *(void *)&block[16] = sub_1000DD018;
    *(void *)&block[24] = &unk_100104D40;
    __int16 v14 = v6;
    dispatch_async(v7, block);
  }
  else
  {
    int v8 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)blocuint64_t k = 134349312;
      *(void *)&void block[4] = a2;
      *(_WORD *)&block[12] = 2050;
      *(void *)&block[14] = a3;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#spi,read,invalid,data,%{public}p,size,%{public}zu", block, 0x16u);
    }
  }
}

void sub_1000DBF1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000DBF70(const char *a1, int a2, gpsd::util *a3, const unsigned __int8 *a4)
{
  uint64_t v4 = qword_100114840;
  if (!a1)
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::mutex buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "#spi,eventCallback,commSpiObj,null", buf, 2u);
      uint64_t v4 = qword_100114840;
    }
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::mutex buf = 136446722;
      *(void *)__int16 v15 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/HAL/Implementation/GnssHalCommSpi.mm";
      *(_WORD *)&v15[8] = 1026;
      *(_DWORD *)&v15[10] = 194;
      __int16 v16 = 2082;
      uint64_t v17 = "eventCallback";
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
    }
    sub_1000033AC(&v13, "assert");
    sub_1000033AC(&v12, "eventCallback");
    sub_1000033AC(&v11, "#spi,eventCallback,commSpiObj,null");
    gpsd::util::triggerDiagnosticReport((uint64_t)&v13, (long long *)&v12, (long long *)&v11);
    std::string::~string(&v11);
    std::string::~string(&v12);
    std::string::~string(&v13);
    __assert_rtn("eventCallback", "GnssHalCommSpi.mm", 194, "false && \"#spi,eventCallback,commSpiObj,null\"");
  }
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
  {
    gpsd::util::charToHex(a3, a4, 0, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::mutex buf = 67241218;
    *(_DWORD *)__int16 v15 = a2;
    *(_WORD *)&v15[4] = 2082;
    *(void *)&v15[6] = p_p;
    __int16 v16 = 2050;
    uint64_t v17 = a1;
    __int16 v18 = 2050;
    CFUUIDRef v19 = a3;
    __int16 v20 = 2050;
    long long v21 = a4;
    _os_log_fault_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "#spi,eventCallback,type,%{public}d,data,hex,%{public}s,context,%{public}p,eventp,%{public}p,size,%{public}zu", buf, 0x30u);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1000DC1BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000DC210(uint64_t a1, char *a2, int64_t a3)
{
  if (a3)
  {
    __int16 v34 = (std::mutex *)(a1 + 40);
    std::mutex::lock((std::mutex *)(a1 + 40));
    std::string v6 = *(char **)(a1 + 104);
    CFDictionaryRef v7 = *(char **)(a1 + 112);
    int v8 = (void *)(*(void *)(a1 + 120) - (void)v6);
    int64_t v9 = v7 - v6;
    if ((unint64_t)v8 < v7 - v6 + a3)
    {
      std::string v10 = qword_100114838;
      if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::mutex buf = 134349568;
        *(void *)&uint8_t buf[4] = v6;
        *(_WORD *)&unsigned char buf[12] = 2050;
        *(void *)&buf[14] = v7 - v6 + a3;
        *(_WORD *)&buf[22] = 2050;
        __int16 v36 = v8;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#spi,ab,overflow,@%{public}p,sz,%{public}zu,cap,%{public}zu", buf, 0x20u);
        std::string v6 = *(char **)(a1 + 104);
        CFDictionaryRef v7 = *(char **)(a1 + 112);
        int64_t v9 = v7 - v6;
      }
    }
    if (a3 < 1) {
      goto LABEL_44;
    }
    std::string v11 = &v6[v9];
    uint64_t v12 = *(void *)(a1 + 120);
    if (v12 - (uint64_t)v7 < a3)
    {
      uint64_t v13 = v7 - v6 + a3;
      if (v13 < 0) {
        sub_100007204();
      }
      unint64_t v14 = v12 - (void)v6;
      if (2 * v14 > v13) {
        uint64_t v13 = 2 * v14;
      }
      if (v14 >= 0x3FFFFFFFFFFFFFFFLL) {
        size_t v15 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        size_t v15 = v13;
      }
      if (v15) {
        __int16 v16 = (char *)operator new(v15);
      }
      else {
        __int16 v16 = 0;
      }
      __int16 v28 = &v16[v9];
      memcpy(&v16[v9], a2, a3);
      if (v7 == v6)
      {
        unsigned int v29 = &v16[v9];
      }
      else
      {
        do
        {
          v16[v9 - 1] = v6[v9 - 1];
          --v9;
        }
        while (v9);
        CFDictionaryRef v7 = *(char **)(a1 + 112);
        unsigned int v29 = v16;
      }
      __int16 v30 = &v28[a3];
      unsigned int v31 = &v16[v15];
      if (v7 != v11) {
        memmove(v30, v11, v7 - v11);
      }
      __int16 v32 = *(void **)(a1 + 104);
      *(void *)(a1 + 104) = v29;
      *(void *)(a1 + 112) = &v30[v7 - v11];
      *(void *)(a1 + 120) = v31;
      if (v32) {
        operator delete(v32);
      }
      goto LABEL_44;
    }
    __int16 v18 = &a2[a3];
    uint64_t v19 = v7 - v11;
    if (v7 - v11 >= a3)
    {
      __int16 v20 = v7;
    }
    else
    {
      memmove(v7, &a2[v19], a3 - v19);
      __int16 v20 = &v11[a3];
      *(void *)(a1 + 112) = &v11[a3];
      if (v19 < 1)
      {
LABEL_44:
        if (((*(void *)(a1 + 112) - *(void *)(a1 + 104)) & 0x7FFFFFFFFFFFF800) != 0)
        {
          unsigned int v33 = *(NSObject **)a1;
          *(void *)std::mutex buf = _NSConcreteStackBlock;
          *(void *)&uint8_t buf[8] = 3221225472;
          *(void *)&uint8_t buf[16] = sub_1000DD018;
          __int16 v36 = &unk_100104D40;
          uint64_t v37 = a1;
          dispatch_async(v33, buf);
        }
        std::mutex::unlock(v34);
        return;
      }
      __int16 v18 = &a2[v19];
    }
    long long v21 = &v11[a3];
    long long v22 = v20;
    if (&v20[-a3] < v7)
    {
      if (a3 <= v19) {
        int64_t v23 = v7 - v11;
      }
      else {
        int64_t v23 = a3;
      }
      mach_error_t v24 = &v7[a3 - v9];
      mach_error_t v25 = &v6[v9 - a3];
      mach_error_t v26 = &v6[v9];
      do
      {
        v26[v23] = v25[v23];
        --v24;
        ++v25;
        ++v26;
      }
      while (&v6[v23] != v24);
      if (a3 <= v19) {
        int64_t v27 = v7 - v11;
      }
      else {
        int64_t v27 = a3;
      }
      long long v22 = &v26[v27];
    }
    *(void *)(a1 + 112) = v22;
    if (v20 != v21) {
      memmove(&v11[a3], &v6[v9], v20 - v21);
    }
    if (v18 != a2) {
      memmove(&v6[v9], a2, v18 - a2);
    }
    goto LABEL_44;
  }
  uint64_t v17 = qword_100114838;
  if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::mutex buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "#spi,ab,input,zerosize", buf, 2u);
  }
}

void sub_1000DC594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10)
{
}

unsigned __int8 *sub_1000DC5A8(uint64_t a1, gpsd::util *this, unsigned __int8 *a3, const char *a4)
{
  if (*(unsigned char *)(a1 + 41)) {
    gpsd::util::logBinaryBytes(this, a3, (uint64_t)"#spi,hal,write,bin", a4);
  }
  if (*(unsigned char *)(a1 + 40)) {
    double v7 = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)a1) * 0.000000001;
  }
  else {
    double v7 = 0.0;
  }
  sub_1000DC210(*(void *)(a1 + 120), (char *)this, (int64_t)a3);
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t MachContinuousTimeNs = gpsd::util::getMachContinuousTimeNs(v8);
    std::string v10 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      int v12 = 134218240;
      uint64_t v13 = a3;
      __int16 v14 = 2048;
      double v15 = ((double)MachContinuousTimeNs * 0.000000001 - v7) * 1000000.0;
      _os_log_debug_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "#spi,hal,write,size,%zu,duration,us,%.1f", (uint8_t *)&v12, 0x16u);
    }
  }
  return a3;
}

BOOL sub_1000DC6F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
  return v4 >= 0 && v4 == a3;
}

uint64_t sub_1000DC744(uint64_t a1)
{
  mach_error_t v1 = *(NSObject ***)(a1 + 128);
  uint64_t v2 = *v1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000DD018;
  block[3] = &unk_100104D40;
  void block[4] = v1;
  dispatch_async(v2, block);
  return 1;
}

uint64_t sub_1000DC7BC(uint64_t a1)
{
  uint64_t v2 = *(NSObject ***)(a1 + 128);
  id v3 = *v2;
  blocuint64_t k = _NSConcreteStackBlock;
  uint64_t v8 = 3221225472;
  int64_t v9 = sub_1000DD018;
  std::string v10 = &unk_100104D40;
  std::string v11 = v2;
  dispatch_async(v3, &block);
  uint64_t v4 = *(NSObject ***)(a1 + 120);
  uint64_t v5 = *v4;
  blocuint64_t k = _NSConcreteStackBlock;
  uint64_t v8 = 3221225472;
  int64_t v9 = sub_1000DD018;
  std::string v10 = &unk_100104D40;
  std::string v11 = v4;
  dispatch_async(v5, &block);
  return 1;
}

void sub_1000DC890(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = 0;
  __int16 v20 = 0;
  mach_error_t v5 = (*(uint64_t (**)(void, gpsd::util **, gpsd::util **))(**(void **)(a1 + 112) + 112))(*(void *)(a1 + 112), &v19, &v20);
  if (v5)
  {
    uint64_t v13 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      __int16 v14 = mach_error_string(v5);
      *(_DWORD *)std::mutex buf = 67240450;
      *(_DWORD *)long long v22 = v5;
      *(_WORD *)&v22[4] = 2082;
      *(void *)&v22[6] = v14;
      _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "#spi,fail,gpti,pulseTimeMarkStrobe,errCode,0x%{public}X,%{public}s", buf, 0x12u);
      uint64_t v13 = qword_100114840;
    }
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::mutex buf = 136446722;
      *(void *)long long v22 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/HAL/Implementation/GnssHalCommSpi.mm";
      *(_WORD *)&v22[8] = 1026;
      *(_DWORD *)&v22[10] = 272;
      *(_WORD *)&v22[14] = 2082;
      *(void *)&v22[16] = "pulseTimeMarkStrobe";
      _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
    }
    sub_1000033AC(&v18, "assert");
    sub_1000033AC(&v17, "pulseTimeMarkStrobe");
    sub_1000033AC(&v16, "#spi,fail,gpti,pulseTimeMarkStrobe,errCode,0x%{public}X,%{public}s");
    gpsd::util::triggerDiagnosticReport((uint64_t)&v18, (long long *)&v17, (long long *)&v16);
    std::string::~string(&v16);
    std::string::~string(&v17);
    std::string::~string(&v18);
    __assert_rtn("pulseTimeMarkStrobe", "GnssHalCommSpi.mm", 272, "false && \"#spi,fail,\" \"gpti,\" \"pulseTimeMarkStrobe\" \",errCode,0x%{public}X,%{public}s\"");
  }
  double v15 = 0;
  if (gpsd::util::getCurrentMachContinuousMinusMachAbsoluteTicks((gpsd::util *)&v15, v4))
  {
    if (*(void *)(a1 + 32)) {
      sub_100040A34(a1 + 8, v19 - v15, v20 - v15);
    }
    unint64_t v6 = gpsd::util::convertMachTimeInTicksToNs((unint64_t)v19);
    *(void *)a2 = v6;
    unint64_t v7 = gpsd::util::convertMachTimeInTicksToNs((unint64_t)v20);
    *(void *)(a2 + 8) = v7;
    *(unsigned char *)(a2 + 16) = 1;
    uint64_t v8 = qword_100114840;
    BOOL v9 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG);
    if (v9)
    {
      unint64_t MachContinuousTimeNs = gpsd::util::getMachContinuousTimeNs((gpsd::util *)v9);
      unint64_t v11 = gpsd::util::convertMachTimeInTicksToNs((unint64_t)v15);
      *(_DWORD *)std::mutex buf = 134349824;
      *(void *)long long v22 = v6;
      *(_WORD *)&v22[8] = 2050;
      *(void *)&v22[10] = v7;
      *(_WORD *)&v22[18] = 2050;
      *(void *)&v22[20] = MachContinuousTimeNs;
      __int16 v23 = 2050;
      unint64_t v24 = v11;
      _os_log_debug_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "#spi,#tt,pulseTimeMarkStrobe,low,ns,%{public}llu,upper,ns,%{public}llu,current,ns,%{public}llu,machContMinusMachAbs,ns,%{public}llu", buf, 0x2Au);
    }
  }
  else
  {
    int v12 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::mutex buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "#spi,#tt,pulseTimeMarkStrobe,offset,failed", buf, 2u);
    }
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
  }
}

void sub_1000DCB8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000DCBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = a2;
  sub_10003E064(a1 + 8, a3);
  *(void *)(a1 + 40) = 850045863;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(void *)(a1 + 144) = 0;
  if (!*(void *)a1)
  {
    unint64_t v6 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::mutex buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "#spi,ab,queue,null", buf, 2u);
      unint64_t v6 = qword_100114840;
    }
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::mutex buf = 136446722;
      unint64_t v24 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/HAL/Implementation/GnssHalCommSpi.mm";
      __int16 v25 = 1026;
      int v26 = 305;
      __int16 v27 = 2082;
      __int16 v28 = "AsyncBuffering";
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
    }
    sub_1000033AC(v21, "assert");
    sub_1000033AC(v19, "AsyncBuffering");
    sub_1000033AC(__p, "#spi,ab,queue,null");
    gpsd::util::triggerDiagnosticReport((uint64_t)v21, (long long *)v19, (long long *)__p);
    if (v18 < 0) {
      operator delete(__p[0]);
    }
    if (v20 < 0) {
      operator delete(v19[0]);
    }
    unint64_t v7 = "false && \"#spi,ab,queue,null\"";
    int v8 = 305;
    if (v22 < 0)
    {
      BOOL v9 = (void **)v21;
LABEL_24:
      operator delete(*v9);
    }
LABEL_25:
    __assert_rtn("AsyncBuffering", "GnssHalCommSpi.mm", v8, v7);
  }
  if (!*(void *)(a3 + 24))
  {
    std::string v10 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::mutex buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "#spi,ab,cb,null", buf, 2u);
      std::string v10 = qword_100114840;
    }
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::mutex buf = 136446722;
      unint64_t v24 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/HAL/Implementation/GnssHalCommSpi.mm";
      __int16 v25 = 1026;
      int v26 = 306;
      __int16 v27 = 2082;
      __int16 v28 = "AsyncBuffering";
      _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
    }
    sub_1000033AC(v15, "assert");
    sub_1000033AC(v13, "AsyncBuffering");
    sub_1000033AC(v11, "#spi,ab,cb,null");
    gpsd::util::triggerDiagnosticReport((uint64_t)v15, (long long *)v13, (long long *)v11);
    if (v12 < 0) {
      operator delete(v11[0]);
    }
    if (v14 < 0) {
      operator delete(v13[0]);
    }
    unint64_t v7 = "false && \"#spi,ab,cb,null\"";
    int v8 = 306;
    if (v16 < 0)
    {
      BOOL v9 = (void **)v15;
      goto LABEL_24;
    }
    goto LABEL_25;
  }
  sub_100017B68((unint64_t *)(a1 + 104), 0x1000uLL);
  sub_100017B68((unint64_t *)(a1 + 128), 0x1000uLL);
  return a1;
}

void sub_1000DCF50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,uint64_t a40,int a41,__int16 a42,char a43,char a44)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  std::string v50 = *v48;
  if (*v48)
  {
    *(void *)(v44 + 136) = v50;
    operator delete(v50);
  }
  std::string v51 = *v47;
  if (*v47)
  {
    *(void *)(v44 + 112) = v51;
    operator delete(v51);
  }
  std::mutex::~mutex(v46);
  sub_10003DF34(v45);
  _Unwind_Resume(a1);
}

void sub_1000DD018(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  std::mutex::lock((std::mutex *)(v1 + 40));
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 112);
  if (v2 == v3)
  {
    std::mutex::unlock((std::mutex *)(v1 + 40));
  }
  else
  {
    *(_OWORD *)(v1 + 104) = *(_OWORD *)(v1 + 128);
    uint64_t v4 = *(void *)(v1 + 144);
    uint64_t v5 = *(void *)(v1 + 120);
    *(void *)(v1 + 136) = v3;
    *(void *)(v1 + 144) = v5;
    *(void *)(v1 + 120) = v4;
    *(void *)(v1 + 128) = v2;
    std::mutex::unlock((std::mutex *)(v1 + 40));
    sub_10003DEB0(v1 + 8, *(void *)(v1 + 128), *(void *)(v1 + 136) - *(void *)(v1 + 128));
    uint64_t v6 = *(void *)(v1 + 128);
    if (*(void *)(v1 + 136) != v6) {
      *(void *)(v1 + 136) = v6;
    }
    unint64_t v7 = *(NSObject **)v1;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000DD018;
    block[3] = &unk_100104D40;
    void block[4] = v1;
    dispatch_async(v7, block);
  }
}

void sub_1000DD114(uint64_t a1)
{
  sub_1000DD194(a1);

  operator delete();
}

uint64_t sub_1000DD14C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 42);
}

uint64_t sub_1000DD154()
{
  return 0xFFFFFFFFLL;
}

uint64_t sub_1000DD15C()
{
  return 0;
}

uint64_t sub_1000DD164()
{
  return -1;
}

uint64_t sub_1000DD16C()
{
  return 0;
}

uint64_t sub_1000DD174()
{
  return 1;
}

uint64_t sub_1000DD17C()
{
  return 0;
}

uint64_t sub_1000DD184()
{
  return 0;
}

double sub_1000DD18C()
{
  return 0.0;
}

uint64_t sub_1000DD194(uint64_t a1)
{
  *(void *)a1 = off_10010F4C0;
  sub_1000DBC14((unsigned char *)a1);
  uint64_t v2 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = 0;
  if (v2) {
    sub_1000DD20C(v2);
  }
  uint64_t v3 = *(void *)(a1 + 120);
  *(void *)(a1 + 120) = 0;
  if (v3) {
    sub_1000DD20C(v3);
  }
  sub_10003DF34((void *)(a1 + 56));
  sub_100018B88((void *)(a1 + 8));
  return a1;
}

void sub_1000DD20C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 128);
  if (v2)
  {
    *(void *)(a1 + 136) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *(void **)(a1 + 104);
  if (v3)
  {
    *(void *)(a1 + 112) = v3;
    operator delete(v3);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 40));
  sub_10003DF34((void *)(a1 + 8));

  operator delete();
}

void sub_1000DD284()
{
}

void *sub_1000DD298(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = off_10010F580;
  result[1] = v3;
  return result;
}

uint64_t sub_1000DD2E0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_10010F580;
  a2[1] = v2;
  return result;
}

void sub_1000DD30C(uint64_t a1, gpsd::util **a2, const unsigned __int8 **a3, const char *a4)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t v6 = *(void *)(a1 + 8);
  if (*(unsigned char *)(v6 + 41)) {
    gpsd::util::logBinaryBytes(*a2, v5, (uint64_t)"#spi,write,bin", a4);
  }
  unint64_t v7 = (gpsd::util *)(*(uint64_t (**)(uint64_t))(*(void *)v6 + 32))(v6);
  if (v7)
  {
    if (v4) {
      BOOL v9 = v5 == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (v9)
    {
      std::string v10 = qword_100114838;
      if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::mutex buf = 134349312;
        *(void *)int v26 = v4;
        *(_WORD *)&v26[8] = 2050;
        *(void *)&v26[10] = v5;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "$spi,write,invalid,buffer,%{public}p,size,%{public}zu", buf, 0x16u);
      }
    }
    else
    {
      if (*(unsigned char *)(v6 + 40)) {
        double v12 = (double)gpsd::util::getMachContinuousTimeNs(v7) * 0.000000001;
      }
      else {
        double v12 = 0.0;
      }
      uint64_t v13 = (gpsd::util *)(*(uint64_t (**)(void, gpsd::util *, const unsigned __int8 *))(**(void **)(v6 + 112) + 80))(*(void *)(v6 + 112), v4, v5);
      if (v13)
      {
        mach_error_t v14 = (int)v13;
        unint64_t MachContinuousTimeNs = gpsd::util::getMachContinuousTimeNs(v13);
        int v16 = *(_DWORD *)(v6 + 44) + 1;
        *(_DWORD *)(v6 + 44) = v16;
        std::string v17 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
        {
          long long v21 = mach_error_string(v14);
          int v22 = *(_DWORD *)(v6 + 44);
          *(_DWORD *)std::mutex buf = 67241474;
          *(_DWORD *)int v26 = v14;
          *(_WORD *)&v26[4] = 2082;
          *(void *)&v26[6] = v21;
          *(_WORD *)&v26[14] = 1026;
          *(_DWORD *)&v26[16] = v22;
          *(_WORD *)&v26[20] = 1026;
          *(_DWORD *)&v26[22] = 5;
          __int16 v27 = 2050;
          __int16 v28 = v5;
          __int16 v29 = 2050;
          double v30 = ((double)MachContinuousTimeNs * 0.000000001 - v12) * 1000000.0;
          _os_log_fault_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_FAULT, "#spi,write,failed,%{public}X,%{public}s,count,%{public}d/%{public}d,size,%{public}zu,duration,us,%{public}.1f", buf, 0x32u);
          int v16 = *(_DWORD *)(v6 + 44);
        }
        if (v16 >= 5)
        {
          char v18 = qword_100114840;
          if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)std::mutex buf = 0;
            _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "#spi,continuousWriteError", buf, 2u);
            char v18 = qword_100114840;
          }
          if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)std::mutex buf = 136446722;
            *(void *)int v26 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/HAL/Implementation/GnssHalCommSpi.mm";
            *(_WORD *)&v26[8] = 1026;
            *(_DWORD *)&v26[10] = 223;
            *(_WORD *)&v26[14] = 2082;
            *(void *)&v26[16] = "writeInternal";
            _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
          }
          sub_1000033AC(buf, "assert");
          sub_1000033AC(&v24, "writeInternal");
          sub_1000033AC(&v23, "#spi,continuousWriteError");
          gpsd::util::triggerDiagnosticReport((uint64_t)buf, (long long *)&v24, (long long *)&v23);
          std::string::~string(&v23);
          std::string::~string(&v24);
          std::string::~string((std::string *)buf);
          __assert_rtn("writeInternal", "GnssHalCommSpi.mm", 223, "false && \"#spi,continuousWriteError\"");
        }
      }
      else
      {
        *(_DWORD *)(v6 + 44) = 0;
        if (*(unsigned char *)(v6 + 40))
        {
          double v19 = ((double)gpsd::util::getMachContinuousTimeNs(v13) * 0.000000001 - v12) * 1000000.0;
          char v20 = qword_100114840;
          if (v19 > (double)(unint64_t)(8 * (void)v5) / 5.0 + 100000.0
            && os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
          {
            *(_DWORD *)std::mutex buf = 134349312;
            *(void *)int v26 = v5;
            *(_WORD *)&v26[8] = 2050;
            *(double *)&v26[10] = v19;
            _os_log_fault_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_FAULT, "#spi,write,longDelay,size,%{public}zu,duration,us,%{public}.1f", buf, 0x16u);
            char v20 = qword_100114840;
          }
          if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)std::mutex buf = 134349312;
            *(void *)int v26 = v5;
            *(_WORD *)&v26[8] = 2050;
            *(double *)&v26[10] = v19;
            _os_log_debug_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "#spi,write,size,%{public}zu,duration,us,%{public}.1f", buf, 0x16u);
          }
        }
      }
    }
  }
  else
  {
    gpsd::util::logBinaryBytes(v4, v5, (uint64_t)"#spi,write,bin", v8);
    unint64_t v11 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::mutex buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "#spi,write,notOpen", buf, 2u);
    }
  }
}

void sub_1000DD7DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000DD830(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1000DD870()
{
}

void sub_1000DD880()
{
}

void *sub_1000DD894(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = off_10010F610;
  result[1] = v3;
  return result;
}

uint64_t sub_1000DD8DC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_10010F610;
  a2[1] = v2;
  return result;
}

void sub_1000DD908(gpsd::util *a1, gpsd::util **a2, const unsigned __int8 **a3, const char *a4)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t v6 = *((void *)a1 + 1);
  if (*(unsigned char *)(v6 + 41)) {
    gpsd::util::logBinaryBytes(*a2, v5, (uint64_t)"#spi,read,bin", a4);
  }
  if (!*(void *)(v6 + 80))
  {
    int v8 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT)) {
      return;
    }
    LOWORD(v13) = 0;
    BOOL v9 = "#spi,readCallback,null";
LABEL_11:
    _os_log_fault_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_FAULT, v9, (uint8_t *)&v13, 2u);
    return;
  }
  if (!*(unsigned char *)(v6 + 42))
  {
    gpsd::util::logBinaryBytes(v4, v5, (uint64_t)"#spi,read,bin", a4);
    int v8 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT)) {
      return;
    }
    LOWORD(v13) = 0;
    BOOL v9 = "#spi,readcallback,portClosed";
    goto LABEL_11;
  }
  if (*(unsigned char *)(v6 + 40)) {
    double v7 = (double)gpsd::util::getMachContinuousTimeNs(a1) * 0.000000001;
  }
  else {
    double v7 = 0.0;
  }
  std::string v10 = (gpsd::util *)sub_10003DEB0(v6 + 56, (uint64_t)v4, (uint64_t)v5);
  if (*(unsigned char *)(v6 + 40))
  {
    unint64_t MachContinuousTimeNs = gpsd::util::getMachContinuousTimeNs(v10);
    double v12 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      int v13 = 134349312;
      mach_error_t v14 = v5;
      __int16 v15 = 2050;
      double v16 = ((double)MachContinuousTimeNs * 0.000000001 - v7) * 1000000.0;
      _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "#spi,hal,read,size,%{public}zu,duration,us,%{public}.1f", (uint8_t *)&v13, 0x16u);
    }
  }
}

uint64_t sub_1000DDAEC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1000DDB2C()
{
}

GnssHal::PlatformNvStore *GnssHal::PlatformNvStore::PlatformNvStore(GnssHal::PlatformNvStore *this)
{
  *(void *)this = &off_10010F690;
  uint64_t v2 = (GnssHal::PlatformNvStore *)((char *)this + 8);
  proto::gnsshal::NvStore::NvStore((GnssHal::PlatformNvStore *)((char *)this + 8));
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  proto::gnsshal::NvStore::NvStore((GnssHal::PlatformNvStore *)((char *)this + 96));
  *((void *)this + 31) = (char *)this + 256;
  *((void *)this + 19) = 0;
  *((void *)this + 20) = 0;
  *((void *)this + 21) = 0;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((void *)this + 30) = 0;
  *((void *)this + 32) = 0;
  *((void *)this + 33) = 0;
  *((_OWORD *)this + 11) = xmmword_1000EB0B0;
  proto::gnsshal::NvStore::Clear((GnssHal::PlatformNvStore *)((char *)this + 96));
  *((_DWORD *)this + 36) |= 1u;
  *((_DWORD *)this + 34) = 1;
  *((void *)this + 11) = 0;
  proto::gnsshal::NvStore::Clear(v2);
  *((_DWORD *)this + 14) |= 1u;
  *((_DWORD *)this + 12) = 1;
  GnssHal::PlatformNvStore::configure(this);
  GnssHal::PlatformNvStore::readCacheFromDisk((uint64_t)this, (uint64_t)this + 96);
  GnssHal::PlatformNvStore::readCacheFromDisk((uint64_t)this, (uint64_t)v2);
  return this;
}

void sub_1000DDC48(_Unwind_Exception *a1)
{
  sub_1000DDF14(v1);
  _Unwind_Resume(a1);
}

std::string *GnssHal::PlatformNvStore::configure(GnssHal::PlatformNvStore *this)
{
  uint64_t v2 = (GpsdPreferences *)GpsdPreferences::instance(0);
  GpsdPreferences::nvStoreFile(v2, &v5);
  uint64_t v3 = (void **)((char *)this + 152);
  if (*((char *)this + 175) < 0) {
    operator delete(*v3);
  }
  *(_OWORD *)uint64_t v3 = v5;
  *((void *)this + 21) = v6;
  return std::string::assign((std::string *)((char *)this + 64), "");
}

uint64_t GnssHal::PlatformNvStore::readCacheFromDisk(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a2 + 79);
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *(void *)(a2 + 64);
  }
  if (v2)
  {
    long long v5 = (const void *)(a2 + 56);
    if ((sub_1000E0938(a1, a2, (uint64_t *)(a2 + 56)) & 1) == 0)
    {
      if (*(char *)(a2 + 79) >= 0) {
        size_t v6 = *(unsigned __int8 *)(a2 + 79);
      }
      else {
        size_t v6 = *(void *)(a2 + 64);
      }
      double v7 = __p;
      sub_10004B7B4((uint64_t)__p, v6 + 4);
      if (v15 < 0) {
        double v7 = *(unsigned char **)__p;
      }
      if (v6)
      {
        if (*(char *)(a2 + 79) >= 0) {
          int v8 = v5;
        }
        else {
          int v8 = *(const void **)(a2 + 56);
        }
        memmove(v7, v8, v6);
      }
      strcpy(&v7[v6], ".bak");
      int v9 = sub_1000E0938(a1, a2, (uint64_t *)__p);
      if (v15 < 0) {
        operator delete(*(void **)__p);
      }
      std::string v10 = qword_100114840;
      if (v9)
      {
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          if (*(char *)(a2 + 79) >= 0) {
            unint64_t v11 = v5;
          }
          else {
            unint64_t v11 = *(const void **)(a2 + 56);
          }
          *(_DWORD *)std::string __p = 136315138;
          *(void *)&__p[4] = v11;
          _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "NvStore,Needed to read from backup file, %s, is corrupt", __p, 0xCu);
        }
      }
      else
      {
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
        {
          if (*(char *)(a2 + 79) >= 0) {
            double v12 = v5;
          }
          else {
            double v12 = *(const void **)(a2 + 56);
          }
          *(_DWORD *)std::string __p = 136315138;
          *(void *)&__p[4] = v12;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "NvStore,Failed to read from primary and backup files for,%s, using an empty cache", __p, 0xCu);
        }
        *(void *)(a2 + 80) = 0;
        proto::gnsshal::NvStore::Clear((proto::gnsshal::NvStore *)a2);
        *(_DWORD *)(a2 + 48) |= 1u;
        *(_DWORD *)(a2 + 40) = 1;
      }
      sub_1000DFBBC(a2);
    }
  }
  return 1;
}

void sub_1000DDEF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000DDF14(void **this)
{
  if (*((char *)this + 79) < 0) {
    operator delete(this[7]);
  }

  proto::gnsshal::NvStore::~NvStore((proto::gnsshal::NvStore *)this);
}

void GnssHal::PlatformNvStore::~PlatformNvStore(GnssHal::PlatformNvStore *this)
{
  *(void *)this = &off_10010F690;
  GnssHal::PlatformNvStore::flushSession(this);
  (*(void (**)(GnssHal::PlatformNvStore *))(*(void *)this + 56))(this);
  sub_1000E133C((uint64_t)this + 248, *((char **)this + 32));
  std::mutex::~mutex((std::mutex *)((char *)this + 184));
  if (*((char *)this + 175) < 0) {
    operator delete(*((void **)this + 19));
  }
  proto::gnsshal::NvStore::~NvStore((GnssHal::PlatformNvStore *)((char *)this + 96));
  if (*((char *)this + 87) < 0) {
    operator delete(*((void **)this + 8));
  }
  proto::gnsshal::NvStore::~NvStore((GnssHal::PlatformNvStore *)((char *)this + 8));
}

void sub_1000DE014(GnssHal::PlatformNvStore *a1)
{
  GnssHal::PlatformNvStore::~PlatformNvStore(a1);

  operator delete();
}

uint64_t sub_1000DE04C(uint64_t a1, int a2, uint64_t a3)
{
  size_t v6 = (std::mutex *)(a1 + 184);
  std::mutex::lock((std::mutex *)(a1 + 184));
  uint64_t v7 = sub_1000DE0C4(a1, a2, a3, a1 + 8, a1 + 96);
  std::mutex::unlock(v6);
  return v7;
}

void sub_1000DE0B0(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DE0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(unsigned int *)(a5 + 24);
  if ((int)v9 < 1) {
    goto LABEL_13;
  }
  uint64_t v11 = 0;
  while (1)
  {
    uint64_t v12 = *(void *)(*(void *)(a5 + 16) + 8 * v11);
    if (*(void *)(v12 + 16) == a2) {
      break;
    }
    if (v9 == ++v11) {
      goto LABEL_13;
    }
  }
  if ((int)v9 <= (int)v11)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)buf);
    uint64_t v12 = *(void *)(*(void *)(a5 + 16) + 8 * v11);
  }
  uint64_t v13 = *(void *)(v12 + 24);
  if ((*(char *)(v13 + 23) & 0x80000000) == 0)
  {
    if (*(unsigned char *)(v13 + 23)) {
      goto LABEL_10;
    }
LABEL_13:
    sub_1000DF6E0(a1, (uint64_t)"pre-store");
    double v16 = qword_100114840;
    BOOL v17 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG);
    if (v17)
    {
      if (a2 <= 0x7FFFFFFF) {
        int v32 = a2;
      }
      else {
        int v32 = a2 - 0x7FFFFFFF;
      }
      double v33 = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)v17) * 0.000000001;
      __int16 v34 = (const void *)(*(void *)(a3 + 8) - *(void *)a3);
      int v35 = gpsd::util::truncatedSha256(*(gpsd::util **)a3, v34);
      *(_DWORD *)std::mutex buf = 134218752;
      double v37 = v33;
      __int16 v38 = 1024;
      *(_DWORD *)unsigned int v39 = v32;
      *(_WORD *)&v39[4] = 2048;
      *(void *)&v39[6] = v34;
      __int16 v40 = 1024;
      int v41 = v35;
      _os_log_debug_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "NvStore,store,mach_cont_s,%.3f,id,%d,size,%zu,hash,%x", buf, 0x22u);
    }
    uint64_t v18 = *(unsigned int *)(a4 + 24);
    if ((int)v18 < 1)
    {
LABEL_18:
      uint64_t v21 = *(void *)(a3 + 8) - *(void *)a3 + *(void *)(a4 + 80);
      if (v21 < 8000000)
      {
        uint64_t v22 = (int)v18;
        *(void *)(a4 + 80) = v21;
        int v23 = *(_DWORD *)(a4 + 28);
        if ((int)v22 >= v23)
        {
          if (v23 == *(_DWORD *)(a4 + 32))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a4 + 16), v23 + 1);
            int v23 = *(_DWORD *)(a4 + 28);
          }
          *(_DWORD *)(a4 + 28) = v23 + 1;
          sub_10003AD08();
        }
        uint64_t v24 = *(void *)(a4 + 16);
        *(_DWORD *)(a4 + 24) = v22 + 1;
        uint64_t v25 = *(void *)(v24 + 8 * v22);
        *(_DWORD *)(v25 + 64) |= 8u;
        *(void *)(v25 + 32) = 0;
        CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
        *(_DWORD *)(v25 + 64) |= 0x10u;
        *(CFAbsoluteTime *)(v25 + 40) = Current;
        sub_1000E068C(v25, a2, (gpsd::util **)a3);
        goto LABEL_33;
      }
      int v26 = qword_100114840;
      if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
LABEL_35:
        double v30 = qword_100114838;
        uint64_t v15 = 0;
        if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)std::mutex buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "NvStore,storeToCache failed", buf, 2u);
          uint64_t v15 = 0;
        }
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v19 = 0;
      while (1)
      {
        uint64_t v20 = *(void *)(*(void *)(a4 + 16) + 8 * v19);
        if (*(void *)(v20 + 16) == a2) {
          break;
        }
        if (v18 == ++v19) {
          goto LABEL_18;
        }
      }
      if ((int)v18 <= (int)v19)
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)buf);
        uint64_t v20 = *(void *)(*(void *)(a4 + 16) + 8 * v19);
      }
      uint64_t v27 = *(void *)(v20 + 24);
      if (*(char *)(v27 + 23) < 0) {
        uint64_t v28 = *(void *)(v27 + 8);
      }
      else {
        uint64_t v28 = *(unsigned __int8 *)(v27 + 23);
      }
      uint64_t v21 = *(void *)(a4 + 80) + *(void *)(a3 + 8) - (v28 + *(void *)a3);
      if (v21 < 8000000)
      {
        *(void *)(a4 + 80) = v21;
        sub_1000E068C(v20, a2, (gpsd::util **)a3);
LABEL_33:
        uint64_t v15 = 1;
LABEL_37:
        sub_1000DF6E0(a1, (uint64_t)"post-store");
        return v15;
      }
      int v26 = qword_100114840;
      if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
        goto LABEL_35;
      }
    }
    *(_DWORD *)std::mutex buf = 134349312;
    double v37 = *(double *)&v21;
    __int16 v38 = 2050;
    *(void *)unsigned int v39 = 8000000;
    _os_log_error_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_ERROR, "NvStore,NV_LIMIT_TOTAL_SIZE reached,%{public}lld,%{public}lld", buf, 0x16u);
    goto LABEL_35;
  }
  if (!*(void *)(v13 + 8)) {
    goto LABEL_13;
  }
LABEL_10:
  mach_error_t v14 = qword_100114838;
  uint64_t v15 = 0;
  if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::mutex buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "NvStore,Item already in alternate cache", buf, 2u);
    return 0;
  }
  return v15;
}

void sub_1000DE574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DE59C(uint64_t a1, int a2, uint64_t a3)
{
  size_t v6 = (std::mutex *)(a1 + 184);
  std::mutex::lock((std::mutex *)(a1 + 184));
  uint64_t v7 = sub_1000DE614(a1, a2, a3, a1 + 8, a1 + 96);
  std::mutex::unlock(v6);
  return v7;
}

void sub_1000DE600(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DE614(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(a1 + 256);
  if (!v10) {
    goto LABEL_11;
  }
  uint64_t v11 = a1 + 256;
  do
  {
    int v12 = *(_DWORD *)(v10 + 32);
    BOOL v13 = v12 < a2;
    if (v12 >= a2) {
      mach_error_t v14 = (uint64_t *)v10;
    }
    else {
      mach_error_t v14 = (uint64_t *)(v10 + 8);
    }
    if (!v13) {
      uint64_t v11 = v10;
    }
    uint64_t v10 = *v14;
  }
  while (*v14);
  if (v11 != a1 + 256 && *(_DWORD *)(v11 + 32) <= a2)
  {
    sub_1000DF6E0(a1, (uint64_t)"pre-storeNamed");
    uint64_t v18 = qword_100114840;
    BOOL v19 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG);
    if (v19)
    {
      double v21 = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)v19) * 0.000000001;
      uint64_t v22 = (const void *)(*(void *)(a3 + 8) - *(void *)a3);
      int v23 = gpsd::util::truncatedSha256(*(gpsd::util **)a3, v22);
      int v24 = 134218752;
      *(double *)uint64_t v25 = v21;
      *(_WORD *)&v25[8] = 1024;
      *(_DWORD *)&v25[10] = a2;
      __int16 v26 = 2048;
      uint64_t v27 = v22;
      __int16 v28 = 1024;
      int v29 = v23;
      _os_log_debug_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "NvStore,storeNamed,mach_cont_s,%.3f,id,%d,size,%zu,hash,%x", (uint8_t *)&v24, 0x22u);
    }
    uint64_t v16 = sub_1000DF868((const void **)(v11 + 40), a3);
    uint64_t v20 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      int v24 = 67109120;
      *(_DWORD *)uint64_t v25 = v16;
      _os_log_debug_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "NvStore,storeReturn,%d", (uint8_t *)&v24, 8u);
    }
    sub_1000DF6E0(a1, (uint64_t)"post-storeNamed");
  }
  else
  {
LABEL_11:
    uint64_t v15 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      int v24 = 67109376;
      *(_DWORD *)uint64_t v25 = a2;
      *(_WORD *)&v25[4] = 2048;
      *(void *)&v25[6] = a2 + 0x80000000;
      _os_log_debug_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "NvStore,Did not find dedicated file for NamedType,%d,Converting to id,%lld", (uint8_t *)&v24, 0x12u);
    }
    return sub_1000DE0C4(a1, a2 + 0x80000000, a3, a4, a5);
  }
  return v16;
}

uint64_t sub_1000DE870(uint64_t a1, int a2, uint64_t a3)
{
  size_t v6 = (std::mutex *)(a1 + 184);
  std::mutex::lock((std::mutex *)(a1 + 184));
  uint64_t v7 = sub_1000DE0C4(a1, a2, a3, a1 + 96, a1 + 8);
  std::mutex::unlock(v6);
  return v7;
}

void sub_1000DE8D4(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DE8E8(uint64_t a1, int a2, uint64_t a3)
{
  size_t v6 = (std::mutex *)(a1 + 184);
  std::mutex::lock((std::mutex *)(a1 + 184));
  uint64_t v7 = sub_1000DE614(a1, a2, a3, a1 + 96, a1 + 8);
  std::mutex::unlock(v6);
  return v7;
}

void sub_1000DE94C(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void GnssHal::PlatformNvStore::flushSession(GnssHal::PlatformNvStore *this)
{
  uint64_t v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "NvStore,flushSession", v3, 2u);
  }
  std::mutex::lock((std::mutex *)((char *)this + 184));
  sub_1000DE9F8((uint64_t)this + 8);
  std::mutex::unlock((std::mutex *)((char *)this + 184));
}

void sub_1000DE9E4(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1000DE9F8(uint64_t a1)
{
  if ((sub_1000DFBBC(a1) & 1) == 0)
  {
    uint64_t v1 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v2 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "NvStore,flush,writeCacheToDisk failed", v2, 2u);
    }
  }
}

void sub_1000DEA68(uint64_t a1)
{
  uint64_t v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "NvStore,flushPermanent", v3, 2u);
  }
  std::mutex::lock((std::mutex *)(a1 + 184));
  sub_1000DE9F8(a1 + 96);
  std::mutex::unlock((std::mutex *)(a1 + 184));
}

void sub_1000DEAEC(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1000DEB00(uint64_t a1@<X0>, int a2@<W1>, unint64_t *a3@<X8>)
{
  size_t v6 = (std::mutex *)(a1 + 184);
  std::mutex::lock((std::mutex *)(a1 + 184));
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  sub_1000DEB8C(a1, a2, a3);

  std::mutex::unlock(v6);
}

void sub_1000DEB68(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)v2;
  if (*(void *)v2)
  {
    *(void *)(v2 + 8) = v4;
    operator delete(v4);
  }
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1000DEB8C(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 < 1)
  {
LABEL_5:
    uint64_t v9 = *(unsigned int *)(a1 + 120);
    if ((int)v9 < 1) {
      goto LABEL_17;
    }
    uint64_t v10 = *(uint64_t **)(a1 + 112);
    while (1)
    {
      uint64_t v8 = *v10;
      if (*(void *)(*v10 + 16) == a2) {
        break;
      }
      ++v10;
      if (!--v9) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    uint64_t v7 = *(uint64_t **)(a1 + 24);
    while (1)
    {
      uint64_t v8 = *v7;
      if (*(void *)(*v7 + 16) == a2) {
        break;
      }
      ++v7;
      if (!--v6) {
        goto LABEL_5;
      }
    }
  }
  uint64_t v11 = *(char **)(v8 + 24);
  if (v11[23] < 0) {
    size_t v12 = *((void *)v11 + 1);
  }
  else {
    size_t v12 = v11[23];
  }
  sub_100017B68(a3, v12);
  if (v11[23] < 0)
  {
    mach_error_t v14 = v11;
    uint64_t v11 = *(char **)v11;
    uint64_t v13 = *((void *)v14 + 1);
  }
  else
  {
    uint64_t v13 = v11[23];
  }
  sub_1000E13A0(v11, &v11[v13], a3);
LABEL_17:
  uint64_t v15 = qword_100114840;
  BOOL v16 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG);
  if (v16)
  {
    if (v4 > 0x7FFFFFFF) {
      LODWORD(v4) = v4 - 0x7FFFFFFF;
    }
    double v17 = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)v16) * 0.000000001;
    uint64_t v18 = (gpsd::util *)*a3;
    BOOL v19 = (const void *)(a3[1] - *a3);
    int v20 = 134218752;
    double v21 = v17;
    __int16 v22 = 1024;
    int v23 = v4;
    __int16 v24 = 2048;
    uint64_t v25 = v19;
    __int16 v26 = 1024;
    int v27 = gpsd::util::truncatedSha256(v18, v19);
    _os_log_debug_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "NvStore,recall,mach_cont_s,%.3f,id,%d,size,%zu,hash,%x", (uint8_t *)&v20, 0x22u);
  }
  sub_1000DF6E0(a1, (uint64_t)"recalled");
}

void sub_1000DED54(uint64_t a1@<X0>, int a2@<W1>, unint64_t *a3@<X8>)
{
  uint64_t v6 = (std::mutex *)(a1 + 184);
  std::mutex::lock((std::mutex *)(a1 + 184));
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t v7 = *(void *)(a1 + 256);
  if (!v7) {
    goto LABEL_11;
  }
  uint64_t v8 = a1 + 256;
  do
  {
    int v9 = *(_DWORD *)(v7 + 32);
    BOOL v10 = v9 < a2;
    if (v9 >= a2) {
      uint64_t v11 = (uint64_t *)v7;
    }
    else {
      uint64_t v11 = (uint64_t *)(v7 + 8);
    }
    if (!v10) {
      uint64_t v8 = v7;
    }
    uint64_t v7 = *v11;
  }
  while (*v11);
  if (v8 == a1 + 256 || *(_DWORD *)(v8 + 32) > a2)
  {
LABEL_11:
    size_t v12 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::mutex buf = 67109376;
      int v36 = a2;
      __int16 v37 = 2048;
      uint64_t v38 = a2 + 0x80000000;
      _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "NvStore: Did not find dedicated file for NamedType=%d, converting it to id=%lld", buf, 0x12u);
    }
    sub_1000DEB8C(a1, a2 + 0x80000000, a3);
    goto LABEL_14;
  }
  uint64_t v13 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    double v33 = (void *)(v8 + 40);
    if (*(char *)(v8 + 63) < 0) {
      double v33 = (void *)*v33;
    }
    *(_DWORD *)std::mutex buf = 67109378;
    int v36 = a2;
    __int16 v37 = 2080;
    uint64_t v38 = (uint64_t)v33;
    _os_log_debug_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "NvStore: Reading NamedType=%d from dedicated file %s", buf, 0x12u);
  }
  BOOL v16 = *(const char **)(v8 + 40);
  uint64_t v15 = v8 + 40;
  mach_error_t v14 = v16;
  if (*(char *)(v15 + 23) >= 0) {
    double v17 = (const char *)v15;
  }
  else {
    double v17 = v14;
  }
  uint64_t v18 = fopen(v17, "rb");
  if (!v18)
  {
    uint64_t v23 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
      goto LABEL_14;
    }
    int v24 = *__error();
    *(_DWORD *)std::mutex buf = 67240192;
    int v36 = v24;
    uint64_t v25 = "NvStore,Failed to open file for reading,%{public}d";
    __int16 v26 = v23;
    goto LABEL_29;
  }
  unsigned int __ptr = 0;
  size_t v19 = fread(&__ptr, 4uLL, 1uLL, v18);
  size_t v20 = __ptr;
  if (v19 != 1 || (__ptr & 0x80000000) != 0 || (int)__ptr >= 8000001)
  {
    fclose(v18);
    uint64_t v27 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
      goto LABEL_14;
    }
    *(_DWORD *)std::mutex buf = 67240192;
    int v36 = v20;
    uint64_t v25 = "NvStore,Failed to read itemId/numBytes or out of range,numBytes,%{public}d";
    __int16 v26 = v27;
LABEL_29:
    uint32_t v28 = 8;
    goto LABEL_30;
  }
  double v21 = (void *)*a3;
  unint64_t v22 = a3[1] - *a3;
  if (__ptr <= v22)
  {
    if (__ptr < v22) {
      a3[1] = (unint64_t)v21 + __ptr;
    }
  }
  else
  {
    sub_100028718(a3, __ptr - v22);
    double v21 = (void *)*a3;
  }
  size_t v29 = fread(v21, 1uLL, v20, v18);
  int v30 = fclose(v18);
  if (v29 == v20)
  {
    if (!v30) {
      goto LABEL_14;
    }
    uint64_t v31 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
      goto LABEL_14;
    }
    *(_WORD *)std::mutex buf = 0;
    uint64_t v25 = "NvStore,Failed to close file after reading";
    __int16 v26 = v31;
    uint32_t v28 = 2;
LABEL_30:
    _os_log_error_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_ERROR, v25, buf, v28);
    goto LABEL_14;
  }
  int v32 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)std::mutex buf = 0;
    _os_log_error_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_ERROR, "NvStore,Failed to read payload", buf, 2u);
  }
  a3[1] = *a3;
LABEL_14:
  std::mutex::unlock(v6);
}

void sub_1000DF0D0(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)v2;
  if (*(void *)v2)
  {
    *(void *)(v2 + 8) = v4;
    operator delete(v4);
  }
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DF0F8(uint64_t a1, int a2)
{
  uint64_t v4 = qword_100114840;
  BOOL v5 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG);
  if (v5)
  {
    int v7 = 134218240;
    double v8 = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)v5) * 0.000000001;
    __int16 v9 = 1024;
    int v10 = a2;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "NvStore,clear,mach_cont_s,%.3f,id,%d", (uint8_t *)&v7, 0x12u);
  }
  std::mutex::lock((std::mutex *)(a1 + 184));
  sub_1000E0538(a1 + 8, a2);
  sub_1000E0538(a1 + 96, a2);
  std::mutex::unlock((std::mutex *)(a1 + 184));
  return 1;
}

void sub_1000DF1FC(_Unwind_Exception *exception_object)
{
}

uint64_t sub_1000DF218(uint64_t a1, int a2)
{
  uint64_t v4 = qword_100114840;
  BOOL v5 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG);
  if (v5)
  {
    LODWORD(v17[0]) = 134218240;
    *(double *)((char *)v17 + 4) = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)v5) * 0.000000001;
    WORD2(v17[1]) = 1024;
    *(_DWORD *)((char *)&v17[1] + 6) = a2;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "NvStore,clearNamed,mach_cont_s,%.3f,id,%d", (uint8_t *)v17, 0x12u);
  }
  uint64_t v6 = (std::mutex *)(a1 + 184);
  std::mutex::lock((std::mutex *)(a1 + 184));
  uint64_t v7 = *(void *)(a1 + 256);
  if (!v7) {
    goto LABEL_13;
  }
  uint64_t v8 = a1 + 256;
  do
  {
    int v9 = *(_DWORD *)(v7 + 32);
    BOOL v10 = v9 < a2;
    if (v9 >= a2) {
      uint64_t v11 = (uint64_t *)v7;
    }
    else {
      uint64_t v11 = (uint64_t *)(v7 + 8);
    }
    if (!v10) {
      uint64_t v8 = v7;
    }
    uint64_t v7 = *v11;
  }
  while (*v11);
  if (v8 != a1 + 256 && *(_DWORD *)(v8 + 32) <= a2)
  {
    uint64_t v15 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      BOOL v16 = (void *)(v8 + 40);
      if (*(char *)(v8 + 63) < 0) {
        BOOL v16 = (void *)*v16;
      }
      LODWORD(v17[0]) = 67109378;
      HIDWORD(v17[0]) = a2;
      LOWORD(v17[1]) = 2080;
      *(void *)((char *)&v17[1] + 2) = v16;
      _os_log_debug_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "NvStore: Clearing NamedType=%d from dedicated file %s", (uint8_t *)v17, 0x12u);
    }
    memset(v17, 0, sizeof(v17));
    uint64_t v13 = sub_1000DF868((const void **)(v8 + 40), (uint64_t)v17);
  }
  else
  {
LABEL_13:
    size_t v12 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      LODWORD(v17[0]) = 67109376;
      HIDWORD(v17[0]) = a2;
      LOWORD(v17[1]) = 2048;
      *(void *)((char *)&v17[1] + 2) = a2 + 0x80000000;
      _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "NvStore: Did not find dedicated file for NamedType=%d, converting it to id=%lld", (uint8_t *)v17, 0x12u);
    }
    sub_1000E0538(a1 + 8, a2 + 0x80000000);
    sub_1000E0538(a1 + 96, a2 + 0x80000000);
    uint64_t v13 = 1;
  }
  std::mutex::unlock(v6);
  return v13;
}

void sub_1000DF448(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t GnssHal::PlatformNvStore::clearSessionStorage(GnssHal::PlatformNvStore *this)
{
  uint64_t v2 = qword_100114840;
  BOOL v3 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO);
  if (v3)
  {
    int v5 = 134217984;
    double v6 = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)v3) * 0.000000001;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "NvStore,clearSession,mach_cont_s,%.3f", (uint8_t *)&v5, 0xCu);
  }
  std::mutex::lock((std::mutex *)((char *)this + 184));
  sub_1000DF558((uint64_t)this + 8);
  std::mutex::unlock((std::mutex *)((char *)this + 184));
  return 1;
}

void sub_1000DF53C(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1000DF558(uint64_t a1)
{
  *(void *)(a1 + 80) = 0;
  proto::gnsshal::NvStore::Clear((proto::gnsshal::NvStore *)a1);
  *(_DWORD *)(a1 + 48) |= 1u;
  *(_DWORD *)(a1 + 40) = 1;
  if ((sub_1000DFBBC(a1) & 1) == 0)
  {
    uint64_t v2 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)BOOL v3 = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "NvStore,clearCache requested but not completed due to writeCacheToDisk failure", v3, 2u);
    }
  }
}

uint64_t GnssHal::PlatformNvStore::clearPermanentStorage(GnssHal::PlatformNvStore *this)
{
  uint64_t v2 = qword_100114840;
  BOOL v3 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO);
  if (v3)
  {
    int v5 = 134217984;
    double v6 = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)v3) * 0.000000001;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "NvStore,clearPermanent,mach_cont_s,%.3f", (uint8_t *)&v5, 0xCu);
  }
  std::mutex::lock((std::mutex *)((char *)this + 184));
  sub_1000DF558((uint64_t)this + 96);
  std::mutex::unlock((std::mutex *)((char *)this + 184));
  return 1;
}

void sub_1000DF6C4(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1000DF6E0(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_100114820, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_100114820))
  {
    double v6 = (id *)GpsdPreferences::instance(0);
    byte_100114818 = GpsdPreferences::verboseNvStore(v6);
    __cxa_guard_release(&qword_100114820);
  }
  if (byte_100114818)
  {
    uint64_t v4 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      int v7 = 136315138;
      uint64_t v8 = a2;
      _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "NvStore,printState,begin,%s", (uint8_t *)&v7, 0xCu);
    }
    if (*(uint64_t *)(a1 + 88) >= 1) {
      sub_1000E02F8(a1 + 8);
    }
    sub_1000E02F8(a1 + 96);
    int v5 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      int v7 = 136315138;
      uint64_t v8 = a2;
      _os_log_debug_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "NvStore,printState,end,%s", (uint8_t *)&v7, 0xCu);
    }
  }
}

void sub_1000DF848(_Unwind_Exception *a1)
{
}

uint64_t sub_1000DF868(const void **a1, uint64_t a2)
{
  if (*((char *)a1 + 23) >= 0) {
    size_t v4 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v4 = (size_t)a1[1];
  }
  int v5 = __p;
  sub_10004B7B4((uint64_t)__p, v4 + 4);
  if (v33 < 0) {
    int v5 = (void **)__p[0];
  }
  if (v4)
  {
    if (*((char *)a1 + 23) >= 0) {
      double v6 = a1;
    }
    else {
      double v6 = *a1;
    }
    memmove(v5, v6, v4);
  }
  strcpy((char *)v5 + v4, ".tmp");
  if (v33 >= 0) {
    int v7 = __p;
  }
  else {
    int v7 = (void **)__p[0];
  }
  uint64_t v8 = fopen((const char *)v7, "wb+");
  if (!v8)
  {
    uint64_t v17 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      if (*((char *)a1 + 23) >= 0) {
        uint64_t v18 = (void **)a1;
      }
      else {
        uint64_t v18 = (void **)*a1;
      }
      *(_DWORD *)std::mutex buf = 136446210;
      int v35 = v18;
      mach_error_t v14 = "NvStore,Failed to open dedicated tmp file,%{public}s";
      uint64_t v15 = v17;
      uint32_t v16 = 12;
      goto LABEL_38;
    }
    goto LABEL_39;
  }
  int __ptr = *(_DWORD *)(a2 + 8) - *(_DWORD *)a2;
  if (fwrite(&__ptr, 4uLL, 1uLL, v8) != 1 || (size_t v9 = fwrite(*(const void **)a2, 1uLL, __ptr, v8), v9 != __ptr))
  {
    BOOL v10 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      int v30 = __p;
      if (v33 < 0) {
        int v30 = (void **)__p[0];
      }
      *(_DWORD *)std::mutex buf = 136446466;
      int v35 = v30;
      __int16 v36 = 1026;
      int v37 = __ptr;
      _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "NvStore,Failed to write to temp file,%{public}s,localNumByes,%{public}d", buf, 0x12u);
    }
  }
  if (fclose(v8))
  {
    uint64_t v12 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      int v13 = *__error();
      *(_DWORD *)std::mutex buf = 67240192;
      LODWORD(v35) = v13;
      mach_error_t v14 = "NvStore,Failed to close temp file,%{public}d";
      uint64_t v15 = v12;
      uint32_t v16 = 8;
LABEL_38:
      _os_log_error_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, v14, buf, v16);
      goto LABEL_39;
    }
    goto LABEL_39;
  }
  if (v33 >= 0) {
    size_t v19 = (const std::__fs::filesystem::path *)__p;
  }
  else {
    size_t v19 = (const std::__fs::filesystem::path *)__p[0];
  }
  if (*((char *)a1 + 23) >= 0) {
    size_t v20 = (const std::__fs::filesystem::path *)a1;
  }
  else {
    size_t v20 = (const std::__fs::filesystem::path *)*a1;
  }
  rename(v19, v20, v11);
  if (v21)
  {
    uint64_t v22 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      int v23 = *((char *)a1 + 23);
      int v24 = (void **)*a1;
      uint64_t v25 = __error();
      if (v23 >= 0) {
        __int16 v26 = (void **)a1;
      }
      else {
        __int16 v26 = v24;
      }
      int v27 = *v25;
      *(_DWORD *)std::mutex buf = 136446466;
      int v35 = v26;
      __int16 v36 = 1026;
      int v37 = v27;
      mach_error_t v14 = "NvStore,Failed to move temp file to primary dedicated,%{public}s,%{public}d";
      uint64_t v15 = v22;
      uint32_t v16 = 18;
      goto LABEL_38;
    }
LABEL_39:
    uint64_t v28 = 0;
    goto LABEL_40;
  }
  uint64_t v28 = 1;
LABEL_40:
  if (v33 < 0) {
    operator delete(__p[0]);
  }
  return v28;
}

void sub_1000DFB8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000DFBBC(uint64_t a1)
{
  size_t v1 = *(unsigned __int8 *)(a1 + 79);
  char v2 = v1;
  size_t v3 = *(void *)(a1 + 64);
  if ((v1 & 0x80u) == 0) {
    uint64_t v4 = *(unsigned __int8 *)(a1 + 79);
  }
  else {
    uint64_t v4 = *(void *)(a1 + 64);
  }
  if (!v4) {
    return 1;
  }
  double v6 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::mutex buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "NvStore,writeCacheToDisk", buf, 2u);
    size_t v1 = *(unsigned __int8 *)(a1 + 79);
    size_t v3 = *(void *)(a1 + 64);
    char v2 = *(unsigned char *)(a1 + 79);
  }
  if (v2 >= 0) {
    size_t v7 = v1;
  }
  else {
    size_t v7 = v3;
  }
  uint64_t v8 = v33;
  sub_10004B7B4((uint64_t)v33, v7 + 4);
  if (v34 < 0) {
    uint64_t v8 = (void **)v33[0];
  }
  if (v7)
  {
    if (*(char *)(a1 + 79) >= 0) {
      size_t v9 = (const void *)(a1 + 56);
    }
    else {
      size_t v9 = *(const void **)(a1 + 56);
    }
    memmove(v8, v9, v7);
  }
  strcpy((char *)v8 + v7, ".tmp");
  if (*(char *)(a1 + 79) >= 0) {
    size_t v10 = *(unsigned __int8 *)(a1 + 79);
  }
  else {
    size_t v10 = *(void *)(a1 + 64);
  }
  uint64_t v11 = __p;
  sub_10004B7B4((uint64_t)__p, v10 + 4);
  if (v32 < 0) {
    uint64_t v11 = (void **)__p[0];
  }
  if (v10)
  {
    if (*(char *)(a1 + 79) >= 0) {
      uint64_t v12 = (const void *)(a1 + 56);
    }
    else {
      uint64_t v12 = *(const void **)(a1 + 56);
    }
    memmove(v11, v12, v10);
  }
  strcpy((char *)v11 + v10, ".bak");
  if (v34 >= 0) {
    int v13 = v33;
  }
  else {
    int v13 = (void **)v33[0];
  }
  unlink((const char *)v13);
  if (v34 >= 0) {
    mach_error_t v14 = v33;
  }
  else {
    mach_error_t v14 = (void **)v33[0];
  }
  uint64_t v15 = fopen((const char *)v14, "wb+");
  int v30 = v15;
  if (v15)
  {
    gpsd::util::changeFileToClassD(v15, v16);
    wireless_diagnostics::google::protobuf::MessageLite::SerializeToString();
    size_t v19 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      int v22 = *(_DWORD *)(a1 + 40);
      int v23 = *(_DWORD *)(a1 + 24);
      int v24 = proto::gnsshal::NvStore::ByteSize((proto::gnsshal::NvStore *)a1, v20);
      *(_DWORD *)std::mutex buf = 134349824;
      __int16 v36 = 0;
      __int16 v37 = 1026;
      *(_DWORD *)uint64_t v38 = v22;
      *(_WORD *)&v38[4] = 1026;
      *(_DWORD *)&v38[6] = v23;
      __int16 v39 = 1026;
      int v40 = v24;
      _os_log_error_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "NvStore,Could not serialize to string,stringSize,%{public}zu,cacheVer,%{public}d,cacheNum,%{public}d,cacheBytes,%{public}d", buf, 0x1Eu);
    }
  }
  else
  {
    uint64_t v17 = __error();
    uint64_t v18 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      int v25 = *v17;
      int v26 = v34;
      int v27 = (void **)v33[0];
      uint64_t v28 = strerror(v25);
      size_t v29 = v33;
      if (v26 < 0) {
        size_t v29 = v27;
      }
      *(_DWORD *)std::mutex buf = 136446466;
      __int16 v36 = v29;
      __int16 v37 = 2082;
      *(void *)uint64_t v38 = v28;
      _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "NvStore,Failed to open temp file,%{public}s,%{public}s", buf, 0x16u);
    }
  }
  sub_1000E086C(&v30);
  if (v32 < 0) {
    operator delete(__p[0]);
  }
  if (v34 < 0) {
    operator delete(v33[0]);
  }
  return 0;
}

void sub_1000E0268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, FILE *a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1000E086C(&a15);
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(a1);
}

void sub_1000E02F8(uint64_t a1)
{
  char v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v18 = a1 + 56;
    uint64_t v19 = *(void *)(a1 + 80);
    if (*(char *)(a1 + 79) < 0) {
      uint64_t v18 = *(void *)(a1 + 56);
    }
    *(_DWORD *)std::mutex buf = 134218242;
    uint64_t v21 = v19;
    __int16 v22 = 2080;
    uint64_t v23 = v18;
    _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "NvStore,printState,currentSize,%lld,filePath,%s", buf, 0x16u);
  }
  if (*(int *)(a1 + 24) < 1)
  {
    uint64_t v17 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::mutex buf = 0;
      _os_log_debug_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "NvStore,printState,empty", buf, 2u);
    }
  }
  else
  {
    double Current = CFAbsoluteTimeGetCurrent();
    int v4 = *(_DWORD *)(a1 + 24);
    if (v4 >= 1)
    {
      double v5 = Current;
      uint64_t v6 = 0;
      size_t v7 = qword_100114840;
      do
      {
        uint64_t v8 = *(void *)(*(void *)(a1 + 16) + 8 * v6);
        uint64_t v9 = *(void *)(v8 + 16);
        if (v9 <= 0x7FFFFFFF) {
          uint64_t v10 = *(void *)(v8 + 16);
        }
        else {
          uint64_t v10 = v9 - 0x7FFFFFFF;
        }
        if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v11 = *(void *)(v8 + 24);
          if (*(char *)(v11 + 23) < 0) {
            uint64_t v12 = *(void *)(v11 + 8);
          }
          else {
            uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
          }
          int v13 = *(_DWORD *)(v8 + 56);
          double v14 = v5 - *(double *)(v8 + 40);
          double v15 = v5 - *(double *)(v8 + 48);
          uint64_t v16 = *(void *)(v8 + 32);
          *(_DWORD *)std::mutex buf = 134219264;
          uint64_t v21 = v10;
          __int16 v22 = 2048;
          uint64_t v23 = v12;
          __int16 v24 = 1024;
          int v25 = v13;
          __int16 v26 = 2048;
          double v27 = v14;
          __int16 v28 = 2048;
          double v29 = v15;
          __int16 v30 = 2048;
          uint64_t v31 = v16;
          _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "NvStore,printState,id,%lld,size,%zu,hash,%x,createAgeSeconds,%.1f,modAgeSeconds,%.1f,modCount,%lld", buf, 0x3Au);
          size_t v7 = qword_100114840;
          int v4 = *(_DWORD *)(a1 + 24);
        }
        ++v6;
      }
      while (v6 < v4);
    }
  }
}

void sub_1000E0538(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v5 = 0;
    uint64_t v6 = *(void *)(a1 + 16);
    while (1)
    {
      uint64_t v7 = *(void *)(v6 + 8 * v5);
      if (*(void *)(v7 + 16) == a2) {
        break;
      }
      if (v2 == ++v5) {
        return;
      }
    }
    if ((int)v2 <= (int)v5)
    {
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)buf);
      uint64_t v7 = *(void *)(*(void *)(a1 + 16) + 8 * v5);
    }
    uint64_t v8 = *(void *)(v7 + 24);
    if (*(char *)(v8 + 23) < 0) {
      uint64_t v9 = *(void *)(v8 + 8);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    }
    *(void *)(a1 + 80) -= v9;
    *(void *)std::mutex buf = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    sub_1000E068C(v7, a2, (gpsd::util **)buf);
    if ((sub_1000DFBBC(a1) & 1) == 0)
    {
      uint64_t v10 = qword_100114838;
      if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::mutex buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "NvStore,clearFromCache,writeCacheToDisk failed", buf, 2u);
      }
    }
  }
}

void sub_1000E0674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E068C(uint64_t a1, uint64_t a2, gpsd::util **a3)
{
  *(_DWORD *)(a1 + 64) |= 1u;
  *(void *)(a1 + 16) = a2;
  int v5 = gpsd::util::truncatedSha256(*a3, (const void *)(a3[1] - *a3));
  int v6 = *(_DWORD *)(a1 + 64);
  *(_DWORD *)(a1 + 56) = v5;
  *(_DWORD *)(a1 + 64) = v6 | 6;
  uint64_t v7 = *(void *)(a1 + 24);
  if ((_UNKNOWN *)v7 == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)uint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
  }
  else
  {
    *(unsigned char *)uint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
  }
  std::string::reserve((std::string *)v7, a3[1] - *a3);
  uint64_t v8 = *a3;
  uint64_t v9 = a3[1];
  while (v8 != v9)
  {
    std::string::value_type v10 = *(unsigned char *)v8;
    uint64_t v8 = (gpsd::util *)((char *)v8 + 1);
    std::string::push_back((std::string *)v7, v10);
  }
  uint64_t v11 = *(void *)(a1 + 32) + 1;
  *(_DWORD *)(a1 + 64) |= 8u;
  *(void *)(a1 + 32) = v11;
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  *(_DWORD *)(a1 + 64) |= 0x20u;
  *(CFAbsoluteTime *)(a1 + 48) = Current;
  uint64_t v13 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    int64_t v14 = a3[1] - *a3;
    uint64_t v15 = *(void *)(a1 + 24);
    if (*(char *)(v15 + 23) < 0) {
      uint64_t v16 = *(void *)(v15 + 8);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    }
    int v17 = *(_DWORD *)(a1 + 56);
    uint64_t v18 = *(void *)(a1 + 32);
    int v19 = 134218752;
    uint64_t v20 = v14;
    __int16 v21 = 2048;
    uint64_t v22 = v16;
    __int16 v23 = 1024;
    int v24 = v17;
    __int16 v25 = 2048;
    uint64_t v26 = v18;
    _os_log_debug_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "NvStore,storeToProtobuf,source_size,%zu,dest_size,%zu,hash,%x,count,%lld", (uint8_t *)&v19, 0x26u);
  }
}

void sub_1000E086C(FILE **a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2 && fclose(v2))
  {
    size_t v3 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      int v4 = *__error();
      v5[0] = 67240192;
      v5[1] = v4;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "NvStore,Failed to close file,%{public}d", (uint8_t *)v5, 8u);
    }
  }
}

void sub_1000E092C(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100002FCC(a1);
}

uint64_t sub_1000E0938(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  *(void *)((char *)v71 + *(void *)(v71[0] - 24)) = v6;
  v71[1] = 0;
  uint64_t v7 = (std::ios_base *)((char *)v71 + *(void *)(v71[0] - 24));
  std::ios_base::init(v7, v72);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  std::filebuf::basic_filebuf();
  if (!std::filebuf::open()) {
    std::ios_base::clear((std::ios_base *)((char *)v71 + *(void *)(v71[0] - 24)), *(_DWORD *)&v72[*(void *)(v71[0] - 24) + 16] | 4);
  }
  if ((v72[*(void *)(v71[0] - 24) + 16] & 5) != 0)
  {
    uint64_t v8 = qword_100114840;
    char v9 = 0;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      if (*((char *)a3 + 23) >= 0) {
        std::string::value_type v10 = a3;
      }
      else {
        std::string::value_type v10 = (uint64_t *)*a3;
      }
      *(_DWORD *)std::mutex buf = 136315138;
      int v69 = v10;
      uint64_t v11 = "NvStore,readCacheFromFile,Could not open file,%s";
      uint64_t v12 = buf;
LABEL_9:
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v11, v12, 0xCu);
LABEL_60:
      char v9 = 0;
      goto LABEL_61;
    }
    goto LABEL_61;
  }
  std::istream::seekg();
  std::istream::tellg();
  uint64_t v13 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    if (*((char *)a3 + 23) >= 0) {
      std::string v45 = a3;
    }
    else {
      std::string v45 = (uint64_t *)*a3;
    }
    *(_DWORD *)int v59 = 136315394;
    *(void *)std::string v60 = v45;
    *(_WORD *)&v60[8] = 1026;
    *(_DWORD *)&v60[10] = v70;
    _os_log_debug_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "NvStore,readCacheFromFile,filePath,%s,size,%{public}d", v59, 0x12u);
  }
  std::istream::seekg();
  if (v70)
  {
    if (wireless_diagnostics::google::protobuf::Message::ParseFromIstream())
    {
      int64_t v14 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
      {
        int v46 = *(_DWORD *)(a2 + 24);
        *(_DWORD *)int v59 = 67240192;
        *(_DWORD *)std::string v60 = v46;
        _os_log_debug_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "NvStore,readCacheFromFile,items_size,%{public}d", v59, 8u);
      }
      sub_1000DF6E0(a1, (uint64_t)"post-parse of cache from file");
      int v15 = *(_DWORD *)(a2 + 40);
      if (v15 == 1)
      {
        *(void *)(a2 + 80) = 0;
        if (*(int *)(a2 + 24) < 1)
        {
          char v17 = 0;
        }
        else
        {
          uint64_t v16 = 0;
          char v17 = 0;
          BOOL v18 = 0;
          int v19 = (void *)(a2 + 16);
          do
          {
            uint64_t v20 = *(void *)(*v19 + 8 * v16);
            uint64_t v21 = *(void *)(v20 + 24);
            if (*(char *)(v21 + 23) < 0) {
              uint64_t v22 = *(void *)(v21 + 8);
            }
            else {
              uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
            }
            *(void *)(a2 + 80) += v22;
            BOOL v18 = v18 || (*(unsigned char *)(v20 + 64) & 1) == 0;
            int v23 = *(_DWORD *)(v20 + 56);
            int v24 = *(char *)(v21 + 23);
            if (v24 >= 0) {
              __int16 v25 = (gpsd::util *)v21;
            }
            else {
              __int16 v25 = *(gpsd::util **)v21;
            }
            if (v24 >= 0) {
              uint64_t v26 = (const void *)*(unsigned __int8 *)(v21 + 23);
            }
            else {
              uint64_t v26 = *(const void **)(v21 + 8);
            }
            int v27 = gpsd::util::truncatedSha256(v25, v26);
            if (v23 != v27)
            {
              if (v16 >= *(int *)(a2 + 24))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v59);
              }
              uint64_t v28 = *(void *)(*v19 + 8 * v16);
              double v29 = qword_100114840;
              if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
              {
                uint64_t v31 = *(void *)(v28 + 24);
                if (*(char *)(v31 + 23) < 0) {
                  uint64_t v32 = *(void *)(v31 + 8);
                }
                else {
                  uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
                }
                int v33 = *(_DWORD *)(a2 + 24);
                uint64_t v34 = *(void *)(v28 + 16);
                *(_DWORD *)int v59 = 67241216;
                *(_DWORD *)std::string v60 = v33;
                *(_WORD *)&v60[4] = 2050;
                *(void *)&v60[6] = v34;
                *(_WORD *)&v60[14] = 2050;
                *(void *)&v60[16] = v32;
                __int16 v61 = 1026;
                int v62 = v23;
                __int16 v63 = 1026;
                int v64 = v27;
                _os_log_error_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_ERROR, "NvStore,readCacheFromFile,hash does not match,items_size,%{public}d,itemId,%{public}lld,size,%{public}zu,storedHash,%{public}x,calculatedHash,%{public}x", v59, 0x28u);
              }
              *(_DWORD *)(v28 + 64) |= 2u;
              uint64_t v30 = *(void *)(v28 + 24);
              if ((_UNKNOWN *)v30 == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
                operator new();
              }
              if (*(char *)(v30 + 23) < 0)
              {
                **(unsigned char **)uint64_t v30 = 0;
                *(void *)(v30 + 8) = 0;
              }
              else
              {
                *(unsigned char *)uint64_t v30 = 0;
                *(unsigned char *)(v30 + 23) = 0;
              }
              char v17 = 1;
            }
            ++v16;
          }
          while (v16 < *(int *)(a2 + 24));
          if (v18)
          {
            proto::gnsshal::NvStore::NvStore((proto::gnsshal::NvStore *)v59, (const proto::gnsshal::NvStore *)a2);
            if (*(char *)(a2 + 79) < 0)
            {
              sub_1000186E8(&__p, *(void **)(a2 + 56), *(void *)(a2 + 64));
            }
            else
            {
              long long __p = *(_OWORD *)(a2 + 56);
              uint64_t v66 = *(void *)(a2 + 72);
            }
            uint64_t v67 = *(void *)(a2 + 80);
            sub_10003AD6C(a2 + 16);
            if (*(int *)&v60[20] >= 1)
            {
              uint64_t v47 = 0;
              do
              {
                std::string v48 = *(proto::gnsshal::NvStoreItem **)(*(void *)&v60[12] + 8 * v47);
                if (*((unsigned char *)v48 + 64))
                {
                  int v50 = *(_DWORD *)(a2 + 28);
                  uint64_t v51 = *(int *)(a2 + 24);
                  if ((int)v51 >= v50)
                  {
                    if (v50 == *(_DWORD *)(a2 + 32))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a2 + 16), v50 + 1);
                      int v50 = *(_DWORD *)(a2 + 28);
                    }
                    *(_DWORD *)(a2 + 28) = v50 + 1;
                    sub_10003AD08();
                  }
                  uint64_t v52 = *(void *)(a2 + 16);
                  *(_DWORD *)(a2 + 24) = v51 + 1;
                  std::string v53 = *(proto::gnsshal::NvStoreItem **)(v52 + 8 * v51);
                  if (v48 != v53)
                  {
                    (*(void (**)(proto::gnsshal::NvStoreItem *))(*(void *)v53 + 32))(v53);
                    proto::gnsshal::NvStoreItem::MergeFrom(v53, v48);
                  }
                }
                else
                {
                  std::string v49 = qword_100114838;
                  if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_DWORD *)std::string v57 = 67240192;
                    int v58 = v47;
                    _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "NvStore,readCacheFromFile,Missing item id for index,%{public}d", v57, 8u);
                  }
                }
                ++v47;
              }
              while (v47 < *(int *)&v60[20]);
            }
            if (SHIBYTE(v66) < 0) {
              operator delete((void *)__p);
            }
            proto::gnsshal::NvStore::~NvStore((proto::gnsshal::NvStore *)v59);
          }
        }
        std::string v54 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
        {
          int v55 = *(_DWORD *)(a2 + 24);
          uint64_t v56 = *(void *)(a2 + 80);
          *(_DWORD *)int v59 = 67109376;
          *(_DWORD *)std::string v60 = v55;
          *(_WORD *)&v60[4] = 2048;
          *(void *)&v60[6] = v56;
          _os_log_debug_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEBUG, "NvStore,readCacheFromFile,numItems,%d,totalSize,%lld", v59, 0x12u);
        }
        char v9 = v17 ^ 1;
        goto LABEL_61;
      }
      uint64_t v43 = qword_100114838;
      if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int v59 = 67240448;
        *(_DWORD *)std::string v60 = v15;
        *(_WORD *)&v60[4] = 1026;
        *(_DWORD *)&v60[6] = 1;
        int v40 = "NvStore,readCacheFromFile,Unexpected version,%{public}d,Expected version,%{public}d";
        int v41 = v43;
        uint32_t v42 = 14;
LABEL_58:
        _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, v40, v59, v42);
      }
    }
    else
    {
      uint64_t v36 = qword_100114838;
      if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
      {
        if (*((char *)a3 + 23) >= 0) {
          __int16 v37 = a3;
        }
        else {
          __int16 v37 = (uint64_t *)*a3;
        }
        int v38 = *(_DWORD *)(a2 + 40);
        int v39 = *(_DWORD *)(a2 + 24);
        *(_DWORD *)int v59 = 136315650;
        *(void *)std::string v60 = v37;
        *(_WORD *)&v60[8] = 1024;
        *(_DWORD *)&v60[10] = v38;
        *(_WORD *)&v60[14] = 1024;
        *(_DWORD *)&v60[16] = v39;
        int v40 = "NvStore,readCacheFromFile,Could not parse message from file,%s,parsed_ver,%d,parsed_items_size,%d";
        int v41 = v36;
        uint32_t v42 = 24;
        goto LABEL_58;
      }
    }
    proto::gnsshal::NvStore::Clear((proto::gnsshal::NvStore *)a2);
    goto LABEL_60;
  }
  uint64_t v8 = qword_100114838;
  char v9 = 0;
  if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
  {
    if (*((char *)a3 + 23) >= 0) {
      int v35 = a3;
    }
    else {
      int v35 = (uint64_t *)*a3;
    }
    *(_DWORD *)int v59 = 136315138;
    *(void *)std::string v60 = v35;
    uint64_t v11 = "NvStore,readCacheFromFile,Empty file,%s";
    uint64_t v12 = v59;
    goto LABEL_9;
  }
LABEL_61:
  std::filebuf::~filebuf();
  std::istream::~istream();
  std::ios::~ios();
  return v9 & 1;
}

void sub_1000E12AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
}

void sub_1000E133C(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_1000E133C(a1, *(void *)a2);
    sub_1000E133C(a1, *((void *)a2 + 1));
    if (a2[63] < 0) {
      operator delete(*((void **)a2 + 5));
    }
    operator delete(a2);
  }
}

void sub_1000E13A0(char *a1, char *a2, unint64_t *a3)
{
  if (a1 != a2)
  {
    int v5 = a1;
    uint64_t v6 = (unsigned char *)a3[1];
    do
    {
      char v7 = *v5;
      unint64_t v8 = a3[2];
      if ((unint64_t)v6 >= v8)
      {
        unint64_t v10 = *a3;
        uint64_t v11 = &v6[-*a3];
        unint64_t v12 = (unint64_t)(v11 + 1);
        if ((uint64_t)(v11 + 1) < 0) {
          sub_100007204();
        }
        unint64_t v13 = v8 - v10;
        if (2 * v13 > v12) {
          unint64_t v12 = 2 * v13;
        }
        if (v13 >= 0x3FFFFFFFFFFFFFFFLL) {
          size_t v14 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          size_t v14 = v12;
        }
        if (v14) {
          int v15 = (char *)operator new(v14);
        }
        else {
          int v15 = 0;
        }
        uint64_t v16 = &v11[(void)v15];
        char v17 = &v11[(void)v15];
        unsigned char *v17 = v7;
        char v9 = v17 + 1;
        if (v6 != (unsigned char *)v10)
        {
          BOOL v18 = &v6[~v10];
          do
          {
            char v19 = *--v6;
            (v18--)[(void)v15] = v19;
          }
          while (v6 != (unsigned char *)v10);
          uint64_t v6 = (unsigned char *)*a3;
          uint64_t v16 = v15;
        }
        *a3 = (unint64_t)v16;
        a3[1] = (unint64_t)v9;
        a3[2] = (unint64_t)&v15[v14];
        if (v6) {
          operator delete(v6);
        }
      }
      else
      {
        *uint64_t v6 = v7;
        char v9 = v6 + 1;
      }
      a3[1] = (unint64_t)v9;
      ++v5;
      uint64_t v6 = v9;
    }
    while (v5 != a2);
  }
}

uint64_t AnalyticsSendEventLazy()
{
  return _AnalyticsSendEventLazy();
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return _CC_SHA256(data, len, md);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  return _CFAbsoluteTimeGetCurrent();
}

CFArrayRef CFArrayCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFArrayCallBacks *callBacks)
{
  return _CFArrayCreate(allocator, values, numValues, callBacks);
}

CFTypeID CFBooleanGetTypeID(void)
{
  return _CFBooleanGetTypeID();
}

CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length)
{
  return _CFDataCreate(allocator, bytes, length);
}

void CFDataGetBytes(CFDataRef theData, CFRange range, UInt8 *buffer)
{
}

CFDictionaryRef CFDictionaryCreate(CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return _CFDictionaryCreate(allocator, keys, values, numValues, keyCallBacks, valueCallBacks);
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return _CFEqual(cf1, cf2);
}

CFStringRef CFErrorCopyDescription(CFErrorRef err)
{
  return _CFErrorCopyDescription(err);
}

CFIndex CFErrorGetCode(CFErrorRef err)
{
  return _CFErrorGetCode(err);
}

CFErrorDomain CFErrorGetDomain(CFErrorRef err)
{
  return _CFErrorGetDomain(err);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return _CFGetTypeID(cf);
}

void CFReadStreamClose(CFReadStreamRef stream)
{
}

CFErrorRef CFReadStreamCopyError(CFReadStreamRef stream)
{
  return _CFReadStreamCopyError(stream);
}

CFTypeRef CFReadStreamCopyProperty(CFReadStreamRef stream, CFStreamPropertyKey propertyName)
{
  return _CFReadStreamCopyProperty(stream, propertyName);
}

CFStreamStatus CFReadStreamGetStatus(CFReadStreamRef stream)
{
  return _CFReadStreamGetStatus(stream);
}

Boolean CFReadStreamHasBytesAvailable(CFReadStreamRef stream)
{
  return _CFReadStreamHasBytesAvailable(stream);
}

Boolean CFReadStreamOpen(CFReadStreamRef stream)
{
  return _CFReadStreamOpen(stream);
}

CFIndex CFReadStreamRead(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength)
{
  return _CFReadStreamRead(stream, buffer, bufferLength);
}

Boolean CFReadStreamSetClient(CFReadStreamRef stream, CFOptionFlags streamEvents, CFReadStreamClientCallBack clientCB, CFStreamClientContext *clientContext)
{
  return _CFReadStreamSetClient(stream, streamEvents, clientCB, clientContext);
}

void CFReadStreamSetDispatchQueue(CFReadStreamRef stream, dispatch_queue_t q)
{
}

Boolean CFReadStreamSetProperty(CFReadStreamRef stream, CFStreamPropertyKey propertyName, CFTypeRef propertyValue)
{
  return _CFReadStreamSetProperty(stream, propertyName, propertyValue);
}

void CFRelease(CFTypeRef cf)
{
}

void CFStreamCreatePairWithSocketToHost(CFAllocatorRef alloc, CFStringRef host, UInt32 port, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream)
{
}

CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding)
{
  return _CFStringCreateWithCString(alloc, cStr, encoding);
}

const char *__cdecl CFStringGetCStringPtr(CFStringRef theString, CFStringEncoding encoding)
{
  return _CFStringGetCStringPtr(theString, encoding);
}

CFUUIDRef CFUUIDGetConstantUUIDWithBytes(CFAllocatorRef alloc, UInt8 byte0, UInt8 byte1, UInt8 byte2, UInt8 byte3, UInt8 byte4, UInt8 byte5, UInt8 byte6, UInt8 byte7, UInt8 byte8, UInt8 byte9, UInt8 byte10, UInt8 byte11, UInt8 byte12, UInt8 byte13, UInt8 byte14, UInt8 byte15)
{
  return _CFUUIDGetConstantUUIDWithBytes(alloc, byte0, byte1, byte2, byte3, byte4, byte5, byte6, byte7, byte8, byte9, byte10, byte11, byte12, byte13, byte14, byte15);
}

CFUUIDBytes CFUUIDGetUUIDBytes(CFUUIDRef uuid)
{
  CFUUIDBytes v3 = _CFUUIDGetUUIDBytes(uuid);
  uint64_t v2 = *(void *)&v3.byte8;
  uint64_t v1 = *(void *)&v3.byte0;
  result.byte8 = v2;
  result.byte9 = BYTE1(v2);
  result.byte10 = BYTE2(v2);
  result.byte11 = BYTE3(v2);
  result.byte12 = BYTE4(v2);
  result.byte13 = BYTE5(v2);
  result.byte14 = BYTE6(v2);
  result.byte15 = HIBYTE(v2);
  result.byte0 = v1;
  result.byte1 = BYTE1(v1);
  result.byte2 = BYTE2(v1);
  result.byte3 = BYTE3(v1);
  result.byte4 = BYTE4(v1);
  result.byte5 = BYTE5(v1);
  result.byte6 = BYTE6(v1);
  result.byte7 = HIBYTE(v1);
  return result;
}

void CFWriteStreamClose(CFWriteStreamRef stream)
{
}

CFErrorRef CFWriteStreamCopyError(CFWriteStreamRef stream)
{
  return _CFWriteStreamCopyError(stream);
}

CFTypeRef CFWriteStreamCopyProperty(CFWriteStreamRef stream, CFStreamPropertyKey propertyName)
{
  return _CFWriteStreamCopyProperty(stream, propertyName);
}

CFStreamStatus CFWriteStreamGetStatus(CFWriteStreamRef stream)
{
  return _CFWriteStreamGetStatus(stream);
}

Boolean CFWriteStreamOpen(CFWriteStreamRef stream)
{
  return _CFWriteStreamOpen(stream);
}

Boolean CFWriteStreamSetClient(CFWriteStreamRef stream, CFOptionFlags streamEvents, CFWriteStreamClientCallBack clientCB, CFStreamClientContext *clientContext)
{
  return _CFWriteStreamSetClient(stream, streamEvents, clientCB, clientContext);
}

void CFWriteStreamSetDispatchQueue(CFWriteStreamRef stream, dispatch_queue_t q)
{
}

Boolean CFWriteStreamSetProperty(CFWriteStreamRef stream, CFStreamPropertyKey propertyName, CFTypeRef propertyValue)
{
  return _CFWriteStreamSetProperty(stream, propertyName, propertyValue);
}

CFIndex CFWriteStreamWrite(CFWriteStreamRef stream, const UInt8 *buffer, CFIndex bufferLength)
{
  return _CFWriteStreamWrite(stream, buffer, bufferLength);
}

kern_return_t IOConnectCallScalarMethod(mach_port_t connection, uint32_t selector, const uint64_t *input, uint32_t inputCnt, uint64_t *output, uint32_t *outputCnt)
{
  return _IOConnectCallScalarMethod(connection, selector, input, inputCnt, output, outputCnt);
}

kern_return_t IOCreatePlugInInterfaceForService(io_service_t service, CFUUIDRef pluginType, CFUUIDRef interfaceType, IOCFPlugInInterface ***theInterface, SInt32 *theScore)
{
  return _IOCreatePlugInInterfaceForService(service, pluginType, interfaceType, theInterface, theScore);
}

io_object_t IOIteratorNext(io_iterator_t iterator)
{
  return _IOIteratorNext(iterator);
}

kern_return_t IOMainPort(mach_port_t bootstrapPort, mach_port_t *mainPort)
{
  return _IOMainPort(bootstrapPort, mainPort);
}

IONotificationPortRef IONotificationPortCreate(mach_port_t mainPort)
{
  return _IONotificationPortCreate(mainPort);
}

void IONotificationPortSetDispatchQueue(IONotificationPortRef notify, dispatch_queue_t queue)
{
}

kern_return_t IOObjectRelease(io_object_t object)
{
  return _IOObjectRelease(object);
}

kern_return_t IORegistryEntryGetChildEntry(io_registry_entry_t entry, const io_name_t plane, io_registry_entry_t *child)
{
  return _IORegistryEntryGetChildEntry(entry, plane, child);
}

kern_return_t IOServiceAddInterestNotification(IONotificationPortRef notifyPort, io_service_t service, const io_name_t interestType, IOServiceInterestCallback callback, void *refCon, io_object_t *notification)
{
  return _IOServiceAddInterestNotification(notifyPort, service, interestType, callback, refCon, notification);
}

kern_return_t IOServiceClose(io_connect_t connect)
{
  return _IOServiceClose(connect);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return _IOServiceGetMatchingService(mainPort, matching);
}

kern_return_t IOServiceGetMatchingServices(mach_port_t mainPort, CFDictionaryRef matching, io_iterator_t *existing)
{
  return _IOServiceGetMatchingServices(mainPort, matching, existing);
}

CFMutableDictionaryRef IOServiceMatching(const char *name)
{
  return _IOServiceMatching(name);
}

CFMutableDictionaryRef IOServiceNameMatching(const char *name)
{
  return _IOServiceNameMatching(name);
}

kern_return_t IOServiceOpen(io_service_t service, task_port_t owningTask, uint32_t type, io_connect_t *connect)
{
  return _IOServiceOpen(service, owningTask, type, connect);
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

uint64_t MGGetProductType()
{
  return _MGGetProductType();
}

uint64_t MGIsDeviceOfType()
{
  return _MGIsDeviceOfType();
}

SecCertificateRef SecCertificateCreateWithData(CFAllocatorRef allocator, CFDataRef data)
{
  return _SecCertificateCreateWithData(allocator, data);
}

SecPolicyRef SecPolicyCreateBasicX509(void)
{
  return _SecPolicyCreateBasicX509();
}

CFTypeRef SecTaskCopyValueForEntitlement(SecTaskRef task, CFStringRef entitlement, CFErrorRef *error)
{
  return _SecTaskCopyValueForEntitlement(task, entitlement, error);
}

SecTaskRef SecTaskCreateWithAuditToken(CFAllocatorRef allocator, audit_token_t *token)
{
  return _SecTaskCreateWithAuditToken(allocator, token);
}

BOOL SecTrustEvaluateWithError(SecTrustRef trust, CFErrorRef *error)
{
  return _SecTrustEvaluateWithError(trust, error);
}

OSStatus SecTrustSetAnchorCertificates(SecTrustRef trust, CFArrayRef anchorCertificates)
{
  return _SecTrustSetAnchorCertificates(trust, anchorCertificates);
}

OSStatus SecTrustSetPolicies(SecTrustRef trust, CFTypeRef policies)
{
  return _SecTrustSetPolicies(trust, policies);
}

uint64_t TelephonyBasebandPCITransportCreate()
{
  return _TelephonyBasebandPCITransportCreate();
}

uint64_t TelephonyBasebandPCITransportInitParameters()
{
  return _TelephonyBasebandPCITransportInitParameters();
}

uint64_t TelephonyBasebandPCITransportTimesync()
{
  return _TelephonyBasebandPCITransportTimesync();
}

uint64_t TelephonyUtilTransportFree()
{
  return _TelephonyUtilTransportFree();
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Exit(int a1)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t wireless_diagnostics::google::protobuf::MessageLite::ParseFromArray(wireless_diagnostics::google::protobuf::MessageLite *this, const void *a2, int a3)
{
  return wireless_diagnostics::google::protobuf::MessageLite::ParseFromArray(this, a2, a3);
}

void wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(wireless_diagnostics::google::protobuf::MessageLite *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(wireless_diagnostics::google::protobuf::DescriptorPool *this)
{
  return wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(this);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile(wireless_diagnostics::google::protobuf::DescriptorPool *this, const void *a2, int a3)
{
  return wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile(this, a2, a3);
}

uint64_t wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(wireless_diagnostics::google::protobuf::MessageFactory *this)
{
  return wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(this);
}

uint64_t wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile()
{
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
}

uint64_t wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage()
{
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

uint64_t wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom(wireless_diagnostics::google::protobuf::UnknownFieldSet *a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom(a1, a2);
}

uint64_t wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet(this);
}

void wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::GoogleOnceInitImpl()
{
  return wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  return wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  return wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  return wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  return wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, int a2)
{
  return wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, int a2)
{
  return wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, int a2)
{
  return wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::ArrayOutputStream::ArrayOutputStream(wireless_diagnostics::google::protobuf::io::ArrayOutputStream *this, void *a2, int a3, int a4)
{
  return wireless_diagnostics::google::protobuf::io::ArrayOutputStream::ArrayOutputStream(this, a2, a3, a4);
}

void wireless_diagnostics::google::protobuf::io::ArrayOutputStream::~ArrayOutputStream(wireless_diagnostics::google::protobuf::io::ArrayOutputStream *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this, unint64_t a2)
{
  return wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this, unsigned int a2)
{
  return wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this, const void *a2, int a3, unsigned __int8 *a4)
{
  return wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian32(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this, unsigned int a2)
{
  return wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian32(this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this, unsigned int a2)
{
  return wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this, unint64_t a2, unsigned __int8 *a3)
{
  return wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(this, a2, a3);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this, unsigned int a2, unsigned __int8 *a3)
{
  return wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(this, a2, a3);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::CodedOutputStream()
{
  return wireless_diagnostics::google::protobuf::io::CodedOutputStream::CodedOutputStream();
}

void wireless_diagnostics::google::protobuf::io::CodedOutputStream::~CodedOutputStream(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::Message::ParseFromIstream()
{
  return wireless_diagnostics::google::protobuf::Message::ParseFromIstream();
}

void wireless_diagnostics::google::protobuf::Message::~Message(wireless_diagnostics::google::protobuf::Message *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage()
{
  return wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
}

void wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage(wireless_diagnostics::google::protobuf::internal::LogMessage *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<()
{
  return wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  return wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  return wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=()
{
  return wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedInputStream *a3, const wireless_diagnostics::google::protobuf::MessageLite *a4)
{
  return wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField(this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::Clear(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this)
{
  return wireless_diagnostics::google::protobuf::internal::ExtensionSet::Clear(this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::MergeFrom(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this, const wireless_diagnostics::google::protobuf::internal::ExtensionSet *a2)
{
  return wireless_diagnostics::google::protobuf::internal::ExtensionSet::MergeFrom(this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this)
{
  return wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet(this);
}

void wireless_diagnostics::google::protobuf::internal::ExtensionSet::~ExtensionSet(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(wireless_diagnostics::google::protobuf::internal::ReflectionOps *this, const wireless_diagnostics::google::protobuf::Message *a2, wireless_diagnostics::google::protobuf::Message *a3)
{
  return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(this, a2, a3);
}

uint64_t wireless_diagnostics::google::protobuf::internal::VerifyVersion(wireless_diagnostics::google::protobuf::internal *this, int a2, int a3, const char *a4)
{
  return wireless_diagnostics::google::protobuf::internal::VerifyVersion(this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString()
{
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes()
{
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, int a2, float a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat(this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, int a2, int a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32(this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64(this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, int a2, double a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble(this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString()
{
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, int a2, unsigned int a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32(this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, int a2, unint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64(this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, int a2, const wireless_diagnostics::google::protobuf::MessageLite *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage(this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline()
{
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, int a2, const wireless_diagnostics::google::protobuf::MessageLite *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes()
{
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, a2, a3);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, int a2, BOOL a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool(this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, int a2, int a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum(this, a2, a3, a4);
}

void wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0(wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *this, int a2)
{
  return wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection()
{
  return wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection();
}

uint64_t cnlogging::details::CNProtobufStreamChecksum::adler32()
{
  return cnlogging::details::CNProtobufStreamChecksum::adler32();
}

uint64_t wireless_diagnostics::google::protobuf::MessageLite::SerializeToArray(wireless_diagnostics::google::protobuf::MessageLite *this, void *a2)
{
  return wireless_diagnostics::google::protobuf::MessageLite::SerializeToArray(this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::MessageLite::SerializeToString()
{
  return wireless_diagnostics::google::protobuf::MessageLite::SerializeToString();
}

uint64_t wireless_diagnostics::google::protobuf::MessageLite::SerializeToCodedStream(wireless_diagnostics::google::protobuf::MessageLite *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2)
{
  return wireless_diagnostics::google::protobuf::MessageLite::SerializeToCodedStream(this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName()
{
  return wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizes(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizes(this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::ByteSize(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this)
{
  return wireless_diagnostics::google::protobuf::internal::ExtensionSet::ByteSize(this);
}

uint64_t std::stringbuf::str()
{
  return std::stringbuf::str();
}

const std::locale::facet *__cdecl std::locale::use_facet(const std::locale *this, std::locale::id *a2)
{
  return std::locale::use_facet(this, a2);
}

std::locale std::ios_base::getloc(const std::ios_base *this)
{
  return std::ios_base::getloc(this);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return std::logic_error::logic_error(this, a2);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const std::logic_error *a2)
{
  return std::logic_error::logic_error(this, a2);
}

std::exception_ptr *__cdecl std::exception_ptr::exception_ptr(std::exception_ptr *this, const std::exception_ptr *a2)
{
  return std::exception_ptr::exception_ptr(this, a2);
}

void std::exception_ptr::~exception_ptr(std::exception_ptr *this)
{
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return std::bad_array_new_length::bad_array_new_length(this);
}

size_t std::__next_prime(size_t __n)
{
  return std::__next_prime(__n);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s)
{
  return std::string::append(this, __s);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s, std::string::size_type __n)
{
  return std::string::append(this, __s, __n);
}

std::string *__cdecl std::string::assign(std::string *this, const std::string::value_type *__s)
{
  return std::string::assign(this, __s);
}

std::string *__cdecl std::string::assign(std::string *this, const std::string::value_type *__s, std::string::size_type __n)
{
  return std::string::assign(this, __s, __n);
}

std::string *__cdecl std::string::insert(std::string *this, std::string::size_type __pos, const std::string::value_type *__s)
{
  return std::string::insert(this, __pos, __s);
}

std::string *__cdecl std::string::replace(std::string *this, std::string::size_type __pos, std::string::size_type __n1, const std::string::value_type *__s, std::string::size_type __n2)
{
  return std::string::replace(this, __pos, __n1, __s, __n2);
}

void std::string::reserve(std::string *this, std::string::size_type __requested_capacity)
{
}

void std::string::push_back(std::string *this, std::string::value_type __c)
{
}

std::string *__cdecl std::string::basic_string(std::string *this, const std::string *__str, std::string::size_type __pos, std::string::size_type __n, std::allocator<char> *__a)
{
  return std::string::basic_string(this, __str, __pos, __n, __a);
}

void std::string::~string(std::string *this)
{
}

std::string *__cdecl std::string::operator=(std::string *this, const std::string *__str)
{
  return std::string::operator=(this, __str);
}

std::future_error *__cdecl std::future_error::future_error(std::future_error *this, std::error_code __ec)
{
  return std::future_error::future_error(this, __ec);
}

void std::future_error::~future_error(std::future_error *this)
{
}

uint64_t std::filebuf::open()
{
  return std::filebuf::open();
}

uint64_t std::filebuf::close()
{
  return std::filebuf::close();
}

uint64_t std::filebuf::basic_filebuf()
{
  return std::filebuf::basic_filebuf();
}

uint64_t std::filebuf::~filebuf()
{
  return std::filebuf::~filebuf();
}

uint64_t std::istream::seekg()
{
  return std::istream::seekg();
}

uint64_t std::istream::tellg()
{
  return std::istream::tellg();
}

uint64_t std::istream::~istream()
{
  return std::istream::~istream();
}

uint64_t std::ostream::put()
{
  return std::ostream::put();
}

uint64_t std::ostream::flush()
{
  return std::ostream::flush();
}

uint64_t std::ostream::write()
{
  return std::ostream::write();
}

uint64_t std::ostream::sentry::sentry()
{
  return std::ostream::sentry::sentry();
}

uint64_t std::ostream::sentry::~sentry()
{
  return std::ostream::sentry::~sentry();
}

uint64_t std::ostream::~ostream()
{
  return std::ostream::~ostream();
}

uint64_t std::ostream::operator<<()
{
  return std::ostream::operator<<();
}

{
  return std::ostream::operator<<();
}

{
  return std::ostream::operator<<();
}

{
  return std::ostream::operator<<();
}

{
  return std::ostream::operator<<();
}

void std::__shared_count::~__shared_count(std::__shared_count *this)
{
}

uint64_t std::iostream::~basic_iostream()
{
  return std::iostream::~basic_iostream();
}

uint64_t std::ofstream::open()
{
  return std::ofstream::open();
}

uint64_t std::streambuf::basic_streambuf()
{
  return std::streambuf::basic_streambuf();
}

uint64_t std::streambuf::~streambuf()
{
  return std::streambuf::~streambuf();
}

const std::error_category *std::future_category(void)
{
  return std::future_category();
}

void std::__assoc_sub_state::__sub_wait(std::__assoc_sub_state *this, std::unique_lock<std::mutex> *__lk)
{
}

void std::__assoc_sub_state::set_exception(std::__assoc_sub_state *this, std::exception_ptr __p)
{
}

void std::condition_variable::notify_all(std::condition_variable *this)
{
}

void std::condition_variable::notify_one(std::condition_variable *this)
{
}

void std::condition_variable::__do_timed_wait(std::condition_variable *this, std::unique_lock<std::mutex> *__lk, std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> a3)
{
}

void std::condition_variable::~condition_variable(std::condition_variable *this)
{
}

void std::__shared_weak_count::__release_weak(std::__shared_weak_count *this)
{
}

void std::__throw_system_error(int __ev, const char *__what_arg)
{
}

void std::mutex::lock(std::mutex *this)
{
}

void std::mutex::unlock(std::mutex *this)
{
}

void std::mutex::~mutex(std::mutex *this)
{
}

std::chrono::steady_clock::time_point std::chrono::steady_clock::now(void)
{
  return std::chrono::steady_clock::now();
}

std::chrono::system_clock::time_point std::chrono::system_clock::now(void)
{
  return std::chrono::system_clock::now();
}

void std::locale::~locale(std::locale *this)
{
}

void std::ios_base::__set_badbit_and_consider_rethrow(std::ios_base *this)
{
}

void std::ios_base::init(std::ios_base *this, void *__sb)
{
}

void std::ios_base::clear(std::ios_base *this, std::ios_base::iostate __state)
{
}

uint64_t std::ios::~ios()
{
  return std::ios::~ios();
}

std::string *__cdecl std::to_string(std::string *__return_ptr retstr, int __val)
{
  return std::to_string(retstr, __val);
}

std::string *__cdecl std::to_string(std::string *__return_ptr retstr, unint64_t __val)
{
  return std::to_string(retstr, __val);
}

uint64_t std::operator+<char>()
{
  return std::operator+<char>();
}

void std::exception::~exception(std::exception *this)
{
}

std::exception_ptr std::current_exception(void)
{
  return std::current_exception();
}

void std::rethrow_exception(std::exception_ptr a1)
{
}

void std::terminate(void)
{
}

void operator delete[]()
{
  while (1)
    ;
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void operator new[]()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return ___cxa_allocate_exception(thrown_size);
}

int __cxa_atexit(void (*lpfunc)(void *), void *obj, void *lpdso_handle)
{
  return ___cxa_atexit(lpfunc, obj, lpdso_handle);
}

void *__cxa_begin_catch(void *a1)
{
  return ___cxa_begin_catch(a1);
}

void __cxa_end_catch(void)
{
}

void __cxa_free_exception(void *a1)
{
}

void __cxa_guard_abort(__guard *a1)
{
}

int __cxa_guard_acquire(__guard *a1)
{
  return ___cxa_guard_acquire((uint64_t *)a1);
}

void __cxa_guard_release(__guard *a1)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

int __darwin_check_fd_set_overflow(int a1, const void *a2, int a3)
{
  return ___darwin_check_fd_set_overflow(a1, a2, a3);
}

void *__dynamic_cast(const void *lpsrc, const struct __class_type_info *lpstype, const struct __class_type_info *lpdtype, ptrdiff_t s2d)
{
  return (void *)___dynamic_cast(lpsrc, lpstype, lpdtype, s2d);
}

int *__error(void)
{
  return ___error();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

int access(const char *a1, int a2)
{
  return _access(a1, a2);
}

int atoi(const char *a1)
{
  return _atoi(a1);
}

void bzero(void *a1, size_t a2)
{
}

void cfmakeraw(termios *a1)
{
}

int cfsetspeed(termios *a1, speed_t a2)
{
  return _cfsetspeed(a1, a2);
}

int chmod(const char *a1, mode_t a2)
{
  return _chmod(a1, a2);
}

int clock_gettime(clockid_t __clock_id, timespec *__tp)
{
  return _clock_gettime(__clock_id, __tp);
}

int close(int a1)
{
  return _close(a1);
}

compression_status compression_stream_destroy(compression_stream *stream)
{
  return _compression_stream_destroy(stream);
}

compression_status compression_stream_init(compression_stream *stream, compression_stream_operation operation, compression_algorithm algorithm)
{
  return _compression_stream_init(stream, operation, algorithm);
}

compression_status compression_stream_process(compression_stream *stream, int flags)
{
  return _compression_stream_process(stream, flags);
}

long double cos(long double __x)
{
  return _cos(__x);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_release(dispatch_object_t object)
{
}

void dispatch_resume(dispatch_object_t object)
{
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return _dispatch_source_create(type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_suspend(dispatch_object_t object)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_walltime(const timespec *when, int64_t delta)
{
  return _dispatch_walltime(when, delta);
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return _dlopen(__path, __mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return _dlsym(__handle, __symbol);
}

void exit(int a1)
{
}

int fclose(FILE *a1)
{
  return _fclose(a1);
}

int fcntl(int a1, int a2, ...)
{
  return _fcntl(a1, a2);
}

int fileno(FILE *a1)
{
  return _fileno(a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return _fopen(__filename, __mode);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return _fread(__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
}

size_t fwrite(const void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return _fwrite(__ptr, __size, __nitems, __stream);
}

int getrusage(int a1, rusage *a2)
{
  return _getrusage(a1, a2);
}

tm *__cdecl gmtime(const time_t *a1)
{
  return _gmtime(a1);
}

int ioctl(int a1, unint64_t a2, ...)
{
  return _ioctl(a1, a2);
}

uint64_t mach_absolute_time(void)
{
  return _mach_absolute_time();
}

uint64_t mach_continuous_time(void)
{
  return _mach_continuous_time();
}

char *__cdecl mach_error_string(mach_error_t error_value)
{
  return _mach_error_string(error_value);
}

uint64_t mach_get_times()
{
  return _mach_get_times();
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return _mach_timebase_info(info);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_malloc(size, type_id);
}

void *__cdecl memchr(void *__s, int __c, size_t __n)
{
  return _memchr(__s, __c, __n);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return _memset(__b, __c, __len);
}

void memset_pattern16(void *__b, const void *__pattern16, size_t __len)
{
}

int mkdir(const char *a1, mode_t a2)
{
  return _mkdir(a1, a2);
}

time_t mktime(tm *a1)
{
  return _mktime(a1);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

{
}

{
}

void objc_enumerationMutation(id obj)
{
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

void objc_release(id a1)
{
}

int open(const char *a1, int a2, ...)
{
  return _open(a1, a2);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t os_transaction_create()
{
  return _os_transaction_create();
}

uint64_t os_variant_has_internal_diagnostics()
{
  return _os_variant_has_internal_diagnostics();
}

ssize_t read(int a1, void *a2, size_t a3)
{
  return _read(a1, a2, a3);
}

BOOL remove(const std::__fs::filesystem::path *__p, std::error_code *__ec)
{
  return _remove(__p, __ec);
}

void rename(const std::__fs::filesystem::path *__from, const std::__fs::filesystem::path *__to, std::error_code *__ec)
{
}

int select(int a1, fd_set *a2, fd_set *a3, fd_set *a4, timeval *a5)
{
  return _select(a1, a2, a3, a4, a5);
}

void (__cdecl *__cdecl signal(int a1, void (__cdecl *a2)(int)))(int)
{
  return _signal(a1, a2);
}

unsigned int sleep(unsigned int a1)
{
  return _sleep(a1);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return _snprintf(__str, __size, __format);
}

int stat(const char *a1, stat *a2)
{
  return _stat(a1, a2);
}

int strcmp(const char *__s1, const char *__s2)
{
  return _strcmp(__s1, __s2);
}

char *__cdecl strerror(int __errnum)
{
  return _strerror(__errnum);
}

size_t strftime(char *a1, size_t a2, const char *a3, const tm *a4)
{
  return _strftime(a1, a2, a3, a4);
}

size_t strlen(const char *__s)
{
  return _strlen(__s);
}

char *__cdecl strptime(const char *a1, const char *a2, tm *a3)
{
  return _strptime(a1, a2, a3);
}

kern_return_t task_info(task_name_t target_task, task_flavor_t flavor, task_info_t task_info_out, mach_msg_type_number_t *task_info_outCnt)
{
  return _task_info(target_task, flavor, task_info_out, task_info_outCnt);
}

int tcflush(int a1, int a2)
{
  return _tcflush(a1, a2);
}

int tcgetattr(int a1, termios *a2)
{
  return _tcgetattr(a1, a2);
}

int tcsetattr(int a1, int a2, const termios *a3)
{
  return _tcsetattr(a1, a2, a3);
}

time_t time(time_t *a1)
{
  return _time(a1);
}

int unlink(const char *a1)
{
  return _unlink(a1);
}

int usleep(useconds_t a1)
{
  return _usleep(a1);
}

ssize_t write(int __fd, const void *__buf, size_t __nbyte)
{
  return _write(__fd, __buf, __nbyte);
}

void xpc_connection_cancel(xpc_connection_t connection)
{
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return _xpc_connection_create_mach_service(name, targetq, flags);
}

uint64_t xpc_connection_get_audit_token()
{
  return _xpc_connection_get_audit_token();
}

pid_t xpc_connection_get_pid(xpc_connection_t connection)
{
  return _xpc_connection_get_pid(connection);
}

void xpc_connection_resume(xpc_connection_t connection)
{
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
}

void xpc_connection_set_target_queue(xpc_connection_t connection, dispatch_queue_t targetq)
{
}

void xpc_connection_suspend(xpc_connection_t connection)
{
}

char *__cdecl xpc_copy_description(xpc_object_t object)
{
  return _xpc_copy_description(object);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return _xpc_dictionary_create(keys, values, count);
}

const void *__cdecl xpc_dictionary_get_data(xpc_object_t xdict, const char *key, size_t *length)
{
  return _xpc_dictionary_get_data(xdict, key, length);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_string(xdict, key);
}

uint64_t xpc_dictionary_get_uint64(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_uint64(xdict, key);
}

void xpc_dictionary_set_data(xpc_object_t xdict, const char *key, const void *bytes, size_t length)
{
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return _xpc_get_type(object);
}

void xpc_release(xpc_object_t object)
{
}

xpc_object_t xpc_retain(xpc_object_t object)
{
  return _xpc_retain(object);
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return [a1 UTF8String];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return [a1 allKeys];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return [a1 BOOLValue];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return [a1 count];
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return [a1 currentRunLoop];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return [a1 defaultManager];
}

id objc_msgSend_dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return [a1 dictionaryRepresentation];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return [a1 doubleValue];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return [a1 intValue];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return [a1 length];
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return [a1 reverseObjectEnumerator];
}

id objc_msgSend_run(void *a1, const char *a2, ...)
{
  return [a1 run];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return [a1 standardUserDefaults];
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return [a1 stringWithUTF8String:];
}