void sub_100002F8C(uint64_t a1)
{
  NSObject *v2;

  v2 = *(NSObject **)a1;
  if (v2)
  {
    dispatch_source_cancel(v2);

    *(void *)a1 = 0;
  }
  *(void *)(a1 + 152) = 0xBFF0000000000000;
}

void sub_100002FCC(void *a1)
{
}

void sub_100002FE0(dispatch_object_t *a1)
{
  if (!*a1)
  {
    global_queue = dispatch_get_global_queue(0, 0);
    dispatch_source_t v3 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, global_queue);
    *a1 = v3;
    if (v3)
    {
      v4 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "GpsdResourceWatcher, created timer", buf, 2u);
      }
      sub_100003114((uint64_t)a1);
      v5 = *a1;
      dispatch_time_t v6 = dispatch_walltime(0, 0);
      dispatch_source_set_timer(v5, v6, 0x2540BE400uLL, 0x1DCD6500uLL);
      v7 = *a1;
      handler[0] = _NSConcreteStackBlock;
      handler[1] = 3221225472;
      handler[2] = sub_1000033A4;
      handler[3] = &unk_100104D40;
      handler[4] = a1;
      dispatch_source_set_event_handler(v7, handler);
      dispatch_resume(*a1);
    }
  }
}

void sub_100003114(uint64_t a1)
{
  unint64_t MachContinuousTimeNs = gpsd::util::getMachContinuousTimeNs((gpsd::util *)a1);
  if (getrusage(0, &v20) < 0)
  {
    dispatch_source_t v3 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG)) {
      return;
    }
    LOWORD(task_info_out[0]) = 0;
    v4 = "Resource,getrusage error";
    v5 = (uint8_t *)task_info_out;
    goto LABEL_7;
  }
  mach_msg_type_number_t task_info_outCnt = 93;
  if (task_info(mach_task_self_, 0x16u, task_info_out, &task_info_outCnt))
  {
    dispatch_source_t v3 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG)) {
      return;
    }
    *(_WORD *)buf = 0;
    v4 = "Resource,task_info error";
    v5 = buf;
LABEL_7:
    _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, v4, v5, 2u);
    return;
  }
  double v6 = (double)MachContinuousTimeNs * 0.000000001;
  double v7 = *(double *)(a1 + 152);
  if (v7 != -1.0)
  {
    double v8 = v6 - v7;
    if (v6 - v7 > 0.1)
    {
      v9 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
      {
        double v14 = ((double)(v20.ru_stime.tv_sec - *(void *)(a1 + 24))
             + (double)(v20.ru_stime.tv_usec - *(_DWORD *)(a1 + 32)) * 0.000001)
            * 100.0;
        double v15 = ((double)(v20.ru_utime.tv_sec - *(void *)(a1 + 8))
             + (double)(v20.ru_utime.tv_usec - *(_DWORD *)(a1 + 16)) * 0.000001)
            * 100.0;
        *(_DWORD *)buf = 134219008;
        double v22 = v15 / v8;
        __int16 v23 = 2048;
        double v24 = v14 / v8;
        __int16 v25 = 2048;
        double v26 = (double)v18 * 0.000000953674316;
        __int16 v27 = 2048;
        double v28 = (double)v19 * 0.000000953674316;
        __int16 v29 = 2048;
        double v30 = v8;
        _os_log_debug_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "Resource,user,%.2f,sys,%.2f,residentMB,%.3f,footprintMB,%.3f,interval,%.2f", buf, 0x34u);
      }
    }
  }
  *(double *)(a1 + 152) = v6;
  long long v10 = *(_OWORD *)&v20.ru_minflt;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)&v20.ru_nswap;
  long long v11 = *(_OWORD *)&v20.ru_msgrcv;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)&v20.ru_oublock;
  *(_OWORD *)(a1 + 120) = v11;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)&v20.ru_nvcsw;
  timeval ru_utime = v20.ru_utime;
  *(timeval *)(a1 + 24) = v20.ru_stime;
  long long v13 = *(_OWORD *)&v20.ru_idrss;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)&v20.ru_maxrss;
  *(_OWORD *)(a1 + 56) = v13;
  *(_OWORD *)(a1 + 72) = v10;
  *(timeval *)(a1 + 8) = ru_utime;
}

void sub_1000033A4(uint64_t a1)
{
}

void *sub_1000033AC(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_100003460();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    double v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    double v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

void sub_100003460()
{
}

void sub_100003478(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_1000034D4(exception, a1);
}

void sub_1000034C0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_1000034D4(std::logic_error *a1, const char *a2)
{
  result = std::logic_error::logic_error(a1, a2);
  return result;
}

void sub_100003508(std::__shared_weak_count *a1)
{
  if (!atomic_fetch_add(&a1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

void *sub_10000357C(void *a1)
{
  v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100003600()
{
  exception = __cxa_allocate_exception(8uLL);
  void *exception = &off_100104D88;
}

void sub_100003650(std::exception *a1)
{
  std::exception::~exception(a1);

  operator delete();
}

void sub_100003688(uint64_t a1)
{
  v1 = *(std::mutex **)(a1 + 32);
  std::mutex::lock(v1 + 13);
  sub_1000036E4((uint64_t)v1);

  std::mutex::unlock(v1 + 13);
}

void sub_1000036D0(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1000036E4(uint64_t a1)
{
  unint64_t MachContinuousTimeNs = gpsd::util::getMachContinuousTimeNs((gpsd::util *)a1);
  if (!*(unsigned char *)(a1 + 109))
  {
    uint64_t v55 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG)) {
      return;
    }
    *(_WORD *)buf = 0;
    v56 = "PerfWarning,not in session";
    v57 = v55;
    uint32_t v58 = 2;
LABEL_32:
    _os_log_debug_impl((void *)&_mh_execute_header, v57, OS_LOG_TYPE_DEBUG, v56, buf, v58);
    return;
  }
  double v3 = *(double *)(a1 + 184);
  double v4 = (double)MachContinuousTimeNs * 0.000000001 - v3;
  if (v3 < 0.1 || v4 < 0.9)
  {
    uint64_t v59 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG)) {
      return;
    }
    *(_DWORD *)buf = 134218240;
    double v120 = v3;
    __int16 v121 = 2048;
    double v122 = v4;
    v56 = "PerfWarning,spurious printSummary,%.3f,%.3f";
    v57 = v59;
    uint32_t v58 = 22;
    goto LABEL_32;
  }
  double v5 = *(double *)(a1 + 784);
  double v6 = 0.0;
  double v7 = 0.0;
  if (v5 > 0.1)
  {
    double v6 = *(double *)(a1 + 800) / v5;
    double v7 = *(double *)(a1 + 792) / v5;
  }
  uint64_t v8 = qword_100114840;
  BOOL v9 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT);
  if (v9)
  {
    unint64_t v10 = *(void *)(a1 + 8);
    double v11 = (double)(v10 - *(void *)a1) * 0.000001;
    unint64_t v12 = *(void *)(a1 + 16);
    unint64_t v13 = *(void *)(a1 + 24);
    unint64_t v14 = *(void *)a1 - 1;
    BOOL v15 = v14 >= v10;
    double v16 = -1.0;
    if (v15) {
      unint64_t v17 = 0xBFF0000000000000;
    }
    else {
      unint64_t v17 = *(void *)&v11;
    }
    double v18 = (double)(v12 - *(void *)a1) * 0.000001;
    if (v14 >= v12) {
      double v18 = -1.0;
    }
    if (v14 < v13) {
      double v16 = (double)(v13 - *(void *)a1) * 0.000001;
    }
    double v115 = v16;
    double v116 = v18;
    int v19 = *(_DWORD *)(a1 + 720);
    double v20 = 0.0;
    double v21 = 0.0;
    if (v19 >= 1) {
      double v21 = *(double *)(a1 + 728) / (double)v19;
    }
    int v22 = *(_DWORD *)(a1 + 624);
    if (v22 >= 1) {
      double v20 = *(double *)(a1 + 632) / (double)v22;
    }
    int v23 = *(_DWORD *)(a1 + 640);
    double v24 = 0.0;
    double v25 = 0.0;
    if (v23 >= 1) {
      double v25 = *(double *)(a1 + 648) / (double)v23;
    }
    int v26 = *(_DWORD *)(a1 + 656);
    if (v26 >= 1) {
      double v24 = *(double *)(a1 + 664) / (double)v26;
    }
    int v27 = *(_DWORD *)(a1 + 672);
    double v28 = 0.0;
    double v29 = 0.0;
    if (v27 >= 1) {
      double v29 = *(double *)(a1 + 680) / (double)v27;
    }
    int v30 = *(_DWORD *)(a1 + 688);
    if (v30 >= 1) {
      double v28 = *(double *)(a1 + 696) / (double)v30;
    }
    int v31 = *(unsigned __int8 *)(a1 + 96);
    int v32 = *(_DWORD *)(a1 + 44);
    uint64_t v34 = *(void *)(a1 + 80);
    uint64_t v33 = *(void *)(a1 + 88);
    int v35 = *(unsigned __int8 *)(a1 + 97);
    int v37 = *(_DWORD *)(a1 + 100);
    int v36 = *(_DWORD *)(a1 + 104);
    int v39 = *(_DWORD *)(a1 + 64);
    int v38 = *(_DWORD *)(a1 + 68);
    int v40 = *(_DWORD *)(a1 + 48);
    int v41 = *(_DWORD *)(a1 + 60);
    int v112 = *(_DWORD *)(a1 + 56);
    int v113 = *(_DWORD *)(a1 + 52);
    int v110 = *(_DWORD *)(a1 + 72);
    int v111 = *(_DWORD *)(a1 + 76);
    int v43 = *(_DWORD *)(a1 + 192);
    int v42 = *(_DWORD *)(a1 + 196);
    int v108 = *(_DWORD *)(a1 + 236);
    int v109 = *(_DWORD *)(a1 + 232);
    uint64_t v44 = *(void *)(a1 + 472);
    uint64_t v107 = *(void *)(a1 + 480);
    int v45 = *(_DWORD *)(a1 + 200);
    int v46 = *(_DWORD *)(a1 + 204);
    int v104 = *(_DWORD *)(a1 + 240);
    int v103 = *(_DWORD *)(a1 + 244);
    int v48 = *(_DWORD *)(a1 + 208);
    int v47 = *(_DWORD *)(a1 + 212);
    int v102 = *(_DWORD *)(a1 + 248);
    int v100 = *(_DWORD *)(a1 + 256);
    int v101 = *(_DWORD *)(a1 + 252);
    int v49 = *(_DWORD *)(a1 + 216);
    int v50 = *(_DWORD *)(a1 + 220);
    int v52 = *(_DWORD *)(a1 + 224);
    int v51 = *(_DWORD *)(a1 + 228);
    int v99 = *(_DWORD *)(a1 + 260);
    uint64_t v105 = *(void *)(a1 + 552);
    int v106 = *(_DWORD *)(a1 + 560);
    int v53 = *(_DWORD *)(a1 + 704);
    unint64_t v117 = v17;
    log = v8;
    if (v53 < 1) {
      double v54 = 0.0;
    }
    else {
      double v54 = *(double *)(a1 + 712) / (double)v53;
    }
    int v126 = *(_DWORD *)(a1 + 40);
    int v128 = v41;
    uint64_t v130 = v34;
    int v132 = v31;
    int v134 = v37;
    int v136 = v32;
    int v138 = v39;
    uint64_t v140 = v33;
    int v142 = v35;
    int v144 = v36;
    int v146 = v40;
    int v148 = v38;
    int v158 = v43;
    int v60 = *(_DWORD *)(a1 + 584);
    int v162 = v42;
    int v61 = *(_DWORD *)(a1 + 588);
    int v166 = v45;
    int v62 = *(_DWORD *)(a1 + 592);
    uint64_t v170 = v44;
    int v63 = *(_DWORD *)(a1 + 596);
    int v174 = v46;
    int v64 = *(_DWORD *)(a1 + 600);
    int v178 = v48;
    int v65 = *(_DWORD *)(a1 + 564);
    int v182 = v47;
    int v66 = *(_DWORD *)(a1 + 568);
    int v186 = v49;
    int v67 = *(_DWORD *)(a1 + 572);
    int v190 = v50;
    int v68 = *(_DWORD *)(a1 + 576);
    int v194 = v52;
    int v97 = *(_DWORD *)(a1 + 580);
    int v98 = v68;
    int v96 = *(_DWORD *)(a1 + 604);
    int v150 = v113;
    int v114 = *(_DWORD *)(a1 + 608);
    int v152 = v110;
    int v69 = *(_DWORD *)(a1 + 612);
    int v154 = v112;
    int v70 = *(_DWORD *)(a1 + 616);
    int v156 = v111;
    int v71 = *(_DWORD *)(a1 + 736);
    int v160 = v51;
    int v72 = *(_DWORD *)(a1 + 740);
    int v164 = v109;
    int v73 = *(_DWORD *)(a1 + 744);
    int v168 = v108;
    int v74 = *(_DWORD *)(a1 + 748);
    uint64_t v172 = v107;
    int v75 = *(_DWORD *)(a1 + 752);
    int v176 = v104;
    int v76 = *(_DWORD *)(a1 + 756);
    int v180 = v103;
    int v77 = *(_DWORD *)(a1 + 760);
    int v184 = v102;
    int v78 = *(_DWORD *)(a1 + 764);
    int v188 = v101;
    int v79 = *(_DWORD *)(a1 + 768);
    int v192 = v100;
    int v80 = *(_DWORD *)(a1 + 772);
    int v196 = v99;
    int v81 = *(_DWORD *)(a1 + 776);
    unint64_t v198 = v117;
    int v82 = *(_DWORD *)(a1 + 780);
    double v200 = v116;
    int v83 = *(_DWORD *)(a1 + 532);
    double v202 = v115;
    int v84 = *(_DWORD *)(a1 + 536);
    uint64_t v204 = v105;
    int v85 = *(_DWORD *)(a1 + 540);
    int v206 = v106;
    int v86 = *(_DWORD *)(a1 + 544);
    int v222 = v60;
    int v224 = v61;
    uint64_t v87 = *(void *)(a1 + 488);
    uint64_t v88 = *(void *)(a1 + 496);
    int v226 = v62;
    int v228 = v63;
    uint64_t v90 = *(void *)(a1 + 504);
    uint64_t v89 = *(void *)(a1 + 512);
    int v230 = v64;
    uint64_t v91 = *(void *)(a1 + 520);
    int v232 = v65;
    int v92 = *(_DWORD *)(a1 + 528);
    *(_DWORD *)buf = 134371072;
    double v120 = v4;
    int v234 = v66;
    __int16 v121 = 2050;
    double v122 = v7;
    __int16 v123 = 2050;
    double v124 = v6;
    int v236 = v67;
    __int16 v125 = 1026;
    __int16 v127 = 1026;
    __int16 v129 = 2050;
    __int16 v131 = 1026;
    __int16 v133 = 1026;
    __int16 v135 = 1026;
    __int16 v137 = 1026;
    __int16 v139 = 2050;
    __int16 v141 = 1026;
    __int16 v143 = 1026;
    __int16 v145 = 1026;
    __int16 v147 = 1026;
    __int16 v149 = 1026;
    __int16 v151 = 1026;
    __int16 v153 = 1026;
    __int16 v155 = 1026;
    __int16 v157 = 1026;
    __int16 v159 = 1026;
    __int16 v161 = 1026;
    __int16 v163 = 1026;
    __int16 v165 = 1026;
    __int16 v167 = 1026;
    __int16 v169 = 2050;
    __int16 v171 = 2050;
    __int16 v173 = 1026;
    __int16 v175 = 1026;
    __int16 v177 = 1026;
    __int16 v179 = 1026;
    __int16 v181 = 1026;
    __int16 v183 = 1026;
    __int16 v185 = 1026;
    __int16 v187 = 1026;
    __int16 v189 = 1026;
    __int16 v191 = 1026;
    __int16 v193 = 1026;
    __int16 v195 = 1026;
    __int16 v197 = 2050;
    __int16 v199 = 2050;
    __int16 v201 = 2050;
    __int16 v203 = 2050;
    __int16 v205 = 1026;
    __int16 v207 = 2050;
    double v208 = v21;
    __int16 v209 = 2050;
    double v210 = v20;
    __int16 v211 = 2050;
    double v212 = v25;
    __int16 v213 = 2050;
    double v214 = v24;
    __int16 v215 = 2050;
    double v216 = v29;
    __int16 v217 = 2050;
    double v218 = v28;
    __int16 v219 = 2050;
    double v220 = v54;
    __int16 v221 = 1026;
    __int16 v223 = 1026;
    __int16 v225 = 1026;
    __int16 v227 = 1026;
    __int16 v229 = 1026;
    __int16 v231 = 1026;
    __int16 v233 = 1026;
    __int16 v235 = 1026;
    __int16 v237 = 1026;
    int v238 = v98;
    __int16 v239 = 1026;
    int v240 = v97;
    __int16 v241 = 1026;
    int v242 = v96;
    __int16 v243 = 1026;
    int v244 = v114;
    __int16 v245 = 1026;
    int v246 = v69;
    __int16 v247 = 1026;
    int v248 = v70;
    __int16 v249 = 1026;
    int v250 = v71;
    __int16 v251 = 1026;
    int v252 = v72;
    __int16 v253 = 1026;
    int v254 = v73;
    __int16 v255 = 1026;
    int v256 = v74;
    __int16 v257 = 1026;
    int v258 = v75;
    __int16 v259 = 1026;
    int v260 = v76;
    __int16 v261 = 1026;
    int v262 = v77;
    __int16 v263 = 1026;
    int v264 = v78;
    __int16 v265 = 1026;
    int v266 = v79;
    __int16 v267 = 1026;
    int v268 = v80;
    __int16 v269 = 1026;
    int v270 = v81;
    __int16 v271 = 1026;
    int v272 = v82;
    __int16 v273 = 1026;
    int v274 = v83;
    __int16 v275 = 1026;
    int v276 = v84;
    __int16 v277 = 1026;
    int v278 = v85;
    __int16 v279 = 1026;
    int v280 = v86;
    __int16 v281 = 2050;
    uint64_t v282 = v87;
    __int16 v283 = 2050;
    uint64_t v284 = v88;
    __int16 v285 = 2050;
    uint64_t v286 = v90;
    __int16 v287 = 2050;
    uint64_t v288 = v89;
    __int16 v289 = 2050;
    uint64_t v290 = v91;
    __int16 v291 = 1026;
    int v292 = v92;
    _os_log_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEFAULT, "PerfReport,i,%{public}.1f,w,%{public}.2f,%{public}.1f,e,%{public}d,%{public}d,%{public}.2f,%{public}d,0x%{public}X,r,%{public}d,%{public}d,%{public}.2f,%{public}d,0x%{public}X,x,%{public}d,%{public}d,t,%{public}d,%{public}d,p,%{public}d,%{public}d,a,%{public}d,%{public}d,g,%{public}d,%{public}d,d,%{public}d,%{public}d,%{public}.1f,%{public}.3f,v,%{public}d,%{public}d,c,%{public}d,%{public}d,L,%{public}d,%{public}d,m,%{public}d,%{public}d,s,%{public}d,%{public}d,E,%{public}d,%{public}d,T,%{public}.1f,%{public}.1f,%{public}.1f,u,0x%{public}llX,%{public}d,F,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,y,%{public}d,%{public}d,%{public}d,%{public}d,%{public}d,C,%{public}d,%{public}d,%{public}d,%{public}d,%{public}d,D,%{public}d,%{public}d,%{public}d,%{public}d,n,%{public}d,%{public}d,%{public}d,%{public}d,%{public}d,%{public}d,N,%{public}d,%{public}d,%{public}d,%{public}d,%{public}d,%{public}d,R,%{public}d,%{public}d,%{public}d,%{public}d,P,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.3f,%{public}.3f,%{public}d", buf, 0x268u);
  }
  unint64_t v93 = gpsd::util::getMachContinuousTimeNs((gpsd::util *)v9);
  uint64_t v94 = 0;
  *(double *)(a1 + 184) = (double)v93 * 0.000000001;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_OWORD *)(a1 + 528) = 0u;
  *(_DWORD *)(a1 + 544) = 0;
  *(_OWORD *)(a1 + 552) = 0u;
  *(_OWORD *)(a1 + 568) = 0u;
  *(_OWORD *)(a1 + 584) = 0u;
  *(_OWORD *)(a1 + 600) = 0u;
  *(_DWORD *)(a1 + 616) = 0;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(void *)(a1 + 256) = 0;
  do
  {
    uint64_t v95 = a1 + 624 + v94;
    *(_DWORD *)uint64_t v95 = 0;
    *(void *)(v95 + 8) = 0;
    v94 += 16;
  }
  while (v94 != 112);
  *(void *)(a1 + 800) = 0;
  *(_OWORD *)(a1 + 768) = 0u;
  *(_OWORD *)(a1 + 784) = 0u;
  *(_OWORD *)(a1 + 736) = 0u;
  *(_OWORD *)(a1 + 752) = 0u;
}

NSDictionary *sub_100003EB8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3[0] = @"deviceAgeInWeeks";
  v4[0] = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 40)];
  v3[1] = @"offsetPpb";
  v4[1] = +[NSNumber numberWithDouble:*(double *)(v1 + 160)];
  v3[2] = @"offsetPpbUnc";
  v4[2] = +[NSNumber numberWithDouble:*(double *)(v1 + 168)];
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:3];
}

void sub_100003F80(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 20);
  if (*(void *)(a1 + 824)) {
    _ZF = 1;
  }
  else {
    _ZF = v2 == 1;
  }
  if (_ZF)
  {
    switch(v2)
    {
      case 1:
        double v6 = (std::mutex *)(a1 + 832);
        std::mutex::lock((std::mutex *)(a1 + 832));
        unint64_t MachContinuousTimeNs = (gpsd::util *)gpsd::util::getMachContinuousTimeNs(v7);
        *(double *)(a1 + 184) = (double)(unint64_t)MachContinuousTimeNs * 0.000000001;
        *(_DWORD *)(a1 + 544) = 0;
        *(_OWORD *)(a1 + 464) = 0u;
        *(_OWORD *)(a1 + 480) = 0u;
        *(_OWORD *)(a1 + 496) = 0u;
        *(_OWORD *)(a1 + 512) = 0u;
        *(_OWORD *)(a1 + 528) = 0u;
        *(_OWORD *)(a1 + 552) = 0u;
        *(_OWORD *)(a1 + 568) = 0u;
        *(_OWORD *)(a1 + 584) = 0u;
        *(_OWORD *)(a1 + 600) = 0u;
        *(_DWORD *)(a1 + 616) = 0;
        *(_OWORD *)(a1 + 192) = 0u;
        *(_OWORD *)(a1 + 208) = 0u;
        *(_OWORD *)(a1 + 224) = 0u;
        *(_OWORD *)(a1 + 240) = 0u;
        *(void *)(a1 + 256) = 0;
        for (uint64_t i = 624; i != 736; i += 16)
        {
          uint64_t v10 = a1 + i;
          *(_DWORD *)uint64_t v10 = 0;
          *(void *)(v10 + 8) = 0;
        }
        *(void *)(a1 + 800) = 0;
        *(_OWORD *)(a1 + 768) = 0u;
        *(_OWORD *)(a1 + 784) = 0u;
        *(_OWORD *)(a1 + 736) = 0u;
        *(_OWORD *)(a1 + 752) = 0u;
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
        *(unsigned char *)(a1 + 32) = 0;
        *(_OWORD *)(a1 + 40) = 0u;
        *(_OWORD *)(a1 + 56) = 0u;
        *(void *)(a1 + 72) = 0;
        __asm { FMOV            V1.2D, #-1.0 }
        *(_OWORD *)(a1 + 80) = _Q1;
        *(_WORD *)(a1 + 96) = 0;
        *(void *)(a1 + 100) = 0;
        *(_DWORD *)(a1 + 107) = 0;
        *(_OWORD *)(a1 + 112) = 0u;
        *(_OWORD *)(a1 + 128) = 0u;
        *(void *)(a1 + 144) = 0;
        *(void *)(a1 + 152) = 0xBFF0000000000000;
        if (*(unsigned char *)(a1 + 176)) {
          *(unsigned char *)(a1 + 176) = 0;
        }
        *(unsigned char *)(a1 + 109) = 1;
        unint64_t v15 = gpsd::util::getMachContinuousTimeNs(MachContinuousTimeNs);
        *(void *)a1 = v15;
        *(double *)(a1 + 152) = (double)v15 - *(double *)(a1 + 808);
        double v16 = (id *)GpsdPreferences::instance(0);
        int v17 = GpsdPreferences::performanceReportIntervalSeconds(v16);
        double v18 = (double)v17;
        if (v17 >= 1)
        {
          if (!*(void *)(a1 + 824))
          {
            global_queue = dispatch_get_global_queue(0, 0);
            dispatch_source_t v20 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, global_queue);
            *(void *)(a1 + 824) = v20;
            if (v20)
            {
              double v21 = v20;
              int v22 = qword_100114840;
              if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
              {
                *(_DWORD *)uint64_t v94 = 134217984;
                *(double *)&v94[4] = v18;
                _os_log_debug_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "GpsdPerformanceSummary,timer interval,%.2f", v94, 0xCu);
                double v21 = *(NSObject **)(a1 + 824);
              }
              dispatch_time_t v23 = dispatch_walltime(0, (unint64_t)(v18 * 1000000000.0));
              dispatch_source_set_timer(v21, v23, (unint64_t)(v18 * 1000000000.0), 0x1DCD6500uLL);
              double v24 = *(NSObject **)(a1 + 824);
              *(void *)uint64_t v94 = _NSConcreteStackBlock;
              *(void *)&v94[8] = 3221225472;
              *(void *)&v94[16] = sub_100003688;
              *(void *)&v94[24] = &unk_100104D40;
              *(void *)uint64_t v95 = a1;
              dispatch_source_set_event_handler(v24, v94);
              dispatch_resume(*(dispatch_object_t *)(a1 + 824));
            }
          }
          goto LABEL_111;
        }
        uint64_t v74 = qword_100114840;
        if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO)) {
          goto LABEL_111;
        }
        *(_DWORD *)uint64_t v94 = 134349056;
        *(double *)&v94[4] = v18;
        int v75 = "GpsdPerformanceSummary,disabled due to invalid timer interval,%{public}.2f";
        int v76 = v74;
        os_log_type_t v77 = OS_LOG_TYPE_INFO;
        uint32_t v78 = 12;
        goto LABEL_110;
      case 2:
        double v6 = (std::mutex *)(a1 + 832);
        std::mutex::lock((std::mutex *)(a1 + 832));
        uint64_t v34 = *(NSObject **)(a1 + 824);
        if (v34)
        {
          dispatch_source_cancel(v34);

          *(void *)(a1 + 824) = 0;
          sub_1000036E4(a1);
        }
        *(unsigned char *)(a1 + 109) = 0;
        if (*(unsigned char *)(GpsdPlatformInfo::instance(0) + 60) && *(unsigned char *)(a1 + 176))
        {
          double Current = CFAbsoluteTimeGetCurrent();
          uint64_t v36 = *(void *)(GpsdPlatformInfo::instance(0) + 56);
          if ((v36 & 0xFF00000000) == 0) {
            sub_100007064();
          }
          int v37 = (int)(Current + -5.0 + 662342413.0) / 604800;
          int v38 = qword_100114840;
          if (v37 <= (int)v36)
          {
            uint64_t v41 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR);
            if (v41)
            {
              *(_DWORD *)uint64_t v94 = 67175169;
              *(_DWORD *)&v94[4] = v37 - v36;
              *(_WORD *)&v94[8] = 1025;
              *(_DWORD *)&v94[10] = (int)(Current + -5.0 + 662342413.0) / 604800;
              *(_WORD *)&v94[14] = 1025;
              *(_DWORD *)&v94[16] = v36;
              _os_log_error_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_ERROR, "#clk,invalidAge,week,%{private}d,now,%{private}d,born,%{private}d", v94, 0x14u);
            }
          }
          else
          {
            if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v39 = *(void *)(a1 + 160);
              uint64_t v40 = *(void *)(a1 + 168);
              *(_DWORD *)uint64_t v94 = 67175169;
              *(_DWORD *)&v94[4] = v37 - v36;
              *(_WORD *)&v94[8] = 2050;
              *(void *)&v94[10] = v39;
              *(_WORD *)&v94[18] = 2050;
              *(void *)&v94[20] = v40;
              _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "#clk,ca,ageWeek,%{private}d,offsetPpb,%{public}.2f,uncPpb,%{public}.2f", v94, 0x1Cu);
            }
            *(void *)uint64_t v94 = _NSConcreteStackBlock;
            *(void *)&v94[8] = 3221225472;
            *(void *)&v94[16] = sub_100003EB8;
            *(void *)&v94[24] = &unk_100104DA0;
            *(void *)uint64_t v95 = a1;
            *(_DWORD *)&v95[8] = v37 - v36;
            uint64_t v41 = AnalyticsSendEventLazy();
          }
        }
        else
        {
          int v71 = qword_100114840;
          uint64_t v41 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT);
          if (v41)
          {
            BOOL v72 = (unint64_t)*(unsigned __int8 *)(GpsdPlatformInfo::instance(0) + 60) << 32 != 0;
            int v73 = *(unsigned __int8 *)(a1 + 176);
            *(_DWORD *)uint64_t v94 = 67240448;
            *(_DWORD *)&v94[4] = v72;
            *(_WORD *)&v94[8] = 1026;
            *(_DWORD *)&v94[10] = v73;
            _os_log_impl((void *)&_mh_execute_header, v71, OS_LOG_TYPE_DEFAULT, "#clk,ca,skip,bornWeekKnown,%{public}d,hasOffset,%{public}d", v94, 0xEu);
          }
        }
        *(double *)(a1 + 808) = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)v41) * 0.000000001;
        goto LABEL_111;
      case 8:
        double v6 = (std::mutex *)(a1 + 832);
        std::mutex::lock((std::mutex *)(a1 + 832));
        uint64_t v44 = *(void *)(a2 + 24);
        if (!v44) {
          uint64_t v44 = *(void *)(proto::gpsd::Request::default_instance_ + 24);
        }
        if (*(void *)(a1 + 464))
        {
          double v45 = *(double *)(a1 + 352);
          double v46 = *(double *)(a1 + 360);
          if (sub_100006558(a1 + 264) && *(float *)(a1 + 272) < 1000000000.0 && sqrt(v46 * v46 + v45 * v45) < 2000.0)
          {
            uint64_t v47 = *(void *)(v44 + 24);
            uint64_t v48 = *(void *)(a1 + 464);
            if (v47 - v48 <= 0) {
              BOOL v49 = v47 - v48 > -2000000000;
            }
            else {
              BOOL v49 = v47 - v48 < 2000000000;
            }
            if (v49)
            {
              int v50 = *(double **)(v44 + 8);
              if (v50)
              {
                double v51 = *(double *)(a1 + 312);
                double v52 = v50[1] - v51;
                uint64_t v53 = *(void *)(v44 + 8);
              }
              else
              {
                uint64_t v53 = *(void *)(proto::gpsd::InjectAssistancePosition::default_instance_ + 8);
                double v51 = *(double *)(a1 + 312);
                double v52 = *(double *)(v53 + 8) - v51;
              }
              double v81 = *(double *)(a1 + 344);
              double v82 = v52 * 111000.0;
              *(double *)(a1 + 488) = v52 * 111000.0;
              double v83 = *(double *)(v53 + 16);
              double v84 = cos(v51 * 0.0174532925) * 111321.0 * (v83 - *(double *)(a1 + 320));
              *(double *)(a1 + 496) = v84;
              int v85 = v50;
              if (!v50) {
                int v85 = *(double **)(proto::gpsd::InjectAssistancePosition::default_instance_ + 8);
              }
              double v86 = sqrt((v82 * v82 + v84 * v84)/ (v85[7] * v85[7]+ v85[6] * v85[6]+ *(double *)(a1 + 360) * *(double *)(a1 + 360)+ *(double *)(a1 + 352) * *(double *)(a1 + 352)));
              *(double *)(a1 + 512) = v86;
              if (v81 >= 1000.0)
              {
                *(void *)(a1 + 520) = 0;
                double v88 = 0.0;
              }
              else
              {
                if (!v50) {
                  int v50 = *(double **)(proto::gpsd::InjectAssistancePosition::default_instance_ + 8);
                }
                double v87 = v50[3] - *(double *)(a1 + 328);
                *(double *)(a1 + 504) = v87;
                double v88 = sqrt(v87 * v87 / (v81 * v81 + v50[5] * v50[5]));
                *(double *)(a1 + 520) = v88;
              }
              int v89 = *(_DWORD *)(v44 + 16);
              *(_DWORD *)(a1 + 528) = v89;
              uint64_t v90 = qword_100114840;
              if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v93 = *(void *)(a1 + 504);
                *(_DWORD *)uint64_t v94 = 134219264;
                *(double *)&v94[4] = v82;
                *(_WORD *)&v94[12] = 2048;
                *(double *)&v94[14] = v84;
                *(_WORD *)&v94[22] = 2048;
                *(void *)&v94[24] = v93;
                *(_WORD *)uint64_t v95 = 2048;
                *(double *)&v95[2] = v86;
                *(_WORD *)&v95[10] = 2048;
                double v96 = v88;
                __int16 v97 = 1024;
                int v98 = v89;
                _os_log_debug_impl((void *)&_mh_execute_header, v90, OS_LOG_TYPE_DEBUG, "PerfCpi,deltaNorth,%.1f,deltaEast,%.1f,deltaVert,%.1f,deltaHorizNorm,%.2f,deltaVertNorm,%.2f,type,%d", v94, 0x3Au);
              }
            }
            else
            {
              int v80 = qword_100114838;
              if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)uint64_t v94 = 134349312;
                *(void *)&v94[4] = v48;
                *(_WORD *)&v94[12] = 2050;
                *(void *)&v94[14] = v47;
                _os_log_impl((void *)&_mh_execute_header, v80, OS_LOG_TYPE_DEFAULT, "PerfWarning,fix and CPI timestamp mismatch,%{public}llu,%{public}llu", v94, 0x16u);
              }
            }
          }
        }
        uint64_t v91 = *(unsigned int *)(v44 + 16);
        if (v91 <= 3)
        {
          ++*(_DWORD *)(a1 + 4 * v91 + 532);
          goto LABEL_111;
        }
        uint64_t v92 = qword_100114838;
        if (!os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_111;
        }
        *(_DWORD *)uint64_t v94 = 67240192;
        *(_DWORD *)&v94[4] = v91;
        int v75 = "PerfWarning,bad_index,cpiType,%{public}d";
        int v76 = v92;
        os_log_type_t v77 = OS_LOG_TYPE_DEFAULT;
        uint32_t v78 = 8;
        goto LABEL_110;
      case 9:
        double v6 = (std::mutex *)(a1 + 832);
        std::mutex::lock((std::mutex *)(a1 + 832));
        double v54 = *(void **)(a2 + 32);
        if (!v54) {
          double v54 = *(void **)(proto::gpsd::Request::default_instance_ + 32);
        }
        if (!*(void *)(a1 + 120))
        {
          *(void *)(a1 + 120) = v54[1];
          *(void *)(a1 + 112) = v54[3];
          float v55 = (double)(unint64_t)v54[2] * 0.000001;
          *(float *)(a1 + 128) = v55;
        }
        goto LABEL_111;
      case 10:
        double v6 = (std::mutex *)(a1 + 832);
        std::mutex::lock((std::mutex *)(a1 + 832));
        uint64_t v56 = *(void *)(a2 + 120);
        if (!v56) {
          uint64_t v56 = *(void *)(proto::gpsd::Request::default_instance_ + 120);
        }
        uint64_t v57 = *(void *)(v56 + 8);
        int v58 = *(char *)(v57 + 23);
        if (v58 >= 0) {
          uint64_t v59 = *(gpsd::util **)(v56 + 8);
        }
        else {
          uint64_t v59 = *(gpsd::util **)v57;
        }
        if (v58 >= 0) {
          int v60 = (const void *)*(unsigned __int8 *)(v57 + 23);
        }
        else {
          int v60 = *(const void **)(v57 + 8);
        }
        int v61 = gpsd::util::truncatedSha256(v59, v60);
        *(_DWORD *)(a1 + 100) = v61;
        uint64_t v31 = qword_100114840;
        if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_111;
        }
        uint64_t v62 = *(void *)(v56 + 8);
        if (*(char *)(v62 + 23) < 0) {
          uint64_t v63 = *(void *)(v62 + 8);
        }
        else {
          uint64_t v63 = *(unsigned __int8 *)(v62 + 23);
        }
        *(_DWORD *)uint64_t v94 = 67240448;
        *(_DWORD *)&v94[4] = v61;
        *(_WORD *)&v94[8] = 2050;
        *(void *)&v94[10] = v63;
        int v75 = "#ee,sha,0x%{public}X,sz,%{public}zu";
        goto LABEL_90;
      case 11:
        double v6 = (std::mutex *)(a1 + 832);
        std::mutex::lock((std::mutex *)(a1 + 832));
        uint64_t v25 = *(void *)(a2 + 128);
        if (!v25) {
          uint64_t v25 = *(void *)(proto::gpsd::Request::default_instance_ + 128);
        }
        uint64_t v26 = *(void *)(v25 + 8);
        int v27 = *(char *)(v26 + 23);
        if (v27 >= 0) {
          double v28 = *(gpsd::util **)(v25 + 8);
        }
        else {
          double v28 = *(gpsd::util **)v26;
        }
        if (v27 >= 0) {
          double v29 = (const void *)*(unsigned __int8 *)(v26 + 23);
        }
        else {
          double v29 = *(const void **)(v26 + 8);
        }
        int v30 = gpsd::util::truncatedSha256(v28, v29);
        *(_DWORD *)(a1 + 104) = v30;
        uint64_t v31 = qword_100114840;
        if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_111;
        }
        uint64_t v32 = *(void *)(v25 + 8);
        if (*(char *)(v32 + 23) < 0) {
          uint64_t v33 = *(void *)(v32 + 8);
        }
        else {
          uint64_t v33 = *(unsigned __int8 *)(v32 + 23);
        }
        *(_DWORD *)uint64_t v94 = 67240448;
        *(_DWORD *)&v94[4] = v30;
        *(_WORD *)&v94[8] = 2050;
        *(void *)&v94[10] = v33;
        int v75 = "#rti,sha,0x%{public}X,sz,%{public}zu";
LABEL_90:
        int v76 = v31;
        os_log_type_t v77 = OS_LOG_TYPE_DEFAULT;
        uint32_t v78 = 18;
        goto LABEL_110;
      case 16:
        double v6 = (std::mutex *)(a1 + 832);
        std::mutex::lock((std::mutex *)(a1 + 832));
        uint64_t v42 = *(void *)(a2 + 64);
        if (!v42) {
          uint64_t v42 = *(void *)(proto::gpsd::Request::default_instance_ + 64);
        }
        if (!*(void *)(a1 + 464)
          || !sub_100006558(a1 + 264)
          || *(float *)(a1 + 272) >= 1000000000.0
          || *(double *)(a1 + 344) >= 1000.0)
        {
          goto LABEL_111;
        }
        if ((*(_DWORD *)(v42 + 36) & 7) != 7) {
          goto LABEL_111;
        }
        double v64 = *(double *)(v42 + 24);
        if (v64 >= 1000.0) {
          goto LABEL_111;
        }
        uint64_t v65 = *(void *)(v42 + 8);
        uint64_t v66 = *(void *)(a1 + 464);
        if (v65 - v66 <= 0) {
          BOOL v67 = v65 - v66 > -2000000000;
        }
        else {
          BOOL v67 = v65 - v66 < 2000000000;
        }
        if (v67)
        {
          double v68 = *(double *)(v42 + 16) - *(double *)(a1 + 328);
          double v69 = sqrt(v68 * v68 / (*(double *)(a1 + 344) * *(double *)(a1 + 344) + v64 * v64));
          *(double *)(a1 + 472) = v68;
          *(double *)(a1 + 480) = v69;
          int v70 = qword_100114840;
          if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)uint64_t v94 = 134218240;
            *(double *)&v94[4] = v68;
            *(_WORD *)&v94[12] = 2048;
            *(double *)&v94[14] = v69;
            _os_log_debug_impl((void *)&_mh_execute_header, v70, OS_LOG_TYPE_DEBUG, "PerfDem,delta,%.1f,deltaNorm,%.2f", v94, 0x16u);
          }
        }
        else
        {
          uint64_t v79 = qword_100114838;
          if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)uint64_t v94 = 134349312;
            *(void *)&v94[4] = v66;
            *(_WORD *)&v94[12] = 2050;
            *(void *)&v94[14] = v65;
            int v75 = "PerfWarning,fix and DEM timestamp mismatch,%{public}llu,%{public}llu";
            int v76 = v79;
            os_log_type_t v77 = OS_LOG_TYPE_DEFAULT;
            uint32_t v78 = 22;
LABEL_110:
            _os_log_impl((void *)&_mh_execute_header, v76, v77, v75, v94, v78);
          }
        }
LABEL_111:
        std::mutex::unlock(v6);
        break;
      default:
        return;
    }
  }
}

void sub_100004BF0(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_100004C58(uint64_t a1, int a2, int a3)
{
  if (*(void *)(a1 + 824))
  {
    unint64_t MachContinuousTimeNs = gpsd::util::getMachContinuousTimeNs((gpsd::util *)a1);
    std::mutex::lock((std::mutex *)(a1 + 832));
    if (a3 == 1)
    {
      switch(a2)
      {
        case 8:
          if (*(void *)a1 && !*(void *)(a1 + 16))
          {
            *(void *)(a1 + 16) = MachContinuousTimeNs;
            sub_100004FB8((uint64_t *)a1);
          }
          ++*(_DWORD *)(a1 + 56);
          break;
        case 9:
          if (*(void *)a1 && !*(void *)(a1 + 8))
          {
            *(void *)(a1 + 8) = MachContinuousTimeNs;
            sub_100004FB8((uint64_t *)a1);
          }
          ++*(_DWORD *)(a1 + 52);
          break;
        case 10:
          if (*(void *)a1 && !*(void *)(a1 + 24))
          {
            *(void *)(a1 + 24) = MachContinuousTimeNs;
            sub_100004FB8((uint64_t *)a1);
          }
          ++*(_DWORD *)(a1 + 40);
          break;
        case 11:
          ++*(_DWORD *)(a1 + 44);
          break;
        case 12:
          ++*(_DWORD *)(a1 + 48);
          break;
        case 14:
          ++*(_DWORD *)(a1 + 192);
          break;
        case 15:
          ++*(_DWORD *)(a1 + 196);
          break;
        case 16:
          ++*(_DWORD *)(a1 + 200);
          break;
        case 17:
          ++*(_DWORD *)(a1 + 204);
          break;
        case 18:
          ++*(_DWORD *)(a1 + 216);
          break;
        case 19:
          ++*(_DWORD *)(a1 + 220);
          break;
        case 20:
          ++*(_DWORD *)(a1 + 224);
          break;
        case 21:
          ++*(_DWORD *)(a1 + 208);
          break;
        case 22:
          ++*(_DWORD *)(a1 + 212);
          break;
        default:
          break;
      }
    }
    else
    {
      switch(a2)
      {
        case 8:
          ++*(_DWORD *)(a1 + 76);
          break;
        case 9:
          ++*(_DWORD *)(a1 + 72);
          break;
        case 10:
          ++*(_DWORD *)(a1 + 60);
          break;
        case 11:
          ++*(_DWORD *)(a1 + 64);
          break;
        case 12:
          ++*(_DWORD *)(a1 + 68);
          break;
        case 14:
          ++*(_DWORD *)(a1 + 228);
          break;
        case 15:
          ++*(_DWORD *)(a1 + 232);
          break;
        case 16:
          ++*(_DWORD *)(a1 + 236);
          break;
        case 17:
          ++*(_DWORD *)(a1 + 240);
          break;
        case 18:
          ++*(_DWORD *)(a1 + 252);
          break;
        case 19:
          ++*(_DWORD *)(a1 + 256);
          break;
        case 20:
          ++*(_DWORD *)(a1 + 260);
          break;
        case 21:
          ++*(_DWORD *)(a1 + 244);
          break;
        case 22:
          ++*(_DWORD *)(a1 + 248);
          break;
        default:
          break;
      }
    }
    std::mutex::unlock((std::mutex *)(a1 + 832));
  }
}

void sub_100004FB8(uint64_t *a1)
{
  if (!*((unsigned char *)a1 + 32))
  {
    uint64_t v2 = *a1;
    if (*a1)
    {
      unint64_t v3 = a1[1];
      if (v3)
      {
        unint64_t v4 = a1[2];
        if (v4)
        {
          unint64_t v5 = a1[3];
          if (v5)
          {
            double v6 = qword_100114840;
            if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
            {
              if (v3 <= v4) {
                unint64_t v7 = v4;
              }
              else {
                unint64_t v7 = v3;
              }
              if (v7 <= v5) {
                unint64_t v7 = v5;
              }
              unint64_t v8 = v2 - 1;
              double v9 = (double)(v7 - v2) * 0.000001;
              BOOL v10 = v2 - 1 >= v7;
              double v11 = -1.0;
              if (v10) {
                double v9 = -1.0;
              }
              double v12 = (double)(v3 - v2) * 0.000001;
              if (v8 >= v3) {
                double v12 = -1.0;
              }
              double v13 = (double)(v4 - v2) * 0.000001;
              if (v8 >= v4) {
                double v13 = -1.0;
              }
              int v14 = 134349824;
              double v15 = v9;
              __int16 v16 = 2050;
              double v17 = v12;
              __int16 v18 = 2050;
              double v19 = v13;
              if (v8 < v5) {
                double v11 = (double)(v5 - v2) * 0.000001;
              }
              __int16 v20 = 2050;
              double v21 = v11;
              _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "PerfNominalStart,Assistance timing,total_ms,%{public}.1f,time_ms,%{public}.1f,pos_ms,%{public}.1f,ephem_ms,%{public}.1f", (uint8_t *)&v14, 0x2Au);
            }
            *((unsigned char *)a1 + 32) = 1;
          }
        }
      }
    }
  }
}

void sub_100005140(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 8);
  if (v4 == 3)
  {
    std::mutex::lock((std::mutex *)(a1 + 832));
    unint64_t v5 = *(float64x2_t **)(a2 + 40);
    if (!v5) {
      unint64_t v5 = *(float64x2_t **)(proto::gpsd::Indication::default_instance_ + 40);
    }
    float64x2_t v6 = v5[1];
    *(float64x2_t *)(a1 + 784) = vaddq_f64(v6, *(float64x2_t *)(a1 + 784));
    *(double *)(a1 + 800) = vmlad_n_f64(*(double *)(a1 + 800), v5[2].f64[0], v6.f64[0]);
    std::mutex::unlock((std::mutex *)(a1 + 832));
    int v4 = *(_DWORD *)(a2 + 8);
  }
  if (v4 == 9)
  {
    std::mutex::lock((std::mutex *)(a1 + 832));
    unint64_t v7 = *(void **)(a2 + 56);
    if (!v7) {
      unint64_t v7 = *(void **)(proto::gpsd::Indication::default_instance_ + 56);
    }
    sub_100005234(a1, v7);
    std::mutex::unlock((std::mutex *)(a1 + 832));
  }
}

void sub_100005220(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_100005234(uint64_t a1, void *a2)
{
  if (!*(unsigned char *)(a1 + 144))
  {
    if (*(unsigned char *)(a1 + 110))
    {
      uint64_t v3 = *(void *)(a1 + 120);
      if (v3)
      {
        uint64_t v5 = a2[1];
        uint64_t v6 = v5;
        if (!v5) {
          uint64_t v6 = *(void *)(proto::gnss::TimeTransferDataExtend::default_instance_ + 8);
        }
        uint64_t v7 = *(void *)(v6 + 8);
        if (!v7) {
          uint64_t v7 = *(void *)(proto::gnss::TimeTransferData::default_instance_ + 8);
        }
        if (*(float *)(v7 + 16) <= 10000.0)
        {
          unint64_t v8 = a2[4] + a2[5];
          uint64_t v9 = *(void *)(a1 + 112);
          if (!v5) {
            uint64_t v5 = *(void *)(proto::gnss::TimeTransferDataExtend::default_instance_ + 8);
          }
          unint64_t v10 = v3 - v9;
          uint64_t v11 = *(void *)(v5 + 8);
          if (!v11) {
            uint64_t v11 = *(void *)(proto::gnss::TimeTransferData::default_instance_ + 8);
          }
          double v12 = (double)(v8 - v9) * 0.000000001;
          double v13 = ((double)(*(void *)(v11 + 8) - v8) - (double)v10) * 0.000001;
          *(double *)(a1 + 136) = v13;
          *(unsigned char *)(a1 + 144) = 1;
          double v14 = *(double *)(a1 + 808);
          if (v14 <= 0.0) {
            double v15 = -1.0;
          }
          else {
            double v15 = -(v14 - (double)v8 * 0.000000001);
          }
          __int16 v16 = qword_100114840;
          if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v17 = a2[1];
            if (!v17) {
              uint64_t v17 = *(void *)(proto::gnss::TimeTransferDataExtend::default_instance_ + 8);
            }
            double v18 = *(float *)(a1 + 128);
            uint64_t v19 = *(void *)(v17 + 8);
            if (!v19) {
              uint64_t v19 = *(void *)(proto::gnss::TimeTransferData::default_instance_ + 8);
            }
            double v20 = *(float *)(v19 + 16) * 0.000001;
            *(_DWORD *)buf = 134350080;
            *(double *)&uint8_t buf[4] = v13;
            *(_WORD *)&buf[12] = 2050;
            *(double *)&buf[14] = v12;
            __int16 v42 = 2050;
            double v43 = v18;
            __int16 v44 = 2050;
            double v45 = v20;
            __int16 v46 = 2050;
            double v47 = v15;
            _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "PerfTimeAssist,measuredErrorMs,%{public}.3f,assistAgeSec,%{public}.3f,assistUncMs,%{public}.3f,gpsUncMs,%{public}.3f,timeBetweenGnssSessions,%{public}f", buf, 0x34u);
          }
          uint64_t v34 = _NSConcreteStackBlock;
          uint64_t v35 = 3221225472;
          uint64_t v36 = sub_1000065E8;
          int v37 = &unk_100104DC0;
          uint64_t v38 = a1;
          double v39 = v12;
          double v40 = v15;
          AnalyticsSendEventLazy();
          if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001141C8, memory_order_acquire) & 1) == 0
            && __cxa_guard_acquire(&qword_1001141C8))
          {
            uint64_t v32 = (id *)GpsdPreferences::instance(0);
            byte_1001141B8 = GpsdPreferences::genericTestCase(v32) == 116;
            __cxa_guard_release(&qword_1001141C8);
          }
          if (byte_1001141B8)
          {
            VendorLogger::isoTimestampString(buf);
            if (!qword_1001141D0) {
              operator new();
            }
            if (v42 >= 0) {
              double v21 = buf;
            }
            else {
              double v21 = *(unsigned char **)buf;
            }
            if (v42 >= 0) {
              uint64_t v22 = HIBYTE(v42);
            }
            else {
              uint64_t v22 = *(void *)&buf[8];
            }
            dispatch_time_t v23 = sub_100007D6C((void *)qword_1001141D0, (uint64_t)v21, v22);
            double v24 = sub_100007D6C(v23, (uint64_t)",assistMeasuredErrorMs,", 23);
            uint64_t v25 = *v24;
            *(uint64_t *)((char *)v24 + *(void *)(*v24 - 24) + 16) = 3;
            *(_DWORD *)((char *)v24 + *(void *)(v25 - 24) + 8) = *(_DWORD *)((unsigned char *)v24 + *(void *)(v25 - 24) + 8) & 0xFFFFFEFB | 4;
            if (!*(unsigned char *)(a1 + 144)) {
              sub_100007064();
            }
            uint64_t v26 = (uint64_t *)std::ostream::operator<<();
            uint64_t v27 = *v26;
            *(uint64_t *)((char *)v26 + *(void *)(*v26 - 24) + 16) = 1;
            *(_DWORD *)((char *)v26 + *(void *)(v27 - 24) + 8) = *(_DWORD *)((unsigned char *)v26 + *(void *)(v27 - 24) + 8) & 0xFFFFFEFB | 4;
            sub_100007D6C(v26, (uint64_t)",assistAgeSec,", 14);
            double v28 = (void *)std::ostream::operator<<();
            sub_100007D6C(v28, (uint64_t)",assistUncMs,", 13);
            double v29 = (void *)std::ostream::operator<<();
            sub_100007D6C(v29, (uint64_t)",timeBetweenGnssSessionsSec,", 28);
            int v30 = (void *)std::ostream::operator<<();
            std::ios_base::getloc((const std::ios_base *)((char *)v30 + *(void *)(*v30 - 24)));
            uint64_t v31 = std::locale::use_facet((const std::locale *)__p, &std::ctype<char>::id);
            ((void (*)(const std::locale::facet *, uint64_t))v31->__vftable[2].~facet_0)(v31, 10);
            std::locale::~locale((std::locale *)__p);
            std::ostream::put();
            std::ostream::flush();
            std::ostream::flush();
            if (SHIBYTE(v42) < 0) {
              operator delete(*(void **)buf);
            }
          }
        }
      }
    }
  }
}

void sub_100005794(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
}

void sub_100005834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 824))
  {
    uint64_t j = a1;
    uint64_t v6 = (std::mutex *)(a1 + 832);
    std::mutex::lock((std::mutex *)(a1 + 832));
    if (a2)
    {
      *(void *)(j + 464) = gpsd::util::getMachContinuousTimeNs(v7);
      *(_OWORD *)(j + 264) = *(_OWORD *)a2;
      long long v8 = *(_OWORD *)(a2 + 16);
      long long v9 = *(_OWORD *)(a2 + 32);
      long long v10 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(j + 312) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(j + 328) = v10;
      *(_OWORD *)(j + 280) = v8;
      *(_OWORD *)(j + 296) = v9;
      long long v11 = *(_OWORD *)(a2 + 80);
      long long v12 = *(_OWORD *)(a2 + 96);
      long long v13 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(j + 376) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(j + 392) = v13;
      *(_OWORD *)(j + 344) = v11;
      *(_OWORD *)(j + 360) = v12;
      long long v14 = *(_OWORD *)(a2 + 144);
      long long v15 = *(_OWORD *)(a2 + 160);
      long long v16 = *(_OWORD *)(a2 + 176);
      *(_DWORD *)(j + 456) = *(_DWORD *)(a2 + 192);
      *(_OWORD *)(j + 424) = v15;
      *(_OWORD *)(j + 440) = v16;
      *(_OWORD *)(j + 408) = v14;
      uint64_t v17 = *(void *)(a2 + 120);
      *(void *)(j + 552) |= v17;
      if ((v17 & 1) == 0) {
        ++*(_DWORD *)(j + 560);
      }
      uint64_t v18 = *(unsigned int *)(a2 + 128);
      if (v18 > 4)
      {
        uint64_t v19 = qword_100114838;
        if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 67240192;
          *(_DWORD *)int v142 = v18;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "PerfWarning,bad_index,gnssContentIndex,%{public}d", buf, 8u);
        }
      }
      else
      {
        ++*(_DWORD *)(j + 4 * v18 + 564);
      }
      uint64_t v20 = *(unsigned int *)(a2 + 192);
      if (v20 > 3)
      {
        double v21 = qword_100114838;
        if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 67240192;
          *(_DWORD *)int v142 = v18;
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "PerfWarning,bad_index,gnssContentIndex,%{public}d", buf, 8u);
        }
      }
      else
      {
        ++*(_DWORD *)(j + 4 * v20 + 604);
      }
      int v22 = *(_DWORD *)(a2 + 116);
      switch(v22)
      {
        case 10:
          uint64_t v23 = 1;
          break;
        case 25:
          uint64_t v23 = 2;
          break;
        case 50:
          uint64_t v23 = 3;
          break;
        default:
          uint64_t v23 = 4 * (v22 == 75);
          break;
      }
      ++*(_DWORD *)(j + 584 + 4 * v23);
    }
    if (!a3) {
      goto LABEL_134;
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001141C0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_1001141C0))
    {
      qword_100114278 = 0;
      *(_OWORD *)&qword_100114268 = 0u;
      xmmword_100114258 = 0u;
      unk_100114248 = 0u;
      *(_OWORD *)&qword_100114238 = 0u;
      xmmword_100114228 = 0u;
      *(_OWORD *)&algn_100114210[8] = 0u;
      *(_OWORD *)&qword_100114208 = 0u;
      xmmword_1001141F8 = 0u;
      *(_OWORD *)algn_1001141E8 = 0u;
      xmmword_1001141D8 = 0u;
      __cxa_atexit((void (*)(void *))sub_100006510, &xmmword_1001141D8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1001141C0);
    }
    for (uint64_t i = 0; i != 168; i += 24)
    {
      uint64_t v25 = &byte_1001141B8[i];
      uint64_t v26 = *(void **)&byte_1001141B8[i + 32];
      *(void *)&byte_1001141B8[i + 40] = v26;
      if (*(void *)&byte_1001141B8[i + 48] - (void)v26 <= 0x13uLL)
      {
        uint64_t v27 = (char *)operator new(0x14uLL);
        *((void *)v25 + 4) = v27;
        *((void *)v25 + 5) = v27;
        *((void *)v25 + 6) = v27 + 20;
        if (v26) {
          operator delete(v26);
        }
      }
    }
    uint64_t v138 = a3;
    uint64_t v28 = *(void *)(a3 + 112);
    uint64_t v29 = *(void *)(a3 + 120);
    uint64_t v140 = j;
    if (v28 != v29)
    {
      int v30 = 0;
      int v139 = 0;
      uint64_t v31 = j + 736;
      uint64_t v137 = j + 760;
      while (2)
      {
        uint64_t v32 = 0;
        switch(*(_DWORD *)v28)
        {
          case 1:
            goto LABEL_34;
          case 2:
            uint64_t v32 = 3;
            goto LABEL_34;
          case 4:
            uint64_t v32 = 4;
            goto LABEL_34;
          case 8:
            uint64_t v32 = 2;
LABEL_34:
            if (!*(unsigned char *)(v28 + 173)) {
              goto LABEL_80;
            }
            ++*(_DWORD *)(v31 + 4 * v32);
            unint64_t v33 = *(void *)(v28 + 120);
            if (v33 != -1)
            {
              unint64_t v34 = *(void *)(v28 + 128);
              if (v34 != -1 && v33 <= v34 && (*(void *)(v28 + 136) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
              {
                double v35 = *(double *)(v28 + 144);
                if (v35 > 0.0 && v35 < 5000.0)
                {
                  ++v139;
                  ++*(_DWORD *)(v137 + 4 * v32);
                }
              }
            }
            uint64_t v36 = &byte_1001141B8[24 * v32];
            unint64_t v39 = *((void *)v36 + 6);
            uint64_t v38 = v36 + 48;
            unint64_t v37 = v39;
            uint64_t v41 = (char **)(v38 - 1);
            double v40 = (char *)*(v38 - 1);
            if ((unint64_t)v40 >= v39)
            {
              double v43 = (void **)(v38 - 2);
              __int16 v44 = (char *)*(v38 - 2);
              uint64_t v45 = (v40 - v44) >> 2;
              unint64_t v46 = v45 + 1;
              if ((unint64_t)(v45 + 1) >> 62) {
                goto LABEL_137;
              }
              uint64_t v47 = v37 - (void)v44;
              if (v47 >> 1 > v46) {
                unint64_t v46 = v47 >> 1;
              }
              if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v48 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v48 = v46;
              }
              if (v48)
              {
                unint64_t v48 = (unint64_t)sub_10000721C(v48);
                double v40 = *v41;
                __int16 v44 = (char *)*v43;
              }
              else
              {
                uint64_t v49 = 0;
              }
              int v50 = (char *)(v48 + 4 * v45);
              *(_DWORD *)int v50 = *(_DWORD *)(v28 + 168);
              __int16 v42 = v50 + 4;
              while (v40 != v44)
              {
                int v51 = *((_DWORD *)v40 - 1);
                v40 -= 4;
                *((_DWORD *)v50 - 1) = v51;
                v50 -= 4;
              }
              *double v43 = v50;
              *uint64_t v41 = v42;
              *uint64_t v38 = v48 + 4 * v49;
              if (v44) {
                operator delete(v44);
              }
              uint64_t j = v140;
            }
            else
            {
              *(_DWORD *)double v40 = *(_DWORD *)(v28 + 168);
              __int16 v42 = v40 + 4;
            }
            *uint64_t v41 = v42;
            uint64_t v52 = qword_100114270;
            if (qword_100114270 >= (unint64_t)qword_100114278)
            {
              double v54 = (void *)qword_100114268;
              uint64_t v55 = (qword_100114270 - qword_100114268) >> 2;
              unint64_t v56 = v55 + 1;
              if ((unint64_t)(v55 + 1) >> 62) {
LABEL_137:
              }
                sub_100007204();
              uint64_t v57 = qword_100114278 - qword_100114268;
              if ((qword_100114278 - qword_100114268) >> 1 > v56) {
                unint64_t v56 = v57 >> 1;
              }
              if ((unint64_t)v57 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v58 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v58 = v56;
              }
              if (v58)
              {
                unint64_t v58 = (unint64_t)sub_10000721C(v58);
                double v54 = (void *)qword_100114268;
                uint64_t v52 = qword_100114270;
              }
              else
              {
                uint64_t v59 = 0;
              }
              int v60 = (_DWORD *)(v58 + 4 * v55);
              *int v60 = *(_DWORD *)(v28 + 168);
              uint64_t v53 = (uint64_t)(v60 + 1);
              for (uint64_t j = v140; (void *)v52 != v54; --v60)
              {
                int v61 = *(_DWORD *)(v52 - 4);
                v52 -= 4;
                *(v60 - 1) = v61;
              }
              qword_100114268 = (uint64_t)v60;
              qword_100114270 = v53;
              qword_100114278 = v58 + 4 * v59;
              if (v54) {
                operator delete(v54);
              }
            }
            else
            {
              *(_DWORD *)qword_100114270 = *(_DWORD *)(v28 + 168);
              uint64_t v53 = v52 + 4;
            }
            ++v30;
            qword_100114270 = v53;
            if (!*(unsigned char *)(j + 110) && *(unsigned char *)(v28 + 8) == 8 && *(float *)(v28 + 168) > 25.0) {
              *(unsigned char *)(j + 110) = 1;
            }
LABEL_80:
            v28 += 176;
            if (v28 == v29) {
              goto LABEL_83;
            }
            continue;
          default:
            goto LABEL_80;
        }
      }
    }
    int v139 = 0;
    int v30 = 0;
LABEL_83:
    for (uint64_t k = 0; k != 7; ++k)
    {
      double v64 = &byte_1001141B8[24 * k];
      BOOL v67 = (float *)*((void *)v64 + 4);
      uint64_t v66 = (char **)(v64 + 32);
      uint64_t v65 = v67;
      double v69 = (void **)(v66 + 1);
      double v68 = (float *)v66[1];
      unint64_t v70 = 126 - 2 * __clz(v68 - v67);
      if (v68 == v67) {
        uint64_t v71 = 0;
      }
      else {
        uint64_t v71 = v70;
      }
      sub_100007288(v65, v68, v71, 1);
      BOOL v72 = (char *)*v69;
      int v73 = (float *)*v66;
      uint64_t v74 = (unsigned char *)*v69 - *v66;
      uint64_t v75 = v74 >> 2;
      if ((unint64_t)(v74 >> 2) >= 5) {
        uint64_t v75 = 5;
      }
      if (v75)
      {
        double v76 = 0.0;
        os_log_type_t v77 = (float *)*v66;
        uint64_t v78 = v75;
        do
        {
          float v79 = *v77++;
          double v76 = v76 + v79;
          --v78;
        }
        while (v78);
        uint64_t v80 = j + 624 + 16 * k;
        ++*(_DWORD *)v80;
        *(double *)(v80 + 8) = v76 / (double)(unint64_t)v75 + *(double *)(v80 + 8);
      }
      if ((unint64_t)v74 > 0x13)
      {
        if (v74 != 20) {
          *double v69 = v73 + 5;
        }
      }
      else
      {
        unint64_t v81 = 5 - ((unint64_t)v74 >> 2);
        double v82 = &byte_1001141B8[24 * k];
        uint64_t v85 = *((void *)v82 + 6);
        double v84 = v82 + 48;
        uint64_t v83 = v85;
        if (v81 <= (v85 - (uint64_t)v72) >> 2)
        {
          memset_pattern16(v72, &unk_1000E31F0, ((16 - v74) & 0xFFFFFFFFFFFFFFFCLL) + 4);
          *double v69 = &v72[4 * v81];
        }
        else
        {
          uint64_t v86 = v83 - (void)v73;
          uint64_t v87 = v86 >> 1;
          if ((unint64_t)(v86 >> 1) <= 5) {
            uint64_t v87 = 5;
          }
          if ((unint64_t)v86 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v88 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v88 = v87;
          }
          int v89 = (char *)sub_10000721C(v88);
          uint64_t v91 = v90;
          memset_pattern16(&v89[v74], &unk_1000E31F0, 20 - v74);
          uint64_t v92 = &v89[4 * ((unint64_t)v74 >> 2)];
          uint64_t v93 = (float *)*v69;
          uint64_t v94 = (float *)*v66;
          while (v93 != v94)
          {
            int v95 = *((_DWORD *)v93-- - 1);
            *((_DWORD *)v92 - 1) = v95;
            v92 -= 4;
          }
          *uint64_t v66 = v92;
          *double v69 = v89 + 20;
          *double v84 = &v89[4 * v91];
          if (v94) {
            operator delete(v94);
          }
        }
      }
    }
    double v96 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
    {
      if (qword_100114270 == qword_100114268
        || (unint64_t)(qword_100114270 - qword_100114268) <= 0x10
        || *((void *)&xmmword_1001141D8 + 1) == (void)xmmword_1001141D8
        || *((void *)&xmmword_1001141D8 + 1) - (void)xmmword_1001141D8 <= 0x10uLL
        || (void)xmmword_1001141F8 == qword_1001141F0
        || (unint64_t)(xmmword_1001141F8 - qword_1001141F0) <= 0x10
        || *(void *)algn_100114210 == qword_100114208
        || (unint64_t)(*(void *)algn_100114210 - qword_100114208) <= 0x10
        || (void)xmmword_100114228 == qword_100114220
        || (unint64_t)(xmmword_100114228 - qword_100114220) <= 0x10
        || unk_100114240 == qword_100114238
        || (unint64_t)(unk_100114240 - qword_100114238) <= 0x10
        || (void)xmmword_100114258 == qword_100114250
        || (unint64_t)(xmmword_100114258 - qword_100114250) <= 0x10)
      {
        sub_100007CC4();
      }
      double v97 = *(float *)qword_100114268;
      float v135 = *(float *)(qword_100114268 + 8);
      float v136 = *(float *)(qword_100114268 + 4);
      float v98 = *(float *)(qword_100114268 + 16);
      float v134 = *(float *)(qword_100114268 + 12);
      float v99 = *(float *)xmmword_1001141D8;
      float v100 = *(float *)(xmmword_1001141D8 + 4);
      float v101 = *(float *)(xmmword_1001141D8 + 8);
      float v102 = *(float *)(xmmword_1001141D8 + 12);
      float v103 = *(float *)(xmmword_1001141D8 + 16);
      float v104 = *(float *)qword_1001141F0;
      float v105 = *(float *)(qword_1001141F0 + 4);
      float v106 = *(float *)(qword_1001141F0 + 8);
      float v107 = *(float *)(qword_1001141F0 + 12);
      float v108 = *(float *)(qword_1001141F0 + 16);
      float v109 = *(float *)qword_100114208;
      float v110 = *(float *)(qword_100114208 + 4);
      float v111 = *(float *)(qword_100114208 + 8);
      float v112 = *(float *)(qword_100114208 + 12);
      float v113 = *(float *)(qword_100114208 + 16);
      float v114 = *(float *)qword_100114220;
      float v115 = *(float *)(qword_100114220 + 4);
      float v116 = *(float *)(qword_100114220 + 8);
      float v117 = *(float *)(qword_100114220 + 12);
      float v118 = *(float *)(qword_100114220 + 16);
      float v119 = *(float *)qword_100114238;
      float v120 = *(float *)(qword_100114238 + 4);
      float v121 = *(float *)(qword_100114238 + 8);
      float v122 = *(float *)(qword_100114238 + 12);
      float v123 = *(float *)qword_100114250;
      float v124 = *(float *)(qword_100114250 + 4);
      *(_DWORD *)buf = 67249408;
      float v125 = *(float *)(qword_100114238 + 16);
      float v126 = *(float *)(qword_100114250 + 8);
      float v127 = *(float *)(qword_100114250 + 12);
      float v128 = *(float *)(qword_100114250 + 16);
      *(double *)&v143[2] = v97;
      double v145 = v136;
      double v147 = v135;
      double v149 = v134;
      double v151 = v98;
      double v153 = v99;
      double v155 = v100;
      double v157 = v101;
      double v159 = v102;
      double v161 = v103;
      double v163 = v104;
      double v165 = v105;
      double v167 = v106;
      double v169 = v107;
      double v171 = v108;
      double v173 = v109;
      double v175 = v110;
      double v177 = v111;
      double v179 = v112;
      double v181 = v113;
      double v183 = v114;
      double v185 = v115;
      double v187 = v116;
      double v189 = v117;
      double v191 = v118;
      double v193 = v119;
      double v195 = v120;
      double v197 = v121;
      double v199 = v122;
      double v201 = v125;
      double v203 = v123;
      double v205 = v124;
      double v207 = v126;
      double v209 = v127;
      double v211 = v128;
      *(_DWORD *)int v142 = v30;
      *(_WORD *)&v142[4] = 1026;
      *(_DWORD *)&v142[6] = v139;
      *(_WORD *)__int16 v143 = 2050;
      __int16 v144 = 2050;
      __int16 v146 = 2050;
      __int16 v148 = 2050;
      __int16 v150 = 2050;
      __int16 v152 = 2050;
      __int16 v154 = 2050;
      __int16 v156 = 2050;
      __int16 v158 = 2050;
      __int16 v160 = 2050;
      __int16 v162 = 2050;
      __int16 v164 = 2050;
      __int16 v166 = 2050;
      __int16 v168 = 2050;
      __int16 v170 = 2050;
      __int16 v172 = 2050;
      __int16 v174 = 2050;
      __int16 v176 = 2050;
      __int16 v178 = 2050;
      __int16 v180 = 2050;
      __int16 v182 = 2050;
      __int16 v184 = 2050;
      __int16 v186 = 2050;
      __int16 v188 = 2050;
      __int16 v190 = 2050;
      __int16 v192 = 2050;
      __int16 v194 = 2050;
      __int16 v196 = 2050;
      __int16 v198 = 2050;
      __int16 v200 = 2050;
      __int16 v202 = 2050;
      __int16 v204 = 2050;
      __int16 v206 = 2050;
      __int16 v208 = 2050;
      __int16 v210 = 2050;
      _os_log_impl((void *)&_mh_execute_header, v96, OS_LOG_TYPE_INFO, "PerfSinglePvtm,nCodeLock,%{public}d,nPhaseLock,%{public}d,any_cn0,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,gps_cn0,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,qzs_cn0,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,gal_cn0,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,glo_cn0,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,bds_cn0,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,nic_cn0,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f", buf, 0x16Cu);
    }
    double v129 = *(double *)(v138 + 48);
    if ((*(void *)&v129 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
      goto LABEL_134;
    }
    float v130 = *(float *)(v138 + 104);
    if ((LODWORD(v130) & 0x7FFFFFFFu) > 0x7F7FFFFF || v130 < 0.0) {
      goto LABEL_134;
    }
    if (*(unsigned char *)(v140 + 176))
    {
      double v131 = v130;
      if (*(double *)(v140 + 168) <= v130)
      {
LABEL_134:
        std::mutex::unlock(v6);
        return;
      }
      double v132 = v129 + *(double *)(v138 + 96);
      *(double *)(v140 + 160) = v132;
      *(double *)(v140 + 168) = v131;
    }
    else
    {
      double v132 = v129 + *(double *)(v138 + 96);
      double v131 = v130;
      *(double *)(v140 + 160) = v132;
      *(double *)(v140 + 168) = v130;
      *(unsigned char *)(v140 + 176) = 1;
    }
    __int16 v133 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134349312;
      *(double *)int v142 = v132;
      *(_WORD *)&v142[8] = 2050;
      *(double *)__int16 v143 = v131;
      _os_log_impl((void *)&_mh_execute_header, v133, OS_LOG_TYPE_INFO, "#clk,updateSavedOffset,ppb,%{public}.2f,unc,%{public}.2f", buf, 0x16u);
    }
    goto LABEL_134;
  }
}

void sub_1000064C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::mutex *a14)
{
  std::mutex::unlock(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_100006510(uint64_t a1)
{
  for (uint64_t i = 0; i != -168; i -= 24)
  {
    uint64_t v3 = *(void **)(a1 + i + 144);
    if (v3)
    {
      *(void *)(a1 + i + 152) = v3;
      operator delete(v3);
    }
  }
  return a1;
}

BOOL sub_100006558(uint64_t a1)
{
  float v2 = *(float *)(a1 + 8);
  if (v2 >= 1.0e11)
  {
    if (v2 <= 0.0) {
      return 0;
    }
  }
  else if (v2 <= 0.0 || *(void *)a1 == 0)
  {
    return 0;
  }
  if (*(void *)(a1 + 24) == -1 || !sub_1000070B0((double *)(a1 + 48))) {
    return 0;
  }

  return sub_10000717C(a1 + 136);
}

NSDictionary *sub_1000065E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v5[0] = @"assistAgeSec";
  v6[0] = +[NSNumber numberWithDouble:*(double *)(a1 + 40)];
  v5[1] = @"assistMeasuredErrorMs";
  if (!*(unsigned char *)(v2 + 144)) {
    sub_100007064();
  }
  v6[1] = +[NSNumber numberWithDouble:*(double *)(v2 + 136)];
  v5[2] = @"assistUncertaintyMs";
  LODWORD(v3) = *(_DWORD *)(v2 + 128);
  v6[2] = +[NSNumber numberWithFloat:v3];
  v5[3] = @"timeBetweenGnssSessionsSec";
  v6[3] = +[NSNumber numberWithDouble:*(double *)(a1 + 48)];
  return +[NSDictionary dictionaryWithObjects:v6 forKeys:v5 count:4];
}

void (__cdecl ***sub_1000066E0(void (__cdecl ***a1)(std::ofstream *__hidden this)))(std::ofstream *__hidden this)
{
  *a1 = v3;
  *(void *)((char *)*(v3 - 3) + (void)a1) = v2;
  int v4 = (std::ios_base *)((char *)*(*a1 - 3) + (void)a1);
  std::ios_base::init(v4, a1 + 1);
  v4[1].__vftable = 0;
  v4[1].__fmtflags_ = -1;
  std::filebuf::basic_filebuf();
  if (!std::filebuf::open()) {
    std::ios_base::clear((std::ios_base *)((char *)*(*a1 - 3) + (void)a1), *(_DWORD *)((char *)*(*a1 - 3) + (void)a1 + 32) | 4);
  }
  return a1;
}

void sub_100006874(_Unwind_Exception *a1)
{
}

uint64_t sub_1000068AC(uint64_t a1, uint64_t a2)
{
  float v2 = *(double *)a2 - *(double *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  int v4 = *(_DWORD *)(a2 + 24);
  uint64_t v5 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134349824;
    double v8 = v2;
    __int16 v9 = 2050;
    uint64_t v10 = v3;
    __int16 v11 = 1026;
    int v12 = v4;
    __int16 v13 = 1026;
    int v14 = (v4 + 30) / 60;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Analytics,RxClockFreq,measuredErrorPpb,%{public}.3f,unc,%{public}.2f,ageSec,%{public}d,ageMin,%{public}d", buf, 0x22u);
  }
  return AnalyticsSendEventLazy();
}

NSDictionary *sub_100006A38(uint64_t a1, double a2)
{
  v5[0] = @"freqErrorPpb";
  *(float *)&a2 = fabsf(*(float *)(a1 + 40));
  v6[0] = +[NSNumber numberWithFloat:a2];
  v5[1] = @"freqErrorOverUnc";
  LODWORD(v3) = *(_DWORD *)(a1 + 44);
  v6[1] = +[NSNumber numberWithFloat:v3];
  v5[2] = @"freqPpb";
  v6[2] = +[NSNumber numberWithDouble:**(double **)(a1 + 32)];
  v5[3] = @"dataAgeMinutes";
  v6[3] = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 48)];
  return +[NSDictionary dictionaryWithObjects:v6 forKeys:v5 count:4];
}

uint64_t sub_100006B20(uint64_t a1, double *a2)
{
  double v4 = a2[3];
  double v3 = a2[4];
  BOOL v5 = v4 > 1.0 && v3 <= 0.5;
  float v6 = -1.0;
  if (v3 > 0.0) {
    float v6 = fabs(v4) / v3;
  }
  uint64_t v7 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    double v8 = *a2;
    uint64_t v9 = *((void *)a2 + 1);
    uint64_t v10 = *((void *)a2 + 2);
    int v11 = *((_DWORD *)a2 + 10);
    *(_DWORD *)buf = 134350848;
    double v14 = v8;
    __int16 v15 = 2050;
    uint64_t v16 = v9;
    __int16 v17 = 2050;
    uint64_t v18 = v10;
    __int16 v19 = 2050;
    double v20 = v4;
    __int16 v21 = 2050;
    double v22 = v3;
    __int16 v23 = 2050;
    double v24 = v6;
    __int16 v25 = 1026;
    int v26 = v11;
    __int16 v27 = 1026;
    BOOL v28 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Analytics,RTC,estimatedFreqPpb,%{public}.2f,freqShiftSinceStoredPpb,%{public}.2f,unc,%{public}.2f,timePropagationErrorMs,%{public}.2f,unc,%{public}.2f,errOverUnc,%{public}.2f,ageSec,%{public}d,affectsME,%{public}d", buf, 0x4Au);
  }
  return AnalyticsSendEventLazy();
}

NSDictionary *sub_100006CBC(uint64_t a1)
{
  v4[0] = @"timePropagationErrorMs";
  v5[0] = +[NSNumber numberWithDouble:fabs(*(double *)(*(void *)(a1 + 32) + 24))];
  v4[1] = @"timePropagationUncMs";
  v5[1] = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 32) + 32)];
  v4[2] = @"timePropagationErrorOverUnc";
  LODWORD(v2) = *(_DWORD *)(a1 + 40);
  v5[2] = +[NSNumber numberWithFloat:v2];
  void v4[3] = @"errorAffectsME";
  v5[3] = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 44)];
  v4[4] = @"freqShiftSinceStoredPpb";
  void v5[4] = +[NSNumber numberWithDouble:fabs(*(double *)(*(void *)(a1 + 32) + 8))];
  v4[5] = @"dataAgeSec";
  v5[5] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 40)];
  return +[NSDictionary dictionaryWithObjects:v5 forKeys:v4 count:6];
}

uint64_t sub_100006DEC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = GpsdPlatformInfo::instance(0);
  if (*(unsigned char *)(v3 + 24))
  {
    float v4 = *(double *)(v3 + 16);
    double v5 = v4;
  }
  else
  {
    double v5 = 0.0;
  }
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  int v8 = (*((_DWORD *)a2 + 4) + 30) / 60;
  uint64_t v9 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134349824;
    double v12 = v5;
    __int16 v13 = 2050;
    uint64_t v14 = v6;
    __int16 v15 = 2050;
    uint64_t v16 = v7;
    __int16 v17 = 1026;
    int v18 = v8;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Analytics,L5Delay,cal,%{public}.2f,learned,%{public}.2f,current,%{public}.2f,learningAgeMin,%{public}d", buf, 0x26u);
  }
  return AnalyticsSendEventLazy();
}

NSDictionary *sub_100006F80(uint64_t a1)
{
  v5[0] = @"estimateMeters";
  v6[0] = +[NSNumber numberWithDouble:**(double **)(a1 + 32)];
  v5[1] = @"learnedDeltaFromCalMeters";
  LODWORD(v2) = *(_DWORD *)(a1 + 40);
  v6[1] = +[NSNumber numberWithFloat:v2];
  v5[2] = @"estimateDeltaFromLearnedMeters";
  LODWORD(v3) = *(_DWORD *)(a1 + 44);
  v6[2] = +[NSNumber numberWithFloat:v3];
  v5[3] = @"learnedDataAgeMinutes";
  v6[3] = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 48)];
  return +[NSDictionary dictionaryWithObjects:v6 forKeys:v5 count:4];
}

void sub_100007064()
{
  exception = __cxa_allocate_exception(8uLL);
}

BOOL sub_1000070B0(double *a1)
{
  uint64_t v1 = 0;
  if (*a1 >= -90.0 && *a1 <= 90.0)
  {
    uint64_t v1 = 0;
    double v2 = a1[1];
    if (v2 > -180.0 && v2 <= 180.0)
    {
      if (a1[2] < -500.0) {
        return 0;
      }
      double v3 = a1[3];
      if (v3 < -120.0 || v3 > 100.0) {
        return 0;
      }
      if (a1[4] <= 0.0) {
        return 0;
      }
      if (a1[5] <= 0.0) {
        return 0;
      }
      if (a1[6] <= 0.0) {
        return 0;
      }
      double v5 = a1[7];
      return v5 >= 0.0 && v5 < 180.0;
    }
  }
  return v1;
}

BOOL sub_10000717C(uint64_t a1)
{
  if (*(double *)a1 < 0.0
    || *(double *)(a1 + 8) <= 0.0
    || (*(void *)(a1 + 16) & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
    || *(double *)(a1 + 24) <= 0.0)
  {
    return 0;
  }
  double v1 = *(double *)(a1 + 32);
  if (v1 == -1.0) {
    return 1;
  }
  uint64_t v2 = 0;
  if (v1 >= 0.0 && v1 < 360.0) {
    return *(double *)(a1 + 40) > 0.0;
  }
  return v2;
}

void sub_100007204()
{
}

void *sub_10000721C(unint64_t a1)
{
  if (a1 >> 62) {
    sub_100007254();
  }
  return operator new(4 * a1);
}

void sub_100007254()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  double v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

float *sub_100007288(float *result, float *a2, uint64_t a3, char a4)
{
  uint64_t v9 = result;
LABEL_2:
  uint64_t v10 = v9;
  while (1)
  {
    uint64_t v9 = v10;
    uint64_t v11 = (char *)a2 - (char *)v10;
    unint64_t v12 = a2 - v10;
    if (v5 || !v4)
    {
      switch(v12)
      {
        case 0uLL:
        case 1uLL:
          return result;
        case 2uLL:
          float v39 = *(a2 - 1);
          float v40 = *v10;
          if (v39 > *v10)
          {
            *uint64_t v10 = v39;
            *(a2 - 1) = v40;
          }
          break;
        case 3uLL:
          float v41 = v10[1];
          float v42 = *(a2 - 1);
          if (v41 <= v42) {
            int v43 = *((_DWORD *)a2 - 1);
          }
          else {
            int v43 = *((_DWORD *)v10 + 1);
          }
          if (v41 > v42) {
            float v41 = *(a2 - 1);
          }
          *(a2 - 1) = v41;
          *((_DWORD *)v10 + 1) = v43;
          float v44 = *(a2 - 1);
          if (v44 <= *v10) {
            float v45 = *v10;
          }
          else {
            float v45 = *(a2 - 1);
          }
          if (v44 > *v10) {
            float v44 = *v10;
          }
          *(a2 - 1) = v44;
          float v47 = *v10;
          float v46 = v10[1];
          if (v45 <= v46)
          {
            float v47 = v10[1];
            float v46 = v45;
          }
          *uint64_t v10 = v47;
          v10[1] = v46;
          break;
        case 4uLL:
          float v49 = v10[1];
          float v48 = v10[2];
          if (*v10 <= v48) {
            float v50 = v10[2];
          }
          else {
            float v50 = *v10;
          }
          if (*v10 <= v48) {
            float v48 = *v10;
          }
          v10[2] = v48;
          *uint64_t v10 = v50;
          float v51 = *(a2 - 1);
          if (v49 <= v51) {
            float v52 = *(a2 - 1);
          }
          else {
            float v52 = v49;
          }
          if (v49 <= v51) {
            float v51 = v49;
          }
          *(a2 - 1) = v51;
          float v53 = *v10;
          if (*v10 <= v52) {
            float v54 = v52;
          }
          else {
            float v54 = *v10;
          }
          if (*v10 > v52) {
            float v53 = v52;
          }
          *uint64_t v10 = v54;
          v10[1] = v53;
          float v55 = v10[2];
          float v56 = *(a2 - 1);
          if (v55 <= v56) {
            float v57 = *(a2 - 1);
          }
          else {
            float v57 = v10[2];
          }
          if (v55 > v56) {
            float v55 = *(a2 - 1);
          }
          *(a2 - 1) = v55;
          float v58 = v10[1];
          if (v58 <= v57) {
            float v59 = v57;
          }
          else {
            float v59 = v10[1];
          }
          if (v58 > v57) {
            float v58 = v57;
          }
          v10[1] = v59;
          v10[2] = v58;
          break;
        case 5uLL:
          float v60 = *v10;
          float v61 = v10[1];
          if (*v10 <= v61) {
            float v62 = v10[1];
          }
          else {
            float v62 = *v10;
          }
          if (*v10 > v61) {
            float v60 = v10[1];
          }
          *uint64_t v10 = v62;
          v10[1] = v60;
          float v63 = v10[3];
          float v64 = *(a2 - 1);
          if (v63 <= v64) {
            int v65 = *((_DWORD *)a2 - 1);
          }
          else {
            int v65 = *((_DWORD *)v10 + 3);
          }
          if (v63 > v64) {
            float v63 = *(a2 - 1);
          }
          *(a2 - 1) = v63;
          *((_DWORD *)v10 + 3) = v65;
          float v66 = *(a2 - 1);
          float v67 = v10[2];
          if (v66 <= v67) {
            float v68 = v10[2];
          }
          else {
            float v68 = *(a2 - 1);
          }
          if (v66 > v67) {
            float v66 = v10[2];
          }
          *(a2 - 1) = v66;
          int v70 = *((_DWORD *)v10 + 2);
          float v69 = v10[3];
          float v71 = v10[1];
          if (v68 <= v69)
          {
            int v70 = *((_DWORD *)v10 + 3);
            float v69 = v68;
          }
          *((_DWORD *)v10 + 2) = v70;
          v10[3] = v69;
          float v72 = *(a2 - 1);
          if (v71 <= v72) {
            float v73 = *(a2 - 1);
          }
          else {
            float v73 = v71;
          }
          if (v71 <= v72) {
            float v72 = v71;
          }
          *(a2 - 1) = v72;
          float v74 = *v10;
          float v76 = v10[2];
          float v75 = v10[3];
          if (v75 <= *v10) {
            float v77 = *v10;
          }
          else {
            float v77 = v10[3];
          }
          if (v75 > *v10) {
            float v75 = *v10;
          }
          if (v77 <= v76)
          {
            float v74 = v10[2];
            float v76 = v77;
          }
          if (v75 <= v73) {
            float v78 = v73;
          }
          else {
            float v78 = v75;
          }
          if (v75 > v73) {
            float v75 = v73;
          }
          if (v78 <= v76) {
            float v73 = v76;
          }
          *uint64_t v10 = v74;
          v10[1] = v73;
          if (v78 <= v76) {
            float v79 = v78;
          }
          else {
            float v79 = v76;
          }
          v10[2] = v79;
          v10[3] = v75;
          break;
        default:
          JUMPOUT(0);
      }
      return result;
    }
    if (v11 <= 95) {
      break;
    }
    if (!a3)
    {
      if (v10 == a2) {
        return result;
      }
      int64_t v90 = (v12 - 2) >> 1;
      int64_t v91 = v90;
      do
      {
        int64_t v92 = v91;
        if (v90 >= v91)
        {
          uint64_t v93 = (2 * v91) | 1;
          uint64_t v94 = &v10[v93];
          if (2 * v92 + 2 < (uint64_t)v12 && *v94 > v94[1])
          {
            ++v94;
            uint64_t v93 = 2 * v92 + 2;
          }
          int v95 = &v10[v92];
          float v96 = *v94;
          float v97 = *v95;
          if (*v94 <= *v95)
          {
            do
            {
              *int v95 = v96;
              int v95 = v94;
              if (v90 < v93) {
                break;
              }
              uint64_t v98 = 2 * v93;
              uint64_t v93 = (2 * v93) | 1;
              uint64_t v94 = &v10[v93];
              uint64_t v99 = v98 + 2;
              if (v99 < (uint64_t)v12 && *v94 > v94[1])
              {
                ++v94;
                uint64_t v93 = v99;
              }
              float v96 = *v94;
            }
            while (*v94 <= v97);
            *int v95 = v97;
          }
        }
        int64_t v91 = v92 - 1;
      }
      while (v92);
      uint64_t v100 = (unint64_t)v11 >> 2;
      while (2)
      {
        uint64_t v101 = 0;
        float v102 = *v10;
        float v103 = v10;
        do
        {
          float v104 = v103;
          v103 += v101 + 1;
          uint64_t v105 = 2 * v101;
          uint64_t v101 = (2 * v101) | 1;
          uint64_t v106 = v105 + 2;
          if (v106 < v100 && *v103 > v103[1])
          {
            ++v103;
            uint64_t v101 = v106;
          }
          *float v104 = *v103;
        }
        while (v101 <= (uint64_t)((unint64_t)(v100 - 2) >> 1));
        if (v103 == --a2)
        {
LABEL_180:
          *float v103 = v102;
        }
        else
        {
          *float v103 = *a2;
          *a2 = v102;
          uint64_t v107 = (char *)v103 - (char *)v10 + 4;
          if (v107 >= 5)
          {
            unint64_t v108 = (((unint64_t)v107 >> 2) - 2) >> 1;
            float v109 = &v10[v108];
            float v110 = *v109;
            float v102 = *v103;
            if (*v109 > *v103)
            {
              do
              {
                *float v103 = v110;
                float v103 = v109;
                if (!v108) {
                  break;
                }
                unint64_t v108 = (v108 - 1) >> 1;
                float v109 = &v10[v108];
                float v110 = *v109;
              }
              while (*v109 > v102);
              goto LABEL_180;
            }
          }
        }
        if (v100-- <= 2) {
          return result;
        }
        continue;
      }
    }
    unint64_t v13 = v12 >> 1;
    uint64_t v14 = &v10[v12 >> 1];
    if ((unint64_t)v11 >= 0x201)
    {
      sub_1000079A4(v9, &v9[v12 >> 1], a2 - 1);
      sub_1000079A4(v9 + 1, v14 - 1, a2 - 2);
      sub_1000079A4(v9 + 2, &v9[v13 + 1], a2 - 3);
      result = sub_1000079A4(v14 - 1, v14, &v9[v13 + 1]);
      float v15 = *v9;
      float *v9 = *v14;
      *uint64_t v14 = v15;
    }
    else
    {
      result = sub_1000079A4(&v9[v12 >> 1], v9, a2 - 1);
    }
    --a3;
    float v16 = *v9;
    if ((a4 & 1) != 0 || *(v9 - 1) > v16)
    {
      uint64_t v17 = 0;
      do
        float v18 = v9[++v17];
      while (v18 > v16);
      __int16 v19 = &v9[v17];
      double v20 = a2;
      if (v17 == 1)
      {
        double v20 = a2;
        do
        {
          if (v19 >= v20) {
            break;
          }
          float v22 = *--v20;
        }
        while (v22 <= v16);
      }
      else
      {
        do
          float v21 = *--v20;
        while (v21 <= v16);
      }
      if (v19 >= v20)
      {
        BOOL v28 = v19 - 1;
      }
      else
      {
        float v23 = *v20;
        double v24 = &v9[v17];
        __int16 v25 = v20;
        do
        {
          *double v24 = v23;
          *__int16 v25 = v18;
          do
          {
            float v26 = v24[1];
            ++v24;
            float v18 = v26;
          }
          while (v26 > v16);
          do
          {
            float v27 = *--v25;
            float v23 = v27;
          }
          while (v27 <= v16);
        }
        while (v24 < v25);
        BOOL v28 = v24 - 1;
      }
      if (v28 != v9) {
        float *v9 = *v28;
      }
      *BOOL v28 = v16;
      if (v19 < v20) {
        goto LABEL_33;
      }
      BOOL v29 = sub_100007A14(v9, v28);
      uint64_t v10 = v28 + 1;
      result = (float *)sub_100007A14(v28 + 1, a2);
      if (result)
      {
        a2 = v28;
        if (v29) {
          return result;
        }
        goto LABEL_2;
      }
      if (!v29)
      {
LABEL_33:
        result = (float *)sub_100007288(v9, v28, a3, a4 & 1);
        a4 = 0;
        uint64_t v10 = v28 + 1;
      }
    }
    else
    {
      if (v16 <= *(a2 - 1))
      {
        uint64_t v31 = v9 + 1;
        do
        {
          uint64_t v10 = v31;
          if (v31 >= a2) {
            break;
          }
          ++v31;
        }
        while (v16 <= *v10);
      }
      else
      {
        uint64_t v10 = v9;
        do
        {
          float v30 = v10[1];
          ++v10;
        }
        while (v16 <= v30);
      }
      uint64_t v32 = a2;
      if (v10 < a2)
      {
        uint64_t v32 = a2;
        do
          float v33 = *--v32;
        while (v16 > v33);
      }
      if (v10 < v32)
      {
        float v34 = *v10;
        float v35 = *v32;
        do
        {
          *uint64_t v10 = v35;
          *uint64_t v32 = v34;
          do
          {
            float v36 = v10[1];
            ++v10;
            float v34 = v36;
          }
          while (v16 <= v36);
          do
          {
            float v37 = *--v32;
            float v35 = v37;
          }
          while (v16 > v37);
        }
        while (v10 < v32);
      }
      uint64_t v38 = v10 - 1;
      BOOL v4 = v10 - 1 >= v9;
      BOOL v5 = v10 - 1 == v9;
      if (v10 - 1 != v9) {
        float *v9 = *v38;
      }
      a4 = 0;
      *uint64_t v38 = v16;
    }
  }
  uint64_t v80 = v10 + 1;
  BOOL v82 = v10 == a2 || v80 == a2;
  if (a4)
  {
    if (!v82)
    {
      uint64_t v83 = 4;
      double v84 = v10;
      do
      {
        float v86 = *v84;
        float v85 = v84[1];
        double v84 = v80;
        if (v85 > v86)
        {
          uint64_t v87 = v83;
          do
          {
            *(float *)((char *)v10 + v87) = v86;
            uint64_t v88 = v87 - 4;
            if (v87 == 4)
            {
              int v89 = v10;
              goto LABEL_152;
            }
            float v86 = *(float *)((char *)v10 + v87 - 8);
            v87 -= 4;
          }
          while (v85 > v86);
          int v89 = (float *)((char *)v10 + v88);
LABEL_152:
          *int v89 = v85;
        }
        uint64_t v80 = v84 + 1;
        v83 += 4;
      }
      while (v84 + 1 != a2);
    }
  }
  else if (!v82)
  {
    do
    {
      float v113 = *v9;
      float v112 = v9[1];
      uint64_t v9 = v80;
      if (v112 > v113)
      {
        float v114 = v80;
        do
        {
          *float v114 = v113;
          float v113 = *(v114 - 2);
          --v114;
        }
        while (v112 > v113);
        *float v114 = v112;
      }
      ++v80;
    }
    while (v9 + 1 != a2);
  }
  return result;
}

float *sub_1000079A4(float *result, float *a2, float *a3)
{
  float v3 = *a2;
  float v4 = *result;
  float v5 = *a3;
  if (*a2 <= *result)
  {
    if (v5 > v3)
    {
      *a2 = v5;
      *a3 = v3;
      float v6 = *result;
      if (*a2 > *result)
      {
        std::logic_error *result = *a2;
        *a2 = v6;
      }
    }
  }
  else
  {
    if (v5 <= v3)
    {
      std::logic_error *result = v3;
      *a2 = v4;
      if (*a3 <= v4) {
        return result;
      }
      *a2 = *a3;
    }
    else
    {
      std::logic_error *result = v5;
    }
    *a3 = v4;
  }
  return result;
}

BOOL sub_100007A14(float *a1, float *a2)
{
  BOOL v2 = 1;
  switch(a2 - a1)
  {
    case 0:
    case 1:
      return v2;
    case 2:
      float v3 = *(a2 - 1);
      float v4 = *a1;
      if (v3 > *a1)
      {
        *a1 = v3;
        *(a2 - 1) = v4;
      }
      break;
    case 3:
      float v20 = a1[1];
      float v21 = *(a2 - 1);
      if (v20 <= v21) {
        int v22 = *((_DWORD *)a2 - 1);
      }
      else {
        int v22 = *((_DWORD *)a1 + 1);
      }
      if (v20 > v21) {
        float v20 = *(a2 - 1);
      }
      *(a2 - 1) = v20;
      *((_DWORD *)a1 + 1) = v22;
      float v23 = *(a2 - 1);
      if (v23 <= *a1) {
        float v24 = *a1;
      }
      else {
        float v24 = *(a2 - 1);
      }
      if (v23 > *a1) {
        float v23 = *a1;
      }
      *(a2 - 1) = v23;
      float v26 = *a1;
      float v25 = a1[1];
      if (v24 <= v25)
      {
        float v26 = a1[1];
        float v25 = v24;
      }
      *a1 = v26;
      a1[1] = v25;
      break;
    case 4:
      float v48 = a1[1];
      float v47 = a1[2];
      if (*a1 <= v47) {
        float v49 = a1[2];
      }
      else {
        float v49 = *a1;
      }
      if (*a1 <= v47) {
        float v47 = *a1;
      }
      a1[2] = v47;
      *a1 = v49;
      float v50 = *(a2 - 1);
      if (v48 <= v50) {
        float v51 = *(a2 - 1);
      }
      else {
        float v51 = v48;
      }
      if (v48 <= v50) {
        float v50 = v48;
      }
      *(a2 - 1) = v50;
      float v52 = *a1;
      if (*a1 <= v51) {
        float v53 = v51;
      }
      else {
        float v53 = *a1;
      }
      if (*a1 > v51) {
        float v52 = v51;
      }
      *a1 = v53;
      a1[1] = v52;
      float v54 = a1[2];
      float v55 = *(a2 - 1);
      if (v54 <= v55) {
        float v56 = *(a2 - 1);
      }
      else {
        float v56 = a1[2];
      }
      if (v54 > v55) {
        float v54 = *(a2 - 1);
      }
      *(a2 - 1) = v54;
      float v57 = a1[1];
      if (v57 <= v56) {
        float v58 = v56;
      }
      else {
        float v58 = a1[1];
      }
      if (v57 > v56) {
        float v57 = v56;
      }
      a1[1] = v58;
      a1[2] = v57;
      break;
    case 5:
      float v27 = *a1;
      float v28 = a1[1];
      if (*a1 <= v28) {
        float v29 = a1[1];
      }
      else {
        float v29 = *a1;
      }
      if (*a1 > v28) {
        float v27 = a1[1];
      }
      *a1 = v29;
      a1[1] = v27;
      float v30 = a1[3];
      float v31 = *(a2 - 1);
      if (v30 <= v31) {
        int v32 = *((_DWORD *)a2 - 1);
      }
      else {
        int v32 = *((_DWORD *)a1 + 3);
      }
      if (v30 > v31) {
        float v30 = *(a2 - 1);
      }
      *(a2 - 1) = v30;
      *((_DWORD *)a1 + 3) = v32;
      float v33 = *(a2 - 1);
      float v34 = a1[2];
      if (v33 <= v34) {
        float v35 = a1[2];
      }
      else {
        float v35 = *(a2 - 1);
      }
      if (v33 > v34) {
        float v33 = a1[2];
      }
      *(a2 - 1) = v33;
      int v37 = *((_DWORD *)a1 + 2);
      float v36 = a1[3];
      float v38 = a1[1];
      if (v35 <= v36)
      {
        int v37 = *((_DWORD *)a1 + 3);
        float v36 = v35;
      }
      *((_DWORD *)a1 + 2) = v37;
      a1[3] = v36;
      float v39 = *(a2 - 1);
      if (v38 <= v39) {
        float v40 = *(a2 - 1);
      }
      else {
        float v40 = v38;
      }
      if (v38 <= v39) {
        float v39 = v38;
      }
      *(a2 - 1) = v39;
      float v41 = *a1;
      float v43 = a1[2];
      float v42 = a1[3];
      if (v42 <= *a1) {
        float v44 = *a1;
      }
      else {
        float v44 = a1[3];
      }
      if (v42 > *a1) {
        float v42 = *a1;
      }
      if (v44 <= v43)
      {
        float v41 = a1[2];
        float v43 = v44;
      }
      if (v42 <= v40) {
        float v45 = v40;
      }
      else {
        float v45 = v42;
      }
      if (v42 > v40) {
        float v42 = v40;
      }
      if (v45 <= v43) {
        float v40 = v43;
      }
      *a1 = v41;
      a1[1] = v40;
      if (v45 <= v43) {
        float v46 = v45;
      }
      else {
        float v46 = v43;
      }
      a1[2] = v46;
      a1[3] = v42;
      break;
    default:
      float v5 = a1 + 2;
      float v6 = a1[2];
      float v8 = *a1;
      float v7 = a1[1];
      if (v7 <= v6) {
        float v9 = a1[2];
      }
      else {
        float v9 = a1[1];
      }
      if (v7 <= v6) {
        float v6 = a1[1];
      }
      if (v6 <= v8) {
        float v10 = *a1;
      }
      else {
        float v10 = v6;
      }
      if (v6 > v8) {
        float v6 = *a1;
      }
      float *v5 = v6;
      if (v10 <= v9) {
        float v11 = v9;
      }
      else {
        float v11 = v8;
      }
      if (v10 > v9) {
        float v10 = v9;
      }
      *a1 = v11;
      a1[1] = v10;
      unint64_t v12 = a1 + 3;
      if (a1 + 3 == a2)
      {
LABEL_29:
        BOOL v2 = 1;
      }
      else
      {
        int v13 = 0;
        uint64_t v14 = 12;
        while (1)
        {
          float v15 = *v12;
          float v16 = *v5;
          if (*v12 > *v5)
          {
            uint64_t v17 = v14;
            while (1)
            {
              *(float *)((char *)a1 + v17) = v16;
              uint64_t v18 = v17 - 4;
              if (v17 == 4) {
                break;
              }
              float v16 = *(float *)((char *)a1 + v17 - 8);
              v17 -= 4;
              if (v15 <= v16)
              {
                __int16 v19 = (float *)((char *)a1 + v18);
                goto LABEL_27;
              }
            }
            __int16 v19 = a1;
LABEL_27:
            *__int16 v19 = v15;
            if (++v13 == 8) {
              break;
            }
          }
          float v5 = v12;
          v14 += 4;
          if (++v12 == a2) {
            goto LABEL_29;
          }
        }
        BOOL v2 = v12 + 1 == a2;
      }
      break;
  }
  return v2;
}

void sub_100007CC4()
{
}

void sub_100007CDC(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_100007D38(exception, a1);
}

void sub_100007D24(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_100007D38(std::logic_error *a1, const char *a2)
{
  result = std::logic_error::logic_error(a1, a2);
  return result;
}

void *sub_100007D6C(void *a1, uint64_t a2, uint64_t a3)
{
  std::ostream::sentry::sentry();
  if (v13)
  {
    uint64_t v6 = (uint64_t)a1 + *(void *)(*a1 - 24);
    uint64_t v7 = *(void *)(v6 + 40);
    int v8 = *(_DWORD *)(v6 + 8);
    int v9 = *(_DWORD *)(v6 + 144);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)));
      float v10 = std::locale::use_facet(&v14, &std::ctype<char>::id);
      int v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&v14);
      *(_DWORD *)(v6 + 144) = v9;
    }
    if ((v8 & 0xB0) == 0x20) {
      uint64_t v11 = a2 + a3;
    }
    else {
      uint64_t v11 = a2;
    }
    if (!sub_100007F10(v7, a2, v11, a2 + a3, v6, (char)v9)) {
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 5);
    }
  }
  std::ostream::sentry::~sentry();
  return a1;
}

void sub_100007EA8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::locale a12)
{
  std::ostream::sentry::~sentry();
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v12 + *(void *)(*v12 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x100007E88);
}

void sub_100007EFC(_Unwind_Exception *a1)
{
}

uint64_t sub_100007F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int __c)
{
  uint64_t v6 = a1;
  if (a1)
  {
    uint64_t v11 = *(void *)(a5 + 24);
    if (v11 <= a4 - a2) {
      int64_t v12 = 0;
    }
    else {
      int64_t v12 = v11 - (a4 - a2);
    }
    if (a3 - a2 >= 1 && (*(uint64_t (**)(uint64_t))(*(void *)a1 + 96))(a1) != a3 - a2) {
      return 0;
    }
    if (v12 >= 1)
    {
      sub_100008098(__p, v12, __c);
      char v13 = v18 >= 0 ? __p : (void **)__p[0];
      uint64_t v14 = (*(uint64_t (**)(uint64_t, void **, int64_t))(*(void *)v6 + 96))(v6, v13, v12);
      if (v18 < 0) {
        operator delete(__p[0]);
      }
      if (v14 != v12) {
        return 0;
      }
    }
    uint64_t v15 = a4 - a3;
    if (v15 < 1 || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6 + 96))(v6, a3, v15) == v15) {
      *(void *)(a5 + 24) = 0;
    }
    else {
      return 0;
    }
  }
  return v6;
}

void sub_10000807C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100008098(void *__b, size_t __len, int __c)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    sub_100003460();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    __b[1] = __len;
    __b[2] = v8 | 0x8000000000000000;
    *__b = v6;
  }
  else
  {
    *((unsigned char *)__b + 23) = __len;
    uint64_t v6 = __b;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memset(v6, __c, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __b;
}

uint64_t sub_100008144(uint64_t a1)
{
  sub_100008190(a1);
  std::mutex::~mutex((std::mutex *)(a1 + 120));
  for (uint64_t i = 80; i != -40; i -= 40)
    sub_100008B0C(a1 + i);
  return a1;
}

void sub_100008190(uint64_t a1)
{
  BOOL v2 = *(NSObject **)(a1 + 192);
  if (v2)
  {
    dispatch_source_cancel(v2);
    float v3 = *(void **)(a1 + 192);
  }
}

void sub_1000081DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  BOOL v2 = (std::mutex *)(v1 + 120);
  std::mutex::lock((std::mutex *)(v1 + 120));
  if (!*(unsigned char *)(v1 + 200))
  {
    sub_100008190(v1);
    goto LABEL_46;
  }
  float v31 = (std::mutex *)(v1 + 120);
  unint64_t v3 = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  float64x2_t v34 = _Q0;
  float64x2_t v33 = (float64x2_t)vdupq_n_s64(0x412E848000000000uLL);
  uint64_t v32 = v1;
  do
  {
    int v9 = *(uint64x2_t **)(v1 + 40 * v3 + 16);
    if (v9)
    {
      float v10 = "";
      if (v3 == 2) {
        float v10 = "Ind";
      }
      if (v3 == 1) {
        float v10 = "Rsp";
      }
      if (v3) {
        uint64_t v11 = v10;
      }
      else {
        uint64_t v11 = "Req";
      }
      do
      {
        memset(&__p, 0, sizeof(__p));
        if (v3 > 1)
        {
          if (v3 == 2)
          {
            gpsd::util::stringify(v9[1].u32[0], (uint64_t)&buf);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
            std::string __p = buf;
            double v12 = -1.0;
            double v13 = -1.0;
            goto LABEL_23;
          }
        }
        else
        {
          gpsd::util::shorthandStringify(v9[1].i32[0], &buf);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          std::string __p = buf;
        }
        int v14 = v9[1].i32[2];
        double v13 = -1.0;
        if (v14 >= 1)
        {
          double v15 = (double)v14;
          double v12 = (double)v9[2].u64[1] / 1000000.0 / (double)v14;
          float64x2_t v35 = vdivq_f64(vcvtq_f64_u64(v9[3]), v33);
          if (v3 || (uint64_t v24 = v9[4].i64[1], v24 < 1))
          {
            double v16 = -1.0;
            double v17 = -1.0;
          }
          else
          {
            double v13 = (double)v9[5].i64[0] / 1000000.0;
            double v17 = (double)v24 / 1000000.0;
            double v16 = (double)v9[4].i64[0] / 1000000.0 / v15;
          }
          goto LABEL_24;
        }
        double v12 = -1.0;
LABEL_23:
        double v16 = -1.0;
        double v17 = -1.0;
        float64x2_t v35 = v34;
LABEL_24:
        char v18 = qword_100114840;
        BOOL v19 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO);
        char v20 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        if (v19)
        {
          p_p = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          __int32 v22 = v9[1].i32[2];
          uint64_t v23 = v9[2].i64[0];
          LODWORD(buf.__r_.__value_.__l.__data_) = 136448514;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v11;
          WORD2(buf.__r_.__value_.__r.__words[1]) = 2082;
          *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)p_p;
          HIWORD(buf.__r_.__value_.__r.__words[2]) = 1026;
          __int32 v38 = v22;
          __int16 v39 = 2050;
          uint64_t v40 = v23;
          __int16 v41 = 2050;
          float64_t v42 = v35.f64[1];
          __int16 v43 = 2050;
          double v44 = v12;
          __int16 v45 = 2050;
          float64_t v46 = v35.f64[0];
          __int16 v47 = 2050;
          double v48 = v13;
          __int16 v49 = 2050;
          double v50 = v16;
          __int16 v51 = 2050;
          double v52 = v17;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "IfcTelem,%{public}s,%{public}s,count,%{public}d,bytes,%{public}zu,minDelayMs,%{public}.1f,meanDelayMs,%{public}.1f,maxDelayMs,%{public}.1f,minAgeMs,%{public}.1f,meanAgeMs,%{public}.1f,maxAgeMs,%{public}.1f", (uint8_t *)&buf, 0x62u);
          char v20 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        }
        if (v20 < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        int v9 = (uint64x2_t *)v9->i64[0];
      }
      while (v9);
    }
    ++v3;
    uint64_t v1 = v32;
  }
  while (v3 != 3);
  for (uint64_t i = 0; i != 3; ++i)
  {
    float v26 = (void *)(v32 + 40 * i);
    if (v26[3])
    {
      float v27 = (void *)v26[2];
      if (v27)
      {
        do
        {
          float v28 = (void *)*v27;
          operator delete(v27);
          float v27 = v28;
        }
        while (v28);
      }
      v26[2] = 0;
      uint64_t v29 = v26[1];
      if (v29)
      {
        for (uint64_t j = 0; j != v29; ++j)
          *(void *)(*v26 + 8 * j) = 0;
      }
      v26[3] = 0;
    }
  }
  *(unsigned char *)(v32 + 200) = 0;
  BOOL v2 = v31;
LABEL_46:
  std::mutex::unlock(v2);
}

void sub_100008580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  std::mutex::unlock(v24);
  _Unwind_Resume(a1);
}

void sub_1000085B4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v8 = *(_DWORD *)(a2 + 20);
  unint64_t MachContinuousTimeNs = gpsd::util::getMachContinuousTimeNs((gpsd::util *)a1);
  std::mutex::lock((std::mutex *)(a1 + 120));
  int v25 = v8;
  handler[0] = &v25;
  float v10 = sub_100008B58((float *)a1, &v25, (uint64_t)&unk_1000E3210, handler);
  ++*((_DWORD *)v10 + 6);
  *((void *)v10 + 4) += a3;
  *(void *)(a1 + 184) = MachContinuousTimeNs;
  unint64_t v11 = MachContinuousTimeNs - a4;
  if (MachContinuousTimeNs < a4) {
    unint64_t v11 = 0;
  }
  unint64_t v12 = *((void *)v10 + 6);
  if (v11 > v12) {
    unint64_t v12 = v11;
  }
  *((void *)v10 + 5) += v11;
  *((void *)v10 + 6) = v12;
  if (v11 >= *((void *)v10 + 7)) {
    unint64_t v11 = *((void *)v10 + 7);
  }
  *((void *)v10 + 7) = v11;
  switch(v8)
  {
    case 8:
      uint64_t v13 = *(void *)(a2 + 24);
      if (!v13) {
        uint64_t v13 = *(void *)(proto::gpsd::Request::default_instance_ + 24);
      }
      goto LABEL_16;
    case 9:
      uint64_t v13 = *(void *)(a2 + 32);
      if (!v13) {
        uint64_t v13 = *(void *)(proto::gpsd::Request::default_instance_ + 32);
      }
LABEL_16:
      BOOL v19 = (uint64_t *)(v13 + 24);
      goto LABEL_37;
    case 10:
    case 11:
    case 12:
    case 13:
    case 20:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
      break;
    case 14:
      uint64_t v20 = *(void *)(a2 + 48);
      if (!v20) {
        uint64_t v20 = *(void *)(proto::gpsd::Request::default_instance_ + 48);
      }
      goto LABEL_21;
    case 15:
      uint64_t v20 = *(void *)(a2 + 56);
      if (!v20) {
        uint64_t v20 = *(void *)(proto::gpsd::Request::default_instance_ + 56);
      }
LABEL_21:
      uint64_t v21 = *(void *)(*(void *)(v20 + 8) + 8 * *(int *)(v20 + 16) - 8);
      goto LABEL_36;
    case 16:
      uint64_t v21 = *(void *)(a2 + 64);
      if (!v21) {
        uint64_t v21 = *(void *)(proto::gpsd::Request::default_instance_ + 64);
      }
      goto LABEL_36;
    case 17:
      uint64_t v21 = *(void *)(a2 + 72);
      if (!v21) {
        uint64_t v21 = *(void *)(proto::gpsd::Request::default_instance_ + 72);
      }
      goto LABEL_36;
    case 18:
      uint64_t v21 = *(void *)(a2 + 80);
      if (!v21) {
        uint64_t v21 = *(void *)(proto::gpsd::Request::default_instance_ + 80);
      }
      goto LABEL_36;
    case 19:
      uint64_t v21 = *(void *)(a2 + 88);
      if (!v21) {
        uint64_t v21 = *(void *)(proto::gpsd::Request::default_instance_ + 88);
      }
      goto LABEL_36;
    case 21:
      uint64_t v21 = *(void *)(a2 + 104);
      if (!v21) {
        uint64_t v21 = *(void *)(proto::gpsd::Request::default_instance_ + 104);
      }
      goto LABEL_36;
    case 22:
      uint64_t v21 = *(void *)(a2 + 112);
      if (!v21) {
        uint64_t v21 = *(void *)(proto::gpsd::Request::default_instance_ + 112);
      }
      goto LABEL_36;
    case 31:
      uint64_t v21 = *(void *)(a2 + 232);
      if (!v21) {
        uint64_t v21 = *(void *)(proto::gpsd::Request::default_instance_ + 232);
      }
LABEL_36:
      BOOL v19 = (uint64_t *)(v21 + 8);
LABEL_37:
      uint64_t v22 = *v19;
      if (v22)
      {
        uint64_t v23 = MachContinuousTimeNs - v22;
        uint64_t v24 = *((void *)v10 + 9);
        if (v23 > v24) {
          uint64_t v24 = v23;
        }
        *((void *)v10 + 8) += v23;
        *((void *)v10 + 9) = v24;
        if (v23 >= *((void *)v10 + 10)) {
          uint64_t v23 = *((void *)v10 + 10);
        }
        *((void *)v10 + 10) = v23;
      }
      break;
    default:
      if (v8 == 1 && !*(void *)(a1 + 192))
      {
        global_queue = dispatch_get_global_queue(0, 0);
        dispatch_source_t v15 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, global_queue);
        *(void *)(a1 + 192) = v15;
        if (v15)
        {
          double v16 = v15;
          dispatch_time_t v17 = dispatch_walltime(0, 30000000000);
          dispatch_source_set_timer(v16, v17, 0x6FC23AC00uLL, 0x1DCD6500uLL);
          char v18 = *(NSObject **)(a1 + 192);
          handler[0] = _NSConcreteStackBlock;
          handler[1] = (_DWORD *)3221225472;
          handler[2] = sub_1000081DC;
          handler[3] = &unk_100104D40;
          handler[4] = (_DWORD *)a1;
          dispatch_source_set_event_handler(v18, handler);
          dispatch_resume(*(dispatch_object_t *)(a1 + 192));
        }
      }
      break;
  }
  *(unsigned char *)(a1 + 200) = 1;
  std::mutex::unlock((std::mutex *)(a1 + 120));
}

void sub_100008910(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_100008984(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v6 = (std::mutex *)(a1 + 120);
  std::mutex::lock((std::mutex *)(a1 + 120));
  int v11 = a2;
  unint64_t v12 = &v11;
  size_t v7 = sub_100008B58((float *)(a1 + 40), &v11, (uint64_t)&unk_1000E3210, &v12);
  ++*((_DWORD *)v7 + 6);
  *((void *)v7 + 4) += a3;
  unint64_t MachContinuousTimeNs = gpsd::util::getMachContinuousTimeNs((gpsd::util *)v7);
  unint64_t v9 = MachContinuousTimeNs - *(void *)(a1 + 184);
  unint64_t v10 = *((void *)v7 + 6);
  if (v9 > v10) {
    unint64_t v10 = MachContinuousTimeNs - *(void *)(a1 + 184);
  }
  *((void *)v7 + 5) += v9;
  *((void *)v7 + 6) = v10;
  if (v9 >= *((void *)v7 + 7)) {
    unint64_t v9 = *((void *)v7 + 7);
  }
  *((void *)v7 + 7) = v9;
  *(unsigned char *)(a1 + 200) = 1;
  std::mutex::unlock(v6);
}

void sub_100008A4C(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_100008A64(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v6 = (std::mutex *)(a1 + 120);
  std::mutex::lock((std::mutex *)(a1 + 120));
  int v8 = a2;
  unint64_t v9 = &v8;
  size_t v7 = sub_100008B58((float *)(a1 + 80), &v8, (uint64_t)&unk_1000E3210, &v9);
  ++*((_DWORD *)v7 + 6);
  *((void *)v7 + 4) += a3;
  *(unsigned char *)(a1 + 200) = 1;
  std::mutex::unlock(v6);
}

void sub_100008AF8(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100008B0C(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      unint64_t v3 = (void *)*v2;
      operator delete(v2);
      BOOL v2 = v3;
    }
    while (v3);
  }
  float v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

char *sub_100008B58(float *a1, int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *((void *)a1 + 1);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    unint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      int v11 = (char *)*v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = *((void *)v11 + 1);
          if (v12 == v7)
          {
            if (*((_DWORD *)v11 + 4) == v7) {
              return v11;
            }
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4) {
              break;
            }
          }
          int v11 = *(char **)v11;
        }
        while (v11);
      }
    }
  }
  int v11 = (char *)operator new(0x58uLL);
  *(void *)int v11 = 0;
  *((void *)v11 + 1) = v7;
  *((_DWORD *)v11 + 4) = **a4;
  *(_OWORD *)(v11 + 40) = 0u;
  *(_OWORD *)(v11 + 24) = 0u;
  *((void *)v11 + 7) = -1;
  *((void *)v11 + 8) = 0;
  *((void *)v11 + 9) = 0;
  *((void *)v11 + 10) = 0x7FFFFFFFFFFFFFFFLL;
  float v13 = (float)(unint64_t)(*((void *)a1 + 3) + 1);
  float v14 = a1[8];
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      int8x8_t prime = (int8x8_t)v17;
    }
    else {
      int8x8_t prime = (int8x8_t)v16;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v8 = *((void *)a1 + 1);
    }
    if (*(void *)&prime > v8) {
      goto LABEL_30;
    }
    if (*(void *)&prime < v8)
    {
      unint64_t v25 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
      if (v8 < 3 || (uint8x8_t v26 = (uint8x8_t)vcnt_s8((int8x8_t)v8), v26.i16[0] = vaddlv_u8(v26), v26.u32[0] > 1uLL))
      {
        unint64_t v25 = std::__next_prime(v25);
      }
      else
      {
        uint64_t v27 = 1 << -(char)__clz(v25 - 1);
        if (v25 >= 2) {
          unint64_t v25 = v27;
        }
      }
      if (*(void *)&prime <= v25) {
        int8x8_t prime = (int8x8_t)v25;
      }
      if (*(void *)&prime >= v8)
      {
        unint64_t v8 = *((void *)a1 + 1);
      }
      else
      {
        if (prime)
        {
LABEL_30:
          if (*(void *)&prime >> 61) {
            sub_100007254();
          }
          BOOL v19 = operator new(8 * *(void *)&prime);
          uint64_t v20 = *(void **)a1;
          *(void *)a1 = v19;
          if (v20) {
            operator delete(v20);
          }
          uint64_t v21 = 0;
          *((int8x8_t *)a1 + 1) = prime;
          do
            *(void *)(*(void *)a1 + 8 * v21++) = 0;
          while (*(void *)&prime != v21);
          uint64_t v22 = (void *)*((void *)a1 + 2);
          if (v22)
          {
            unint64_t v23 = v22[1];
            uint8x8_t v24 = (uint8x8_t)vcnt_s8(prime);
            v24.i16[0] = vaddlv_u8(v24);
            if (v24.u32[0] > 1uLL)
            {
              if (v23 >= *(void *)&prime) {
                v23 %= *(void *)&prime;
              }
            }
            else
            {
              v23 &= *(void *)&prime - 1;
            }
            *(void *)(*(void *)a1 + 8 * v23) = a1 + 4;
            float v28 = (void *)*v22;
            if (*v22)
            {
              do
              {
                unint64_t v29 = v28[1];
                if (v24.u32[0] > 1uLL)
                {
                  if (v29 >= *(void *)&prime) {
                    v29 %= *(void *)&prime;
                  }
                }
                else
                {
                  v29 &= *(void *)&prime - 1;
                }
                if (v29 != v23)
                {
                  if (!*(void *)(*(void *)a1 + 8 * v29))
                  {
                    *(void *)(*(void *)a1 + 8 * v29) = v22;
                    goto LABEL_55;
                  }
                  *uint64_t v22 = *v28;
                  *float v28 = **(void **)(*(void *)a1 + 8 * v29);
                  **(void **)(*(void *)a1 + 8 * v29) = v28;
                  float v28 = v22;
                }
                unint64_t v29 = v23;
LABEL_55:
                uint64_t v22 = v28;
                float v28 = (void *)*v28;
                unint64_t v23 = v29;
              }
              while (v28);
            }
          }
          unint64_t v8 = (unint64_t)prime;
          goto LABEL_59;
        }
        float64x2_t v34 = *(void **)a1;
        *(void *)a1 = 0;
        if (v34) {
          operator delete(v34);
        }
        unint64_t v8 = 0;
        *((void *)a1 + 1) = 0;
      }
    }
LABEL_59:
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  float v30 = *(void **)a1;
  float v31 = *(void **)(*(void *)a1 + 8 * v4);
  if (v31)
  {
    *(void *)int v11 = *v31;
LABEL_72:
    *float v31 = v11;
    goto LABEL_73;
  }
  *(void *)int v11 = *((void *)a1 + 2);
  *((void *)a1 + 2) = v11;
  v30[v4] = a1 + 4;
  if (*(void *)v11)
  {
    unint64_t v32 = *(void *)(*(void *)v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v32 >= v8) {
        v32 %= v8;
      }
    }
    else
    {
      v32 &= v8 - 1;
    }
    float v31 = (void *)(*(void *)a1 + 8 * v32);
    goto LABEL_72;
  }
LABEL_73:
  ++*((void *)a1 + 3);
  return v11;
}

void sub_100008F5C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100008F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 15) = 0;
  *(_DWORD *)(a1 + 20) = 5;
  VendorLogger::VendorLogger((VendorLogger *)(a1 + 24));
  uint64_t v9 = 0;
  *(unsigned char *)(a1 + 1088) = 0;
  *(unsigned char *)(a1 + 1104) = 0;
  *(_OWORD *)(a1 + 928) = 0u;
  *(_OWORD *)(a1 + 944) = 0u;
  *(unsigned char *)(a1 + 960) = 0;
  *(void *)(a1 + 1000) = 0;
  *(_OWORD *)(a1 + 968) = 0u;
  *(_OWORD *)(a1 + 984) = 0u;
  __asm { FMOV            V1.2D, #-1.0 }
  *(_OWORD *)(a1 + 1008) = _Q1;
  *(_WORD *)(a1 + 1024) = 0;
  *(void *)(a1 + 1028) = 0;
  *(_DWORD *)(a1 + 1035) = 0;
  *(_OWORD *)(a1 + 1040) = 0u;
  *(_OWORD *)(a1 + 1056) = 0u;
  *(void *)(a1 + 1072) = 0;
  *(_DWORD *)(a1 + 1200) = -1082130432;
  *(void *)(a1 + 1216) = -1;
  *(void *)(a1 + 1080) = 0xBFF0000000000000;
  *(void *)(a1 + 1192) = 0;
  *(_OWORD *)(a1 + 1176) = 0u;
  *(_OWORD *)(a1 + 1160) = 0u;
  *(_OWORD *)(a1 + 1144) = 0u;
  *(_OWORD *)(a1 + 1128) = 0u;
  *(_OWORD *)(a1 + 1112) = 0u;
  *(unsigned char *)(a1 + 1204) = 0;
  *(_DWORD *)(a1 + 1208) = 0;
  *(_OWORD *)(a1 + 1224) = 0u;
  *(_OWORD *)(a1 + 1240) = 0u;
  *(_OWORD *)(a1 + 1256) = 0u;
  *(void *)(a1 + 1272) = 0xBFF0000000000000;
  *(_OWORD *)(a1 + 1280) = _Q1;
  *(void *)(a1 + 1296) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 1320) = 0;
  *(void *)(a1 + 1304) = 0;
  *(void *)(a1 + 1312) = 0;
  *(_OWORD *)(a1 + 1328) = _Q1;
  *(_OWORD *)(a1 + 1344) = xmmword_1000E3220;
  *(_OWORD *)(a1 + 1360) = _Q1;
  *(void *)(a1 + 1376) = 0;
  *(_DWORD *)(a1 + 1384) = 0;
  *(_DWORD *)(a1 + 1472) = 0;
  *(_OWORD *)(a1 + 1456) = 0u;
  *(_OWORD *)(a1 + 1440) = 0u;
  *(_OWORD *)(a1 + 1424) = 0u;
  *(_OWORD *)(a1 + 1408) = 0u;
  *(_OWORD *)(a1 + 1392) = 0u;
  do
  {
    uint64_t v15 = a1 + v9;
    *(_DWORD *)(v15 + 1552) = 0;
    *(void *)(v15 + 1560) = 0;
    v9 += 16;
  }
  while (v9 != 112);
  *(_DWORD *)(a1 + 1544) = 0;
  *(_OWORD *)(a1 + 1512) = 0u;
  *(_OWORD *)(a1 + 1528) = 0u;
  *(_OWORD *)(a1 + 1480) = 0u;
  *(_OWORD *)(a1 + 1496) = 0u;
  for (uint64_t i = 1552; i != 1664; i += 16)
  {
    uint64_t v17 = a1 + i;
    *(_DWORD *)uint64_t v17 = 0;
    *(void *)(v17 + 8) = 0;
  }
  *(void *)(a1 + 1728) = 0;
  *(_OWORD *)(a1 + 1712) = 0u;
  *(_OWORD *)(a1 + 1696) = 0u;
  *(_OWORD *)(a1 + 1680) = 0u;
  *(_OWORD *)(a1 + 1664) = 0u;
  *(double *)(a1 + 1112) = (double)gpsd::util::getMachContinuousTimeNs(v8) * 0.000000001;
  *(_OWORD *)(a1 + 1392) = 0u;
  *(_OWORD *)(a1 + 1408) = 0u;
  *(_OWORD *)(a1 + 1424) = 0u;
  *(_OWORD *)(a1 + 1440) = 0u;
  *(_OWORD *)(a1 + 1456) = 0u;
  *(_DWORD *)(a1 + 1472) = 0;
  *(_OWORD *)(a1 + 1480) = 0u;
  *(_OWORD *)(a1 + 1496) = 0u;
  *(_OWORD *)(a1 + 1512) = 0u;
  *(_OWORD *)(a1 + 1528) = 0u;
  *(_DWORD *)(a1 + 1544) = 0;
  *(_OWORD *)(a1 + 1120) = 0u;
  *(_OWORD *)(a1 + 1136) = 0u;
  *(_OWORD *)(a1 + 1152) = 0u;
  *(_OWORD *)(a1 + 1168) = 0u;
  *(void *)(a1 + 1184) = 0;
  for (uint64_t j = 1552; j != 1664; j += 16)
  {
    uint64_t v19 = a1 + j;
    *(_DWORD *)uint64_t v19 = 0;
    *(void *)(v19 + 8) = 0;
  }
  *(void *)(a1 + 1728) = 0;
  *(_OWORD *)(a1 + 1696) = 0u;
  *(_OWORD *)(a1 + 1712) = 0u;
  *(_OWORD *)(a1 + 1664) = 0u;
  *(_OWORD *)(a1 + 1680) = 0u;
  *(void *)(a1 + 1736) = 0xBFF0000000000000;
  *(void *)(a1 + 1744) = 0xBFF0000000000000;
  *(void *)(a1 + 1752) = 0;
  *(void *)(a1 + 1760) = 850045863;
  *(unsigned char *)(a1 + 1848) = 0;
  *(_OWORD *)(a1 + 1768) = 0u;
  *(_OWORD *)(a1 + 1784) = 0u;
  *(_OWORD *)(a1 + 1800) = 0u;
  *(_OWORD *)(a1 + 1816) = 0u;
  *(_OWORD *)(a1 + 1832) = 0u;
  *(_OWORD *)(a1 + 1856) = 0u;
  *(_OWORD *)(a1 + 1872) = 0u;
  *(_OWORD *)(a1 + 1882) = 0u;
  *(_DWORD *)(a1 + 1900) = 7;
  *(void *)(a1 + 1904) = 0;
  *(_WORD *)(a1 + 1912) = 0;
  *(_OWORD *)(a1 + 1920) = 0u;
  *(void *)(a1 + 1936) = a4;
  *(void *)(a1 + 1944) = 0;
  *(unsigned char *)(a1 + 1952) = 0;
  *(void *)(a1 + 1968) = 0;
  *(void *)(a1 + 1976) = 0x7FEFFFFFFFFFFFFFLL;
  *(_OWORD *)(a1 + 1984) = 0u;
  *(unsigned char *)(a1 + 2000) = 0;
  *(_OWORD *)(a1 + 2008) = 0u;
  *(_DWORD *)(a1 + 2024) = -1082130432;
  *(void *)(a1 + 2028) = 0;
  *(_DWORD *)(a1 + 2036) = 0;
  *(void *)(a1 + 2040) = -1;
  *(_OWORD *)(a1 + 2048) = 0u;
  *(_OWORD *)(a1 + 2064) = 0u;
  *(_OWORD *)(a1 + 2073) = 0u;
  *(_DWORD *)(a1 + 2096) = 0;
  *(unsigned char *)(a1 + 2100) = 0;
  sub_1000033AC((void *)(a1 + 2104), "");
  *(void *)(a1 + 2144) = 0;
  *(_OWORD *)(a1 + 2128) = 0u;
  *(void *)(a1 + 2152) = 850045863;
  *(_OWORD *)(a1 + 2240) = 0u;
  *(_OWORD *)(a1 + 2256) = 0u;
  *(unsigned char *)(a1 + 2272) = 0;
  *(_OWORD *)(a1 + 2160) = 0u;
  *(_OWORD *)(a1 + 2176) = 0u;
  *(_OWORD *)(a1 + 2192) = 0u;
  *(_OWORD *)(a1 + 2208) = 0u;
  *(_OWORD *)(a1 + 2217) = 0u;
  sub_100018D98(a1 + 2280, a2);
  sub_100018E30(a1 + 2312, a3);
  *(void *)(a1 + 2368) = 0;
  *(void *)(a1 + 2400) = 0;
  if (*(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) == 107)
  {
    gpsd::util::dispatchQueueInit((dispatch_queue_t *)(a1 + 1960), QOS_CLASS_USER_INTERACTIVE, "deviceq_watchdog");
    operator new();
  }
  sub_100009744((gpsd::util *)a1);
  if (!*(void *)(a1 + 2336))
  {
    unint64_t v23 = "fClientManagerIndicationCallback";
    int v24 = 55;
    goto LABEL_16;
  }
  if (!*(void *)(a1 + 2304))
  {
    unint64_t v23 = "fClientManagerResponseCallback";
    int v24 = 56;
LABEL_16:
    __assert_rtn("GpsdGnssDeviceManager", "GpsdGnssDeviceManager.mm", v24, v23);
  }
  *(void *)(a1 + 1872) = gpsd::util::getMachContinuousTimeNs(v20);
  uint64_t v21 = (id *)GpsdPreferences::instance(0);
  if (GpsdPreferences::vendorLogQA(v21)) {
    operator new();
  }
  GpsdPlatformInfo::instance(0);
  return a1;
}

void sub_1000095B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28)
{
  sub_100018B04((void *)(v28 + 2376));
  sub_1000190A0((void *)(v28 + 2344));
  sub_10001901C(v35);
  sub_100018F98(v34);
  std::mutex::~mutex(v33);
  int v37 = *(void **)(v28 + 2128);
  if (v37)
  {
    *(void *)(v28 + 2136) = v37;
    operator delete(v37);
  }
  if (*(char *)(v28 + 2127) < 0) {
    operator delete(*v32);
  }
  uint64_t v38 = *(void *)(v28 + 1968);
  *(void *)(v28 + 1968) = 0;
  if (v38) {
    (*(void (**)(uint64_t))(*(void *)v38 + 8))(v38);
  }
  sub_100018F2C((uint64_t *)(v28 + 1840), 0);
  sub_100018EC8(v31, 0);
  std::mutex::~mutex(v30);
  VendorLogger::~VendorLogger(v29);
  uint64_t v39 = *(void *)(v28 + 8);
  *(void *)(v28 + 8) = 0;
  if (v39) {
    (*(void (**)(uint64_t))(*(void *)v39 + 16))(v39);
  }
  _Unwind_Resume(a1);
}

void sub_100009744(gpsd::util *a1)
{
  uint64_t v1 = a1;
  if (!*((void *)a1 + 243))
  {
    BOOL v2 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)unint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#gdm,takeOsTransaction", v4, 2u);
    }
    a1 = (gpsd::util *)os_transaction_create();
    *((void *)v1 + 243) = a1;
  }
  if (*((void *)v1 + 246))
  {
    *((double *)v1 + 247) = (double)gpsd::util::getMachContinuousTimeNs(a1) * 0.000000001;
    (*(void (**)(void, uint64_t, uint64_t))(**((void **)v1 + 246) + 24))(*((void *)v1 + 246), 60000, 1);
    unint64_t v3 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#dqwdt,start", buf, 2u);
    }
  }
}

uint64_t sub_100009858(uint64_t a1)
{
  sub_100009954((uint64_t *)a1);
  sub_100018B04((void *)(a1 + 2376));
  sub_1000190A0((void *)(a1 + 2344));
  sub_10001901C((void *)(a1 + 2312));
  sub_100018F98((void *)(a1 + 2280));
  std::mutex::~mutex((std::mutex *)(a1 + 2152));
  BOOL v2 = *(void **)(a1 + 2128);
  if (v2)
  {
    *(void *)(a1 + 2136) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 2127) < 0) {
    operator delete(*(void **)(a1 + 2104));
  }
  uint64_t v3 = *(void *)(a1 + 1968);
  *(void *)(a1 + 1968) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  sub_100018F2C((uint64_t *)(a1 + 1840), 0);
  sub_100018EC8((uint64_t *)(a1 + 1824), 0);
  std::mutex::~mutex((std::mutex *)(a1 + 1760));
  VendorLogger::~VendorLogger((VendorLogger *)(a1 + 24));
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 16))(v4);
  }
  return a1;
}

void sub_100009954(uint64_t *a1)
{
  *((unsigned char *)a1 + 18) = 1;
  BOOL v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = a1[1];
    int v4 = *((unsigned __int8 *)a1 + 17);
    gnss::stringify(*((_DWORD *)a1 + 5), &v27);
    float v5 = v28 >= 0 ? (void **)&v27 : v27;
    int v6 = *((unsigned __int8 *)a1 + 1848);
    int v7 = *((unsigned __int8 *)a1 + 1896);
    uint64_t v8 = *a1;
    int buf = 134219266;
    *(void *)buf_4 = v3;
    *(_WORD *)&buf_4[8] = 1026;
    int v18 = v4;
    __int16 v19 = 2082;
    uint64_t v20 = v5;
    __int16 v21 = 1026;
    int v22 = v6;
    __int16 v23 = 1026;
    int v24 = v7;
    __int16 v25 = 2048;
    uint64_t v26 = v8;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#gdm,destroyDevice,fDevice,%p,fDeviceCtrAttempted,%{public}d,fDeviceCtrStatus,%{public}s,regSession,%{public}d,emergSession,%{public}d,dylibHandle,%p", (uint8_t *)&buf, 0x32u);
    if (v28 < 0) {
      operator delete(v27);
    }
  }
  int v9 = *((unsigned __int8 *)a1 + 1848);
  if (*((unsigned char *)a1 + 1848) || *((unsigned char *)a1 + 1896) || *((unsigned char *)a1 + 1897))
  {
    unint64_t v10 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = *((unsigned __int8 *)a1 + 1896);
      int buf = 67240448;
      *(_DWORD *)buf_4 = v9;
      *(_WORD *)&buf_4[4] = 1026;
      *(_DWORD *)&buf_4[6] = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#gdm,destroyDevice,In session,regSession,%{public}d,emergSession,%{public}d", (uint8_t *)&buf, 0xEu);
    }
    unint64_t v12 = qword_100114840;
    BOOL v13 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT);
    if (v13)
    {
      LOWORD(buf) = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#gdm,stopBlocking,initiated", (uint8_t *)&buf, 2u);
    }
    if (a1[1])
    {
      if (*((unsigned char *)a1 + 1848))
      {
        *((unsigned char *)a1 + 1848) = 0;
        *((double *)a1 + 232) = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)v13) * 0.000000001;
        if (*(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) != 107) {
          operator new();
        }
        float v14 = qword_100114840;
        BOOL v13 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT);
        if (v13)
        {
          LOWORD(buf) = 0;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "#gdm,stopBlocking,fallthrough", (uint8_t *)&buf, 2u);
        }
      }
      if (*((unsigned char *)a1 + 1896))
      {
        *((unsigned char *)a1 + 1896) = 0;
        *((double *)a1 + 232) = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)v13) * 0.000000001;
        operator new();
      }
    }
  }
  *((_DWORD *)a1 + 5) = 2;
  sub_100020154(a1 + 293);
  a1[229] = 0;
  uint64_t v15 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf) = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#gdm,destroyDevice,Immediate exit", (uint8_t *)&buf, 2u);
  }
}

void sub_100009F64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_ullong *a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  if (a14)
  {
    if (!atomic_fetch_add(a14 + 1, 0xFFFFFFFFFFFFFFFFLL)) {
      (*(void (**)(atomic_ullong *))(*a14 + 16))(a14);
    }
  }
  sub_1000195E4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_10000A04C(uint64_t a1)
{
  BOOL v2 = qword_100114838;
  if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v3[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#gdm,handleTerminationSignal", (uint8_t *)v3, 2u);
  }
  sub_1000033AC(v3, "handleTerminationSignal");
  sub_10000A0EC(a1, v3, 1);
  sub_10000F074(v3);
}

void sub_10000A0D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10000A0EC(uint64_t a1, uint64_t *a2, int a3)
{
  int v6 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    if (*((char *)a2 + 23) >= 0) {
      int v7 = a2;
    }
    else {
      int v7 = (uint64_t *)*a2;
    }
    int v9 = 136446466;
    unint64_t v10 = v7;
    __int16 v11 = 1026;
    int v12 = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#gdm,Preparing for termination,reason,%{public}s,stopDevice,%{public}d", (uint8_t *)&v9, 0x12u);
  }
  uint64_t v8 = *(void *)(a1 + 1832);
  if (v8)
  {
    (*(void (**)(uint64_t))(*(void *)v8 + 48))(v8);
    (*(void (**)(void))(**(void **)(a1 + 1832) + 56))(*(void *)(a1 + 1832));
  }
  if (a3 && *(unsigned char *)(a1 + 17)) {
    sub_100009954((uint64_t *)a1);
  }
  VendorLogger::prepareForTermination((VendorLogger *)(a1 + 24));
}

void sub_10000A228()
{
  v0 = &off_10010DB88;
  long long v1 = 0u;
  long long v2 = 0u;
  long long v3 = 0u;
  long long v4 = 0u;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  LODWORD(v1) = 2;
  int v14 = 65;
  operator new();
}

void sub_10000A3AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10000A3C0(uint64_t a1)
{
  long long v2 = qword_100114838;
  if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v3[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#gdm,handleClientCrash", (uint8_t *)v3, 2u);
  }
  sub_1000033AC(v3, "client crash");
  sub_10000A0EC(a1, v3, 1);
  sub_10000F074(v3);
}

void sub_10000A444(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10000A460()
{
}

void sub_10000A4EC(std::__assoc_sub_state **a1)
{
  long long v1 = *a1;
  *a1 = 0;
  __lk.__m_ = &v1->__mut_;
  __lk.__owns_ = 1;
  std::mutex::lock(&v1->__mut_);
  std::__assoc_sub_state::__sub_wait(v1, &__lk);
  ptr = v1->__exception_.__ptr_;
  v4.__ptr_ = 0;
  std::exception_ptr::~exception_ptr(&v4);
  if (ptr)
  {
    std::exception_ptr::exception_ptr(&v4, &v1->__exception_);
    v3.__ptr_ = &v4;
    std::rethrow_exception(v3);
    __break(1u);
  }
  else
  {
    if (__lk.__owns_) {
      std::mutex::unlock(__lk.__m_);
    }
    if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
      ((void (*)(std::__assoc_sub_state *))v1->__on_zero_shared)(v1);
    }
  }
}

void sub_10000A5C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, std::mutex *a11, char a12)
{
  std::exception_ptr::~exception_ptr(&a10);
  if (a12) {
    std::mutex::unlock(a11);
  }
  if (v12)
  {
    if (!atomic_fetch_add(v12 + 1, 0xFFFFFFFFFFFFFFFFLL)) {
      (*(void (**)(atomic_ullong *))(*v12 + 16))(v12);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10000A630(uint64_t a1, uint64_t a2)
{
  std::exception_ptr v4 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    gpsd::util::stringify(*(_DWORD *)(a2 + 8), (uint64_t)__p);
    long long v7 = v9 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)int buf = 136315138;
    long long v11 = v7;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "#gdm,sendIndication,%s", buf, 0xCu);
    if (v9 < 0) {
      operator delete(__p[0]);
    }
  }
  sub_100005140(a1 + 928, a2);
  uint64_t v5 = *(void *)(a1 + 2336);
  if (!v5) {
    sub_100003600();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v5 + 48))(v5, a2);
}

void sub_10000A758()
{
}

void sub_10000DB94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,atomic_ullong *a46,uint64_t a47,void *a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  uint64_t v60 = a58;
  if (a58 && !atomic_fetch_add((atomic_ullong *volatile)(a58 + 8), 0xFFFFFFFFFFFFFFFFLL)) {
    (*(void (**)(uint64_t))(*(void *)v60 + 16))(v60);
  }
  sub_1000195E4(&a59);
  if (a46)
  {
    if (!atomic_fetch_add(a46 + 1, 0xFFFFFFFFFFFFFFFFLL)) {
      (*(void (**)(atomic_ullong *))(*a46 + 16))(a46);
    }
  }
  sub_1000195E4(&a47);
  _Unwind_Resume(a1);
}

void sub_10000E6CC(uint64_t a1, int *a2)
{
  sub_10000ED90(&__p, (uint64_t)a2);
  if (*(unsigned char *)(a1 + 1912))
  {
    std::exception_ptr v4 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = *a2;
      p_p = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)int buf = 67240450;
      *(_DWORD *)&uint8_t buf[4] = v5;
      LOWORD(v21) = 2082;
      *(void *)((char *)&v21 + 2) = p_p;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#hwReset,ignoring since unresponsive already registered,%{public}d,%{public}s", buf, 0x12u);
    }
  }
  else
  {
    if (!*(unsigned char *)(a1 + 1896))
    {
      *(unsigned char *)(a1 + 1912) = 1;
      if ((*a2 - 3) <= 1)
      {
        long long v10 = (id *)GpsdPreferences::instance(0);
        if (GpsdPreferences::enableBasebandReset(v10))
        {
          long long v11 = qword_100114840;
          if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
          {
            int v12 = *a2;
            long long v13 = &__p;
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              long long v13 = (std::string *)__p.__r_.__value_.__r.__words[0];
            }
            *(_DWORD *)int buf = 67240450;
            *(_DWORD *)&uint8_t buf[4] = v12;
            LOWORD(v21) = 2082;
            *(void *)((char *)&v21 + 2) = v13;
            _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "#hwReset,triggered,reason,%{public}d,%{public}s", buf, 0x12u);
          }
          if (*a2 != 3)
          {
            unsigned int v14 = -4;
            do
            {
              uint64_t v15 = qword_100114840;
              if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)int buf = 67240192;
                *(_DWORD *)&uint8_t buf[4] = v14 + 4;
                _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#bbReset,waitingBeforeAsk,%{public}d", buf, 8u);
              }
              sleep(4u);
              v14 += 4;
            }
            while (v14 < 0x11);
          }
          *(void *)int buf = &off_10010DB88;
          long long v21 = 0u;
          long long v22 = 0u;
          long long v23 = 0u;
          long long v24 = 0u;
          long long v25 = 0u;
          long long v26 = 0u;
          long long v27 = 0u;
          long long v28 = 0u;
          long long v29 = 0u;
          long long v30 = 0u;
          long long v31 = 0u;
          long long v32 = 0u;
          long long v33 = 0u;
          int v34 = 1;
          LODWORD(v21) = 25;
          sub_10000A630(a1, (uint64_t)buf);
          sub_10000EB7C();
        }
      }
      unint64_t v16 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
      {
        int v17 = *a2;
        int v18 = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          int v18 = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)int buf = 67240450;
        *(_DWORD *)&uint8_t buf[4] = v17;
        LOWORD(v21) = 2082;
        *(void *)((char *)&v21 + 2) = v18;
        _os_log_fault_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_FAULT, "#hwReset,triggered,reason,%{public}d,%{public}s", buf, 0x12u);
      }
      sub_10000F004();
    }
    long long v7 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
    {
      int v8 = *a2;
      char v9 = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        char v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)int buf = 67240450;
      *(_DWORD *)&uint8_t buf[4] = v8;
      LOWORD(v21) = 2082;
      *(void *)((char *)&v21 + 2) = v9;
      _os_log_fault_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "#hwReset,ignoring during emergency session,%{public}d,%{public}s", buf, 0x12u);
    }
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_10000EAF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, char a20)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10000EB38(uint64_t a1)
{
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_10000EB7C()
{
  v0 = &off_10010DB88;
  long long v1 = 0u;
  long long v2 = 0u;
  long long v3 = 0u;
  long long v4 = 0u;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  LODWORD(v1) = 23;
  int v14 = 32769;
  operator new();
}

void sub_10000ED38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  proto::gpsd::Indication::~Indication((proto::gpsd::Indication *)&a25);
  _Unwind_Resume(a1);
}

void sub_10000ED90(std::string *a1, uint64_t a2)
{
  sub_1000033AC(a1, "ExceptionUnknown");
  unsigned int v4 = *(_DWORD *)a2 - 1;
  if (v4 < 8) {
    std::string::assign(a1, off_1001071A8[v4]);
  }
  int v5 = *(_DWORD *)(a2 + 4);
  if (v5 != -1)
  {
    std::to_string(&v14, v5);
    long long v6 = std::string::insert(&v14, 0, "_");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    int64_t v16 = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    if (v16 >= 0) {
      long long v8 = __p;
    }
    else {
      long long v8 = (void **)__p[0];
    }
    if (v16 >= 0) {
      std::string::size_type v9 = HIBYTE(v16);
    }
    else {
      std::string::size_type v9 = (std::string::size_type)__p[1];
    }
    std::string::append(a1, (const std::string::value_type *)v8, v9);
    if (SHIBYTE(v16) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v14.__r_.__value_.__l.__data_);
    }
  }
  if (*(char *)(a2 + 31) < 0)
  {
    if (!*(void *)(a2 + 16)) {
      goto LABEL_26;
    }
  }
  else if (!*(unsigned char *)(a2 + 31))
  {
    goto LABEL_26;
  }
  std::operator+<char>();
  if (v16 >= 0) {
    long long v10 = __p;
  }
  else {
    long long v10 = (void **)__p[0];
  }
  if (v16 >= 0) {
    std::string::size_type v11 = HIBYTE(v16);
  }
  else {
    std::string::size_type v11 = (std::string::size_type)__p[1];
  }
  std::string::append(a1, (const std::string::value_type *)v10, v11);
  if (SHIBYTE(v16) < 0) {
    operator delete(__p[0]);
  }
LABEL_26:
  if (*(char *)(a2 + 55) < 0)
  {
    if (!*(void *)(a2 + 40)) {
      return;
    }
  }
  else if (!*(unsigned char *)(a2 + 55))
  {
    return;
  }
  std::operator+<char>();
  if (v16 >= 0) {
    long long v12 = __p;
  }
  else {
    long long v12 = (void **)__p[0];
  }
  if (v16 >= 0) {
    std::string::size_type v13 = HIBYTE(v16);
  }
  else {
    std::string::size_type v13 = (std::string::size_type)__p[1];
  }
  std::string::append(a1, (const std::string::value_type *)v12, v13);
  if (SHIBYTE(v16) < 0) {
    operator delete(__p[0]);
  }
}

void sub_10000EF40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (*(char *)(v21 + 23) < 0) {
    operator delete(*(void **)v21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10000EFB0(uint64_t a1)
{
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_10000F004()
{
}

void sub_10000F058(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10000F074(uint64_t *a1)
{
  long long v2 = qword_100114838;
  if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
  {
    if (*((char *)a1 + 23) >= 0) {
      long long v3 = a1;
    }
    else {
      long long v3 = (uint64_t *)*a1;
    }
    int v4 = 136446210;
    int v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#gdm,Exiting,reason,%{public}s", (uint8_t *)&v4, 0xCu);
  }
  _Exit(-1);
}

void sub_10000F100(uint64_t a1, uint64_t *a2, uint64_t *a3, void **a4, uint64_t *a5, uint64_t **a6, uint64_t *a7)
{
  unint64_t MachContinuousTimeNs = gpsd::util::getMachContinuousTimeNs((gpsd::util *)a1);
  float v114 = &off_10010DB88;
  long long v115 = 0u;
  long long v116 = 0u;
  long long v117 = 0u;
  long long v118 = 0u;
  long long v119 = 0u;
  long long v120 = 0u;
  long long v121 = 0u;
  long long v122 = 0u;
  long long v123 = 0u;
  long long v124 = 0u;
  long long v125 = 0u;
  long long v126 = 0u;
  long long v127 = 0u;
  unsigned int v128 = 1;
  LODWORD(v115) = 1;
  sub_100005834(a1 + 928, *a2, *a3);
  sub_10000FEE8(a1);
  double v12 = (double)MachContinuousTimeNs * 0.000000001;
  std::string::size_type v13 = &selRef_UTF8String;
  if (!*a2) {
    goto LABEL_47;
  }
  long long v113 = 0uLL;
  uint64_t v14 = GpsdPlatformInfo::instance(0);
  unsigned int v15 = *(_DWORD *)(v14 + 8) - 103;
  if (v15 <= 4 && ((1 << v15) & 0x19) != 0 || (uint64_t v14 = sub_100006558(*a2), v14))
  {
    int64_t v16 = (unint64_t *)*a2;
    float v17 = *(float *)(*a2 + 8);
    if (v17 == -1.0 || v17 > 2000000000.0)
    {
      uint64_t v21 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)int buf = 0;
        _os_log_debug_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "#imag,fix time too uncertain to crosscheck", buf, 2u);
      }
      goto LABEL_35;
    }
    unint64_t v18 = *v16;
    if (*v16 > 0x2260FF928FFFFLL)
    {
      double v28 = *(double *)&qword_100114170;
      if (*(double *)&qword_100114170 < 0.0)
      {
        int GpsWeekFromBuildDate = gpsd::util::getGpsWeekFromBuildDate((gpsd::util *)v14);
        double v28 = (double)GpsWeekFromBuildDate * 604800.0;
        *(double *)&qword_100114170 = v28;
        long long v30 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)int buf = 67109120;
          *(_DWORD *)&uint8_t buf[4] = GpsWeekFromBuildDate;
          _os_log_debug_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEBUG, "#imag,set build week,%d", buf, 8u);
          double v28 = *(double *)&qword_100114170;
        }
      }
      double v31 = (double)v18 * 0.000000001;
      if (v31 - v28 < 0.0)
      {
        unint64_t v32 = v16[23];
        long long v33 = qword_100114838;
        if ((v32 & 1) == 0 && os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)int buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "#imag,build time,device missed detection", buf, 2u);
          unint64_t v32 = v16[23];
          long long v33 = qword_100114838;
        }
        v16[23] = v32 | 1;
        if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)int buf = 134349312;
          *(double *)&uint8_t buf[4] = v31;
          *(_WORD *)&buf[12] = 2050;
          *(void *)&buf[14] = qword_100114170;
          _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "#imag,build time,detection,fix,%{public}.1f,build,%{public}.1f", buf, 0x16u);
        }
      }
      unint64_t v34 = *(void *)(a1 + 1888);
      if (!v34) {
        goto LABEL_35;
      }
      double v35 = (double)v34;
      double v36 = v31 - (double)v34;
      if (v36 >= -2.0 && v36 <= 1209600.0) {
        goto LABEL_35;
      }
      unint64_t v37 = v16[23];
      __int16 v19 = qword_100114838;
      if ((v37 & 2) == 0 && os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)int buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "#imag,EE time,device missed detection", buf, 2u);
        unint64_t v37 = v16[23];
        __int16 v19 = qword_100114838;
      }
      v16[23] = v37 | 2;
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_35;
      }
      *(_DWORD *)int buf = 134349312;
      *(double *)&uint8_t buf[4] = v31;
      *(_WORD *)&buf[12] = 2050;
      *(double *)&buf[14] = v35;
      uint64_t v20 = "#imag,EE time,detection,fix,%{public}.1f,ee,%{public}.1f";
    }
    else
    {
      __int16 v19 = qword_100114838;
      if (!os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
      {
LABEL_35:
        if (ReceiverClockConversion::isRxClockValid((ReceiverClockConversion *)(a1 + 2240), *(void *)(*a2 + 24)))
        {
          *(void *)&long long v113 = ReceiverClockConversion::feedPvtmCallback((ReceiverClockConversion *)(a1 + 2240), *(void *)(*a2 + 24), v12);
          *((void *)&v113 + 1) = v38;
        }
        else
        {
          *(double *)&long long v113 = v12;
          *((void *)&v113 + 1) = 0x3FF0000000000000;
        }
        uint64_t v39 = *a2;
        v128 |= 8u;
        if (!(void)v116) {
          operator new();
        }
        gnss::Convert::toProtobuf(v39, &v113, v116);
        goto LABEL_41;
      }
      *(_DWORD *)int buf = 134218240;
      *(double *)&uint8_t buf[4] = (double)v18 * 0.000000001;
      *(_WORD *)&buf[12] = 2048;
      *(double *)&buf[14] = v17 * 0.000000001;
      uint64_t v20 = "#imag,fix is in week 0 with low uncertainty,%f,%f";
    }
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, v20, buf, 0x16u);
    goto LABEL_35;
  }
  long long v22 = qword_100114838;
  if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v23 = sub_1000070B0((double *)(*a2 + 48));
    BOOL v24 = sub_10000717C(*a2 + 136);
    uint64_t v25 = *a2;
    float v26 = *(float *)(*a2 + 8);
    if (v26 >= 1.0e11)
    {
      if (v26 <= 0.0)
      {
        BOOL v27 = 0;
        goto LABEL_108;
      }
    }
    else
    {
      BOOL v27 = 0;
      if (v26 <= 0.0 || !*(void *)v25) {
        goto LABEL_108;
      }
    }
    BOOL v27 = *(void *)(v25 + 24) != -1;
LABEL_108:
    double v107 = *(double *)(v25 + 168);
    if (v107 == -1.0)
    {
      BOOL v108 = 1;
    }
    else
    {
      BOOL v108 = 0;
      if (v107 >= 0.0 && v107 < 360.0) {
        BOOL v108 = *(double *)(v25 + 176) > 0.0;
      }
    }
    *(_DWORD *)int buf = 67240960;
    *(_DWORD *)&uint8_t buf[4] = v23;
    *(_WORD *)&uint8_t buf[8] = 1026;
    *(_DWORD *)&buf[10] = v24;
    *(_WORD *)&buf[14] = 1026;
    *(_DWORD *)&uint8_t buf[16] = v27;
    *(_WORD *)&buf[20] = 1026;
    *(_DWORD *)&unsigned char buf[22] = v108;
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "#gdm,pvtmCallback,dropping fix as it failed sanity check,%{public}d,%{public}d,%{public}d,%{public}d", buf, 0x1Au);
  }
LABEL_41:
  *(unsigned char *)(a1 + 1913) = 1;
  uint64_t v40 = *a2;
  std::string::size_type v13 = &selRef_UTF8String;
  __int16 v41 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v42 = *(void *)v40;
    double v43 = *(float *)(v40 + 8);
    uint64_t v44 = *(void *)(v40 + 24);
    uint64_t v45 = *(void *)(v40 + 32);
    uint64_t v46 = *(void *)(v40 + 184);
    *(_DWORD *)int buf = 134350848;
    *(void *)&uint8_t buf[4] = v42;
    *(_WORD *)&buf[12] = 2050;
    *(double *)&buf[14] = v43;
    *(_WORD *)&unsigned char buf[22] = 2050;
    *(void *)&buf[24] = v44;
    *(_WORD *)float v130 = 2050;
    *(void *)&v130[2] = v45;
    *(_WORD *)&v130[10] = 2050;
    *(void *)&v130[12] = v113;
    *(_WORD *)&v130[20] = 2050;
    *(void *)&v130[22] = *((void *)&v113 + 1);
    *(_WORD *)&v130[30] = 2050;
    *(double *)&v130[32] = v12 - *(double *)&v113;
    *(_WORD *)&v130[40] = 2050;
    *(void *)&v130[42] = v46;
    _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "#gdm,Time,gpsNs,%{public}llu,gpsUncNs,%{public}.1f,clockNs,%{public}llu,basebandTimeNs,%{public}llu,convMctSec,%{public}.3f,convMctUncSec,%{public}.3f,age,%{public}.3f,iflags,%{public}llx", buf, 0x52u);
    __int16 v41 = qword_100114840;
  }
  if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v47 = *(void *)(v40 + 48);
    uint64_t v48 = *(void *)(v40 + 56);
    uint64_t v49 = *(void *)(v40 + 64);
    uint64_t v50 = *(void *)(v40 + 72);
    uint64_t v51 = *(void *)(v40 + 80);
    uint64_t v52 = *(void *)(v40 + 88);
    uint64_t v53 = *(void *)(v40 + 96);
    uint64_t v54 = *(void *)(v40 + 104);
    int v55 = *(_DWORD *)(v40 + 112);
    int v56 = *(_DWORD *)(v40 + 116);
    int v57 = *(_DWORD *)(v40 + 128);
    int v58 = *(_DWORD *)(*a2 + 192);
    uint64_t v59 = *(void *)(v40 + 120);
    *(_DWORD *)int buf = 134286593;
    *(void *)&uint8_t buf[4] = v47;
    *(_WORD *)&buf[12] = 2049;
    *(void *)&buf[14] = v48;
    *(_WORD *)&unsigned char buf[22] = 2049;
    *(void *)&buf[24] = v49;
    *(_WORD *)float v130 = 2049;
    *(void *)&v130[2] = v50;
    *(_WORD *)&v130[10] = 2050;
    *(void *)&v130[12] = v51;
    *(_WORD *)&v130[20] = 2050;
    *(void *)&v130[22] = v52;
    *(_WORD *)&v130[30] = 2050;
    *(void *)&v130[32] = v53;
    *(_WORD *)&v130[40] = 2050;
    *(void *)&v130[42] = v54;
    *(_WORD *)&v130[50] = 1026;
    *(_DWORD *)&v130[52] = v55;
    *(_WORD *)double v131 = 1026;
    *(_DWORD *)&v131[2] = v56;
    *(_WORD *)&v131[6] = 1026;
    *(_DWORD *)&v131[8] = v57;
    *(_WORD *)&v131[12] = 1026;
    *(_DWORD *)&v131[14] = v58;
    *(_WORD *)&v131[18] = 2050;
    *(void *)&v131[20] = v59;
    _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "#gdm,Position,latitude,%{private}.6f,longitude,%{private}.6f,altWgs84,%{private}.2f,undulation,%{private}.2f,vertUnc,%{public}.2f,semiMajorHorizUnc,%{public}.2f,semiMinorHorizUnc,%{public}.2f,semiMajorAzimuthHorizUnc,%{public}.2f,source,%{public}x,reliability,%{public}d,gnssContent,%{public}d,estTech,%{public}d,assistanceUsed,%{public}llx", buf, 0x74u);
    __int16 v41 = qword_100114840;
  }
  if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v60 = *(void *)(v40 + 136);
    uint64_t v61 = *(void *)(v40 + 144);
    uint64_t v62 = *(void *)(v40 + 152);
    uint64_t v63 = *(void *)(v40 + 160);
    uint64_t v64 = *(void *)(v40 + 168);
    uint64_t v65 = *(void *)(v40 + 176);
    *(_DWORD *)int buf = 134350336;
    *(void *)&uint8_t buf[4] = v60;
    *(_WORD *)&buf[12] = 2050;
    *(void *)&buf[14] = v61;
    *(_WORD *)&unsigned char buf[22] = 2050;
    *(void *)&buf[24] = v62;
    *(_WORD *)float v130 = 2050;
    *(void *)&v130[2] = v63;
    *(_WORD *)&v130[10] = 2050;
    *(void *)&v130[12] = v64;
    *(_WORD *)&v130[20] = 2050;
    *(void *)&v130[22] = v65;
    _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "#gdm,Velocity,horizSpeed,%{public}.2f,horizSpeedUnc,%{public}.2f,vertVel,%{public}.2f,vertVelUnc,%{public}.2f,course,%{public}.2f,courseUnc,%{public}.2f", buf, 0x3Eu);
  }
LABEL_47:
  float v66 = v13[264];
  float v67 = a4;
  if (os_log_type_enabled(v66, OS_LOG_TYPE_DEBUG))
  {
    if (*a3) {
      int v102 = -1171354717 * ((*(void *)(*a3 + 120) - *(void *)(*a3 + 112)) >> 4);
    }
    else {
      int v102 = -1;
    }
    if (*a4) {
      int v103 = -252645135 * (((*a4)[1] - **a4) >> 3);
    }
    else {
      int v103 = -1;
    }
    if (*a5) {
      int v104 = -1431655765 * ((*(void *)(*a5 + 8) - *(void *)*a5) >> 3);
    }
    else {
      int v104 = -1;
    }
    BOOL v105 = *a6 != 0;
    BOOL v106 = *a7 != 0;
    *(_DWORD *)int buf = 67110400;
    *(_DWORD *)&uint8_t buf[4] = (v128 >> 3) & 1;
    *(_WORD *)&uint8_t buf[8] = 1024;
    *(_DWORD *)&buf[10] = v102;
    *(_WORD *)&buf[14] = 1024;
    *(_DWORD *)&uint8_t buf[16] = v103;
    *(_WORD *)&buf[20] = 1024;
    *(_DWORD *)&unsigned char buf[22] = v104;
    *(_WORD *)&buf[26] = 1024;
    *(_DWORD *)&buf[28] = v105;
    *(_WORD *)float v130 = 1024;
    *(_DWORD *)&v130[2] = v106;
    _os_log_debug_impl((void *)&_mh_execute_header, v66, OS_LOG_TYPE_DEBUG, "#gdm,pvtmCallback,hasFix,%d,nMeas,%d,nSvInfo,%d,nBand,%d,hasTimeInfo,%d,hasKlob,%d", buf, 0x26u);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_100114288, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_100114288))
  {
    float v109 = (id *)GpsdPreferences::instance(0);
    byte_100114280 = GpsdPreferences::enableMeasurementApi(v109);
    __cxa_guard_release(&qword_100114288);
    float v67 = a4;
  }
  if (byte_100114280)
  {
    float v68 = *v67;
    if (*v67) {
      LOBYTE(v68) = *v68 != v68[1];
    }
    float v69 = (void *)*a5;
    if (*a5) {
      LOBYTE(v69) = *v69 != v69[1];
    }
    if (*a3) {
      LOBYTE(v68) = 1;
    }
    if ((v68 & 1) != 0 || (v69 & 1) != 0 || *a6 || *a7)
    {
      memset(buf, 0, sizeof(buf));
      *(void *)float v130 = 0;
      *(void *)&v130[8] = -1;
      *(int64x2_t *)&v130[16] = vdupq_n_s64(0x7FF8000000000000uLL);
      *(_OWORD *)&v130[32] = *(_OWORD *)&v130[16];
      *(_OWORD *)double v131 = *(_OWORD *)&v130[16];
      *(_WORD *)&v130[48] = 0;
      *(int32x2_t *)&v131[16] = vdup_n_s32(0x7FC00000u);
      *(_DWORD *)&v131[24] = 2143289344;
      *(void *)&long long v132 = 0x8000000000000000;
      __asm { FMOV            V1.2S, #-1.0 }
      *((void *)&v132 + 1) = _D1;
      *(void *)&long long v133 = 0x7FF8000000000000;
      DWORD2(v133) = -1082130432;
      memset(__p, 0, sizeof(__p));
      long long v135 = 0u;
      long long v136 = 0u;
      long long v137 = 0u;
      long long v138 = 0u;
      uint64_t v139 = 0;
      *(void *)int buf = CFAbsoluteTimeGetCurrent();
      *(double *)&uint8_t buf[16] = v12;
      *(double *)&uint8_t buf[8] = (double)gpsd::util::getMachAbsoluteTimeNs(v75) / 1000000000.0;
      uint64_t v76 = *a3;
      if (*a3)
      {
        long long v77 = *(_OWORD *)v76;
        long long v78 = *(_OWORD *)(v76 + 32);
        *(_OWORD *)&v130[24] = *(_OWORD *)(v76 + 16);
        *(_OWORD *)&v130[40] = v78;
        *(_OWORD *)&v130[8] = v77;
        long long v79 = *(_OWORD *)(v76 + 48);
        long long v80 = *(_OWORD *)(v76 + 64);
        long long v81 = *(_OWORD *)(v76 + 96);
        long long v132 = *(_OWORD *)(v76 + 80);
        long long v133 = v81;
        *(_OWORD *)double v131 = v79;
        *(_OWORD *)&v131[16] = v80;
        if (*(void *)&__p[0])
        {
          sub_100018788((uint64_t)__p, *(uint64_t *)&__p[0]);
          operator delete(*(void **)&__p[0]);
          memset(__p, 0, 24);
        }
        __p[0] = *(_OWORD *)(v76 + 112);
        *(void *)&__p[1] = *(void *)(v76 + 128);
        *(void *)(v76 + 112) = 0;
        *(void *)(v76 + 120) = 0;
        *(void *)(v76 + 128) = 0;
        if (!ReceiverClockConversion::isRxClockValid((ReceiverClockConversion *)(a1 + 2240), *(uint64_t *)&v130[8]))
        {
          sub_100018814((uint64_t)buf);
          goto LABEL_93;
        }
        *(void *)&buf[24] = ReceiverClockConversion::feedPvtmCallback((ReceiverClockConversion *)(a1 + 2240), *(unint64_t *)&v130[8], *(double *)&buf[16]);
        *(void *)float v130 = v82;
      }
      uint64_t v83 = *a6;
      if (*a6)
      {
        uint64_t v84 = *v83;
        *uint64_t v83 = 0;
        uint64_t v85 = *((void *)&v136 + 1);
        *((void *)&v136 + 1) = v84;
        if (v85) {
          operator delete();
        }
        uint64_t v86 = v83[1];
        v83[1] = 0;
        uint64_t v87 = v137;
        *(void *)&long long v137 = v86;
        if (v87) {
          operator delete();
        }
        uint64_t v88 = v83[2];
        v83[2] = 0;
        uint64_t v89 = *((void *)&v137 + 1);
        *((void *)&v137 + 1) = v88;
        if (v89) {
          operator delete();
        }
        uint64_t v90 = v83[3];
        v83[3] = 0;
        uint64_t v91 = v138;
        *(void *)&long long v138 = v90;
        if (v91) {
          operator delete();
        }
        uint64_t v92 = v83[4];
        v83[4] = 0;
        uint64_t v93 = *((void *)&v138 + 1);
        *((void *)&v138 + 1) = v92;
        if (v93) {
          operator delete();
        }
      }
      uint64_t v94 = (long long *)*a5;
      if (*a5)
      {
        if ((void)v135)
        {
          *((void *)&v135 + 1) = v135;
          operator delete((void *)v135);
          long long v135 = 0uLL;
          *(void *)&long long v136 = 0;
        }
        long long v135 = *v94;
        *(void *)&long long v136 = *((void *)v94 + 2);
        *(void *)uint64_t v94 = 0;
        *((void *)v94 + 1) = 0;
        *((void *)v94 + 2) = 0;
      }
      int v95 = *v67;
      if (*v67)
      {
        float v96 = (void *)*((void *)&__p[1] + 1);
        if (*((void *)&__p[1] + 1))
        {
          float v97 = *(void **)&__p[2];
          uint64_t v98 = (void *)*((void *)&__p[1] + 1);
          if (*(void *)&__p[2] != *((void *)&__p[1] + 1))
          {
            do
            {
              v97 -= 17;
              sub_1000189B4(v97);
            }
            while (v97 != v96);
            uint64_t v98 = (void *)*((void *)&__p[1] + 1);
          }
          *(void *)&__p[2] = v96;
          operator delete(v98);
          memset((char *)&__p[1] + 8, 0, 24);
        }
        *(_OWORD *)((char *)&__p[1] + 8) = *(_OWORD *)v95;
        *((void *)&__p[2] + 1) = v95[2];
        *int v95 = 0;
        v95[1] = 0;
        v95[2] = 0;
      }
      uint64_t v99 = *a7;
      *a7 = 0;
      uint64_t v100 = v139;
      uint64_t v139 = v99;
      if (v100) {
        operator delete();
      }
      gnss::MeasurementData::fillIsUsableFlag((gnss::MeasurementData *)buf);
      v128 |= 0x10u;
      if (!*((void *)&v116 + 1)) {
        operator new();
      }
      gnss::Convert::toProtobuf((gnss::Convert *)buf, *((const gnss::MeasurementData **)&v116 + 1), v101);
      sub_100018814((uint64_t)buf);
    }
  }
  sub_10000A630(a1, (uint64_t)&v114);
LABEL_93:
  float v114 = &off_10010DB88;
  proto::gpsd::Indication::SharedDtor(&v114);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)&v114);
}

void sub_10000FEA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  __cxa_guard_abort(&qword_100114288);
  proto::gpsd::Indication::~Indication((proto::gpsd::Indication *)va);
  _Unwind_Resume(a1);
}

void sub_10000FEE8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 1848) && !*(unsigned char *)(a1 + 1896) && !*(unsigned char *)(a1 + 1897))
  {
    double v2 = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)a1) * 0.000000001;
    double v3 = v2 - *(double *)(a1 + 1856);
    if (v3 >= 0.2)
    {
      double v4 = v2 - *(double *)(a1 + 1864);
      if (v4 + -24.0 >= v3) {
        double v5 = v2 - *(double *)(a1 + 1856);
      }
      else {
        double v5 = v4 + -24.0;
      }
      long long v6 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 134349568;
        *(double *)&uint8_t buf[4] = v5;
        __int16 v11 = 2050;
        double v12 = v3;
        __int16 v13 = 2050;
        uint64_t v14 = *(void **)&v4;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#gdm,outside NMEA/PVTM,any,%{public}.3f,secondsSinceStop,%{public}.3f,secondsSinceSideSpinup,%{public}.3f", buf, 0x20u);
      }
      if (v5 > 1.5)
      {
        long long v7 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)int buf = 134349568;
          *(double *)&uint8_t buf[4] = v5;
          __int16 v11 = 2050;
          double v12 = v3;
          __int16 v13 = 2050;
          uint64_t v14 = *(void **)&v4;
          _os_log_fault_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "#gdm,outside NMEA/PVTM,severe,%{public}.3f,secondsSinceStop,%{public}.3f,secondsSinceSideSpinup,%{public}.3f", buf, 0x20u);
        }
        sub_1000033AC(&v9, "LessThan5Seconds");
        if (v5 <= 300.0)
        {
          if (v5 <= 5.0)
          {
LABEL_18:
            sub_1000033AC(buf, "Monitoring");
            sub_1000033AC(&v14, "OutsideActivity");
            if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
              sub_1000186E8(&__p, v9.__r_.__value_.__l.__data_, v9.__r_.__value_.__l.__size_);
            }
            else {
              std::string __p = v9;
            }
            char v17 = 0;
            gpsd::util::triggerDiagnosticReport((uint64_t)buf);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
            if (v15 < 0) {
              operator delete(v14);
            }
            if (SHIBYTE(v13) < 0) {
              operator delete(*(void **)buf);
            }
            if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v9.__r_.__value_.__l.__data_);
            }
            return;
          }
          long long v8 = "Between5And300Seconds";
        }
        else
        {
          long long v8 = "MoreThan300Seconds";
        }
        std::string::assign(&v9, v8);
        goto LABEL_18;
      }
    }
  }
}

void sub_100010158(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000101C0(uint64_t a1, uint64_t *a2)
{
  NmeaLogging::append(a2);
  double v3 = **(NSObject ***)(a1 + 1936);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100010248;
  block[3] = &unk_100104D40;
  block[4] = a1;
  dispatch_async(v3, block);
}

void sub_100010248(uint64_t a1)
{
}

void sub_100010250(uint64_t a1)
{
  double v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *(unsigned __int8 *)(a1 + 2000);
    int v5 = *(unsigned __int8 *)(a1 + 2088);
    *(_DWORD *)__int16 v11 = 67109376;
    *(_DWORD *)&v11[4] = v4;
    *(_WORD *)&v11[8] = 1024;
    *(_DWORD *)&v11[10] = v5;
    _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "#tt,sendTimeTransferDataIndication,fromGpioSet,%d,fromGnssVendorSet,%d", v11, 0xEu);
  }
  if (*(unsigned char *)(a1 + 2088) && *(unsigned char *)(a1 + 2000))
  {
    double v3 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = *(void *)(a1 + 1984);
      unint64_t v7 = *(void *)(a1 + 2040) / 0xF4240uLL;
      uint64_t v8 = *(void *)(a1 + 1992);
      uint64_t v9 = *(void *)(a1 + 2016);
      double v10 = *(float *)(a1 + 2024);
      *(_DWORD *)__int16 v11 = 134350336;
      *(void *)&v11[4] = v7;
      *(_WORD *)&v11[12] = 1026;
      *(_DWORD *)&v11[14] = 0;
      *(_WORD *)&v11[18] = 2050;
      *(void *)&v11[20] = v6;
      *(_WORD *)&v11[28] = 2050;
      *(void *)&v11[30] = v8;
      *(_WORD *)&v11[38] = 2048;
      *(void *)&v11[40] = v9;
      *(_WORD *)&v11[48] = 2050;
      *(double *)&v11[50] = v10;
      _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "#rxClockConv,pulse,rxRtcMs,%{public}llu,rxRtcUnc,%{public}u,machAbsTicks,%{public}llu,%{public}llu,gpsNs,%llu,gpsUncNs,%{public}.3f", v11, 0x3Au);
    }
    *(void *)__int16 v11 = &off_10010DB88;
    memset(&v11[8], 0, 64);
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    *(_DWORD *)&v11[8] = 9;
    int v21 = 129;
    operator new();
  }
}

void sub_1000107C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
}

void *sub_100010830(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 2000) = 0;
  *(_OWORD *)(a1 + 1984) = 0u;
  *(_OWORD *)(a1 + 2008) = 0u;
  *(_DWORD *)(a1 + 2024) = -1082130432;
  *(void *)(a1 + 2028) = 0;
  *(_DWORD *)(a1 + 2036) = 0;
  *(void *)(a1 + 2040) = -1;
  *(_OWORD *)(a1 + 2048) = 0u;
  *(_OWORD *)(a1 + 2064) = 0u;
  *(_OWORD *)(a1 + 2073) = 0u;
  uint64_t v2 = *(void *)(a1 + 8);
  v6[0] = off_1001065C0;
  v6[1] = a1;
  v6[3] = v6;
  sub_1000205AC((uint64_t)v5, a2);
  v4[0] = off_100106670;
  void v4[3] = v4;
  (*(void (**)(uint64_t, void *, void *, void *))(*(void *)v2 + 112))(v2, v6, v5, v4);
  sub_100019B54(v4);
  sub_100019B54(v5);
  return sub_100020528(v6);
}

void sub_100010958(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  sub_100019B54((uint64_t *)va);
  sub_100019B54((uint64_t *)va1);
  sub_100020528((void *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100010984(uint64_t a1, proto::gpsd *this, unsigned int a3)
{
  if ((this & 0xFFFFFFFE) != 0xE)
  {
    uint64_t v6 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      gpsd::util::stringify((int)this, (uint64_t)v16);
      int v9 = SHIBYTE(v17);
      double v10 = (void **)v16[0];
      gnss::stringify(a3, __p);
      __int16 v11 = v16;
      if (v9 < 0) {
        __int16 v11 = v10;
      }
      if (v20 >= 0) {
        long long v12 = __p;
      }
      else {
        long long v12 = (void **)__p[0];
      }
      *(_DWORD *)int buf = 136315394;
      long long v22 = v11;
      __int16 v23 = 2080;
      BOOL v24 = v12;
      _os_log_debug_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "#gdm,sendResponse,%s,%s", buf, 0x16u);
      if (v20 < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v17) < 0) {
        operator delete(v16[0]);
      }
    }
  }
  v16[0] = &off_10010DB10;
  v16[1] = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  if (!proto::gpsd::Request_Type_IsValid(this))
  {
    long long v13 = "::proto::gpsd::Request_Type_IsValid(value)";
    int v14 = 7657;
    long long v15 = "set_request_type";
    goto LABEL_18;
  }
  HIDWORD(v18) = 1;
  LODWORD(v17) = this;
  unsigned int v7 = gnss::Convert::toProtobuf(a3);
  if (v7 >= 0xA)
  {
    long long v13 = "::proto::gnss::Result_IsValid(value)";
    int v14 = 7702;
    long long v15 = "set_result_code";
LABEL_18:
    __assert_rtn(v15, "GpsdProtocol.pb.h", v14, v13);
  }
  HIDWORD(v18) |= 4u;
  HIDWORD(v17) = v7;
  uint64_t v8 = *(void *)(a1 + 2304);
  if (!v8) {
    sub_100003600();
  }
  (*(void (**)(uint64_t, void **))(*(void *)v8 + 48))(v8, v16);
  sub_100004C58(a1 + 928, (int)this, a3);
  v16[0] = &off_10010DB10;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v16);
}

void sub_100010BB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100010BE8(uint64_t a1, void *a2)
{
  if (*a2)
  {
    uint64_t v2 = &off_10010DB88;
    long long v3 = 0u;
    long long v4 = 0u;
    long long v5 = 0u;
    long long v6 = 0u;
    long long v7 = 0u;
    long long v8 = 0u;
    long long v9 = 0u;
    long long v10 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    LODWORD(v3) = 3;
    int v16 = 33;
    operator new();
  }
}

void sub_100010D24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

CFAbsoluteTime sub_100010D38(uint64_t a1, unsigned char *a2)
{
  if (*(unsigned char *)(a1 + 2232))
  {
    *a2 = 1;
    return (double)(gpsd::util::getMachContinuousTimeNs((gpsd::util *)a1)
                  - *(void *)(a1 + 2216)
                  + *(void *)(a1 + 2224))
         * 0.000000001;
  }
  else
  {
    *a2 = 0;
    return CFAbsoluteTimeGetCurrent() + -5.0 + 662342413.0;
  }
}

void sub_100010DAC(void *a1)
{
  uint64_t v2 = (void *)a1[243];
  if (v2)
  {
    long long v3 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#gdm,releaseOsTransaction", v6, 2u);
      uint64_t v2 = (void *)a1[243];
    }

    a1[243] = 0;
  }
  uint64_t v4 = a1[246];
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
    a1[247] = 0x7FEFFFFFFFFFFFFFLL;
    long long v5 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#dqwdt,stop", buf, 2u);
    }
  }
}

void sub_100010EA0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(NSObject **)(v1 + 1960);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100010F14;
  block[3] = &unk_100104D40;
  block[4] = v1;
  dispatch_async(v2, block);
}

void sub_100010F14(gpsd::util *a1)
{
  uint64_t v1 = *((void *)a1 + 4);
  double v2 = (double)gpsd::util::getMachContinuousTimeNs(a1) * 0.000000001;
  *(double *)(v1 + 1976) = v2;
  long long v3 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 134349056;
    double v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#dqwdt,heartbeat,lastkick,%{public}.2f", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100010FD4(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  uint64_t v3 = *a2;
  if (!*a2)
  {
    uint64_t v65 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      LOWORD(buf[0]) = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_ERROR, "null requestPtr", (uint8_t *)buf, 2u);
      uint64_t v65 = qword_100114840;
    }
    if (os_log_type_enabled(v65, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf[0]) = 136446722;
      *(void **)((char *)buf + 4) = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Daemon/GpsdGnssDeviceManager.mm";
      WORD2(buf[1]) = 1026;
      *(_DWORD *)((char *)&buf[1] + 6) = 1464;
      WORD1(buf[2]) = 2082;
      *(void **)((char *)&buf[2] + 4) = "handleRequest";
      _os_log_error_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", (uint8_t *)buf, 0x1Cu);
    }
    sub_1000033AC(&v105, "assert");
    sub_1000033AC(&v104, "handleRequest");
    sub_1000033AC(&v103, "null requestPtr");
    gpsd::util::triggerDiagnosticReport((uint64_t)&v105, (long long *)&v104, (long long *)&v103);
    std::string::~string(&v103);
    std::string::~string(&v104);
    std::string::~string(&v105);
    __assert_rtn("handleRequest", "GpsdGnssDeviceManager.mm", 1464, "false && \"null requestPtr\"");
  }
  if ((*(unsigned char *)(v3 + 388) & 4) == 0)
  {
    uint64_t v5 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      LOWORD(buf[0]) = 0;
      long long v6 = "#gdm,Missing request type";
      long long v7 = v5;
      uint32_t v8 = 2;
LABEL_36:
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, v6, (uint8_t *)buf, v8);
      goto LABEL_15;
    }
    goto LABEL_15;
  }
  uint64_t v9 = *(unsigned int *)(v3 + 20);
  if (!v9 || (proto::gpsd::Request_Type_IsValid((proto::gpsd *)*(unsigned int *)(v3 + 20)) & 1) == 0)
  {
    uint64_t v14 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      int v20 = *(_DWORD *)(v3 + 20);
      LODWORD(buf[0]) = 67240192;
      HIDWORD(buf[0]) = v20;
      long long v6 = "#gdm,Invalid request type,%{public}d";
      long long v7 = v14;
      uint32_t v8 = 8;
      goto LABEL_36;
    }
LABEL_15:
    sub_100010984(a1, (proto::gpsd *)*(unsigned int *)(v3 + 20), 4u);
    return;
  }
  if ((v9 & 0xFFFFFFFE) != 0xE
    && (long long v11 = qword_100114840, os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG)))
  {
    gpsd::util::stringify(v9, (uint64_t)buf);
    if (SHIBYTE(buf[2]) >= 0) {
      uint64_t v25 = buf;
    }
    else {
      uint64_t v25 = (void **)buf[0];
    }
    *(_DWORD *)long long v123 = 136315138;
    *(void *)&long long v124 = v25;
    _os_log_debug_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "#gdm,receivedRequest,%s", v123, 0xCu);
    if (SHIBYTE(buf[2]) < 0) {
      operator delete(buf[0]);
    }
    unsigned int v12 = *(_DWORD *)(v3 + 20);
  }
  else
  {
    unsigned int v12 = v9;
  }
  v159[0] = off_1001066F0;
  v159[1] = a1;
  v159[2] = v9;
  __int16 v160 = v159;
  switch(v12)
  {
    case 0x1Du:
      if ((*(unsigned char *)(v3 + 391) & 4) == 0) {
        goto LABEL_12;
      }
      uint64_t v21 = *(void *)(v3 + 208);
      if (!v21) {
        uint64_t v21 = *(void *)(proto::gpsd::Request::default_instance_ + 208);
      }
      sub_1000205AC((uint64_t)v157, (uint64_t)v159);
      sub_100013260(a1, v21, (uint64_t)v157);
      long long v22 = v157;
LABEL_40:
      sub_100019B54(v22);
      goto LABEL_41;
    case 0x22u:
      *(unsigned char *)(a1 + 16) = 1;
      if (*(unsigned char *)(a1 + 18))
      {
        uint64_t v89 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          LOWORD(buf[0]) = 0;
          _os_log_error_impl((void *)&_mh_execute_header, v89, OS_LOG_TYPE_ERROR, "#gdm,Device has been destroyed", (uint8_t *)buf, 2u);
          uint64_t v89 = qword_100114840;
        }
        if (os_log_type_enabled(v89, OS_LOG_TYPE_ERROR))
        {
          LODWORD(buf[0]) = 136446722;
          *(void **)((char *)buf + 4) = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Daemon/GpsdGnssDeviceManager.mm";
          WORD2(buf[1]) = 1026;
          *(_DWORD *)((char *)&buf[1] + 6) = 1502;
          WORD1(buf[2]) = 2082;
          *(void **)((char *)&buf[2] + 4) = "handleRequest";
          _os_log_error_impl((void *)&_mh_execute_header, v89, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", (uint8_t *)buf, 0x1Cu);
        }
        sub_1000033AC(v100, "assert");
        sub_1000033AC(v98, "handleRequest");
        sub_1000033AC(v96, "#gdm,Device has been destroyed");
        gpsd::util::triggerDiagnosticReport((uint64_t)v100, (long long *)v98, (long long *)v96);
        if (v97 < 0) {
          operator delete(v96[0]);
        }
        if (v99 < 0) {
          operator delete(v98[0]);
        }
        if (v101 < 0) {
          operator delete(v100[0]);
        }
        __assert_rtn("handleRequest", "GpsdGnssDeviceManager.mm", 1502, "false && \"#gdm,Device has been destroyed\"");
      }
      if (*(unsigned char *)(a1 + 17))
      {
        BOOL v27 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          gnss::stringify(*(_DWORD *)(a1 + 20), buf);
          double v28 = SHIBYTE(buf[2]) >= 0 ? buf : (void **)buf[0];
          *(_DWORD *)long long v123 = 136446210;
          *(void *)&long long v124 = v28;
          _os_log_error_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "#gdm,Multiple BUILD_DEVICE,already attempted with status,%{public}s", v123, 0xCu);
          if (SHIBYTE(buf[2]) < 0) {
            operator delete(buf[0]);
          }
        }
        int v29 = *(_DWORD *)(a1 + 20);
        LODWORD(buf[0]) = 7;
        HIDWORD(buf[0]) = v29;
        sub_1000033AC(&buf[1], "Multiple BUILD_DEVICE");
        memset(&buf[4], 0, 24);
        sub_10000F004();
      }
      uint64_t v18 = (id *)GpsdPreferences::instance(0);
      if (!GpsdPreferences::bigPowerSwitch(v18)) {
        sub_10000A758();
      }
      long long v19 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "#gdm,#bps,ignore BUILD_DEVICE", (uint8_t *)buf, 2u);
      }
      v158[3] = 0;
      GnssHal::GpioEmbedded::GpioEmbedded(buf, (uint64_t)v158);
      sub_100018B88(v158);
      GnssHal::GpioEmbedded::setResetLow((GnssHal::GpioEmbedded *)buf);
      sub_100013210((uint64_t)v160, 1);
      GnssHal::GpioEmbedded::~GpioEmbedded((GnssHal::GpioEmbedded *)buf);
      sub_100010DAC((void *)a1);
      goto LABEL_43;
    case 0x23u:
      uint64_t v15 = *(void *)(v3 + 192);
      if (!v15) {
        uint64_t v15 = *(void *)(proto::gpsd::Request::default_instance_ + 192);
      }
      int v16 = 1;
      sub_10000A0EC(a1, *(uint64_t **)(v15 + 8), 1);
      goto LABEL_20;
    case 0x24u:
      uint64_t v90 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        LOWORD(buf[0]) = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v90, OS_LOG_TYPE_ERROR, "#gdm,EXIT request via XPC", (uint8_t *)buf, 2u);
      }
      uint64_t v91 = *(void *)(v3 + 200);
      if (!v91) {
        uint64_t v91 = *(void *)(proto::gpsd::Request::default_instance_ + 200);
      }
      sub_10000A0EC(a1, *(uint64_t **)(v91 + 8), 1);
      sub_100013210((uint64_t)v160, 1);
      usleep(0x186A0u);
      uint64_t v92 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v92, OS_LOG_TYPE_DEFAULT, "#gdm,Completed exit preparations", (uint8_t *)buf, 2u);
      }
      uint64_t v93 = *(void *)(v3 + 200);
      if (!v93) {
        uint64_t v93 = *(void *)(proto::gpsd::Request::default_instance_ + 200);
      }
      sub_10000F074(*(uint64_t **)(v93 + 8));
    case 0x25u:
      uint64_t v94 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v94, OS_LOG_TYPE_DEFAULT, "#gdm,hard clear start", (uint8_t *)buf, 2u);
      }
      sub_1000033AC(v123, "hard clear");
      sub_10000A0EC(a1, (uint64_t *)v123, 1);
      GnssHal::PlatformNvStore::PlatformNvStore((GnssHal::PlatformNvStore *)buf);
      GnssHal::PlatformNvStore::clearSessionStorage((GnssHal::PlatformNvStore *)buf);
      GnssHal::PlatformNvStore::clearPermanentStorage((GnssHal::PlatformNvStore *)buf);
      int v95 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)int v102 = 0;
        _os_log_impl((void *)&_mh_execute_header, v95, OS_LOG_TYPE_DEFAULT, "#gdm,hard clear done", v102, 2u);
      }
      GnssHal::PlatformNvStore::~PlatformNvStore((GnssHal::PlatformNvStore *)buf);
      sub_10000F074((uint64_t *)v123);
    default:
      uint64_t v17 = *(void *)(a1 + 8);
      if (v17) {
        goto LABEL_27;
      }
      if (*(unsigned char *)(a1 + 16) && (v12 > 0x22 || ((1 << v12) & 0x500040F04) == 0))
      {
        long long v30 = (id *)GpsdPreferences::instance(0);
        if (GpsdPreferences::bigPowerSwitch(v30))
        {
          double v31 = qword_100114840;
          if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
          {
            gpsd::util::stringify(*(_DWORD *)(v3 + 20), (uint64_t)buf);
            unint64_t v32 = SHIBYTE(buf[2]) >= 0 ? buf : (void **)buf[0];
            *(_DWORD *)long long v123 = 136446210;
            *(void *)&long long v124 = v32;
            _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "#gdm,#bps,createDevice init,%{public}s", v123, 0xCu);
            if (SHIBYTE(buf[2]) < 0) {
              operator delete(buf[0]);
            }
          }
          sub_100009744((gpsd::util *)a1);
          sub_10000A758();
        }
      }
      uint64_t v17 = *(void *)(a1 + 8);
      if (v17)
      {
        unsigned int v12 = *(_DWORD *)(v3 + 20);
LABEL_27:
        int v13 = 4;
        switch(v12)
        {
          case 1u:
            sub_100013730(a1, v3);
            goto LABEL_41;
          case 2u:
            sub_1000139A8(a1);
            goto LABEL_41;
          case 3u:
            sub_1000205AC((uint64_t)v156, (uint64_t)v159);
            (*(void (**)(uint64_t, unsigned char *))(*(void *)v17 + 24))(v17, v156);
            long long v22 = v156;
            goto LABEL_40;
          case 4u:
            sub_1000205AC((uint64_t)v155, (uint64_t)v159);
            (*(void (**)(uint64_t, unsigned char *))(*(void *)v17 + 32))(v17, v155);
            long long v22 = v155;
            goto LABEL_40;
          case 5u:
            if ((*(unsigned char *)(v3 + 390) & 4) == 0) {
              goto LABEL_13;
            }
            uint64_t v44 = *(void *)(v3 + 144);
            if (!v44) {
              uint64_t v44 = *(void *)(proto::gpsd::Request::default_instance_ + 144);
            }
            if ((*(unsigned char *)(v44 + 20) & 1) == 0) {
              goto LABEL_13;
            }
            uint64_t v45 = *(void *)(v44 + 8);
            int v46 = *(_DWORD *)(GpsdPlatformInfo::instance(0) + 8);
            uint64_t v47 = *(void *)(a1 + 8);
            sub_1000205AC((uint64_t)v154, (uint64_t)v159);
            if ((v45 & ((v46 - 201) < 2)) != 0) {
              uint64_t v48 = 1024;
            }
            else {
              uint64_t v48 = v45;
            }
            (*(void (**)(uint64_t, uint64_t, unsigned char *))(*(void *)v47 + 40))(v47, v48, v154);
            long long v22 = v154;
            goto LABEL_40;
          case 6u:
            if ((*(unsigned char *)(v3 + 390) & 8) == 0) {
              goto LABEL_13;
            }
            uint64_t v51 = *(unsigned __int8 **)(v3 + 152);
            if (!v51) {
              uint64_t v51 = *(unsigned __int8 **)(proto::gpsd::Request::default_instance_ + 152);
            }
            sub_1000205AC((uint64_t)v153, (uint64_t)v159);
            sub_100013B88(a1, v51, (uint64_t)v153);
            long long v22 = v153;
            goto LABEL_40;
          case 7u:
            if ((*(unsigned char *)(v3 + 390) & 0x10) == 0) {
              goto LABEL_13;
            }
            uint64_t v52 = *(void *)(v3 + 160);
            if (!v52) {
              uint64_t v52 = *(void *)(proto::gpsd::Request::default_instance_ + 160);
            }
            sub_1000205AC((uint64_t)v152, (uint64_t)v159);
            sub_100013D04(a1, *(void *)(v52 + 8), *(_DWORD *)(v52 + 20), (uint64_t)v152);
            long long v22 = v152;
            goto LABEL_40;
          case 8u:
            if ((*(unsigned char *)(v3 + 388) & 8) == 0) {
              goto LABEL_13;
            }
            uint64_t v60 = *(void *)(v3 + 24);
            if (!v60) {
              uint64_t v60 = *(void *)(proto::gpsd::Request::default_instance_ + 24);
            }
            sub_1000205AC((uint64_t)v151, (uint64_t)v159);
            sub_100013E38(a1, v60, (uint64_t)v151);
            long long v22 = v151;
            goto LABEL_40;
          case 9u:
            if ((*(unsigned char *)(v3 + 388) & 0x10) == 0) {
              goto LABEL_13;
            }
            uint64_t v59 = *(void *)(v3 + 32);
            if (!v59) {
              uint64_t v59 = *(void *)(proto::gpsd::Request::default_instance_ + 32);
            }
            sub_1000205AC((uint64_t)v150, (uint64_t)v159);
            sub_1000142A0(a1, v59, (uint64_t)v150);
            long long v22 = v150;
            goto LABEL_40;
          case 0xAu:
            sub_1000205AC((uint64_t)v149, (uint64_t)v159);
            sub_1000146A4(a1, *(void *)(v3 + 120), *(_DWORD *)(v3 + 388), (uint64_t)v149);
            long long v22 = v149;
            goto LABEL_40;
          case 0xBu:
            sub_1000205AC((uint64_t)v148, (uint64_t)v159);
            sub_100014B80(a1, *(void *)(v3 + 128), *(_DWORD *)(v3 + 388), (uint64_t)v148);
            long long v22 = v148;
            goto LABEL_40;
          case 0xCu:
            goto LABEL_13;
          case 0xEu:
            if ((*(unsigned char *)(v3 + 388) & 0x40) == 0) {
              goto LABEL_13;
            }
            uint64_t v42 = *(void *)(v3 + 48);
            if (!v42) {
              uint64_t v42 = *(void *)(proto::gpsd::Request::default_instance_ + 48);
            }
            sub_1000205AC((uint64_t)v147, (uint64_t)v159);
            sub_100014E30(a1, v42, (uint64_t)v147);
            long long v22 = v147;
            goto LABEL_40;
          case 0xFu:
            if ((*(unsigned char *)(v3 + 388) & 0x80) == 0) {
              goto LABEL_13;
            }
            uint64_t v38 = *(void *)(v3 + 56);
            if (!v38) {
              uint64_t v38 = *(void *)(proto::gpsd::Request::default_instance_ + 56);
            }
            sub_1000205AC((uint64_t)v146, (uint64_t)v159);
            sub_100015004(a1, v38, (uint64_t)v146);
            long long v22 = v146;
            goto LABEL_40;
          case 0x10u:
            if ((*(unsigned char *)(v3 + 389) & 1) == 0) {
              goto LABEL_13;
            }
            uint64_t v53 = *(void *)(v3 + 64);
            if (!v53) {
              uint64_t v53 = *(void *)(proto::gpsd::Request::default_instance_ + 64);
            }
            sub_1000205AC((uint64_t)v145, (uint64_t)v159);
            sub_1000151D8(a1, v53, (uint64_t)v145);
            long long v22 = v145;
            goto LABEL_40;
          case 0x11u:
            if ((*(unsigned char *)(v3 + 389) & 2) == 0) {
              goto LABEL_13;
            }
            uint64_t v54 = *(void *)(v3 + 72);
            if (!v54) {
              uint64_t v54 = *(void *)(proto::gpsd::Request::default_instance_ + 72);
            }
            sub_1000205AC((uint64_t)v144, (uint64_t)v159);
            sub_1000152F8(a1, v54, (uint64_t)v144);
            long long v22 = v144;
            goto LABEL_40;
          case 0x12u:
            if ((*(unsigned char *)(v3 + 389) & 4) == 0) {
              goto LABEL_13;
            }
            uint64_t v62 = *(void *)(v3 + 80);
            if (!v62) {
              uint64_t v62 = *(void *)(proto::gpsd::Request::default_instance_ + 80);
            }
            sub_1000205AC((uint64_t)v143, (uint64_t)v159);
            sub_100015548(a1, v62, (uint64_t)v143);
            long long v22 = v143;
            goto LABEL_40;
          case 0x13u:
            if ((*(unsigned char *)(v3 + 389) & 8) == 0) {
              goto LABEL_13;
            }
            uint64_t v61 = *(void *)(v3 + 88);
            if (!v61) {
              uint64_t v61 = *(void *)(proto::gpsd::Request::default_instance_ + 88);
            }
            sub_1000205AC((uint64_t)v142, (uint64_t)v159);
            sub_100015714(a1, v61, (uint64_t)v142);
            long long v22 = v142;
            goto LABEL_40;
          case 0x14u:
            if ((*(unsigned char *)(v3 + 389) & 0x10) == 0) {
              goto LABEL_13;
            }
            uint64_t v37 = *(void *)(v3 + 96);
            if (!v37) {
              uint64_t v37 = *(void *)(proto::gpsd::Request::default_instance_ + 96);
            }
            sub_1000205AC((uint64_t)v141, (uint64_t)v159);
            sub_100015880(a1, *(_DWORD *)(v37 + 8), *(_DWORD *)(v37 + 16), (uint64_t)v141);
            long long v22 = v141;
            goto LABEL_40;
          case 0x15u:
            if ((*(unsigned char *)(v3 + 389) & 0x20) == 0) {
              goto LABEL_13;
            }
            uint64_t v43 = *(void *)(v3 + 104);
            if (!v43) {
              uint64_t v43 = *(void *)(proto::gpsd::Request::default_instance_ + 104);
            }
            sub_1000205AC((uint64_t)v140, (uint64_t)v159);
            sub_100015994(a1, v43, (uint64_t)v140);
            long long v22 = v140;
            goto LABEL_40;
          case 0x16u:
            if ((*(unsigned char *)(v3 + 389) & 0x40) == 0) {
              goto LABEL_13;
            }
            uint64_t v63 = *(void *)(v3 + 112);
            if (!v63) {
              uint64_t v63 = *(void *)(proto::gpsd::Request::default_instance_ + 112);
            }
            sub_1000205AC((uint64_t)v139, (uint64_t)v159);
            sub_100015AC8(a1, v63, (uint64_t)v139);
            long long v22 = v139;
            goto LABEL_40;
          case 0x17u:
            v137[0] = off_100106770;
            v137[1] = a1;
            v137[3] = v137;
            sub_1000205AC((uint64_t)v136, (uint64_t)v159);
            (*(void (**)(uint64_t, void *, void *))(*(void *)v17 + 208))(v17, v137, v136);
            sub_100019B54(v136);
            sub_100019D4C(v137);
            goto LABEL_41;
          case 0x18u:
            if ((*(unsigned char *)(v3 + 390) & 0x20) == 0) {
              goto LABEL_13;
            }
            uint64_t v41 = *(void *)(v3 + 168);
            if (!v41) {
              uint64_t v41 = *(void *)(proto::gpsd::Request::default_instance_ + 168);
            }
            sub_1000205AC((uint64_t)v135, (uint64_t)v159);
            sub_100015D10((gpsd::util *)a1, v41, (uint64_t)v135);
            long long v22 = v135;
            goto LABEL_40;
          case 0x19u:
            if ((*(unsigned char *)(v3 + 390) & 0x40) == 0) {
              goto LABEL_13;
            }
            uint64_t v39 = *(_DWORD **)(v3 + 176);
            if (!v39) {
              uint64_t v39 = *(_DWORD **)(proto::gpsd::Request::default_instance_ + 176);
            }
            sub_1000205AC((uint64_t)v134, (uint64_t)v159);
            sub_100015EE8(a1, v39, (uint64_t)v134);
            long long v22 = v134;
            goto LABEL_40;
          case 0x1Au:
            if ((*(unsigned char *)(v3 + 390) & 0x80) == 0) {
              goto LABEL_13;
            }
            uint64_t v49 = *(void *)(v3 + 184);
            if (!v49) {
              uint64_t v49 = *(void *)(proto::gpsd::Request::default_instance_ + 184);
            }
            if ((*(unsigned char *)(v49 + 16) & 1) == 0) {
              goto LABEL_13;
            }
            int v50 = *(unsigned __int8 *)(v49 + 8);
            sub_1000205AC((uint64_t)v133, (uint64_t)v159);
            (*(void (**)(uint64_t, BOOL, unsigned char *))(*(void *)v17 + 240))(v17, v50 != 0, v133);
            long long v22 = v133;
            goto LABEL_40;
          case 0x1Bu:
            sub_1000205AC((uint64_t)v131, (uint64_t)v159);
            sub_100010830(a1, (uint64_t)v131);
            long long v22 = v131;
            goto LABEL_40;
          case 0x1Cu:
            sub_1000205AC((uint64_t)v130, (uint64_t)v159);
            (*(void (**)(uint64_t, unsigned char *))(*(void *)v17 + 120))(v17, v130);
            long long v22 = v130;
            goto LABEL_40;
          case 0x1Eu:
            if ((*(unsigned char *)(v3 + 391) & 0x10) != 0)
            {
              uint64_t v64 = *(void *)(v3 + 224);
              if (!v64) {
                uint64_t v64 = *(void *)(proto::gpsd::Request::default_instance_ + 224);
              }
              sub_1000160D4(a1, *(_DWORD *)(v64 + 8));
              int v13 = 1;
            }
            goto LABEL_13;
          case 0x1Fu:
            if ((*(unsigned char *)(v3 + 391) & 0x20) == 0) {
              goto LABEL_13;
            }
            uint64_t v40 = *(void *)(v3 + 232);
            if (!v40) {
              uint64_t v40 = *(void *)(proto::gpsd::Request::default_instance_ + 232);
            }
            sub_1000205AC((uint64_t)v138, (uint64_t)v159);
            sub_100015BE8(a1, v40, (uint64_t)v138);
            long long v22 = v138;
            goto LABEL_40;
          case 0x20u:
            sub_100013210((uint64_t)v160, 1);
            sub_10000A228();
          case 0x26u:
            if ((*(unsigned char *)(v3 + 391) & 0x40) == 0) {
              goto LABEL_13;
            }
            uint64_t v55 = *(void *)(v3 + 240);
            if (!v55) {
              uint64_t v55 = *(void *)(proto::gpsd::Request::default_instance_ + 240);
            }
            if ((~*(_DWORD *)(v55 + 16) & 3) != 0) {
              goto LABEL_13;
            }
            int v56 = *(unsigned __int8 *)(v55 + 8);
            if (*(unsigned char *)(v55 + 9))
            {
              int v57 = (id *)GpsdPreferences::instance(0);
              id v58 = GpsdPreferences::enableL5(v57);
            }
            else
            {
              id v58 = 0;
            }
            sub_1000205AC((uint64_t)v132, (uint64_t)v159);
            (*(void (**)(uint64_t, BOOL, id, unsigned char *))(*(void *)v17 + 232))(v17, v56 != 0, v58, v132);
            long long v22 = v132;
            goto LABEL_40;
          case 0x33u:
            sub_1000161E0(a1, v3);
            goto LABEL_41;
          case 0x34u:
            sub_100016408(a1);
            goto LABEL_41;
          case 0x35u:
            if ((*(_DWORD *)(v3 + 388) & 0x80000000) != 0)
            {
              LOBYTE(buf[0]) = 1;
              memset(&buf[1], 0, 24);
              LOBYTE(buf[4]) = 1;
              LOWORD(buf[5]) = -1;
              memset(&buf[6], 0, 27);
              BYTE3(buf[9]) = 1;
              uint64_t v83 = *(std::string **)(v3 + 248);
              if (!v83) {
                uint64_t v83 = *(std::string **)(proto::gpsd::Request::default_instance_ + 248);
              }
              ProtobufUtil::fromProtobuf(v83, (uint64_t)buf);
              uint64_t v84 = qword_100114840;
              if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v85 = &buf[1];
                uint64_t v86 = &buf[6];
                if (SHIBYTE(buf[3]) < 0) {
                  uint64_t v85 = (void **)buf[1];
                }
                if (SHIBYTE(buf[8]) < 0) {
                  uint64_t v86 = (void **)buf[6];
                }
                *(_DWORD *)long long v123 = 67110403;
                LODWORD(v124) = LOBYTE(buf[0]);
                WORD2(v124) = 2081;
                *(void *)((char *)&v124 + 6) = v85;
                HIWORD(v124) = 1024;
                *(_DWORD *)long long v125 = LOBYTE(buf[9]);
                *(_WORD *)&v125[4] = 1024;
                *(_DWORD *)long long v126 = LOWORD(buf[5]);
                *(_WORD *)&v126[4] = 2081;
                long long v127 = v86;
                __int16 v128 = 1024;
                int v129 = LOBYTE(buf[4]);
                _os_log_impl((void *)&_mh_execute_header, v84, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,emergConfig,heloEnabled,%d,imsi,%{private}s,supl_enable_msa,%d,suplPort,%d,suplServer,%{private}s,cplane_early_return,%d", v123, 0x2Eu);
              }
              if ((*(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) - 201) > 1)
              {
                uint64_t v88 = *(void *)(a1 + 8);
                sub_1000205AC((uint64_t)v122, (uint64_t)v159);
                (*(void (**)(uint64_t, void **, void *))(*(void *)v88 + 280))(v88, buf, v122);
                sub_100019B54(v122);
              }
              else
              {
                sub_100013210((uint64_t)v160, 7);
              }
              sub_1000165D4((uint64_t)buf);
              goto LABEL_41;
            }
            long long v33 = qword_100114840;
            if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
              break;
            }
            LOWORD(buf[0]) = 0;
            unint64_t v34 = "#gdm,#nilr,EmergConfig payload is missing";
            goto LABEL_174;
          case 0x3Cu:
            sub_1000205AC((uint64_t)v121, (uint64_t)v159);
            sub_100016618(a1, v3, a3, (uint64_t)v121);
            long long v22 = v121;
            goto LABEL_40;
          case 0x3Du:
            sub_1000205AC((uint64_t)v120, (uint64_t)v159);
            sub_100016A80(a1, *(unsigned int *)(v3 + 296), *(_DWORD *)(v3 + 392), (uint64_t)v120);
            long long v22 = v120;
            goto LABEL_40;
          case 0x41u:
            long long v33 = qword_100114840;
            if ((*(unsigned char *)(v3 + 392) & 4) != 0)
            {
              if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
              {
                LOWORD(buf[0]) = 0;
                _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,#cp,GpsReferenceTime", (uint8_t *)buf, 2u);
              }
              buf[0] = (void *)-1;
              uint64_t v72 = 1;
              do
              {
                float v73 = &buf[v72];
                *(_WORD *)float v73 = -1;
                *((unsigned char *)v73 + 2) = -1;
                *(void **)((char *)v73 + 4) = (void *)-1;
                *((unsigned char *)v73 + 12) = -1;
                v72 += 2;
              }
              while (v73 + 2 != (void **)&v115);
              char v115 = -1;
              int v116 = -1;
              uint64_t v117 = -1;
              uint64_t v74 = *(void *)(v3 + 264);
              if (!v74) {
                uint64_t v74 = *(void *)(proto::gpsd::Request::default_instance_ + 264);
              }
              ProtobufUtil::fromProtobuf(v74, (uint64_t)buf);
              uint64_t v75 = *(void *)(a1 + 8);
              sub_1000205AC((uint64_t)v119, (uint64_t)v159);
              (*(void (**)(uint64_t, void **, unsigned char *))(*(void *)v75 + 352))(v75, buf, v119);
              long long v22 = v119;
              goto LABEL_40;
            }
            if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
              break;
            }
            LOWORD(buf[0]) = 0;
            unint64_t v34 = "#gdm,#nilr,#cp,GpsReferenceTime payload is missing";
            goto LABEL_174;
          case 0x42u:
            long long v33 = qword_100114840;
            if ((*(unsigned char *)(v3 + 392) & 8) != 0)
            {
              if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
              {
                LOWORD(buf[0]) = 0;
                _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,#cp,GpsReferenceLocation", (uint8_t *)buf, 2u);
              }
              buf[0] = (void *)-1;
              buf[1] = (void *)0xFFFFFFFF7FFFFFFFLL;
              *(void **)((char *)&buf[2] + 4) = (void *)-1;
              HIDWORD(buf[3]) = -1;
              LOWORD(buf[2]) = -1;
              long long v81 = *(int **)(v3 + 272);
              if (!v81) {
                long long v81 = *(int **)(proto::gpsd::Request::default_instance_ + 272);
              }
              ProtobufUtil::fromProtobuf(v81, (uint64_t)buf);
              uint64_t v82 = *(void *)(a1 + 8);
              sub_1000205AC((uint64_t)v118, (uint64_t)v159);
              (*(void (**)(uint64_t, void **, unsigned char *))(*(void *)v82 + 360))(v82, buf, v118);
              long long v22 = v118;
              goto LABEL_40;
            }
            if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
              break;
            }
            LOWORD(buf[0]) = 0;
            unint64_t v34 = "#gdm,#nilr,#cp,ReferenceLocation payload is missing";
            goto LABEL_174;
          case 0x43u:
            long long v33 = qword_100114840;
            if ((*(unsigned char *)(v3 + 392) & 0x10) != 0)
            {
              if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
              {
                LOWORD(buf[0]) = 0;
                _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,#cp,GpsNavigationModel", (uint8_t *)buf, 2u);
              }
              sub_100016BB0((uint64_t)buf);
              int v70 = *(_DWORD **)(v3 + 280);
              if (!v70) {
                int v70 = *(_DWORD **)(proto::gpsd::Request::default_instance_ + 280);
              }
              ProtobufUtil::fromProtobuf(v70, (uint64_t)buf);
              uint64_t v71 = *(void *)(a1 + 8);
              sub_1000205AC((uint64_t)v113, (uint64_t)v159);
              (*(void (**)(uint64_t, void **, uint8_t *))(*(void *)v71 + 368))(v71, buf, v113);
              long long v22 = v113;
              goto LABEL_40;
            }
            if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
              break;
            }
            LOWORD(buf[0]) = 0;
            unint64_t v34 = "#gdm,#nilr,#cp,GpsNavigationModel payload is missing";
            goto LABEL_174;
          case 0x44u:
            long long v33 = qword_100114840;
            if ((*(unsigned char *)(v3 + 392) & 0x20) != 0)
            {
              if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
              {
                LOWORD(buf[0]) = 0;
                _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,#cp,GpsAcqAssistance", (uint8_t *)buf, 2u);
              }
              sub_100016C34((uint64_t)buf);
              uint64_t v68 = *(void *)(v3 + 288);
              if (!v68) {
                uint64_t v68 = *(void *)(proto::gpsd::Request::default_instance_ + 288);
              }
              ProtobufUtil::fromProtobuf(v68, (uint64_t)buf);
              uint64_t v69 = *(void *)(a1 + 8);
              sub_1000205AC((uint64_t)v112, (uint64_t)v159);
              (*(void (**)(uint64_t, void **, unsigned char *))(*(void *)v69 + 376))(v69, buf, v112);
              long long v22 = v112;
              goto LABEL_40;
            }
            if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
              break;
            }
            LOWORD(buf[0]) = 0;
            unint64_t v34 = "#gdm,#nilr,#cp,GpsAcqAssistance payload is missing";
            goto LABEL_174;
          case 0x45u:
            if ((*(unsigned char *)(v3 + 392) & 0x40) != 0)
            {
              buf[0] = 0;
              LOWORD(buf[1]) = -1;
              HIDWORD(buf[1]) = -1;
              LOWORD(buf[2]) = -1;
              *(void **)((char *)&buf[2] + 4) = (void *)-1;
              WORD2(buf[3]) = -1;
              LODWORD(buf[4]) = -1;
              uint64_t v76 = *(void *)(v3 + 304);
              if (!v76) {
                uint64_t v76 = *(void *)(proto::gpsd::Request::default_instance_ + 304);
              }
              ProtobufUtil::fromProtobuf(v76, buf);
              long long v77 = qword_100114840;
              if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)long long v123 = 67110144;
                LODWORD(v124) = HIDWORD(buf[0]);
                WORD2(v124) = 1024;
                *(_DWORD *)((char *)&v124 + 6) = HIDWORD(buf[2]);
                WORD5(v124) = 1024;
                HIDWORD(v124) = buf[3];
                *(_WORD *)long long v125 = 1024;
                *(_DWORD *)&v125[2] = WORD2(buf[3]);
                *(_WORD *)long long v126 = 1024;
                *(_DWORD *)&v126[2] = buf[4];
                _os_log_impl((void *)&_mh_execute_header, v77, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,#cp,CellFTAssistance,networkType,%d,cdmaTime.cdmaTow.intPart,%d,cdmaTime.cdmaTow.fracPart,%d,cdmaTime.weekNum,%d,cdmaTime.absoluteRmsAcc,%d", v123, 0x20u);
              }
              uint64_t v78 = *(void *)(a1 + 8);
              sub_1000205AC((uint64_t)v111, (uint64_t)v159);
              (*(void (**)(uint64_t, void **, unsigned char *))(*(void *)v78 + 392))(v78, buf, v111);
              long long v22 = v111;
              goto LABEL_40;
            }
            long long v33 = qword_100114840;
            if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
              break;
            }
            LOWORD(buf[0]) = 0;
            unint64_t v34 = "#gdm,#nilr,#cp,CellFTAssistance payload is missing";
            goto LABEL_174;
          case 0x46u:
            sub_1000205AC((uint64_t)v110, (uint64_t)v159);
            sub_100016CAC(a1, v3, (uint64_t)v110);
            long long v22 = v110;
            goto LABEL_40;
          case 0x47u:
            sub_1000205AC((uint64_t)v109, (uint64_t)v159);
            sub_100017190(a1, v3, (uint64_t)v109);
            long long v22 = v109;
            goto LABEL_40;
          case 0x49u:
            if ((*(unsigned char *)(v3 + 393) & 2) != 0)
            {
              LODWORD(buf[0]) = 0;
              memset(&buf[1], 0, 72);
              uint64_t v66 = *(void *)(v3 + 336);
              if (!v66) {
                uint64_t v66 = *(void *)(proto::gpsd::Request::default_instance_ + 336);
              }
              ProtobufUtil::fromProtobuf(v66, (uint64_t)buf);
              uint64_t v67 = *(void *)(a1 + 8);
              sub_1000205AC((uint64_t)v108, (uint64_t)v159);
              (*(void (**)(uint64_t, void **, void *))(*(void *)v67 + 432))(v67, buf, v108);
              sub_100019B54(v108);
              sub_100017B14(buf);
              goto LABEL_41;
            }
            long long v33 = qword_100114840;
            if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
              break;
            }
            LOWORD(buf[0]) = 0;
            unint64_t v34 = "#gdm,#nilr,#supl,SET_SUPL_LOCATIONID received without Payload";
            goto LABEL_174;
          case 0x4Au:
            double v36 = qword_100114840;
            if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
            {
              LOWORD(buf[0]) = 0;
              _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,#supl,ABORT_SUPL_SESSION", (uint8_t *)buf, 2u);
              uint64_t v17 = *(void *)(a1 + 8);
            }
            sub_1000205AC((uint64_t)v106, (uint64_t)v159);
            (*(void (**)(uint64_t, void *))(*(void *)v17 + 440))(v17, v106);
            sub_100019B54(v106);
            VendorLogger::notifyStop((VendorLogger *)(a1 + 24));
            VendorLogger::notifyStart((VendorLogger *)(a1 + 24));
            goto LABEL_41;
          case 0x4Cu:
            if ((*(unsigned char *)(v3 + 393) & 0x80) != 0)
            {
              LODWORD(buf[0]) = 0;
              memset(&buf[1], 0, 24);
              uint64_t v79 = *(void *)(v3 + 376);
              if (!v79) {
                uint64_t v79 = *(void *)(proto::gpsd::Request::default_instance_ + 376);
              }
              ProtobufUtil::fromProtobuf(v79, (uint64_t)buf);
              uint64_t v80 = *(void *)(a1 + 8);
              sub_1000205AC((uint64_t)v107, (uint64_t)v159);
              (*(void (**)(uint64_t, void **, void *))(*(void *)v80 + 464))(v80, buf, v107);
              sub_100019B54(v107);
              if (buf[1])
              {
                buf[2] = buf[1];
                operator delete(buf[1]);
              }
              goto LABEL_41;
            }
            long long v33 = qword_100114840;
            if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
            {
              LOWORD(buf[0]) = 0;
              unint64_t v34 = "#gdm,#nilr,#supl,SET_SUPL_WLAN_MEAS received without Payload";
LABEL_174:
              _os_log_error_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_ERROR, v34, (uint8_t *)buf, 2u);
            }
            break;
          default:
            double v35 = qword_100114838;
            if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
            {
              LODWORD(buf[0]) = 67240192;
              HIDWORD(buf[0]) = v12;
              _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "#gdm,Unexpected request type,%{public}d", (uint8_t *)buf, 8u);
            }
            break;
        }
LABEL_12:
        int v13 = 4;
LABEL_13:
        sub_100013210((uint64_t)v160, v13);
LABEL_41:
        sub_100003F80(a1 + 928, v3);
      }
      else
      {
        __int16 v23 = (id *)GpsdPreferences::instance(0);
        if (GpsdPreferences::bigPowerSwitch(v23) && *(_DWORD *)(v3 + 20) == 2)
        {
          BOOL v24 = qword_100114840;
          if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
          {
            LOWORD(buf[0]) = 0;
            _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "#gdm,#bps,Ignore and ack stop when device held in reset", (uint8_t *)buf, 2u);
          }
          int v16 = 1;
        }
        else
        {
          float v26 = qword_100114840;
          if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
          {
            gpsd::util::stringify(*(_DWORD *)(v3 + 20), (uint64_t)buf);
            uint64_t v87 = SHIBYTE(buf[2]) >= 0 ? buf : (void **)buf[0];
            *(_DWORD *)long long v123 = 136446210;
            *(void *)&long long v124 = v87;
            _os_log_error_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_ERROR, "#gdm,Device not initialized,Cannot handle request,%{public}s", v123, 0xCu);
            if (SHIBYTE(buf[2]) < 0) {
              operator delete(buf[0]);
            }
          }
          int v16 = 7;
        }
LABEL_20:
        sub_100013210((uint64_t)v160, v16);
      }
LABEL_43:
      sub_100019B54(v159);
      break;
  }
}

void sub_100012D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  sub_100019B54(&STACK[0x830]);
  sub_1000165D4((uint64_t)&a61);
  sub_100019B54((void *)(v61 - 120));
  _Unwind_Resume(a1);
}

uint64_t sub_100013210(uint64_t a1, int a2)
{
  int v3 = a2;
  if (!a1) {
    sub_100003600();
  }
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)a1 + 48))(a1, &v3);
}

void *sub_100013260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 2368))
  {
    if (!*(unsigned char *)(a1 + 1848) && !*(unsigned char *)(a1 + 1896) && !*(unsigned char *)(a1 + 1897)) {
      *(double *)(a1 + 1864) = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)a1) * 0.000000001;
    }
    v11[0] = 0;
    long long v12 = xmmword_1000E3240;
    *(void *)&long long v6 = 0x8000000080000000;
    *((void *)&v6 + 1) = 0x8000000080000000;
    long long v13 = v6;
    char v14 = 0;
    __int16 v15 = 0x7FFF;
    uint64_t v16 = -1;
    uint64_t v17 = -1;
    int v18 = -1;
    bzero(v19, 0x32AuLL);
    *(_OWORD *)&v19[812] = 0u;
    int v20 = -1;
    __int16 v21 = -1;
    ProtobufUtil::fromProtobuf(a2, (uint64_t)v11);
    long long v7 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)int buf = 67240704;
      int v23 = v11[0];
      __int16 v24 = 1026;
      int v25 = v12;
      __int16 v26 = 1026;
      int v27 = DWORD1(v12);
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "#gdm,#ltl,success,%{public}d,code,%{public}d,type,%{public}d", buf, 0x14u);
    }
    uint64_t v8 = *(void *)(a1 + 2368);
    if (!v8) {
      sub_100003600();
    }
    (*(void (**)(uint64_t, uint8_t *))(*(void *)v8 + 48))(v8, v11);
    sub_100013210(*(void *)(a3 + 24), 1);
    return sub_100020154((void *)(a1 + 2344));
  }
  else
  {
    long long v10 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#gdm,#ltl,null callback", v11, 2u);
    }
    return (void *)sub_100013210(*(void *)(a3 + 24), 0);
  }
}

void sub_100013470(uint64_t a1)
{
  *(_DWORD *)(a1 + 1900) = 7;
  if (!*(void *)(a1 + 1904))
  {
    dispatch_source_t v2 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, **(dispatch_queue_t **)(a1 + 1936));
    *(void *)(a1 + 1904) = v2;
    if (!v2)
    {
      uint64_t v8 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)int buf = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "null fStopCompletedTimer", buf, 2u);
        uint64_t v8 = qword_100114840;
      }
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)int buf = 136446722;
        char v14 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Daemon/GpsdGnssDeviceManager.mm";
        __int16 v15 = 1026;
        int v16 = 2896;
        __int16 v17 = 2082;
        int v18 = "createStopCompletedTimer";
        _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
      }
      sub_1000033AC(&v12, "assert");
      sub_1000033AC(&v11, "createStopCompletedTimer");
      sub_1000033AC(&v10, "null fStopCompletedTimer");
      gpsd::util::triggerDiagnosticReport((uint64_t)&v12, (long long *)&v11, (long long *)&v10);
      std::string::~string(&v10);
      std::string::~string(&v11);
      std::string::~string(&v12);
      __assert_rtn("createStopCompletedTimer", "GpsdGnssDeviceManager.mm", 2896, "false && \"null fStopCompletedTimer\"");
    }
    int v3 = (id *)GpsdPreferences::instance(0);
    if (GpsdPreferences::bigPowerSwitch(v3)) {
      uint64_t v4 = 6000000000;
    }
    else {
      uint64_t v4 = 2000000000;
    }
    uint64_t v5 = *(NSObject **)(a1 + 1904);
    dispatch_time_t v6 = dispatch_walltime(0, v4);
    dispatch_source_set_timer(v5, v6, v4, 0xEE6B280uLL);
    long long v7 = *(NSObject **)(a1 + 1904);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_10001822C;
    v9[3] = &unk_100104D40;
    v9[4] = a1;
    dispatch_source_set_event_handler(v7, v9);
    dispatch_resume(*(dispatch_object_t *)(a1 + 1904));
  }
}

void sub_1000136DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  if (a31 < 0) {
    operator delete(a26);
  }
  _Unwind_Resume(exception_object);
}

void sub_100013730(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#gdm,start,initiated", v12, 2u);
  }
  if (*(unsigned char *)(a1 + 1848))
  {
    uint64_t v5 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#gdm,Device was already started", v12, 2u);
    }
    sub_100010984(a1, (proto::gpsd *)1, 1u);
  }
  else
  {
    sub_100009744((gpsd::util *)a1);
    *(unsigned char *)(a1 + 1848) = 1;
    if (*(void *)(a1 + 1904))
    {
      dispatch_time_t v6 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::string v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#gdm,start,Overlap with previous stop timer", v12, 2u);
      }
      sub_100017E64(a1);
      *(_DWORD *)(a1 + 1900) = 7;
    }
    VendorLogger::notifyStart((VendorLogger *)(a1 + 24));
    long long v7 = (id *)GpsdPreferences::instance(0);
    GpsdPreferences::dumpSettingsToLog(v7);
    BOOL v8 = 0;
    *(unsigned char *)(a1 + 2272) = 0;
    *(_OWORD *)(a1 + 2256) = 0u;
    *(_OWORD *)(a1 + 2240) = 0u;
    if ((*(unsigned char *)(a2 + 391) & 8) != 0)
    {
      uint64_t v9 = *(void *)(a2 + 216);
      if (!v9) {
        uint64_t v9 = *(void *)(proto::gpsd::Request::default_instance_ + 216);
      }
      BOOL v8 = *(unsigned char *)(v9 + 18) != 0;
    }
    *(unsigned char *)(a1 + 1952) = v8;
    uint64_t v10 = *(void *)(a1 + 8);
    unint64_t v11 = sub_100017CCC(a1, a2);
    v14[0] = off_100106BB8;
    v14[1] = a1;
    v14[3] = v14;
    v13[0] = off_100106C38;
    v13[1] = a1;
    v13[3] = v13;
    (*(void (**)(uint64_t, unint64_t, void *, void *))(*(void *)v10 + 48))(v10, v11, v14, v13);
    sub_100019B54(v13);
    sub_100019B54(v14);
  }
}

void sub_100013984(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_100019B54((uint64_t *)va);
  sub_100019B54((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_1000139A8(uint64_t a1)
{
  dispatch_source_t v2 = qword_100114840;
  BOOL v3 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#gdm,stop,initiated", v7, 2u);
  }
  if (*(unsigned char *)(a1 + 1848))
  {
    *(unsigned char *)(a1 + 1848) = 0;
    *(double *)(a1 + 1856) = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)v3) * 0.000000001;
    uint64_t v4 = *(NSObject **)(a1 + 1928);
    if (v4)
    {
      dispatch_source_cancel(v4);

      *(void *)(a1 + 1928) = 0;
    }
    sub_100013470(a1);
    uint64_t v5 = *(void *)(a1 + 8);
    v9[0] = off_100106DB8;
    v9[1] = a1;
    v9[3] = v9;
    v8[0] = off_100106E38;
    v8[1] = a1;
    v8[3] = v8;
    (*(void (**)(uint64_t, void *, void *))(*(void *)v5 + 56))(v5, v9, v8);
    sub_100019B54(v8);
    sub_100019B54(v9);
  }
  else
  {
    uint64_t v6 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#gdm,Device was already stopped", v7, 2u);
    }
    sub_100010984(a1, (proto::gpsd *)2, 1u);
  }
}

void sub_100013B64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_100019B54((uint64_t *)va);
  sub_100019B54((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void *sub_100013B88(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  v14[0] = off_100106938;
  v14[1] = a1;
  v14[3] = v14;
  uint64_t v4 = *(void *)(a1 + 8);
  int v5 = a2[8];
  int v6 = a2[9];
  int v7 = a2[10];
  int v8 = a2[11];
  int v9 = a2[12];
  int v10 = a2[13];
  sub_10001A900((uint64_t)v13, (uint64_t)v14);
  sub_1000205AC((uint64_t)v12, a3);
  (*(void (**)(uint64_t, BOOL, BOOL, BOOL, BOOL, BOOL, BOOL, void *, void *))(*(void *)v4 + 64))(v4, v5 != 0, v6 != 0, v7 != 0, v8 != 0, v9 != 0, v10 != 0, v13, v12);
  sub_100019B54(v12);
  sub_10001A87C(v13);
  return sub_10001A87C(v14);
}

void sub_100013CD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v8 = va_arg(va2, void);
  uint64_t v10 = va_arg(va2, void);
  uint64_t v11 = va_arg(va2, void);
  uint64_t v12 = va_arg(va2, void);
  sub_100019B54((uint64_t *)va);
  sub_10001A87C((uint64_t *)va1);
  sub_10001A87C((uint64_t *)va2);
  _Unwind_Resume(a1);
}

void *sub_100013D04(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t v7 = *(void *)(a1 + 8);
    v9[0] = off_1001069B8;
    v9[1] = a1;
    v9[3] = v9;
    sub_1000205AC((uint64_t)v8, a4);
    (*(void (**)(uint64_t, uint64_t, void *, void *))(*(void *)v7 + 104))(v7, a2, v9, v8);
    sub_100019B54(v8);
    return sub_100019918(v9);
  }
  else
  {
    uint64_t v4 = *(void *)(a4 + 24);
    return (void *)sub_100013210(v4, 4);
  }
}

void sub_100013E14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_100019B54((uint64_t *)va);
  sub_100019918((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_100013E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(a2 + 36);
  if ((v4 & 1) == 0) {
    goto LABEL_29;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gpsd::InjectAssistancePosition::default_instance_ + 8);
  }
  if ((~v4 & 0xC) == 0 && (*(_DWORD *)(v7 + 96) & 0x2F7) == 0x2F7)
  {
    uint64_t v8 = *(unsigned int *)(v7 + 76);
    if (((v8 - 25) > 0x32 || ((1 << (v8 - 25)) & 0x4000002000001) == 0)
      && v8 != 10)
    {
      uint64_t v8 = 0;
    }
    uint64_t v33 = 0;
    uint64_t v11 = (gpsd::util *)ProtobufUtil::fromProtobuf(*(_DWORD *)(a2 + 16));
    unint64_t MachContinuousTimeNs = gpsd::util::getMachContinuousTimeNs(v11);
    double v14 = *(double *)(v7 + 48);
    double v13 = *(double *)(v7 + 56);
    double v15 = *(double *)(v7 + 40);
    uint64_t v16 = GpsdPlatformInfo::instance(0);
    if ((*(_DWORD *)(v16 + 8) - 201) <= 1 && !v11)
    {
      double v17 = dbl_1000E3250[(*(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) - 201) < 2]
          / sqrt(v13 * v13 + v14 * v14);
      if (v17 >= 1.0) {
        double v18 = v17;
      }
      else {
        double v18 = 1.0;
      }
      long long v19 = qword_100114840;
      uint64_t v16 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT);
      if (v16)
      {
        *(_DWORD *)int buf = 134349056;
        *(double *)double v35 = v18;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "#gdm,injectAssistancePosition,inflating ref pos unc by factor,%{public}.2f", buf, 0xCu);
      }
      double v14 = v14 * v18;
      double v13 = v13 * v18;
      double v15 = fmax(v15, 200.0);
    }
    if (!*(unsigned char *)(a1 + 1848) && !*(unsigned char *)(a1 + 1896) && !*(unsigned char *)(a1 + 1897)) {
      *(double *)(a1 + 1864) = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)v16) * 0.000000001;
    }
    uint64_t v20 = *(void *)(a1 + 8);
    double v21 = *(double *)(v7 + 8);
    double v22 = *(double *)(v7 + 16);
    BOOL v23 = *(unsigned char *)(a2 + 20) != 0;
    double v24 = *(double *)(v7 + 24);
    double v25 = *(double *)(v7 + 64);
    uint64_t v26 = *(void *)(a2 + 24);
    sub_1000205AC((uint64_t)v46, a3);
    (*(void (**)(uint64_t, BOOL, uint64_t, uint64_t, gpsd::util *, uint64_t *, void *, double, double, double, double, double, double, double))(*(void *)v20 + 88))(v20, v23, v8, v26, v11, &v33, v46, v21, v22, v24, v15, v14, v13, v25);
    sub_100019B54(v46);
    int v27 = qword_100114840;
    if (v11 == 1)
    {
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
      {
        int v28 = *(unsigned __int8 *)(a2 + 20);
        double v29 = (double)(MachContinuousTimeNs - *(void *)(a2 + 24)) * 0.000001;
        *(_DWORD *)int buf = 67241728;
        *(_DWORD *)double v35 = 1;
        *(_WORD *)&v35[4] = 1026;
        *(_DWORD *)&v35[6] = v28;
        __int16 v36 = 2050;
        double v37 = v15;
        __int16 v38 = 2050;
        double v39 = v14;
        __int16 v40 = 2050;
        double v41 = v13;
        __int16 v42 = 1026;
        int v43 = v8;
        __int16 v44 = 2050;
        double v45 = v29;
        _os_log_debug_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEBUG, "#gdm,injectAssistancePosition,type,%{public}d,altValid,%{public}d,vertUncM,%{public}.1f,semiMajUncM,%{public}.1f,semiMinUncM,%{public}.1f,reliability,%{public}d,delayMachMs,%{public}.2f,", buf, 0x3Cu);
      }
    }
    else if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
    {
      int v31 = *(unsigned __int8 *)(a2 + 20);
      double v32 = (double)(MachContinuousTimeNs - *(void *)(a2 + 24)) * 0.000001;
      *(_DWORD *)int buf = 67241728;
      *(_DWORD *)double v35 = v11;
      *(_WORD *)&v35[4] = 1026;
      *(_DWORD *)&v35[6] = v31;
      __int16 v36 = 2050;
      double v37 = v15;
      __int16 v38 = 2050;
      double v39 = v14;
      __int16 v40 = 2050;
      double v41 = v13;
      __int16 v42 = 1026;
      int v43 = v8;
      __int16 v44 = 2050;
      double v45 = v32;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_INFO, "#gdm,injectAssistancePosition,type,%{public}d,altValid,%{public}d,vertUncM,%{public}.1f,semiMajUncM,%{public}.1f,semiMinUncM,%{public}.1f,reliability,%{public}d,delayMachMs,%{public}.2f,", buf, 0x3Cu);
    }
  }
  else
  {
LABEL_29:
    uint64_t v30 = *(void *)(a3 + 24);
    sub_100013210(v30, 4);
  }
}

void sub_100014284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_100019B54((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1000142A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((~*(_DWORD *)(a2 + 36) & 3) != 0)
  {
    uint64_t v25 = *(void *)(a3 + 24);
    sub_100013210(v25, 4);
  }
  else
  {
    if (!*(unsigned char *)(a1 + 1848) && !*(unsigned char *)(a1 + 1896) && !*(unsigned char *)(a1 + 1897)) {
      *(double *)(a1 + 1864) = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)a1) * 0.000000001;
    }
    unint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = (id *)GpsdPreferences::instance(0);
    unsigned int v8 = GpsdPreferences::allowAssistanceTimeTo10Milliseconds(v7);
    uint64_t v9 = 100000000;
    if (v6 > 0x5F5E100) {
      uint64_t v9 = v6;
    }
    uint64_t v10 = 12000000;
    uint64_t v11 = 100000000;
    if (v6 > 0x5F5E100) {
      uint64_t v11 = v6;
    }
    if (v6 < 0x2625A00) {
      uint64_t v11 = 50000000;
    }
    if (v6 >= 0x989680) {
      uint64_t v10 = v11;
    }
    if (v8) {
      uint64_t v12 = v10;
    }
    else {
      uint64_t v12 = v9;
    }
    double v13 = (_DWORD *)GpsdPlatformInfo::instance(0);
    unsigned int v14 = v13[2] - 103;
    unsigned int v15 = (0x19u >> (*((unsigned char *)v13 + 8) - 103)) & 1;
    unint64_t MachContinuousTimeNs = gpsd::util::getMachContinuousTimeNs((gpsd::util *)v13);
    unint64_t v17 = MachContinuousTimeNs;
    int v18 = *(_DWORD *)(a2 + 36);
    if (v14 > 4 || v15 == 0)
    {
      if ((v18 & 4) != 0) {
        unint64_t v20 = *(void *)(a2 + 24);
      }
      else {
        unint64_t v20 = MachContinuousTimeNs;
      }
      uint64_t v21 = *(void *)(a1 + 8);
      uint64_t v22 = *(void *)(a2 + 8);
      sub_1000205AC((uint64_t)v30, a3);
      (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t, void *))(*(void *)v21 + 96))(v21, v22, v12, v20, v30);
      sub_100019B54(v30);
      double v23 = *(double *)(a2 + 8);
      *(double *)(a1 + 2224) = v23;
      *(void *)(a1 + 2216) = v20;
      *(unsigned char *)(a1 + 2232) = 1;
      double v24 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)int buf = 134350080;
        double v32 = v23;
        __int16 v33 = 2050;
        unint64_t v34 = v20;
        __int16 v35 = 2050;
        unint64_t v36 = v17;
        __int16 v37 = 2050;
        unint64_t v38 = 0;
        __int16 v39 = 2050;
        uint64_t v40 = v12;
LABEL_35:
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_INFO, "#gdm,injectAssistanceTime,gpsNs,%{public}llu,machNs,%{public}llu,nowNs,%{public}llu,propagationNs,%{public}llu,uncNs,%{public}llu", buf, 0x34u);
      }
    }
    else
    {
      if ((v18 & 4) == 0)
      {
        unint64_t v26 = 0;
LABEL_33:
        uint64_t v27 = *(void *)(a2 + 8);
        uint64_t v28 = *(void *)(a1 + 8);
        sub_1000205AC((uint64_t)v41, a3);
        (*(void (**)(uint64_t, unint64_t, uint64_t, unint64_t, void *))(*(void *)v28 + 96))(v28, v27 + v26, v12, v17, v41);
        sub_100019B54(v41);
        *(void *)(a1 + 2224) = v27 + v26;
        *(void *)(a1 + 2216) = v17;
        *(unsigned char *)(a1 + 2232) = 1;
        double v24 = qword_100114840;
        if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO)) {
          return;
        }
        *(_DWORD *)int buf = 134350080;
        *(void *)&double v32 = v27 + v26;
        __int16 v33 = 2050;
        unint64_t v34 = v17;
        __int16 v35 = 2050;
        unint64_t v36 = v17;
        __int16 v37 = 2050;
        unint64_t v38 = v26;
        __int16 v39 = 2050;
        uint64_t v40 = v12;
        goto LABEL_35;
      }
      unint64_t v26 = MachContinuousTimeNs - *(void *)(a2 + 24);
      if (v26 <= 0x12A05F1FFLL) {
        goto LABEL_33;
      }
      double v29 = qword_100114838;
      if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 134349056;
        double v32 = (double)v26 * 0.000001;
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "#gdm,injectAssistanceTime,Warning,Failed prop sanity check,propagation_ms,%{public}.3f", buf, 0xCu);
      }
      sub_100013210(*(void *)(a3 + 24), 2);
    }
  }
}

void sub_10001467C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_100019B54((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1000146A4(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  if ((a3 & 0x8000) == 0) {
    goto LABEL_5;
  }
  if (!a2) {
    a2 = *(void *)(proto::gpsd::Request::default_instance_ + 120);
  }
  int v6 = *(_DWORD *)(a2 + 24);
  if ((v6 & 1) == 0)
  {
LABEL_5:
    uint64_t v7 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int buf = 0;
      _os_log_fault_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "#gdm,INJECT_ASSISTANCE_FILE missing arguments", buf, 2u);
    }
    sub_100013210(*(void *)(a4 + 24), 4);
    return;
  }
  unsigned int v8 = *(char **)(a2 + 8);
  unint64_t v36 = 0;
  uint64_t v37 = 0;
  std::string __p = 0;
  if ((v6 & 2) != 0)
  {
    int v9 = *(_DWORD *)(a2 + 16);
    if (v9 != 1)
    {
      if (v9 != 2)
      {
        int v18 = qword_100114840;
        BOOL v13 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT);
        if (v13)
        {
          *(_DWORD *)int buf = 67240192;
          LODWORD(v41) = v9;
          _os_log_fault_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_FAULT, "#gdm,#ee,Assistance file has unknown compression,%{public}d", buf, 8u);
        }
        goto LABEL_31;
      }
      unint64_t MachContinuousTimeNs = gpsd::util::getMachContinuousTimeNs((gpsd::util *)a1);
      BOOL v11 = CompressionUtil::decode((uint64_t)v8, (unint64_t *)&__p, COMPRESSION_LZMA);
      uint64_t v12 = qword_100114840;
      if (!v11)
      {
        BOOL v13 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT);
        if (v13)
        {
          if (v8[23] < 0) {
            uint64_t v34 = *((void *)v8 + 1);
          }
          else {
            uint64_t v34 = v8[23];
          }
          *(_DWORD *)int buf = 134349056;
          uint64_t v41 = v34;
          _os_log_fault_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_FAULT, "#gdm,#ee,Failed to decompress assistance file,lzma,%{public}zu", buf, 0xCu);
        }
        unint64_t v36 = __p;
        goto LABEL_31;
      }
      BOOL v13 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT);
      if (v13)
      {
        if (v8[23] < 0) {
          uint64_t v14 = *((void *)v8 + 1);
        }
        else {
          uint64_t v14 = v8[23];
        }
        double v32 = __p;
        int v31 = v36;
        unint64_t v33 = gpsd::util::getMachContinuousTimeNs((gpsd::util *)v13);
        *(_DWORD *)int buf = 134349568;
        uint64_t v41 = v14;
        __int16 v42 = 2050;
        uint64_t v43 = v31 - v32;
        __int16 v44 = 2050;
        double v45 = (double)v33 * 0.000000001 - (double)MachContinuousTimeNs * 0.000000001;
        uint64_t v21 = "#gdm,#ee,Injecting assistance file,lzma,%{public}zu,raw,%{public}zu,decodeTimeSec,%{public}.3f";
        uint64_t v22 = v12;
        uint32_t v23 = 32;
        goto LABEL_28;
      }
      goto LABEL_31;
    }
  }
  if (v8[23] < 0)
  {
    long long v19 = v8;
    unsigned int v8 = *(char **)v8;
    size_t v15 = *((void *)v19 + 1);
    if (v15) {
      goto LABEL_18;
    }
LABEL_25:
    unint64_t v36 = (unsigned char *)v15;
    uint64_t v16 = (unsigned char *)v15;
    goto LABEL_26;
  }
  size_t v15 = v8[23];
  if (!v8[23]) {
    goto LABEL_25;
  }
LABEL_18:
  if ((v15 & 0x8000000000000000) != 0) {
    sub_100007204();
  }
  sub_10001F810(&__p, v15);
  uint64_t v16 = v36;
  do
  {
    char v17 = *v8++;
    *v16++ = v17;
    --v15;
  }
  while (v15);
  unint64_t v36 = v16;
LABEL_26:
  uint64_t v20 = qword_100114840;
  BOOL v13 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT);
  if (v13)
  {
    *(_DWORD *)int buf = 134217984;
    uint64_t v41 = v16 - (unsigned char *)__p;
    uint64_t v21 = "#gdm,#ee,Injecting uncompressed assistance file,size,%zu";
    uint64_t v22 = v20;
    uint32_t v23 = 12;
LABEL_28:
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, v21, buf, v23);
  }
LABEL_31:
  if (__p == v36)
  {
    double v29 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)int buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_ERROR, "#gdm,INJECT_ASSISTANCE_FILE data blob empty", buf, 2u);
    }
    sub_100013210(*(void *)(a4 + 24), 4);
  }
  else
  {
    if (!*(unsigned char *)(a1 + 1848) && !*(unsigned char *)(a1 + 1896) && !*(unsigned char *)(a1 + 1897)) {
      *(double *)(a1 + 1864) = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)v13) * 0.000000001;
    }
    unsigned int v24 = *(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) - 103;
    BOOL v25 = v24 > 4;
    int v26 = (1 << v24) & 0x19;
    if (v25 || v26 == 0)
    {
      unsigned __int8 v28 = 4;
    }
    else if ((unint64_t)(v36 - (unsigned char *)__p) >> 4 < 0xC35)
    {
      unsigned __int8 v28 = 3;
    }
    else
    {
      unsigned __int8 v28 = 4;
    }
    uint64_t v30 = *(void *)(a1 + 8);
    v39[0] = off_1001067F0;
    v39[1] = a1;
    v39[3] = v39;
    sub_1000205AC((uint64_t)v38, a4);
    (*(void (**)(uint64_t, void **, void, void *, void *))(*(void *)v30 + 72))(v30, &__p, v28, v39, v38);
    sub_100019B54(v38);
    sub_100020EDC(v39);
  }
  if (__p)
  {
    unint64_t v36 = __p;
    operator delete(__p);
  }
}

void sub_100014B30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100014B80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  if ((a3 & 0x10000) == 0) {
    goto LABEL_5;
  }
  if (!a2) {
    a2 = *(void *)(proto::gpsd::Request::default_instance_ + 128);
  }
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v7 = *(const void ***)(a2 + 8);
    if (*((char *)v7 + 23) < 0)
    {
      int v9 = v7;
      uint64_t v7 = (const void **)*v7;
      size_t v8 = (size_t)v9[1];
    }
    else
    {
      size_t v8 = *((unsigned __int8 *)v7 + 23);
    }
    std::string __p = 0;
    size_t v15 = 0;
    uint64_t v16 = 0;
    sub_100020F60(&__p, v7, (uint64_t)v7 + v8, v8);
    uint64_t v10 = qword_100114840;
    BOOL v11 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG);
    if (v11)
    {
      *(_DWORD *)int buf = 134217984;
      int64_t v20 = v15 - (unsigned char *)__p;
      _os_log_debug_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "#gdm,Injecting RTI file,size,%zu", buf, 0xCu);
    }
    if (__p == v15)
    {
      BOOL v13 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)int buf = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "#gdm,INJECT_RTI_FILE data blob empty", buf, 2u);
      }
      sub_100013210(*(void *)(a4 + 24), 4);
    }
    else
    {
      if (!*(unsigned char *)(a1 + 1848) && !*(unsigned char *)(a1 + 1896) && !*(unsigned char *)(a1 + 1897)) {
        *(double *)(a1 + 1864) = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)v11) * 0.000000001;
      }
      uint64_t v12 = *(void *)(a1 + 8);
      v18[0] = off_1001068A8;
      v18[1] = a1;
      v18[3] = v18;
      sub_1000205AC((uint64_t)v17, a4);
      (*(void (**)(uint64_t, void **, void *, void *))(*(void *)v12 + 80))(v12, &__p, v18, v17);
      sub_100019B54(v17);
      sub_1000214A0(v18);
    }
    if (__p)
    {
      size_t v15 = __p;
      operator delete(__p);
    }
  }
  else
  {
LABEL_5:
    int v6 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      LOWORD(__p) = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "#gdm,INJECT_RTI_FILE missing arguments", (uint8_t *)&__p, 2u);
    }
    sub_100013210(*(void *)(a4 + 24), 4);
  }
}

void sub_100014DEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100014E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100021C98(&__p, *(int *)(a2 + 16));
  int v6 = (char *)__p;
  uint64_t v7 = v14;
  if (v14 != __p)
  {
    uint64_t v8 = 0;
    unint64_t v9 = 0;
    do
    {
      if ((uint64_t)v9 >= *(int *)(a2 + 16))
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
        int v6 = (char *)__p;
        uint64_t v7 = v14;
      }
      uint64_t v10 = *(void *)(*(void *)(a2 + 8) + 8 * v9);
      BOOL v11 = &v6[v8];
      *(void *)BOOL v11 = *(void *)(v10 + 8);
      *((void *)v11 + 1) = *(void *)(v10 + 16);
      *((_DWORD *)v11 + 4) = *(_DWORD *)(v10 + 24);
      ++v9;
      v8 += 24;
    }
    while (0xAAAAAAAAAAAAAAABLL * ((v7 - v6) >> 3) > v9);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  sub_1000205AC((uint64_t)v16, a3);
  (*(void (**)(uint64_t, void **, void *))(*(void *)v12 + 128))(v12, &__p, v16);
  sub_100019B54(v16);
  if (__p)
  {
    uint64_t v14 = __p;
    operator delete(__p);
  }
}

void sub_100014FB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100015004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100021C98(&__p, *(int *)(a2 + 16));
  int v6 = (char *)__p;
  uint64_t v7 = v14;
  if (v14 != __p)
  {
    uint64_t v8 = 0;
    unint64_t v9 = 0;
    do
    {
      if ((uint64_t)v9 >= *(int *)(a2 + 16))
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
        int v6 = (char *)__p;
        uint64_t v7 = v14;
      }
      uint64_t v10 = *(void *)(*(void *)(a2 + 8) + 8 * v9);
      BOOL v11 = &v6[v8];
      *(void *)BOOL v11 = *(void *)(v10 + 8);
      *((void *)v11 + 1) = *(void *)(v10 + 16);
      *((_DWORD *)v11 + 4) = *(_DWORD *)(v10 + 24);
      ++v9;
      v8 += 24;
    }
    while (0xAAAAAAAAAAAAAAABLL * ((v7 - v6) >> 3) > v9);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  sub_1000205AC((uint64_t)v16, a3);
  (*(void (**)(uint64_t, void **, void *))(*(void *)v12 + 136))(v12, &__p, v16);
  sub_100019B54(v16);
  if (__p)
  {
    uint64_t v14 = __p;
    operator delete(__p);
  }
}

void sub_10001518C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_1000151D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((~*(_DWORD *)(a2 + 36) & 7) != 0)
  {
    uint64_t v8 = *(void *)(a3 + 24);
    return (void *)sub_100013210(v8, 4);
  }
  else
  {
    uint64_t v3 = *(void *)(a1 + 8);
    uint64_t v4 = *(void *)(a2 + 8);
    double v5 = *(double *)(a2 + 16);
    double v6 = *(double *)(a2 + 24);
    sub_1000205AC((uint64_t)v9, a3);
    (*(void (**)(uint64_t, uint64_t, void *, double, double))(*(void *)v3 + 144))(v3, v4, v9, v5, v6);
    return sub_100019B54(v9);
  }
}

void sub_1000152DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100019B54((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_1000152F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = *(_DWORD *)(a2 + 76);
  if ((~v4 & 0xFEF) != 0)
  {
    uint64_t v7 = *(void *)(a3 + 24);
    return (void *)sub_100013210(v7, 4);
  }
  else if ((v4 & 0x10) != 0 || !*(unsigned char *)(a2 + 64))
  {
    BOOL v8 = *(unsigned __int8 *)(a2 + 64) != 0;
    double v9 = *(double *)(a2 + 40);
    if ((v4 & 0x10) != 0) {
      double v10 = *(double *)(a2 + 32);
    }
    else {
      double v10 = 0.0;
    }
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = *(void *)(a2 + 8);
    double v14 = *(double *)(a2 + 16);
    double v13 = *(double *)(a2 + 24);
    double v16 = *(double *)(a2 + 48);
    double v15 = *(double *)(a2 + 56);
    BOOL v17 = *(unsigned char *)(a2 + 65) != 0;
    BOOL v18 = *(unsigned char *)(a2 + 66) != 0;
    BOOL v19 = *(unsigned char *)(a2 + 67) != 0;
    BOOL v20 = *(unsigned char *)(a2 + 68) != 0;
    BOOL v21 = *(unsigned char *)(a2 + 69) != 0;
    sub_1000205AC((uint64_t)v23, a3);
    (*(void (**)(uint64_t, uint64_t, BOOL, BOOL, BOOL, BOOL, BOOL, void, double, double, double, double, double, double, void *))(*(void *)v11 + 152))(v11, v12, v8, v17, v18, v19, v20, v21 & (v4 >> 12), v14, v13, v10, v9, v16, v15, v23);
    return sub_100019B54(v23);
  }
  else
  {
    double v5 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)int buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "#gdm,Missing segment_start_alt_wgs84", buf, 2u);
    }
    return (void *)sub_100013210(*(void *)(a3 + 24), 4);
  }
}

void sub_10001552C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_100019B54((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_100015548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((~*(_DWORD *)(a2 + 32) & 0xF) != 0)
  {
    uint64_t v8 = *(void *)(a3 + 24);
    return (void *)sub_100013210(v8, 4);
  }
  else
  {
    if (!*(unsigned char *)(a1 + 1848) && !*(unsigned char *)(a1 + 1896) && !*(unsigned char *)(a1 + 1897)) {
      *(double *)(a1 + 1864) = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)a1) * 0.000000001;
    }
    int v6 = *(_DWORD *)(a2 + 16) - 1;
    if (v6 > 8) {
      uint64_t v7 = 0;
    }
    else {
      uint64_t v7 = dword_1000E7570[v6];
    }
    unsigned int v10 = *(_DWORD *)(a2 + 20);
    uint64_t v11 = *(unsigned int *)(a2 + 24);
    if (v10 - 1 >= 3) {
      uint64_t v12 = 0;
    }
    else {
      uint64_t v12 = v10;
    }
    if ((v11 - 25) > 0x32 || ((1 << (v11 - 25)) & 0x4000002000001) == 0)
    {
      if (v11 == 10) {
        uint64_t v11 = 10;
      }
      else {
        uint64_t v11 = 0;
      }
    }
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = *(void *)(a2 + 8);
    sub_1000205AC((uint64_t)v15, a3);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))(*(void *)v13 + 160))(v13, v14, v7, v12, v11, v15);
    return sub_100019B54(v15);
  }
}

void sub_1000156F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100019B54((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_100015714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((~*(_DWORD *)(a2 + 24) & 3) != 0)
  {
    uint64_t v11 = *(void *)(a3 + 24);
    return (void *)sub_100013210(v11, 4);
  }
  else
  {
    if (!*(unsigned char *)(a1 + 1848) && !*(unsigned char *)(a1 + 1896) && !*(unsigned char *)(a1 + 1897)) {
      *(double *)(a1 + 1864) = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)a1) * 0.000000001;
    }
    uint64_t v6 = *(void *)(a1 + 8);
    uint64_t v7 = *(void *)(a2 + 8);
    int v8 = *(_DWORD *)(a2 + 16);
    if (v8 == 2) {
      uint64_t v9 = 1;
    }
    else {
      uint64_t v9 = 2 * (v8 == 3);
    }
    sub_1000205AC((uint64_t)v12, a3);
    (*(void (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)v6 + 168))(v6, v7, v9, v12);
    return sub_100019B54(v12);
  }
}

void sub_100015864(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100019B54((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_100015880(uint64_t a1, unsigned int a2, char a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v8 = gnss::Convert::fromProtobuf(a2);
    sub_1000205AC((uint64_t)v9, a4);
    (*(void (**)(uint64_t, uint64_t, void *))(*(void *)v7 + 176))(v7, v8, v9);
    return sub_100019B54(v9);
  }
  else
  {
    uint64_t v5 = *(void *)(a4 + 24);
    return (void *)sub_100013210(v5, 4);
  }
}

void sub_100015978(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100019B54((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_100015994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((~*(_DWORD *)(a2 + 44) & 0xF) != 0)
  {
    uint64_t v9 = *(void *)(a3 + 24);
    return (void *)sub_100013210(v9, 4);
  }
  else
  {
    uint64_t v3 = *(void *)(a1 + 8);
    uint64_t v4 = *(void *)(a2 + 8);
    double v5 = *(double *)(a2 + 16);
    double v6 = *(double *)(a2 + 24);
    double v7 = *(double *)(a2 + 32);
    sub_1000205AC((uint64_t)v10, a3);
    (*(void (**)(uint64_t, uint64_t, void *, double, double, double))(*(void *)v3 + 184))(v3, v4, v10, v5, v6, v7);
    return sub_100019B54(v10);
  }
}

void sub_100015AAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100019B54((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_100015AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((~*(_DWORD *)(a2 + 36) & 7) != 0)
  {
    uint64_t v8 = *(void *)(a3 + 24);
    return (void *)sub_100013210(v8, 4);
  }
  else
  {
    uint64_t v3 = *(void *)(a1 + 8);
    uint64_t v4 = *(void *)(a2 + 8);
    double v5 = *(double *)(a2 + 16);
    double v6 = *(double *)(a2 + 24);
    sub_1000205AC((uint64_t)v9, a3);
    (*(void (**)(uint64_t, uint64_t, void *, double, double))(*(void *)v3 + 192))(v3, v4, v9, v5, v6);
    return sub_100019B54(v9);
  }
}

void sub_100015BCC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100019B54((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_100015BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(unsigned int *)(a2 + 16);
  double v7 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int buf = 67240192;
    int v13 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#gdm,thermalRisk,%{public}d", buf, 8u);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a2 + 8);
  sub_1000205AC((uint64_t)v11, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)v8 + 200))(v8, v9, v6, v11);
  return sub_100019B54(v11);
}

void sub_100015CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_100015D10(gpsd::util *a1, uint64_t a2, uint64_t a3)
{
  if ((~*(_DWORD *)(a2 + 20) & 3) == 0)
  {
    double v5 = a1;
    if (*(unsigned char *)(a2 + 8))
    {
      uint64_t v6 = (id *)GpsdPreferences::instance(0);
      a1 = (gpsd::util *)GpsdPreferences::forceEnableXocalLearning(v6);
      if (!a1)
      {
        uint64_t v8 = 1;
LABEL_11:
        if (!*((unsigned char *)v5 + 1848) && !*((unsigned char *)v5 + 1896) && !*((unsigned char *)v5 + 1897)) {
          *((double *)v5 + 233) = (double)gpsd::util::getMachContinuousTimeNs(a1) * 0.000000001;
        }
        uint64_t v11 = *((void *)v5 + 1);
        BOOL v12 = *(unsigned char *)(a2 + 8) != 0;
        uint64_t v13 = *(unsigned int *)(a2 + 12);
        sub_1000205AC((uint64_t)v15, a3);
        (*(void (**)(uint64_t, BOOL, uint64_t, uint64_t, void *))(*(void *)v11 + 216))(v11, v12, v13, v8, v15);
        return sub_100019B54(v15);
      }
      double v7 = qword_100114838;
      a1 = (gpsd::util *)os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT);
      uint64_t v8 = 0;
      if (!a1) {
        goto LABEL_11;
      }
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#gdm,#xocal,force enable by preference", v14, 2u);
    }
    uint64_t v8 = 0;
    goto LABEL_11;
  }
  uint64_t v9 = *(void *)(a3 + 24);

  return (void *)sub_100013210(v9, 4);
}

void sub_100015ECC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100019B54((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_100015EE8(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  if (a2[5])
  {
    if (!*(unsigned char *)(a1 + 1848) && !*(unsigned char *)(a1 + 1896) && !*(unsigned char *)(a1 + 1897)) {
      *(double *)(a1 + 1864) = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)a1) * 0.000000001;
    }
    uint64_t v8 = (id *)GpsdPreferences::instance(0);
    int v9 = GpsdPreferences::enableConstellationsBitfield(v8);
    int v10 = a2[2];
    int v11 = a2[3] & ((int)(a2[5] << 30) >> 31);
    BOOL v12 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 67240960;
      int v16 = v9;
      __int16 v17 = 1026;
      int v18 = v10;
      __int16 v19 = 1026;
      int v20 = v11;
      __int16 v21 = 1026;
      int v22 = (v10 | v9) & ~v11;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#gdm,setConfigEnableGnssConstellations,default,0x%{public}x,forceEnable,0x%{public}x,forceDisable,0x%{public}x,net,0x%{public}x", buf, 0x1Au);
    }
    uint64_t v13 = *(void *)(a1 + 8);
    sub_1000205AC((uint64_t)v14, a3);
    (*(void (**)(uint64_t, void, void *))(*(void *)v13 + 224))(v13, (v10 | v9) & ~v11, v14);
    return sub_100019B54(v14);
  }
  else
  {
    uint64_t v4 = *(void *)(a3 + 24);
    return (void *)sub_100013210(v4, 4);
  }
}

void sub_1000160B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1000160D4(uint64_t a1, int a2)
{
  int v3 = ProtobufUtil::fromProtobuf(a2);
  uint64_t v4 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67240192;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#gdm,#cntin,status update,%{public}d", (uint8_t *)v6, 8u);
  }
  if (*(void *)(a1 + 2400))
  {
    sub_1000182A8(a1 + 2376, v3);
  }
  else
  {
    double v5 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v6[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#gdm,#cntin,no callback to send update", (uint8_t *)v6, 2u);
    }
  }
}

void sub_1000161E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#gdm,startEmerg,initiated", v9, 2u);
  }
  if (*(unsigned char *)(a1 + 1896))
  {
    double v5 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)int v9 = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "#gdm,#nilr,Already in Emergency Mode", v9, 2u);
    }
    sub_100010984(a1, (proto::gpsd *)0x33, 0);
  }
  else
  {
    sub_100009744((gpsd::util *)a1);
    *(unsigned char *)(a1 + 1896) = 1;
    if (*(void *)(a1 + 1904))
    {
      uint64_t v6 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)int v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr_start,Overlap with previous stop timer", v9, 2u);
      }
      sub_100017E64(a1);
      *(_DWORD *)(a1 + 1900) = 7;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    unint64_t v8 = sub_100017CCC(a1, a2);
    v11[0] = off_100106CB8;
    v11[1] = a1;
    v11[3] = v11;
    v10[0] = off_100106D38;
    v10[3] = v10;
    (*(void (**)(uint64_t, unint64_t, void *, void *))(*(void *)v7 + 264))(v7, v8, v11, v10);
    sub_100019B54(v10);
    sub_100019B54(v11);
  }
}

void sub_1000163E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_100019B54((uint64_t *)va);
  sub_100019B54((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_100016408(uint64_t a1)
{
  dispatch_source_t v2 = qword_100114840;
  BOOL v3 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr_stop,initiated", v6, 2u);
  }
  if (*(unsigned char *)(a1 + 1896))
  {
    *(unsigned char *)(a1 + 1896) = 0;
    *(double *)(a1 + 1856) = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)v3) * 0.000000001;
    sub_100013470(a1);
    uint64_t v4 = *(void *)(a1 + 8);
    v8[0] = off_100106EB8;
    v8[1] = a1;
    v8[3] = v8;
    v7[0] = off_100106F38;
    v7[1] = a1;
    v7[3] = v7;
    (*(void (**)(uint64_t, void *, void *))(*(void *)v4 + 272))(v4, v8, v7);
    sub_100019B54(v7);
    sub_100019B54(v8);
  }
  else
  {
    uint64_t v5 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr_stop,Device was already stopped", v6, 2u);
    }
    sub_100010984(a1, (proto::gpsd *)0x34, 1u);
  }
}

void sub_1000165B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_100019B54((uint64_t *)va);
  sub_100019B54((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000165D4(uint64_t a1)
{
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void *sub_100016618(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (!*(unsigned char *)(a1 + 1848) && !*(unsigned char *)(a1 + 1896) && !*(unsigned char *)(a1 + 1897)) {
    sub_100009744((gpsd::util *)a1);
  }
  *(unsigned char *)(a1 + 1897) = 1;
  if (*(unsigned char *)(a2 + 392))
  {
    *(_WORD *)uint64_t v27 = -1;
    int v28 = -1;
    unsigned __int16 v29 = -1;
    char v30 = 0;
    int v31 = -1;
    __int16 v32 = 0;
    char v33 = 0;
    uint64_t v34 = -1;
    int v35 = -16777216;
    char v36 = -1;
    uint64_t v37 = -1;
    int v10 = *(_DWORD **)(a2 + 256);
    if (!v10) {
      int v10 = *(_DWORD **)(proto::gpsd::Request::default_instance_ + 256);
    }
    ProtobufUtil::fromProtobuf(v10, (uint64_t)v27);
    double v12 = (double)gpsd::util::getMachContinuousTimeNs(v11) * 0.000000001 - (double)a3 * 0.000000001;
    int v13 = v29;
    if (v12 > 0.0 && v12 <= 10.0)
    {
      int v15 = llround(v12);
      int v13 = v29 - v15;
      if (v29 <= v15)
      {
        int v16 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)int buf = 67240192;
          *(_DWORD *)&uint8_t buf[4] = v13;
          _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "#cp,startEmergencyPosition timeout adjustment,out of range,%{public}d", buf, 8u);
        }
        int v13 = 1;
      }
    }
    __int16 v17 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 134349568;
      *(double *)&uint8_t buf[4] = v12;
      *(_WORD *)&unsigned char buf[12] = 1026;
      *(_DWORD *)uint64_t v41 = v29;
      *(_WORD *)&void v41[4] = 1026;
      *(_DWORD *)__int16 v42 = v13;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "#cp,startEmergencyPosition timeout adjustment,age,%{public}.4f,prev,%{public}hu,resolved,%{public}d", buf, 0x18u);
    }
    unsigned __int16 v29 = v13;
    if ((*(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) - 201) > 1)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      v38[0] = off_100106AB8;
      v38[1] = a1;
      v38[3] = v38;
      (*(void (**)(uint64_t, uint8_t *, void *))(*(void *)v23 + 328))(v23, v27, v38);
      int v22 = v38;
    }
    else
    {
      __int16 v24 = 257;
      unint64_t v25 = 0xBFF0000000000000;
      int v26 = 0;
      if ((*(unsigned char *)(a2 + 392) & 0x80) != 0)
      {
        int v18 = *(const proto::gnss::Emergency::CplaneContext **)(a2 + 312);
        if (!v18) {
          int v18 = *(const proto::gnss::Emergency::CplaneContext **)(proto::gpsd::Request::default_instance_ + 312);
        }
        __int16 v19 = proto::gnss::Emergency::CplaneContext::CplaneContext((proto::gnss::Emergency::CplaneContext *)buf, v18);
        ProtobufUtil::fromProtobuf((uint64_t)v19, (uint64_t)&v24);
        *(void *)int buf = &off_10010A820;
        proto::gnss::Emergency::CplaneContext::SharedDtor(buf);
        wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)buf);
      }
      int v20 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 67241472;
        *(_DWORD *)&uint8_t buf[4] = v24;
        *(_WORD *)&uint8_t buf[8] = 1026;
        *(_DWORD *)&buf[10] = HIBYTE(v24);
        *(_WORD *)uint64_t v41 = 1026;
        *(_DWORD *)&v41[2] = v26;
        *(_WORD *)__int16 v42 = 1026;
        *(_DWORD *)&v42[2] = HIBYTE(v26);
        __int16 v43 = 1026;
        int v44 = BYTE1(v26);
        __int16 v45 = 1026;
        int v46 = BYTE2(v26);
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,#cp,cplaneContext,heloEnabled,%{public}d,cplane_early_return,%{public}d,include1xMsb,%{public}d,useCdmaTimeForMeas,%{public}d,optimizeGnssMeasWith1xMsb,%{public}d,optimizeAfltMeasWith1xMsb,%{public}d", buf, 0x26u);
      }
      uint64_t v21 = *(void *)(a1 + 8);
      v39[0] = off_100106A38;
      v39[1] = a1;
      v39[3] = v39;
      (*(void (**)(uint64_t, uint8_t *, __int16 *, void *))(*(void *)v21 + 320))(v21, v27, &v24, v39);
      int v22 = v39;
    }
    return sub_100019B54(v22);
  }
  else
  {
    unint64_t v8 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v27 = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "#gdm,#nilr,#cp,PositionRequest payload is missing", v27, 2u);
    }
    return (void *)sub_100013210(*(void *)(a4 + 24), 4);
  }
}

void sub_100016A58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_100019B54(va);
  _Unwind_Resume(a1);
}

void *sub_100016A80(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(unsigned char *)(a1 + 1897) = 0;
  if ((a3 & 2) != 0)
  {
    uint64_t v7 = *(void *)(a1 + 8);
    v9[0] = off_100106B38;
    v9[1] = a1;
    v9[3] = v9;
    (*(void (**)(uint64_t, uint64_t, void *))(*(void *)v7 + 336))(v7, a2, v9);
    return sub_100019B54(v9);
  }
  else
  {
    uint64_t v5 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)unint64_t v8 = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "#gdm,#nilr,#cp,session_id is missing", v8, 2u);
    }
    return (void *)sub_100013210(*(void *)(a4 + 24), 4);
  }
}

void sub_100016B94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100019B54((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_100016BB0(uint64_t a1)
{
  *(unsigned char *)a1 = -1;
  uint64_t v1 = 4;
  *(void *)&long long v2 = 0x8000000080000000;
  *((void *)&v2 + 1) = 0x8000000080000000;
  do
  {
    uint64_t v3 = a1 + v1;
    *(_OWORD *)uint64_t v3 = xmmword_1000E3260;
    *(_OWORD *)(v3 + 16) = v2;
    *(_OWORD *)(v3 + 32) = xmmword_1000E3270;
    *(void *)(v3 + 48) = 0x8000800080008000;
    *(_DWORD *)(v3 + 56) = 0x80000000;
    *(_WORD *)(v3 + 60) = -1;
    *(_DWORD *)(v3 + 64) = -1;
    *(unsigned char *)(v3 + 68) = 127;
    *(_DWORD *)(v3 + 72) = -1;
    v1 += 96;
    *(unsigned char *)(v3 + 76) = -1;
  }
  while (v3 + 96 != a1 + 1540);
  *(_DWORD *)(a1 + 1540) = -1;
  double result = NAN;
  *(void *)(a1 + 1544) = -1;
  return result;
}

double sub_100016C34(uint64_t a1)
{
  uint64_t v1 = 0;
  *(_DWORD *)a1 = -1;
  *(unsigned char *)(a1 + 4) = -1;
  *(_DWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 12) = -1;
  *(_DWORD *)(a1 + 16) = -1;
  *(_WORD *)(a1 + 20) = -1;
  *(void *)(a1 + 24) = -1;
  *(_WORD *)(a1 + 32) = -1;
  *(_DWORD *)(a1 + 36) = -1;
  do
  {
    uint64_t v2 = a1 + v1;
    *(void *)(v2 + 40) = 0xFFFFFFFF7FFFFFFFLL;
    *(unsigned char *)(v2 + 48) = -1;
    *(_DWORD *)(v2 + 50) = -1;
    *(_WORD *)(v2 + 54) = -1;
    v1 += 20;
  }
  while (v1 != 320);
  *(unsigned char *)(a1 + 360) = -1;
  *(_DWORD *)(a1 + 364) = -1;
  double result = NAN;
  *(void *)(a1 + 368) = -1;
  return result;
}

void sub_100016CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(a2 + 392);
  if ((v4 & 0x2000) != 0 && (v4 & 0x400) != 0 && (size_t v7 = *(unsigned int *)(a2 + 328), (int)v7 > 0))
  {
    sub_100013210(*(void *)(a3 + 24), 1);
    __int16 v48 = 0;
    char v49 = 0;
    char v50 = 0;
    char v53 = 0;
    long long v54 = 0u;
    memset(v55, 0, sizeof(v55));
    uint64_t v56 = 0;
    v47[0] = 0;
    *(_DWORD *)((char *)v47 + 3) = 0;
    long long v51 = 0u;
    memset(v52, 0, 38);
    std::string __p = 0;
    __int16 v45 = 0;
    int v46 = 0;
    sub_100017B68((unint64_t *)&__p, v7);
    for (uint64_t i = 0; i != v7; ++i)
    {
      if (i >= *(int *)(a2 + 328))
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v29);
      }
      int v9 = *(_DWORD *)(*(void *)(a2 + 320) + 4 * i);
      int v10 = v45;
      if (v45 >= v46)
      {
        unint64_t v12 = (unint64_t)__p;
        uint64_t v13 = v45 - (unsigned char *)__p;
        uint64_t v14 = v45 - (unsigned char *)__p + 1;
        if (v14 < 0) {
          sub_100007204();
        }
        unint64_t v15 = v46 - (unsigned char *)__p;
        if (2 * (v46 - (unsigned char *)__p) > (unint64_t)v14) {
          uint64_t v14 = 2 * v15;
        }
        if (v15 >= 0x3FFFFFFFFFFFFFFFLL) {
          size_t v16 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          size_t v16 = v14;
        }
        if (v16) {
          __int16 v17 = (char *)operator new(v16);
        }
        else {
          __int16 v17 = 0;
        }
        int v18 = &v17[v13];
        __int16 v19 = &v17[v13];
        *__int16 v19 = v9;
        int v11 = v19 + 1;
        if (v10 != (char *)v12)
        {
          int v20 = &v10[~v12];
          do
          {
            char v21 = *--v10;
            (v20--)[(void)v17] = v21;
          }
          while (v10 != (char *)v12);
          int v10 = (char *)__p;
          int v18 = v17;
        }
        std::string __p = v18;
        __int16 v45 = v11;
        int v46 = &v17[v16];
        if (v10) {
          operator delete(v10);
        }
      }
      else
      {
        *__int16 v45 = v9;
        int v11 = v10 + 1;
      }
      __int16 v45 = v11;
    }
    *(void *)unsigned __int16 v29 = &off_10010DB88;
    long long v30 = 0u;
    long long v42 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    long long v38 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    LODWORD(v30) = 16;
    int v22 = *(_DWORD *)(a2 + 364);
    int v43 = 134217729;
    DWORD2(v42) = v22;
    int v23 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 400))();
    __int16 v24 = qword_100114840;
    if (v23)
    {
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)int buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,#supl,Supl Init Decode Success", buf, 2u);
      }
      v43 |= 0x1000000u;
      if (!(void)v41) {
        operator new();
      }
      ProtobufUtil::toProtobuf((uint64_t)v47, v41);
      int v25 = *(_DWORD *)(a2 + 300);
      v43 |= 0x2000000u;
      DWORD2(v41) = v25;
      int v26 = 1;
    }
    else if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)int buf = 0;
      int v26 = 2;
      _os_log_error_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_ERROR, "#gdm,#nilr,#supl,Supl Init Decode failure", buf, 2u);
    }
    else
    {
      int v26 = 2;
    }
    v43 |= 0x4000000u;
    HIDWORD(v41) = v26;
    sub_10000A630(a1, (uint64_t)v29);
    *(void *)unsigned __int16 v29 = &off_10010DB88;
    proto::gpsd::Indication::SharedDtor(v29);
    wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v29);
    if (__p)
    {
      __int16 v45 = (char *)__p;
      operator delete(__p);
    }
    if (*(void *)&v55[3])
    {
      *(void *)&v55[5] = *(void *)&v55[3];
      operator delete(*(void **)&v55[3]);
    }
    if (SHIBYTE(v55[2]) < 0) {
      operator delete(*(void **)((char *)&v54 + 4));
    }
    if (*(void *)&v52[3])
    {
      *(void *)&v52[5] = *(void *)&v52[3];
      operator delete(*(void **)&v52[3]);
    }
    if (SHIBYTE(v52[2]) < 0) {
      operator delete(*(void **)((char *)&v51 + 4));
    }
  }
  else
  {
    uint64_t v5 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned __int16 v29 = 0;
      _os_log_fault_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "#gdm,#nilr,#supl,DECODE_SUPL_INIT malformed payload", v29, 2u);
    }
    sub_100013210(*(void *)(a3 + 24), 4);
  }
}

void sub_10001713C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43)
{
  proto::gpsd::Indication::~Indication((proto::gpsd::Indication *)&a13);
  if (__p)
  {
    a43 = (uint64_t)__p;
    operator delete(__p);
  }
  sub_100017C24(v43 - 240);
  _Unwind_Resume(a1);
}

void sub_100017190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int16 v70 = -1;
  v71[1] = 0;
  uint64_t v72 = 0;
  v71[0] = 0;
  unsigned __int8 v73 = 0;
  uint64_t v75 = 0;
  uint64_t v76 = 0;
  uint64_t v74 = 0;
  __int16 v77 = 0;
  char v78 = 1;
  __int16 v79 = 257;
  unint64_t v80 = 0xBFF0000000000000;
  if ((*(unsigned char *)(a2 + 393) & 0x40) != 0)
  {
    uint64_t v6 = *(const proto::gnss::Emergency::SuplContext **)(a2 + 368);
    if (!v6) {
      uint64_t v6 = *(const proto::gnss::Emergency::SuplContext **)(proto::gpsd::Request::default_instance_ + 368);
    }
    proto::gnss::Emergency::SuplContext::SuplContext((proto::gnss::Emergency::SuplContext *)buf, v6);
    ProtobufUtil::fromProtobuf((std::string *)buf, (uint64_t)&v70);
    if ((v88[8] & 0x20) != 0) {
      std::string::operator=((std::string *)(a1 + 2104), *(const std::string **)&v88[5]);
    }
    *(void *)int buf = &off_100108930;
    proto::gnss::Emergency::SuplContext::SharedDtor(buf);
    wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)buf);
  }
  size_t v7 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    if (v76 >= 0) {
      unint64_t v8 = &v74;
    }
    else {
      unint64_t v8 = v74;
    }
    int v9 = (void **)v71[0];
    if (v72 >= 0) {
      int v9 = v71;
    }
    int v10 = (void *)(a1 + 2104);
    if (*(char *)(a1 + 2127) < 0) {
      int v10 = (void *)*v10;
    }
    *(_DWORD *)int buf = 67110659;
    *(_DWORD *)&uint8_t buf[4] = v79;
    __int16 v85 = 2081;
    uint64_t v86 = v8;
    __int16 v87 = 1024;
    v88[0] = v73;
    LOWORD(v88[1]) = 1024;
    *(_DWORD *)((char *)&v88[1] + 2) = v70;
    HIWORD(v88[2]) = 2081;
    *(void *)&v88[3] = v9;
    LOWORD(v88[5]) = 1024;
    *(_DWORD *)((char *)&v88[5] + 2) = HIBYTE(v79);
    HIWORD(v88[6]) = 2080;
    *(void *)&v88[7] = v10;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,emergContext,heloEnabled,%d,imsi,%{private}s,supl_enable_msa,%d,suplPort,%d,suplServer,%{private}s,cplane_early_return,%d,nsuuid,%s", buf, 0x38u);
    size_t v7 = qword_100114840;
  }
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,#supl,SET_SUPL_INIT", buf, 2u);
  }
  size_t v11 = *(unsigned int *)(a2 + 328);
  if ((int)v11 >= 1 && (*(unsigned char *)(a2 + 393) & 0x10) != 0)
  {
    size_t __sz = *(unsigned int *)(a2 + 352);
    if ((int)__sz >= 1)
    {
      __int16 v85 = 0;
      LOBYTE(v86) = 0;
      BYTE6(v86) = 0;
      char v89 = 0;
      long long v90 = 0u;
      memset(v91, 0, sizeof(v91));
      uint64_t v92 = 0;
      *(_DWORD *)int buf = 0;
      *(_DWORD *)&buf[3] = 0;
      memset(v88, 0, 54);
      std::string __p = 0;
      uint64_t v68 = 0;
      uint64_t v69 = 0;
      sub_100017B68((unint64_t *)&__p, v11);
      uint64_t v64 = (std::mutex *)a3;
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (i >= *(int *)(a2 + 328))
        {
          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
          wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v81);
        }
        int v13 = *(_DWORD *)(*(void *)(a2 + 320) + 4 * i);
        uint64_t v14 = v68;
        if (v68 >= v69)
        {
          unint64_t v16 = (unint64_t)__p;
          uint64_t v17 = v68 - (unsigned char *)__p;
          uint64_t v18 = v68 - (unsigned char *)__p + 1;
          if (v18 < 0) {
            sub_100007204();
          }
          unint64_t v19 = v69 - (unsigned char *)__p;
          if (2 * (v69 - (unsigned char *)__p) > (unint64_t)v18) {
            uint64_t v18 = 2 * v19;
          }
          if (v19 >= 0x3FFFFFFFFFFFFFFFLL) {
            size_t v20 = 0x7FFFFFFFFFFFFFFFLL;
          }
          else {
            size_t v20 = v18;
          }
          if (v20) {
            char v21 = (char *)operator new(v20);
          }
          else {
            char v21 = 0;
          }
          int v22 = &v21[v17];
          int v23 = &v21[v17];
          *int v23 = v13;
          unint64_t v15 = v23 + 1;
          if (v14 != (char *)v16)
          {
            __int16 v24 = &v14[~v16];
            do
            {
              char v25 = *--v14;
              (v24--)[(void)v21] = v25;
            }
            while (v14 != (char *)v16);
            uint64_t v14 = (char *)__p;
            int v22 = v21;
          }
          std::string __p = v22;
          uint64_t v68 = v15;
          uint64_t v69 = &v21[v20];
          if (v14) {
            operator delete(v14);
          }
        }
        else
        {
          *uint64_t v68 = v13;
          unint64_t v15 = v14 + 1;
        }
        uint64_t v68 = v15;
      }
      SuplPduLog::traceSuplPdu((SuplPduLog *)__p, (const unsigned __int8 *)(v15 - (unsigned char *)__p), 1);
      if ((*(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) - 201) > 1)
      {
        unsigned int v45 = *(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) - 103;
        if (v45 > 4 || ((1 << v45) & 0x19) == 0) {
          goto LABEL_98;
        }
        uint64_t v46 = *(void *)(a1 + 8);
        sub_1000205AC((uint64_t)v82, (uint64_t)v64);
        (*(void (**)(uint64_t, void **, void *))(*(void *)v46 + 416))(v46, &__p, v82);
        sub_100019B54(v82);
        std::mutex::lock((std::mutex *)(a1 + 2152));
        uint64_t v65 = (std::mutex *)(a1 + 2152);
        *(unsigned char *)(a1 + 2100) = *(unsigned char *)(a2 + 360);
        uint64_t v47 = (unint64_t *)(a1 + 2128);
        *(void *)(a1 + 2136) = *(void *)(a1 + 2128);
        sub_100017B68((unint64_t *)(a1 + 2128), __sz);
        for (uint64_t j = 0; j != __sz; ++j)
        {
          if (j >= *(int *)(a2 + 352))
          {
            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v81);
          }
          int v49 = *(_DWORD *)(*(void *)(a2 + 344) + 4 * j);
          char v50 = *(unsigned char **)(a1 + 2136);
          unint64_t v51 = *(void *)(a1 + 2144);
          if ((unint64_t)v50 >= v51)
          {
            unint64_t v53 = *v47;
            long long v54 = &v50[-*v47];
            unint64_t v55 = (unint64_t)(v54 + 1);
            if ((uint64_t)(v54 + 1) < 0) {
              sub_100007204();
            }
            unint64_t v56 = v51 - v53;
            if (2 * v56 > v55) {
              unint64_t v55 = 2 * v56;
            }
            if (v56 >= 0x3FFFFFFFFFFFFFFFLL) {
              size_t v57 = 0x7FFFFFFFFFFFFFFFLL;
            }
            else {
              size_t v57 = v55;
            }
            if (v57) {
              id v58 = (char *)operator new(v57);
            }
            else {
              id v58 = 0;
            }
            uint64_t v59 = &v54[(void)v58];
            uint64_t v60 = &v54[(void)v58];
            *uint64_t v60 = v49;
            uint64_t v52 = v60 + 1;
            if (v50 != (unsigned char *)v53)
            {
              uint64_t v61 = &v50[~v53];
              do
              {
                char v62 = *--v50;
                (v61--)[(void)v58] = v62;
              }
              while (v50 != (unsigned char *)v53);
              char v50 = (unsigned char *)*v47;
              uint64_t v59 = v58;
            }
            *(void *)(a1 + 2128) = v59;
            *(void *)(a1 + 2136) = v52;
            *(void *)(a1 + 2144) = &v58[v57];
            if (v50) {
              operator delete(v50);
            }
          }
          else
          {
            *char v50 = v49;
            uint64_t v52 = v50 + 1;
          }
          *(void *)(a1 + 2136) = v52;
        }
      }
      else
      {
        uint64_t v26 = HIBYTE(v76);
        if (v76 < 0) {
          uint64_t v26 = v75;
        }
        if (!v26)
        {
          uint64_t v63 = qword_100114840;
          if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)long long v81 = 0;
            _os_log_error_impl((void *)&_mh_execute_header, v63, OS_LOG_TYPE_ERROR, "#gdm,#nilr,#supl,SET_SUPL_INIT received without valid IMSI", v81, 2u);
          }
          sub_100013210(*(void *)&v64->__m_.__opaque[16], 4);
          goto LABEL_98;
        }
        uint64_t v27 = *(void *)(a1 + 8);
        sub_1000205AC((uint64_t)v83, (uint64_t)v64);
        (*(void (**)(uint64_t, void **, unsigned __int16 *, void *))(*(void *)v27 + 408))(v27, &__p, &v70, v83);
        sub_100019B54(v83);
        std::mutex::lock((std::mutex *)(a1 + 2152));
        uint64_t v65 = (std::mutex *)(a1 + 2152);
        *(unsigned char *)(a1 + 2100) = *(unsigned char *)(a2 + 360);
        int v28 = (unint64_t *)(a1 + 2128);
        *(void *)(a1 + 2136) = *(void *)(a1 + 2128);
        sub_100017B68((unint64_t *)(a1 + 2128), __sz);
        for (uint64_t k = 0; k != __sz; ++k)
        {
          if (k >= *(int *)(a2 + 352))
          {
            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v81);
          }
          int v30 = *(_DWORD *)(*(void *)(a2 + 344) + 4 * k);
          long long v31 = *(unsigned char **)(a1 + 2136);
          unint64_t v32 = *(void *)(a1 + 2144);
          if ((unint64_t)v31 >= v32)
          {
            unint64_t v34 = *v28;
            long long v35 = &v31[-*v28];
            unint64_t v36 = (unint64_t)(v35 + 1);
            if ((uint64_t)(v35 + 1) < 0) {
              sub_100007204();
            }
            unint64_t v37 = v32 - v34;
            if (2 * v37 > v36) {
              unint64_t v36 = 2 * v37;
            }
            if (v37 >= 0x3FFFFFFFFFFFFFFFLL) {
              size_t v38 = 0x7FFFFFFFFFFFFFFFLL;
            }
            else {
              size_t v38 = v36;
            }
            if (v38) {
              long long v39 = (char *)operator new(v38);
            }
            else {
              long long v39 = 0;
            }
            long long v40 = &v35[(void)v39];
            long long v41 = &v35[(void)v39];
            *long long v41 = v30;
            long long v33 = v41 + 1;
            if (v31 != (unsigned char *)v34)
            {
              long long v42 = &v31[~v34];
              do
              {
                char v43 = *--v31;
                (v42--)[(void)v39] = v43;
              }
              while (v31 != (unsigned char *)v34);
              long long v31 = (unsigned char *)*v28;
              long long v40 = v39;
            }
            *(void *)(a1 + 2128) = v40;
            *(void *)(a1 + 2136) = v33;
            *(void *)(a1 + 2144) = &v39[v38];
            if (v31) {
              operator delete(v31);
            }
          }
          else
          {
            *long long v31 = v30;
            long long v33 = v31 + 1;
          }
          *(void *)(a1 + 2136) = v33;
        }
      }
      std::mutex::unlock(v65);
LABEL_98:
      if (__p)
      {
        uint64_t v68 = (char *)__p;
        operator delete(__p);
      }
      if (*(void *)&v91[3]) {
        operator delete(*(void **)&v91[3]);
      }
      if (SHIBYTE(v91[2]) < 0) {
        operator delete(*(void **)((char *)&v90 + 4));
      }
      if (*(void *)&v88[7]) {
        operator delete(*(void **)&v88[7]);
      }
      if (SHIBYTE(v88[6]) < 0) {
        operator delete(*(void **)&v88[1]);
      }
      goto LABEL_108;
    }
  }
  int v44 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)int buf = 0;
    _os_log_error_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_ERROR, "#gdm,#nilr,#supl,SET_SUPL_INIT received without Payload", buf, 2u);
  }
  sub_100013210(*(void *)(a3 + 24), 4);
LABEL_108:
  if (SHIBYTE(v76) < 0) {
    operator delete(v74);
  }
  if (SHIBYTE(v72) < 0) {
    operator delete(v71[0]);
  }
}

void sub_100017A4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  if (__p) {
    operator delete(__p);
  }
  sub_100017C24((uint64_t)&a41);
  sub_100017C88((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void *sub_100017B14(void *a1)
{
  uint64_t v2 = (void *)a1[7];
  if (v2)
  {
    a1[8] = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)a1[4];
  if (v3)
  {
    a1[5] = v3;
    operator delete(v3);
  }
  int v4 = (void *)a1[1];
  if (v4)
  {
    a1[2] = v4;
    operator delete(v4);
  }
  return a1;
}

void sub_100017B68(unint64_t *a1, size_t __sz)
{
  unint64_t v2 = *a1;
  if (a1[2] - *a1 < __sz)
  {
    if ((__sz & 0x8000000000000000) != 0) {
      sub_100007204();
    }
    uint64_t v5 = (char *)a1[1];
    uint64_t v6 = operator new(__sz);
    size_t v7 = &v5[(void)v6 - v2];
    unint64_t v8 = v7;
    if (v5 != (char *)v2)
    {
      int v9 = &v5[~v2];
      do
      {
        char v10 = *--v5;
        (v9--)[(void)v6] = v10;
      }
      while (v5 != (char *)v2);
      unint64_t v8 = v6;
    }
    *a1 = (unint64_t)v8;
    a1[1] = (unint64_t)v7;
    a1[2] = (unint64_t)&v6[__sz];
    if (v2)
    {
      operator delete((void *)v2);
    }
  }
}

uint64_t sub_100017C24(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 112);
  if (v2)
  {
    *(void *)(a1 + 120) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  uint64_t v3 = *(void **)(a1 + 48);
  if (v3)
  {
    *(void *)(a1 + 56) = v3;
    operator delete(v3);
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  return a1;
}

uint64_t sub_100017C88(uint64_t a1)
{
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

unint64_t sub_100017CCC(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) - 103;
  BOOL v5 = v4 > 4;
  int v6 = (1 << v4) & 0x19;
  if (v5 || v6 == 0)
  {
    GpsdPlatformInfo::instance(0);
    return 0;
  }
  else
  {
    unsigned int v8 = *(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) - 103;
    BOOL v5 = v8 > 4;
    int v9 = (1 << v8) & 0x19;
    if (v5 || v9 == 0)
    {
      unsigned __int8 v13 = 0;
      uint64_t v14 = 0;
    }
    else
    {
      if ((*(unsigned char *)(a2 + 391) & 8) == 0) {
        goto LABEL_16;
      }
      uint64_t v11 = *(void *)(a2 + 216);
      if (!v11) {
        uint64_t v11 = *(void *)(proto::gpsd::Request::default_instance_ + 216);
      }
      if (*(unsigned char *)(v11 + 16))
      {
        unint64_t v12 = (id *)GpsdPreferences::instance(0);
        if (GpsdPreferences::useB14LteFilterSettingsForB13(v12)) {
          unsigned __int8 v13 = 2;
        }
        else {
          unsigned __int8 v13 = 1;
        }
      }
      else
      {
LABEL_16:
        unsigned __int8 v13 = 0;
      }
      uint64_t v14 = *(unsigned __int8 *)(a1 + 1952);
    }
    unint64_t v16 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      int v18 = 134349824;
      unint64_t v15 = v13 | (unint64_t)(v14 << 32);
      unint64_t v19 = v15;
      __int16 v20 = 1026;
      int v21 = v13;
      __int16 v22 = 1026;
      int v23 = 0;
      __int16 v24 = 1026;
      int v25 = v14;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#gdm,decodeCoexConfig,#coexConfig,0x%{public}lluX,lte,%{public}d,blanking,%{public}d,bitMask,%{public}uX", (uint8_t *)&v18, 0x1Eu);
    }
    else
    {
      return v13 | (unint64_t)(v14 << 32);
    }
  }
  return v15;
}

void sub_100017E64(uint64_t a1)
{
  unint64_t v2 = *(NSObject **)(a1 + 1904);
  if (v2)
  {
    dispatch_source_cancel(v2);

    *(void *)(a1 + 1904) = 0;
  }
  if (*(unsigned char *)(a1 + 1848))
  {
    uint64_t v3 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_WORD *)int buf = 0;
    unsigned int v4 = "#gdm,stopTimer,detected overlap with regular session";
LABEL_12:
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, v4, buf, 2u);
    return;
  }
  if (*(unsigned char *)(a1 + 1896))
  {
    uint64_t v3 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_WORD *)int buf = 0;
    unsigned int v4 = "#gdm,stopTimer,detected overlap with emergency session";
    goto LABEL_12;
  }
  if (*(unsigned char *)(a1 + 1897))
  {
    uint64_t v3 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_WORD *)int buf = 0;
    unsigned int v4 = "#gdm,stopTimer,detected overlap with emergency pos report";
    goto LABEL_12;
  }
  BOOL v5 = (id *)GpsdPreferences::instance(0);
  if (GpsdPreferences::bigPowerSwitch(v5))
  {
    v27[3] = 0;
    GnssHal::GpioEmbedded::GpioEmbedded(buf, (uint64_t)v27);
    sub_100018B88(v27);
    GnssHal::GpioEmbedded::setResetLow((GnssHal::GpioEmbedded *)buf);
    GnssHal::GpioEmbedded::~GpioEmbedded((GnssHal::GpioEmbedded *)buf);
  }
  *(void *)int buf = &off_10010DB88;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  int v26 = 1;
  LODWORD(v13) = 20;
  unsigned int v6 = gnss::Convert::toProtobuf(*(_DWORD *)(a1 + 1900));
  if (v6 >= 0xA) {
    __assert_rtn("set_stop_status", "GpsdProtocol.pb.h", 8198, "::proto::gnss::Result_IsValid(value)");
  }
  v26 |= 0x2000u;
  HIDWORD(v18) = v6;
  sub_10000A630(a1, (uint64_t)buf);
  VendorLogger::notifyStop((VendorLogger *)(a1 + 24));
  size_t v7 = qword_100114840;
  if (*(_DWORD *)(a1 + 1900) != 1)
  {
    int v9 = *(_DWORD *)(a1 + 1900);
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
    {
      LODWORD(v10[0]) = 67240192;
      HIDWORD(v10[0]) = v9;
      _os_log_fault_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "#gdm,stopTimer,failure,%{public}d", (uint8_t *)v10, 8u);
      int v9 = *(_DWORD *)(a1 + 1900);
    }
    LODWORD(v10[0]) = 2;
    HIDWORD(v10[0]) = v9;
    memset(&v10[1], 0, 24);
    sub_1000033AC(v11, "stopCompletedFailure");
    sub_10000F004();
  }
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v10[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#gdm,stopTimer,success", (uint8_t *)v10, 2u);
  }
  sub_100010DAC((void *)a1);
  unsigned int v8 = (id *)GpsdPreferences::instance(0);
  if (GpsdPreferences::bigPowerSwitch(v8))
  {
    sub_1000033AC(v10, "#bps");
    sub_10000A0EC(a1, v10, 1);
    sub_10000F074(v10);
  }
  *(void *)int buf = &off_10010DB88;
  proto::gpsd::Indication::SharedDtor(buf);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)buf);
}

void sub_1000181B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  proto::gpsd::Indication::~Indication((proto::gpsd::Indication *)&a23);
  _Unwind_Resume(a1);
}

void sub_10001822C(uint64_t a1)
{
}

void *sub_100018234(void *a1, uint64_t a2)
{
  sub_10001E9A4((uint64_t)v4, a2);
  sub_100023AA4(v4, a1);
  sub_100018B04(v4);
  return a1;
}

uint64_t sub_1000182A8(uint64_t a1, int a2)
{
  int v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_100003600();
  }
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)v2 + 48))(v2, &v4);
}

void sub_1000182FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  double v3 = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)a1) * 0.000000001;
  double v4 = v3 - *(double *)(v2 + 1920);
  BOOL v5 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = *(unsigned __int8 *)(v2 + 1913);
    LODWORD(v9) = 67240448;
    HIDWORD(v9) = v6;
    LOWORD(v10) = 2050;
    *(double *)((char *)&v10 + 2) = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#gdm,pvtWatchdog,isKicked,%{public}d,actualInterval,%{public}.3f", (uint8_t *)&v9, 0x12u);
  }
  if (vabdd_f64(v4, (double)*(int *)(a1 + 40)) <= 2.0)
  {
    if (!*(unsigned char *)(v2 + 1913))
    {
      unsigned int v8 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        LOWORD(v9) = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "#gdm,pvtWatchdog,triggered", (uint8_t *)&v9, 2u);
      }
      uint64_t v9 = 0x600000006;
      uint64_t v11 = 0;
      long long v10 = 0uLL;
      sub_1000033AC(&__p, "PvtmWatchDogTimeout");
      sub_10000E6CC(v2, (int *)&v9);
      if (v13 < 0) {
        operator delete(__p);
      }
      if (SHIBYTE(v11) < 0) {
        operator delete((void *)v10);
      }
    }
  }
  else
  {
    size_t v7 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#gdm,pvtWatchdog,ignoring due to timer interval discrepancy", (uint8_t *)&v9, 2u);
    }
  }
  *(unsigned char *)(v2 + 1913) = 0;
  *(double *)(v2 + 1920) = v3;
}

void sub_1000184D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

void sub_100018504(uint64_t a1, int a2)
{
  double v4 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    LODWORD(__p[0]) = 67240192;
    HIDWORD(__p[0]) = a2;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "handleXpcClientEvent,event,%{public}d", (uint8_t *)__p, 8u);
  }
  switch(a2)
  {
    case 0:
      BOOL v5 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(__p[0]) = 0;
        _os_log_debug_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "#gdm,handleClientConnection", (uint8_t *)__p, 2u);
      }
      sub_10000A228();
    case 1:
      sub_10000A04C(a1);
    case 2:
      int v6 = qword_100114838;
      if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(__p[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#gdm,handleTerminationImminentFromSystem", (uint8_t *)__p, 2u);
      }
      sub_1000033AC(__p, "handleTerminationImminentFromSystem");
      sub_10000A0EC(a1, (uint64_t *)__p, 1);
      if (v8 < 0) {
        operator delete(__p[0]);
      }
      break;
    case 3:
      sub_10000A3C0(a1);
    default:
      return;
  }
}

void sub_1000186B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1000186E8(unsigned char *__dst, void *__src, unint64_t a3)
{
  BOOL v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8) {
      sub_100003460();
    }
    uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a3 | 7) != 0x17) {
      uint64_t v6 = a3 | 7;
    }
    uint64_t v7 = v6 + 1;
    char v8 = operator new(v6 + 1);
    v5[1] = a3;
    v5[2] = v7 | 0x8000000000000000;
    void *v5 = v8;
    BOOL v5 = v8;
  }
  else
  {
    __dst[23] = a3;
  }

  return memmove(v5, __src, a3 + 1);
}

uint64_t sub_100018788(uint64_t result, uint64_t a2)
{
  for (uint64_t i = *(void *)(result + 8); i != a2; i -= 176)
  {
    double v3 = *(void **)(i - 16);
    *(void *)(i - 16) = 0;
    if (v3)
    {
      double v4 = (void *)v3[16];
      if (v4)
      {
        v3[17] = v4;
        operator delete(v4);
      }
      BOOL v5 = (void *)v3[12];
      if (v5)
      {
        v3[13] = v5;
        operator delete(v5);
      }
      operator delete();
    }
  }
  *(void *)(result + 8) = a2;
  return result;
}

uint64_t sub_100018814(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 264);
  *(void *)(a1 + 264) = 0;
  if (v2) {
    operator delete();
  }
  uint64_t v3 = *(void *)(a1 + 256);
  *(void *)(a1 + 256) = 0;
  if (v3) {
    operator delete();
  }
  uint64_t v4 = *(void *)(a1 + 248);
  *(void *)(a1 + 248) = 0;
  if (v4) {
    operator delete();
  }
  uint64_t v5 = *(void *)(a1 + 240);
  *(void *)(a1 + 240) = 0;
  if (v5) {
    operator delete();
  }
  uint64_t v6 = *(void *)(a1 + 232);
  *(void *)(a1 + 232) = 0;
  if (v6) {
    operator delete();
  }
  uint64_t v7 = *(void *)(a1 + 224);
  *(void *)(a1 + 224) = 0;
  if (v7) {
    operator delete();
  }
  char v8 = *(void **)(a1 + 200);
  if (v8)
  {
    *(void *)(a1 + 208) = v8;
    operator delete(v8);
  }
  long long v10 = (void **)(a1 + 176);
  sub_100018930(&v10);
  long long v10 = (void **)(a1 + 152);
  sub_100018A2C(&v10);
  return a1;
}

void sub_100018930(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 17;
        sub_1000189B4(v4);
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_1000189B4(void *a1)
{
  uint64_t v2 = (void *)a1[14];
  if (v2)
  {
    a1[15] = v2;
    operator delete(v2);
  }
  uint64_t v3 = a1[6];
  a1[6] = 0;
  if (v3) {
    operator delete();
  }
  uint64_t v4 = (void *)a1[3];
  if (v4)
  {
    a1[4] = v4;
    operator delete(v4);
  }
}

void sub_100018A2C(void ***a1)
{
  uint64_t v2 = (uint64_t *)*a1;
  if (*v2)
  {
    sub_100018788((uint64_t)v2, *v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void *sub_100018A80(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_100018B04(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_100018B88(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_100018C0C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_100018C90(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_100018D14(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_100018D98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_100018E30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t *sub_100018EC8(uint64_t *result, uint64_t a2)
{
  uint64_t v2 = *result;
  std::logic_error *result = a2;
  if (v2)
  {
    sub_100002F8C(v2);
    operator delete();
  }
  return result;
}

uint64_t *sub_100018F2C(uint64_t *result, uint64_t a2)
{
  uint64_t v2 = *result;
  std::logic_error *result = a2;
  if (v2)
  {
    sub_10000357C((void *)(v2 + 24));
    uint64_t v3 = *(std::__shared_weak_count **)(v2 + 8);
    if (v3) {
      sub_100003508(v3);
    }
    operator delete();
  }
  return result;
}

void *sub_100018F98(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_10001901C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1000190A0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100019128()
{
}

void *sub_10001913C(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100104E50;
  result[1] = v3;
  return result;
}

uint64_t sub_100019184(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100104E50;
  a2[1] = v2;
  return result;
}

void sub_1000191B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = **(NSObject ***)(v1 + 1936);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100010EA0;
  block[3] = &unk_100104D40;
  block[4] = v1;
  dispatch_async(v2, block);
  double v4 = (double)gpsd::util::getMachContinuousTimeNs(v3) * 0.000000001;
  double v5 = *(double *)(v1 + 1976);
  if (v4 >= v5)
  {
    if (v4 > v5 + 600.0)
    {
      *(_DWORD *)int buf = 8;
      LODWORD(v16) = (int)(v4 - v5 + 0.5);
      sub_1000033AC((double *)((char *)&v16 + 4), "DeviceQueueHang");
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      char v8 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
      {
        uint64_t v9 = *(void *)(v1 + 1976);
        *(_DWORD *)uint64_t v11 = 134349312;
        double v12 = v4;
        __int16 v13 = 2050;
        uint64_t v14 = v9;
        _os_log_fault_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_FAULT, "#dqwdt,timeout,now,%{public}.2f,last,%{public}.2f", v11, 0x16u);
      }
      sub_10000F004();
    }
    if (v4 > v5 + 300.0)
    {
      uint64_t v7 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)int buf = 134349312;
        double v16 = v4;
        __int16 v17 = 2050;
        double v18 = v5;
        _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "#dqwdt,deviceQueueMayHang,now,%{public}.2f,last,%{public}.2f", buf, 0x16u);
      }
    }
  }
  else
  {
    uint64_t v6 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 134349312;
      double v16 = v4;
      __int16 v17 = 2050;
      double v18 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#dqwdt,fLastDeviceQueueKickedMachContSec,invalid,now,%{public}.2f,last,%{public}.2f", buf, 0x16u);
    }
  }
}

void sub_100019404(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a31 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100019438(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100019478()
{
}

BOOL sub_100019484(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if (v2 == v3) {
    return 1;
  }
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3)) {
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  }
  return 0;
}

void sub_1000194D4(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);

  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

void sub_100019540(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);

  operator delete();
}

uint64_t sub_1000195C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 8))();
}

uint64_t *sub_1000195E4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    if ((*(unsigned char *)(v2 + 136) & 1) == 0)
    {
      v6.__ptr_ = 0;
      uint64_t v3 = *(void *)(v2 + 16);
      std::exception_ptr::~exception_ptr(&v6);
      uint64_t v2 = *a1;
      if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
      {
        v7.__cat_ = std::future_category();
        *(void *)&v7.__val_ = 4;
        std::future_error::future_error(&v5, v7);
        sub_1000196C8(&v5);
      }
    }
    if (!atomic_fetch_add((atomic_ullong *volatile)(v2 + 8), 0xFFFFFFFFFFFFFFFFLL)) {
      (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
    }
  }
  return a1;
}

void sub_1000196C8(const std::logic_error *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
  uint64_t v3 = std::logic_error::logic_error(exception, a1);
  v3[1] = a1[1];
}

void sub_100019734(void *a1)
{
}

void sub_100019754(unsigned int a1)
{
  exception = (std::future_error *)__cxa_allocate_exception(0x20uLL);
  v3.__cat_ = std::future_category();
  *(void *)&v3.__val_ = a1;
  std::future_error::future_error(exception, v3);
}

void sub_1000197A8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000197BC(uint64_t a1)
{
  uint64_t v2 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  int v3 = *(_DWORD *)(a1 + 136);
  if ((v3 & 2) != 0) {
    sub_100019754(1u);
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(a1 + 8), 1uLL, memory_order_relaxed);
  *(_DWORD *)(a1 + 136) = v3 | 2;

  std::mutex::unlock(v2);
}

void sub_100019824(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_10001983C()
{
}

void *sub_100019850(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100104F28;
  result[1] = v3;
  return result;
}

uint64_t sub_100019898(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100104F28;
  a2[1] = v2;
  return result;
}

void sub_1000198C4(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_1000198CC(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001990C()
{
}

void *sub_100019918(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1000199A0()
{
}

void *sub_1000199B4(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100104FB8;
  result[1] = v3;
  return result;
}

uint64_t sub_1000199FC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100104FB8;
  a2[1] = v2;
  return result;
}

void sub_100019A28(uint64_t a1, int *a2)
{
  int v2 = *a2;
  sub_100019AA8(**(void **)(a1 + 8), &v2);
}

uint64_t sub_100019A5C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100019A9C()
{
}

void sub_100019AA8(uint64_t a1, int *a2)
{
  if (!a1) {
    sub_100019754(3u);
  }
  double v4 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  if ((*(unsigned char *)(a1 + 136) & 1) != 0
    || (v7.__ptr_ = 0, uint64_t v5 = *(void *)(a1 + 16), std::exception_ptr::~exception_ptr(&v7), v5))
  {
    sub_100019754(2u);
  }
  int v6 = *a2;
  *(_DWORD *)(a1 + 136) |= 5u;
  *(_DWORD *)(a1 + 140) = v6;
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 88));
  std::mutex::unlock(v4);
}

void sub_100019B40(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void *sub_100019B54(void *a1)
{
  int v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100019BDC()
{
}

void *sub_100019BF0(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105048;
  result[1] = v3;
  return result;
}

uint64_t sub_100019C38(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105048;
  a2[1] = v2;
  return result;
}

void sub_100019C64(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2;
  *a2 = 0;
  uint64_t v4 = v3;
  sub_100010BE8(v2, &v4);
  if (v3)
  {
    operator delete();
  }
}

void sub_100019CD8(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete();
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100019D00(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100019D40()
{
}

void *sub_100019D4C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100019DD4()
{
}

void *sub_100019DE8(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1001050D8;
  result[1] = v3;
  return result;
}

uint64_t sub_100019E30(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1001050D8;
  a2[1] = v2;
  return result;
}

void sub_100019E5C(uint64_t a1, int *a2)
{
  int v2 = *a2;
  sub_100019AA8(**(void **)(a1 + 8), &v2);
}

uint64_t sub_100019E90(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100019ED0()
{
}

void sub_100019EE0()
{
}

void *sub_100019EF4(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105158;
  result[1] = v3;
  return result;
}

uint64_t sub_100019F3C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105158;
  a2[1] = v2;
  return result;
}

void sub_100019F68(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v7 = *a2;
  *a2 = 0;
  uint64_t v8 = *a3;
  *a3 = 0;
  *a6 = 0;
  *a7 = 0;
  v12[0] = 0;
  v12[1] = v12;
  v12[2] = 0x3812000000;
  v12[3] = sub_10001A3BC;
  void v12[4] = sub_10001A3CC;
  v12[5] = 0;
  v12[6] = v7;
  v11[0] = 0;
  v11[1] = v11;
  v11[2] = 0x3812000000;
  v11[3] = sub_10001A3F4;
  uint8_t v11[4] = sub_10001A404;
  v11[5] = 0;
  uint64_t v9 = 0;
  v11[6] = v8;
  v10[0] = 0;
  v10[1] = v10;
  v10[2] = 0x3812000000;
  v10[3] = sub_10001A40C;
  uint64_t v10[4] = sub_10001A41C;
  v10[5] = 0;
  operator new();
}

void sub_10001A2CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose((const void *)(v13 - 248), 8);
  sub_10001A660(v12);
  _Block_object_dispose((const void *)(v13 - 192), 8);
  sub_10001A808(v9);
  _Block_object_dispose((const void *)(v13 - 136), 8);
  uint64_t v15 = *(void *)(v13 - 88);
  *(void *)(v13 - 88) = 0;
  if (!v15)
  {
    if (!v10)
    {
      if (v11) {
        sub_10001A724(v11);
      }
      sub_10001A808(&a9);
      _Unwind_Resume(a1);
    }
    operator delete();
  }
  operator delete();
}

uint64_t sub_10001A370(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001A3B0()
{
}

uint64_t sub_10001A3BC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0;
  *(void *)(result + 48) = v2;
  return result;
}

uint64_t sub_10001A3CC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0;
  if (result) {
    operator delete();
  }
  return result;
}

uint64_t sub_10001A3F4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0;
  *(void *)(result + 48) = v2;
  return result;
}

uint64_t *sub_10001A404(uint64_t a1)
{
  return sub_10001A808((uint64_t *)(a1 + 48));
}

uint64_t sub_10001A40C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0;
  *(void *)(result + 48) = v2;
  return result;
}

void ***sub_10001A41C(uint64_t a1)
{
  return sub_10001A660((void ***)(a1 + 48));
}

uint64_t sub_10001A424(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0;
  *(void *)(result + 48) = v2;
  return result;
}

uint64_t sub_10001A434(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0;
  if (result) {
    sub_10001A6D0(result);
  }
  return result;
}

uint64_t sub_10001A44C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0;
  *(void *)(result + 48) = v2;
  return result;
}

uint64_t *sub_10001A45C(uint64_t a1)
{
  uint64_t result = *(uint64_t **)(a1 + 48);
  *(void *)(a1 + 48) = 0;
  if (result) {
    sub_10001A724(result);
  }
  return result;
}

uint64_t sub_10001A474(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0;
  *(void *)(result + 48) = v2;
  return result;
}

uint64_t sub_10001A484(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0;
  if (result) {
    operator delete();
  }
  return result;
}

uint64_t *sub_10001A4AC(void *a1)
{
  uint64_t v1 = a1[10];
  uint64_t v2 = *(void *)(a1[4] + 8);
  uint64_t v3 = *(void *)(v2 + 48);
  *(void *)(v2 + 48) = 0;
  uint64_t v4 = *(void *)(a1[5] + 8);
  uint64_t v5 = *(void *)(v4 + 48);
  *(void *)(v4 + 48) = 0;
  uint64_t v19 = v5;
  uint64_t v20 = v3;
  uint64_t v6 = *(void *)(a1[6] + 8);
  uint64_t v7 = *(void **)(v6 + 48);
  *(void *)(v6 + 48) = 0;
  uint64_t v8 = *(void *)(a1[7] + 8);
  uint64_t v9 = *(void *)(v8 + 48);
  *(void *)(v8 + 48) = 0;
  uint64_t v17 = v9;
  double v18 = v7;
  uint64_t v10 = *(void *)(a1[8] + 8);
  uint64_t v11 = *(uint64_t **)(v10 + 48);
  *(void *)(v10 + 48) = 0;
  uint64_t v12 = *(void *)(a1[9] + 8);
  uint64_t v13 = *(void *)(v12 + 48);
  *(void *)(v12 + 48) = 0;
  uint64_t v15 = v13;
  double v16 = v11;
  sub_10000F100(v1, &v20, &v19, &v18, &v17, &v16, &v15);
  if (v15) {
    operator delete();
  }
  if (v11) {
    sub_10001A724(v11);
  }
  if (v9) {
    sub_10001A6D0(v9);
  }
  sub_10001A660((void ***)&v18);
  uint64_t result = sub_10001A808(&v19);
  if (v3)
  {
    operator delete();
  }
  return result;
}

void sub_10001A5E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va1, a4);
  va_start(va, a4);
  uint64_t v8 = va_arg(va1, void **);
  if (!a2)
  {
    if (!v6)
    {
      if (v5) {
        sub_10001A6D0(v5);
      }
      sub_10001A660((void ***)va);
      sub_10001A808((uint64_t *)va1);
      if (v4) {
        operator delete();
      }
      _Unwind_Resume(a1);
    }
    sub_10001A724(v6);
  }
  operator delete();
}

void ***sub_10001A660(void ***result)
{
  uint64_t v1 = *result;
  uint64_t *result = 0;
  if (v1)
  {
    uint64_t v2 = v1;
    sub_100018930(&v2);
    operator delete();
  }
  return result;
}

void sub_10001A6D0(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }

  operator delete();
}

void sub_10001A724(uint64_t *a1)
{
  uint64_t v2 = a1[4];
  a1[4] = 0;
  if (v2) {
    operator delete();
  }
  uint64_t v3 = a1[3];
  a1[3] = 0;
  if (v3) {
    operator delete();
  }
  uint64_t v4 = a1[2];
  a1[2] = 0;
  if (v4) {
    operator delete();
  }
  uint64_t v5 = a1[1];
  a1[1] = 0;
  if (v5) {
    operator delete();
  }
  uint64_t v6 = *a1;
  *a1 = 0;
  if (v6) {
    operator delete();
  }

  operator delete();
}

uint64_t *sub_10001A808(uint64_t *result)
{
  uint64_t v1 = *result;
  uint64_t *result = 0;
  if (v1)
  {
    uint64_t v2 = (void **)(v1 + 112);
    sub_100018A2C(&v2);
    operator delete();
  }
  return result;
}

void *sub_10001A87C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_10001A900(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10001A99C()
{
}

void *sub_10001A9B0(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105210;
  result[1] = v3;
  return result;
}

uint64_t sub_10001A9F8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105210;
  a2[1] = v2;
  return result;
}

void sub_10001AA24(uint64_t a1, int *a2)
{
  int v2 = *a2;
  sub_100019AA8(**(void **)(a1 + 8), &v2);
}

uint64_t sub_10001AA58(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001AA98()
{
}

void sub_10001AAA8()
{
}

void *sub_10001AABC(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105290;
  result[1] = v3;
  return result;
}

uint64_t sub_10001AB04(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105290;
  a2[1] = v2;
  return result;
}

void sub_10001AB30()
{
  v0 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v1) = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,handleEmergencySummaryReport", (uint8_t *)&v1, 2u);
  }
  uint64_t v1 = &off_10010DB88;
  long long v2 = 0u;
  long long v3 = 0u;
  long long v4 = 0u;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  LODWORD(v2) = 10;
  int v15 = 131073;
  operator new();
}

void sub_10001ACB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
}

uint64_t sub_10001ACD0(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001AD10()
{
}

void *sub_10001AD1C(void *a1)
{
  long long v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10001ADA4()
{
}

void *sub_10001ADB8(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105320;
  result[1] = v3;
  return result;
}

uint64_t sub_10001AE00(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105320;
  a2[1] = v2;
  return result;
}

void sub_10001AE2C(uint64_t a1, int *a2)
{
  int v2 = *a2;
  sub_100019AA8(**(void **)(a1 + 8), &v2);
}

uint64_t sub_10001AE60(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001AEA0()
{
}

void sub_10001AEB0()
{
}

void *sub_10001AEC4(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1001053A0;
  result[1] = v3;
  return result;
}

uint64_t sub_10001AF0C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1001053A0;
  a2[1] = v2;
  return result;
}

void sub_10001AF38()
{
  v0 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v1) = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,#cp,handleEmergencyPositionReport", (uint8_t *)&v1, 2u);
  }
  uint64_t v1 = &off_10010DB88;
  long long v2 = 0u;
  long long v3 = 0u;
  long long v4 = 0u;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  LODWORD(v2) = 11;
  int v15 = 262145;
  operator new();
}

void sub_10001B0A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
}

uint64_t sub_10001B0C0(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001B100()
{
}

void *sub_10001B10C(void *a1)
{
  long long v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10001B194()
{
}

void *sub_10001B1A8(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105430;
  result[1] = v3;
  return result;
}

uint64_t sub_10001B1F0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105430;
  a2[1] = v2;
  return result;
}

void sub_10001B21C(uint64_t a1, int *a2)
{
  int v2 = *a2;
  sub_100019AA8(**(void **)(a1 + 8), &v2);
}

uint64_t sub_10001B250(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001B290()
{
}

void sub_10001B2A0()
{
}

void *sub_10001B2B4(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1001054B0;
  result[1] = v3;
  return result;
}

uint64_t sub_10001B2FC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1001054B0;
  a2[1] = v2;
  return result;
}

void sub_10001B328()
{
  v0 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v1) = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,#cp,handleEmergencyAssistanceNeededReport", (uint8_t *)&v1, 2u);
  }
  uint64_t v1 = &off_10010DB88;
  long long v2 = 0u;
  long long v3 = 0u;
  long long v4 = 0u;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  LODWORD(v2) = 13;
  int v15 = 1048577;
  operator new();
}

void sub_10001B48C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
}

uint64_t sub_10001B4AC(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001B4EC()
{
}

void *sub_10001B4F8(void *a1)
{
  long long v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10001B580()
{
}

void *sub_10001B594(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105540;
  result[1] = v3;
  return result;
}

uint64_t sub_10001B5DC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105540;
  a2[1] = v2;
  return result;
}

void sub_10001B608(uint64_t a1, int *a2)
{
  int v2 = *a2;
  sub_100019AA8(**(void **)(a1 + 8), &v2);
}

uint64_t sub_10001B63C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001B67C()
{
}

void sub_10001B68C()
{
}

void *sub_10001B6A0(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1001055C0;
  result[1] = v3;
  return result;
}

uint64_t sub_10001B6E8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1001055C0;
  a2[1] = v2;
  return result;
}

void sub_10001B714(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  long long v4 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v10) = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,handleEmergencySuplSessionStatusReport", (uint8_t *)&v10, 2u);
  }
  unsigned int v5 = *(_DWORD *)(a2 + 8);
  BOOL v6 = v5 > 0x1E;
  int v7 = (1 << v5) & 0x607C1FF8;
  if (!v6 && v7 != 0)
  {
    long long v9 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v10) = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,#supl Supl End Flush VendorLogger", (uint8_t *)&v10, 2u);
    }
    VendorLogger::notifyStop((VendorLogger *)(v3 + 24));
    VendorLogger::notifyStart((VendorLogger *)(v3 + 24));
  }
  long long v10 = &off_10010DB88;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  LODWORD(v11) = 14;
  int v24 = 8388609;
  operator new();
}

void sub_10001B8FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
}

uint64_t sub_10001B91C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001B95C()
{
}

void *sub_10001B968(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10001B9F0()
{
}

void *sub_10001BA04(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105650;
  result[1] = v3;
  return result;
}

uint64_t sub_10001BA4C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105650;
  a2[1] = v2;
  return result;
}

void sub_10001BA78(uint64_t a1, int *a2)
{
  int v2 = *a2;
  sub_100019AA8(**(void **)(a1 + 8), &v2);
}

uint64_t sub_10001BAAC(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001BAEC()
{
}

void sub_10001BAFC()
{
}

void *sub_10001BB10(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1001056D0;
  result[1] = v3;
  return result;
}

uint64_t sub_10001BB58(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1001056D0;
  a2[1] = v2;
  return result;
}

uint64_t sub_10001BB84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v4) = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,#supl,handleEmergencySuplLocationdIdNeededReport", (uint8_t *)&v4, 2u);
  }
  long long v4 = &off_10010DB88;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  int v18 = 1;
  LODWORD(v5) = 15;
  sub_10000A630(v1, (uint64_t)&v4);
  long long v4 = &off_10010DB88;
  proto::gpsd::Indication::SharedDtor(&v4);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)&v4);
  return 1;
}

void sub_10001BC84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
}

uint64_t sub_10001BCA4(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001BCE4()
{
}

void *sub_10001BCF0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10001BD78()
{
}

void *sub_10001BD8C(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105760;
  result[1] = v3;
  return result;
}

uint64_t sub_10001BDD4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105760;
  a2[1] = v2;
  return result;
}

void sub_10001BE00(uint64_t a1, int *a2)
{
  int v2 = *a2;
  sub_100019AA8(**(void **)(a1 + 8), &v2);
}

uint64_t sub_10001BE34(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001BE74()
{
}

void sub_10001BE84()
{
}

void *sub_10001BE98(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1001057E0;
  result[1] = v3;
  return result;
}

uint64_t sub_10001BEE0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1001057E0;
  a2[1] = v2;
  return result;
}

void sub_10001BF0C()
{
  v0 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v1) = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,#supl,handleEmergencySuplWlanMeasNeededReport", (uint8_t *)&v1, 2u);
  }
  uint64_t v1 = &off_10010DB88;
  long long v2 = 0u;
  long long v3 = 0u;
  long long v4 = 0u;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  LODWORD(v2) = 24;
  int v15 = 268435457;
  operator new();
}

void sub_10001C070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
}

uint64_t sub_10001C090(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001C0D0()
{
}

void *sub_10001C0DC(void *a1)
{
  long long v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10001C164()
{
}

void *sub_10001C178(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105870;
  result[1] = v3;
  return result;
}

uint64_t sub_10001C1C0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105870;
  a2[1] = v2;
  return result;
}

void sub_10001C1EC(uint64_t a1, int *a2)
{
  int v2 = *a2;
  sub_100019AA8(**(void **)(a1 + 8), &v2);
}

uint64_t sub_10001C220(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001C260()
{
}

void sub_10001C270()
{
}

void *sub_10001C284(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1001058F0;
  result[1] = v3;
  return result;
}

uint64_t sub_10001C2CC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1001058F0;
  a2[1] = v2;
  return result;
}

void sub_10001C2F8(uint64_t a1, int *a2)
{
  int v2 = *a2;
  sub_100019AA8(**(void **)(a1 + 8), &v2);
}

uint64_t sub_10001C32C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001C36C()
{
}

void sub_10001C37C()
{
}

void *sub_10001C390(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105970;
  result[1] = v3;
  return result;
}

uint64_t sub_10001C3D8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105970;
  a2[1] = v2;
  return result;
}

void sub_10001C404()
{
  v0 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v1) = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,#cp,handleEmergencyMeasurementReport", (uint8_t *)&v1, 2u);
  }
  uint64_t v1 = &off_10010DB88;
  long long v2 = 0u;
  long long v3 = 0u;
  long long v4 = 0u;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  LODWORD(v2) = 12;
  int v15 = 524289;
  operator new();
}

void sub_10001C56C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
}

uint64_t sub_10001C58C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001C5CC()
{
}

void *sub_10001C5D8(void *a1)
{
  long long v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10001C660()
{
}

void *sub_10001C674(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105A00;
  result[1] = v3;
  return result;
}

uint64_t sub_10001C6BC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105A00;
  a2[1] = v2;
  return result;
}

void sub_10001C6E8(uint64_t a1, int *a2)
{
  int v2 = *a2;
  sub_100019AA8(**(void **)(a1 + 8), &v2);
}

uint64_t sub_10001C71C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001C75C()
{
}

void sub_10001C76C()
{
}

void *sub_10001C780(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105A80;
  result[1] = v3;
  return result;
}

uint64_t sub_10001C7C8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105A80;
  a2[1] = v2;
  return result;
}

void sub_10001C7F4(uint64_t a1, int *a2)
{
  uint64_t v3 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *a2;
    int v5 = *((unsigned __int8 *)a2 + 4);
    int v6 = a2[2];
    int v7 = a2[3];
    int v8 = a2[4];
    int v9 = a2[119];
    int v10 = a2[120];
    int v11 = *((unsigned __int8 *)a2 + 484);
    int v12 = *((unsigned __int8 *)a2 + 485);
    int v13 = *((unsigned __int8 *)a2 + 486);
    int v14 = *((unsigned __int8 *)a2 + 27);
    LODWORD(v15[0]) = 67242753;
    HIDWORD(v15[0]) = v4;
    LOWORD(v15[1]) = 1026;
    *(_DWORD *)((char *)&v15[1] + 2) = v5;
    HIWORD(v15[1]) = 1026;
    LODWORD(v15[2]) = v6;
    WORD2(v15[2]) = 1026;
    *(_DWORD *)((char *)&v15[2] + 6) = v7;
    WORD1(v15[3]) = 1026;
    HIDWORD(v15[3]) = v8;
    LOWORD(v15[4]) = 1025;
    *(_DWORD *)((char *)&v15[4] + 2) = v9;
    HIWORD(v15[4]) = 1025;
    LODWORD(v16) = v10;
    WORD2(v16) = 1026;
    *(_DWORD *)((char *)&v16 + 6) = v11;
    WORD5(v16) = 1024;
    HIDWORD(v16) = v12;
    LOWORD(v17) = 1026;
    *(_DWORD *)((char *)&v17 + 2) = v13;
    WORD3(v17) = 1026;
    DWORD2(v17) = v14;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,#cp,handleEmergencyMeasurementReportWithEstimate,result,%{public}d,responseType,%{public}d,sessionProtocol,%{public}d,posProtocol,%{public}d,sessionId,%{public}u,locationIndication,lat,%{private}d,lon,%{private}d,locUncAng,%{public}d,locUnc{public}A,%d,locUncP,%{public}d,gpsMeasurements,nrOfSats,%{public}d", (uint8_t *)v15, 0x44u);
  }
  v15[0] = &off_10010DB88;
  memset(&v15[1], 0, 32);
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  LODWORD(v15[1]) = 26;
  int v27 = 4194305;
  operator new();
}

void sub_10001CA18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
}

uint64_t sub_10001CA38(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001CA78()
{
}

void *sub_10001CA84(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10001CB0C()
{
}

void *sub_10001CB20(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105B10;
  result[1] = v3;
  return result;
}

uint64_t sub_10001CB68(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105B10;
  a2[1] = v2;
  return result;
}

void sub_10001CB94(uint64_t a1, int *a2)
{
  int v2 = *a2;
  sub_100019AA8(**(void **)(a1 + 8), &v2);
}

uint64_t sub_10001CBC8(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001CC08()
{
}

void sub_10001CC18()
{
}

void *sub_10001CC2C(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105B90;
  result[1] = v3;
  return result;
}

uint64_t sub_10001CC74(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105B90;
  a2[1] = v2;
  return result;
}

void sub_10001CCA0()
{
  v0 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v1) = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,#cp,handleEmergencyFtAssistanceNeededReport", (uint8_t *)&v1, 2u);
  }
  uint64_t v1 = &off_10010DB88;
  long long v2 = 0u;
  long long v3 = 0u;
  long long v4 = 0u;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  LODWORD(v2) = 17;
  int v15 = 2097153;
  operator new();
}

void sub_10001CE10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
}

uint64_t sub_10001CE30(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001CE70()
{
}

void *sub_10001CE7C(void *a1)
{
  long long v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10001CF04()
{
}

void *sub_10001CF18(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105C20;
  result[1] = v3;
  return result;
}

uint64_t sub_10001CF60(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105C20;
  a2[1] = v2;
  return result;
}

void sub_10001CF8C(uint64_t a1, int *a2)
{
  int v2 = *a2;
  sub_100019AA8(**(void **)(a1 + 8), &v2);
}

uint64_t sub_10001CFC0(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001D000()
{
}

void sub_10001D010()
{
}

void *sub_10001D024(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105CA0;
  result[1] = v3;
  return result;
}

uint64_t sub_10001D06C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105CA0;
  a2[1] = v2;
  return result;
}

void sub_10001D098(uint64_t a1, int *a2)
{
  int v2 = *a2;
  sub_100019AA8(**(void **)(a1 + 8), &v2);
}

uint64_t sub_10001D0CC(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001D10C()
{
}

void sub_10001D11C()
{
}

void *sub_10001D130(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105D20;
  result[1] = v3;
  return result;
}

uint64_t sub_10001D178(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105D20;
  a2[1] = v2;
  return result;
}

void sub_10001D1A4(uint64_t a1, long long *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = **(NSObject ***)(v2 + 1936);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10001D270;
  block[3] = &unk_100105D90;
  block[4] = v2;
  long long v5 = *a2;
  dispatch_async(v3, block);
}

uint64_t sub_10001D224(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001D264()
{
}

void sub_10001D270(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = (long long *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3 && *(void *)v2)
  {
    long long v4 = *v2;
  }
  else
  {
    long long v5 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)v2;
      int v7 = 134349312;
      uint64_t v8 = v6;
      __int16 v9 = 2050;
      uint64_t v10 = v3;
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "#tt,badGpioData,%{public}llu,%{public}llu", (uint8_t *)&v7, 0x16u);
    }
    long long v4 = 0uLL;
  }
  *(_OWORD *)(v1 + 1984) = v4;
  *(unsigned char *)(v1 + 2000) = 1;
  sub_100010250(v1);
}

uint64_t sub_10001D360(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10001D3FC()
{
}

void *sub_10001D410(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105DD0;
  result[1] = v3;
  return result;
}

uint64_t sub_10001D458(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105DD0;
  a2[1] = v2;
  return result;
}

void sub_10001D484(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  unint64_t v2 = *(void *)(a2 + 8);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)&v8[3] = *(_DWORD *)(a2 + 19);
  int v4 = *(char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v15 = -4294967291;
  if (v4 < 0)
  {
    sub_1000186E8(&v16, v3, v2);
    BOOL v6 = v17 < 0;
  }
  else
  {
    BOOL v6 = 0;
    *(void *)&long long v16 = v3;
    *((void *)&v16 + 1) = v2;
    LODWORD(v17) = *(_DWORD *)v8;
    *(_DWORD *)((char *)&v17 + 3) = *(_DWORD *)&v8[3];
    HIBYTE(v17) = v4;
  }
  long long v18 = 0uLL;
  uint64_t v19 = 0;
  int v7 = **(NSObject ***)(v5 + 1936);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_10001D6CC;
  block[3] = &unk_100105E40;
  block[4] = v5;
  void block[5] = v15;
  if (v6)
  {
    sub_1000186E8(&v11, (void *)v16, *((unint64_t *)&v16 + 1));
    if (SHIBYTE(v19) < 0)
    {
      sub_1000186E8(&v13, (void *)v18, *((unint64_t *)&v18 + 1));
      goto LABEL_9;
    }
  }
  else
  {
    long long v11 = v16;
    uint64_t v12 = v17;
  }
  long long v13 = v18;
  uint64_t v14 = v19;
LABEL_9:
  dispatch_async(v7, block);
  usleep(0x186A0u);
  sub_10000ED90(&v9, (uint64_t)&v15);
  sub_10000F074((uint64_t *)&v9);
}

void sub_10001D5F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v36 - 49) < 0) {
    operator delete(*(void **)(v36 - 72));
  }
  if (*(char *)(v36 - 73) < 0) {
    operator delete(*(void **)(v36 - 96));
  }
  if (v35 < 0) {
    operator delete(v34);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10001D680(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001D6C0()
{
}

void sub_10001D6CC()
{
}

unsigned char *sub_10001D6DC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  if (*(char *)(a2 + 71) < 0)
  {
    sub_1000186E8((unsigned char *)(a1 + 48), *(void **)(a2 + 48), *(void *)(a2 + 56));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = v4;
  }
  uint64_t result = (unsigned char *)(a1 + 72);
  if (*(char *)(a2 + 95) < 0) {
    return sub_1000186E8(result, *(void **)(a2 + 72), *(void *)(a2 + 80));
  }
  long long v6 = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)uint64_t result = v6;
  return result;
}

void sub_10001D76C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v2 + 71) < 0) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10001D788(uint64_t a1)
{
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  if (*(char *)(a1 + 71) < 0)
  {
    uint64_t v2 = *(void **)(a1 + 48);
    operator delete(v2);
  }
}

void *sub_10001D7E0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_10001D864(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10001D900()
{
}

void *sub_10001D914(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105E90;
  result[1] = v3;
  return result;
}

uint64_t sub_10001D95C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105E90;
  a2[1] = v2;
  return result;
}

void sub_10001D988(uint64_t a1, uint64_t a2, void *a3)
{
  long long v4 = a3 + 3;
  uint64_t v5 = (void *)a3[3];
  if (v5)
  {
    if (v5 == a3)
    {
      uint64_t v12 = v11;
      (*(void (**)(void *, unsigned char *))(*a3 + 24))(a3, v11);
      goto LABEL_7;
    }
    uint64_t v12 = (unsigned char *)a3[3];
  }
  else
  {
    long long v4 = &v12;
  }
  void *v4 = 0;
LABEL_7:
  uint64_t v6 = *(void *)(a1 + 8);
  sub_10001DE6C((uint64_t)v13, (uint64_t)v11);
  if (*(void *)(v6 + 2368))
  {
    int v7 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#gdm,#ltl,detected stacked LtlInfoRequests", buf, 2u);
    }
  }
  sub_10001DE6C((uint64_t)buf, (uint64_t)v13);
  uint64_t v8 = v6 + 2344;
  if (buf != (uint8_t *)(v6 + 2344))
  {
    uint64_t v9 = v16;
    uint64_t v10 = *(void *)(v6 + 2368);
    if ((uint8_t *)v16 == buf)
    {
      if (v10 == v8)
      {
        (*(void (**)(uint8_t *, void *))(*(void *)buf + 24))(buf, v29);
        (*(void (**)(void))(*(void *)v16 + 32))(v16);
        *(void *)&long long v16 = 0;
        (*(void (**)(void, uint8_t *))(**(void **)(v6 + 2368) + 24))(*(void *)(v6 + 2368), buf);
        (*(void (**)(void))(**(void **)(v6 + 2368) + 32))(*(void *)(v6 + 2368));
        *(void *)(v6 + 2368) = 0;
        *(void *)&long long v16 = buf;
        (*(void (**)(void *, uint64_t))(v29[0] + 24))(v29, v6 + 2344);
        (*(void (**)(void *))(v29[0] + 32))(v29);
      }
      else
      {
        (*(void (**)(uint8_t *, uint64_t))(*(void *)buf + 24))(buf, v6 + 2344);
        (*(void (**)(void))(*(void *)v16 + 32))(v16);
        *(void *)&long long v16 = *(void *)(v6 + 2368);
      }
      *(void *)(v6 + 2368) = v8;
    }
    else if (v10 == v8)
    {
      (*(void (**)(uint64_t, uint8_t *))(*(void *)v8 + 24))(v6 + 2344, buf);
      (*(void (**)(void))(**(void **)(v6 + 2368) + 32))(*(void *)(v6 + 2368));
      *(void *)(v6 + 2368) = v16;
      *(void *)&long long v16 = buf;
    }
    else
    {
      *(void *)&long long v16 = *(void *)(v6 + 2368);
      *(void *)(v6 + 2368) = v9;
    }
  }
  sub_1000190A0(buf);
  *(void *)int buf = &off_10010DB88;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  LODWORD(v15) = 5;
  int v28 = 513;
  operator new();
}

void sub_10001DDD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a2) {
    sub_100002FCC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10001DE20(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001DE60()
{
}

uint64_t sub_10001DE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10001DF08()
{
}

void *sub_10001DF1C(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105F20;
  result[1] = v3;
  return result;
}

uint64_t sub_10001DF64(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105F20;
  a2[1] = v2;
  return result;
}

void sub_10001DF90(uint64_t a1, int *a2, uint64_t a3)
{
  int v4 = *a2;
  uint64_t v6 = *(void **)a3;
  uint64_t v5 = *(void **)(a3 + 8);
  *(_DWORD *)uint64_t v9 = *(_DWORD *)(a3 + 16);
  *(_DWORD *)&v9[3] = *(_DWORD *)(a3 + 19);
  int v7 = *(char *)(a3 + 23);
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)a3 = 0;
  uint64_t v8 = *(void *)(a1 + 8);
  v10[0] = 4;
  v10[1] = v4;
  if (v7 < 0)
  {
    sub_1000186E8(v11, v6, (unint64_t)v5);
  }
  else
  {
    v11[0] = v6;
    v11[1] = v5;
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v9;
    *(_DWORD *)&v12[3] = *(_DWORD *)&v9[3];
    char v13 = v7;
  }
  sub_1000033AC(&__p, "BBUnresponsive");
  sub_10000E6CC(v8, v10);
  if (v15 < 0) {
    operator delete(__p);
  }
  if ((v13 & 0x80000000) == 0)
  {
    if ((v7 & 0x80000000) == 0) {
      return;
    }
LABEL_10:
    operator delete(v6);
    return;
  }
  operator delete(v11[0]);
  if (v7 < 0) {
    goto LABEL_10;
  }
}

void sub_10001E074(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  operator delete(v22);
  _Unwind_Resume(a1);
}

uint64_t sub_10001E0BC(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001E0FC()
{
}

uint64_t sub_10001E108(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_10001E1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10001E23C()
{
}

void *sub_10001E250(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100105FB0;
  result[1] = v3;
  return result;
}

uint64_t sub_10001E298(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100105FB0;
  a2[1] = v2;
  return result;
}

void sub_10001E2C4(uint64_t a1, void *a2)
{
  if (*a2 != a2[1])
  {
    std::operator+<char>();
    uint64_t v3 = std::string::append(&v27, ":");
    long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v3->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v4;
    v3->__r_.__value_.__l.__size_ = 0;
    v3->__r_.__value_.__r.__words[2] = 0;
    v3->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v26, *(_DWORD *)(*a2 + 24));
    if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v5 = &v26;
    }
    else {
      uint64_t v5 = (std::string *)v26.__r_.__value_.__r.__words[0];
    }
    if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v26.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v26.__r_.__value_.__l.__size_;
    }
    int v7 = std::string::append(&__p, (const std::string::value_type *)v5, size);
    uint64_t v8 = (void *)v7->__r_.__value_.__r.__words[0];
    unint64_t v9 = v7->__r_.__value_.__l.__size_;
    v28[0] = v7->__r_.__value_.__r.__words[2];
    *(_DWORD *)((char *)v28 + 3) = *(_DWORD *)((char *)&v7->__r_.__value_.__r.__words[2] + 3);
    int v10 = SHIBYTE(v7->__r_.__value_.__r.__words[2]);
    v7->__r_.__value_.__l.__size_ = 0;
    v7->__r_.__value_.__r.__words[2] = 0;
    v7->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v26.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v27.__r_.__value_.__l.__data_);
    }
    int v11 = *(_DWORD *)(*a2 + 24);
    LODWORD(__p.__r_.__value_.__l.__data_) = 4;
    HIDWORD(__p.__r_.__value_.__r.__words[0]) = v11;
    if (v10 < 0)
    {
      sub_1000186E8(&__p.__r_.__value_.__s.__data_[8], v8, v9);
      sub_1000186E8(&v13[1], v8, v9);
    }
    else
    {
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)v8;
      __p.__r_.__value_.__r.__words[2] = v9;
      LODWORD(v13[0]) = v28[0];
      *(_DWORD *)((char *)v13 + 3) = *(_DWORD *)((char *)v28 + 3);
      HIBYTE(v13[0]) = v10;
      v13[1] = v8;
      *(void *)&long long v14 = v9;
      DWORD2(v14) = v28[0];
      *(_DWORD *)((char *)&v14 + 11) = *(_DWORD *)((char *)v28 + 3);
      HIBYTE(v14) = v10;
    }
    sub_10000EB7C();
  }
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10010DB88;
  *(_OWORD *)&__p.__r_.__value_.__r.__words[1] = 0u;
  *(_OWORD *)char v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  LODWORD(__p.__r_.__value_.__r.__words[1]) = 4;
  int v25 = 257;
  operator new();
}

void sub_10001E578(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, void *__p, int a11, __int16 a12, char a13, char a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  operator delete(v24);
  _Unwind_Resume(a1);
}

uint64_t sub_10001E634(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001E674()
{
}

void sub_10001E684()
{
}

void *sub_10001E698(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100106040;
  result[1] = v3;
  return result;
}

uint64_t sub_10001E6E0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100106040;
  a2[1] = v2;
  return result;
}

void sub_10001E70C(uint64_t a1, void *a2)
{
  uint64_t v3 = a2 + 3;
  long long v4 = (void *)a2[3];
  if (v4)
  {
    if (v4 == a2)
    {
      long long v23 = v22;
      (*(void (**)(void *, unsigned char *))(*a2 + 24))(a2, v22);
LABEL_7:
      uint64_t v5 = *(void *)(a1 + 8);
      sub_10001E9A4((uint64_t)v24, (uint64_t)v22);
      uint64_t v6 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v7) = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#gdm,#cntin,inquiry,enableClock", (uint8_t *)&v7, 2u);
      }
      sub_100018234((void *)(v5 + 2376), (uint64_t)v24);
      int v7 = &off_10010DB88;
      long long v8 = 0u;
      long long v9 = 0u;
      long long v10 = 0u;
      long long v11 = 0u;
      long long v12 = 0u;
      long long v13 = 0u;
      long long v14 = 0u;
      long long v15 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      long long v18 = 0u;
      long long v19 = 0u;
      long long v20 = 0u;
      LODWORD(v8) = 21;
      int v21 = 16385;
      operator new();
    }
    long long v23 = (unsigned char *)a2[3];
  }
  else
  {
    uint64_t v3 = &v23;
  }
  *uint64_t v3 = 0;
  goto LABEL_7;
}

void sub_10001E914(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_100002FCC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10001E958(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001E998()
{
}

uint64_t sub_10001E9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10001EA40()
{
}

void *sub_10001EA54(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1001060D0;
  result[1] = v3;
  return result;
}

uint64_t sub_10001EA9C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1001060D0;
  a2[1] = v2;
  return result;
}

void sub_10001EAC8()
{
  v0 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v1) = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "#gdm,#cntin,inquiry,disableClock", (uint8_t *)&v1, 2u);
  }
  uint64_t v1 = &off_10010DB88;
  long long v2 = 0u;
  long long v3 = 0u;
  long long v4 = 0u;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  LODWORD(v2) = 21;
  int v15 = 16385;
  operator new();
}

void sub_10001EC0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
}

uint64_t sub_10001EC2C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001EC6C()
{
}

void sub_10001EC7C()
{
}

void *sub_10001EC90(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100106150;
  result[1] = v3;
  return result;
}

uint64_t sub_10001ECD8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100106150;
  a2[1] = v2;
  return result;
}

uint64_t sub_10001ED04(uint64_t a1, uint64_t a2)
{
  return sub_1000068AC(*(void *)(a1 + 8) + 928, a2);
}

uint64_t sub_10001ED10(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001ED50()
{
}

void sub_10001ED60()
{
}

void *sub_10001ED74(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1001061E0;
  result[1] = v3;
  return result;
}

uint64_t sub_10001EDBC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1001061E0;
  a2[1] = v2;
  return result;
}

uint64_t sub_10001EDE8(uint64_t a1, double *a2)
{
  return sub_100006B20(*(void *)(a1 + 8) + 928, a2);
}

uint64_t sub_10001EDF4(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001EE34()
{
}

void sub_10001EE44()
{
}

void *sub_10001EE58(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100106270;
  result[1] = v3;
  return result;
}

uint64_t sub_10001EEA0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100106270;
  a2[1] = v2;
  return result;
}

uint64_t sub_10001EECC(uint64_t a1, uint64_t *a2)
{
  return sub_100006DEC(*(void *)(a1 + 8) + 928, a2);
}

uint64_t sub_10001EED8(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001EF18()
{
}

uint64_t sub_10001EF24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_10001EFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_10001F054(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_10001F0D8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_10001F15C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_10001F1E0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_10001F264(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_10001F2E8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_10001F36C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10001F408()
{
}

void *sub_10001F41C(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100106310;
  result[1] = v3;
  return result;
}

uint64_t sub_10001F464(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100106310;
  a2[1] = v2;
  return result;
}

uint64_t sub_10001F490(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  std::mutex::lock((std::mutex *)(v1 + 2152));
  uint64_t v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(unsigned __int8 *)(v1 + 2100);
    v6[0] = 67240192;
    v6[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#gdm,servingCellLteCb,fIsServingCellLte,%{public}d", (uint8_t *)v6, 8u);
  }
  uint64_t v4 = *(unsigned __int8 *)(v1 + 2100);
  std::mutex::unlock((std::mutex *)(v1 + 2152));
  return v4;
}

uint64_t sub_10001F558(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001F598()
{
}

void sub_10001F5A8()
{
}

void *sub_10001F5BC(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100106390;
  result[1] = v3;
  return result;
}

uint64_t sub_10001F604(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100106390;
  a2[1] = v2;
  return result;
}

void sub_10001F630(uint64_t a1, void **a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = (std::mutex *)(v3 + 2152);
  std::mutex::lock((std::mutex *)(v3 + 2152));
  long long v5 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    v17[0] = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,#supl,suplCertCb", (uint8_t *)v17, 2u);
  }
  if ((void **)(v3 + 2128) != a2)
  {
    long long v6 = *(char **)(v3 + 2128);
    long long v7 = *(unsigned char **)(v3 + 2136);
    unint64_t v8 = v7 - v6;
    unint64_t v9 = (unint64_t)a2[2];
    long long v10 = (char *)*a2;
    if (v9 - (unint64_t)*a2 >= v7 - v6)
    {
      long long v13 = (char *)a2[1];
      size_t v14 = v13 - v10;
      if (v13 - v10 < v8)
      {
        int v15 = &v6[v14];
        if (v13 != v10)
        {
          memmove(*a2, v6, v14);
          long long v10 = (char *)a2[1];
        }
        if (v7 != v15) {
          memmove(v10, v15, v7 - v15);
        }
        long long v16 = &v10[v7 - v15];
        goto LABEL_23;
      }
    }
    else
    {
      if (v10)
      {
        a2[1] = v10;
        operator delete(v10);
        unint64_t v9 = 0;
        *a2 = 0;
        a2[1] = 0;
        a2[2] = 0;
      }
      if ((v8 & 0x8000000000000000) != 0) {
        sub_100007204();
      }
      uint64_t v11 = 2 * v9;
      if (2 * v9 <= v8) {
        uint64_t v11 = v7 - v6;
      }
      if (v9 >= 0x3FFFFFFFFFFFFFFFLL) {
        size_t v12 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        size_t v12 = v11;
      }
      sub_10001F810(a2, v12);
      long long v10 = (char *)a2[1];
    }
    if (v7 != v6) {
      memmove(v10, v6, v7 - v6);
    }
    long long v16 = &v10[v8];
LABEL_23:
    a2[1] = v16;
  }
  std::mutex::unlock(v4);
}

void sub_10001F7B0(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10001F7C4(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001F804()
{
}

char *sub_10001F810(void *a1, size_t __sz)
{
  if ((__sz & 0x8000000000000000) != 0) {
    sub_100007204();
  }
  uint64_t result = (char *)operator new(__sz);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[__sz];
  return result;
}

void *sub_10001F854(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10001F8DC()
{
}

void *sub_10001F8F0(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100106420;
  result[1] = v3;
  return result;
}

uint64_t sub_10001F938(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100106420;
  a2[1] = v2;
  return result;
}

void sub_10001F964(uint64_t a1, unsigned int *a2)
{
  unsigned int v2 = *a2;
  uint64_t v3 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    LODWORD(v4) = 67240192;
    HIDWORD(v4) = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,#supl,suplConnStatusCb,connStatus,%{public}d", (uint8_t *)&v4, 8u);
  }
  uint64_t v4 = &off_10010DB88;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  LODWORD(v5) = 14;
  ProtobufUtil::toProtobuf(v2);
  int v18 = 8388609;
  operator new();
}

void sub_10001FB48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10001FB5C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001FB9C()
{
}

void *sub_10001FBA8(void *a1)
{
  unsigned int v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10001FC30()
{
}

void *sub_10001FC44(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1001064B0;
  result[1] = v3;
  return result;
}

uint64_t sub_10001FC8C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1001064B0;
  a2[1] = v2;
  return result;
}

void sub_10001FCB8(uint64_t a1, std::string *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  std::mutex::lock((std::mutex *)(v3 + 2152));
  std::string::operator=(a2, (const std::string *)(v3 + 2104));

  std::mutex::unlock((std::mutex *)(v3 + 2152));
}

void sub_10001FD10(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10001FD24(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001FD64()
{
}

void *sub_10001FD70(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_10001FDF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_10001FE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_10001FF24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10001FFC0()
{
}

void *sub_10001FFD4(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100106540;
  result[1] = v3;
  return result;
}

uint64_t sub_10002001C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100106540;
  a2[1] = v2;
  return result;
}

void sub_100020048(uint64_t a1, int *a2)
{
  int v3 = *a2;
  int v5 = *a2;
  uint64_t v4 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int buf = 67240192;
    int v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#gdm,newGnssDevice callback,%{public}d", buf, 8u);
  }
  sub_100019AA8(**(void **)(a1 + 8), &v5);
}

uint64_t sub_100020108(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100020148()
{
}

void *sub_100020154(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  a1[3] = 0;
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1000201E0()
{
}

void *sub_1000201F4(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1001065C0;
  result[1] = v3;
  return result;
}

uint64_t sub_10002023C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1001065C0;
  a2[1] = v2;
  return result;
}

void sub_100020268(uint64_t a1, int *a2, unsigned __int8 *a3)
{
  int v3 = *a2;
  int v4 = *a3;
  v14[0] = *(_DWORD *)(a3 + 1);
  *(_DWORD *)((char *)v14 + 3) = *((_DWORD *)a3 + 1);
  int v5 = (__n128 (*)(uint64_t))*((void *)a3 + 1);
  float v6 = *((float *)a3 + 4);
  uint64_t v17 = *(void *)(a3 + 20);
  int v18 = *((_DWORD *)a3 + 7);
  uint64_t v7 = *((void *)a3 + 4);
  uint64_t v8 = *((void *)a3 + 8);
  uint64_t v16 = *((void *)a3 + 7);
  long long v15 = *(_OWORD *)(a3 + 40);
  uint64_t v9 = *((void *)a3 + 9);
  uint64_t v10 = *(void *)(a1 + 8);
  long long v11 = qword_100114840;
  os_log_type_t v12 = 16 * (*a2 != 1);
  if (os_log_type_enabled((os_log_t)qword_100114840, v12))
  {
    *(_DWORD *)int buf = 67241984;
    *(_DWORD *)&uint8_t buf[4] = v3 == 1;
    LOWORD(v20) = 1026;
    *(_DWORD *)((char *)&v20 + 2) = v4;
    HIWORD(v20) = 2050;
    int v21 = v5;
    *(_WORD *)long long v22 = 2050;
    *(double *)&v22[2] = v6;
    *(_WORD *)&v22[10] = 2050;
    *(void *)&v22[12] = v7;
    *(_WORD *)&v22[20] = 2050;
    *(void *)&v22[22] = v8;
    *(_WORD *)&v22[30] = 2050;
    *(void *)&long long v23 = v9;
    WORD4(v23) = 1026;
    *(_DWORD *)((char *)&v23 + 10) = v3;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "#tt,success,%{public}d,isGpsWeekVld,%{public}d,towNs,%{public}llu,unc,%{public}.3f,rxNs,%{public}llu,bbSystemNs,%{public}llu,unc,%{public}llu,code,%{public}d", buf, 0x46u);
  }
  if (v3 != 1)
  {
    LOBYTE(v4) = 0;
    int v5 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    memset(v14, 0, 7);
    uint64_t v17 = 0;
    int v18 = 0;
    uint64_t v16 = 0;
    float v6 = -1.0;
    uint64_t v7 = -1;
    long long v15 = 0uLL;
  }
  long long v13 = **(NSObject ***)(v10 + 1936);
  *(void *)int buf = _NSConcreteStackBlock;
  uint64_t v20 = 3221225472;
  int v21 = sub_1000204F0;
  *(void *)long long v22 = &unk_100106630;
  *(void *)&v22[8] = v10;
  v22[16] = v4;
  *(_DWORD *)&v22[17] = v14[0];
  *(_DWORD *)&v22[20] = *(_DWORD *)((char *)v14 + 3);
  *(void *)&unsigned char v22[24] = v5;
  *(float *)&long long v23 = v6;
  *(void *)((char *)&v23 + 4) = v17;
  HIDWORD(v23) = v18;
  uint64_t v24 = v7;
  long long v25 = v15;
  uint64_t v26 = v16;
  uint64_t v27 = v8;
  uint64_t v28 = v9;
  dispatch_async(v13, buf);
}

uint64_t sub_1000204A4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1000204E4()
{
}

__n128 sub_1000204F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  long long v2 = *(_OWORD *)(a1 + 56);
  long long v3 = *(_OWORD *)(a1 + 72);
  long long v4 = *(_OWORD *)(a1 + 104);
  *(_OWORD *)(v1 + 2056) = *(_OWORD *)(a1 + 88);
  *(_OWORD *)(v1 + 2072) = v4;
  *(_OWORD *)(v1 + 2024) = v2;
  *(_OWORD *)(v1 + 2040) = v3;
  *(_OWORD *)(v1 + 2008) = *(_OWORD *)(a1 + 40);
  *(unsigned char *)(v1 + 2088) = 1;
  sub_100010250(v1);
  return result;
}

void *sub_100020528(void *a1)
{
  long long v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_1000205AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_100020648()
{
}

void *sub_10002065C()
{
  __n128 result = operator new(0x10uLL);
  void *result = off_100106670;
  return result;
}

void sub_100020694(uint64_t a1, void *a2)
{
  *a2 = off_100106670;
}

void sub_1000206BC(uint64_t a1, int *a2)
{
  uint64_t v3 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    int v4 = *a2;
    v5[0] = 67109120;
    v5[1] = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "#tt,onCompleted,%d", (uint8_t *)v5, 8u);
  }
}

uint64_t sub_100020760(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1000207A0()
{
}

void sub_1000207B0()
{
}

__n128 sub_1000207C4(uint64_t a1)
{
  long long v2 = (char *)operator new(0x18uLL);
  *(void *)long long v2 = off_1001066F0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_100020810(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1001066F0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_100020840(uint64_t a1, unsigned int *a2)
{
}

uint64_t sub_100020854(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100020894()
{
}

void sub_1000208A4()
{
}

void *sub_1000208B8(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100106770;
  result[1] = v3;
  return result;
}

uint64_t sub_100020900(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100106770;
  a2[1] = v2;
  return result;
}

void sub_10002092C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a2 = 0;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = v2;
  sub_100010BE8(v3, &v4);
  if (v2)
  {
    operator delete();
  }
}

void sub_1000209A0(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete();
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000209C8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100020A08()
{
}

void sub_100020A18()
{
}

void *sub_100020A2C(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1001067F0;
  result[1] = v3;
  return result;
}

uint64_t sub_100020A74(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1001067F0;
  a2[1] = v2;
  return result;
}

void sub_100020AA0(uint64_t a1, long long *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    int v7 = *(unsigned __int8 *)a2;
    *(_DWORD *)int buf = 67240192;
    *(_DWORD *)&uint8_t buf[4] = v7;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "#gdm,DecodedExtendedEphemeris callback,type,%{public}d", buf, 8u);
  }
  *(void *)int buf = 0;
  uint64_t v10 = buf;
  uint64_t v11 = 0x5012000000;
  os_log_type_t v12 = sub_100020C50;
  long long v13 = nullsub_96;
  long long v14 = "";
  long long v5 = a2[1];
  long long v15 = *a2;
  long long v16 = v5;
  float v6 = **(NSObject ***)(v3 + 1936);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100020C68;
  v8[3] = &unk_100106868;
  void v8[4] = buf;
  v8[5] = v3;
  dispatch_async(v6, v8);
  _Block_object_dispose(buf, 8);
}

uint64_t sub_100020C04(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100020C44()
{
}

__n128 sub_100020C50(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(__n128 *)(a1 + 48) = result;
  return result;
}

void sub_100020C68(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 8);
  unsigned __int8 v14 = 0;
  CFAbsoluteTime v3 = sub_100010D38(v1, &v14);
  uint64_t v4 = (unsigned char *)(v2 + 48);
  unint64_t v5 = *(void *)(v2 + 56);
  double v6 = v3 - (double)v5;
  int v7 = *(unsigned __int8 *)(v2 + 72);
  BOOL v8 = v6 * 0.0000115740741 >= 7.0 || v7 == 0;
  uint64_t v9 = qword_100114840;
  if (v8) {
    os_log_type_t v10 = OS_LOG_TYPE_ERROR;
  }
  else {
    os_log_type_t v10 = OS_LOG_TYPE_DEFAULT;
  }
  if (os_log_type_enabled((os_log_t)qword_100114840, v10))
  {
    int v11 = *v4;
    *(_DWORD *)int buf = 67241472;
    *(_DWORD *)&uint8_t buf[4] = v11;
    LOWORD(v16) = 1026;
    *(_DWORD *)((char *)&v16 + 2) = v7;
    WORD3(v16) = 2050;
    *((void *)&v16 + 1) = v5;
    LOWORD(v17[0]) = 2050;
    *(double *)((char *)v17 + 2) = v6;
    WORD5(v17[0]) = 2050;
    *(double *)((char *)v17 + 12) = v6 * 0.0000115740741;
    WORD2(v17[1]) = 1026;
    *(_DWORD *)((char *)&v17[1] + 6) = v14;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "#gdm,#ee,decodedEphemeris,type,%{public}d,integrityValid,%{public}d,dataTimeGpsSec,%{public}llu,ageSecs,%{public}.1f,ageDays,%{public}.2f,isAgeAccurate,%{public}d", buf, 0x32u);
  }
  if ((*v4 & 0xFB) == 0)
  {
    char v12 = *(unsigned char *)(v2 + 72);
    uint64_t v13 = *(void *)(v2 + 56);
    if (!v12) {
      uint64_t v13 = 0;
    }
    *(void *)(v1 + 1888) = v13;
    *(double *)(v1 + 1008) = v6 * 0.0000115740741;
    *(unsigned char *)(v1 + 1024) = v12;
  }
  *(void *)int buf = &off_10010DB88;
  long long v16 = 0u;
  memset(v17, 0, sizeof(v17));
  LODWORD(v16) = 18;
  int v18 = 1025;
  operator new();
}

void sub_100020EB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
}

void *sub_100020EDC(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_100020F60(void *result, const void *a2, uint64_t a3, size_t __sz)
{
  if (__sz)
  {
    double v6 = result;
    __n128 result = sub_10001F810(result, __sz);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      __n128 result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_100020FC0(_Unwind_Exception *exception_object)
{
  CFAbsoluteTime v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_100020FE0()
{
}

void *sub_100020FF4(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1001068A8;
  result[1] = v3;
  return result;
}

uint64_t sub_10002103C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1001068A8;
  a2[1] = v2;
  return result;
}

void sub_100021068(uint64_t a1, long long *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)int buf = 0;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "#gdm,DecodedRti callback", buf, 2u);
  }
  *(void *)int buf = 0;
  size_t v8 = buf;
  uint64_t v9 = 0x4012000000;
  os_log_type_t v10 = sub_1000211DC;
  int v11 = nullsub_99;
  char v12 = "";
  long long v13 = *a2;
  unint64_t v5 = **(NSObject ***)(v3 + 1936);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_1000211F4;
  v6[3] = &unk_100106868;
  void v6[4] = buf;
  v6[5] = v3;
  dispatch_async(v5, v6);
  _Block_object_dispose(buf, 8);
}

uint64_t sub_100021190(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1000211D0()
{
}

uint64_t sub_1000211DC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(unsigned char *)(result + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(result + 48) = v2;
  return result;
}

void sub_1000211F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 8);
  unsigned __int8 v8 = 0;
  CFAbsoluteTime v3 = sub_100010D38(v1, &v8);
  unint64_t v4 = *(void *)(v2 + 48);
  double v5 = v3 - (double)v4;
  double v6 = qword_100114840;
  if (*(unsigned char *)(v2 + 56))
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int buf = 67241216;
      *(_DWORD *)&uint8_t buf[4] = 1;
      LOWORD(v10[0]) = 2050;
      *(void *)((char *)v10 + 2) = v4;
      WORD5(v10[0]) = 2050;
      *(double *)((char *)v10 + 12) = v5;
      WORD2(v10[1]) = 2050;
      *(double *)((char *)&v10[1] + 6) = v5 * 0.0000115740741;
      HIWORD(v10[1]) = 1026;
      LODWORD(v11) = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#gdm,decodedRti,integrityValid,%{public}d,fileTimeGpsSec,%{public}llu,ageSecs,%{public}.1f,ageDays,%{public}.2f,isAgeAccurate,%{public}d", buf, 0x2Cu);
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)int buf = 67241216;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v10[0]) = 2050;
    *(void *)((char *)v10 + 2) = v4;
    WORD5(v10[0]) = 2050;
    *(double *)((char *)v10 + 12) = v5;
    WORD2(v10[1]) = 2050;
    *(double *)((char *)&v10[1] + 6) = v5 * 0.0000115740741;
    HIWORD(v10[1]) = 1026;
    LODWORD(v11) = v8;
    _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "#gdm,decodedRti,integrityValid,%{public}d,fileTimeGpsSec,%{public}llu,ageSecs,%{public}.1f,ageDays,%{public}.2f,isAgeAccurate,%{public}d", buf, 0x2Cu);
  }
  char v7 = *(unsigned char *)(v2 + 56);
  *(double *)(v1 + 1016) = v5 * 0.0000115740741;
  *(unsigned char *)(v1 + 1025) = v7;
  *(void *)int buf = &off_10010DB88;
  memset(v10, 0, sizeof(v10));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  LODWORD(v10[0]) = 19;
  int v22 = 2049;
  operator new();
}

void sub_100021478(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
}

void *sub_1000214A0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100021528()
{
}

void *sub_10002153C(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100106938;
  result[1] = v3;
  return result;
}

uint64_t sub_100021584(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100106938;
  a2[1] = v2;
  return result;
}

void sub_1000215B0(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v7 = *a2;
  *a2 = 0;
  uint64_t v8 = *a3;
  *a3 = 0;
  *a6 = 0;
  *a7 = 0;
  v12[0] = 0;
  v12[1] = v12;
  v12[2] = 0x3812000000;
  v12[3] = sub_10001A3BC;
  void v12[4] = sub_10001A3CC;
  v12[5] = 0;
  v12[6] = v7;
  v11[0] = 0;
  v11[1] = v11;
  v11[2] = 0x3812000000;
  v11[3] = sub_10001A3F4;
  uint8_t v11[4] = sub_10001A404;
  v11[5] = 0;
  uint64_t v9 = 0;
  v11[6] = v8;
  v10[0] = 0;
  v10[1] = v10;
  _OWORD v10[2] = 0x3812000000;
  v10[3] = sub_10001A40C;
  uint64_t v10[4] = sub_10001A41C;
  v10[5] = 0;
  operator new();
}

void sub_100021914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose((const void *)(v13 - 248), 8);
  sub_10001A660(v12);
  _Block_object_dispose((const void *)(v13 - 192), 8);
  sub_10001A808(v9);
  _Block_object_dispose((const void *)(v13 - 136), 8);
  uint64_t v15 = *(void *)(v13 - 88);
  *(void *)(v13 - 88) = 0;
  if (!v15)
  {
    if (!v10)
    {
      if (v11) {
        sub_10001A724(v11);
      }
      sub_10001A808(&a9);
      _Unwind_Resume(a1);
    }
    operator delete();
  }
  operator delete();
}

uint64_t sub_1000219B8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1000219F8()
{
}

uint64_t *sub_100021A04(void *a1)
{
  uint64_t v1 = a1[10];
  uint64_t v2 = *(void *)(a1[4] + 8);
  uint64_t v3 = *(void *)(v2 + 48);
  *(void *)(v2 + 48) = 0;
  uint64_t v4 = *(void *)(a1[5] + 8);
  uint64_t v5 = *(void *)(v4 + 48);
  *(void *)(v4 + 48) = 0;
  uint64_t v19 = v5;
  uint64_t v20 = v3;
  uint64_t v6 = *(void *)(a1[6] + 8);
  uint64_t v7 = *(void **)(v6 + 48);
  *(void *)(v6 + 48) = 0;
  uint64_t v8 = *(void *)(a1[7] + 8);
  uint64_t v9 = *(void *)(v8 + 48);
  *(void *)(v8 + 48) = 0;
  uint64_t v17 = v9;
  long long v18 = v7;
  uint64_t v10 = *(void *)(a1[8] + 8);
  long long v11 = *(uint64_t **)(v10 + 48);
  *(void *)(v10 + 48) = 0;
  uint64_t v12 = *(void *)(a1[9] + 8);
  uint64_t v13 = *(void *)(v12 + 48);
  *(void *)(v12 + 48) = 0;
  uint64_t v15 = v13;
  long long v16 = v11;
  sub_10000F100(v1, &v20, &v19, &v18, &v17, &v16, &v15);
  if (v15) {
    operator delete();
  }
  if (v11) {
    sub_10001A724(v11);
  }
  if (v9) {
    sub_10001A6D0(v9);
  }
  sub_10001A660((void ***)&v18);
  __n128 result = sub_10001A808(&v19);
  if (v3)
  {
    operator delete();
  }
  return result;
}

void sub_100021B40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va1, a4);
  va_start(va, a4);
  uint64_t v8 = va_arg(va1, void **);
  if (!a2)
  {
    if (!v6)
    {
      if (v5) {
        sub_10001A6D0(v5);
      }
      sub_10001A660((void ***)va);
      sub_10001A808((uint64_t *)va1);
      if (v4) {
        operator delete();
      }
      _Unwind_Resume(a1);
    }
    sub_10001A724(v6);
  }
  operator delete();
}

void sub_100021BBC()
{
}

void *sub_100021BD0(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1001069B8;
  result[1] = v3;
  return result;
}

uint64_t sub_100021C18(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1001069B8;
  a2[1] = v2;
  return result;
}

void sub_100021C44(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_100021C4C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100021C8C()
{
}

void *sub_100021C98(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL) {
      sub_100007204();
    }
    uint64_t v4 = (char *)operator new(24 * a2);
    *a1 = v4;
    a1[2] = &v4[24 * a2];
    size_t v5 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v4, v5);
    a1[1] = &v4[v5];
  }
  return a1;
}

void sub_100021D40(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_100021D60()
{
}

void *sub_100021D74(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100106A38;
  result[1] = v3;
  return result;
}

uint64_t sub_100021DBC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100106A38;
  a2[1] = v2;
  return result;
}

void sub_100021DE8(uint64_t a1, unsigned int *a2)
{
  unsigned int v2 = *a2;
  uint64_t v3 = *(void *)(a1 + 8);
  if (*a2 == 1)
  {
    *(_DWORD *)(v3 + 2096) = 1;
  }
  else
  {
    uint64_t v4 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)size_t v5 = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "#gdm,#nilr,#cp,Error: startEmergencyPositionRequest failed", v5, 2u);
    }
  }
  sub_100010984(v3, (proto::gpsd *)0x3C, v2);
}

uint64_t sub_100021E84(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100021EC4()
{
}

void sub_100021ED4()
{
}

void *sub_100021EE8(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100106AB8;
  result[1] = v3;
  return result;
}

uint64_t sub_100021F30(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100106AB8;
  a2[1] = v2;
  return result;
}

void sub_100021F5C(uint64_t a1, unsigned int *a2)
{
  unsigned int v2 = *a2;
  uint64_t v3 = *(void *)(a1 + 8);
  if (*a2 == 1)
  {
    *(_DWORD *)(v3 + 2096) = 1;
  }
  else
  {
    uint64_t v4 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)size_t v5 = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "#gdm,#nilr,#cp,Error: startEmergencyPositionRequest failed", v5, 2u);
    }
  }
  sub_100010984(v3, (proto::gpsd *)0x3C, v2);
}

uint64_t sub_100021FF8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100022038()
{
}

void sub_100022048()
{
}

void *sub_10002205C(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100106B38;
  result[1] = v3;
  return result;
}

uint64_t sub_1000220A4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100106B38;
  a2[1] = v2;
  return result;
}

void sub_1000220D0(uint64_t a1, unsigned int *a2)
{
  unsigned int v2 = *a2;
  uint64_t v3 = *(void *)(a1 + 8);
  if (*a2 == 1)
  {
    *(_DWORD *)(v3 + 2096) = 0;
  }
  else
  {
    uint64_t v4 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)size_t v5 = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "#gdm,#nilr,#cp,stopEmergencyPositionRequest failed", v5, 2u);
    }
  }
  sub_100010984(v3, (proto::gpsd *)0x3D, v2);
  VendorLogger::notifyStop((VendorLogger *)(v3 + 24));
  VendorLogger::notifyStart((VendorLogger *)(v3 + 24));
  if (!*(unsigned char *)(v3 + 1848) && !*(unsigned char *)(v3 + 1896) && !*(unsigned char *)(v3 + 1897)) {
    sub_100010DAC((void *)v3);
  }
}

uint64_t sub_10002219C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1000221DC()
{
}

void sub_1000221EC()
{
}

void *sub_100022200(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100106BB8;
  result[1] = v3;
  return result;
}

uint64_t sub_100022248(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100106BB8;
  a2[1] = v2;
  return result;
}

void sub_100022274(uint64_t a1, unsigned int *a2)
{
  unsigned int v2 = *a2;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = qword_100114840;
  if (*a2 == 1)
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#gdm,start,onAccepted success", buf, 2u);
    }
    size_t v5 = *(dispatch_object_t **)(v3 + 1824);
    if (v5) {
      sub_100002FE0(v5);
    }
    if (*(void *)(v3 + 1928))
    {
      uint64_t v6 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)int buf = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Nested pvtm watchdog", buf, 2u);
      }
    }
    else
    {
      *(unsigned char *)(v3 + 1913) = 0;
      dispatch_source_t v7 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, **(dispatch_queue_t **)(v3 + 1936));
      *(void *)(v3 + 1928) = v7;
      if (!v7)
      {
        uint64_t v15 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)int buf = 0;
          _os_log_error_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "null fPvtmWatchdogTimer", buf, 2u);
          uint64_t v15 = qword_100114840;
        }
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)int buf = 136446722;
          *(void *)&uint8_t buf[4] = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Daemon/GpsdGnssDeviceManager.mm";
          *(_WORD *)&unsigned char buf[12] = 1026;
          *(_DWORD *)&unsigned char buf[14] = 3053;
          *(_WORD *)&buf[18] = 2082;
          *(void *)&buf[20] = "createPvtmWatchdogTimer";
          _os_log_error_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
        }
        sub_1000033AC(buf, "assert");
        sub_1000033AC(&v17, "createPvtmWatchdogTimer");
        sub_1000033AC(&v16, "null fPvtmWatchdogTimer");
        gpsd::util::triggerDiagnosticReport((uint64_t)buf, (long long *)&v17, (long long *)&v16);
        std::string::~string(&v16);
        std::string::~string(&v17);
        std::string::~string((std::string *)buf);
        __assert_rtn("createPvtmWatchdogTimer", "GpsdGnssDeviceManager.mm", 3053, "false && \"null fPvtmWatchdogTimer\"");
      }
      uint64_t v8 = (id *)GpsdPreferences::instance(0);
      signed int PvtmTimeOut = GpsdPreferences::getPvtmTimeOut(v8);
      uint64_t v10 = 1000000000 * PvtmTimeOut;
      long long v11 = *(NSObject **)(v3 + 1928);
      dispatch_time_t v12 = dispatch_walltime(0, v10);
      dispatch_source_set_timer(v11, v12, v10, 0x12A05F200uLL);
      uint64_t v13 = *(NSObject **)(v3 + 1928);
      *(void *)int buf = _NSConcreteStackBlock;
      *(void *)&uint8_t buf[8] = 3221225472;
      *(void *)&uint8_t buf[16] = sub_1000182FC;
      *(void *)&buf[24] = &unk_100104E20;
      uint64_t v19 = v3;
      signed int v20 = PvtmTimeOut;
      dispatch_source_set_event_handler(v13, buf);
      *(double *)(v3 + 1920) = (double)gpsd::util::getMachContinuousTimeNs(v14) * 0.000000001;
      dispatch_resume(*(dispatch_object_t *)(v3 + 1928));
    }
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)int buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v2;
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "#gdm,start,onAccepted failure,%{public}d", buf, 8u);
    }
    *(unsigned char *)(v3 + 1848) = 0;
    sub_100010DAC((void *)v3);
  }
  sub_100010984(v3, (proto::gpsd *)1, v2);
}

void sub_1000225F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100022648(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100022688()
{
}

void sub_100022698()
{
}

void *sub_1000226AC(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100106C38;
  result[1] = v3;
  return result;
}

uint64_t sub_1000226F4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100106C38;
  a2[1] = v2;
  return result;
}

void sub_100022720(uint64_t a1, int *a2)
{
  int v2 = *a2;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = qword_100114840;
  if (*a2 != 1)
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
    {
      LODWORD(v6) = 67240192;
      HIDWORD(v6) = v2;
      _os_log_fault_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "#gdm,start,onCompleted failure,%{public}d", (uint8_t *)&v6, 8u);
    }
    LODWORD(v6) = 1;
    HIDWORD(v6) = v2;
    v7[1] = 0;
    __p[0] = 0;
    v7[0] = 0;
    sub_1000033AC(&__p[1], "startCompletedFailure");
    sub_10000EB7C();
  }
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v6) = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#gdm,start,onCompleted success", (uint8_t *)&v6, 2u);
  }
  uint64_t v6 = &off_10010DB88;
  *(_OWORD *)dispatch_source_t v7 = 0u;
  *(_OWORD *)std::string __p = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  int v20 = 1;
  LODWORD(v7[0]) = 22;
  unsigned int v5 = gnss::Convert::toProtobuf(1u);
  if (v5 >= 0xA) {
    __assert_rtn("set_start_status", "GpsdProtocol.pb.h", 8175, "::proto::gnss::Result_IsValid(value)");
  }
  v20 |= 0x1000u;
  DWORD2(v12) = v5;
  sub_10000A630(v3, (uint64_t)&v6);
  uint64_t v6 = &off_10010DB88;
  proto::gpsd::Indication::SharedDtor(&v6);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)&v6);
}

void sub_100022934(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100022978(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1000229B8()
{
}

void sub_1000229C8()
{
}

void *sub_1000229DC(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100106CB8;
  result[1] = v3;
  return result;
}

uint64_t sub_100022A24(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100106CB8;
  a2[1] = v2;
  return result;
}

void sub_100022A50(uint64_t a1, unsigned int *a2)
{
  unsigned int v2 = *a2;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = qword_100114840;
  if (*a2 == 1)
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v5[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,Enter Emergency Mode", (uint8_t *)v5, 2u);
    }
    VendorLogger::notifyStart((VendorLogger *)(v3 + 24));
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      v5[0] = 67240192;
      v5[1] = v2;
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "#gdm,#nilr,Failed to Enter Emergency Mode,%{public}d", (uint8_t *)v5, 8u);
    }
    *(unsigned char *)(v3 + 1896) = 0;
    sub_100010DAC((void *)v3);
  }
  sub_100010984(v3, (proto::gpsd *)0x33, v2);
}

uint64_t sub_100022B64(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100022BA4()
{
}

void sub_100022BB4()
{
}

void *sub_100022BC8()
{
  __n128 result = operator new(0x10uLL);
  void *result = off_100106D38;
  return result;
}

void sub_100022C00(uint64_t a1, void *a2)
{
  *a2 = off_100106D38;
}

void sub_100022C28(uint64_t a1, int *a2)
{
  int v2 = *a2;
  uint64_t v3 = qword_100114840;
  if (*a2 == 1)
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v4[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr_start,onCompleted success", (uint8_t *)v4, 2u);
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    v4[0] = 67240192;
    v4[1] = v2;
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "#gdm,#nilr_start,onCompleted failure,%{public}d", (uint8_t *)v4, 8u);
  }
}

uint64_t sub_100022D0C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100022D4C()
{
}

void sub_100022D5C()
{
}

void *sub_100022D70(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100106DB8;
  result[1] = v3;
  return result;
}

uint64_t sub_100022DB8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100106DB8;
  a2[1] = v2;
  return result;
}

void sub_100022DE4(uint64_t a1, unsigned int *a2)
{
  unsigned int v2 = *a2;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = qword_100114840;
  if (*a2 == 1)
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v5[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#gdm,stop,onAccepted success", (uint8_t *)v5, 2u);
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    v5[0] = 67240192;
    v5[1] = v2;
    _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "#gdm,stop,onAccepted failure,%{public}d", (uint8_t *)v5, 8u);
  }
  sub_100010984(v3, (proto::gpsd *)2, v2);
}

uint64_t sub_100022EE4(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100022F24()
{
}

void sub_100022F34()
{
}

void *sub_100022F48(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100106E38;
  result[1] = v3;
  return result;
}

uint64_t sub_100022F90(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100106E38;
  a2[1] = v2;
  return result;
}

void sub_100022FBC(uint64_t a1, int *a2)
{
  int v2 = *a2;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = **(NSObject ***)(v3 + 1936);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_100023088;
  v5[3] = &unk_100104E20;
  void v5[4] = v3;
  int v6 = v2;
  dispatch_async(v4, v5);
}

uint64_t sub_10002303C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10002307C()
{
}

void sub_100023088(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = *(_DWORD *)(a1 + 40);
  uint64_t v4 = qword_100114840;
  if (v3 == 1)
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v6[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#gdm,stop,onCompleted success", (uint8_t *)v6, 2u);
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    v6[0] = 67240192;
    v6[1] = v3;
    _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "#gdm,stop,onCompleted failure,%{public}d", (uint8_t *)v6, 8u);
  }
  uint64_t v5 = *(void *)(v2 + 1824);
  if (v5) {
    sub_100002F8C(v5);
  }
  *(_DWORD *)(v2 + 1900) = *(_DWORD *)(a1 + 40);
}

void sub_100023194()
{
}

void *sub_1000231A8(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100106EB8;
  result[1] = v3;
  return result;
}

uint64_t sub_1000231F0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100106EB8;
  a2[1] = v2;
  return result;
}

void sub_10002321C(uint64_t a1, unsigned int *a2)
{
  unsigned int v2 = *a2;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = qword_100114840;
  if (*a2 == 1)
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v5[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr,Exit Emergency Mode success", (uint8_t *)v5, 2u);
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    v5[0] = 67240192;
    v5[1] = v2;
    _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "#gdm,#nilr,Exit Emergency Mode failure,%{public}d", (uint8_t *)v5, 8u);
  }
  sub_100010984(v3, (proto::gpsd *)0x34, v2);
}

uint64_t sub_10002331C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10002335C()
{
}

void sub_10002336C()
{
}

void *sub_100023380(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100106F38;
  result[1] = v3;
  return result;
}

uint64_t sub_1000233C8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100106F38;
  a2[1] = v2;
  return result;
}

void sub_1000233F4(uint64_t a1, int *a2)
{
  int v2 = *a2;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = **(NSObject ***)(v3 + 1936);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_1000234C0;
  v5[3] = &unk_100104E20;
  void v5[4] = v3;
  int v6 = v2;
  dispatch_async(v4, v5);
}

uint64_t sub_100023474(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_1000234B4()
{
}

void sub_1000234C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = *(_DWORD *)(a1 + 40);
  uint64_t v4 = qword_100114840;
  if (v3 == 1)
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v5[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#gdm,#nilr_stop,onCompleted success", (uint8_t *)v5, 2u);
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    v5[0] = 67240192;
    v5[1] = v3;
    _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "#gdm,#nilr_stop,onCompleted failure,%{public}d", (uint8_t *)v5, 8u);
  }
  *(_DWORD *)(v2 + 1900) = *(_DWORD *)(a1 + 40);
}

void sub_1000235C0()
{
}

void *sub_1000235D4()
{
  __n128 result = operator new(0x10uLL);
  void *result = off_100106FB8;
  return result;
}

void sub_10002360C(uint64_t a1, void *a2)
{
  *a2 = off_100106FB8;
}

void sub_100023634(uint64_t a1, int *a2)
{
  int v3 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *a2;
    v5[0] = 67240192;
    v5[1] = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#gdm,stopBlocking,reg,onAccepted,%{public}d", (uint8_t *)v5, 8u);
  }
}

uint64_t sub_1000236D8(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100023718()
{
}

void sub_100023728()
{
}

void *sub_10002373C(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100107038;
  result[1] = v3;
  return result;
}

uint64_t sub_100023784(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100107038;
  a2[1] = v2;
  return result;
}

void sub_1000237B0(uint64_t a1, int *a2)
{
  int v2 = *a2;
  sub_100019AA8(**(void **)(a1 + 8), &v2);
}

uint64_t sub_1000237E4(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100023824()
{
}

void sub_100023834()
{
}

void *sub_100023848()
{
  __n128 result = operator new(0x10uLL);
  void *result = off_1001070B8;
  return result;
}

void sub_100023880(uint64_t a1, void *a2)
{
  *a2 = off_1001070B8;
}

void sub_1000238A8(uint64_t a1, int *a2)
{
  uint64_t v3 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *a2;
    v5[0] = 67240192;
    v5[1] = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#gdm,stopBlocking,emerg,onAccepted,%{public}d", (uint8_t *)v5, 8u);
  }
}

uint64_t sub_10002394C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10002398C()
{
}

void sub_10002399C()
{
}

void *sub_1000239B0(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100107138;
  result[1] = v3;
  return result;
}

uint64_t sub_1000239F8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100107138;
  a2[1] = v2;
  return result;
}

void sub_100023A24(uint64_t a1, int *a2)
{
  int v2 = *a2;
  sub_100019AA8(**(void **)(a1 + 8), &v2);
}

uint64_t sub_100023A58(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100023A98()
{
}

void *sub_100023AA4(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    int v4 = (void *)result[3];
    uint64_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        void v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        void v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        __n128 result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        __n128 result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        void v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      __n128 result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      void v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_100023D04(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100002FCC(a1);
}

void sub_100023D10(int a1)
{
  if (a1 == 2)
  {
    uint64_t v1 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_8;
    }
    *(_WORD *)int buf = 0;
    int v2 = "#gpsdMain,received SIGINT";
    uint64_t v3 = buf;
    goto LABEL_7;
  }
  if (a1 != 15) {
    return;
  }
  uint64_t v1 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v10 = 0;
    int v2 = "#gpsdMain,received SIGTERM";
    uint64_t v3 = (uint8_t *)&v10;
LABEL_7:
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, v2, v3, 2u);
  }
LABEL_8:
  uint64_t v4 = qword_100114290;
  if (qword_100114290)
  {
    uint64_t v5 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#gpsdMain,starting client manager termination", v8, 2u);
      uint64_t v4 = qword_100114290;
    }
    sub_100026E08(v4);
    int v6 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)dispatch_source_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#gpsdMain,finished client manager termination", v7, 2u);
    }
  }
}

uint64_t start()
{
  if (!qword_100114840) {
    qword_100114840 = (uint64_t)os_log_create("com.apple.gpsd", "general");
  }
  if (!qword_100114838) {
    qword_100114838 = (uint64_t)os_log_create("com.apple.gpsd", "Warning");
  }
  if (!qword_100114830) {
    qword_100114830 = (uint64_t)os_log_create("com.apple.gpsd", "device");
  }
  if (!qword_100114828) {
    qword_100114828 = (uint64_t)os_log_create("com.apple.gpsd", "NMEA");
  }
  if (!qword_100114298) {
    qword_100114298 = (uint64_t)os_log_create("com.apple.gpsd", "gem");
  }
  uint64_t v1 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v18) = 0;
    _os_log_debug_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEBUG, "Logging init, check if the level is enabled", (uint8_t *)&v18, 2u);
    uint64_t v1 = qword_100114840;
  }
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    LOWORD(v18) = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Logging init, check if the level is enabled", (uint8_t *)&v18, 2u);
    uint64_t v1 = qword_100114840;
  }
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v18) = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Logging init, check if the level is enabled", (uint8_t *)&v18, 2u);
    uint64_t v1 = qword_100114840;
  }
  BOOL v2 = os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    double ProcessUptimeSec = gpsd::util::getProcessUptimeSec((gpsd::util *)v2);
    int v18 = 134217984;
    *(double *)long long v19 = ProcessUptimeSec;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Record process start time, %.1f", (uint8_t *)&v18, 0xCu);
  }
  int v4 = *(_DWORD *)(GpsdPlatformInfo::instance(0) + 8);
  if ((v4 - 201) >= 2)
  {
    unsigned int v6 = v4 - 103;
    if (v6 > 4) {
      unsigned int v5 = 0;
    }
    else {
      unsigned int v5 = (0x19u >> v6) & 1;
    }
  }
  else
  {
    unsigned int v5 = 1;
  }
  dispatch_source_t v7 = (id *)GpsdPreferences::instance(0);
  unsigned int v8 = v5 & (GpsdPreferences::forceDisableGpsd(v7) ^ 1);
  long long v9 = qword_100114840;
  BOOL v10 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT);
  if (v8 == 1)
  {
    if (v10)
    {
      unint64_t MachContinuousTimeNs = gpsd::util::getMachContinuousTimeNs((gpsd::util *)v10);
      int v18 = 134349570;
      *(double *)long long v19 = (double)MachContinuousTimeNs * 0.000000001;
      *(_WORD *)&v19[8] = 2080;
      *(void *)&v19[10] = "Nov 10 2024";
      __int16 v20 = 2082;
      long long v21 = "02:41:41";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#gpsdStart,machContSec,%{public}.3f,Build date,{%s %{public}s}", (uint8_t *)&v18, 0x20u);
    }
    signal(2, (void (__cdecl *)(int))sub_100023D10);
    signal(15, (void (__cdecl *)(int))sub_100023D10);
    if (access("/var/db/gpsd", 0))
    {
      long long v12 = __error();
      long long v13 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
      {
        int v14 = *v12;
        long long v15 = strerror(v14);
        int v18 = 67240450;
        *(_DWORD *)long long v19 = v14;
        *(_WORD *)&v19[4] = 2082;
        *(void *)&v19[6] = v15;
        _os_log_fault_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_FAULT, "#gpsdMain,home check failure,%{public}d,%{public}s", (uint8_t *)&v18, 0x12u);
      }
    }
    else
    {
      long long v16 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v18) = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#gpsdMain,home check success", (uint8_t *)&v18, 2u);
      }
    }
    sub_1000242D0((uint64_t)&v18);
  }
  if (v10)
  {
    LOWORD(v18) = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#gpsdStart,gpsd is disabled and will remain idle", (uint8_t *)&v18, 2u);
  }
  [+[NSRunLoop currentRunLoop] run];
  return 0;
}

void sub_1000242B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1000242D0(uint64_t a1)
{
  *(void *)(a1 + 32) = 0;
  BOOL v2 = (dispatch_queue_t *)(a1 + 32);
  *(void *)(a1 + 40) = 850045863;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(unsigned char *)(a1 + 128) = 0;
  uint64_t v3 = (id *)GpsdPreferences::instance(0);
  if (GpsdPreferences::enableProtobufBinaryLog(v3)) {
    operator new();
  }
  int v4 = (id *)GpsdPreferences::instance(0);
  if (GpsdPreferences::enableInterfaceTelemetry(v4)) {
    operator new();
  }
  unsigned int v5 = (id *)GpsdPreferences::instance(0);
  *(unsigned char *)(a1 + 128) = GpsdPreferences::enableProtobufTextLog(v5);
  unsigned int v6 = (id *)GpsdPreferences::instance(0);
  dispatch_qos_class_t v7 = GpsdPreferences::maxSchedulerQos(v6);
  unsigned int v8 = dispatch_queue_attr_make_with_qos_class(0, v7, -1);
  if (!v8)
  {
    long long v9 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#gpsdClientManager,null receive queue attr", buf, 2u);
    }
  }
  *(void *)(a1 + 24) = dispatch_queue_create("com.apple.gpsd.receiveq", v8);
  BOOL v10 = dispatch_queue_attr_make_with_qos_class(0, v7, 0);
  if (!v10)
  {
    long long v11 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#gpsdClientManager,null device queue attr", buf, 2u);
    }
  }
  dispatch_queue_t *v2 = dispatch_queue_create("com.apple.gpsd.gnssdeviceq", v10);
  long long v12 = (id *)GpsdPreferences::instance(0);
  GpsdPreferences::useInternalEmergencyStack(v12);
  operator new();
}

void sub_1000247DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_100027558(v35, 0);
  sub_10002749C(v34, 0);
  std::mutex::~mutex(v33);
  sub_100026FA8(v32, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_1000248B8(uint64_t a1)
{
  unint64_t MachContinuousTimeNs = (gpsd::util *)gpsd::util::getMachContinuousTimeNs((gpsd::util *)a1);
  uint64_t v3 = MachContinuousTimeNs;
  *(_DWORD *)(a1 + 52) |= 1u;
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4) {
    operator new();
  }
  *(_DWORD *)(v4 + 44) |= 4u;
  *(double *)(v4 + 24) = (double)(unint64_t)MachContinuousTimeNs * 0.000000001;
  *(_DWORD *)(a1 + 52) |= 1u;
  unint64_t MachAbsoluteTimeNs = gpsd::util::getMachAbsoluteTimeNs(MachContinuousTimeNs);
  *(_DWORD *)(v4 + 44) |= 2u;
  *(double *)(v4 + 16) = (double)MachAbsoluteTimeNs * 0.000000001;
  *(_DWORD *)(a1 + 52) |= 1u;
  uint64_t v6 = *(void *)(a1 + 32);
  if (!v6) {
    operator new();
  }
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  *(_DWORD *)(v6 + 44) |= 1u;
  *(CFAbsoluteTime *)(v6 + 8) = Current;
  *(_DWORD *)(a1 + 52) |= 2u;
  uint64_t v8 = *(void *)(a1 + 40);
  if (!v8) {
    operator new();
  }
  uint64_t result = *(void *)(v8 + 8);
  *(_DWORD *)(v8 + 20) |= 1u;
  if (!result) {
    operator new();
  }
  *(_DWORD *)(result + 52) |= 1u;
  *(void *)(result + 8) = v3;
  return result;
}

uint64_t sub_100024AE4(uint64_t a1)
{
  *(void *)a1 = v3;
  *(void *)(a1 + *(void *)(v3 - 24)) = v2;
  uint64_t v4 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v4, (void *)(a1 + 8));
  v4[1].__vftable = 0;
  v4[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf();
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_DWORD *)(a1 + 104) = 16;
  return a1;
}

void sub_100024C54(_Unwind_Exception *a1)
{
}

uint64_t sub_100024C7C(uint64_t a1)
{
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  std::ios::~ios();
  return a1;
}

void sub_100024D80(uint64_t a1, int *a2)
{
  uint64_t v4 = (std::mutex *)(a1 + 40);
  std::mutex::lock((std::mutex *)(a1 + 40));
  if (*(void *)(a1 + 104) || *(unsigned char *)(a1 + 128))
  {
    unsigned int v5 = CLP::LogEntry::LogEntry::LogEntry((CLP::LogEntry::LogEntry *)buf);
    uint64_t v6 = sub_1000248B8((uint64_t)v5);
    *(_DWORD *)(v6 + 52) |= 8u;
    uint64_t v7 = *(void *)(v6 + 32);
    if (!v7) {
      operator new();
    }
    if ((int *)v7 != a2)
    {
      (*(void (**)(uint64_t))(*(void *)v7 + 32))(v7);
      proto::gpsd::Response::MergeFrom(v7, (uint64_t)a2);
    }
    if (*(unsigned char *)(a1 + 128) && (a2[4] & 0xFFFFFFFE) != 0xE)
    {
      sub_100024AE4((uint64_t)v36);
      GpsdProtobufPrintingUtilities::printMessageInJson(v6, v36);
      uint64_t v8 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
      {
        std::stringbuf::str();
        uint64_t v24 = v33 >= 0 ? &v32 : (void **)v32;
        *(_DWORD *)unint64_t v34 = 136315138;
        int v35 = v24;
        _os_log_debug_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "ProtoJson: %s", v34, 0xCu);
        if (v33 < 0) {
          operator delete(v32);
        }
      }
      if (v40 < 0) {
        operator delete(__p);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      std::ios::~ios();
    }
    long long v9 = *(ProtobufLogger **)(a1 + 104);
    if (v9) {
      ProtobufLogger::log(v9, (const CLP::LogEntry::LogEntry *)buf);
    }
    CLP::LogEntry::LogEntry::~LogEntry((CLP::LogEntry::LogEntry *)buf);
  }
  if (*(void *)(a1 + 16))
  {
    BOOL v10 = (gpsd::util *)(*(uint64_t (**)(int *))(*(void *)a2 + 72))(a2);
    int64_t v11 = gpsd::util::getMachContinuousTimeNs(v10) - *(void *)(a1 + 120);
    unsigned int v12 = a2[4];
    if (v11 >= 200000001)
    {
      double v13 = (double)v11 * 0.000001;
      if ((unint64_t)v11 < 0x2540BE401)
      {
        if ((unint64_t)v11 > 0xB2D05E00 || v12 > 0x33 || ((0x8000400000002uLL >> v12) & 1) == 0)
        {
          long long v17 = qword_100114838;
          if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
          {
            gpsd::util::stringify(v12, (uint64_t)v36);
            if (SBYTE3(v38) >= 0) {
              int v18 = v36;
            }
            else {
              int v18 = *(unsigned char **)v36;
            }
            *(_DWORD *)int buf = 134349314;
            double v42 = v13;
            __int16 v43 = 2082;
            int v44 = v18;
            _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "#gpsdClientManager,excessive request-response delay,%{public}.2f,ms,%{public}s", buf, 0x16u);
LABEL_34:
            if (SBYTE3(v38) < 0) {
              operator delete(*(void **)v36);
            }
          }
        }
      }
      else
      {
        int v14 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          gpsd::util::stringify(v12, (uint64_t)v36);
          if (SBYTE3(v38) >= 0) {
            long long v15 = v36;
          }
          else {
            long long v15 = *(unsigned char **)v36;
          }
          *(_DWORD *)int buf = 134349314;
          double v42 = v13;
          __int16 v43 = 2082;
          int v44 = v15;
          _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "#gpsdClientManager,excessive request-response delay,%{public}.2f,ms,%{public}s", buf, 0x16u);
          goto LABEL_34;
        }
      }
    }
    uint64_t v19 = *(void *)(a1 + 112);
    if (v19) {
      sub_100008984(v19, a2[4], (int)v10);
    }
    __int16 v20 = malloc_type_malloc((int)v10, 0x9A3FA7B1uLL);
    if (!v20)
    {
      long long v25 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v36 = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_ERROR, "#gpsdClientManager,Response memory allocation failed", v36, 2u);
        long long v25 = qword_100114840;
      }
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)uint64_t v36 = 136446722;
        *(void *)&v36[4] = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Daemon/GpsdClientManager.mm";
        *(_WORD *)&v36[12] = 1026;
        *(_DWORD *)&v36[14] = 165;
        __int16 v37 = 2082;
        size_t v38 = "handleResponse";
        _os_log_error_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", v36, 0x1Cu);
      }
      sub_1000033AC(v30, "assert");
      sub_1000033AC(v28, "handleResponse");
      sub_1000033AC(v26, "#gpsdClientManager,Response memory allocation failed");
      gpsd::util::triggerDiagnosticReport((uint64_t)v30, (long long *)v28, (long long *)v26);
      if (v27 < 0) {
        operator delete(v26[0]);
      }
      if (v29 < 0) {
        operator delete(v28[0]);
      }
      if (v31 < 0) {
        operator delete(v30[0]);
      }
      __assert_rtn("handleResponse", "GpsdClientManager.mm", 165, "false && \"#gpsdClientManager,Response memory allocation failed\"");
    }
    if ((v12 & 0xFFFFFFFE) != 0xE)
    {
      long long v21 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
      {
        gpsd::util::stringify(v12, (uint64_t)v36);
        if (SBYTE3(v38) >= 0) {
          long long v23 = v36;
        }
        else {
          long long v23 = *(unsigned char **)v36;
        }
        *(_DWORD *)int buf = 136315138;
        double v42 = *(double *)&v23;
        _os_log_debug_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "#gpsdClientManager,sendResponse,%s", buf, 0xCu);
        if (SBYTE3(v38) < 0) {
          operator delete(*(void **)v36);
        }
      }
    }
    wireless_diagnostics::google::protobuf::MessageLite::SerializeToArray((wireless_diagnostics::google::protobuf::MessageLite *)a2, v20);
    xpc_object_t v22 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_data(v22, "gpsdResponse", v20, (int)v10);
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 16), v22);
    xpc_release(v22);
    free(v20);
    goto LABEL_42;
  }
  long long v16 = qword_100114838;
  if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#gpsdClientManager,No remote connection to send response", v36, 2u);
  }
LABEL_42:
  std::mutex::unlock(v4);
}

void sub_1000254D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  std::mutex::unlock(v34);
  _Unwind_Resume(a1);
}

void sub_10002557C(uint64_t a1, xpc_object_t object)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = xpc_copy_description(object);
  xpc_type_t type = xpc_get_type(object);
  uint64_t v6 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    buf.val[0] = 67240962;
    buf.val[1] = type == (xpc_type_t)&_xpc_type_connection;
    LOWORD(buf.val[2]) = 1026;
    *(unsigned int *)((char *)&buf.val[2] + 2) = type == (xpc_type_t)&_xpc_type_error;
    HIWORD(buf.val[3]) = 1026;
    buf.val[4] = type == (xpc_type_t)&_xpc_type_dictionary;
    LOWORD(buf.val[5]) = 2080;
    *(void *)((char *)&buf.val[5] + 2) = v4;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#gpsdClientManager,Connection,XPC_TYPE_CONNECTION,%{public}d,XPC_TYPE_ERROR,%{public}d,XPC_TYPE_DICTIONARY,%{public}d,desc,%s", (uint8_t *)&buf, 0x1Eu);
  }
  free(v4);
  if (type == (xpc_type_t)&_xpc_type_error)
  {
    uint64_t v11 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
      return;
    }
    string = xpc_dictionary_get_string(object, _xpc_error_key_description);
    buf.val[0] = 67240962;
    buf.val[1] = object == &_xpc_error_connection_interrupted;
    LOWORD(buf.val[2]) = 1026;
    *(unsigned int *)((char *)&buf.val[2] + 2) = object == &_xpc_error_connection_invalid;
    HIWORD(buf.val[3]) = 1026;
    buf.val[4] = object == &_xpc_error_termination_imminent;
    LOWORD(buf.val[5]) = 2080;
    *(void *)((char *)&buf.val[5] + 2) = string;
    uint64_t v8 = "#gpsdClientManager,ConnectionError,XPC_ERROR_CONNECTION_INTERRUPTED,%{public}d,XPC_ERROR_CONNECTION_INVALID,%{p"
         "ublic}d,XPC_ERROR_TERMINATION_IMMINENT,%{public}d,ErrorDesc,%s";
    long long v9 = v11;
    uint32_t v10 = 30;
    goto LABEL_47;
  }
  if (type != (xpc_type_t)&_xpc_type_connection)
  {
    uint64_t v7 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
      return;
    }
    buf.val[0] = 134217984;
    *(void *)&buf.val[1] = type;
    uint64_t v8 = "#gpsdClientManager,Connection,Unexpected type,%p";
    long long v9 = v7;
    uint32_t v10 = 12;
LABEL_47:
    _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, v8, (uint8_t *)&buf, v10);
    return;
  }
  pid_t pid = xpc_connection_get_pid((xpc_connection_t)object);
  int v14 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    buf.val[0] = 67109376;
    buf.val[1] = pid;
    LOWORD(buf.val[2]) = 2048;
    *(void *)((char *)&buf.val[2] + 2) = object;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "#gpsdClientManager,handleXPCConnection,pid,%d,incomingConnection,%p", (uint8_t *)&buf, 0x12u);
  }
  xpc_connection_get_audit_token();
  audit_token_t v38 = v29;
  long long v15 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(buf.val[0]) = 0;
    _os_log_debug_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "#gpsdClientManager,checkEntitlement", (uint8_t *)&buf, 2u);
  }
  CFErrorRef error = 0;
  audit_token_t buf = v38;
  long long v16 = SecTaskCreateWithAuditToken(kCFAllocatorDefault, &buf);
  long long v17 = v16;
  if (v16)
  {
    CFTypeRef v18 = SecTaskCopyValueForEntitlement(v16, @"com.apple.gpsd", &error);
    uint64_t v19 = v18;
    if (!error)
    {
      if (v18)
      {
        CFTypeID TypeID = CFBooleanGetTypeID();
        if (TypeID == CFGetTypeID(v19))
        {
          if (CFEqual(v19, kCFBooleanTrue))
          {
            char v21 = 1;
          }
          else
          {
            uint64_t v28 = qword_100114840;
            if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
            {
              *(_WORD *)int v30 = 0;
              _os_log_error_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_ERROR, "#gpsdClientManager,SecTaskCopyValueForEntitlement check failed", v30, 2u);
            }
            char v21 = 0;
          }
LABEL_22:
          CFRelease(v19);
          goto LABEL_26;
        }
      }
    }
    xpc_object_t v22 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)int v30 = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "#gpsdClientManager,SecTaskCopyValueForEntitlement failed", v30, 2u);
    }
    char v21 = 0;
    if (v19) {
      goto LABEL_22;
    }
  }
  else
  {
    long long v23 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)int v30 = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, "#gpsdClientManager,SecTaskCreateWithAuditToken failed", v30, 2u);
    }
    char v21 = 0;
  }
LABEL_26:
  if (error) {
    CFRelease(error);
  }
  if (v17) {
    CFRelease(v17);
  }
  uint64_t v24 = qword_100114840;
  if ((v21 & 1) == 0)
  {
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
      return;
    }
    buf.val[0] = 67109120;
    buf.val[1] = pid;
    uint64_t v8 = "#gpsdClientManager,Entitlement check failed for client pid,%d";
    long long v9 = v24;
    uint32_t v10 = 8;
    goto LABEL_47;
  }
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    buf.val[0] = 67109120;
    buf.val[1] = pid;
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "#gpsdClientManager,Entitlement check passed for client pid,%d", (uint8_t *)&buf, 8u);
  }
  std::mutex::lock((std::mutex *)(v3 + 40));
  if (*(void *)(v3 + 16))
  {
    long long v25 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
    {
      LOWORD(buf.val[0]) = 0;
      _os_log_fault_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_FAULT, "#gpsdClientManager,fRemoteConnection already exists", (uint8_t *)&buf, 2u);
    }
    sub_1000033AC(&buf, "XPC");
    sub_1000033AC(&buf.val[6], "duplicate_connection");
    sub_1000033AC(&__p, "");
    char v37 = 0;
    gpsd::util::triggerDiagnosticReport((uint64_t)&buf);
    xpc_connection_suspend(*(xpc_connection_t *)(v3 + 16));
    xpc_release(*(xpc_object_t *)(v3 + 16));
    if (v36 < 0) {
      operator delete(__p);
    }
    if (v34 < 0) {
      operator delete(*(void **)&buf.val[6]);
    }
    if (SHIBYTE(buf.val[5]) < 0) {
      operator delete(*(void **)buf.val);
    }
  }
  *(void *)(v3 + 16) = object;
  xpc_retain(object);
  xpc_connection_set_target_queue(*(xpc_connection_t *)(v3 + 16), *(dispatch_queue_t *)(v3 + 24));
  uint64_t v26 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    buf.val[0] = 67109632;
    buf.val[1] = v29.val[0];
    LOWORD(buf.val[2]) = 1024;
    *(unsigned int *)((char *)&buf.val[2] + 2) = v29.val[7];
    HIWORD(buf.val[3]) = 1024;
    buf.val[4] = pid;
    _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "#gpsdClientManager,handleXPCConnection,token,0x%08X-0x%08X,pid,%d", (uint8_t *)&buf, 0x14u);
  }
  char v27 = *(_xpc_connection_s **)(v3 + 16);
  *(void *)buf.val = _NSConcreteStackBlock;
  *(void *)&buf.val[2] = 3221225472;
  *(void *)&buf.val[4] = sub_100025C88;
  *(void *)&buf.val[6] = &unk_1001071E8;
  uint64_t v33 = v3;
  xpc_connection_set_event_handler(v27, &buf);
  xpc_connection_resume(*(xpc_connection_t *)(v3 + 16));
  std::mutex::unlock((std::mutex *)(v3 + 40));
}

void sub_100025C28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  std::mutex::unlock(v26);
  _Unwind_Resume(a1);
}

void sub_100025C88(uint64_t a1, xpc_object_t object)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_error)
  {
    unsigned int v5 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)audit_token_t buf = 67240962;
      *(_DWORD *)&uint8_t buf[4] = object == &_xpc_error_connection_interrupted;
      *(_WORD *)&uint8_t buf[8] = 1026;
      *(_DWORD *)&buf[10] = object == &_xpc_error_connection_invalid;
      *(_WORD *)&unsigned char buf[14] = 1026;
      LODWORD(v18) = object == &_xpc_error_termination_imminent;
      WORD2(v18) = 2080;
      *(void *)((char *)&v18 + 6) = xpc_dictionary_get_string(object, _xpc_error_key_description);
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "#gpsdClientManager,handleXPCMessage,ErrorType,INTERRUPTED,%{public}d,INVALID,%{public}d,IMMINENT,%{public}d,ErrorDesc,%s", buf, 0x1Eu);
    }
    if (object == &_xpc_error_connection_invalid)
    {
      long long v9 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)audit_token_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#gpsdClientManager,handleXPCConnectionInvalid,receipt", buf, 2u);
      }
      uint64_t v7 = *(NSObject **)(v3 + 32);
      *(void *)audit_token_t buf = _NSConcreteStackBlock;
      *(void *)&uint8_t buf[8] = 3221225472;
      uint64_t v8 = sub_100026D90;
    }
    else
    {
      if (object != &_xpc_error_termination_imminent)
      {
LABEL_16:
        std::mutex::lock((std::mutex *)(v3 + 40));
        xpc_connection_set_event_handler(*(xpc_connection_t *)(v3 + 16), &stru_100107228);
        xpc_connection_cancel(*(xpc_connection_t *)(v3 + 16));
        xpc_release(*(xpc_object_t *)(v3 + 16));
        *(void *)(v3 + 16) = 0;
        std::mutex::unlock((std::mutex *)(v3 + 40));
        return;
      }
      uint64_t v6 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)audit_token_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#gpsdClientManager,handleXPCConnectionTermination,receipt", buf, 2u);
      }
      uint64_t v7 = *(NSObject **)(v3 + 32);
      *(void *)audit_token_t buf = _NSConcreteStackBlock;
      *(void *)&uint8_t buf[8] = 3221225472;
      uint64_t v8 = sub_100026D18;
    }
    *(void *)&long long v18 = v8;
    *((void *)&v18 + 1) = &unk_100104D40;
    uint64_t v19 = v3;
    dispatch_async(v7, buf);
    goto LABEL_16;
  }
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_dictionary)
  {
    size_t length = 0;
    data = xpc_dictionary_get_data(object, "gpsdRequest", &length);
    xpc_dictionary_get_uint64(object, "requestNumber");
    xpc_dictionary_get_uint64(object, "timeNs");
    if (data)
    {
      v15[0] = 0;
      v15[1] = v15;
      v15[2] = 0x3812000000;
      v15[3] = sub_100026C3C;
      void v15[4] = sub_100026C4C;
      void v15[5] = 0;
      operator new();
    }
    uint64 = (gpsd::util *)xpc_dictionary_get_uint64(object, "connection_ns");
    uint64_t v11 = uint64;
    if (uint64)
    {
      unint64_t MachContinuousTimeNs = gpsd::util::getMachContinuousTimeNs(uint64);
      double v13 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)audit_token_t buf = 134349056;
        *(double *)&uint8_t buf[4] = (double)(MachContinuousTimeNs - (unint64_t)v11) * 0.000000001;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#gpsdClientManager,incomingConnection,age_sec,%{public}.3f", buf, 0xCu);
      }
      int v14 = *(NSObject **)(v3 + 32);
      *(void *)audit_token_t buf = _NSConcreteStackBlock;
      *(void *)&uint8_t buf[8] = 3221225472;
      *(void *)&long long v18 = sub_100026CA0;
      *((void *)&v18 + 1) = &unk_100104D40;
      uint64_t v19 = v3;
      dispatch_async(v14, buf);
    }
  }
}

void sub_100026A58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v43 - 153) < 0) {
    operator delete(*(void **)(v43 - 176));
  }
  CLP::LogEntry::LogEntry::~LogEntry((CLP::LogEntry::LogEntry *)(v43 - 144));
  _Block_object_dispose(&a18, 8);
  uint64_t v45 = a24;
  a24 = 0;
  if (v45) {
    (*(void (**)(uint64_t))(*(void *)v45 + 8))(v45);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100026C3C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0;
  *(void *)(result + 48) = v2;
  return result;
}

uint64_t sub_100026C4C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0;
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void sub_100026C84(uint64_t a1)
{
}

void sub_100026CA0(uint64_t a1)
{
  uint64_t v1 = *(uint64_t ***)(a1 + 32);
  uint64_t v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#gpsdClientManager,incomingConnection,processing", v3, 2u);
  }
  sub_100018504(**v1, 0);
}

void sub_100026D18(uint64_t a1)
{
  uint64_t v1 = *(uint64_t ***)(a1 + 32);
  uint64_t v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#gpsdClientManager,handleXPCConnectionTermination,processing", v3, 2u);
  }
  sub_100018504(**v1, 2);
}

void sub_100026D90(uint64_t a1)
{
  uint64_t v1 = *(uint64_t ***)(a1 + 32);
  uint64_t v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#gpsdClientManager,handleXPCConnectionInvalid,processing", v3, 2u);
  }
  sub_100018504(**v1, 3);
}

void sub_100026E08(uint64_t a1)
{
  uint64_t v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)audit_token_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#gpsdClientManager,handleTerminationSignal,receipt", buf, 2u);
  }
  uint64_t v3 = *(NSObject **)(a1 + 32);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100026EC4;
  block[3] = &unk_100104D40;
  block[4] = a1;
  dispatch_async(v3, block);
}

void sub_100026EC4(uint64_t a1)
{
  uint64_t v1 = *(uint64_t ***)(a1 + 32);
  uint64_t v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#gpsdClientManager,handleTerminationSignal,processing", v3, 2u);
  }
  sub_100018504(**v1, 1);
}

uint64_t sub_100026F3C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100026FA8(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_100026FF8(result);
    operator delete();
  }
  return result;
}

uint64_t sub_100026FF8(uint64_t a1)
{
  return a1;
}

void *sub_10002704C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1000270D0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_100027154(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  if (v3 == v2)
  {
    uint64_t v4 = a1 + 5;
    uint64_t v3 = (void **)a1[1];
  }
  else
  {
    uint64_t v4 = a1 + 5;
    unint64_t v5 = a1[4];
    uint64_t v6 = &v2[v5 >> 9];
    uint64_t v7 = (uint64_t **)((char *)*v6 + 8 * (v5 & 0x1FF));
    uint64_t v8 = *(uint64_t *)((char *)v2 + (((a1[5] + v5) >> 6) & 0x3FFFFFFFFFFFFF8)) + 8 * ((a1[5] + v5) & 0x1FF);
    if (v7 != (uint64_t **)v8)
    {
      do
      {
        long long v9 = *v7;
        NSObject *v7 = 0;
        if (v9) {
          sub_100027298((uint64_t)v7, v9);
        }
        if ((char *)++v7 - (unsigned char *)*v6 == 4096)
        {
          uint32_t v10 = (uint64_t **)v6[1];
          ++v6;
          uint64_t v7 = v10;
        }
      }
      while (v7 != (uint64_t **)v8);
      uint64_t v2 = (void **)a1[1];
      uint64_t v3 = (void **)a1[2];
    }
  }
  void *v4 = 0;
  unint64_t v11 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v11 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v12 = v11 >> 3;
  if (v12 == 1)
  {
    uint64_t v13 = 256;
  }
  else
  {
    if (v12 != 2) {
      goto LABEL_18;
    }
    uint64_t v13 = 512;
  }
  a1[4] = v13;
LABEL_18:
  while (v2 != v3)
  {
    int v14 = *v2++;
    operator delete(v14);
  }

  return sub_100027314((uint64_t)a1);
}

void sub_100027298(uint64_t a1, uint64_t *a2)
{
  if (a2)
  {
    uint64_t v2 = *a2;
    *a2 = 0;
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    operator delete();
  }
}

uint64_t sub_100027314(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != v3) {
    *(void *)(a1 + 16) = v2 + ((v3 - v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  uint64_t v4 = *(void **)a1;
  if (*(void *)a1) {
    operator delete(v4);
  }
  return a1;
}

void **sub_100027364(void **result, void *a2)
{
  uint64_t v2 = *result;
  void *result = a2;
  if (v2)
  {
    sub_10001901C(v2 + 4);
    sub_1000273C8(v2);
    operator delete();
  }
  return result;
}

void *sub_1000273C8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_10002744C(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_100009858(result);
    operator delete();
  }
  return result;
}

uint64_t sub_10002749C(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_1000274EC(result);
    operator delete();
  }
  return result;
}

void sub_1000274EC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 1016);
  if (v2)
  {
    *(void *)(a1 + 1024) = v2;
    operator delete(v2);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 952));
  uint64_t v3 = *(void **)(a1 + 928);
  if (v3)
  {
    *(void *)(a1 + 936) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *(void **)(a1 + 904);
  if (v4)
  {
    *(void *)(a1 + 912) = v4;
    operator delete(v4);
  }

  VendorLogger::~VendorLogger((VendorLogger *)a1);
}

uint64_t sub_100027558(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_100008144(result);
    operator delete();
  }
  return result;
}

void sub_1000275AC()
{
}

void *sub_1000275C0(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100107280;
  result[1] = v3;
  return result;
}

uint64_t sub_100027608(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100107280;
  a2[1] = v2;
  return result;
}

void sub_100027634(uint64_t a1, int *a2)
{
}

uint64_t sub_10002763C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10002767C()
{
}

void sub_10002768C()
{
}

void *sub_1000276A0(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100107310;
  result[1] = v3;
  return result;
}

uint64_t sub_1000276E8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100107310;
  a2[1] = v2;
  return result;
}

void sub_100027714(uint64_t a1, int *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  std::mutex::lock((std::mutex *)(v3 + 40));
  if (*(void *)(v3 + 104) || *(unsigned char *)(v3 + 128))
  {
    uint64_t v4 = CLP::LogEntry::LogEntry::LogEntry((CLP::LogEntry::LogEntry *)buf);
    uint64_t v5 = sub_1000248B8((uint64_t)v4);
    *(_DWORD *)(v5 + 52) |= 0x10u;
    uint64_t v6 = *(void *)(v5 + 40);
    if (!v6) {
      operator new();
    }
    if ((int *)v6 != a2)
    {
      (*(void (**)(uint64_t))(*(void *)v6 + 32))(v6);
      proto::gpsd::Indication::MergeFrom((proto::gpsd::Indication *)v6, (const proto::gpsd::Indication *)a2);
    }
    uint64_t v7 = *(ProtobufLogger **)(v3 + 104);
    if (v7) {
      ProtobufLogger::log(v7, (const CLP::LogEntry::LogEntry *)buf);
    }
    if (*(unsigned char *)(v3 + 128))
    {
      if ((*(unsigned char *)(v6 + 216) & 0x10) != 0)
      {
        uint64_t v8 = *(void *)(v6 + 32);
        if (!v8) {
          uint64_t v8 = *(void *)(proto::gpsd::Indication::default_instance_ + 32);
        }
        if ((*(unsigned char *)(v8 + 132) & 2) != 0)
        {
          uint64_t v10 = *(void *)(v8 + 16);
          if (!v10) {
            uint64_t v10 = *(void *)(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_ + 16);
          }
          int v9 = *(_DWORD *)(v10 + 24);
        }
        else
        {
          int v9 = -1;
        }
        std::to_string(&v30, v9);
        unint64_t v11 = std::string::insert(&v30, 0, "stripped ");
        long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
        v26.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v12;
        v11->__r_.__value_.__l.__size_ = 0;
        v11->__r_.__value_.__r.__words[2] = 0;
        v11->__r_.__value_.__r.__words[0] = 0;
        uint64_t v13 = std::string::append(&v26, " measurements");
        long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
        *(void *)&__str[16] = *((void *)&v13->__r_.__value_.__l + 2);
        *(_OWORD *)__str = v14;
        v13->__r_.__value_.__l.__size_ = 0;
        v13->__r_.__value_.__r.__words[2] = 0;
        v13->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v26.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v30.__r_.__value_.__l.__data_);
        }
        *(_DWORD *)(v5 + 52) |= 2u;
        long long v15 = *(std::string **)(v5 + 16);
        if (v15 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        std::string::operator=(v15, (const std::string *)__str);
        long long v16 = *(CLP::LogEntry::PrivateData::MeasurementReportCallbackContents **)(v6 + 32);
        if (v16) {
          CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::Clear(v16);
        }
        *(_DWORD *)(v6 + 216) &= ~0x10u;
        if ((__str[23] & 0x80000000) != 0) {
          operator delete(*(void **)__str);
        }
      }
      sub_100024AE4((uint64_t)__str);
      GpsdProtobufPrintingUtilities::printMessageInJson(v5, __str);
      long long v17 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
      {
        std::stringbuf::str();
        long long v25 = (v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
            ? &v26
            : (std::string *)v26.__r_.__value_.__r.__words[0];
        LODWORD(v30.__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)v30.__r_.__value_.__r.__words + 4) = (std::string::size_type)v25;
        _os_log_debug_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "ProtoJson: %s", (uint8_t *)&v30, 0xCu);
        if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v26.__r_.__value_.__l.__data_);
        }
      }
      if (v29 < 0) {
        operator delete(__p);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      std::ios::~ios();
    }
    CLP::LogEntry::LogEntry::~LogEntry((CLP::LogEntry::LogEntry *)buf);
  }
  if (*(void *)(v3 + 16))
  {
    int v18 = (*(uint64_t (**)(int *))(*(void *)a2 + 72))(a2);
    uint64_t v19 = *(void *)(v3 + 112);
    if (v19) {
      sub_100008A64(v19, a2[2], v18);
    }
    char v21 = malloc_type_malloc(v18, 0xA7C11912uLL);
    xpc_object_t v22 = qword_100114840;
    if (!v21)
    {
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)__str = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "#gpsdClientManager,Indication memory allocation failed", __str, 2u);
        xpc_object_t v22 = qword_100114840;
      }
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__str = 136446722;
        *(void *)&__str[4] = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Daemon/GpsdClientManager.mm";
        *(_WORD *)&__str[12] = 1026;
        *(_DWORD *)&__str[14] = 113;
        *(_WORD *)&__str[18] = 2082;
        *(void *)&__str[20] = "handleIndication";
        _os_log_error_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", __str, 0x1Cu);
      }
      sub_1000033AC(__str, "assert");
      sub_1000033AC(buf, "handleIndication");
      sub_1000033AC(&v26, "#gpsdClientManager,Indication memory allocation failed");
      gpsd::util::triggerDiagnosticReport((uint64_t)__str, (long long *)buf, (long long *)&v26);
      if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v26.__r_.__value_.__l.__data_);
      }
      if ((char)buf[23] < 0) {
        operator delete(*(void **)buf);
      }
      if ((__str[23] & 0x80000000) != 0) {
        operator delete(*(void **)__str);
      }
      __assert_rtn("handleIndication", "GpsdClientManager.mm", 113, "false && \"#gpsdClientManager,Indication memory allocation failed\"");
    }
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      gpsd::util::stringify(a2[2], (uint64_t)__str);
      if (__str[23] >= 0) {
        uint64_t v24 = __str;
      }
      else {
        uint64_t v24 = *(unsigned char **)__str;
      }
      *(_DWORD *)audit_token_t buf = 136315138;
      *(void *)&uint8_t buf[4] = v24;
      _os_log_debug_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "#gpsdClientManager,sendIndication,%s", buf, 0xCu);
      if ((__str[23] & 0x80000000) != 0) {
        operator delete(*(void **)__str);
      }
    }
    wireless_diagnostics::google::protobuf::MessageLite::SerializeToArray((wireless_diagnostics::google::protobuf::MessageLite *)a2, v21);
    xpc_object_t v23 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_data(v23, "gpsdIndication", v21, v18);
    xpc_connection_send_message(*(xpc_connection_t *)(v3 + 16), v23);
    xpc_release(v23);
    free(v21);
  }
  else
  {
    __int16 v20 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__str = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "#gpsdClientManager,No remote connection to send indication", __str, 2u);
    }
  }
  std::mutex::unlock((std::mutex *)(v3 + 40));
}

void sub_100027E2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v36 - 153) < 0) {
    operator delete(*(void **)(v36 - 176));
  }
  CLP::LogEntry::LogEntry::~LogEntry((CLP::LogEntry::LogEntry *)(v36 - 144));
  std::mutex::unlock(v35);
  _Unwind_Resume(a1);
}

uint64_t sub_100027FE0(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100028020()
{
}

BOOL CompressionUtil::decode(uint64_t a1, unint64_t *a2, compression_algorithm a3)
{
  uint64_t v6 = *(unsigned __int8 *)(a1 + 23);
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *(void *)(a1 + 8);
  }
  unint64_t v7 = 2 * v6;
  unint64_t v8 = a2[1] - *a2;
  if (v7 <= v8)
  {
    if (v7 < v8) {
      a2[1] = *a2 + v7;
    }
  }
  else
  {
    sub_100028718(a2, v7 - v8);
  }
  if (compression_stream_init(&stream, COMPRESSION_STREAM_DECODE, a3))
  {
    int v9 = qword_100114840;
    BOOL result = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT);
    if (result)
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_fault_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "#ee,#decompress,compression_stream_init failed", buf, 2u);
      return 0;
    }
  }
  else
  {
    unint64_t v11 = 0;
    size_t v12 = *(unsigned __int8 *)(a1 + 23);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = (const uint8_t *)a1;
    }
    else {
      uint64_t v13 = *(const uint8_t **)a1;
    }
    if ((v12 & 0x80u) != 0) {
      size_t v12 = *(void *)(a1 + 8);
    }
    stream.src_ptr = v13;
    stream.src_std::string::size_type size = v12;
    int v14 = 32;
    while (1)
    {
      unint64_t v15 = *a2;
      unint64_t v16 = a2[1];
      unint64_t v17 = v16 - *a2;
      if (!((v17 - v11) >> 15))
      {
        unint64_t v18 = v17 + 0x8000;
        float v19 = (float)v17 * 1.25;
        if (v17 + 0x8000 <= (unint64_t)v19) {
          unint64_t v18 = (unint64_t)v19;
        }
        if (v18 <= v17)
        {
          if (v18 < v17)
          {
            unint64_t v16 = v15 + v18;
            a2[1] = v15 + v18;
          }
        }
        else
        {
          sub_100028718(a2, v18 - v17);
          unint64_t v15 = *a2;
          unint64_t v16 = a2[1];
        }
      }
      size_t v20 = v16 - v15 - v11;
      stream.dst_ptr = (uint8_t *)(v15 + v11);
      stream.dst_std::string::size_type size = v20;
      compression_status v21 = compression_stream_process(&stream, 1);
      dst_std::string::size_type size = stream.dst_size;
      size_t v23 = v20 - stream.dst_size;
      if ((uint64_t)(v20 - stream.dst_size) < 0)
      {
        std::string v30 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)audit_token_t buf = 134349312;
          *(void *)long long v39 = v20;
          *(_WORD *)&v39[8] = 2050;
          *(void *)char v40 = dst_size;
          _os_log_error_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_ERROR, "negative changeInDestSize,%{public}zu,%{public}zu", buf, 0x16u);
          std::string v30 = qword_100114840;
        }
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)audit_token_t buf = 136446722;
          *(void *)long long v39 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Daemon/GpsdCompressionUtil.mm";
          *(_WORD *)&v39[8] = 1026;
          *(_DWORD *)char v40 = 55;
          *(_WORD *)&v40[4] = 2082;
          *(void *)&v40[6] = "decode";
          _os_log_error_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
        }
        sub_1000033AC(&v36, "assert");
        sub_1000033AC(&v35, "decode");
        sub_1000033AC(&v34, "negative changeInDestSize,%{public}zu,%{public}zu");
        gpsd::util::triggerDiagnosticReport((uint64_t)&v36, (long long *)&v35, (long long *)&v34);
        std::string::~string(&v34);
        std::string::~string(&v35);
        std::string::~string(&v36);
        __assert_rtn("decode", "GpsdCompressionUtil.mm", 55, "false && \"negative changeInDestSize,%{public}zu,%{public}zu\"");
      }
      v11 += v23;
      unint64_t v24 = a2[1] - *a2;
      long long v25 = qword_100114840;
      if (v11 > v24)
      {
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)audit_token_t buf = 134349312;
          *(void *)long long v39 = v11;
          *(_WORD *)&v39[8] = 2050;
          *(void *)char v40 = v24;
          _os_log_error_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_ERROR, "unexpected fill,%{public}zd,size,%{public}zu", buf, 0x16u);
          long long v25 = qword_100114840;
        }
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)audit_token_t buf = 136446722;
          *(void *)long long v39 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Daemon/GpsdCompressionUtil.mm";
          *(_WORD *)&v39[8] = 1026;
          *(_DWORD *)char v40 = 57;
          *(_WORD *)&v40[4] = 2082;
          *(void *)&v40[6] = "decode";
          _os_log_error_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
        }
        sub_1000033AC(&v33, "assert");
        sub_1000033AC(&v32, "decode");
        sub_1000033AC(&v31, "unexpected fill,%{public}zd,size,%{public}zu");
        gpsd::util::triggerDiagnosticReport((uint64_t)&v33, (long long *)&v32, (long long *)&v31);
        std::string::~string(&v31);
        std::string::~string(&v32);
        std::string::~string(&v33);
        __assert_rtn("decode", "GpsdCompressionUtil.mm", 57, "false && \"unexpected fill,%{public}zd,size,%{public}zu\"");
      }
      compression_status v26 = v21;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)audit_token_t buf = 67241216;
        *(_DWORD *)long long v39 = v26;
        *(_WORD *)&void v39[4] = 1026;
        *(_DWORD *)&v39[6] = v23;
        *(_WORD *)char v40 = 2050;
        *(void *)&v40[2] = stream.src_size;
        *(_WORD *)&v40[10] = 2050;
        *(void *)&v40[12] = v24;
        __int16 v41 = 2050;
        unint64_t v42 = v11;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "#ee,#decompress,processed,status,%{public}d,changeInDestSize,%{public}d,inputLeft,%{public}zu,outputVecSize,%{public}zu,outputFillLevel,%{public}zd", buf, 0x2Cu);
      }
      if (v26) {
        break;
      }
      if (!--v14)
      {
        char v27 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)audit_token_t buf = 0;
          _os_log_error_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "#ee,#decompress,loop counter failed sanity", buf, 2u);
        }
LABEL_37:
        sub_1000286A8(&stream);
        return 0;
      }
    }
    if (v26 != COMPRESSION_STATUS_END)
    {
      char v29 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)audit_token_t buf = 67240192;
        *(_DWORD *)long long v39 = v26;
        _os_log_error_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_ERROR, "#ee,#decompress,compression_stream_process error,%{public}d", buf, 8u);
      }
      goto LABEL_37;
    }
    unint64_t v28 = a2[1] - *a2;
    if (v11 <= v28)
    {
      if (v11 < v28) {
        a2[1] = *a2 + v11;
      }
    }
    else
    {
      sub_100028718(a2, v11 - v28);
    }
    sub_1000286A8(&stream);
    return 1;
  }
  return result;
}

void sub_10002860C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000286A8(compression_stream *a1)
{
  if (compression_stream_destroy(a1))
  {
    uint64_t v1 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v2 = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#ee,#decompress,failed to destroy stream", v2, 2u);
    }
  }
}

void sub_100028718(unint64_t *a1, size_t a2)
{
  uint64_t v5 = (char *)a1[1];
  uint64_t v4 = (char *)a1[2];
  if (v4 - v5 >= a2)
  {
    if (a2)
    {
      bzero((void *)a1[1], a2);
      v5 += a2;
    }
    a1[1] = (unint64_t)v5;
  }
  else
  {
    unint64_t v6 = *a1;
    unint64_t v7 = &v5[-*a1];
    unint64_t v8 = (unint64_t)&v7[a2];
    if ((uint64_t)&v7[a2] < 0) {
      sub_100007204();
    }
    unint64_t v9 = (unint64_t)&v4[-v6];
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v10 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v10 = v8;
    }
    if (v10) {
      unint64_t v11 = (unint64_t)operator new(v10);
    }
    else {
      unint64_t v11 = 0;
    }
    size_t v12 = &v7[v11];
    uint64_t v13 = (char *)(v11 + v10);
    bzero(v12, a2);
    if (v5 == (char *)v6)
    {
      unint64_t v11 = (unint64_t)v12;
    }
    else
    {
      int v14 = &v5[~v6];
      do
      {
        char v15 = *--v5;
        (v14--)[v11] = v15;
      }
      while (v5 != (char *)v6);
      uint64_t v5 = (char *)*a1;
    }
    *a1 = v11;
    a1[1] = (unint64_t)&v12[a2];
    a1[2] = (unint64_t)v13;
    if (v5)
    {
      operator delete(v5);
    }
  }
}

uint64_t GpsdProtobufPrintingUtilities::printMessageInJson(uint64_t a1, void *a2)
{
  uint64_t v2 = sub_100007D6C(a2, (uint64_t)"Fatal error: printMessageInJson not supported anymore after adapting protobuf lite!", 83);
  std::ios_base::getloc((const std::ios_base *)((char *)v2 + *(void *)(*v2 - 24)));
  uint64_t v3 = std::locale::use_facet(&v5, &std::ctype<char>::id);
  ((void (*)(const std::locale::facet *, uint64_t))v3->__vftable[2].~facet_0)(v3, 10);
  std::locale::~locale(&v5);
  std::ostream::put();
  std::ostream::flush();
  return 0;
}

void sub_10002890C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10)
{
}

uint64_t sub_100028920()
{
  unsigned int v0 = *(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) - 103;
  BOOL v1 = v0 > 4;
  int v2 = (1 << v0) & 0x19;
  if (!v1 && v2 != 0) {
    return 102;
  }
  if ((*(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) - 201) >= 2) {
    return 117;
  }
  return 107;
}

void NmeaLogging::append(uint64_t *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001142A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1001142A8))
  {
    byte_1001142A0 = os_variant_has_internal_diagnostics();
    __cxa_guard_release(&qword_1001142A8);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001142B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1001142B0))
  {
    byte_1001142A1 = sub_100028920();
    __cxa_guard_release(&qword_1001142B0);
  }
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (*a1 != v3)
  {
    do
    {
      int v4 = 8;
      do
      {
        int v5 = *(char *)(v2 + 23);
        unsigned int v6 = *(unsigned __int8 *)(v2 + 23);
        BOOL v7 = v5 < 0;
        if (v5 < 0)
        {
          uint64_t v13 = *(void *)(v2 + 8);
          if (!v13) {
            goto LABEL_23;
          }
          size_t v12 = *(char **)v2;
          int v14 = *(unsigned __int8 *)(*(void *)v2 + v13 - 1);
          if (v14 != 10 && v14 != 13) {
            goto LABEL_50;
          }
          uint64_t v11 = v13 - 1;
          *(void *)(v2 + 8) = v13 - 1;
        }
        else
        {
          if (!*(unsigned char *)(v2 + 23)) {
            goto LABEL_23;
          }
          uint64_t v8 = *(unsigned __int8 *)(v2 + 23);
          int v9 = *(unsigned __int8 *)(v2 - 1 + v8);
          if (v9 != 10 && v9 != 13) {
            goto LABEL_22;
          }
          uint64_t v11 = v8 - 1;
          *(unsigned char *)(v2 + 23) = v8 - 1;
          size_t v12 = (char *)v2;
        }
        v12[v11] = 0;
        --v4;
      }
      while (v4);
      unsigned int v6 = *(unsigned __int8 *)(v2 + 23);
      if (*(char *)(v2 + 23) < 0)
      {
LABEL_50:
        if (*(void *)(v2 + 8) < 6uLL)
        {
          uint64_t v16 = 0;
          BOOL v7 = 1;
          goto LABEL_24;
        }
        xpc_object_t v22 = *(char **)v2;
        BOOL v7 = 1;
      }
      else
      {
LABEL_22:
        BOOL v7 = 0;
        if (v6 < 6)
        {
LABEL_23:
          uint64_t v16 = 0;
          goto LABEL_24;
        }
        xpc_object_t v22 = (char *)v2;
      }
      uint64_t v16 = 0;
      int64_t v23 = v22[5] | (unint64_t)((uint64_t)v22[4] << 8) | ((((uint64_t)v22[2] << 8) | ((uint64_t)v22[1] << 16) | v22[3]) << 16);
      if (v23 > 0x5044504753)
      {
        if (v23 <= 0x5051475340)
        {
          if (v23 > 0x5044584942)
          {
            if (v23 <= 0x5044584C4BLL)
            {
              if (v23 == 0x5044584943) {
                goto LABEL_202;
              }
              unint64_t v32 = 1146637379;
            }
            else
            {
              if (v23 == 0x5044584C4CLL || v23 == 0x5046504558) {
                goto LABEL_202;
              }
              unint64_t v32 = 1196183378;
            }
          }
          else
          {
            if (v23 <= 0x504450544CLL)
            {
              if (v23 == 0x5044504754 || v23 == 0x5044504D43) {
                goto LABEL_202;
              }
              uint64_t v30 = 19796;
            }
            else
            {
              if ((unint64_t)(v23 - 0x5044584331) <= 0x1B
                && ((1 << (v23 - 49)) & 0x8080001) != 0)
              {
                goto LABEL_202;
              }
              uint64_t v30 = 21581;
            }
            unint64_t v32 = v30 & 0xFFFFFFFF0000FFFFLL | 0x44500000;
          }
LABEL_200:
          unint64_t v41 = v32 & 0xFFFF0000FFFFFFFFLL | 0x5000000000;
          goto LABEL_201;
        }
        if (v23 > 0x5051504452)
        {
          if (v23 <= 0x5051584648)
          {
            if (v23 == 0x5051504453 || v23 == 0x5051504531) {
              goto LABEL_202;
            }
            unint64_t v32 = 1364215091;
            goto LABEL_200;
          }
          if (v23 == 0x5051584649 || v23 == 0x515A475356) {
            goto LABEL_202;
          }
          unint64_t v41 = 0x515A475341;
LABEL_201:
          if (v23 != v41) {
            goto LABEL_24;
          }
          goto LABEL_202;
        }
        BOOL v25 = (unint64_t)(v23 - 0x50514D4531) < 5 || v23 == 0x5051475341;
        uint64_t v26 = 1363628886;
      }
      else
      {
        if (v23 <= 0x5041474343)
        {
          if (v23 > 0x4750475355)
          {
            if (v23 <= 0x4750565446)
            {
              if (v23 == 0x4750475356 || v23 == 0x4750484454) {
                goto LABEL_202;
              }
              uint64_t v24 = 1347571011;
            }
            else
            {
              if (v23 > 0x494D475340)
              {
                if (v23 == 0x494D475341) {
                  goto LABEL_202;
                }
                unint64_t v32 = 1094796100;
                goto LABEL_200;
              }
              if (v23 == 0x4750565447) {
                goto LABEL_202;
              }
              uint64_t v24 = 1363628886;
            }
          }
          else if (v23 <= 0x474E474E52)
          {
            if (v23 == 0x4741475341 || v23 == 0x4741475356) {
              goto LABEL_202;
            }
            uint64_t v24 = 1279742806;
          }
          else if (v23 > 0x4750474740)
          {
            if (v23 == 0x4750474741) {
              goto LABEL_202;
            }
            uint64_t v24 = 1346851649;
          }
          else
          {
            if (v23 == 0x474E474E53) {
              goto LABEL_202;
            }
            uint64_t v24 = 1313297217;
          }
          unint64_t v41 = v24 & 0xFFFF0000FFFFFFFFLL | 0x4700000000;
          goto LABEL_201;
        }
        BOOL v25 = (unint64_t)(v23 - 0x5044424741) <= 0x18
           && ((1 << (v23 - 65)) & 0x1AED17D) != 0
           || v23 == 0x5041474344;
        uint64_t v26 = 1095975748;
      }
      unint64_t v28 = v26 & 0xFFFF0000FFFFFFFFLL | 0x5000000000;
      if (!v25 && v23 != v28) {
        goto LABEL_24;
      }
LABEL_202:
      if (v23 == 0x5046504558)
      {
        if (v7)
        {
          if (*(void *)(v2 + 8) <= 0xAuLL)
          {
            BOOL v7 = 1;
            goto LABEL_236;
          }
          int v49 = *(char **)v2;
        }
        else
        {
          int v49 = (char *)v2;
          if (v6 <= 0xA)
          {
            BOOL v7 = 0;
LABEL_236:
            uint64_t v53 = 1179665752;
LABEL_237:
            uint64_t v16 = v53 & 0xFFFF0000FFFFFFFFLL | 0x5000000000;
LABEL_24:
            int v17 = 0;
            int v18 = 0;
            goto LABEL_25;
          }
        }
        uint64_t v16 = v49[10] | ((((uint64_t)v49[8] << 8) | ((uint64_t)v49[7] << 16) | v49[9]) << 8);
        if (v16 > 1262898498)
        {
          if (v16 > 1262901291)
          {
            if (v16 > 1347375915)
            {
              if (v16 == 1347375916 || v16 == 1397705806) {
                goto LABEL_277;
              }
              uint64_t v52 = 1347375959;
            }
            else
            {
              if (v16 == 1262901292 || v16 == 1296125996) {
                goto LABEL_277;
              }
              uint64_t v52 = 1297044547;
            }
            goto LABEL_276;
          }
          if ((unint64_t)(v16 - 1262899249) <= 0x1E && ((1 << (v16 - 49)) & 0x40000003) != 0
            || v16 == 1262898499)
          {
            goto LABEL_277;
          }
          unsigned __int16 v54 = 21332;
LABEL_251:
          uint64_t v52 = v54 | 0x4B460000u;
        }
        else
        {
          if (v16 <= 1162891074)
          {
            if (v16 > 1128482910)
            {
              if (v16 == 1128482911 || v16 == 1129073495) {
                goto LABEL_277;
              }
              uint64_t v52 = 1145392428;
            }
            else
            {
              if ((unint64_t)(v16 - 1095194417) < 2) {
                goto LABEL_277;
              }
              uint64_t v52 = 1128482881;
            }
            goto LABEL_276;
          }
          if (v16 > 1262895659)
          {
            if (v16 == 1262895660 || v16 == 1262896197) {
              goto LABEL_277;
            }
            unsigned __int16 v54 = 19777;
            goto LABEL_251;
          }
          if (v16 == 1162891075) {
            goto LABEL_277;
          }
          uint64_t v52 = 1179665742;
        }
LABEL_276:
        if (v16 != v52) {
          goto LABEL_236;
        }
        goto LABEL_277;
      }
      uint64_t v16 = v23;
      if (v23 != 0x50474C4F52) {
        goto LABEL_277;
      }
      if (v7)
      {
        if (*(void *)(v2 + 8) <= 0xCuLL)
        {
          BOOL v7 = 1;
LABEL_228:
          uint64_t v53 = 1196183378;
          goto LABEL_237;
        }
        __int16 v48 = *(char **)v2;
      }
      else
      {
        __int16 v48 = (char *)v2;
        if (v6 <= 0xC)
        {
          BOOL v7 = 0;
          goto LABEL_228;
        }
      }
      if (v48[9] == 44) {
        uint64_t v50 = 10;
      }
      else {
        uint64_t v50 = 9;
      }
      uint64_t v16 = ((uint64_t)v48[v50 + 1] << 8) | ((uint64_t)v48[v50] << 16) | v48[v50 + 2];
      if (v16 > 5260864)
      {
        if (v16 <= 5456211)
        {
          if (v16 > 5265233)
          {
            if (v16 == 5265234) {
              goto LABEL_277;
            }
            uint64_t v51 = 5392708;
          }
          else
          {
            if (v16 == 5260865) {
              goto LABEL_277;
            }
            uint64_t v51 = 5260877;
          }
        }
        else if (v16 <= 5461056)
        {
          if (v16 == 5456212) {
            goto LABEL_277;
          }
          uint64_t v51 = 5458255;
        }
        else
        {
          if (v16 == 5461057 || v16 == 5461571) {
            goto LABEL_277;
          }
          uint64_t v51 = 5590595;
        }
      }
      else if (v16 <= 4672590)
      {
        if (v16 > 4606285)
        {
          if (v16 == 4606286) {
            goto LABEL_277;
          }
          uint64_t v51 = 4606296;
        }
        else
        {
          if (v16 == 4278083) {
            goto LABEL_277;
          }
          uint64_t v51 = 4412504;
        }
      }
      else if (v16 <= 5002064)
      {
        if (v16 == 4672591) {
          goto LABEL_277;
        }
        uint64_t v51 = 4738113;
      }
      else
      {
        if (v16 == 5002065 || v16 == 5129559) {
          goto LABEL_277;
        }
        uint64_t v51 = 5133901;
      }
      if (v16 != v51) {
        goto LABEL_228;
      }
LABEL_277:
      int v18 = 2;
      int v17 = 1;
      if (v16 > 0x4750475340)
      {
        if (v16 <= 0x5044584330)
        {
          if (v16 > 0x4751475355)
          {
            if ((unint64_t)(v16 - 0x5044424741) <= 0x18
              && ((1 << (v16 - 65)) & 0x1AE5175) != 0
              || v16 == 0x4751475356)
            {
              goto LABEL_25;
            }
            uint64_t v56 = 1095975748;
LABEL_340:
            uint64_t v57 = v56 & 0xFFFF0000FFFFFFFFLL | 0x5000000000;
LABEL_351:
            if (v16 != v57) {
              goto LABEL_24;
            }
            goto LABEL_25;
          }
          if (v16 == 0x4750475341 || v16 == 0x4750475356) {
            goto LABEL_25;
          }
          uint64_t v59 = 1347571011;
LABEL_337:
          uint64_t v57 = v59 & 0xFFFF0000FFFFFFFFLL | 0x4700000000;
          goto LABEL_351;
        }
        if (v16 <= 0x50514D4530)
        {
          if (v16 > 0x5044584942)
          {
            if (v16 != 0x5044584943 && v16 != 0x5044584C43)
            {
              uint64_t v58 = 0x5044584C4CLL;
              goto LABEL_355;
            }
          }
          else if ((unint64_t)(v16 - 0x5044584331) > 0x1B {
                 || ((1 << (v16 - 49)) & 0x8080001) == 0)
          }
          {
            goto LABEL_24;
          }
          goto LABEL_356;
        }
        if (v16 > 0x5051504452)
        {
          if (v16 > 0x5051504532)
          {
            if (v16 == 0x5051504533) {
              goto LABEL_25;
            }
            uint64_t v56 = 1364739657;
          }
          else
          {
            if (v16 == 0x5051504453) {
              goto LABEL_25;
            }
            uint64_t v56 = 1364215089;
          }
          goto LABEL_340;
        }
        if ((unint64_t)(v16 - 0x50514D4531) > 3 || v16 == 0x50514D4533) {
          goto LABEL_24;
        }
      }
      else
      {
        if (v16 > 1262895659)
        {
          if (v16 <= 1296125995)
          {
            if (v16 <= 1262899248)
            {
              if (v16 > 1262898496)
              {
                if (v16 == 1262898497) {
                  goto LABEL_25;
                }
                unsigned __int16 v55 = 19779;
              }
              else
              {
                if (v16 == 1262895660) {
                  goto LABEL_356;
                }
                unsigned __int16 v55 = 17477;
              }
            }
            else
            {
              if (v16 > 1262900051)
              {
                if (v16 != 1262900052)
                {
                  uint64_t v58 = 1262901292;
                  goto LABEL_355;
                }
                goto LABEL_356;
              }
              if ((unint64_t)(v16 - 1262899249) < 2) {
                goto LABEL_356;
              }
              unsigned __int16 v55 = 20559;
            }
            uint64_t v57 = v55 | 0x4B460000u;
            goto LABEL_351;
          }
          if (v16 <= 1397705805)
          {
            if (v16 <= 1347375915)
            {
              if (v16 != 1296125996)
              {
                uint64_t v58 = 1297044547;
                goto LABEL_355;
              }
              goto LABEL_356;
            }
            if (v16 == 1347375916) {
              goto LABEL_356;
            }
            uint64_t v57 = 1347375959;
            goto LABEL_351;
          }
          if (v16 > 0x474C475355)
          {
            if (v16 == 0x474C475356) {
              goto LABEL_25;
            }
            uint64_t v59 = 1313297217;
          }
          else
          {
            if (v16 == 1397705806) {
              goto LABEL_356;
            }
            uint64_t v59 = 1095193430;
          }
          goto LABEL_337;
        }
        if (v16 <= 1095194416)
        {
          if (v16 > 5392707)
          {
            if (v16 > 5461056)
            {
              if (v16 == 5461057) {
                goto LABEL_25;
              }
              unsigned __int16 v60 = 22083;
            }
            else
            {
              if (v16 == 5392708) {
                goto LABEL_25;
              }
              unsigned __int16 v60 = 16724;
            }
            uint64_t v57 = v60 | 0x530000u;
          }
          else if (v16 > 4738112)
          {
            if (v16 == 4738113) {
              goto LABEL_25;
            }
            uint64_t v57 = 5002065;
          }
          else
          {
            if (v16 == 4278083) {
              goto LABEL_25;
            }
            uint64_t v57 = 4412504;
          }
          goto LABEL_351;
        }
        if (v16 > 1129073494)
        {
          if (v16 > 1162891074)
          {
            if (v16 == 1162891075) {
              goto LABEL_25;
            }
            uint64_t v58 = 1179665742;
          }
          else
          {
            if (v16 == 1129073495) {
              goto LABEL_25;
            }
            uint64_t v58 = 1145392428;
          }
LABEL_355:
          if (v16 != v58) {
            goto LABEL_24;
          }
LABEL_356:
          int v17 = 0;
          int v18 = 1;
          goto LABEL_25;
        }
        if ((unint64_t)(v16 - 1095194417) >= 2 && v16 != 1128482881)
        {
          uint64_t v58 = 1128482911;
          goto LABEL_355;
        }
      }
LABEL_25:
      if (v16 > 0x4750484453)
      {
        if (v16 > 0x5044504753)
        {
          if (v16 <= 0x5044584C4BLL)
          {
            if (v16 <= 0x5044584330)
            {
              if (v16 > 0x5044504D53)
              {
                if (v16 == 0x5044504D54) {
                  goto LABEL_139;
                }
                uint64_t v31 = 21581;
              }
              else
              {
                if (v16 == 0x5044504754) {
                  goto LABEL_139;
                }
                uint64_t v31 = 19779;
              }
              unint64_t v19 = v31 & 0xFFFFFFFF0000FFFFLL | 0x44500000;
            }
            else
            {
              if ((unint64_t)(v16 - 0x5044584331) <= 0x1B
                && ((1 << (v16 - 49)) & 0x8080001) != 0
                || v16 == 0x5044584943)
              {
                goto LABEL_139;
              }
              unint64_t v19 = 1146637379;
            }
          }
          else if (v16 > 0x5051504452)
          {
            if (v16 == 0x5051504453 || v16 == 0x5051504531) {
              goto LABEL_139;
            }
            unint64_t v19 = 1364215091;
          }
          else
          {
            if ((unint64_t)(v16 - 0x50514D4531) < 5 || v16 == 0x5044584C4CLL) {
              goto LABEL_139;
            }
            unint64_t v19 = 1363628865;
          }
        }
        else if (v16 <= 0x5041474343)
        {
          if (v16 == 0x4750484454 || v16 == 0x4750565447) {
            goto LABEL_139;
          }
          unint64_t v19 = 1094796100;
        }
        else
        {
          if ((unint64_t)(v16 - 0x5044424741) <= 0x18
            && ((1 << (v16 - 65)) & 0x1AE5175) != 0
            || v16 == 0x5041474344)
          {
            goto LABEL_139;
          }
          unint64_t v19 = 1095975748;
        }
        uint64_t v20 = v19 & 0xFFFF0000FFFFFFFFLL | 0x5000000000;
        goto LABEL_138;
      }
      if (v16 <= 1129073494)
      {
        if (v16 > 5265233)
        {
          if (v16 > 1095194416)
          {
            if ((unint64_t)(v16 - 1095194417) < 2 || v16 == 1128482881) {
              goto LABEL_139;
            }
            uint64_t v20 = 1128482911;
          }
          else if (v16 <= 5458254)
          {
            if (v16 == 5265234) {
              goto LABEL_139;
            }
            uint64_t v20 = 5392708;
          }
          else
          {
            if (v16 == 5458255 || v16 == 5461057) {
              goto LABEL_139;
            }
            uint64_t v20 = 5590595;
          }
        }
        else if (v16 > 4738112)
        {
          if (v16 <= 5133900)
          {
            if (v16 == 4738113) {
              goto LABEL_139;
            }
            uint64_t v20 = 5129559;
          }
          else
          {
            if (v16 == 5133901 || v16 == 5260865) {
              goto LABEL_139;
            }
            uint64_t v20 = 5260877;
          }
        }
        else if (v16 <= 4606285)
        {
          if (v16 == 4278083) {
            goto LABEL_139;
          }
          uint64_t v20 = 4412504;
        }
        else
        {
          if (v16 == 4606286 || v16 == 4606296) {
            goto LABEL_139;
          }
          uint64_t v20 = 4672591;
        }
        goto LABEL_138;
      }
      if (v16 <= 1262899248)
      {
        if (v16 <= 1262895659)
        {
          if (v16 > 1162891074)
          {
            if (v16 == 1162891075) {
              goto LABEL_139;
            }
            uint64_t v20 = 1179665742;
          }
          else
          {
            if (v16 == 1129073495) {
              goto LABEL_139;
            }
            uint64_t v20 = 1145392428;
          }
          goto LABEL_138;
        }
        if (v16 > 1262898496)
        {
          if (v16 == 1262898497) {
            goto LABEL_139;
          }
          unsigned __int16 v21 = 19779;
        }
        else
        {
          if (v16 == 1262895660) {
            goto LABEL_139;
          }
          unsigned __int16 v21 = 17477;
        }
      }
      else
      {
        if (v16 > 1296125995)
        {
          if (v16 <= 1347375915)
          {
            if (v16 == 1296125996) {
              goto LABEL_139;
            }
            uint64_t v20 = 1297044547;
          }
          else
          {
            if (v16 == 1347375916 || v16 == 1347375959) {
              goto LABEL_139;
            }
            uint64_t v20 = 1397705806;
          }
          goto LABEL_138;
        }
        if ((unint64_t)(v16 - 1262899249) <= 0x1E && ((1 << (v16 - 49)) & 0x40000003) != 0
          || v16 == 1262900052)
        {
          goto LABEL_139;
        }
        unsigned __int16 v21 = 22572;
      }
      uint64_t v20 = v21 | 0x4B460000u;
LABEL_138:
      if (v16 != v20)
      {
        if (byte_1001142A0) {
          int v45 = 2;
        }
        else {
          int v45 = 1;
        }
        if (!v17) {
          int v45 = v18;
        }
        if (!v45)
        {
          uint64_t v63 = qword_100114828;
          if (!os_log_type_enabled((os_log_t)qword_100114828, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_151;
          }
          uint64_t v64 = (char *)v2;
          if (v7) {
            uint64_t v64 = *(char **)v2;
          }
          *(_DWORD *)audit_token_t buf = 67240451;
          int v66 = byte_1001142A1;
          __int16 v67 = 2081;
          uint64_t v68 = v64;
          uint64_t v43 = v63;
          int v44 = "%{public}c,NMEA:%{private}s";
          goto LABEL_181;
        }
        if (v45 == 1)
        {
          uint64_t v61 = qword_100114828;
          if (!os_log_type_enabled((os_log_t)qword_100114828, OS_LOG_TYPE_INFO)) {
            goto LABEL_151;
          }
          char v62 = (char *)v2;
          if (v7) {
            char v62 = *(char **)v2;
          }
          *(_DWORD *)audit_token_t buf = 67240451;
          int v66 = byte_1001142A1;
          __int16 v67 = 2081;
          uint64_t v68 = v62;
          std::string v35 = v61;
          os_log_type_t v36 = OS_LOG_TYPE_INFO;
          char v37 = "%{public}c,NMEA:%{private}s";
        }
        else
        {
          uint64_t v46 = qword_100114828;
          if (!os_log_type_enabled((os_log_t)qword_100114828, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_151;
          }
          uint64_t v47 = (char *)v2;
          if (v7) {
            uint64_t v47 = *(char **)v2;
          }
          *(_DWORD *)audit_token_t buf = 67240451;
          int v66 = byte_1001142A1;
          __int16 v67 = 2081;
          uint64_t v68 = v47;
          std::string v35 = v46;
          os_log_type_t v36 = OS_LOG_TYPE_DEFAULT;
          char v37 = "%{public}c,NMEA:%{private}s";
        }
        goto LABEL_149;
      }
LABEL_139:
      if (v18)
      {
        if (v18 == 1)
        {
          uint64_t v38 = qword_100114828;
          if (os_log_type_enabled((os_log_t)qword_100114828, OS_LOG_TYPE_INFO))
          {
            long long v39 = (char *)v2;
            if (v7) {
              long long v39 = *(char **)v2;
            }
            *(_DWORD *)audit_token_t buf = 67240450;
            int v66 = byte_1001142A1;
            __int16 v67 = 2082;
            uint64_t v68 = v39;
            std::string v35 = v38;
            os_log_type_t v36 = OS_LOG_TYPE_INFO;
            char v37 = "%{public}c,NMEA:%{public}s";
            goto LABEL_149;
          }
        }
        else
        {
          uint64_t v33 = qword_100114828;
          if (os_log_type_enabled((os_log_t)qword_100114828, OS_LOG_TYPE_DEFAULT))
          {
            std::string v34 = (char *)v2;
            if (v7) {
              std::string v34 = *(char **)v2;
            }
            *(_DWORD *)audit_token_t buf = 67240450;
            int v66 = byte_1001142A1;
            __int16 v67 = 2082;
            uint64_t v68 = v34;
            std::string v35 = v33;
            os_log_type_t v36 = OS_LOG_TYPE_DEFAULT;
            char v37 = "%{public}c,NMEA:%{public}s";
LABEL_149:
            _os_log_impl((void *)&_mh_execute_header, v35, v36, v37, buf, 0x12u);
          }
        }
      }
      else
      {
        uint64_t v40 = qword_100114828;
        if (os_log_type_enabled((os_log_t)qword_100114828, OS_LOG_TYPE_DEBUG))
        {
          unint64_t v42 = (char *)v2;
          if (v7) {
            unint64_t v42 = *(char **)v2;
          }
          *(_DWORD *)audit_token_t buf = 67240450;
          int v66 = byte_1001142A1;
          __int16 v67 = 2082;
          uint64_t v68 = v42;
          uint64_t v43 = v40;
          int v44 = "%{public}c,NMEA:%{public}s";
LABEL_181:
          _os_log_debug_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEBUG, v44, buf, 0x12u);
        }
      }
LABEL_151:
      v2 += 24;
    }
    while (v2 != v3);
  }
}

void sub_100029F20(_Unwind_Exception *a1)
{
}

uint64_t sub_100029F48(uint64_t a1)
{
  *(void *)(a1 + 16) = v3;
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  std::ios::~ios();
  return a1;
}

void sub_10002A080(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_10002A0D4((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_10002A0D4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 24)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

uint64_t sub_10002A124(uint64_t *a1, void *a2)
{
  uint64_t result = sub_10002A1E4((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_10002A19C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_100007254();
  }
  return operator new(24 * a2);
}

uint64_t sub_10002A1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      long long v10 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v10;
      v9 -= 24;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 8) = 0;
      *(void *)(a3 - 24) = 0;
      v7 -= 24;
      a3 -= 24;
    }
    while (a3 != a5);
    *((void *)&v15 + 1) = v9;
  }
  char v13 = 1;
  sub_10002A284((uint64_t)v12);
  return a6;
}

uint64_t sub_10002A284(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_10002A2BC(a1);
  }
  return a1;
}

void sub_10002A2BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    v1 += 24;
  }
}

uint64_t sub_10002A304(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_10002A33C(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      uint64_t v5 = v2 - 3;
      *(void *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v5);
        uint64_t v5 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

uint64_t gnss::Convert::fromProtobuf(int a1)
{
  if ((a1 - 1) < 9) {
    return dword_1000E7788[a1 - 1];
  }
  uint64_t v3 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    v4[0] = 67109120;
    v4[1] = a1;
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "unhandled proto::gnss::Result enum %d", (uint8_t *)v4, 8u);
  }
  return 7;
}

uint64_t gnss::Convert::toProtobuf(unsigned int a1)
{
  if (a1 < 9) {
    return dword_1000E77AC[a1];
  }
  uint64_t v3 = qword_100114840;
  if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
    return 8;
  }
  v5[0] = 67109120;
  v5[1] = a1;
  uint64_t v2 = 8;
  _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "unhandled gnss::Result enum %d", (uint8_t *)v5, 8u);
  return v2;
}

uint64_t gnss::Convert::fromProtobuf(unsigned int a1)
{
  if (a1 > 0xF) {
    return 0;
  }
  else {
    return dword_1000E77D0[a1];
  }
}

BOOL gnss::Convert::toProtobuf(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  if (a3)
  {
    int v5 = *(_DWORD *)(a3 + 48) | 2;
    *(_DWORD *)(a3 + 48) = v5;
    uint64_t v6 = *(void *)(a3 + 16);
    if (!v6) {
      operator new();
    }
    int v7 = v5 | 4;
    *(_DWORD *)(a3 + 48) = v7;
    uint64_t v8 = *(void *)(a3 + 24);
    if (!v8) {
      operator new();
    }
    *(_DWORD *)(a3 + 48) = v7 | 1;
    uint64_t v9 = *(void *)(a3 + 8);
    if (!v9) {
      operator new();
    }
    *(void *)(v9 + 8) = *(void *)a1;
    *(_DWORD *)(v9 + 16) = *(_DWORD *)(a1 + 8);
    *(void *)(v9 + 24) = *(void *)(a1 + 24);
    *(_OWORD *)(v9 + 32) = *a2;
    long long v10 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v9 + 48) = *(_OWORD *)(a1 + 32);
    int v11 = *(_DWORD *)(v9 + 72);
    char v12 = *(unsigned char *)(a1 + 12);
    *(_DWORD *)(v9 + 72) = v11 | 7;
    *(unsigned char *)(v9 + 20) = v12;
    *(_DWORD *)(v9 + 64) = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(v9 + 72) = v11 | 0x1FF;
    int v13 = *(_DWORD *)(v6 + 96);
    *(_OWORD *)(v6 + 8) = v10;
    *(_OWORD *)(v6 + 24) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v6 + 40) = *(_OWORD *)(a1 + 80);
    *(_DWORD *)(v6 + 96) = v13 | 0xFF;
    *(_OWORD *)(v6 + 56) = *(_OWORD *)(a1 + 96);
    uint64_t v14 = *(unsigned int *)(a1 + 116);
    int v15 = *(_DWORD *)(a1 + 112) & 0x1F | (((*(_DWORD *)(a1 + 112) >> 5) & 1) << 6);
    *(_DWORD *)(v6 + 96) = v13 | 0x1FF;
    *(_DWORD *)(v6 + 72) = v15;
    if (((v14 - 25) > 0x32 || ((1 << (v14 - 25)) & 0x4000002000001) == 0)
      && v14 != 10)
    {
      uint64_t v14 = 1;
    }
    if (!proto::gnss::Reliability_IsValid((proto::gnss *)v14)) {
      __assert_rtn("set_reliability", "GnssTypes.pb.h", 1975, "::proto::gnss::Reliability_IsValid(value)");
    }
    *(_DWORD *)(v6 + 76) = v14;
    *(void *)(v6 + 80) = *(void *)(a1 + 120);
    unsigned int v16 = *(_DWORD *)(a1 + 128);
    if (v16 < 5) {
      unsigned int v17 = v16 + 1;
    }
    else {
      unsigned int v17 = 0;
    }
    *(_DWORD *)(v6 + 96) = v13 | 0xFFF;
    *(_DWORD *)(v6 + 88) = v17;
    int v18 = *(_DWORD *)(v8 + 60);
    *(_OWORD *)(v8 + 8) = *(_OWORD *)(a1 + 136);
    *(_OWORD *)(v8 + 24) = *(_OWORD *)(a1 + 152);
    *(_DWORD *)(v8 + 60) = v18 | 0x3F;
    *(_OWORD *)(v8 + 40) = *(_OWORD *)(a1 + 168);
    int v19 = *(_DWORD *)(a3 + 48);
    *(void *)(a3 + 32) = *(void *)(a1 + 184);
    unsigned int v20 = *(_DWORD *)(a1 + 192);
    if (v20 < 4) {
      unsigned int v21 = v20 + 1;
    }
    else {
      unsigned int v21 = 0;
    }
    *(_DWORD *)(a3 + 48) = v19 | 0x18;
    *(_DWORD *)(a3 + 40) = v21;
  }
  return a3 != 0;
}

BOOL gnss::Convert::toProtobuf(gnss::Convert *this, const gnss::MeasurementData *a2, CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *a3)
{
  if (!a2) {
    return a2 != 0;
  }
  *((_DWORD *)a2 + 33) |= 1u;
  uint64_t v5 = *((void *)a2 + 1);
  if (!v5) {
    operator new();
  }
  int v6 = *(_DWORD *)(v5 + 36);
  *(_OWORD *)(v5 + 8) = *(_OWORD *)this;
  uint64_t v7 = *((void *)this + 2);
  *(_DWORD *)(v5 + 36) = v6 | 7;
  *(void *)(v5 + 24) = v7;
  int v8 = *((_DWORD *)a2 + 33);
  *((_OWORD *)a2 + 5) = *(_OWORD *)((char *)this + 24);
  *((_DWORD *)a2 + 33) = v8 | 0x70;
  uint64_t v9 = *((void *)a2 + 9);
  if (!v9) {
    operator new();
  }
  long long v10 = (unsigned __int16 *)*((void *)this + 28);
  if (v10 && sub_100032C38(*((void *)this + 28)))
  {
    *(_DWORD *)(v9 + 52) |= 1u;
    uint64_t v11 = *(void *)(v9 + 8);
    if (!v11) {
      operator new();
    }
    int v12 = *v10;
    int v13 = *(_DWORD *)(v11 + 32);
    *(_DWORD *)(v11 + 32) = v13 | 1;
    *(_DWORD *)(v11 + 24) = v12;
    if (!sub_100032C38((uint64_t)v10)) {
      goto LABEL_26;
    }
    int v14 = v10[4];
    if (v14 == 0x8000) {
      goto LABEL_26;
    }
    int v15 = *((unsigned __int8 *)v10 + 10);
    if (*((void *)v10 + 2))
    {
      if ((v15 != 2) == ((__int16)v10[12] != -32768)) {
        goto LABEL_26;
      }
    }
    else if (v15 == 2)
    {
LABEL_26:
      uint64_t v24 = *((void *)this + 28);
      if (sub_100032C38(v24)
        && *(void *)(v24 + 32)
        && (*(void *)(v24 + 40) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
        && (*(void *)(v24 + 48) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
        && (*(void *)(v24 + 56) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
      {
        *(_DWORD *)(v11 + 32) |= 4u;
        uint64_t v25 = *(void *)(v11 + 16);
        if (!v25) {
          operator new();
        }
        int v26 = *(_DWORD *)(v25 + 44);
        *(void *)(v25 + 8) = *(void *)(v24 + 32);
        *(_OWORD *)(v25 + 16) = *(_OWORD *)(v24 + 40);
        uint64_t v27 = *(void *)(v24 + 56);
        *(_DWORD *)(v25 + 44) = v26 | 0xF;
        *(void *)(v25 + 32) = v27;
      }
      goto LABEL_34;
    }
    *(_DWORD *)(v11 + 32) = v13 | 3;
    uint64_t v16 = *(void *)(v11 + 8);
    if (!v16) {
      operator new();
    }
    int v17 = *(_DWORD *)(v16 + 28);
    int v18 = v17 | 1;
    *(_DWORD *)(v16 + 28) = v17 | 1;
    *(_DWORD *)(v16 + 8) = (__int16)v14;
    uint64_t v19 = *((void *)v10 + 2);
    if (v19)
    {
      if (*((unsigned char *)v10 + 10) == 2)
      {
        int v20 = v10[12];
        if (v20 != 0x8000)
        {
          *(_DWORD *)(v16 + 28) = v17 | 5;
          uint64_t v21 = *(void *)(v16 + 16);
          if (!v21) {
            operator new();
          }
          int v22 = *(_DWORD *)(v21 + 24);
          *(void *)(v21 + 8) = v19;
          *(_DWORD *)(v21 + 24) = v22 | 3;
          *(_DWORD *)(v21 + 16) = (__int16)v20;
          int v18 = *(_DWORD *)(v16 + 28);
        }
      }
    }
    *(_DWORD *)(v16 + 28) = v18 | 2;
    *(_DWORD *)(v16 + 12) = 1;
    unsigned int v23 = *((unsigned __int8 *)v10 + 10);
    if (v23 <= 2) {
      *(_DWORD *)(v16 + 12) = v23 + 2;
    }
    goto LABEL_26;
  }
LABEL_34:
  unint64_t v28 = (unsigned __int16 *)*((void *)this + 29);
  if (v28)
  {
    if ((int v29 = *v28) != 0 && v28[1] - 1 < 0x5B5
      || *((void *)v28 + 1) && (*((void *)v28 + 2) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
    {
      *(_DWORD *)(v9 + 52) |= 2u;
      uint64_t v30 = *(void *)(v9 + 16);
      if (!v30) {
        operator new();
      }
      int v31 = *(_DWORD *)(v30 + 40);
      int v32 = v28[1];
      *(_DWORD *)(v30 + 40) = v31 | 3;
      *(_DWORD *)(v30 + 8) = v29;
      *(_DWORD *)(v30 + 12) = v32;
      uint64_t v33 = *((void *)v28 + 1);
      if (v29 && (v32 - 1) < 0x5B5)
      {
        if (!v33 || (*((void *)v28 + 2) & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
          goto LABEL_51;
        }
      }
      else if (!v33 || (*((void *)v28 + 2) & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
      {
        goto LABEL_51;
      }
      *(_DWORD *)(v30 + 40) = v31 | 0xB;
      uint64_t v34 = *(void *)(v30 + 16);
      if (!v34) {
        operator new();
      }
      int v35 = *(_DWORD *)(v34 + 28);
      *(void *)(v34 + 16) = *((void *)v28 + 2);
      uint64_t v36 = *((void *)v28 + 1);
      *(_DWORD *)(v34 + 28) = v35 | 3;
      *(void *)(v34 + 8) = v36;
    }
  }
LABEL_51:
  char v37 = (unsigned __int16 *)*((void *)this + 30);
  if (v37)
  {
    int v38 = *v37;
    if (*v37
      || *((void *)v37 + 1)
      && (*((void *)v37 + 2) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (*((void *)v37 + 3) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
    {
      *(_DWORD *)(v9 + 52) |= 4u;
      uint64_t v39 = *(void *)(v9 + 24);
      if (!v39) {
        operator new();
      }
      int v40 = *(_DWORD *)(v39 + 56);
      *(_DWORD *)(v39 + 56) = v40 | 1;
      *(_DWORD *)(v39 + 48) = v38;
      uint64_t v41 = *((void *)v37 + 1);
      if (v38)
      {
        if (!v41) {
          goto LABEL_70;
        }
        uint64_t v42 = *((void *)v37 + 2);
      }
      else
      {
        if (!v41) {
          goto LABEL_70;
        }
        uint64_t v42 = *((void *)v37 + 2);
        if ((v42 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
          || (*((void *)v37 + 3) & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
        {
          goto LABEL_70;
        }
      }
      if ((v42 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
        && (*((void *)v37 + 3) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
      {
        *(_DWORD *)(v39 + 56) = v40 | 5;
        uint64_t v43 = *(void *)(v39 + 16);
        if (!v43) {
          operator new();
        }
        int v44 = *(_DWORD *)(v43 + 36);
        *(void *)(v43 + 8) = *((void *)v37 + 1);
        *(_DWORD *)(v43 + 36) = v44 | 7;
        *(_OWORD *)(v43 + 16) = *((_OWORD *)v37 + 1);
      }
    }
  }
LABEL_70:
  int v45 = (unsigned __int16 *)*((void *)this + 31);
  if (v45)
  {
    int v46 = *v45;
    if (*v45
      || *((void *)v45 + 1)
      && (*((void *)v45 + 2) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (*((void *)v45 + 3) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
    {
      *(_DWORD *)(v9 + 52) |= 8u;
      uint64_t v47 = *(void *)(v9 + 32);
      if (!v47) {
        operator new();
      }
      int v48 = *(_DWORD *)(v47 + 40);
      *(_DWORD *)(v47 + 40) = v48 | 1;
      *(_DWORD *)(v47 + 32) = v46;
      uint64_t v49 = *((void *)v45 + 1);
      if (v46)
      {
        if (!v49) {
          goto LABEL_89;
        }
        uint64_t v50 = *((void *)v45 + 2);
      }
      else
      {
        if (!v49) {
          goto LABEL_89;
        }
        uint64_t v50 = *((void *)v45 + 2);
        if ((v50 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
          || (*((void *)v45 + 3) & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
        {
          goto LABEL_89;
        }
      }
      if ((v50 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
        && (*((void *)v45 + 3) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
      {
        *(_DWORD *)(v47 + 40) = v48 | 5;
        uint64_t v51 = *(void *)(v47 + 16);
        if (!v51) {
          operator new();
        }
        int v52 = *(_DWORD *)(v51 + 36);
        *(void *)(v51 + 8) = *((void *)v45 + 1);
        *(_DWORD *)(v51 + 36) = v52 | 7;
        *(_OWORD *)(v51 + 16) = *((_OWORD *)v45 + 1);
      }
    }
  }
LABEL_89:
  uint64_t v53 = (void *)*((void *)this + 32);
  if (v53)
  {
    if (v53[1])
    {
      uint64_t v54 = v53[2];
      if ((v54 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
        && (v53[3] & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
      {
        *(_DWORD *)(v9 + 52) |= 0x10u;
        uint64_t v55 = *(void *)(v9 + 40);
        if (!v55) {
          operator new();
        }
        int v56 = *(unsigned __int16 *)v53;
        int v57 = *(_DWORD *)(v55 + 24);
        *(_DWORD *)(v55 + 24) = v57 | 2;
        *(_DWORD *)(v55 + 16) = v56;
        if ((v54 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
          && (v53[3] & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
        {
          *(_DWORD *)(v55 + 24) = v57 | 3;
          uint64_t v58 = *(void *)(v55 + 8);
          if (!v58) {
            operator new();
          }
          int v59 = *(_DWORD *)(v58 + 36);
          *(void *)(v58 + 8) = v53[1];
          *(_DWORD *)(v58 + 36) = v59 | 7;
          *(_OWORD *)(v58 + 16) = *((_OWORD *)v53 + 1);
        }
      }
    }
  }
  unsigned __int16 v60 = (int *)*((void *)this + 22);
  v295 = this;
  v296 = (int *)*((void *)this + 23);
  if (v60 != v296)
  {
    while (1)
    {
      int v61 = *((_DWORD *)a2 + 9);
      uint64_t v62 = *((int *)a2 + 8);
      if ((int)v62 >= v61)
      {
        if (v61 == *((_DWORD *)a2 + 10))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((const gnss::MeasurementData *)((char *)a2 + 24), v61 + 1);
          int v61 = *((_DWORD *)a2 + 9);
        }
        *((_DWORD *)a2 + 9) = v61 + 1;
        operator new();
      }
      uint64_t v63 = *((void *)a2 + 3);
      *((_DWORD *)a2 + 8) = v62 + 1;
      uint64_t v64 = *(void *)(v63 + 8 * v62);
      *(_DWORD *)(v64 + 172) |= 1u;
      uint64_t v65 = *(void *)(v64 + 8);
      if (!v65) {
        operator new();
      }
      int v66 = *(_DWORD *)(v65 + 24) | 2;
      *(_DWORD *)(v65 + 24) = v66;
      uint64_t v67 = *(void *)(v65 + 8);
      if (!v67) {
        operator new();
      }
      int v68 = *v60;
      *(_DWORD *)(v65 + 24) = v66 | 1;
      *(_DWORD *)(v65 + 16) = v68;
      switch(v68)
      {
        case 0:
          *(_DWORD *)(v65 + 16) = 0;
          goto LABEL_132;
        case 1:
          *(_DWORD *)(v65 + 16) = 1;
          int v70 = *((unsigned __int8 *)v60 + 4);
          *(_DWORD *)(v67 + 44) |= 1u;
          *(_DWORD *)(v67 + 16) = v70;
          goto LABEL_132;
        case 2:
          *(_DWORD *)(v65 + 16) = 2;
          *(_DWORD *)(v67 + 44) |= 2u;
          uint64_t v71 = *(void *)(v67 + 8);
          if (!v71) {
            operator new();
          }
          int v72 = *((char *)v60 + 6);
          int v73 = *(_DWORD *)(v71 + 24);
          *(_DWORD *)(v71 + 24) = v73 | 1;
          *(_DWORD *)(v71 + 16) = v72;
          if (*((unsigned __int8 *)v60 + 4) - 1 > 0x17) {
            goto LABEL_132;
          }
          *(_DWORD *)(v71 + 24) = v73 | 3;
          uint64_t v74 = *(_DWORD **)(v71 + 8);
          if (!v74) {
            operator new();
          }
          int v75 = *((unsigned __int8 *)v60 + 4);
          v74[5] |= 3u;
          v74[2] = v75;
          v74[3] = 1;
          int v76 = *((unsigned __int8 *)v60 + 5);
          switch(v76)
          {
            case 3:
              int v77 = 4;
              goto LABEL_131;
            case 2:
              int v77 = 3;
              goto LABEL_131;
            case 1:
              int v77 = 2;
LABEL_131:
              v74[3] = v77;
              break;
          }
LABEL_132:
          if ((*((unsigned char *)v60 + 16) - 1) > 3u) {
            int v81 = 1;
          }
          else {
            int v81 = dword_1000E7980[(char)(*((unsigned char *)v60 + 16) - 1)];
          }
          int v82 = *(_DWORD *)(v64 + 172) | 4;
          *(_DWORD *)(v64 + 172) = v82;
          *(_DWORD *)(v64 + 56) = v81;
          uint64_t v84 = *((void *)v60 + 3);
          uint64_t v83 = *((void *)v60 + 4);
          if (v84 != v83)
          {
            do
            {
              int v85 = *(_DWORD *)(v64 + 36);
              uint64_t v86 = *(int *)(v64 + 32);
              if ((int)v86 >= v85)
              {
                if (v85 == *(_DWORD *)(v64 + 40))
                {
                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v64 + 24), v85 + 1);
                  int v85 = *(_DWORD *)(v64 + 36);
                }
                *(_DWORD *)(v64 + 36) = v85 + 1;
                operator new();
              }
              uint64_t v87 = *(void *)(v64 + 24);
              *(_DWORD *)(v64 + 32) = v86 + 1;
              uint64_t v88 = *(void *)(v87 + 8 * v86);
              int v89 = *(_DWORD *)(v88 + 28);
              *(void *)(v88 + 8) = *(void *)v84;
              *(_DWORD *)(v88 + 28) = v89 | 3;
              uint64_t v90 = *(void *)(v88 + 16);
              if (!v90) {
                operator new();
              }
              int v91 = *(_DWORD *)(v90 + 36);
              *(_OWORD *)(v90 + 8) = *(_OWORD *)(v84 + 8);
              uint64_t v92 = *(void *)(v84 + 24);
              *(_DWORD *)(v90 + 36) = v91 | 7;
              *(void *)(v90 + 24) = v92;
              v84 += 32;
            }
            while (v84 != v83);
            int v82 = *(_DWORD *)(v64 + 172);
          }
          uint64_t v93 = (_OWORD *)*((void *)v60 + 6);
          if (v93)
          {
            *(_DWORD *)(v64 + 172) = v82 | 0x8000;
            uint64_t v94 = *(void *)(v64 + 128);
            if (!v94) {
              operator new();
            }
            uint64_t v95 = 0;
            *(_DWORD *)(v94 + 76) |= 3u;
            *(_OWORD *)(v94 + 8) = *v93;
            do
            {
              uint64_t v96 = *((void *)v60 + 6);
              uint64_t v97 = *(void *)(v96 + v95 + 16);
              int v98 = *(_DWORD *)(v94 + 32);
              if (v98 == *(_DWORD *)(v94 + 36))
              {
                sub_100032CD4(v94 + 24, v98 + 1);
                int v98 = *(_DWORD *)(v94 + 32);
                uint64_t v96 = *((void *)v60 + 6);
              }
              *(void *)(*(void *)(v94 + 24) + 8 * v98) = v97;
              *(_DWORD *)(v94 + 32) = v98 + 1;
              uint64_t v99 = *(void *)(v96 + v95 + 48);
              int v100 = *(_DWORD *)(v94 + 48);
              if (v100 == *(_DWORD *)(v94 + 52))
              {
                sub_100032CD4(v94 + 40, v100 + 1);
                int v100 = *(_DWORD *)(v94 + 48);
                uint64_t v96 = *((void *)v60 + 6);
              }
              *(void *)(*(void *)(v94 + 40) + 8 * v100) = v99;
              *(_DWORD *)(v94 + 48) = v100 + 1;
              uint64_t v101 = *(void *)(v96 + v95 + 80);
              int v102 = *(_DWORD *)(v94 + 64);
              if (v102 == *(_DWORD *)(v94 + 68))
              {
                sub_100032CD4(v94 + 56, v102 + 1);
                int v102 = *(_DWORD *)(v94 + 64);
              }
              uint64_t v103 = *(void *)(v94 + 56);
              *(_DWORD *)(v94 + 64) = v102 + 1;
              *(void *)(v103 + 8 * v102) = v101;
              v95 += 8;
            }
            while (v95 != 32);
            int v82 = *(_DWORD *)(v64 + 172);
          }
          *(void *)(v64 + 16) = *((void *)v60 + 1);
          *(void *)(v64 + 48) = *((void *)v60 + 7);
          *(_OWORD *)(v64 + 64) = *((_OWORD *)v60 + 4);
          *(void *)(v64 + 152) = *((void *)v60 + 10);
          int v104 = v60[23];
          *(_DWORD *)(v64 + 60) = v60[22];
          *(_DWORD *)(v64 + 80) = v104;
          unsigned int v105 = *((unsigned __int8 *)v60 + 96);
          if (v105 >= 3) {
            int v106 = 1;
          }
          else {
            int v106 = v105 + 2;
          }
          *(_DWORD *)(v64 + 172) = v82 | 0x2003F2;
          unsigned int v107 = *((unsigned __int8 *)v60 + 97);
          if (v107 >= 3) {
            int v108 = 1;
          }
          else {
            int v108 = v107 + 2;
          }
          unsigned int v109 = *((unsigned __int8 *)v60 + 98);
          BOOL v110 = v109 >= 3;
          int v111 = v109 + 2;
          if (v110) {
            int v111 = 1;
          }
          *(_DWORD *)(v64 + 84) = v106;
          *(_DWORD *)(v64 + 88) = v111;
          unsigned int v112 = *((unsigned __int8 *)v60 + 99);
          if (v112 >= 3) {
            int v113 = 1;
          }
          else {
            int v113 = v112 + 2;
          }
          *(_DWORD *)(v64 + 136) = v108;
          *(_DWORD *)(v64 + 140) = v113;
          unsigned int v114 = *((unsigned __int8 *)v60 + 100);
          if (v114 >= 3) {
            int v115 = 1;
          }
          else {
            int v115 = v114 + 2;
          }
          unsigned int v116 = *((unsigned __int8 *)v60 + 101);
          if (v116 >= 3) {
            int v117 = 1;
          }
          else {
            int v117 = v116 + 2;
          }
          unsigned int v118 = *((unsigned __int8 *)v60 + 102);
          BOOL v110 = v118 >= 3;
          int v119 = v118 + 2;
          if (v110) {
            int v119 = 1;
          }
          *(_DWORD *)(v64 + 92) = v115;
          *(_DWORD *)(v64 + 96) = v119;
          unsigned int v120 = *((unsigned __int8 *)v60 + 103);
          BOOL v110 = v120 >= 3;
          int v121 = v120 + 2;
          if (v110) {
            int v121 = 1;
          }
          *(_DWORD *)(v64 + 144) = v117;
          *(_DWORD *)(v64 + 148) = v121;
          unsigned int v122 = *((unsigned __int8 *)v60 + 104);
          if (v122 >= 3) {
            int v123 = 1;
          }
          else {
            int v123 = v122 + 2;
          }
          *(_DWORD *)(v64 + 100) = v123;
          unsigned int v124 = *((unsigned __int8 *)v60 + 105);
          if (v124 >= 3) {
            int v125 = 1;
          }
          else {
            int v125 = v124 + 2;
          }
          *(_DWORD *)(v64 + 172) = v82 | 0x3F3FF2;
          *(_DWORD *)(v64 + 160) = v125;
          long long v126 = (unsigned __int8 *)*((void *)v60 + 14);
          for (uint64_t i = (unsigned __int8 *)*((void *)v60 + 15); v126 != i; v126 += 32)
          {
            int v128 = *(_DWORD *)(v64 + 116);
            uint64_t v129 = *(int *)(v64 + 112);
            if ((int)v129 >= v128)
            {
              if (v128 == *(_DWORD *)(v64 + 120))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v64 + 104), v128 + 1);
                int v128 = *(_DWORD *)(v64 + 116);
              }
              *(_DWORD *)(v64 + 116) = v128 + 1;
              operator new();
            }
            uint64_t v130 = *(void *)(v64 + 104);
            *(_DWORD *)(v64 + 112) = v129 + 1;
            uint64_t v131 = *(void *)(v130 + 8 * v129);
            int v132 = *(_DWORD *)(v131 + 44);
            *(_DWORD *)(v131 + 24) = 1;
            unsigned int v133 = *v126 - 1;
            if (v133 <= 9) {
              *(_DWORD *)(v131 + 24) = dword_1000E7810[(char)v133];
            }
            *(_OWORD *)(v131 + 8) = *(_OWORD *)(v126 + 8);
            uint64_t v134 = *((void *)v126 + 3);
            *(_DWORD *)(v131 + 44) = v132 | 0xF;
            *(void *)(v131 + 32) = v134;
            unsigned int v135 = *((_DWORD *)v126 + 1);
            if (v135 <= 2)
            {
              *(_DWORD *)(v131 + 44) = v132 | 0x1F;
              *(_DWORD *)(v131 + 28) = v135;
            }
          }
          v60 += 34;
          if (v60 == v296) {
            goto LABEL_199;
          }
          break;
        case 3:
        case 5:
        case 6:
        case 7:
          goto LABEL_132;
        case 4:
          *(_DWORD *)(v65 + 16) = 4;
          int v78 = *((unsigned __int8 *)v60 + 4);
          *(_DWORD *)(v67 + 44) |= 4u;
          *(_DWORD *)(v67 + 20) = v78;
          goto LABEL_132;
        case 8:
          *(_DWORD *)(v65 + 16) = 8;
          int v79 = *((unsigned __int8 *)v60 + 4);
          *(_DWORD *)(v67 + 44) |= 8u;
          *(_DWORD *)(v67 + 24) = v79;
          goto LABEL_132;
        default:
          if (v68 == 16)
          {
            *(_DWORD *)(v65 + 16) = 16;
            int v80 = *((unsigned __int8 *)v60 + 4);
            *(_DWORD *)(v67 + 44) |= 0x10u;
            *(_DWORD *)(v67 + 28) = v80;
          }
          else if (v68 == 32)
          {
            *(_DWORD *)(v65 + 16) = 64;
            int v69 = *((unsigned __int8 *)v60 + 4);
            *(_DWORD *)(v67 + 44) |= 0x40u;
            *(_DWORD *)(v67 + 36) = v69;
          }
          goto LABEL_132;
      }
    }
  }
LABEL_199:
  long long v136 = (uint64_t *)*((void *)v295 + 25);
  for (uint64_t j = (uint64_t *)*((void *)v295 + 26); v136 != j; *(void *)(v141 + 20) = v146)
  {
    int v138 = *((_DWORD *)a2 + 15);
    uint64_t v139 = *((int *)a2 + 14);
    if ((int)v139 >= v138)
    {
      if (v138 == *((_DWORD *)a2 + 16))
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((const gnss::MeasurementData *)((char *)a2 + 48), v138 + 1);
        int v138 = *((_DWORD *)a2 + 15);
      }
      *((_DWORD *)a2 + 15) = v138 + 1;
      operator new();
    }
    uint64_t v140 = *((void *)a2 + 6);
    *((_DWORD *)a2 + 14) = v139 + 1;
    uint64_t v141 = *(void *)(v140 + 8 * v139);
    unsigned int v142 = *((unsigned __int8 *)v136 + 16) - 1;
    if (v142 > 9) {
      int v143 = 1;
    }
    else {
      int v143 = dword_1000E7810[(char)v142];
    }
    int v144 = *(_DWORD *)(v141 + 32);
    *(_DWORD *)(v141 + 16) = v143;
    uint64_t v145 = *v136;
    uint64_t v146 = v136[1];
    v136 += 3;
    *(void *)(v141 + 8) = v145;
    *(_DWORD *)(v141 + 32) = v144 | 0xF;
  }
  uint64_t v147 = *((void *)v295 + 33);
  int v148 = *((_DWORD *)a2 + 33);
  if (v147)
  {
    *((_DWORD *)a2 + 33) = v148 | 0x80;
    uint64_t v149 = *((void *)a2 + 12);
    if (!v149) {
      operator new();
    }
    int v150 = *(_DWORD *)(v149 + 52);
    *(void *)(v149 + 8) = *(void *)v147;
    *(_OWORD *)(v149 + 16) = *(_OWORD *)(v147 + 8);
    *(_DWORD *)(v149 + 52) = v150 | 0x1FF;
    *(_OWORD *)(v149 + 32) = *(_OWORD *)(v147 + 24);
    int v148 = *((_DWORD *)a2 + 33);
  }
  *((_DWORD *)a2 + 33) = v148 | 2;
  uint64_t v151 = *((void *)a2 + 2);
  if (!v151) {
    operator new();
  }
  uint64_t v152 = *(void *)(v151 + 8);
  *(_DWORD *)(v151 + 44) |= 1u;
  if (!v152) {
    operator new();
  }
  int v153 = *(_DWORD *)(v152 + 44);
  *(void *)(v152 + 8) = *((void *)v295 + 5);
  *(_DWORD *)(v152 + 44) = v153 | 5;
  uint64_t v154 = *(void *)(v152 + 24);
  if (!v154) {
    operator new();
  }
  int v155 = *(_DWORD *)(v154 + 52);
  *(_OWORD *)(v154 + 8) = *(_OWORD *)((char *)v295 + 88);
  *(float64x2_t *)(v154 + 24) = vcvtq_f64_f32(*(float32x2_t *)((char *)v295 + 104));
  double v156 = *((float *)v295 + 28);
  *(_DWORD *)(v154 + 52) = v155 | 0x1F;
  *(double *)(v154 + 40) = v156;
  if (*((void *)v295 + 5) != -1)
  {
    uint64_t v157 = *((void *)v295 + 15);
    if (v157 != 0x8000000000000000)
    {
      float v158 = *((float *)v295 + 32);
      if (v158 >= -0.5 && v158 <= 0.5)
      {
        float v159 = *((float *)v295 + 33);
        if (v159 > 0.0)
        {
          uint64_t v160 = *((void *)v295 + 17);
          if ((v160 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
          {
            float v161 = *((float *)v295 + 36);
            if (v161 > 0.5)
            {
              *(_DWORD *)(v152 + 44) |= 8u;
              uint64_t v162 = *(void *)(v152 + 32);
              if (!v162) {
                operator new();
              }
              int v163 = *(_DWORD *)(v162 + 40);
              *(void *)(v162 + 8) = v157;
              *(float *)(v162 + 16) = v158;
              *(float *)(v162 + 20) = v159;
              *(void *)(v162 + 24) = v160;
              *(_DWORD *)(v162 + 40) = v163 | 0x1F;
              *(float *)(v162 + 32) = v161;
            }
          }
        }
      }
    }
  }
  *(_DWORD *)(v152 + 44) |= 2u;
  uint64_t v164 = *(void *)(v152 + 16);
  if (!v164) {
    operator new();
  }
  int v165 = *(_DWORD *)(v164 + 32);
  *(_DWORD *)(v164 + 32) = v165 | 0xF;
  *(float32x4_t *)(v164 + 8) = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(*((float64x2_t *)v295 + 3)), *((float64x2_t *)v295 + 4));
  if (*((unsigned char *)v295 + 81))
  {
    char v166 = *((unsigned char *)v295 + 80);
    *(_DWORD *)(v164 + 32) = v165 | 0x1F;
    *(unsigned char *)(v164 + 24) = v166;
  }
  double v167 = (int *)*((void *)v295 + 19);
  v297 = (int *)*((void *)v295 + 20);
  if (v167 != v297)
  {
    while (1)
    {
      int v168 = *(_DWORD *)(v151 + 28);
      uint64_t v169 = *(int *)(v151 + 24);
      if ((int)v169 >= v168)
      {
        if (v168 == *(_DWORD *)(v151 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v151 + 16), v168 + 1);
          int v168 = *(_DWORD *)(v151 + 28);
        }
        *(_DWORD *)(v151 + 28) = v168 + 1;
        operator new();
      }
      uint64_t v170 = *(void *)(v151 + 16);
      *(_DWORD *)(v151 + 24) = v169 + 1;
      uint64_t v171 = *(void *)(v170 + 8 * v169);
      *(_DWORD *)(v171 + 112) |= 1u;
      uint64_t v172 = *(void *)(v171 + 8);
      if (!v172) {
        operator new();
      }
      int v173 = *(_DWORD *)(v172 + 24) | 2;
      *(_DWORD *)(v172 + 24) = v173;
      uint64_t v174 = *(void *)(v172 + 8);
      if (!v174) {
        operator new();
      }
      int v175 = *v167;
      *(_DWORD *)(v172 + 24) = v173 | 1;
      *(_DWORD *)(v172 + 16) = v175;
      switch(v175)
      {
        case 0:
          *(_DWORD *)(v172 + 16) = 0;
          goto LABEL_265;
        case 1:
          *(_DWORD *)(v172 + 16) = 1;
          int v177 = *((unsigned __int8 *)v167 + 4);
          *(_DWORD *)(v174 + 44) |= 1u;
          *(_DWORD *)(v174 + 16) = v177;
          goto LABEL_265;
        case 2:
          *(_DWORD *)(v172 + 16) = 2;
          *(_DWORD *)(v174 + 44) |= 2u;
          uint64_t v178 = *(void *)(v174 + 8);
          if (!v178) {
            operator new();
          }
          int v179 = *((char *)v167 + 6);
          int v180 = *(_DWORD *)(v178 + 24);
          *(_DWORD *)(v178 + 24) = v180 | 1;
          *(_DWORD *)(v178 + 16) = v179;
          if (*((unsigned __int8 *)v167 + 4) - 1 > 0x17) {
            goto LABEL_265;
          }
          *(_DWORD *)(v178 + 24) = v180 | 3;
          double v181 = *(_DWORD **)(v178 + 8);
          if (!v181) {
            operator new();
          }
          int v182 = *((unsigned __int8 *)v167 + 4);
          v181[5] |= 3u;
          v181[2] = v182;
          v181[3] = 1;
          int v183 = *((unsigned __int8 *)v167 + 5);
          switch(v183)
          {
            case 3:
              int v184 = 4;
              goto LABEL_264;
            case 2:
              int v184 = 3;
              goto LABEL_264;
            case 1:
              int v184 = 2;
LABEL_264:
              v181[3] = v184;
              break;
          }
LABEL_265:
          *(_DWORD *)(v171 + 112) |= 2u;
          uint64_t v188 = *(void *)(v171 + 16);
          if (!v188) {
            operator new();
          }
          int v189 = *(_DWORD *)(v188 + 96);
          *(_DWORD *)(v188 + 96) = v189 | 1;
          *(_DWORD *)(v188 + 88) = 1;
          switch(*((unsigned char *)v167 + 8))
          {
            case 1:
              *(_DWORD *)(v188 + 88) = 2;
              *(_DWORD *)(v188 + 96) = v189 | 3;
              uint64_t v190 = *(void *)(v188 + 8);
              if (!v190) {
                operator new();
              }
              goto LABEL_293;
            case 2:
              *(_DWORD *)(v188 + 88) = 3;
              *(_DWORD *)(v188 + 96) = v189 | 5;
              uint64_t v191 = *(void *)(v188 + 16);
              if (!v191) {
                operator new();
              }
              int v192 = *(_DWORD *)(v191 + 20);
              char v225 = *((unsigned char *)v167 + 13);
              *(_DWORD *)(v191 + 20) = v192 | 0x10;
              *(unsigned char *)(v191 + 12) = v225;
              char v226 = *((unsigned char *)v167 + 11);
              *(_DWORD *)(v191 + 20) = v192 | 0x14;
              *(unsigned char *)(v191 + 10) = v226;
              char v227 = *((unsigned char *)v167 + 12);
              *(_DWORD *)(v191 + 20) = v192 | 0x1C;
              *(unsigned char *)(v191 + 11) = v227;
              char v228 = *((unsigned char *)v167 + 10);
              *(_DWORD *)(v191 + 20) = v192 | 0x1E;
              *(unsigned char *)(v191 + 9) = v228;
              char v229 = *((unsigned char *)v167 + 9);
              *(_DWORD *)(v191 + 20) = v192 | 0x1F;
              *(unsigned char *)(v191 + 8) = v229;
              break;
            case 3:
              *(_DWORD *)(v188 + 88) = 4;
              *(_DWORD *)(v188 + 96) = v189 | 9;
              uint64_t v193 = *(void *)(v188 + 24);
              if (!v193) {
                operator new();
              }
              char v194 = *((unsigned char *)v167 + 11);
              int v195 = *(_DWORD *)(v193 + 16);
              *(_DWORD *)(v193 + 16) = v195 | 4;
              *(unsigned char *)(v193 + 10) = v194;
              char v196 = *((unsigned char *)v167 + 11);
              *(_DWORD *)(v193 + 16) = v195 | 6;
              *(unsigned char *)(v193 + 9) = v196;
              char v197 = *((unsigned char *)v167 + 12);
              *(_DWORD *)(v193 + 16) = v195 | 0xE;
              *(unsigned char *)(v193 + 11) = v197;
              char v198 = *((unsigned char *)v167 + 9);
              *(_DWORD *)(v193 + 16) = v195 | 0xF;
              *(unsigned char *)(v193 + 8) = v198;
              break;
            case 4:
              *(_DWORD *)(v188 + 88) = 5;
              *(_DWORD *)(v188 + 96) = v189 | 0x11;
              uint64_t v199 = *(void *)(v188 + 32);
              if (!v199) {
                operator new();
              }
              char v200 = *((unsigned char *)v167 + 9);
              int v201 = *(_DWORD *)(v199 + 20);
              *(_DWORD *)(v199 + 20) = v201 | 1;
              *(unsigned char *)(v199 + 8) = v200;
              char v202 = *((unsigned char *)v167 + 11);
              *(_DWORD *)(v199 + 20) = v201 | 5;
              *(unsigned char *)(v199 + 10) = v202;
              char v203 = *((unsigned char *)v167 + 12);
              *(_DWORD *)(v199 + 20) = v201 | 0xD;
              *(unsigned char *)(v199 + 11) = v203;
              char v204 = *((unsigned char *)v167 + 10);
              *(_DWORD *)(v199 + 20) = v201 | 0xF;
              *(unsigned char *)(v199 + 9) = v204;
              char v205 = *((unsigned char *)v167 + 13);
              *(_DWORD *)(v199 + 20) = v201 | 0x1F;
              *(unsigned char *)(v199 + 12) = v205;
              break;
            case 5:
              *(_DWORD *)(v188 + 88) = 6;
              *(_DWORD *)(v188 + 96) = v189 | 0x21;
              uint64_t v206 = *(void *)(v188 + 40);
              if (!v206) {
                operator new();
              }
              goto LABEL_285;
            case 6:
              *(_DWORD *)(v188 + 88) = 11;
              *(_DWORD *)(v188 + 96) = v189 | 0x21;
              uint64_t v206 = *(void *)(v188 + 40);
              if (!v206) {
                operator new();
              }
              goto LABEL_285;
            case 7:
              *(_DWORD *)(v188 + 88) = 7;
              *(_DWORD *)(v188 + 96) = v189 | 0x41;
              uint64_t v206 = *(void *)(v188 + 48);
              if (!v206) {
                operator new();
              }
LABEL_285:
              char v207 = *((unsigned char *)v167 + 10);
              int v208 = *(_DWORD *)(v206 + 16);
              *(_DWORD *)(v206 + 16) = v208 | 2;
              *(unsigned char *)(v206 + 9) = v207;
              char v209 = *((unsigned char *)v167 + 9);
              *(_DWORD *)(v206 + 16) = v208 | 3;
              *(unsigned char *)(v206 + 8) = v209;
              char v210 = *((unsigned char *)v167 + 12);
              *(_DWORD *)(v206 + 16) = v208 | 0xB;
              *(unsigned char *)(v206 + 11) = v210;
              char v211 = *((unsigned char *)v167 + 11);
              *(_DWORD *)(v206 + 16) = v208 | 0xF;
              *(unsigned char *)(v206 + 10) = v211;
              break;
            case 8:
              *(_DWORD *)(v188 + 88) = 8;
              *(_DWORD *)(v188 + 96) = v189 | 0x81;
              uint64_t v212 = *(void *)(v188 + 56);
              if (!v212) {
                operator new();
              }
              char v213 = *((unsigned char *)v167 + 12);
              int v214 = *(_DWORD *)(v212 + 16);
              *(_DWORD *)(v212 + 16) = v214 | 8;
              *(unsigned char *)(v212 + 11) = v213;
              char v215 = *((unsigned char *)v167 + 11);
              *(_DWORD *)(v212 + 16) = v214 | 0xC;
              *(unsigned char *)(v212 + 10) = v215;
              char v216 = *((unsigned char *)v167 + 9);
              *(_DWORD *)(v212 + 16) = v214 | 0xD;
              *(unsigned char *)(v212 + 8) = v216;
              char v217 = *((unsigned char *)v167 + 10);
              *(_DWORD *)(v212 + 16) = v214 | 0xF;
              *(unsigned char *)(v212 + 9) = v217;
              break;
            case 9:
              *(_DWORD *)(v188 + 88) = 9;
              *(_DWORD *)(v188 + 96) = v189 | 0x101;
              uint64_t v218 = *(void *)(v188 + 64);
              if (!v218) {
                operator new();
              }
              int v219 = *(_DWORD *)(v218 + 24);
              char v230 = *((unsigned char *)v167 + 18);
              *(_DWORD *)(v218 + 24) = v219 | 0x200;
              *(unsigned char *)(v218 + 17) = v230;
              char v231 = *((unsigned char *)v167 + 13);
              *(_DWORD *)(v218 + 24) = v219 | 0x210;
              *(unsigned char *)(v218 + 12) = v231;
              char v232 = *((unsigned char *)v167 + 12);
              *(_DWORD *)(v218 + 24) = v219 | 0x218;
              *(unsigned char *)(v218 + 11) = v232;
              char v233 = *((unsigned char *)v167 + 17);
              *(_DWORD *)(v218 + 24) = v219 | 0x318;
              *(unsigned char *)(v218 + 16) = v233;
              char v234 = *((unsigned char *)v167 + 16);
              *(_DWORD *)(v218 + 24) = v219 | 0x398;
              *(unsigned char *)(v218 + 15) = v234;
              char v235 = *((unsigned char *)v167 + 15);
              *(_DWORD *)(v218 + 24) = v219 | 0x3D8;
              *(unsigned char *)(v218 + 14) = v235;
              char v236 = *((unsigned char *)v167 + 14);
              *(_DWORD *)(v218 + 24) = v219 | 0x3F8;
              *(unsigned char *)(v218 + 13) = v236;
              char v237 = *((unsigned char *)v167 + 10);
              *(_DWORD *)(v218 + 24) = v219 | 0x3FA;
              *(unsigned char *)(v218 + 9) = v237;
              char v238 = *((unsigned char *)v167 + 9);
              *(_DWORD *)(v218 + 24) = v219 | 0x3FB;
              *(unsigned char *)(v218 + 8) = v238;
              char v239 = *((unsigned char *)v167 + 11);
              *(_DWORD *)(v218 + 24) = v219 | 0x3FF;
              *(unsigned char *)(v218 + 10) = v239;
              break;
            case 0xA:
              *(_DWORD *)(v188 + 88) = 12;
              *(_DWORD *)(v188 + 96) = v189 | 0x401;
              uint64_t v190 = *(void *)(v188 + 80);
              if (!v190) {
                operator new();
              }
LABEL_293:
              char v220 = *((unsigned char *)v167 + 10);
              int v221 = *(_DWORD *)(v190 + 16);
              *(_DWORD *)(v190 + 16) = v221 | 2;
              *(unsigned char *)(v190 + 9) = v220;
              char v222 = *((unsigned char *)v167 + 11);
              *(_DWORD *)(v190 + 16) = v221 | 6;
              *(unsigned char *)(v190 + 10) = v222;
              char v223 = *((unsigned char *)v167 + 9);
              *(_DWORD *)(v190 + 16) = v221 | 7;
              *(unsigned char *)(v190 + 8) = v223;
              char v224 = *((unsigned char *)v167 + 12);
              *(_DWORD *)(v190 + 16) = v221 | 0xF;
              *(unsigned char *)(v190 + 11) = v224;
              break;
            default:
              break;
          }
          int v240 = *(_DWORD *)(v171 + 112);
          *(_OWORD *)(v171 + 24) = *(_OWORD *)(v167 + 6);
          *(void *)(v171 + 40) = *((void *)v167 + 5);
          *(_DWORD *)(v171 + 80) = v167[42];
          *(unsigned char *)(v171 + 104) = *((unsigned char *)v167 + 173);
          *(_DWORD *)(v171 + 112) = v240 | 0x161C;
          *(_DWORD *)(v171 + 84) = 1;
          unsigned int v241 = *((unsigned __int8 *)v167 + 172);
          if (v241 <= 2) {
            *(_DWORD *)(v171 + 84) = v241 + 2;
          }
          if (*((double *)v167 + 6) >= 0.0)
          {
            float v242 = *((float *)v167 + 14);
            if (v242 > 0.0)
            {
              *(_DWORD *)(v171 + 112) = v240 | 0x163C;
              uint64_t v243 = *(void *)(v171 + 48);
              if (!v243) {
                operator new();
              }
              uint64_t v244 = *((void *)v167 + 6);
              *(_DWORD *)(v243 + 32) |= 3u;
              *(void *)(v243 + 8) = v244;
              *(double *)(v243 + 16) = v242;
            }
          }
          if ((*((void *)v167 + 8) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
          {
            double v245 = *((double *)v167 + 9);
            if (v245 > 0.0)
            {
              *(_DWORD *)(v171 + 112) |= 0x40u;
              uint64_t v246 = *(void *)(v171 + 56);
              if (!v246) {
                operator new();
              }
              uint64_t v247 = *((void *)v167 + 8);
              *(_DWORD *)(v246 + 32) |= 3u;
              *(void *)(v246 + 8) = v247;
              *(double *)(v246 + 16) = v245;
            }
          }
          if ((*((void *)v167 + 10) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
          {
            double v248 = *((double *)v167 + 11);
            if (v248 > 0.0)
            {
              *(_DWORD *)(v171 + 112) |= 0x800u;
              uint64_t v249 = *(void *)(v171 + 88);
              if (!v249) {
                operator new();
              }
              uint64_t v250 = *((void *)v167 + 10);
              *(_DWORD *)(v249 + 32) |= 3u;
              *(void *)(v249 + 8) = v250;
              *(double *)(v249 + 16) = v248;
            }
          }
          if ((*((void *)v167 + 12) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
          {
            double v251 = *((double *)v167 + 13);
            if (v251 > 0.0)
            {
              *(_DWORD *)(v171 + 112) |= 0x2000u;
              uint64_t v252 = *(void *)(v171 + 96);
              if (!v252) {
                operator new();
              }
              int v253 = *(_DWORD *)(v252 + 32);
              *(void *)(v252 + 8) = *((void *)v167 + 12);
              *(double *)(v252 + 16) = v251;
              char v254 = *((unsigned char *)v167 + 112);
              *(_DWORD *)(v252 + 32) = v253 | 7;
              *(unsigned char *)(v252 + 24) = v254;
            }
          }
          unint64_t v255 = *((void *)v167 + 15);
          if (v255 != -1)
          {
            unint64_t v256 = *((void *)v167 + 16);
            if (v256 != -1 && v255 <= v256)
            {
              uint64_t v257 = *((void *)v167 + 17);
              if ((v257 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
              {
                double v258 = *((double *)v167 + 18);
                if (v258 > 0.0)
                {
                  *(_DWORD *)(v171 + 112) |= 0x80u;
                  uint64_t v259 = *(void *)(v171 + 64);
                  if (!v259) {
                    operator new();
                  }
                  int v260 = *(_DWORD *)(v259 + 48);
                  *(void *)(v259 + 8) = *((void *)v167 + 15);
                  *(void *)(v259 + 16) = v256;
                  *(void *)(v259 + 24) = v257;
                  *(double *)(v259 + 32) = v258;
                  char v261 = *((unsigned char *)v167 + 152);
                  *(_DWORD *)(v259 + 48) = v260 | 0x1F;
                  *(unsigned char *)(v259 + 40) = v261;
                }
              }
            }
          }
          uint64_t v262 = *((void *)v167 + 20);
          if (v262)
          {
            *(_DWORD *)(v171 + 112) |= 0x100u;
            __int16 v263 = *(int32x2_t **)(v171 + 72);
            if (!v263) {
              operator new();
            }
            __int32 v264 = v263[14].i32[1];
            if ((*(_DWORD *)v262 & 0x7FFFFFFFu) <= 0x7F7FFFFF)
            {
              v264 |= 1u;
              v263[1].i32[0] = *(_DWORD *)v262;
            }
            __int32 v265 = *(_DWORD *)(v262 + 4);
            v263[14].i32[1] = v264 | 2;
            v263[1].i32[1] = v265;
            if ((*(void *)(v262 + 8) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
              && (*(void *)(v262 + 16) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
              && *(unsigned char *)(v262 + 24))
            {
              v263[14].i32[1] = v264 | 6;
              int32x2_t v266 = v263[2];
              if (!*(void *)&v266) {
                operator new();
              }
              int v267 = *(_DWORD *)(*(void *)&v266 + 32);
              *(_OWORD *)(*(void *)&v266 + 8) = *(_OWORD *)(v262 + 8);
              *(_DWORD *)(*(void *)&v266 + 32) = v267 | 7;
              *(_DWORD *)(*(void *)&v266 + 24) = 1;
              unsigned int v268 = (*(unsigned char *)(v262 + 24) - 1);
              if (v268 <= 3) {
                *(_DWORD *)(*(void *)&v266 + 24) = v268 + 2;
              }
            }
            __int32 v269 = v263[14].i32[1];
            v263[8].i32[0] = *(__int16 *)(v262 + 68);
            __int32 v270 = *(unsigned __int8 *)(v262 + 72);
            v263[6].i32[0] = *(unsigned __int16 *)(v262 + 70);
            v263[6].i32[1] = v270;
            v271.i32[0] = *(unsigned __int8 *)(v262 + 92);
            v271.i32[1] = *(unsigned __int8 *)(v262 + 93);
            int8x8_t v272 = (int8x8_t)vcgt_u32((uint32x2_t)0x500000005, v271);
            v263[7] = vsub_s32((int32x2_t)vand_s8((int8x8_t)vadd_s32((int32x2_t)v271, (int32x2_t)0x200000002), v272), (int32x2_t)vmvn_s8(v272));
            v263[14].i32[1] = v269 | 0x7C8;
            __int16 v273 = (_DWORD *)v263[3];
            if (!v273) {
              operator new();
            }
            sub_10002D2D0(v273, (int *)(v262 + 32));
            v263[14].i32[1] |= 0x10u;
            int v274 = (_DWORD *)v263[4];
            if (!v274) {
              operator new();
            }
            sub_10002D2D0(v274, (int *)(*((void *)v167 + 20) + 44));
            v263[14].i32[1] |= 0x20u;
            __int16 v275 = (_DWORD *)v263[5];
            if (!v275) {
              operator new();
            }
            sub_10002D2D0(v275, (int *)(*((void *)v167 + 20) + 56));
            uint64_t v276 = *((void *)v167 + 20);
            if (*(unsigned char *)(v276 + 80))
            {
              __int32 v277 = *(_DWORD *)(v276 + 76);
              v263[14].i32[1] |= 0x800u;
              v263[8].i32[1] = v277;
            }
            if (*(unsigned char *)(v276 + 88))
            {
              __int32 v278 = *(_DWORD *)(v276 + 84);
              v263[14].i32[1] |= 0x1000u;
              v263[9].i32[0] = v278;
            }
            if (*(unsigned char *)(v276 + 124))
            {
              __int32 v279 = v263[14].i32[1];
              v263[9].i32[1] = *(_DWORD *)(v276 + 120);
              int v280 = *(const std::string::value_type **)(v276 + 96);
              uint64_t v281 = *(void *)(v276 + 104);
              v263[14].i32[1] = v279 | 0x6000;
              uint64_t v282 = (std::string *)v263[10];
              if (v282 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
                operator new();
              }
              std::string::assign(v282, v280, v281 - (void)v280);
              uint64_t v276 = *((void *)v167 + 20);
            }
            uint64_t v284 = *(float **)(v276 + 128);
            for (uint64_t k = *(uint64_t **)(v276 + 136); v284 != (float *)k; v284 += 10)
            {
              int v285 = v263[12].i32[1];
              uint64_t v286 = v263[12].i32[0];
              if ((int)v286 >= v285)
              {
                if (v285 == v263[13].i32[0])
                {
                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)&v263[11], v285 + 1);
                  int v285 = v263[12].i32[1];
                }
                v263[12].i32[1] = v285 + 1;
                operator new();
              }
              int32x2_t v287 = v263[11];
              v263[12].i32[0] = v286 + 1;
              uint64_t v288 = *(void *)(*(void *)&v287 + 8 * v286);
              *(_DWORD *)(v288 + 32) |= 1u;
              uint64_t v289 = *(void *)(v288 + 8);
              if (!v289) {
                operator new();
              }
              uint64_t v290 = *(void *)v284;
              double v291 = v284[2];
              *(_DWORD *)(v289 + 32) |= 3u;
              *(void *)(v289 + 8) = v290;
              *(double *)(v289 + 16) = v291;
              *(_DWORD *)(v288 + 32) |= 2u;
              uint64_t v292 = *(void *)(v288 + 16);
              if (!v292) {
                operator new();
              }
              *(_DWORD *)(v292 + 32) |= 3u;
              *(_OWORD *)(v292 + 8) = *((_OWORD *)v284 + 1);
              int v293 = *((_DWORD *)v284 + 8);
              *(_DWORD *)(v288 + 32) |= 4u;
              *(_DWORD *)(v288 + 24) = v293;
            }
          }
          v167 += 44;
          if (v167 == v297) {
            return a2 != 0;
          }
          break;
        case 3:
        case 5:
        case 6:
        case 7:
          goto LABEL_265;
        case 4:
          *(_DWORD *)(v172 + 16) = 4;
          int v185 = *((unsigned __int8 *)v167 + 4);
          *(_DWORD *)(v174 + 44) |= 4u;
          *(_DWORD *)(v174 + 20) = v185;
          goto LABEL_265;
        case 8:
          *(_DWORD *)(v172 + 16) = 8;
          int v186 = *((unsigned __int8 *)v167 + 4);
          *(_DWORD *)(v174 + 44) |= 8u;
          *(_DWORD *)(v174 + 24) = v186;
          goto LABEL_265;
        default:
          if (v175 == 16)
          {
            *(_DWORD *)(v172 + 16) = 16;
            int v187 = *((unsigned __int8 *)v167 + 4);
            *(_DWORD *)(v174 + 44) |= 0x10u;
            *(_DWORD *)(v174 + 28) = v187;
          }
          else if (v175 == 32)
          {
            *(_DWORD *)(v172 + 16) = 64;
            int v176 = *((unsigned __int8 *)v167 + 4);
            *(_DWORD *)(v174 + 44) |= 0x40u;
            *(_DWORD *)(v174 + 36) = v176;
          }
          goto LABEL_265;
      }
    }
  }
  return a2 != 0;
}

_DWORD *sub_10002D2D0(_DWORD *result, int *a2)
{
  int v2 = *a2;
  result[2] = *a2;
  int v3 = result[6];
  result[6] = v3 | 1;
  if ((v2 & 0x7FFFFFFFu) <= 0x7F7FFFFF)
  {
    int v5 = a2[1];
    int v4 = a2[2];
    if ((v5 & 0x7FFFFFFFu) > 0x7F7FFFFF)
    {
      if ((v4 & 0x7FFFFFFFu) >= 0x7F800000 && (v4 & 0x7FFFFFFFu) <= 0x7F7FFFFF)
      {
        result[6] = v3 | 5;
        result[4] = v4;
      }
    }
    else if ((v4 & 0x7FFFFFFFu) < 0x7F800000)
    {
      result[6] = v3 | 7;
      result[3] = v5;
      result[4] = v4;
    }
  }
  return result;
}

__n128 ProtobufUtil::toProtobuf(__n128 *a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a2 + 16) = a1->n128_u8[0];
  *(_DWORD *)(a2 + 48) = v3 | 3;
  uint64_t v4 = *(void *)(a2 + 8);
  if (!v4) {
    operator new();
  }
  int v5 = *(_DWORD *)(v4 + 72);
  *(void *)(v4 + 8) = a1->n128_u64[1];
  *(_DWORD *)(v4 + 16) = a1[1].n128_u32[0];
  unsigned __int8 v6 = a1[1].n128_u8[4];
  *(_DWORD *)(v4 + 72) = v5 | 7;
  *(unsigned char *)(v4 + 20) = v6;
  *(_DWORD *)(v4 + 64) = a1[1].n128_u32[2];
  unint64_t v7 = a1[2].n128_u64[0];
  *(_DWORD *)(v4 + 72) = v5 | 0x1F;
  *(void *)(v4 + 24) = v7;
  int v8 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a2 + 48) = v8 | 4;
  unsigned int v9 = a1[3].n128_u32[2];
  unsigned __int32 v10 = a1[3].n128_u32[3];
  if (v9 < 6) {
    unsigned int v11 = v9 + 1;
  }
  else {
    unsigned int v11 = 0;
  }
  *(_DWORD *)(a2 + 20) = v11;
  *(_DWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = v8 | 0x3C;
  __n128 result = a1[4];
  *(__n128 *)(a2 + 24) = result;
  return result;
}

void ProtobufUtil::toProtobuf(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(_DWORD *)(a5 + 52) |= 1u;
  uint64_t v9 = *(void *)(a5 + 8);
  if (!v9) {
    operator new();
  }
  ProtobufUtil::toProtobuf(a1, v9);
  int v10 = *(_DWORD *)(a5 + 52);
  *(void *)(a5 + 16) = a2;
  *(void *)(a5 + 24) = a3;
  *(_DWORD *)(a5 + 52) = v10 | 0x16;
  *(void *)(a5 + 40) = a4;
}

uint64_t sub_10002D528(unsigned int a1)
{
  if (a1 < 0x11) {
    return a1 + 1;
  }
  else {
    return 0;
  }
}

uint64_t ProtobufUtil::toProtobuf(unsigned int a1)
{
  if (a1 > 0x21) {
    return 0;
  }
  else {
    return dword_1000E7838[a1];
  }
}

{
  if (a1 != 0 && a1 < 0xFFFFFFF2) {
    return 0;
  }
  else {
    return dword_1000E78C0[a1 + 14];
  }
}

uint64_t ProtobufUtil::toProtobuf(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 124);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 16);
  *(_DWORD *)(a2 + 124) = v4 | 0x3F;
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 32);
  int v6 = *(_DWORD *)(a1 + 48);
  unsigned int v5 = *(_DWORD *)(a1 + 52);
  *(_DWORD *)(a2 + 56) = v6;
  uint64_t result = sub_10002D528(v5);
  int v8 = 0;
  *(_DWORD *)(a2 + 60) = result;
  int32x2_t v9 = *(int32x2_t *)(a1 + 56);
  unsigned int v10 = *(_DWORD *)(a1 + 88);
  uint64_t v11 = *(int *)(a1 + 92);
  if (v10 < 7) {
    unsigned int v12 = v10 + 1;
  }
  else {
    unsigned int v12 = 0;
  }
  *(_DWORD *)(a2 + 96) = v12;
  *(int8x8_t *)(a2 + 64) = vand_s8((int8x8_t)vadd_s32(v9, (int32x2_t)0x100000001), (int8x8_t)vcgt_u32((uint32x2_t)0x600000003, (uint32x2_t)v9));
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(a1 + 64);
  *(void *)(a2 + 88) = *(void *)(a1 + 80);
  if (v11 <= 0x10) {
    int v8 = dword_1000E78FC[v11];
  }
  *(_DWORD *)(a2 + 100) = v8;
  *(_WORD *)(a2 + 104) = *(_WORD *)(a1 + 96);
  uint64_t v13 = *(void *)(a1 + 104);
  *(_DWORD *)(a2 + 124) = v4 | 0x3FFFF;
  *(void *)(a2 + 112) = v13;
  LODWORD(v13) = *(_DWORD *)(a1 + 120);
  *(_DWORD *)(a2 + 124) = v4 | 0x7FFFF;
  *(_DWORD *)(a2 + 108) = v13;
  return result;
}

{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  unsigned int v17;
  unsigned int v18;

  int v4 = sub_10002D528(*(_DWORD *)a1);
  unsigned int v5 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a2 + 40) = v4;
  *(_DWORD *)(a2 + 48) = v5 | 3;
  int v6 = *(void *)(a2 + 8);
  if (!v6) {
    operator new();
  }
  unint64_t v7 = *(_DWORD *)(v6 + 32);
  *(unsigned char *)(v6 + 8) = *(unsigned char *)(a1 + 4);
  int v8 = *(unsigned __int8 *)(a1 + 6);
  *(_DWORD *)(v6 + 12) = *(unsigned __int8 *)(a1 + 5);
  *(_DWORD *)(v6 + 16) = v8;
  int32x2_t v9 = *(unsigned __int16 *)(a1 + 8);
  *(_DWORD *)(v6 + 32) = v7 | 0x1F;
  unsigned int v10 = *(unsigned __int8 *)(a1 + 10);
  *(_DWORD *)(v6 + 20) = v9;
  *(_DWORD *)(v6 + 24) = v10;
  *(_DWORD *)(a2 + 48) |= 4u;
  uint64_t v11 = *(void *)(a2 + 16);
  if (!v11) {
    operator new();
  }
  sub_10002D660(a1 + 16, v11);
  *(_DWORD *)(a2 + 48) |= 8u;
  unsigned int v12 = *(void *)(a2 + 24);
  if (!v12) {
    operator new();
  }
  uint64_t v13 = *(_DWORD *)(v12 + 16) | 3;
  *(_WORD *)(v12 + 8) = *(_WORD *)(a1 + 72);
  *(_DWORD *)(v12 + 16) = v13;
  *(_DWORD *)(a2 + 48) |= 0x10u;
  int v14 = *(void *)(a2 + 32);
  if (!v14) {
    operator new();
  }
  *(_DWORD *)(v14 + 24) |= 1u;
  int v15 = *(void *)(v14 + 8);
  if (!v15) {
    operator new();
  }
  uint64_t result = sub_10002D660(a1 + 80, v15);
  int v17 = *(_DWORD *)(a1 + 136);
  if (v17 < 3) {
    int v18 = v17 + 1;
  }
  else {
    int v18 = 0;
  }
  *(_DWORD *)(v14 + 24) |= 2u;
  *(_DWORD *)(v14 + 16) = v18;
  return result;
}

uint64_t sub_10002D660(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 44);
  *(unsigned char *)(a2 + 8) = *(unsigned char *)a1;
  unsigned int v5 = *(_DWORD *)(a1 + 4);
  if (v5 < 4) {
    unsigned int v6 = v5 + 1;
  }
  else {
    unsigned int v6 = 0;
  }
  *(_DWORD *)(a2 + 12) = v6;
  unint64_t v7 = (const std::string *)(a1 + 8);
  *(_DWORD *)(a2 + 44) = v4 | 7;
  int v8 = *(std::string **)(a2 + 16);
  if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v8, v7);
  uint64_t v9 = *(void *)(a1 + 40) - *(void *)(a1 + 32);
  uint64_t result = sub_10002D764(a2 + 24, *(_DWORD *)(a1 + 40) - *(_DWORD *)(a1 + 32));
  if ((int)v9 >= 1)
  {
    uint64_t v11 = 0;
    do
    {
      int v12 = *(unsigned __int8 *)(*(void *)(a1 + 32) + v11);
      int v13 = *(_DWORD *)(a2 + 32);
      if (v13 == *(_DWORD *)(a2 + 36))
      {
        uint64_t result = sub_10002D764(a2 + 24, v13 + 1);
        int v13 = *(_DWORD *)(a2 + 32);
      }
      uint64_t v14 = *(void *)(a2 + 24);
      *(_DWORD *)(a2 + 32) = v13 + 1;
      *(_DWORD *)(v14 + 4 * v13) = v12;
      ++v11;
    }
    while (v9 != v11);
  }
  return result;
}

uint64_t sub_10002D764(uint64_t result, int a2)
{
  int v2 = *(_DWORD *)(result + 12);
  if (v2 < a2)
  {
    int v3 = 2 * v2;
    if (v3 <= a2) {
      int v3 = a2;
    }
    if (v3 <= 4) {
      int v3 = 4;
    }
    *(_DWORD *)(result + 12) = v3;
    operator new[]();
  }
  return result;
}

double ProtobufUtil::toProtobuf(int *a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 104);
  int v6 = *a1;
  unsigned int v5 = a1[1];
  *(_DWORD *)(a2 + 8) = v6;
  *(_DWORD *)(a2 + 12) = sub_10002D528(v5);
  int v7 = ProtobufUtil::toProtobuf(a1[2]);
  unsigned int v8 = a1[3];
  if (v8 < 0x17) {
    unsigned int v9 = v8 + 1;
  }
  else {
    unsigned int v9 = 0;
  }
  *(_DWORD *)(a2 + 16) = v7;
  *(_DWORD *)(a2 + 20) = v9;
  *(_OWORD *)(a2 + 24) = *((_OWORD *)a1 + 1);
  *(_OWORD *)(a2 + 40) = *((_OWORD *)a1 + 2);
  *(_OWORD *)(a2 + 56) = *((_OWORD *)a1 + 3);
  *(void *)(a2 + 72) = *((void *)a1 + 8);
  *(unsigned char *)(a2 + 96) = *((unsigned char *)a1 + 72);
  *(_WORD *)(a2 + 97) = *(_WORD *)((char *)a1 + 73);
  *(_DWORD *)(a2 + 104) = v4 | 0x7FFF;
  uint64_t v10 = *(void *)(a2 + 80);
  if (!v10) {
    operator new();
  }
  int v11 = *(_DWORD *)(v10 + 60);
  *(_OWORD *)(v10 + 8) = *((_OWORD *)a1 + 5);
  *(_OWORD *)(v10 + 24) = *((_OWORD *)a1 + 6);
  *(void *)(v10 + 40) = *((void *)a1 + 14);
  int v12 = *((unsigned __int8 *)a1 + 120);
  *(_DWORD *)(v10 + 60) = v11 | 0x7F;
  int v13 = *((unsigned __int8 *)a1 + 121);
  *(_DWORD *)(v10 + 48) = v12;
  *(_DWORD *)(v10 + 52) = v13;
  *(_DWORD *)(a2 + 104) |= 0x8000u;
  uint64_t v14 = *(void *)(a2 + 88);
  if (!v14) {
    operator new();
  }
  int v15 = *(_DWORD *)(v14 + 28);
  int v16 = *((unsigned __int16 *)a1 + 66);
  *(_DWORD *)(v14 + 8) = a1[32];
  *(_DWORD *)(v14 + 12) = v16;
  double result = *((double *)a1 + 17);
  *(_DWORD *)(v14 + 28) = v15 | 7;
  *(double *)(v14 + 16) = result;
  return result;
}

int8x8_t ProtobufUtil::toProtobuf(int32x2_t *a1, int8x8_t *a2)
{
  __int32 v2 = a2[3].i32[0];
  a2[3].i32[0] = v2 | 3;
  int8x8_t result = vand_s8((int8x8_t)vadd_s32(*a1, (int32x2_t)0x200000002), (int8x8_t)vcgt_u32((uint32x2_t)0x600000005, (uint32x2_t)vadd_s32(*a1, (int32x2_t)0x100000001)));
  a2[1] = result;
  __int32 v4 = a1[1].i32[0];
  a2[3].i32[0] = v2 | 7;
  a2[2].i32[0] = v4;
  return result;
}

_DWORD *sub_10002DC64(int *a1, uint64_t a2)
{
  int v3 = *a1;
  int v4 = *(_DWORD *)(a2 + 32);
  int v5 = *((unsigned __int16 *)a1 + 2);
  *(_DWORD *)(a2 + 32) = v4 | 3;
  *(_DWORD *)(a2 + 8) = v3;
  *(_DWORD *)(a2 + 12) = v5;
  *(_DWORD *)(a2 + 24) = a1[2];
  *(_DWORD *)(a2 + 32) = v4 | 0xF;
  int8x8_t result = *(_DWORD **)(a2 + 16);
  if (!result) {
    operator new();
  }
  int v7 = *((unsigned __int16 *)a1 + 6);
  int v8 = result[6];
  int v9 = *((unsigned __int16 *)a1 + 7);
  result[6] = v8 | 3;
  result[2] = v7;
  result[3] = v9;
  int v10 = a1[4];
  result[6] = v8 | 7;
  result[4] = v10;
  return result;
}

uint32x4_t ProtobufUtil::toProtobuf(uint64_t a1, uint64_t a2)
{
  int v4 = ProtobufUtil::toProtobuf(*(_DWORD *)a1);
  int v5 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a2 + 64) = v5 | 1;
  int v6 = *(_DWORD *)(a1 + 4);
  *(_DWORD *)(a2 + 8) = v4;
  *(_DWORD *)(a2 + 12) = v6;
  *(_DWORD *)(a2 + 64) = v5 | 7;
  int v7 = *(int8x8_t **)(a2 + 16);
  if (!v7) {
    operator new();
  }
  int8x8_t v8 = ProtobufUtil::toProtobuf((int32x2_t *)(a1 + 8), v7);
  *(_DWORD *)(a2 + 64) |= 8u;
  uint64_t v9 = *(void *)(a2 + 24);
  if (!v9) {
    operator new();
  }
  int v10 = *(_DWORD *)(v9 + 40);
  int v11 = *(unsigned __int16 *)(a1 + 24);
  *(_DWORD *)(v9 + 8) = *(_DWORD *)(a1 + 20);
  *(_DWORD *)(v9 + 12) = v11;
  *(_DWORD *)(v9 + 40) = v10 | 0xF;
  int v12 = *(_DWORD *)(a1 + 28);
  int v13 = *(_DWORD *)(a1 + 32);
  BOOL v14 = (v12 + 1) >= 3;
  int v15 = v12 + 2;
  if (v14) {
    int v15 = 0;
  }
  *(_DWORD *)(v9 + 16) = *(unsigned __int8 *)(a1 + 26);
  *(_DWORD *)(v9 + 20) = v15;
  *(_DWORD *)(v9 + 32) = v13;
  *(_DWORD *)(v9 + 40) = v10 | 0x3F;
  int v16 = *(_DWORD **)(v9 + 24);
  if (!v16) {
    operator new();
  }
  int v17 = v16[6];
  int v18 = *(unsigned __int16 *)(a1 + 40);
  v16[2] = *(_DWORD *)(a1 + 36);
  v16[3] = v18;
  int v19 = *(unsigned __int8 *)(a1 + 42);
  v16[6] = v17 | 7;
  void v16[4] = v19;
  *(_DWORD *)(a2 + 64) |= 0x10u;
  int v20 = *(_DWORD **)(a2 + 32);
  if (!v20) {
    operator new();
  }
  int v21 = v20[9];
  v20[9] = v21 | 1;
  unsigned int v22 = *(_DWORD *)(a1 + 44);
  int v23 = *(_DWORD *)(a1 + 48);
  if (v22 < 5) {
    unsigned int v24 = v22 + 1;
  }
  else {
    unsigned int v24 = 0;
  }
  v20[2] = v24;
  v20[3] = v23;
  int v25 = *(unsigned __int8 *)(a1 + 54);
  v20[4] = *(unsigned __int16 *)(a1 + 52);
  v20[5] = v25;
  int v26 = *(_DWORD *)(a1 + 56);
  unsigned int v27 = v26 + 1;
  int v28 = v26 + 2;
  if (v27 >= 3) {
    int v28 = 0;
  }
  int v29 = *(unsigned __int16 *)(a1 + 60);
  v20[9] = v21 | 0x3F;
  v20[6] = v28;
  v20[7] = v29;
  *(_DWORD *)(a2 + 64) |= 0x20u;
  uint64_t v30 = *(void *)(a2 + 40);
  if (!v30) {
    operator new();
  }
  int v31 = 0;
  int v32 = *(_DWORD *)(a1 + 64);
  switch(v32)
  {
    case 0:
      int v31 = 1;
      break;
    case 1:
      int v31 = 2;
      break;
    case 2:
    case 4:
    case 6:
    case 7:
      break;
    case 3:
      int v31 = 3;
      break;
    case 5:
      int v31 = 4;
      break;
    case 8:
      int v31 = 5;
      break;
    case 9:
      int v31 = 6;
      break;
    case 10:
      int v31 = 7;
      break;
    default:
      if (v32 == 255) {
        int v31 = 8;
      }
      break;
  }
  int v33 = *(_DWORD *)(v30 + 24);
  *(_DWORD *)(v30 + 16) = v31;
  *(_DWORD *)(v30 + 24) = v33 | 3;
  uint64_t v34 = *(void *)(v30 + 8);
  if (!v34) {
    operator new();
  }
  int v35 = (_DWORD *)(v34 + 72);
  uint64_t v36 = *(void *)(v34 + 8);
  *(_DWORD *)(v34 + 72) |= 1u;
  if (!v36) {
    operator new();
  }
  *(_DWORD *)(v36 + 24) |= 1u;
  char v37 = *(_DWORD **)(v36 + 8);
  if (!v37) {
    operator new();
  }
  int v38 = *(_DWORD *)(a1 + 68);
  int v39 = v37[5];
  v37[5] = v39 | 1;
  int v40 = *(_DWORD *)(a1 + 72);
  v37[5] = v39 | 3;
  v37[2] = v38;
  v37[3] = v40;
  int v41 = *(unsigned __int8 *)(a1 + 76);
  *(_DWORD *)(v36 + 24) |= 2u;
  *(_DWORD *)(v36 + 16) = v41;
  *v35 |= 2u;
  uint64_t v42 = *(uint32x4_t **)(v34 + 16);
  if (!v42) {
    operator new();
  }
  v42[2].i32[1] |= 1u;
  uint64_t v43 = (_DWORD *)v42->i64[1];
  if (!v43) {
    operator new();
  }
  int v44 = *(_DWORD *)(a1 + 80);
  int v45 = v43[5];
  v43[5] = v45 | 1;
  int v46 = *(_DWORD *)(a1 + 84);
  v43[5] = v45 | 3;
  v43[2] = v44;
  v43[3] = v46;
  v42[2].i32[1] |= 0x1Eu;
  v8.i32[0] = *(_DWORD *)(a1 + 88);
  uint32x4_t v47 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v8));
  v42[1] = v47;
  *v35 |= 4u;
  uint64_t v48 = *(void *)(v34 + 24);
  if (!v48) {
    operator new();
  }
  *(_DWORD *)(v48 + 44) |= 1u;
  uint64_t v49 = *(_DWORD **)(v48 + 8);
  if (!v49) {
    operator new();
  }
  int v50 = *(_DWORD *)(a1 + 92);
  int v51 = v49[5];
  v49[5] = v51 | 1;
  int v52 = *(_DWORD *)(a1 + 96);
  v49[5] = v51 | 3;
  v49[2] = v50;
  v49[3] = v52;
  int v53 = *(_DWORD *)(v48 + 44);
  *(_DWORD *)(v48 + 16) = *(unsigned __int16 *)(a1 + 100);
  v47.i32[0] = *(_DWORD *)(a1 + 102);
  *(uint32x4_t *)(v48 + 20) = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v47.i8));
  int v54 = *(unsigned __int8 *)(a1 + 106);
  *(_DWORD *)(v48 + 44) = v53 | 0x7E;
  *(_DWORD *)(v48 + 36) = v54;
  *v35 |= 8u;
  uint64_t v55 = *(void *)(v34 + 32);
  if (!v55) {
    operator new();
  }
  int v56 = (int *)(v55 + 40);
  int v57 = *(_DWORD **)(v55 + 8);
  *(_DWORD *)(v55 + 40) |= 1u;
  if (!v57) {
    operator new();
  }
  int v58 = *(_DWORD *)(a1 + 108);
  int v59 = v57[5];
  v57[5] = v59 | 1;
  int v60 = *(_DWORD *)(a1 + 112);
  v57[5] = v59 | 3;
  v57[2] = v58;
  v57[3] = v60;
  int v61 = *v56;
  int v62 = *(unsigned __int8 *)(a1 + 118);
  *(_DWORD *)(v55 + 16) = *(unsigned __int16 *)(a1 + 116);
  *(_DWORD *)(v55 + 20) = v62;
  int v63 = *(unsigned __int8 *)(a1 + 120);
  *(_DWORD *)(v55 + 24) = *(unsigned __int8 *)(a1 + 119);
  *(_DWORD *)(v55 + 28) = v63;
  int v64 = *(unsigned __int8 *)(a1 + 121);
  int *v56 = v61 | 0x3E;
  *(_DWORD *)(v55 + 32) = v64;
  *v35 |= 0x10u;
  uint64_t v65 = *(_DWORD **)(v34 + 40);
  if (!v65) {
    operator new();
  }
  int v66 = *(_DWORD *)(a1 + 124);
  int v67 = v65[5];
  v65[5] = v67 | 1;
  int v68 = *(_DWORD *)(a1 + 128);
  v65[5] = v67 | 3;
  v65[2] = v66;
  v65[3] = v68;
  *v35 |= 0x20u;
  uint64_t v69 = *(void *)(v34 + 48);
  if (!v69) {
    operator new();
  }
  *(_DWORD *)(v69 + 24) |= 1u;
  int v70 = *(_DWORD **)(v69 + 8);
  if (!v70) {
    operator new();
  }
  int v71 = *(_DWORD *)(a1 + 132);
  int v72 = v70[5];
  v70[5] = v72 | 1;
  int v73 = *(_DWORD *)(a1 + 136);
  v70[5] = v72 | 3;
  v70[2] = v71;
  v70[3] = v73;
  int v74 = *(unsigned __int16 *)(a1 + 140);
  *(_DWORD *)(v69 + 24) |= 2u;
  *(_DWORD *)(v69 + 16) = v74;
  *v35 |= 0x40u;
  int v75 = *(int **)(v34 + 56);
  if (!v75) {
    operator new();
  }
  int v76 = *(unsigned __int8 *)(a1 + 144);
  v75[10] |= 1u;
  v75[8] = v76;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v75 + 2), 15);
  for (uint64_t i = 0; i != 120; i += 8)
  {
    int v79 = v75[5];
    uint64_t v80 = v75[4];
    if ((int)v80 >= v79)
    {
      if (v79 == v75[6])
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v75 + 2), v79 + 1);
        int v79 = v75[5];
      }
      v75[5] = v79 + 1;
      operator new();
    }
    uint64_t v81 = *((void *)v75 + 1);
    v75[4] = v80 + 1;
    int v82 = *(_DWORD **)(v81 + 8 * v80);
    int v83 = *(_DWORD *)(a1 + i + 148);
    int v84 = v82[5];
    v82[5] = v84 | 1;
    int v85 = *(_DWORD *)(a1 + i + 152);
    v82[5] = v84 | 3;
    v82[2] = v83;
    v82[3] = v85;
  }
  int v86 = *(unsigned __int8 *)(a1 + 268);
  *v35 |= 0x80u;
  *(_DWORD *)(v34 + 64) = v86;
  *(_DWORD *)(a2 + 64) |= 0x40u;
  uint64_t v87 = *(void *)(a2 + 48);
  if (!v87) {
    operator new();
  }
  int v88 = *(_DWORD *)(a1 + 272);
  switch(v88)
  {
    case 0:
      int v89 = 1;
      break;
    case 1:
      int v89 = 2;
      break;
    case 2:
      int v89 = 3;
      break;
    case 3:
      int v89 = 4;
      break;
    default:
      if (v88 == 255) {
        int v89 = 5;
      }
      else {
        int v89 = 0;
      }
      break;
  }
  int v90 = *(_DWORD *)(v87 + 24);
  *(_DWORD *)(v87 + 16) = v89;
  *(_DWORD *)(v87 + 24) = v90 | 3;
  uint64_t v91 = *(void *)(v87 + 8);
  if (!v91) {
    operator new();
  }
  uint64_t v92 = (_DWORD *)(v91 + 44);
  uint64_t v93 = *(_DWORD **)(v91 + 8);
  *(_DWORD *)(v91 + 44) |= 1u;
  if (!v93) {
    operator new();
  }
  int v94 = *(unsigned __int16 *)(a1 + 276);
  int v95 = *(unsigned __int16 *)(a1 + 278);
  v93[5] |= 3u;
  v93[2] = v94;
  v93[3] = v95;
  *v92 |= 2u;
  uint64_t v96 = *(_DWORD **)(v91 + 16);
  if (!v96) {
    operator new();
  }
  int v97 = v96[7];
  int v98 = *(unsigned __int16 *)(a1 + 282);
  v96[2] = *(unsigned __int16 *)(a1 + 280);
  v96[3] = v98;
  int v99 = *(unsigned __int8 *)(a1 + 284);
  v96[7] = v97 | 0xF;
  int v100 = *(unsigned __int8 *)(a1 + 285);
  v96[4] = v99;
  v96[5] = v100;
  *v92 |= 4u;
  uint64_t v101 = *(_DWORD **)(v91 + 24);
  if (!v101) {
    operator new();
  }
  int v102 = v101[6];
  int v103 = *(unsigned __int16 *)(a1 + 288);
  v101[2] = *(unsigned __int16 *)(a1 + 286);
  v101[3] = v103;
  int v104 = *(unsigned __int8 *)(a1 + 290);
  v101[6] = v102 | 7;
  v101[4] = v104;
  *v92 |= 8u;
  unsigned int v105 = *(uint32x4_t **)(v91 + 32);
  if (!v105) {
    operator new();
  }
  __int32 v106 = v105[2].i32[1];
  __int32 v107 = *(unsigned __int16 *)(a1 + 294);
  v105->i32[2] = *(unsigned __int16 *)(a1 + 292);
  v105->i32[3] = v107;
  v105[2].i32[1] = v106 | 0x3F;
  v77.i32[0] = *(_DWORD *)(a1 + 296);
  uint32x4_t result = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(v77));
  v105[1] = result;
  int v109 = *(_DWORD *)(a1 + 300);
  *(_DWORD *)(a2 + 64) |= 0x80u;
  *(_DWORD *)(a2 + 56) = v109;
  return result;
}

_DWORD *ProtobufUtil::toProtobuf(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a2 + 52) = v4 | 1;
  int v5 = *(_DWORD *)(a1 + 4);
  if (*(_DWORD *)a1 < 5u) {
    int v6 = *(_DWORD *)a1 + 1;
  }
  else {
    int v6 = 0;
  }
  *(_DWORD *)(a2 + 8) = v6;
  *(_DWORD *)(a2 + 12) = v5;
  int v7 = *(unsigned __int8 *)(a1 + 10);
  *(_DWORD *)(a2 + 16) = *(unsigned __int16 *)(a1 + 8);
  *(_DWORD *)(a2 + 20) = v7;
  *(_DWORD *)(a2 + 32) = *(unsigned __int8 *)(a1 + 11);
  *(_DWORD *)(a2 + 52) = v4 | 0x3F;
  uint64_t v8 = *(void *)(a2 + 24);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *(int *)(a1 + 16);
  if (v9 > 4) {
    int v10 = 0;
  }
  else {
    int v10 = dword_1000E7940[v9];
  }
  int v11 = *(_DWORD *)(v8 + 24);
  *(_DWORD *)(v8 + 16) = v10;
  *(_DWORD *)(v8 + 24) = v11 | 3;
  uint64_t v12 = *(void *)(v8 + 8);
  if (!v12) {
    operator new();
  }
  *(_DWORD *)(v12 + 36) |= 1u;
  uint64_t v13 = *(void *)(v12 + 8);
  if (!v13) {
    operator new();
  }
  int v14 = *(_DWORD *)(v13 + 36);
  *(void *)(v13 + 8) = *(void *)(a1 + 24);
  int v15 = *(unsigned __int16 *)(a1 + 34);
  *(_DWORD *)(v13 + 16) = *(unsigned __int16 *)(a1 + 32);
  *(_DWORD *)(v13 + 20) = v15;
  *(_DWORD *)(v13 + 36) = v14 | 0xF;
  uint64_t v16 = *(void *)(v13 + 24);
  if (!v16) {
    operator new();
  }
  sub_10002DC64((int *)(a1 + 36), v16);
  *(_DWORD *)(v12 + 36) |= 2u;
  uint64_t v17 = *(void *)(v12 + 16);
  if (!v17) {
    operator new();
  }
  int v18 = *(_DWORD *)(v17 + 28);
  int v19 = *(unsigned __int16 *)(a1 + 58);
  *(_DWORD *)(v17 + 8) = *(unsigned __int8 *)(a1 + 56);
  *(_DWORD *)(v17 + 12) = v19;
  *(_DWORD *)(v17 + 28) = v18 | 7;
  uint64_t v20 = *(void *)(v17 + 16);
  if (!v20) {
    operator new();
  }
  sub_10002DC64((int *)(a1 + 60), v20);
  *(_DWORD *)(v12 + 36) |= 4u;
  uint64_t v21 = *(void *)(v12 + 24);
  if (!v21) {
    operator new();
  }
  int v22 = *(unsigned __int16 *)(a1 + 80);
  int v23 = *(_DWORD *)(v21 + 60);
  *(_DWORD *)(v21 + 60) = v23 | 1;
  int v24 = *(_DWORD *)(a1 + 84);
  *(_DWORD *)(v21 + 8) = v22;
  *(_DWORD *)(v21 + 12) = v24;
  int v25 = *(unsigned __int16 *)(a1 + 88);
  *(_DWORD *)(v21 + 60) = v23 | 7;
  int v26 = *(_DWORD *)(a1 + 92);
  *(_DWORD *)(v21 + 16) = v25;
  *(_DWORD *)(v21 + 20) = v26;
  *(_DWORD *)(v21 + 60) = v23 | 0x1F;
  unsigned int v27 = *(_DWORD **)(v21 + 24);
  if (!v27) {
    operator new();
  }
  int v28 = *(unsigned __int16 *)(a1 + 96);
  int v29 = v27[6];
  v27[6] = v29 | 3;
  int v30 = *(unsigned __int16 *)(a1 + 98);
  v27[2] = v28;
  v27[3] = v30;
  int v31 = *(_DWORD *)(a1 + 100);
  v27[6] = v29 | 7;
  void v27[4] = v31;
  int v32 = *(_DWORD *)(a1 + 104);
  int v33 = *(_DWORD *)(v21 + 60);
  int v34 = *(unsigned __int16 *)(a1 + 108);
  *(_DWORD *)(v21 + 60) = v33 | 0x60;
  *(_DWORD *)(v21 + 32) = v32;
  *(_DWORD *)(v21 + 36) = v34;
  int v35 = *(char *)(a1 + 116);
  *(_DWORD *)(v21 + 40) = *(_DWORD *)(a1 + 112);
  *(_DWORD *)(v21 + 44) = v35;
  int v36 = *(unsigned __int8 *)(a1 + 117);
  *(_DWORD *)(v21 + 60) = v33 | 0x3E0;
  int v37 = *(_DWORD *)(a1 + 120);
  *(_DWORD *)(v21 + 60) = v33 | 0x7E0;
  *(_DWORD *)(v21 + 48) = v36;
  *(_DWORD *)(v21 + 52) = v37;
  int v38 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a2 + 36) = *(unsigned __int8 *)(a1 + 128);
  *(_DWORD *)(a2 + 52) = v38 | 0xC0;
  uint64_t v39 = *(void *)(a2 + 40);
  if (!v39) {
    operator new();
  }
  unsigned int v40 = *(_DWORD *)(a1 + 132);
  if (v40 < 6) {
    unsigned int v41 = v40 + 1;
  }
  else {
    unsigned int v41 = 0;
  }
  int v42 = *(_DWORD *)(v39 + 24);
  *(_DWORD *)(v39 + 16) = v41;
  *(_DWORD *)(v39 + 24) = v42 | 3;
  uint64_t v43 = *(_DWORD **)(v39 + 8);
  if (!v43) {
    operator new();
  }
  int v44 = v43[12];
  int v45 = *(unsigned __int8 *)(a1 + 137);
  v43[2] = *(unsigned __int8 *)(a1 + 136);
  v43[3] = v45;
  int v46 = *(unsigned __int8 *)(a1 + 138);
  v43[12] = v44 | 7;
  v43[10] = v46;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v43 + 4), 32);
  uint64_t v47 = -768;
  do
  {
    int v48 = v43[7];
    uint64_t v49 = (int)v43[6];
    if ((int)v49 >= v48)
    {
      if (v48 == v43[8])
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v43 + 4), v48 + 1);
        int v48 = v43[7];
      }
      v43[7] = v48 + 1;
      operator new();
    }
    uint64_t v50 = *((void *)v43 + 2);
    v43[6] = v49 + 1;
    uint32x4_t result = *(_DWORD **)(v50 + 8 * v49);
    int v52 = result[12];
    uint64_t v53 = a1 + v47;
    int v54 = *(unsigned __int8 *)(a1 + v47 + 910);
    result[2] = *(__int16 *)(a1 + v47 + 908);
    result[3] = v54;
    int v55 = *(unsigned __int8 *)(a1 + v47 + 912);
    result[4] = *(unsigned __int8 *)(a1 + v47 + 911);
    result[5] = v55;
    unsigned int v56 = *(_DWORD *)(a1 + v47 + 916);
    if (v56 < 5) {
      unsigned int v57 = v56 + 1;
    }
    else {
      unsigned int v57 = 0;
    }
    result[12] = v52 | 0x1F;
    int v58 = *(_DWORD *)(v53 + 920);
    result[6] = v57;
    result[7] = v58;
    int v59 = *(unsigned __int8 *)(v53 + 924);
    result[12] = v52 | 0xFF;
    int v60 = *(unsigned __int8 *)(v53 + 925);
    result[8] = v59;
    result[9] = v60;
    int v61 = *(_DWORD *)(v53 + 928);
    result[12] = v52 | 0x1FF;
    result[10] = v61;
    v47 += 24;
  }
  while (v47);
  return result;
}

{
  int v4;
  int v5;
  int v6;
  int v7;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  _DWORD *v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  _DWORD *v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  int v40;
  _DWORD *v41;
  int v42;
  int v43;
  int v44;
  _DWORD *v45;
  int v46;
  int v47;
  _DWORD *v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  _DWORD *result;
  int v55;
  int v56;
  int v57;

  int v4 = *(_DWORD *)(a2 + 76);
  int v5 = *(unsigned __int16 *)(a1 + 4);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)a1;
  *(_DWORD *)(a2 + 12) = v5;
  int v6 = *(unsigned __int8 *)(a1 + 6);
  int v7 = *(unsigned __int8 *)(a1 + 7);
  *(_DWORD *)(a2 + 76) = v4 | 0xF;
  *(_DWORD *)(a2 + 16) = v6;
  *(_DWORD *)(a2 + 20) = v7;
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a2 + 24);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a2 + 24), 16);
  uint64_t v9 = -384;
  do
  {
    int v10 = *(_DWORD *)(a2 + 36);
    int v11 = *(int *)(a2 + 32);
    if ((int)v11 >= v10)
    {
      if (v10 == *(_DWORD *)(a2 + 40))
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v10 + 1);
        int v10 = *(_DWORD *)(a2 + 36);
      }
      *(_DWORD *)(a2 + 36) = v10 + 1;
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 24);
    *(_DWORD *)(a2 + 32) = v11 + 1;
    uint64_t v13 = *(_DWORD **)(v12 + 8 * v11);
    int v14 = v13[12];
    int v15 = a1 + v9;
    uint64_t v16 = *(unsigned __int16 *)(a1 + v9 + 394);
    v13[2] = *(__int16 *)(a1 + v9 + 392);
    v13[3] = v16;
    uint64_t v17 = *(unsigned __int8 *)(a1 + v9 + 398);
    void v13[4] = *(unsigned __int16 *)(a1 + v9 + 396);
    v13[5] = v17;
    int v18 = *(unsigned __int8 *)(a1 + v9 + 400);
    v13[6] = *(unsigned __int8 *)(a1 + v9 + 399);
    v13[7] = v18;
    int v19 = *(_DWORD *)(a1 + v9 + 404);
    if (v19 < 5) {
      uint64_t v20 = v19 + 1;
    }
    else {
      uint64_t v20 = 0;
    }
    v13[12] = v14 | 0x7F;
    uint64_t v21 = *(_DWORD *)(v15 + 408);
    v13[8] = v20;
    v13[9] = v21;
    int v22 = *(unsigned __int8 *)(v15 + 412);
    v13[12] = v14 | 0x1FF;
    v13[10] = v22;
    v9 += 24;
  }
  while (v9);
  *(_DWORD *)(a2 + 76) |= 0x20u;
  int v23 = *(void *)(a2 + 48);
  if (!v23) {
    operator new();
  }
  int v24 = *(int *)(a1 + 392);
  if (v24 > 4) {
    int v25 = 0;
  }
  else {
    int v25 = dword_1000E7940[v24];
  }
  int v26 = *(_DWORD *)(v23 + 24);
  *(_DWORD *)(v23 + 16) = v25;
  *(_DWORD *)(v23 + 24) = v26 | 3;
  unsigned int v27 = *(void *)(v23 + 8);
  if (!v27) {
    operator new();
  }
  int v28 = (_DWORD *)(v27 + 36);
  int v29 = *(void *)(v27 + 8);
  *(_DWORD *)(v27 + 36) |= 1u;
  if (!v29) {
    operator new();
  }
  int v30 = *(void *)(v29 + 8);
  *(_DWORD *)(v29 + 28) |= 1u;
  if (!v30) {
    operator new();
  }
  int v31 = (int *)(v30 + 36);
  int v32 = *(_DWORD **)(v30 + 8);
  *(_DWORD *)(v30 + 36) |= 1u;
  if (!v32) {
    operator new();
  }
  int v33 = *(_DWORD *)(a1 + 396);
  int v34 = v32[5];
  v32[5] = v34 | 1;
  int v35 = *(_DWORD *)(a1 + 400);
  v32[5] = v34 | 3;
  v32[2] = v33;
  v32[3] = v35;
  int v36 = *v31;
  int v37 = *(unsigned __int16 *)(a1 + 406);
  *(_DWORD *)(v30 + 16) = *(unsigned __int16 *)(a1 + 404);
  *(_DWORD *)(v30 + 20) = v37;
  *(_DWORD *)(v30 + 24) = *(unsigned __int16 *)(a1 + 408);
  int v38 = *(_DWORD *)(a1 + 412);
  uint64_t v39 = v38 + 1;
  unsigned int v40 = v38 + 2;
  if (v39 >= 4) {
    unsigned int v40 = 0;
  }
  *int v31 = v36 | 0x1E;
  *(_DWORD *)(v30 + 28) = v40;
  *(_DWORD *)(v29 + 28) |= 2u;
  unsigned int v41 = *(_DWORD **)(v29 + 16);
  if (!v41) {
    operator new();
  }
  int v42 = *(_DWORD *)(a1 + 416);
  uint64_t v43 = v41[5];
  v41[5] = v43 | 1;
  int v44 = *(_DWORD *)(a1 + 420);
  v41[5] = v43 | 3;
  v41[2] = v42;
  v41[3] = v44;
  *v28 |= 2u;
  int v45 = *(_DWORD **)(v27 + 16);
  if (!v45) {
    operator new();
  }
  int v46 = *(_DWORD *)(a1 + 424);
  uint64_t v47 = *(unsigned __int8 *)(a1 + 428);
  v45[5] |= 3u;
  v45[2] = v46;
  v45[3] = v47;
  *v28 |= 4u;
  int v48 = *(_DWORD **)(v27 + 24);
  if (!v48) {
    operator new();
  }
  uint64_t v49 = *(_DWORD *)(a1 + 432);
  v48[5] |= 3u;
  uint64_t v50 = *(unsigned __int8 *)(a1 + 436);
  v48[2] = v49;
  v48[3] = v50;
  int v51 = *(unsigned __int8 *)(a1 + 440);
  int v52 = *(_DWORD *)(a2 + 76);
  *(_DWORD *)(a2 + 76) = v52 | 0x40;
  uint64_t v53 = *(_DWORD *)(a1 + 444);
  *(_DWORD *)(a2 + 56) = v51;
  *(_DWORD *)(a2 + 60) = v53;
  *(_DWORD *)(a2 + 76) = v52 | 0x1C0;
  uint32x4_t result = *(_DWORD **)(a2 + 64);
  if (!result) {
    operator new();
  }
  int v55 = result[6];
  unsigned int v56 = *(unsigned __int16 *)(a1 + 452);
  result[2] = *(_DWORD *)(a1 + 448);
  result[3] = v56;
  unsigned int v57 = *(unsigned __int8 *)(a1 + 454);
  result[6] = v55 | 7;
  result[4] = v57;
  return result;
}

_DWORD *ProtobufUtil::toProtobuf(int32x2_t *a1, uint64_t a2)
{
  int v4 = ProtobufUtil::toProtobuf(a1->i32[0]);
  int v5 = *(_DWORD *)(a2 + 52);
  int v6 = a1->u8[4];
  *(_DWORD *)(a2 + 8) = v4;
  *(_DWORD *)(a2 + 12) = v6;
  *(_DWORD *)(a2 + 52) = v5 | 7;
  int v7 = *(int8x8_t **)(a2 + 16);
  if (!v7) {
    operator new();
  }
  ProtobufUtil::toProtobuf(a1 + 1, v7);
  *(_DWORD *)(a2 + 52) |= 8u;
  uint64_t v8 = *(void *)(a2 + 24);
  if (!v8) {
    operator new();
  }
  ProtobufUtil::toProtobuf((uint64_t)&a1[2] + 4, v8);
  *(_DWORD *)(a2 + 52) |= 0x10u;
  uint64_t v9 = *(void *)(a2 + 32);
  if (!v9) {
    operator new();
  }
  uint32x4_t result = ProtobufUtil::toProtobuf((uint64_t)&a1[60], v9);
  int v11 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a2 + 40) = a1[174].i32[0];
  __int8 v12 = a1[174].i8[4];
  *(_DWORD *)(a2 + 52) = v11 | 0x60;
  *(unsigned char *)(a2 + 44) = v12;
  return result;
}

{
  int v4;
  int v5;
  int v6;
  int8x8_t *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *result;
  unsigned int v11;
  unsigned int v12;
  int v13;
  __int8 v14;

  int v4 = ProtobufUtil::toProtobuf(a1->i32[0]);
  int v5 = *(_DWORD *)(a2 + 52);
  int v6 = a1->u8[4];
  *(_DWORD *)(a2 + 8) = v4;
  *(_DWORD *)(a2 + 12) = v6;
  *(_DWORD *)(a2 + 52) = v5 | 7;
  int v7 = *(int8x8_t **)(a2 + 16);
  if (!v7) {
    operator new();
  }
  ProtobufUtil::toProtobuf(a1 + 1, v7);
  *(_DWORD *)(a2 + 52) |= 8u;
  uint64_t v8 = *(void *)(a2 + 24);
  if (!v8) {
    operator new();
  }
  ProtobufUtil::toProtobuf((uint64_t)&a1[2] + 4, v8);
  *(_DWORD *)(a2 + 52) |= 0x10u;
  uint64_t v9 = *(void *)(a2 + 32);
  if (!v9) {
    operator new();
  }
  uint32x4_t result = ProtobufUtil::toProtobuf((int *)&a1[59] + 1, v9);
  int v11 = a1[65].u32[0];
  if (v11 < 3) {
    __int8 v12 = v11 + 1;
  }
  else {
    __int8 v12 = 0;
  }
  uint64_t v13 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a2 + 40) = v12;
  int v14 = a1[65].i8[4];
  *(_DWORD *)(a2 + 52) = v13 | 0x60;
  *(unsigned char *)(a2 + 44) = v14;
  return result;
}

uint64_t ProtobufUtil::toProtobuf(unsigned __int16 *a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 64);
  int v5 = a1[1];
  *(_DWORD *)(a2 + 8) = *a1;
  *(_DWORD *)(a2 + 12) = v5;
  int v6 = *((unsigned __int8 *)a1 + 4);
  int v7 = *((unsigned __int8 *)a1 + 5);
  *(_DWORD *)(a2 + 64) = v4 | 0xF;
  *(_DWORD *)(a2 + 16) = v6;
  *(_DWORD *)(a2 + 20) = v7;
  uint64_t v8 = a2 + 24;
  sub_10002D764(a2 + 24, 15);
  for (uint64_t i = 0; i != 15; ++i)
  {
    int v10 = *((unsigned __int8 *)a1 + i + 6);
    int v11 = *(_DWORD *)(a2 + 32);
    if (v11 == *(_DWORD *)(a2 + 36))
    {
      sub_10002D764(v8, v11 + 1);
      int v11 = *(_DWORD *)(a2 + 32);
    }
    uint64_t v12 = *(void *)(a2 + 24);
    *(_DWORD *)(a2 + 32) = v11 + 1;
    *(_DWORD *)(v12 + 4 * v11) = v10;
  }
  uint64_t result = sub_10002D764(a2 + 40, 15);
  for (uint64_t j = 0; j != 15; ++j)
  {
    int v15 = *((unsigned __int8 *)a1 + j + 21);
    int v16 = *(_DWORD *)(a2 + 48);
    if (v16 == *(_DWORD *)(a2 + 52))
    {
      uint64_t result = sub_10002D764(a2 + 40, v16 + 1);
      int v16 = *(_DWORD *)(a2 + 48);
    }
    uint64_t v17 = *(void *)(a2 + 40);
    *(_DWORD *)(a2 + 48) = v16 + 1;
    *(_DWORD *)(v17 + 4 * v16) = v15;
  }
  int v18 = *((unsigned __int8 *)a1 + 36);
  *(_DWORD *)(a2 + 64) |= 0x40u;
  *(_DWORD *)(a2 + 56) = v18;
  return result;
}

uint32x4_t ProtobufUtil::toProtobuf(unsigned __int8 *a1, uint64_t a2)
{
  int v4 = *a1;
  int v5 = a1[1];
  *(_DWORD *)(a2 + 72) |= 3u;
  *(_DWORD *)(a2 + 8) = v4;
  *(_DWORD *)(a2 + 12) = v5;
  uint64_t v6 = a2 + 16;
  sub_10002D764(a2 + 16, 8);
  for (uint64_t i = 0; i != 32; i += 4)
  {
    unsigned int v8 = *(_DWORD *)&a1[i + 4];
    if (v8 < 6) {
      unsigned int v9 = v8 + 1;
    }
    else {
      unsigned int v9 = 0;
    }
    int v10 = *(_DWORD *)(a2 + 24);
    if (v10 == *(_DWORD *)(a2 + 28))
    {
      sub_10002D764(v6, v10 + 1);
      int v10 = *(_DWORD *)(a2 + 24);
    }
    uint64_t v11 = *(void *)(a2 + 16);
    *(_DWORD *)(a2 + 24) = v10 + 1;
    *(_DWORD *)(v11 + 4 * v10) = v9;
  }
  int v12 = *(_DWORD *)(a2 + 72);
  int v13 = a1[40];
  *(_DWORD *)(a2 + 32) = *((_DWORD *)a1 + 9);
  *(_DWORD *)(a2 + 36) = v13;
  int v14 = a1[41];
  *(_DWORD *)(a2 + 72) = v12 | 0x38;
  *(_DWORD *)(a2 + 64) = v14;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a2 + 40), 8);
  uint64_t v15 = 0;
  int v16 = a1;
  do
  {
    int v17 = *(_DWORD *)(a2 + 52);
    uint64_t v18 = *(int *)(a2 + 48);
    if ((int)v18 >= v17)
    {
      if (v17 == *(_DWORD *)(a2 + 56))
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a2 + 40), v17 + 1);
        int v17 = *(_DWORD *)(a2 + 52);
      }
      *(_DWORD *)(a2 + 52) = v17 + 1;
      operator new();
    }
    uint64_t v19 = *(void *)(a2 + 40);
    *(_DWORD *)(a2 + 48) = v18 + 1;
    uint64_t v20 = *(void *)(v19 + 8 * v18);
    unsigned int v21 = *(_DWORD *)&a1[224 * v15 + 44];
    if (v21 < 6) {
      unsigned int v22 = v21 + 1;
    }
    else {
      unsigned int v22 = 0;
    }
    int v23 = *(_DWORD *)(v20 + 72);
    int v24 = &a1[224 * v15];
    int v25 = *((unsigned __int16 *)v24 + 24);
    *(_DWORD *)(v20 + 8) = v22;
    *(_DWORD *)(v20 + 12) = v25;
    int v26 = v24[50];
    *(_DWORD *)(v20 + 72) = v23 | 7;
    *(_DWORD *)(v20 + 64) = v26;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v20 + 16), 15);
    for (uint64_t j = 0; j != 120; j += 8)
    {
      int v28 = *(_DWORD *)(v20 + 28);
      uint64_t v29 = *(int *)(v20 + 24);
      if ((int)v29 >= v28)
      {
        if (v28 == *(_DWORD *)(v20 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v20 + 16), v28 + 1);
          int v28 = *(_DWORD *)(v20 + 28);
        }
        *(_DWORD *)(v20 + 28) = v28 + 1;
        operator new();
      }
      uint64_t v30 = *(void *)(v20 + 16);
      *(_DWORD *)(v20 + 24) = v29 + 1;
      int v31 = *(_DWORD **)(v30 + 8 * v29);
      int v32 = v16[j + 52];
      int v33 = v31[5];
      v31[5] = v33 | 1;
      int v34 = *(_DWORD *)&v16[j + 56];
      v31[5] = v33 | 3;
      v31[2] = v32;
      v31[3] = v34;
    }
    *(_DWORD *)(v20 + 72) |= 0x10u;
    uint64_t v35 = *(void *)(v20 + 40);
    if (!v35) {
      operator new();
    }
    int v36 = *(_DWORD *)(v35 + 48);
    int v37 = &a1[224 * v15];
    int v38 = *((unsigned __int16 *)v37 + 88);
    *(_DWORD *)(v35 + 8) = *((_DWORD *)v37 + 43);
    *(_DWORD *)(v35 + 12) = v38;
    int v39 = v37[179];
    *(_DWORD *)(v35 + 16) = v37[178];
    *(_DWORD *)(v35 + 20) = v39;
    int v40 = v37[180];
    *(_DWORD *)(v35 + 48) = v36 | 0x1F;
    *(_DWORD *)(v35 + 40) = v40;
    sub_10002D764(v35 + 24, 15);
    uint64_t v41 = 181;
    do
    {
      int v42 = v16[v41];
      int v43 = *(_DWORD *)(v35 + 32);
      if (v43 == *(_DWORD *)(v35 + 36))
      {
        sub_10002D764(v35 + 24, v43 + 1);
        int v43 = *(_DWORD *)(v35 + 32);
      }
      ++v41;
      uint64_t v44 = *(void *)(v35 + 24);
      *(_DWORD *)(v35 + 32) = v43 + 1;
      *(_DWORD *)(v44 + 4 * v43) = v42;
    }
    while (v41 != 196);
    *(_DWORD *)(v20 + 72) |= 0x20u;
    int v45 = *(_DWORD **)(v20 + 48);
    if (!v45) {
      operator new();
    }
    int v46 = v45[13];
    uint64_t v47 = &a1[224 * v15];
    int v48 = v47[198];
    v45[2] = *((unsigned __int16 *)v47 + 98);
    v45[3] = v48;
    int v49 = v47[199];
    LODWORD(v47) = v47[200];
    v45[13] = v46 | 0xF;
    v45[4] = v49;
    v45[5] = v47;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v45 + 6), 15);
    for (uint64_t k = 0; k != 60; k += 4)
    {
      int v52 = v45[9];
      uint64_t v53 = (int)v45[8];
      if ((int)v53 >= v52)
      {
        if (v52 == v45[10])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v45 + 6), v52 + 1);
          int v52 = v45[9];
        }
        v45[9] = v52 + 1;
        operator new();
      }
      uint64_t v54 = *((void *)v45 + 3);
      v45[8] = v53 + 1;
      int v55 = *(_DWORD **)(v54 + 8 * v53);
      int v56 = v16[k + 202];
      int v57 = *(unsigned __int16 *)&v16[k + 204];
      v55[5] |= 3u;
      v55[2] = v56;
      v55[3] = v57;
    }
    *(_DWORD *)(v20 + 72) |= 0x40u;
    uint64_t v58 = *(void *)(v20 + 56);
    if (!v58) {
      operator new();
    }
    *(_DWORD *)(v58 + 28) |= 0xFu;
    v50.i32[0] = *(_DWORD *)&a1[224 * v15 + 262];
    uint32x4_t result = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(v50));
    *(uint32x4_t *)(v58 + 8) = result;
    ++v15;
    v16 += 224;
  }
  while (v15 != 8);
  return result;
}

double ProtobufUtil::toProtobuf(int32x2_t *a1, uint64_t a2)
{
  int v4 = ProtobufUtil::toProtobuf(a1->i32[0]);
  int v5 = *(_DWORD *)(a2 + 44);
  int v6 = a1->u8[4];
  *(_DWORD *)(a2 + 8) = v4;
  *(_DWORD *)(a2 + 12) = v6;
  *(_DWORD *)(a2 + 44) = v5 | 7;
  int v7 = *(int8x8_t **)(a2 + 16);
  if (!v7) {
    operator new();
  }
  ProtobufUtil::toProtobuf(a1 + 1, v7);
  *(_DWORD *)(a2 + 44) |= 8u;
  uint64_t v8 = *(void *)(a2 + 24);
  if (!v8) {
    operator new();
  }
  ProtobufUtil::toProtobuf((unsigned __int16 *)&a1[2] + 2, v8);
  *(_DWORD *)(a2 + 44) |= 0x10u;
  uint64_t v9 = *(void *)(a2 + 32);
  if (!v9) {
    operator new();
  }

  *(void *)&double result = ProtobufUtil::toProtobuf((unsigned __int8 *)&a1[7] + 4, v9).u64[0];
  return result;
}

uint64_t ProtobufUtil::fromProtobuf(int a1)
{
  if ((a1 - 1) < 5) {
    return (a1 - 2);
  }
  int v3 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    v4[0] = 67109120;
    v4[1] = a1;
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Invalid value %d for proto::gnss::Emergency::SessionProtocol", (uint8_t *)v4, 8u);
  }
  return 0xFFFFFFFFLL;
}

{
  NSObject *v3;
  _DWORD v4[2];

  if ((a1 - 1) < 6) {
    return (a1 - 2);
  }
  int v3 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    v4[0] = 67109120;
    v4[1] = a1;
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Invalid value %d for proto::gnss::Emergency::PosProtocol", (uint8_t *)v4, 8u);
  }
  return 0xFFFFFFFFLL;
}

{
  uint64_t result;
  NSObject *v3;
  _DWORD v4[2];

  if ((a1 - 1) < 5) {
    return dword_1000E7954[a1 - 1];
  }
  int v3 = qword_100114840;
  double result = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR);
  if (result)
  {
    v4[0] = 67109120;
    v4[1] = a1;
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Invalid value %d for proto::gnss::Emergency::ClsNetworkType", (uint8_t *)v4, 8u);
    return 0;
  }
  return result;
}

{
  uint64_t result;
  NSObject *v3;
  _DWORD v4[2];

  double result = (a1 - 1);
  if (result >= 5)
  {
    int v3 = qword_100114840;
    double result = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR);
    if (result)
    {
      v4[0] = 67109120;
      v4[1] = a1;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Invalid value %d for proto::gnss::Emergency::WlanMeasurementResult", (uint8_t *)v4, 8u);
      return 0;
    }
  }
  return result;
}

{
  uint64_t result;
  NSObject *v3;
  _DWORD v4[2];

  double result = (a1 - 1);
  if (result >= 3)
  {
    int v3 = qword_100114840;
    double result = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR);
    if (result)
    {
      v4[0] = 67109120;
      v4[1] = a1;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Invalid value %d for proto::gnss::PositionAssistType", (uint8_t *)v4, 8u);
      return 0;
    }
  }
  return result;
}

{
  uint64_t result;
  NSObject *v3;
  _DWORD v4[2];

  double result = (a1 - 1);
  if (result >= 6)
  {
    int v3 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      v4[0] = 67109120;
      v4[1] = a1;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Invalid value %d for proto::gnss::CntInStatus", (uint8_t *)v4, 8u);
    }
    return 2;
  }
  return result;
}

std::string *ProtobufUtil::fromProtobuf(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = HIDWORD(result[1].__r_.__value_.__r.__words[0]);
  if (v4)
  {
    *(_WORD *)a2 = result->__r_.__value_.__r.__words[2];
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  double result = std::string::operator=((std::string *)(a2 + 8), (const std::string *)result->__r_.__value_.__l.__size_);
  int v4 = HIDWORD(v3[1].__r_.__value_.__r.__words[0]);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  *(unsigned char *)(a2 + 32) = v3->__r_.__value_.__s.__data_[20];
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  *(unsigned char *)(a2 + 33) = v3->__r_.__value_.__s.__data_[21];
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      return result;
    }
    goto LABEL_7;
  }
LABEL_13:
  *(unsigned char *)(a2 + 34) = v3->__r_.__value_.__s.__data_[22];
  if ((v4 & 0x20) == 0) {
    return result;
  }
LABEL_7:
  *(unsigned char *)(a2 + 35) = *((unsigned char *)&v3->__r_.__value_.__s + 23);
  return result;
}

{
  std::string *v3;
  int v4;
  std::string::pointer data;
  int v6;

  int v3 = result;
  int v4 = HIDWORD(result[2].__r_.__value_.__r.__words[0]);
  if (v4)
  {
    *(_WORD *)a2 = result[1].__r_.__value_.__r.__words[1];
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  double result = std::string::operator=((std::string *)(a2 + 8), (const std::string *)result->__r_.__value_.__l.__size_);
  int v4 = HIDWORD(v3[2].__r_.__value_.__r.__words[0]);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  *(unsigned char *)(a2 + 32) = v3[1].__r_.__value_.__s.__data_[12];
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  double result = std::string::operator=((std::string *)(a2 + 40), (const std::string *)v3->__r_.__value_.__r.__words[2]);
  int v4 = HIDWORD(v3[2].__r_.__value_.__r.__words[0]);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  *(unsigned char *)(a2 + 64) = v3[1].__r_.__value_.__s.__data_[13];
  if ((v4 & 0x80) == 0)
  {
LABEL_7:
    if ((v4 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  *(unsigned char *)(a2 + 65) = v3[1].__r_.__value_.__s.__data_[14];
  if ((v4 & 0x100) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_16:
  *(unsigned char *)(a2 + 66) = v3[1].__r_.__value_.__s.__data_[15];
  if ((v4 & 0x10) == 0) {
    return result;
  }
LABEL_17:
  data = v3[1].__r_.__value_.__l.__data_;
  if (!data) {
    data = *(std::string::pointer *)(proto::gnss::Emergency::SuplContext::default_instance_ + 24);
  }
  int v6 = *((_DWORD *)data + 6);
  if (v6)
  {
    *(unsigned char *)(a2 + 72) = data[16];
    if ((v6 & 2) == 0)
    {
LABEL_21:
      if ((v6 & 4) == 0) {
        return result;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_21;
  }
  *(unsigned char *)(a2 + 73) = data[17];
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_22:
  *(void *)(a2 + 80) = *((void *)data + 1);
  return result;
}

{
  std::string *v3;
  int v4;
  std::string::size_type v5;
  std::string *data;
  uint64_t vars8;

  int v3 = result;
  int v4 = result[1].__r_.__value_.__r.__words[2];
  if (v4)
  {
    *(unsigned char *)a2 = result[1].__r_.__value_.__s.__data_[8];
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_7;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  double result = std::string::operator=((std::string *)(a2 + 8), (const std::string *)result->__r_.__value_.__l.__size_);
  int v4 = v3[1].__r_.__value_.__r.__words[2];
  if ((v4 & 4) == 0) {
    goto LABEL_11;
  }
LABEL_7:
  int v5 = v3->__r_.__value_.__r.__words[2];
  if (!v5) {
    int v5 = *(void *)(proto::gnss::Emergency::EmergConfig::default_instance_ + 16);
  }
  if (*(unsigned char *)(v5 + 16)) {
    *(unsigned char *)(a2 + 32) = *(unsigned char *)(v5 + 8);
  }
LABEL_11:
  if ((v4 & 8) != 0)
  {
    data = (std::string *)v3[1].__r_.__value_.__l.__data_;
    if (!data) {
      data = *(std::string **)(proto::gnss::Emergency::EmergConfig::default_instance_ + 24);
    }
    return ProtobufUtil::fromProtobuf(data, a2 + 40);
  }
  return result;
}

void ProtobufUtil::fromProtobuf(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 88))
  {
    int v4 = *(_DWORD *)(a1 + 80);
    int v5 = v4 - 1;
    if ((v4 - 1) >= 6)
    {
      int v6 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)audit_token_t buf = 67109120;
        int v75 = v4;
        _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Invalid value %d for proto::gnss::Emergency::CellType", buf, 8u);
      }
      int v5 = 0;
    }
    *(_DWORD *)a2 = v5;
  }
  unint64_t v7 = *(int *)(a1 + 16);
  uint64_t v9 = *(unsigned char **)(a2 + 8);
  uint64_t v8 = *(void **)(a2 + 16);
  unint64_t v10 = 0x6DB6DB6DB6DB6DB7 * (((char *)v8 - v9) >> 2);
  unint64_t v11 = v7 - v10;
  if (v7 <= v10)
  {
    uint64_t v18 = *(char **)(a2 + 16);
    if (v7 >= v10) {
      goto LABEL_28;
    }
    uint64_t v18 = &v9[28 * (int)v7];
    goto LABEL_27;
  }
  uint64_t v12 = *(void *)(a2 + 24);
  if (0x6DB6DB6DB6DB6DB7 * ((v12 - (uint64_t)v8) >> 2) >= v11)
  {
    uint64_t v18 = (char *)v8 + 28 * v11;
    do
    {
      *uint64_t v8 = 0xFFFFFFFF0000;
      v8[1] = -1;
      *((_DWORD *)v8 + 4) = 1667497983;
      *(void *)((char *)v8 + 20) = 0xFFFFFFFF7FFFFFFFLL;
      uint64_t v8 = (void *)((char *)v8 + 28);
    }
    while (v8 != (void *)v18);
LABEL_27:
    *(void *)(a2 + 16) = v18;
    goto LABEL_28;
  }
  if ((v7 & 0x80000000) != 0) {
    sub_100007204();
  }
  unint64_t v13 = 0x6DB6DB6DB6DB6DB7 * ((v12 - (uint64_t)v9) >> 2);
  unint64_t v14 = 0xDB6DB6DB6DB6DB6ELL * ((v12 - (uint64_t)v9) >> 2);
  if (v14 <= v7) {
    unint64_t v14 = *(int *)(a1 + 16);
  }
  if (v13 >= 0x492492492492492) {
    unint64_t v15 = 0x924924924924924;
  }
  else {
    unint64_t v15 = v14;
  }
  if (v15 > 0x924924924924924) {
    sub_100007254();
  }
  int v16 = (char *)operator new(28 * v15);
  int v17 = &v16[4 * (((char *)v8 - v9) >> 2)];
  uint64_t v18 = &v16[28 * (int)v7];
  uint64_t v19 = v17;
  do
  {
    *(void *)uint64_t v19 = 0xFFFFFFFF0000;
    *((void *)v19 + 1) = -1;
    *((_DWORD *)v19 + 4) = 1667497983;
    *(void *)(v19 + 20) = 0xFFFFFFFF7FFFFFFFLL;
    v19 += 28;
  }
  while (v19 != v18);
  if (v8 != (void *)v9)
  {
    do
    {
      long long v20 = *(_OWORD *)((char *)v8 - 28);
      *((_OWORD *)v17 - 1) = *((_OWORD *)v8 - 1);
      *(_OWORD *)(v17 - 28) = v20;
      v17 -= 28;
      uint64_t v8 = (void *)((char *)v8 - 28);
    }
    while (v8 != (void *)v9);
    uint64_t v8 = v9;
  }
  *(void *)(a2 + 8) = v17;
  *(void *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = &v16[28 * v15];
  if (v8)
  {
    operator delete(v8);
    uint64_t v18 = *(char **)(a2 + 16);
  }
LABEL_28:
  int v21 = -1227133513 * ((unint64_t)&v18[-*(void *)(a2 + 8)] >> 2);
  if (*(_DWORD *)(a1 + 16) < v21) {
    int v21 = *(_DWORD *)(a1 + 16);
  }
  if (v21 >= 1)
  {
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 28 * v21;
    do
    {
      if (v23 >= *(int *)(a1 + 16))
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)buf);
      }
      uint64_t v25 = *(void *)(*(void *)(a1 + 8) + 8 * v23);
      uint64_t v26 = *(void *)(a2 + 8);
      int v27 = *(_DWORD *)(v25 + 52);
      if (v27)
      {
        *(unsigned char *)(v26 + v22) = *(unsigned char *)(v25 + 8);
        if ((v27 & 2) == 0)
        {
LABEL_36:
          if ((v27 & 4) == 0) {
            goto LABEL_37;
          }
          goto LABEL_49;
        }
      }
      else if ((v27 & 2) == 0)
      {
        goto LABEL_36;
      }
      *(_WORD *)(v26 + v22 + 2) = *(_DWORD *)(v25 + 12);
      if ((v27 & 4) == 0)
      {
LABEL_37:
        if ((v27 & 8) == 0) {
          goto LABEL_38;
        }
        goto LABEL_50;
      }
LABEL_49:
      *(_WORD *)(v26 + v22 + 4) = *(_DWORD *)(v25 + 16);
      if ((v27 & 8) == 0)
      {
LABEL_38:
        if ((v27 & 0x10) == 0) {
          goto LABEL_39;
        }
        goto LABEL_51;
      }
LABEL_50:
      *(_DWORD *)(v26 + v22 + 8) = *(_DWORD *)(v25 + 20);
      int v27 = *(_DWORD *)(v25 + 52);
      if ((v27 & 0x10) == 0)
      {
LABEL_39:
        if ((v27 & 0x20) == 0) {
          goto LABEL_40;
        }
        goto LABEL_52;
      }
LABEL_51:
      *(_DWORD *)(v26 + v22 + 12) = *(_DWORD *)(v25 + 24);
      int v27 = *(_DWORD *)(v25 + 52);
      if ((v27 & 0x20) == 0)
      {
LABEL_40:
        if ((v27 & 0x40) == 0) {
          goto LABEL_41;
        }
        goto LABEL_53;
      }
LABEL_52:
      *(_WORD *)(v26 + v22 + 16) = *(_DWORD *)(v25 + 28);
      if ((v27 & 0x40) == 0)
      {
LABEL_41:
        if ((v27 & 0x80) == 0) {
          goto LABEL_42;
        }
        goto LABEL_54;
      }
LABEL_53:
      *(unsigned char *)(v26 + v22 + 18) = *(_DWORD *)(v25 + 32);
      if ((v27 & 0x80) == 0)
      {
LABEL_42:
        if ((v27 & 0x100) != 0) {
          goto LABEL_55;
        }
        goto LABEL_43;
      }
LABEL_54:
      *(unsigned char *)(v26 + v22 + 19) = *(_DWORD *)(v25 + 36);
      if ((v27 & 0x100) != 0)
      {
LABEL_55:
        *(_DWORD *)(v26 + v22 + 20) = *(_DWORD *)(v25 + 40);
        if ((*(_DWORD *)(v25 + 52) & 0x200) == 0) {
          goto LABEL_45;
        }
LABEL_44:
        *(_DWORD *)(v26 + v22 + 24) = *(_DWORD *)(v25 + 44);
        goto LABEL_45;
      }
LABEL_43:
      if ((v27 & 0x200) != 0) {
        goto LABEL_44;
      }
LABEL_45:
      ++v23;
      v22 += 28;
    }
    while (v24 != v22);
  }
  unint64_t v28 = *(int *)(a1 + 40);
  uint64_t v30 = *(char **)(a2 + 32);
  uint64_t v29 = *(char **)(a2 + 40);
  unint64_t v31 = (v29 - v30) >> 4;
  if (v28 <= v31)
  {
    int v38 = *(char **)(a2 + 40);
    if (v28 >= v31) {
      goto LABEL_78;
    }
    int v38 = &v30[16 * v28];
    goto LABEL_77;
  }
  uint64_t v32 = *(void *)(a2 + 48);
  if (v28 - v31 <= (v32 - (uint64_t)v29) >> 4)
  {
    int v38 = &v29[16 * (v28 - v31)];
    do
    {
      *(void *)uint64_t v29 = 0xFFFFFFFF0000;
      *((void *)v29 + 1) = -1;
      v29 += 16;
    }
    while (v29 != v38);
LABEL_77:
    *(void *)(a2 + 40) = v38;
    goto LABEL_78;
  }
  if ((v28 & 0x80000000) != 0) {
    sub_100007204();
  }
  uint64_t v33 = v32 - (void)v30;
  uint64_t v34 = v33 >> 3;
  if (v33 >> 3 <= v28) {
    uint64_t v34 = *(int *)(a1 + 40);
  }
  if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFF0) {
    unint64_t v35 = 0xFFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v35 = v34;
  }
  if (v35 >> 60) {
    sub_100007254();
  }
  int v36 = (char *)operator new(16 * v35);
  int v37 = &v36[16 * v31];
  int v38 = &v36[16 * v28];
  int v39 = v37;
  do
  {
    *(void *)int v39 = 0xFFFFFFFF0000;
    *((void *)v39 + 1) = -1;
    v39 += 16;
  }
  while (v39 != v38);
  if (v29 != v30)
  {
    do
    {
      *((_OWORD *)v37 - 1) = *((_OWORD *)v29 - 1);
      v37 -= 16;
      v29 -= 16;
    }
    while (v29 != v30);
    uint64_t v29 = v30;
  }
  *(void *)(a2 + 32) = v37;
  *(void *)(a2 + 40) = v38;
  *(void *)(a2 + 48) = &v36[16 * v35];
  if (v29)
  {
    operator delete(v29);
    int v38 = *(char **)(a2 + 40);
  }
LABEL_78:
  unint64_t v40 = (unint64_t)&v38[-*(void *)(a2 + 32)] >> 4;
  if (*(_DWORD *)(a1 + 40) < (int)v40) {
    LODWORD(v40) = *(_DWORD *)(a1 + 40);
  }
  if ((int)v40 >= 1)
  {
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    uint64_t v43 = 16 * v40;
    do
    {
      if (v42 >= *(int *)(a1 + 40))
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)buf);
      }
      uint64_t v44 = *(void *)(*(void *)(a1 + 32) + 8 * v42);
      uint64_t v45 = *(void *)(a2 + 32);
      int v46 = *(_DWORD *)(v44 + 32);
      if (v46)
      {
        *(unsigned char *)(v45 + v41) = *(unsigned char *)(v44 + 8);
        if ((v46 & 2) == 0)
        {
LABEL_86:
          if ((v46 & 4) == 0) {
            goto LABEL_87;
          }
          goto LABEL_94;
        }
      }
      else if ((v46 & 2) == 0)
      {
        goto LABEL_86;
      }
      *(_WORD *)(v45 + v41 + 2) = *(_DWORD *)(v44 + 12);
      if ((v46 & 4) == 0)
      {
LABEL_87:
        if ((v46 & 8) != 0) {
          goto LABEL_95;
        }
        goto LABEL_88;
      }
LABEL_94:
      *(_WORD *)(v45 + v41 + 4) = *(_DWORD *)(v44 + 16);
      if ((v46 & 8) != 0)
      {
LABEL_95:
        *(_DWORD *)(v45 + v41 + 8) = *(_DWORD *)(v44 + 20);
        if ((*(_DWORD *)(v44 + 32) & 0x10) == 0) {
          goto LABEL_90;
        }
LABEL_89:
        *(_DWORD *)(v45 + v41 + 12) = *(_DWORD *)(v44 + 24);
        goto LABEL_90;
      }
LABEL_88:
      if ((v46 & 0x10) != 0) {
        goto LABEL_89;
      }
LABEL_90:
      ++v42;
      v41 += 16;
    }
    while (v43 != v41);
  }
  unint64_t v47 = *(int *)(a1 + 64);
  int v49 = *(char **)(a2 + 56);
  int v48 = *(char **)(a2 + 64);
  unint64_t v50 = (v48 - v49) >> 5;
  if (v47 <= v50)
  {
    int v57 = *(char **)(a2 + 64);
    if (v47 >= v50) {
      goto LABEL_118;
    }
    int v57 = &v49[32 * v47];
    goto LABEL_117;
  }
  uint64_t v51 = *(void *)(a2 + 72);
  if (v47 - v50 <= (v51 - (uint64_t)v48) >> 5)
  {
    int v57 = &v48[32 * (v47 - v50)];
    do
    {
      *(void *)int v48 = 0;
      *((_DWORD *)v48 + 4) = 0;
      *(_DWORD *)(v48 + 2) = -1;
      *((void *)v48 + 1) = -1;
      *((_WORD *)v48 + 8) = -1;
      *(void *)(v48 + 20) = 0x7FFFFFFFLL;
      *((_DWORD *)v48 + 7) = -1;
      v48 += 32;
    }
    while (v48 != v57);
LABEL_117:
    *(void *)(a2 + 64) = v57;
    goto LABEL_118;
  }
  if ((v47 & 0x80000000) != 0) {
    sub_100007204();
  }
  uint64_t v52 = v51 - (void)v49;
  uint64_t v53 = v52 >> 4;
  if (v52 >> 4 <= v47) {
    uint64_t v53 = *(int *)(a1 + 64);
  }
  if ((unint64_t)v52 >= 0x7FFFFFFFFFFFFFE0) {
    unint64_t v54 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v54 = v53;
  }
  if (v54 >> 59) {
    sub_100007254();
  }
  int v55 = (char *)operator new(32 * v54);
  int v56 = &v55[32 * v50];
  int v57 = &v55[32 * v47];
  uint64_t v58 = v56;
  do
  {
    *(void *)uint64_t v58 = 0;
    *((_DWORD *)v58 + 4) = 0;
    *(_DWORD *)(v58 + 2) = -1;
    *((void *)v58 + 1) = -1;
    *((_WORD *)v58 + 8) = -1;
    *(void *)(v58 + 20) = 0x7FFFFFFFLL;
    *((_DWORD *)v58 + 7) = -1;
    v58 += 32;
  }
  while (v58 != v57);
  if (v48 != v49)
  {
    do
    {
      long long v59 = *((_OWORD *)v48 - 1);
      *((_OWORD *)v56 - 2) = *((_OWORD *)v48 - 2);
      *((_OWORD *)v56 - 1) = v59;
      v56 -= 32;
      v48 -= 32;
    }
    while (v48 != v49);
    int v48 = v49;
  }
  *(void *)(a2 + 56) = v56;
  *(void *)(a2 + 64) = v57;
  *(void *)(a2 + 72) = &v55[32 * v54];
  if (v48)
  {
    operator delete(v48);
    int v57 = *(char **)(a2 + 64);
  }
LABEL_118:
  unint64_t v60 = (unint64_t)&v57[-*(void *)(a2 + 56)] >> 5;
  if (*(_DWORD *)(a1 + 64) < (int)v60) {
    LODWORD(v60) = *(_DWORD *)(a1 + 64);
  }
  if ((int)v60 >= 1)
  {
    uint64_t v61 = 0;
    uint64_t v62 = 0;
    uint64_t v63 = 32 * v60;
    int v64 = "/AppleInternal/Library/BuildRoots/cb09429a-9ee5-11ef-b491-ce2c30f2a3e7/Applications/Xcode.app/Contents/Develop"
          "er/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.2.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h";
    uint64_t v73 = v63;
    do
    {
      if (v62 >= *(int *)(a1 + 64))
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)buf);
      }
      uint64_t v65 = *(void *)(*(void *)(a1 + 56) + 8 * v62);
      uint64_t v66 = *(void *)(a2 + 56);
      int v67 = *(_DWORD *)(v65 + 44);
      if (v67)
      {
        *(unsigned char *)(v66 + v61) = *(unsigned char *)(v65 + 8);
        if ((v67 & 2) == 0)
        {
LABEL_126:
          if ((v67 & 4) == 0) {
            goto LABEL_127;
          }
          goto LABEL_137;
        }
      }
      else if ((v67 & 2) == 0)
      {
        goto LABEL_126;
      }
      *(_WORD *)(v66 + v61 + 2) = *(_DWORD *)(v65 + 12);
      if ((v67 & 4) == 0)
      {
LABEL_127:
        if ((v67 & 8) == 0) {
          goto LABEL_128;
        }
        goto LABEL_138;
      }
LABEL_137:
      *(_WORD *)(v66 + v61 + 4) = *(_DWORD *)(v65 + 16);
      if ((v67 & 8) == 0)
      {
LABEL_128:
        if ((v67 & 0x10) == 0) {
          goto LABEL_129;
        }
        goto LABEL_139;
      }
LABEL_138:
      *(_DWORD *)(v66 + v61 + 8) = *(_DWORD *)(v65 + 20);
      int v67 = *(_DWORD *)(v65 + 44);
      if ((v67 & 0x10) == 0)
      {
LABEL_129:
        if ((v67 & 0x20) == 0) {
          goto LABEL_130;
        }
        goto LABEL_140;
      }
LABEL_139:
      *(_DWORD *)(v66 + v61 + 12) = *(_DWORD *)(v65 + 24);
      int v67 = *(_DWORD *)(v65 + 44);
      if ((v67 & 0x20) == 0)
      {
LABEL_130:
        if ((v67 & 0x40) != 0) {
          goto LABEL_141;
        }
        goto LABEL_131;
      }
LABEL_140:
      *(_WORD *)(v66 + v61 + 16) = *(_DWORD *)(v65 + 28);
      if ((v67 & 0x40) != 0)
      {
LABEL_141:
        int v68 = *(_DWORD *)(v65 + 32);
        switch(v68)
        {
          case 1:
            int v69 = 0;
            break;
          case 3:
            int v69 = 2;
            break;
          case 2:
            int v69 = 1;
            break;
          default:
            uint64_t v70 = a2;
            int v71 = v64;
            int v72 = qword_100114840;
            if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)audit_token_t buf = 67109120;
              int v75 = v68;
              _os_log_error_impl((void *)&_mh_execute_header, v72, OS_LOG_TYPE_ERROR, "Invalid value %d for proto::gnss::Emergency::FreqMode", buf, 8u);
              int v69 = 0;
              int v67 = *(_DWORD *)(v65 + 44);
            }
            else
            {
              int v69 = 0;
            }
            int v64 = v71;
            a2 = v70;
            uint64_t v63 = v73;
            break;
        }
        *(_DWORD *)(v66 + v61 + 24) = v69;
        if ((v67 & 0x80) == 0) {
          goto LABEL_133;
        }
LABEL_132:
        *(_DWORD *)(v66 + v61 + 28) = *(_DWORD *)(v65 + 36);
        goto LABEL_133;
      }
LABEL_131:
      if ((v67 & 0x80) != 0) {
        goto LABEL_132;
      }
LABEL_133:
      ++v62;
      v61 += 32;
    }
    while (v63 != v61);
  }
}

{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  int v10;
  unsigned char v11[48];

  int v4 = *(_DWORD *)(a1 + 68);
  if (v4)
  {
    *(_DWORD *)a2 = *(_DWORD *)(a1 + 8);
    int v4 = *(_DWORD *)(a1 + 68);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_34:
      *(unsigned char *)(a2 + 6) = *(_DWORD *)(a1 + 16);
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  *(_WORD *)(a2 + 4) = *(_DWORD *)(a1 + 12);
  if ((v4 & 4) != 0) {
    goto LABEL_34;
  }
LABEL_4:
  if ((v4 & 8) != 0) {
LABEL_5:
  }
    *(unsigned char *)(a2 + 7) = *(_DWORD *)(a1 + 20);
LABEL_6:
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 1) {
    goto LABEL_26;
  }
  int v6 = 0;
  if (v5 >= 16) {
    unint64_t v7 = 16;
  }
  else {
    unint64_t v7 = v5;
  }
  uint64_t v8 = a2 + 10;
  do
  {
    if (v6 >= *(int *)(a1 + 32))
    {
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
    }
    uint64_t v9 = *(_DWORD **)(*(void *)(a1 + 24) + 8 * v6);
    unint64_t v10 = v9[8];
    if (v10)
    {
      *(_WORD *)(v8 - 2) = v9[2];
      if ((v10 & 2) == 0)
      {
LABEL_15:
        if ((v10 & 4) == 0) {
          goto LABEL_16;
        }
        goto LABEL_23;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_15;
    }
    *(unsigned char *)uint64_t v8 = v9[3];
    if ((v10 & 4) == 0)
    {
LABEL_16:
      if ((v10 & 8) == 0) {
        goto LABEL_17;
      }
      goto LABEL_24;
    }
LABEL_23:
    *(_DWORD *)(v8 + 2) = v9[4];
    unint64_t v10 = v9[8];
    if ((v10 & 8) == 0)
    {
LABEL_17:
      if ((v10 & 0x10) == 0) {
        goto LABEL_19;
      }
LABEL_18:
      *(unsigned char *)(v8 + 10) = v9[6];
      goto LABEL_19;
    }
LABEL_24:
    *(_DWORD *)(v8 + 6) = v9[5];
    if ((v9[8] & 0x10) != 0) {
      goto LABEL_18;
    }
LABEL_19:
    ++v6;
    v8 += 16;
  }
  while (v7 != v6);
  int v4 = *(_DWORD *)(a1 + 68);
LABEL_26:
  if ((v4 & 0x20) != 0)
  {
    *(unsigned char *)(a2 + 264) = *(_DWORD *)(a1 + 48);
    if ((v4 & 0x40) != 0) {
      goto LABEL_37;
    }
LABEL_28:
    if ((v4 & 0x80) == 0) {
      goto LABEL_29;
    }
LABEL_38:
    *(_DWORD *)(a2 + 272) = ProtobufUtil::fromProtobuf(*(_DWORD *)(a1 + 56));
    if ((*(_DWORD *)(a1 + 68) & 0x100) != 0) {
LABEL_30:
    }
      *(_DWORD *)(a2 + 276) = *(_DWORD *)(a1 + 60);
  }
  else
  {
    if ((v4 & 0x40) == 0) {
      goto LABEL_28;
    }
LABEL_37:
    *(_DWORD *)(a2 + 268) = ProtobufUtil::fromProtobuf(*(_DWORD *)(a1 + 52));
    int v4 = *(_DWORD *)(a1 + 68);
    if ((v4 & 0x80) != 0) {
      goto LABEL_38;
    }
LABEL_29:
    if ((v4 & 0x100) != 0) {
      goto LABEL_30;
    }
  }
}

{
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  int v14;
  int v15;
  NSObject *v16;
  int v17;
  uint8_t buf[4];
  int v19;

  int v4 = *(_DWORD *)(a1 + 68);
  if (v4)
  {
    *(_DWORD *)a2 = *(_DWORD *)(a1 + 8);
    int v4 = *(_DWORD *)(a1 + 68);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_7;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  *(unsigned char *)(a2 + 4) = *(_DWORD *)(a1 + 12);
  if ((v4 & 4) == 0) {
    goto LABEL_15;
  }
LABEL_7:
  int v5 = *(void *)(a1 + 16);
  if (!v5) {
    int v5 = *(void *)(proto::gnss::Emergency::GpsAcqAssistance::default_instance_ + 16);
  }
  int v6 = *(_DWORD *)(v5 + 24);
  if (v6)
  {
    *(_DWORD *)(a2 + 8) = ProtobufUtil::fromProtobuf(*(_DWORD *)(v5 + 16));
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    unint64_t v7 = *(void *)(v5 + 8);
    if (!v7) {
      unint64_t v7 = *(void *)(proto::gnss::Emergency::CellTimeAssistance::default_instance_ + 8);
    }
    ProtobufUtil::fromProtobuf(v7, a2 + 12);
  }
LABEL_15:
  uint64_t v8 = *(_DWORD *)(a1 + 32);
  if (v8 >= 1)
  {
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    if (v8 >= 16) {
      uint64_t v8 = 16;
    }
    unint64_t v11 = 20 * v8;
    do
    {
      if (v10 >= *(int *)(a1 + 32))
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)buf);
      }
      uint64_t v12 = *(_DWORD **)(*(void *)(a1 + 24) + 8 * v10);
      unint64_t v13 = v12[16];
      if (v13)
      {
        *(_WORD *)(a2 + v9 + 40) = v12[2];
        if ((v13 & 2) == 0)
        {
LABEL_23:
          if ((v13 & 4) == 0) {
            goto LABEL_24;
          }
          goto LABEL_37;
        }
      }
      else if ((v13 & 2) == 0)
      {
        goto LABEL_23;
      }
      *(_WORD *)(a2 + v9 + 42) = v12[3];
      if ((v13 & 4) == 0)
      {
LABEL_24:
        if ((v13 & 8) == 0) {
          goto LABEL_25;
        }
        goto LABEL_38;
      }
LABEL_37:
      *(unsigned char *)(a2 + v9 + 44) = v12[4];
      if ((v13 & 8) == 0)
      {
LABEL_25:
        if ((v13 & 0x10) == 0) {
          goto LABEL_26;
        }
        goto LABEL_39;
      }
LABEL_38:
      *(unsigned char *)(a2 + v9 + 45) = v12[5];
      if ((v13 & 0x10) == 0)
      {
LABEL_26:
        if ((v13 & 0x20) == 0) {
          goto LABEL_27;
        }
        goto LABEL_40;
      }
LABEL_39:
      *(unsigned char *)(a2 + v9 + 46) = v12[6];
      if ((v13 & 0x20) == 0)
      {
LABEL_27:
        if ((v13 & 0x40) == 0) {
          goto LABEL_28;
        }
        goto LABEL_41;
      }
LABEL_40:
      *(unsigned char *)(a2 + v9 + 47) = v12[7];
      if ((v13 & 0x40) == 0)
      {
LABEL_28:
        if ((v13 & 0x80) == 0) {
          goto LABEL_29;
        }
        goto LABEL_42;
      }
LABEL_41:
      *(unsigned char *)(a2 + v9 + 48) = v12[8];
      if ((v13 & 0x80) == 0)
      {
LABEL_29:
        if ((v13 & 0x100) == 0) {
          goto LABEL_30;
        }
        goto LABEL_43;
      }
LABEL_42:
      *(_WORD *)(a2 + v9 + 50) = v12[9];
      if ((v13 & 0x100) == 0)
      {
LABEL_30:
        if ((v13 & 0x200) == 0) {
          goto LABEL_31;
        }
        goto LABEL_44;
      }
LABEL_43:
      *(unsigned char *)(a2 + v9 + 52) = v12[10];
      if ((v13 & 0x200) == 0)
      {
LABEL_31:
        if ((v13 & 0x400) == 0) {
          goto LABEL_32;
        }
        goto LABEL_45;
      }
LABEL_44:
      *(unsigned char *)(a2 + v9 + 53) = v12[11];
      if ((v13 & 0x400) == 0)
      {
LABEL_32:
        if ((v13 & 0x800) == 0) {
          goto LABEL_33;
        }
        goto LABEL_46;
      }
LABEL_45:
      *(unsigned char *)(a2 + v9 + 54) = v12[12];
      if ((v13 & 0x800) == 0)
      {
LABEL_33:
        if ((v13 & 0x1000) != 0) {
          goto LABEL_47;
        }
        goto LABEL_53;
      }
LABEL_46:
      *(unsigned char *)(a2 + v9 + 55) = v12[13];
      if ((v13 & 0x1000) != 0)
      {
LABEL_47:
        unint64_t v14 = v12[14];
        if ((v14 - 1) >= 6)
        {
          int v16 = qword_100114840;
          if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)audit_token_t buf = 67109120;
            uint64_t v19 = v14;
            _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "Invalid value %d for proto::gnss::Emergency::GpsDopplerUncMpsExt", buf, 8u);
          }
          unint64_t v15 = 255;
        }
        else
        {
          unint64_t v15 = dword_1000E7968[v14 - 1];
        }
        *(_DWORD *)(a2 + v9 + 56) = v15;
      }
LABEL_53:
      ++v10;
      v9 += 20;
    }
    while (v11 != v9);
  }
  int v17 = *(_DWORD *)(a1 + 68);
  if ((v17 & 0x10) != 0)
  {
    *(unsigned char *)(a2 + 360) = *(_DWORD *)(a1 + 48);
    if ((v17 & 0x20) == 0)
    {
LABEL_56:
      if ((v17 & 0x40) == 0) {
        goto LABEL_57;
      }
      goto LABEL_62;
    }
  }
  else if ((v17 & 0x20) == 0)
  {
    goto LABEL_56;
  }
  *(_DWORD *)(a2 + 364) = ProtobufUtil::fromProtobuf(*(_DWORD *)(a1 + 52));
  int v17 = *(_DWORD *)(a1 + 68);
  if ((v17 & 0x40) == 0)
  {
LABEL_57:
    if ((v17 & 0x80) == 0) {
      return;
    }
    goto LABEL_58;
  }
LABEL_62:
  *(_DWORD *)(a2 + 368) = ProtobufUtil::fromProtobuf(*(_DWORD *)(a1 + 56));
  if ((*(_DWORD *)(a1 + 68) & 0x80) == 0) {
    return;
  }
LABEL_58:
  *(_DWORD *)(a2 + 372) = *(_DWORD *)(a1 + 60);
}

{
  int v4;
  int v5;
  int v6;
  NSObject *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  _DWORD *v23;
  int v24;
  uint8_t buf[4];
  int v26;

  int v4 = *(_DWORD *)(a1 + 56);
  if (v4)
  {
    *(unsigned char *)a2 = *(unsigned char *)(a1 + 8);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a1 + 12);
  int v4 = *(_DWORD *)(a1 + 56);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_11:
  int v5 = *(_DWORD *)(a1 + 48);
  int v6 = -1;
  switch(v5)
  {
    case 0:
      unint64_t v7 = qword_100114840;
      if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
        goto LABEL_15;
      }
      *(_DWORD *)audit_token_t buf = 67109120;
      uint64_t v26 = 0;
      goto LABEL_89;
    case 1:
      break;
    case 2:
      int v6 = 0;
      break;
    case 3:
      int v6 = 1;
      break;
    case 4:
      int v6 = 2;
      break;
    default:
      unint64_t v7 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)audit_token_t buf = 67109120;
        uint64_t v26 = v5;
LABEL_89:
        _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Invalid value %d for proto::gpsd::LtlInfoType", buf, 8u);
      }
LABEL_15:
      int v6 = -1;
      break;
  }
  *(_DWORD *)(a2 + 8) = v6;
  int v4 = *(_DWORD *)(a1 + 56);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_20:
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(proto::gpsd::LtlInfo::default_instance_ + 16);
  }
  uint64_t v9 = *(_DWORD *)(v8 + 56);
  if (v9)
  {
    *(_DWORD *)(a2 + 12) = *(_DWORD *)(v8 + 8);
    uint64_t v9 = *(_DWORD *)(v8 + 56);
    if ((v9 & 2) == 0)
    {
LABEL_24:
      if ((v9 & 4) == 0) {
        goto LABEL_25;
      }
      goto LABEL_79;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_24;
  }
  *(_DWORD *)(a2 + 16) = *(_DWORD *)(v8 + 12);
  uint64_t v9 = *(_DWORD *)(v8 + 56);
  if ((v9 & 4) == 0)
  {
LABEL_25:
    if ((v9 & 8) == 0) {
      goto LABEL_26;
    }
    goto LABEL_80;
  }
LABEL_79:
  *(_DWORD *)(a2 + 20) = *(_DWORD *)(v8 + 16);
  uint64_t v9 = *(_DWORD *)(v8 + 56);
  if ((v9 & 8) == 0)
  {
LABEL_26:
    if ((v9 & 0x10) == 0) {
      goto LABEL_27;
    }
    goto LABEL_81;
  }
LABEL_80:
  *(_DWORD *)(a2 + 24) = *(_DWORD *)(v8 + 20);
  uint64_t v9 = *(_DWORD *)(v8 + 56);
  if ((v9 & 0x10) == 0)
  {
LABEL_27:
    if ((v9 & 0x20) == 0) {
      goto LABEL_28;
    }
    goto LABEL_82;
  }
LABEL_81:
  *(_DWORD *)(a2 + 28) = *(_DWORD *)(v8 + 24);
  uint64_t v9 = *(_DWORD *)(v8 + 56);
  if ((v9 & 0x20) == 0)
  {
LABEL_28:
    if ((v9 & 0x40) == 0) {
      goto LABEL_29;
    }
    goto LABEL_83;
  }
LABEL_82:
  *(_DWORD *)(a2 + 32) = *(_DWORD *)(v8 + 28);
  uint64_t v9 = *(_DWORD *)(v8 + 56);
  if ((v9 & 0x40) == 0)
  {
LABEL_29:
    if ((v9 & 0x80) == 0) {
      goto LABEL_30;
    }
    goto LABEL_84;
  }
LABEL_83:
  *(unsigned char *)(a2 + 36) = *(unsigned char *)(v8 + 32);
  if ((v9 & 0x80) == 0)
  {
LABEL_30:
    if ((v9 & 0x100) == 0) {
      goto LABEL_31;
    }
    goto LABEL_85;
  }
LABEL_84:
  *(_WORD *)(a2 + 38) = *(_DWORD *)(v8 + 36);
  if ((v9 & 0x100) == 0)
  {
LABEL_31:
    if ((v9 & 0x200) == 0) {
      goto LABEL_32;
    }
    goto LABEL_86;
  }
LABEL_85:
  *(_DWORD *)(a2 + 40) = *(_DWORD *)(v8 + 40);
  uint64_t v9 = *(_DWORD *)(v8 + 56);
  if ((v9 & 0x200) == 0)
  {
LABEL_32:
    if ((v9 & 0x400) == 0) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
LABEL_86:
  *(_DWORD *)(a2 + 44) = *(_DWORD *)(v8 + 44);
  if ((*(_DWORD *)(v8 + 56) & 0x400) != 0) {
LABEL_33:
  }
    *(_DWORD *)(a2 + 48) = *(_DWORD *)(v8 + 48);
LABEL_34:
  int v4 = *(_DWORD *)(a1 + 56);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_56;
  }
LABEL_35:
  unint64_t v10 = *(void *)(a1 + 24);
  if (!v10) {
    unint64_t v10 = *(void *)(proto::gpsd::LtlInfo::default_instance_ + 24);
  }
  unint64_t v11 = *(_DWORD *)(v10 + 52);
  if (v11)
  {
    *(_DWORD *)(a2 + 52) = *(_DWORD *)(v10 + 8);
    unint64_t v11 = *(_DWORD *)(v10 + 52);
  }
  if ((v11 & 2) != 0) {
    *(_DWORD *)(a2 + 56) = *(_DWORD *)(v10 + 12);
  }
  uint64_t v12 = *(_DWORD *)(v10 + 24);
  if (v12 >= 1)
  {
    unint64_t v13 = 0;
    if (v12 >= 135) {
      unint64_t v14 = 135;
    }
    else {
      unint64_t v14 = v12;
    }
    do
    {
      if (v13 >= *(int *)(v10 + 24))
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)buf);
      }
      *(_DWORD *)(a2 + 60 + 4 * v13) = *(_DWORD *)(*(void *)(v10 + 16) + 4 * v13);
      ++v13;
    }
    while (v14 != v13);
  }
  unint64_t v15 = *(_DWORD *)(v10 + 40);
  if (v15 >= 1)
  {
    int v16 = 0;
    if (v15 >= 135) {
      int v17 = 135;
    }
    else {
      int v17 = v15;
    }
    do
    {
      if (v16 >= *(int *)(v10 + 40))
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)buf);
      }
      *(_WORD *)(a2 + 600 + 2 * v16) = *(_DWORD *)(*(void *)(v10 + 32) + 4 * v16);
      ++v16;
    }
    while (v17 != v16);
  }
  int v4 = *(_DWORD *)(a1 + 56);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      return;
    }
    goto LABEL_70;
  }
LABEL_56:
  uint64_t v18 = *(void *)(a1 + 32);
  if (!v18) {
    uint64_t v18 = *(void *)(proto::gpsd::LtlInfo::default_instance_ + 32);
  }
  uint64_t v19 = *(_DWORD *)(v18 + 16);
  if (v19 >= 1)
  {
    long long v20 = 0;
    if (v19 >= 8) {
      int v21 = 8;
    }
    else {
      int v21 = v19;
    }
    do
    {
      if (v20 >= *(int *)(v18 + 16))
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)buf);
      }
      *(_WORD *)(a2 + 872 + 2 * v20) = *(_DWORD *)(*(void *)(v18 + 8) + 4 * v20);
      ++v20;
    }
    while (v21 != v20);
  }
  uint64_t v22 = *(_DWORD *)(v18 + 36);
  if ((v22 & 2) != 0) {
    *(unsigned char *)(a2 + 888) = *(_DWORD *)(v18 + 24);
  }
  if ((v22 & 4) != 0) {
    *(unsigned char *)(a2 + 889) = *(_DWORD *)(v18 + 28);
  }
  if ((*(_DWORD *)(a1 + 56) & 0x40) != 0)
  {
LABEL_70:
    uint64_t v23 = *(_DWORD **)(a1 + 40);
    if (!v23) {
      uint64_t v23 = *(_DWORD **)(proto::gpsd::LtlInfo::default_instance_ + 40);
    }
    uint64_t v24 = v23[5];
    if (v24) {
      *(_WORD *)(a2 + 890) = v23[2];
    }
    if ((v24 & 2) != 0) {
      *(_WORD *)(a2 + 892) = v23[3];
    }
  }
}

{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  unsigned char v9[48];

  if (*(unsigned char *)(a1 + 40)) {
    *(_DWORD *)a2 = ProtobufUtil::fromProtobuf(*(_DWORD *)(a1 + 32));
  }
  sub_10003289C(a2 + 8, *(int *)(a1 + 16));
  int v4 = *(_DWORD *)(a1 + 16);
  int v5 = -1431655765 * ((*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  if ((int)v4 >= (int)v5) {
    int v6 = v5;
  }
  else {
    int v6 = v4;
  }
  if ((int)v6 >= 1)
  {
    unint64_t v7 = 0;
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (i >= *(int *)(a1 + 16))
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
      }
      ProtobufUtil::fromProtobuf(*(_DWORD **)(*(void *)(a1 + 8) + 8 * i), (unsigned char *)(*(void *)(a2 + 8) + v7));
      v7 += 12;
    }
  }
}

void sub_100030CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void ProtobufUtil::fromProtobuf(_DWORD *a1, uint64_t a2)
{
  int v4 = a1[20];
  if (v4)
  {
    *(_WORD *)a2 = a1[2];
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_28;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v5 = a1[3];
  int v6 = -1;
  switch(v5)
  {
    case 1:
      break;
    case 2:
      int v6 = 0;
      break;
    case 3:
      int v6 = 1;
      break;
    case 4:
      int v6 = 2;
      break;
    default:
      unint64_t v7 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        v8[0] = 67109120;
        v8[1] = v5;
        _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Invalid value %d for proto::gnss::Emergency::MethodType", (uint8_t *)v8, 8u);
        int v4 = a1[20];
      }
      int v6 = -1;
      break;
  }
  *(_DWORD *)(a2 + 4) = v6;
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_29;
  }
LABEL_28:
  *(_WORD *)(a2 + 8) = a1[4];
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_30;
  }
LABEL_29:
  *(unsigned char *)(a2 + 10) = a1[5];
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_31;
  }
LABEL_30:
  *(_DWORD *)(a2 + 12) = a1[6];
  int v4 = a1[20];
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_32;
  }
LABEL_31:
  *(unsigned char *)(a2 + 16) = a1[7];
  if ((v4 & 0x40) == 0)
  {
LABEL_8:
    if ((v4 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_33;
  }
LABEL_32:
  *(unsigned char *)(a2 + 17) = a1[8];
  if ((v4 & 0x80) == 0)
  {
LABEL_9:
    if ((v4 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_34;
  }
LABEL_33:
  *(unsigned char *)(a2 + 18) = a1[9];
  if ((v4 & 0x100) == 0)
  {
LABEL_10:
    if ((v4 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }
LABEL_34:
  *(_DWORD *)(a2 + 20) = a1[10];
  int v4 = a1[20];
  if ((v4 & 0x200) == 0)
  {
LABEL_11:
    if ((v4 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }
LABEL_35:
  *(_DWORD *)(a2 + 24) = a1[11];
  int v4 = a1[20];
  if ((v4 & 0x400) == 0)
  {
LABEL_12:
    if ((v4 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_37;
  }
LABEL_36:
  *(_WORD *)(a2 + 28) = a1[12];
  if ((v4 & 0x800) == 0)
  {
LABEL_13:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_38;
  }
LABEL_37:
  *(unsigned char *)(a2 + 30) = a1[13];
  if ((v4 & 0x1000) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_39;
  }
LABEL_38:
  *(unsigned char *)(a2 + 31) = a1[14];
  if ((v4 & 0x2000) == 0)
  {
LABEL_15:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_40;
  }
LABEL_39:
  *(unsigned char *)(a2 + 32) = a1[15];
  if ((v4 & 0x4000) == 0)
  {
LABEL_16:
    if ((v4 & 0x8000) == 0) {
      return;
    }
    goto LABEL_17;
  }
LABEL_40:
  *(_DWORD *)(a2 + 36) = ProtobufUtil::fromProtobuf(a1[16]);
  if ((a1[20] & 0x8000) == 0) {
    return;
  }
LABEL_17:
  *(_DWORD *)(a2 + 40) = a1[17];
}

uint64_t ProtobufUtil::fromProtobuf(uint64_t result, uint64_t a2)
{
  if (*(unsigned char *)(result + 28))
  {
    __int32 v2 = *(_DWORD **)(result + 8);
    if (!v2) {
      __int32 v2 = *(_DWORD **)(proto::gnss::Emergency::CtsCdmaCellTime::default_instance_ + 8);
    }
    int v3 = v2[5];
    if (v3)
    {
      *(_DWORD *)a2 = v2[2];
      int v3 = v2[5];
    }
    if ((v3 & 2) != 0) {
      *(_DWORD *)(a2 + 4) = v2[3];
    }
  }
  int v4 = *(_DWORD *)(result + 28);
  if ((v4 & 2) == 0)
  {
    if ((v4 & 4) == 0) {
      return result;
    }
LABEL_12:
    *(_DWORD *)(a2 + 12) = *(_DWORD *)(result + 20);
    return result;
  }
  *(_WORD *)(a2 + 8) = *(_DWORD *)(result + 16);
  if ((v4 & 4) != 0) {
    goto LABEL_12;
  }
  return result;
}

{
  _DWORD *v2;
  int v3;
  uint64_t v4;

  if (*(unsigned char *)(result + 28))
  {
    __int32 v2 = *(_DWORD **)(result + 8);
    if (!v2) {
      __int32 v2 = *(_DWORD **)(proto::gnss::Emergency::CellTimeData::default_instance_ + 8);
    }
    int v3 = v2[6];
    if (v3)
    {
      *(_WORD *)a2 = v2[2];
      if ((v3 & 2) == 0)
      {
LABEL_6:
        if ((v3 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_7;
      }
    }
    else if ((v3 & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a2 + 4) = v2[3];
    if ((v2[6] & 4) != 0) {
LABEL_7:
    }
      *(_WORD *)(a2 + 8) = v2[4];
  }
LABEL_8:
  if ((*(unsigned char *)(result + 28) & 2) != 0)
  {
    int v4 = *(void *)(result + 16);
    if (!v4) {
      int v4 = *(void *)(proto::gnss::Emergency::CellTimeData::default_instance_ + 16);
    }
    return ProtobufUtil::fromProtobuf(v4, a2 + 12);
  }
  return result;
}

{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  __int32 v2 = *(_DWORD *)(result + 28);
  if (v2)
  {
    int v3 = *(void *)(result + 8);
    if (!v3) {
      int v3 = *(void *)(proto::gnss::Emergency::CplaneContext::default_instance_ + 8);
    }
    int v4 = *(_DWORD *)(v3 + 24);
    if (v4)
    {
      *(unsigned char *)a2 = *(unsigned char *)(v3 + 16);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_7;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_6;
    }
    *(unsigned char *)(a2 + 1) = *(unsigned char *)(v3 + 17);
    if ((v4 & 4) != 0) {
LABEL_7:
    }
      *(void *)(a2 + 8) = *(void *)(v3 + 8);
  }
LABEL_8:
  if ((v2 & 2) != 0)
  {
    int v5 = *(void *)(result + 16);
    if (!v5) {
      int v5 = *(void *)(proto::gnss::Emergency::CplaneContext::default_instance_ + 16);
    }
    return ProtobufUtil::fromProtobuf(v5, (unsigned char *)(a2 + 16));
  }
  return result;
}

void sub_100031304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

int *ProtobufUtil::fromProtobuf(int *result, uint64_t a2)
{
  int v3 = result;
  int v4 = result[17];
  if (v4)
  {
    *(unsigned char *)a2 = result[2];
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  *(unsigned char *)(a2 + 1) = result[3];
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  *(_WORD *)(a2 + 2) = result[4];
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  *(_DWORD *)(a2 + 4) = result[5];
  int v4 = result[17];
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  *(_DWORD *)(a2 + 8) = result[6];
  int v4 = result[17];
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  *(unsigned char *)(a2 + 12) = result[7];
  if ((v4 & 0x40) == 0)
  {
LABEL_8:
    if ((v4 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  *(unsigned char *)(a2 + 13) = result[8];
  if ((v4 & 0x80) == 0)
  {
LABEL_9:
    if ((v4 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  *(unsigned char *)(a2 + 14) = result[9];
  if ((v4 & 0x100) == 0)
  {
LABEL_10:
    if ((v4 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  *(unsigned char *)(a2 + 15) = result[10];
  if ((v4 & 0x200) == 0)
  {
LABEL_11:
    if ((v4 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  *(unsigned char *)(a2 + 16) = result[11];
  if ((v4 & 0x400) == 0)
  {
LABEL_12:
    if ((v4 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_28;
  }
LABEL_27:
  *(unsigned char *)(a2 + 17) = result[12];
  if ((v4 & 0x800) == 0)
  {
LABEL_13:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_29;
  }
LABEL_28:
  double result = (int *)ProtobufUtil::fromProtobuf(result[13]);
  *(_DWORD *)(a2 + 20) = result;
  int v4 = v3[17];
  if ((v4 & 0x1000) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_29:
  double result = (int *)ProtobufUtil::fromProtobuf(v3[14]);
  *(_DWORD *)(a2 + 24) = result;
  if ((v3[17] & 0x2000) == 0) {
    return result;
  }
LABEL_15:
  *(_DWORD *)(a2 + 28) = v3[15];
  return result;
}

_DWORD *ProtobufUtil::fromProtobuf(_DWORD *result, uint64_t a2)
{
  int v2 = result[37];
  if (v2)
  {
    *(_DWORD *)a2 = result[2];
    int v2 = result[37];
    if ((v2 & 2) == 0)
    {
LABEL_3:
      if ((v2 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_38;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_3;
  }
  *(_DWORD *)(a2 + 4) = result[3];
  int v2 = result[37];
  if ((v2 & 4) == 0)
  {
LABEL_4:
    if ((v2 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_39;
  }
LABEL_38:
  *(_DWORD *)(a2 + 8) = result[4];
  int v2 = result[37];
  if ((v2 & 8) == 0)
  {
LABEL_5:
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_40;
  }
LABEL_39:
  *(_DWORD *)(a2 + 12) = result[5];
  int v2 = result[37];
  if ((v2 & 0x10) == 0)
  {
LABEL_6:
    if ((v2 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_41;
  }
LABEL_40:
  *(_DWORD *)(a2 + 16) = result[6];
  int v2 = result[37];
  if ((v2 & 0x20) == 0)
  {
LABEL_7:
    if ((v2 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_42;
  }
LABEL_41:
  *(_DWORD *)(a2 + 20) = result[7];
  int v2 = result[37];
  if ((v2 & 0x40) == 0)
  {
LABEL_8:
    if ((v2 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_43;
  }
LABEL_42:
  *(_DWORD *)(a2 + 24) = result[8];
  int v2 = result[37];
  if ((v2 & 0x80) == 0)
  {
LABEL_9:
    if ((v2 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_44;
  }
LABEL_43:
  *(_DWORD *)(a2 + 28) = result[9];
  int v2 = result[37];
  if ((v2 & 0x100) == 0)
  {
LABEL_10:
    if ((v2 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_45;
  }
LABEL_44:
  *(_WORD *)(a2 + 32) = result[10];
  if ((v2 & 0x200) == 0)
  {
LABEL_11:
    if ((v2 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_46;
  }
LABEL_45:
  *(_WORD *)(a2 + 34) = result[11];
  if ((v2 & 0x400) == 0)
  {
LABEL_12:
    if ((v2 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_47;
  }
LABEL_46:
  *(_WORD *)(a2 + 36) = result[12];
  if ((v2 & 0x800) == 0)
  {
LABEL_13:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_48;
  }
LABEL_47:
  *(_WORD *)(a2 + 38) = result[13];
  if ((v2 & 0x1000) == 0)
  {
LABEL_14:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_49;
  }
LABEL_48:
  *(_WORD *)(a2 + 40) = result[14];
  if ((v2 & 0x2000) == 0)
  {
LABEL_15:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_50;
  }
LABEL_49:
  *(_WORD *)(a2 + 42) = result[15];
  if ((v2 & 0x4000) == 0)
  {
LABEL_16:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_51;
  }
LABEL_50:
  *(_WORD *)(a2 + 44) = result[16];
  if ((v2 & 0x8000) == 0)
  {
LABEL_17:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_52;
  }
LABEL_51:
  *(_WORD *)(a2 + 46) = result[17];
  if ((v2 & 0x10000) == 0)
  {
LABEL_18:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_53;
  }
LABEL_52:
  *(_WORD *)(a2 + 48) = result[18];
  if ((v2 & 0x20000) == 0)
  {
LABEL_19:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_54;
  }
LABEL_53:
  *(_WORD *)(a2 + 50) = result[19];
  if ((v2 & 0x40000) == 0)
  {
LABEL_20:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_55;
  }
LABEL_54:
  *(_WORD *)(a2 + 52) = result[20];
  if ((v2 & 0x80000) == 0)
  {
LABEL_21:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_56;
  }
LABEL_55:
  *(_WORD *)(a2 + 54) = result[21];
  if ((v2 & 0x100000) == 0)
  {
LABEL_22:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_57;
  }
LABEL_56:
  *(unsigned char *)(a2 + 56) = result[22];
  if ((v2 & 0x200000) == 0)
  {
LABEL_23:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_58;
  }
LABEL_57:
  *(unsigned char *)(a2 + 57) = result[23];
  if ((v2 & 0x400000) == 0)
  {
LABEL_24:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_59;
  }
LABEL_58:
  *(unsigned char *)(a2 + 58) = result[24];
  if ((v2 & 0x800000) == 0)
  {
LABEL_25:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_60;
  }
LABEL_59:
  *(unsigned char *)(a2 + 59) = result[25];
  if ((v2 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_61;
  }
LABEL_60:
  *(unsigned char *)(a2 + 60) = result[26];
  if ((v2 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_62;
  }
LABEL_61:
  *(unsigned char *)(a2 + 61) = result[27];
  if ((v2 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_63;
  }
LABEL_62:
  *(_DWORD *)(a2 + 64) = result[28];
  int v2 = result[37];
  if ((v2 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_64;
  }
LABEL_63:
  *(unsigned char *)(a2 + 68) = result[29];
  if ((v2 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_65;
  }
LABEL_64:
  *(_DWORD *)(a2 + 72) = result[30];
  int v2 = result[37];
  if ((v2 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_32;
    }
LABEL_66:
    *(_DWORD *)(a2 + 80) = result[32];
    if ((result[37] & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_67;
  }
LABEL_65:
  *(unsigned char *)(a2 + 76) = result[31];
  if ((v2 & 0x40000000) != 0) {
    goto LABEL_66;
  }
LABEL_32:
  if ((v2 & 0x80000000) == 0) {
    goto LABEL_33;
  }
LABEL_67:
  *(_DWORD *)(a2 + 84) = result[33];
LABEL_33:
  int v3 = result[38];
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      return result;
    }
LABEL_69:
    *(_DWORD *)(a2 + 92) = result[35];
    return result;
  }
  *(_DWORD *)(a2 + 88) = result[34];
  if ((result[38] & 2) != 0) {
    goto LABEL_69;
  }
  return result;
}

{
  _DWORD *v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned char v9[48];

  int v3 = result;
  int v4 = result[13];
  if (v4) {
    *(unsigned char *)a2 = result[8];
  }
  int v5 = result[4];
  if (v5 >= 1)
  {
    int v6 = 0;
    if (v5 >= 16) {
      unint64_t v7 = 16;
    }
    else {
      unint64_t v7 = v5;
    }
    uint64_t v8 = a2 + 4;
    do
    {
      if (v6 >= (int)v3[4])
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
      }
      double result = ProtobufUtil::fromProtobuf(*(_DWORD **)(*((void *)v3 + 1) + 8 * v6++), v8);
      v8 += 96;
    }
    while (v7 != v6);
    int v4 = v3[13];
  }
  if ((v4 & 4) != 0)
  {
    double result = (_DWORD *)ProtobufUtil::fromProtobuf(v3[9]);
    *(_DWORD *)(a2 + 1540) = result;
    int v4 = v3[13];
    if ((v4 & 8) == 0)
    {
LABEL_14:
      if ((v4 & 0x10) == 0) {
        return result;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_14;
  }
  double result = (_DWORD *)ProtobufUtil::fromProtobuf(v3[10]);
  *(_DWORD *)(a2 + 1544) = result;
  if ((v3[13] & 0x10) == 0) {
    return result;
  }
LABEL_15:
  *(_DWORD *)(a2 + 1548) = v3[11];
  return result;
}

void sub_1000317C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t ProtobufUtil::fromProtobuf(uint64_t result, unsigned char *a2)
{
  int v2 = *(_DWORD *)(result + 16);
  if (v2)
  {
    *a2 = *(unsigned char *)(result + 8);
    if ((v2 & 2) == 0)
    {
LABEL_3:
      if ((v2 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_3;
  }
  a2[1] = *(unsigned char *)(result + 9);
  if ((v2 & 4) == 0)
  {
LABEL_4:
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_9:
    a2[3] = *(unsigned char *)(result + 11);
    return result;
  }
LABEL_8:
  a2[2] = *(unsigned char *)(result + 10);
  if ((v2 & 8) != 0) {
    goto LABEL_9;
  }
  return result;
}

void sub_100031CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t ProtobufUtil::fromProtobuf(uint64_t result, _DWORD *a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 28);
  if ((v4 & 1) == 0)
  {
    if ((v4 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    double result = ProtobufUtil::fromProtobuf(*(_DWORD *)(v3 + 12));
    a2[1] = result;
    if ((*(_DWORD *)(v3 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  double result = gnss::Convert::fromProtobuf(*(_DWORD *)(result + 8));
  *a2 = result;
  int v4 = *(_DWORD *)(v3 + 28);
  if ((v4 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_7:
  uint64_t v5 = *(void *)(v3 + 16);
  if (!v5) {
    uint64_t v5 = *(void *)(proto::gnss::Emergency::CellFTAssistance::default_instance_ + 16);
  }

  return ProtobufUtil::fromProtobuf(v5, (uint64_t)(a2 + 2));
}

std::string *ProtobufUtil::toProtobuf(std::string *__str, uint64_t a2)
{
  *(_DWORD *)(a2 + 32) |= 1u;
  int v4 = *(std::string **)(a2 + 8);
  if (v4 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v4, __str);
  int v5 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a2 + 24) = __str[1].__r_.__value_.__l.__data_;
  *(_DWORD *)(a2 + 32) = v5 | 6;
  int v6 = *(std::string **)(a2 + 16);
  if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }

  return std::string::operator=(v6, (std::string *)((char *)__str + 32));
}

uint64_t ProtobufUtil::toProtobuf(uint64_t *a1, uint64_t a2)
{
  int v4 = -1227133513 * ((a1[1] - *a1) >> 3);
  int v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a2 + 8);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a2 + 8), v4);
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 56 * v4;
    do
    {
      uint64_t v8 = *a1;
      int v9 = *(_DWORD *)(a2 + 20);
      uint64_t v10 = *(int *)(a2 + 16);
      if ((int)v10 >= v9)
      {
        if (v9 == *(_DWORD *)(a2 + 24))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v9 + 1);
          int v9 = *(_DWORD *)(a2 + 20);
        }
        *(_DWORD *)(a2 + 20) = v9 + 1;
        operator new();
      }
      uint64_t v11 = *(void *)(a2 + 8);
      *(_DWORD *)(a2 + 16) = v10 + 1;
      ProtobufUtil::toProtobuf((std::string *)(v8 + v6), *(void *)(v11 + 8 * v10));
      v6 += 56;
    }
    while (v7 != v6);
  }
  *(_DWORD *)(a2 + 44) |= 2u;
  uint64_t result = *(void *)(a2 + 32);
  if (!result) {
    operator new();
  }
  int v13 = *(_DWORD *)(result + 20);
  char v14 = *((unsigned char *)a1 + 24);
  *(_DWORD *)(result + 20) = v13 | 1;
  *(unsigned char *)(result + 12) = v14;
  *(_DWORD *)(result + 8) = *((_DWORD *)a1 + 7);
  *(_WORD *)(result + 13) = *((_WORD *)a1 + 16);
  *(_DWORD *)(result + 20) = v13 | 0xF;
  return result;
}

void sub_1000324E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t ProtobufUtil::toProtobuf(uint64_t result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 36);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(result + 8);
  *(unsigned char *)(a2 + 24) = *(unsigned char *)(result + 24);
  if ((*(unsigned char *)result - 1) > 3u) {
    int v3 = 1;
  }
  else {
    int v3 = dword_1000E7980[(char)(*(unsigned char *)result - 1)];
  }
  *(_DWORD *)(a2 + 36) = v2 | 0xF;
  *(_DWORD *)(a2 + 28) = v3;
  return result;
}

_DWORD *ProtobufUtil::fromProtobuf(_DWORD *result, unsigned char *__dst)
{
  int v3 = result;
  int v4 = result[8];
  if ((v4 & 2) != 0)
  {
    __dst[6] = *((unsigned char *)result + 16);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      *((_WORD *)__dst + 4) = result[5];
      if ((v4 & 1) == 0) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_3;
  }
  __dst[7] = *((unsigned char *)result + 17);
  if ((v4 & 8) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_9:
  int v5 = (unsigned char *)*((void *)result + 1);
  if (((char)v5[23] & 0x80000000) == 0)
  {
    size_t v6 = v5[23];
    if (!v5[23]) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  int v5 = *(unsigned char **)v5;
  size_t v6 = *(void *)(*((void *)result + 1) + 8);
  if (v6)
  {
LABEL_11:
    uint64_t result = memmove(__dst, v5, v6);
    int v4 = v3[8];
  }
LABEL_12:
  if ((v4 & 0x10) != 0) {
    *((_WORD *)__dst + 5) = v3[6];
  }
  return result;
}

void sub_100032884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10003289C(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 2);
  BOOL v3 = a2 >= v2;
  unint64_t v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    sub_100032D80((void **)a1, v4);
  }
  else if (!v3)
  {
    *(void *)(a1 + 8) = *(void *)a1 + 12 * a2;
  }
}

_DWORD *ProtobufUtil::toProtobuf(int *a1, uint64_t a2)
{
  int v3 = *a1;
  int v4 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a2 + 64) = v4 | 1;
  int v5 = a1[1];
  *(_DWORD *)(a2 + 8) = v3;
  *(_DWORD *)(a2 + 12) = v5;
  int v6 = *((unsigned __int8 *)a1 + 9);
  *(_DWORD *)(a2 + 16) = *((unsigned __int8 *)a1 + 8);
  *(_DWORD *)(a2 + 20) = v6;
  int v7 = a1[3];
  BOOL v8 = (v7 + 1) >= 3;
  int v9 = v7 + 2;
  if (v8) {
    int v9 = 0;
  }
  *(_DWORD *)(a2 + 24) = *((unsigned __int8 *)a1 + 10);
  *(_DWORD *)(a2 + 28) = v9;
  *(unsigned char *)(a2 + 56) = *((unsigned char *)a1 + 16);
  *(_DWORD *)(a2 + 64) = v4 | 0xFF;
  uint64_t v10 = *(_DWORD **)(a2 + 32);
  if (!v10) {
    operator new();
  }
  int v11 = v10[6];
  int v12 = *((unsigned __int16 *)a1 + 10);
  _OWORD v10[2] = *((unsigned __int16 *)a1 + 9);
  v10[3] = v12;
  int v13 = *((unsigned __int8 *)a1 + 22);
  void v10[6] = v11 | 7;
  uint64_t v10[4] = v13;
  int v14 = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a2 + 57) = *((unsigned char *)a1 + 24);
  *(_DWORD *)(a2 + 64) = v14 | 0x300;
  unint64_t v15 = *(_DWORD **)(a2 + 40);
  if (!v15) {
    operator new();
  }
  int v16 = a1[7];
  int v17 = *((unsigned __int16 *)a1 + 16);
  v15[5] |= 3u;
  v15[2] = v16;
  v15[3] = v17;
  int v18 = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a2 + 58) = *((unsigned char *)a1 + 36);
  *(_DWORD *)(a2 + 64) = v18 | 0xC00;
  uint64_t result = *(_DWORD **)(a2 + 48);
  if (!result) {
    operator new();
  }
  int v20 = *((unsigned __int16 *)a1 + 19);
  int v21 = *((unsigned __int8 *)a1 + 40);
  result[5] |= 3u;
  result[2] = v20;
  result[3] = v21;
  return result;
}

BOOL sub_100032C38(uint64_t a1)
{
  if (*(_WORD *)a1) {
    return 1;
  }
  if (*(__int16 *)(a1 + 8) != -32768)
  {
    int v2 = *(unsigned __int8 *)(a1 + 10);
    if (*(void *)(a1 + 16))
    {
      if ((v2 != 2) == (*(__int16 *)(a1 + 24) != -32768)) {
        return *(void *)(a1 + 32)
      }
            && (*(void *)(a1 + 40) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
            && (*(void *)(a1 + 48) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
            && (*(void *)(a1 + 56) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
      return 1;
    }
    if (v2 != 2) {
      return 1;
    }
  }
  return *(void *)(a1 + 32)
      && (*(void *)(a1 + 40) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (*(void *)(a1 + 48) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (*(void *)(a1 + 56) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
}

uint64_t sub_100032CD4(uint64_t result, int a2)
{
  int v2 = *(_DWORD *)(result + 12);
  if (v2 < a2)
  {
    int v3 = 2 * v2;
    if (v3 <= a2) {
      int v3 = a2;
    }
    if (v3 <= 4) {
      int v3 = 4;
    }
    *(_DWORD *)(result + 12) = v3;
    operator new[]();
  }
  return result;
}

void sub_100032D80(void **a1, unint64_t a2)
{
  int v5 = (char *)a1[1];
  int v4 = a1[2];
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - v5) >> 2) >= a2)
  {
    if (a2)
    {
      int v11 = &v5[12 * a2];
      do
      {
        *(void *)int v5 = 0;
        *((_DWORD *)v5 + 2) = 0x7FFFFFFF;
        v5 += 12;
      }
      while (v5 != v11);
      int v5 = v11;
    }
    a1[1] = v5;
  }
  else
  {
    unint64_t v6 = 0xAAAAAAAAAAAAAAABLL * ((v5 - (unsigned char *)*a1) >> 2);
    unint64_t v7 = v6 + a2;
    if (v6 + a2 > 0x1555555555555555) {
      sub_100007204();
    }
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a1) >> 2);
    if (2 * v8 > v7) {
      unint64_t v7 = 2 * v8;
    }
    if (v8 >= 0xAAAAAAAAAAAAAAALL) {
      unint64_t v9 = 0x1555555555555555;
    }
    else {
      unint64_t v9 = v7;
    }
    if (v9)
    {
      if (v9 > 0x1555555555555555) {
        sub_100007254();
      }
      uint64_t v10 = (char *)operator new(12 * v9);
    }
    else
    {
      uint64_t v10 = 0;
    }
    int v12 = &v10[12 * v6];
    int v13 = &v12[12 * a2];
    int v14 = v12;
    do
    {
      *(void *)int v14 = 0;
      *((_DWORD *)v14 + 2) = 0x7FFFFFFF;
      v14 += 12;
    }
    while (v14 != v13);
    unint64_t v15 = (char *)*a1;
    if (v5 != *a1)
    {
      do
      {
        uint64_t v16 = *(void *)(v5 - 12);
        v5 -= 12;
        int v17 = *((_DWORD *)v5 + 2);
        *(void *)(v12 - 12) = v16;
        v12 -= 12;
        *((_DWORD *)v12 + 2) = v17;
      }
      while (v5 != v15);
      int v5 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v13;
    a1[2] = &v10[12 * v9];
    if (v5)
    {
      operator delete(v5);
    }
  }
}

double sub_100032F0C()
{
  GpsdPlatformInfo::instance(0);
  unsigned int v0 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    int v2 = 134217984;
    uint64_t v3 = 0x4042000000000000;
    _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "HalExtensions,getGpsCrossCorrelationMaxThreshold_dBHz,%f", (uint8_t *)&v2, 0xCu);
  }
  return 36.0;
}

double sub_100032FC0()
{
  unsigned int v0 = (GpsdPlatformInfo *)GpsdPlatformInfo::instance(0);
  double GpsCrossCorrelationMinThreshold_dBHz = GpsdPlatformInfo::getGpsCrossCorrelationMinThreshold_dBHz(v0);
  int v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    int v4 = 134217984;
    double v5 = GpsCrossCorrelationMinThreshold_dBHz;
    _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "HalExtensions,getGpsCrossCorrelationMinThreshold_dBHz,%f", (uint8_t *)&v4, 0xCu);
  }
  return GpsCrossCorrelationMinThreshold_dBHz;
}

id sub_10003307C()
{
  unsigned int v0 = (id *)GpsdPreferences::instance(0);

  return GpsdPreferences::externalToChipL5GroupDelayMeters(v0);
}

void sub_1000330A8(char **a1@<X8>)
{
  int v2 = (id *)GpsdPreferences::instance(0);

  GpsdPreferences::glonassPerFrequencyGroupDelayMeters(v2, a1);
}

uint64_t sub_1000330E4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 48))();
  }
  return result;
}

uint64_t sub_100033114()
{
  unsigned int v0 = (GpsdPlatformInfo *)GpsdPlatformInfo::instance(0);
  unsigned int v1 = *((_DWORD *)v0 + 2) - 103;
  BOOL v2 = v1 >= 4;
  BOOL v4 = v1 == 4;
  int v3 = (1 << v1) & 0x19;
  BOOL v4 = !v4 && v2 || v3 == 0;
  if (v4) {
    return 0;
  }

  return GpsdPlatformInfo::isPhone(v0);
}

void *sub_100033170(uint64_t a1)
{
  BOOL v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)BOOL v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "#cntin,setCntinEnable", v4, 2u);
  }
  uint64_t result = *(void **)(a1 + 64);
  if (result)
  {
    v5[0] = off_1001074B8;
    v5[1] = a1;
    v5[3] = v5;
    (*(void (**)(void *, void *))(*result + 48))(result, v5);
    return sub_100018B04(v5);
  }
  return result;
}

void sub_100033260(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100018B04((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100033274(uint64_t a1)
{
  BOOL v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)BOOL v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "#cntin,setCntinDisable", v4, 2u);
  }
  uint64_t result = *(void *)(a1 + 96);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 48))(result);
  }
  return result;
}

void *sub_100033308(uint64_t a1, uint64_t a2)
{
  BOOL v4 = qword_100114838;
  if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#cntin,setCntinStatusCb", v6, 2u);
  }
  return sub_100018234((void *)(a1 + 104), a2);
}

uint64_t sub_100033388@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = *(void *)(a1 + 256);
  if (result)
  {
    (*(void (**)(void **__return_ptr))(*(void *)result + 48))(__p);
    int v3 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v4 = __p;
      if (v6 < 0) {
        BOOL v4 = (void **)__p[0];
      }
      *(_DWORD *)audit_token_t buf = 136315138;
      unint64_t v8 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "factoryTestXml,%s", buf, 0xCu);
    }
    operator new();
  }
  *a2 = 0;
  return result;
}

void sub_1000334D0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

uint64_t sub_100033514@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = *(void *)(a1 + 288);
  if (result)
  {
    (*(void (**)(void **__return_ptr))(*(void *)result + 48))(__p);
    int v3 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v4 = __p;
      if (v6 < 0) {
        BOOL v4 = (void **)__p[0];
      }
      *(_DWORD *)audit_token_t buf = 136315138;
      unint64_t v8 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "factoryTestJob,%s", buf, 0xCu);
    }
    operator new();
  }
  *a2 = 0;
  return result;
}

void sub_10003365C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

void sub_1000336A0()
{
  unsigned int v0 = (GpsdPreferences *)GpsdPreferences::instance(0);
  GpsdPreferences::bundleName(v0, &v1);
  operator new();
}

void sub_100033704(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100033720()
{
  unsigned int v0 = (id *)GpsdPreferences::instance(0);
  GpsdPreferences::nvStorePath(v0, &v1);
  operator new();
}

void sub_100033784(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1000337A0(gpsd::util *a1)
{
  if (*((unsigned char *)a1 + 296)) {
    return (char *)2049;
  }
  else {
    return gpsd::util::getGpsWeekFromBuildDate(a1);
  }
}

void sub_1000337B4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  double v5 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    if (*((char *)a2 + 23) >= 0) {
      char v6 = a2;
    }
    else {
      char v6 = (uint64_t *)*a2;
    }
    if (*((char *)a3 + 23) >= 0) {
      unint64_t v7 = a3;
    }
    else {
      unint64_t v7 = (uint64_t *)*a3;
    }
    int v8 = 136446467;
    unint64_t v9 = v6;
    __int16 v10 = 2081;
    int v11 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#gdm,chipVersion,%{public}s,serial,%{private}s", (uint8_t *)&v8, 0x16u);
  }
}

BOOL sub_10003388C()
{
  unsigned int v0 = (id *)GpsdPreferences::instance(0);
  unsigned int v1 = GpsdPreferences::enableL5(v0);
  BOOL result = 0;
  if (v1) {
    return *(unsigned char *)(GpsdPlatformInfo::instance(0) + 24) != 0;
  }
  return result;
}

id sub_1000338CC()
{
  unsigned int v0 = (id *)GpsdPreferences::instance(0);

  return GpsdPreferences::debugFeaturesBitmask(v0);
}

uint64_t sub_1000338F8()
{
  unsigned int v0 = (id *)GpsdPreferences::instance(0);

  return GpsdPreferences::platformSpecificFeaturesBitmask(v0);
}

void *sub_100033924@<X0>(void *a1@<X8>)
{
  BOOL v2 = (id *)GpsdPreferences::instance(0);

  return GpsdPreferences::debugSettingsString(v2, a1);
}

uint64_t sub_100033960(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 160);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 48))();
  }
  return result;
}

uint64_t sub_100033990(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 192);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 48))();
  }
  return result;
}

uint64_t sub_1000339C0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 224);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 48))();
  }
  return result;
}

uint64_t sub_1000339F0()
{
  unsigned int v0 = (id *)GpsdPreferences::instance(0);
  unsigned int v1 = GpsdPreferences::forceFireExtensionsPlatform(v0) + 1;
  if (v1 < 9 && ((0x199u >> v1) & 1) != 0) {
    return dword_1000E7AF4[v1];
  }
  if (*(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) == 103) {
    return 2;
  }
  if (*(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) == 106) {
    return 3;
  }
  if (*(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) == 107) {
    return 4;
  }
  int v3 = qword_100114840;
  uint64_t result = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT);
  if (result)
  {
    *(_WORD *)BOOL v4 = 0;
    _os_log_fault_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "UnknownPlatformExtensionFire", v4, 2u);
    return 0;
  }
  return result;
}

void *sub_100033AE4(void *a1)
{
  *a1 = off_1001073A0;
  BOOL v2 = a1 + 1;
  sub_10001F054(a1 + 33);
  sub_10001F054(a1 + 29);
  sub_10001F0D8(a1 + 25);
  sub_10001F15C(a1 + 21);
  sub_10001F1E0(a1 + 17);
  sub_100018B04(a1 + 13);
  sub_100018A80(a1 + 9);
  sub_10001F264(a1 + 5);
  sub_10001F2E8(v2);
  return a1;
}

void sub_100033B70(void *a1)
{
  *a1 = off_1001073A0;
  BOOL v2 = a1 + 1;
  sub_10001F054(a1 + 33);
  sub_10001F054(a1 + 29);
  sub_10001F0D8(a1 + 25);
  sub_10001F15C(a1 + 21);
  sub_10001F1E0(a1 + 17);
  sub_100018B04(a1 + 13);
  sub_100018A80(a1 + 9);
  sub_10001F264(a1 + 5);
  sub_10001F2E8(v2);

  operator delete();
}

void sub_100033C20()
{
}

void *sub_100033C34(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1001074B8;
  result[1] = v3;
  return result;
}

uint64_t sub_100033C7C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1001074B8;
  a2[1] = v2;
  return result;
}

void sub_100033CA8(uint64_t a1, int *a2)
{
  int v2 = *a2;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(v3 + 128);
  double v5 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    v6[0] = 67240448;
    v6[1] = v2;
    __int16 v7 = 1026;
    BOOL v8 = v4 != 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "#cntin,status,%{public}d,hasHandler,%{public}d", (uint8_t *)v6, 0xEu);
  }
  if (v4) {
    sub_1000182A8(v3 + 104, v2);
  }
}

uint64_t sub_100033D7C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100033DBC()
{
}

void *sub_100033DC8(void *result, uint64_t a2, uint64_t a3)
{
  if (result[4])
  {
    uint64_t v4 = result;
    sub_10001DE6C((uint64_t)v6, a3);
    uint64_t v5 = v4[4];
    if (!v5) {
      sub_100003600();
    }
    (*(void (**)(uint64_t, uint64_t, void *))(*(void *)v5 + 48))(v5, a2, v6);
    return sub_1000190A0(v6);
  }
  return result;
}

void sub_100033E78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
}

double sub_100033E94()
{
  unsigned int v0 = (id *)GpsdPreferences::instance(0);
  GpsdPreferences::groupDelayL1InCAChips(v0);
  double v2 = v1;
  uint64_t v3 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    int v5 = 134217984;
    double v6 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "ExtensionsOlafImpl,groupDelayL1InCAChips,%f", (uint8_t *)&v5, 0xCu);
  }
  return v2;
}

uint64_t sub_100033F4C()
{
  unsigned int v0 = (id *)GpsdPreferences::instance(0);
  return GpsdPreferences::isRavenExpected(v0) ^ 1;
}

BOOL sub_100033F70()
{
  uint64_t v0 = GpsdPlatformInfo::instance(0);
  BOOL result = 0;
  if (*(_DWORD *)(v0 + 8) != 201)
  {
    if (*(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) == 202)
    {
      return 1;
    }
    else
    {
      double v2 = qword_100114840;
      BOOL result = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT);
      if (result)
      {
        *(_WORD *)uint64_t v3 = 0;
        _os_log_fault_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_FAULT, "Unhandled platform in ExtensionsOlaf", v3, 2u);
        return 0;
      }
    }
  }
  return result;
}

char *sub_100034014(gpsd::util *a1)
{
  if (*((unsigned char *)a1 + 104)) {
    return (char *)2049;
  }
  else {
    return gpsd::util::getGpsWeekFromBuildDate(a1);
  }
}

uint64_t sub_100034028()
{
  return *(unsigned __int8 *)(GpsdPlatformInfo::instance(0) + 24);
}

void sub_100034048(uint64_t a1, int a2, void **a3)
{
  double v6 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v7 = a3;
    if (*((char *)a3 + 23) < 0) {
      __int16 v7 = *a3;
    }
    *(_DWORD *)audit_token_t buf = 67240451;
    *(_DWORD *)uint64_t v16 = a2;
    *(_WORD *)&void v16[4] = 2081;
    *(void *)&v16[6] = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#bbReset,extensionsOlaf,%{public}d,%{private}s", buf, 0x12u);
  }
  uint64_t v8 = *(void *)(a1 + 64);
  if (!v8)
  {
    unint64_t v9 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "requestBasebandReset invoked without a handler", buf, 2u);
      unint64_t v9 = qword_100114840;
    }
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)audit_token_t buf = 136446722;
      *(void *)uint64_t v16 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/HAL/Implementation/GnssHalExtensionsOlafImpl.mm";
      *(_WORD *)&v16[8] = 1026;
      *(_DWORD *)&v16[10] = 58;
      __int16 v17 = 2082;
      int v18 = "requestBasebandReset";
      _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
    }
    sub_1000033AC(&v14, "assert");
    sub_1000033AC(&v13, "requestBasebandReset");
    sub_1000033AC(&v12, "requestBasebandReset invoked without a handler");
    gpsd::util::triggerDiagnosticReport((uint64_t)&v14, (long long *)&v13, (long long *)&v12);
    std::string::~string(&v12);
    std::string::~string(&v13);
    std::string::~string(&v14);
    __assert_rtn("requestBasebandReset", "GnssHalExtensionsOlafImpl.mm", 58, "false && \"requestBasebandReset invoked without a handler\"");
  }
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000186E8(__p, *a3, (unint64_t)a3[1]);
    uint64_t v8 = *(void *)(a1 + 64);
    *(_DWORD *)audit_token_t buf = a2;
    if (!v8) {
      sub_100003600();
    }
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a3;
    int v11 = a3[2];
    *(_DWORD *)audit_token_t buf = a2;
  }
  (*(void (**)(uint64_t, uint8_t *, void **))(*(void *)v8 + 48))(v8, buf, __p);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1000342CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,char a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a14 < 0) {
    operator delete(a9);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100034338(void *a1)
{
  *a1 = off_100107578;
  double v2 = a1 + 1;
  sub_100018C90(a1 + 5);
  sub_100018C0C(v2);
  return a1;
}

void sub_10003438C(void *a1)
{
  *a1 = off_100107578;
  double v1 = a1 + 1;
  sub_100018C90(a1 + 5);
  sub_100018C0C(v1);

  operator delete();
}

uint64_t sub_100034410()
{
  return 0;
}

uint64_t sub_100034418()
{
  return 0;
}

void sub_100034420(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

double sub_10003442C(uint64_t a1)
{
  return *(double *)(a1 + 72);
}

void SuplPduLog::traceSuplPdu(SuplPduLog *this, const unsigned __int8 *a2, int a3)
{
  if (this && (uint64_t v3 = a2) != 0)
  {
    uint64_t v4 = this;
    memset(&__str, 0, sizeof(__str));
    do
    {
      sub_100034924((uint64_t)buf);
      uint64_t v7 = *(void *)&v28[2];
      *(_DWORD *)((char *)&v29 + *(void *)(*(void *)&v28[2] - 24)) = *(_DWORD *)((unsigned char *)&v29
                                                                                     + *(void *)(*(void *)&v28[2]
                                                                                                 - 24)) & 0xFFFFFFB5 | 8;
      *(void *)((char *)v31 + *(void *)(v7 - 24) + 6) = 2;
      uint64_t v8 = &v28[*(void *)(v7 - 24) + 2];
      if (*((_DWORD *)v8 + 36) == -1)
      {
        std::ios_base::getloc((const std::ios_base *)&v28[*(void *)(v7 - 24) + 2]);
        unint64_t v9 = std::locale::use_facet((const std::locale *)&v24, &std::ctype<char>::id);
        ((void (*)(const std::locale::facet *, uint64_t))v9->__vftable[2].~facet_0)(v9, 32);
        std::locale::~locale((std::locale *)&v24);
      }
      *((_DWORD *)v8 + 36) = 48;
      std::ostream::operator<<();
      std::stringbuf::str();
      if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        __int16 v10 = &v24;
      }
      else {
        __int16 v10 = (std::string *)v24.__r_.__value_.__r.__words[0];
      }
      if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v24.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v24.__r_.__value_.__l.__size_;
      }
      std::string::append(&__str, (const std::string::value_type *)v10, size);
      if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v24.__r_.__value_.__l.__data_);
      }
      *(void *)audit_token_t buf = v23;
      *(void *)&buf[*(void *)(v23 - 24)] = v5;
      *(void *)&_DWORD v28[2] = v6;
      if (v32 < 0) {
        operator delete(*(void **)((char *)&v31[6] + 6));
      }
      std::streambuf::~streambuf();
      std::iostream::~basic_iostream();
      std::ios::~ios();
      uint64_t v4 = (SuplPduLog *)((char *)v4 + 1);
      --v3;
    }
    while (v3);
    std::string::size_type v12 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    {
      std::string::size_type v13 = __str.__r_.__value_.__l.__size_ / 0x1F4;
      std::string::size_type v14 = __str.__r_.__value_.__l.__size_ % 0x1F4;
    }
    else
    {
      std::string::size_type v13 = 0;
      std::string::size_type v14 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    }
    std::string::size_type v16 = 0;
    if (v14) {
      std::string::size_type v17 = v13 + 1;
    }
    else {
      std::string::size_type v17 = v13;
    }
    if (a3) {
      int v18 = "In";
    }
    else {
      int v18 = "Out";
    }
    uint64_t v19 = 1;
    if ((*((unsigned char *)&__str.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_31;
    }
    while (v16 < v12)
    {
      while (1)
      {
        std::string::basic_string(&v24, &__str, v16, 0x1F4uLL, (std::allocator<char> *)buf);
        int v20 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
        {
          int v21 = &v24;
          if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            int v21 = (std::string *)v24.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)audit_token_t buf = 134284291;
          *(void *)&uint8_t buf[4] = v19;
          __int16 v27 = 2049;
          *(void *)unint64_t v28 = v17;
          *(_WORD *)&v28[8] = 2081;
          uint64_t v29 = (void (__cdecl **)(std::stringbuf *__hidden))v21;
          __int16 v30 = 2081;
          v31[0] = v18;
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "#supl,#pdu,%{private}zu,of,%{private}zu,%{private}s,%{private}s", buf, 0x2Au);
        }
        if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v24.__r_.__value_.__l.__data_);
        }
        std::string::size_type v12 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
        v16 += 500;
        ++v19;
        if ((*((unsigned char *)&__str.__r_.__value_.__s + 23) & 0x80) == 0) {
          break;
        }
LABEL_31:
        if (v16 >= __str.__r_.__value_.__l.__size_)
        {
          operator delete(__str.__r_.__value_.__l.__data_);
          return;
        }
      }
    }
  }
  else
  {
    unint64_t v15 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "#supl,PDU is empty", buf, 2u);
    }
  }
}

void sub_1000348C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::locale a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100034924(uint64_t a1)
{
  uint64_t v2 = a1 + 16;
  *(void *)a1 = v4;
  *(void *)(a1 + *(void *)(v4 - 24)) = v3;
  *(void *)(a1 + 8) = 0;
  uint64_t v5 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v5, (void *)(a1 + 24));
  v5[1].__vftable = 0;
  v5[1].__fmtflags_ = -1;
  *(void *)(a1 + 16) = v7;
  *(void *)(v2 + *(void *)(v7 - 24)) = v6;
  *(void *)a1 = v8;
  std::streambuf::basic_streambuf();
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 120) = 24;
  return a1;
}

void sub_100034BD4(_Unwind_Exception *a1)
{
}

uint64_t GpsdConnectionManager::GpsdConnectionManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_100107610;
  *(_DWORD *)(a1 + 24) = -1;
  *(unsigned char *)(a1 + 28) = 0;
  sub_1000033AC((void *)(a1 + 32), "");
  *(void *)(a1 + 144) = 1018212795;
  *(_WORD *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 850045863;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(void *)(a1 + 136) = 0;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 180) = 0u;
  sub_10001F36C(a1 + 200, a2);
  sub_10001FDF4(a1 + 232, a3);
  sub_10001FE8C(a1 + 264, a4);
  sub_10001FF24(a1 + 296, a5);
  __int16 v10 = (id *)GpsdPreferences::instance(0);
  dispatch_qos_class_t v11 = GpsdPreferences::maxSchedulerQos(v10);
  std::string::size_type v12 = dispatch_queue_attr_make_with_qos_class(0, v11, 0);
  if (!v12)
  {
    std::string::size_type v13 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)unint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#supl,null queue attr", v15, 2u);
    }
  }
  *(void *)(a1 + 64) = dispatch_queue_create("com.apple.gpsd.suplConnMgr", v12);
  return a1;
}

void sub_100034D98(_Unwind_Exception *a1)
{
  sub_10001FD70(v7);
  sub_10001FBA8(v8);
  sub_10001F854(v6);
  sub_100018D14(v5);
  std::condition_variable::~condition_variable(v3);
  std::mutex::~mutex(v4);
  if (*(char *)(v1 + 55) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100034E04(uint64_t a1)
{
  *(void *)a1 = off_100107610;
  sub_100034E94(a1);
  dispatch_release(*(dispatch_object_t *)(a1 + 64));
  sub_10001FD70((void *)(a1 + 296));
  sub_10001FBA8((void *)(a1 + 264));
  sub_10001F854((void *)(a1 + 232));
  sub_100018D14((void *)(a1 + 200));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 144));
  std::mutex::~mutex((std::mutex *)(a1 + 80));
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  return a1;
}

std::string *sub_100034E94(uint64_t a1)
{
  atomic_store(0, (unsigned __int8 *)(a1 + 28));
  uint64_t v3 = a1 + 8;
  uint64_t v2 = *(__CFReadStream **)(a1 + 8);
  if (v2)
  {
    CFReadStreamClose(v2);
    CFRelease(*(CFTypeRef *)v3);
  }
  uint64_t v4 = *(__CFWriteStream **)(a1 + 16);
  if (v4)
  {
    CFWriteStreamClose(v4);
    CFRelease(*(CFTypeRef *)(a1 + 16));
  }
  *(void *)uint64_t v3 = 0;
  *(void *)(v3 + 8) = 0;
  *(_DWORD *)(a1 + 24) = -1;
  BOOL result = std::string::assign((std::string *)(a1 + 32), "");
  *(_WORD *)(a1 + 56) = 0;
  return result;
}

void sub_100034F0C(uint64_t a1)
{
  sub_100034E04(a1);

  operator delete();
}

BOOL sub_100034F44(uint64_t a1)
{
  uint64_t v43 = 0;
  uint64_t v44 = 0;
  uint64_t v45 = 0;
  uint64_t v2 = *(void *)(a1 + 256);
  if (!v2) {
    sub_100003600();
  }
  (*(void (**)(uint64_t, UInt8 **))(*(void *)v2 + 48))(v2, &v43);
  CFDataRef v3 = CFDataCreate(0, v43, v44 - v43);
  if (!v3)
  {
    int v21 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "suplCertData alloc", buf, 2u);
      int v21 = qword_100114840;
    }
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)audit_token_t buf = 136446722;
      int v48 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Emergency/GnssConnectionManager.mm";
      __int16 v49 = 1026;
      int v50 = 310;
      __int16 v51 = 2082;
      uint64_t v52 = "verifySSL";
      _os_log_error_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
    }
    sub_1000033AC(v41, "assert");
    sub_1000033AC(v39, "verifySSL");
    sub_1000033AC(__p, "suplCertData alloc");
    gpsd::util::triggerDiagnosticReport((uint64_t)v41, (long long *)v39, (long long *)__p);
    if (v38 < 0) {
      operator delete(__p[0]);
    }
    if (v40 < 0) {
      operator delete(v39[0]);
    }
    if (v42 < 0) {
      operator delete(v41[0]);
    }
    __assert_rtn("verifySSL", "GnssConnectionManager.mm", 310, "false && \"suplCertData alloc\"");
  }
  SecCertificateRef v4 = SecCertificateCreateWithData(0, v3);
  SecCertificateRef v5 = v4;
  if (v4)
  {
    values = v4;
    CFArrayRef v6 = CFArrayCreate(0, (const void **)&values, 1, 0);
    if (!v6)
    {
      uint64_t v22 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)audit_token_t buf = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "myCerts alloc", buf, 2u);
        uint64_t v22 = qword_100114840;
      }
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)audit_token_t buf = 136446722;
        int v48 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Emergency/GnssConnectionManager.mm";
        __int16 v49 = 1026;
        int v50 = 319;
        __int16 v51 = 2082;
        uint64_t v52 = "verifySSL";
        _os_log_error_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
      }
      sub_1000033AC(v35, "assert");
      sub_1000033AC(v33, "verifySSL");
      sub_1000033AC(v31, "myCerts alloc");
      gpsd::util::triggerDiagnosticReport((uint64_t)v35, (long long *)v33, (long long *)v31);
      if (v32 < 0) {
        operator delete(v31[0]);
      }
      if (v34 < 0) {
        operator delete(v33[0]);
      }
      if (v36 < 0) {
        operator delete(v35[0]);
      }
      __assert_rtn("verifySSL", "GnssConnectionManager.mm", 319, "false && \"myCerts alloc\"");
    }
    SecPolicyRef BasicX509 = SecPolicyCreateBasicX509();
    if (!BasicX509)
    {
      uint64_t v23 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)audit_token_t buf = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, "myPolicy alloc", buf, 2u);
        uint64_t v23 = qword_100114840;
      }
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)audit_token_t buf = 136446722;
        int v48 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Emergency/GnssConnectionManager.mm";
        __int16 v49 = 1026;
        int v50 = 322;
        __int16 v51 = 2082;
        uint64_t v52 = "verifySSL";
        _os_log_error_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
      }
      sub_1000033AC(v29, "assert");
      sub_1000033AC(v27, "verifySSL");
      sub_1000033AC(v25, "myPolicy alloc");
      gpsd::util::triggerDiagnosticReport((uint64_t)v29, (long long *)v27, (long long *)v25);
      if (v26 < 0) {
        operator delete(v25[0]);
      }
      if (v28 < 0) {
        operator delete(v27[0]);
      }
      if (v30 < 0) {
        operator delete(v29[0]);
      }
      __assert_rtn("verifySSL", "GnssConnectionManager.mm", 322, "false && \"myPolicy alloc\"");
    }
    uint64_t v8 = (__SecTrust *)CFWriteStreamCopyProperty(*(CFWriteStreamRef *)(a1 + 16), kCFStreamPropertySSLPeerTrust);
    unint64_t v9 = v8;
    if (!v8)
    {
      unint64_t v15 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)audit_token_t buf = 0;
        _os_log_fault_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_FAULT, "#supl unable to obtain trust", buf, 2u);
      }
      BOOL v14 = 0;
      goto LABEL_20;
    }
    OSStatus v10 = SecTrustSetPolicies(v8, BasicX509);
    if (v10)
    {
      dispatch_qos_class_t v11 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)audit_token_t buf = 67240192;
        LODWORD(v48) = v10;
        std::string::size_type v12 = "#supl unable to set trust policy status,%{public}d";
LABEL_32:
        _os_log_fault_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_FAULT, v12, buf, 8u);
      }
    }
    else
    {
      OSStatus v16 = SecTrustSetAnchorCertificates(v9, v6);
      if (!v16)
      {
        CFErrorRef v24 = 0;
        BOOL v18 = SecTrustEvaluateWithError(v9, &v24);
        CFErrorRef v19 = v24;
        if (v24) {
          BOOL v14 = 0;
        }
        else {
          BOOL v14 = v18;
        }
        if (v14) {
          goto LABEL_19;
        }
        int v20 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)audit_token_t buf = 138543362;
          int v48 = (const char *)v19;
          _os_log_fault_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_FAULT, "#supl: Invalid trust (EV) error: %{public}@", buf, 0xCu);
          CFErrorRef v19 = v24;
          if (!v24) {
            goto LABEL_19;
          }
        }
        else if (!v19)
        {
          goto LABEL_19;
        }
        CFRelease(v19);
        goto LABEL_19;
      }
      dispatch_qos_class_t v11 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)audit_token_t buf = 67240192;
        LODWORD(v48) = v16;
        std::string::size_type v12 = "#supl unable to set anchor certs status,%{public}d";
        goto LABEL_32;
      }
    }
    BOOL v14 = 0;
LABEL_19:
    CFRelease(v9);
LABEL_20:
    CFRelease(BasicX509);
    CFRelease(v6);
    CFRelease(v5);
    CFRelease(v3);
    goto LABEL_21;
  }
  std::string::size_type v13 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)audit_token_t buf = 0;
    _os_log_fault_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_FAULT, "#supl unable to read SUPL certificate data", buf, 2u);
  }
  CFRelease(v3);
  BOOL v14 = 0;
LABEL_21:
  if (v43)
  {
    uint64_t v44 = v43;
    operator delete(v43);
  }
  return v14;
}

void sub_100035664(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,void *a52,uint64_t a53,int a54,__int16 a55,char a56,char a57)
{
  long long v59 = *(void **)(v57 - 160);
  if (v59)
  {
    *(void *)(v57 - 152) = v59;
    operator delete(v59);
  }
  _Unwind_Resume(exception_object);
}

void sub_10003576C(uint64_t a1)
{
  uint64_t v2 = (std::mutex *)(a1 + 80);
  std::mutex::lock((std::mutex *)(a1 + 80));
  *(unsigned char *)(a1 + 72) = 1;
  std::mutex::unlock(v2);

  std::condition_variable::notify_one((std::condition_variable *)(a1 + 144));
}

void sub_1000357BC(uint64_t a1, CFIndex a2, UInt32 a3)
{
  int v6 = *(unsigned __int8 *)(a2 + 23);
  if (*(char *)(a2 + 23) < 0) {
    uint64_t v7 = *(void *)(a2 + 8);
  }
  else {
    uint64_t v7 = *(unsigned __int8 *)(a2 + 23);
  }
  uint64_t v8 = qword_100114840;
  if (!a3 || !v7)
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
    {
      if ((v6 & 0x80) != 0)
      {
        if (*(void *)(a2 + 8)) {
          char v40 = *(const char **)a2;
        }
        else {
          char v40 = "(null)";
        }
      }
      else
      {
        char v40 = "(null)";
        if (v6) {
          char v40 = (const char *)a2;
        }
      }
      LODWORD(clientContext.version) = 136380931;
      *(CFIndex *)((char *)&clientContext.version + 4) = (CFIndex)v40;
      WORD2(clientContext.info) = 1026;
      *(_DWORD *)((char *)&clientContext.info + 6) = a3;
      _os_log_fault_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_FAULT, "#supl,connect,bad inputs,serverName,%{private}s,port,%{public}d", (uint8_t *)&clientContext, 0x12u);
    }
    goto LABEL_18;
  }
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    CFIndex v41 = a2;
    if ((v6 & 0x80) != 0) {
      CFIndex v41 = *(void *)a2;
    }
    LODWORD(clientContext.version) = 136315394;
    *(CFIndex *)((char *)&clientContext.version + 4) = v41;
    WORD2(clientContext.info) = 1024;
    *(_DWORD *)((char *)&clientContext.info + 6) = a3;
    _os_log_debug_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "#supl,connect,opening server,%s,port,%d", (uint8_t *)&clientContext, 0x12u);
  }
  unsigned __int8 v9 = atomic_load((unsigned __int8 *)(a1 + 28));
  if (v9)
  {
    int v21 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      uint64_t v45 = (void *)(a1 + 32);
      if (*(char *)(a1 + 55) < 0) {
        uint64_t v45 = (void *)*v45;
      }
      int v46 = *(unsigned __int16 *)(a1 + 56);
      LODWORD(clientContext.version) = 136380931;
      *(CFIndex *)((char *)&clientContext.version + 4) = (CFIndex)v45;
      WORD2(clientContext.info) = 1026;
      *(_DWORD *)((char *)&clientContext.info + 6) = v46;
      _os_log_error_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "#supl,connect,connection still open to serverName,%{private}s,port,%{public}d", (uint8_t *)&clientContext, 0x12u);
    }
LABEL_18:
    sub_100036508(*(void *)(a1 + 288), 4);
    return;
  }
  OSStatus v10 = (const char *)a2;
  if (*(char *)(a2 + 23) < 0) {
    OSStatus v10 = *(const char **)a2;
  }
  CFStringRef v11 = CFStringCreateWithCString(0, v10, 0x8000100u);
  if (!v11)
  {
    int v50 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      LOWORD(clientContext.version) = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_ERROR, "hostNameCFStr alloc", (uint8_t *)&clientContext, 2u);
      int v50 = qword_100114840;
    }
    if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
    {
      LODWORD(clientContext.version) = 136446722;
      *(CFIndex *)((char *)&clientContext.version + 4) = (CFIndex)"/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/"
                                                                  "Emergency/GnssConnectionManager.mm";
      WORD2(clientContext.info) = 1026;
      *(_DWORD *)((char *)&clientContext.info + 6) = 150;
      WORD1(clientContext.retain) = 2082;
      *(void *(__cdecl **)(void *))((char *)&clientContext.retain + 4) = (void *(__cdecl *)(void *))"connect";
      _os_log_error_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", (uint8_t *)&clientContext, 0x1Cu);
    }
    sub_1000033AC(&v61, "assert");
    sub_1000033AC(&v60, "connect");
    sub_1000033AC(&v59, "hostNameCFStr alloc");
    gpsd::util::triggerDiagnosticReport((uint64_t)&v61, (long long *)&v60, (long long *)&v59);
    std::string::~string(&v59);
    std::string::~string(&v60);
    std::string::~string(&v61);
    __assert_rtn("connect", "GnssConnectionManager.mm", 150, "false && \"hostNameCFStr alloc\"");
  }
  std::string::size_type v12 = (CFReadStreamRef *)(a1 + 8);
  std::string::size_type v13 = (CFWriteStreamRef *)(a1 + 16);
  CFStreamCreatePairWithSocketToHost(0, v11, a3, (CFReadStreamRef *)(a1 + 8), (CFWriteStreamRef *)(a1 + 16));
  CFRelease(v11);
  keys = (void *)kCFStreamSSLValidatesCertificateChain;
  values = kCFBooleanFalse;
  CFDictionaryRef v14 = CFDictionaryCreate(0, (const void **)&keys, (const void **)&values, 1, 0, 0);
  if (!v14)
  {
    __int16 v51 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      LOWORD(clientContext.version) = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_ERROR, "sslDictionary alloc", (uint8_t *)&clientContext, 2u);
      __int16 v51 = qword_100114840;
    }
    if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR))
    {
      LODWORD(clientContext.version) = 136446722;
      *(CFIndex *)((char *)&clientContext.version + 4) = (CFIndex)"/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/"
                                                                  "Emergency/GnssConnectionManager.mm";
      WORD2(clientContext.info) = 1026;
      *(_DWORD *)((char *)&clientContext.info + 6) = 160;
      WORD1(clientContext.retain) = 2082;
      *(void *(__cdecl **)(void *))((char *)&clientContext.retain + 4) = (void *(__cdecl *)(void *))"connect";
      _os_log_error_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", (uint8_t *)&clientContext, 0x1Cu);
    }
    sub_1000033AC(&v58, "assert");
    sub_1000033AC(&v57, "connect");
    sub_1000033AC(&v56, "sslDictionary alloc");
    gpsd::util::triggerDiagnosticReport((uint64_t)&v58, (long long *)&v57, (long long *)&v56);
    std::string::~string(&v56);
    std::string::~string(&v57);
    std::string::~string(&v58);
    __assert_rtn("connect", "GnssConnectionManager.mm", 160, "false && \"sslDictionary alloc\"");
  }
  CFStringRef v15 = kCFStreamPropertyShouldCloseNativeSocket;
  CFReadStreamSetProperty(*(CFReadStreamRef *)(a1 + 8), kCFStreamPropertyShouldCloseNativeSocket, kCFBooleanTrue);
  CFWriteStreamSetProperty(*(CFWriteStreamRef *)(a1 + 16), v15, kCFBooleanTrue);
  uint64_t v16 = *(void *)(a1 + 224);
  if (!v16) {
    sub_100003600();
  }
  int v17 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 48))(v16);
  BOOL v18 = qword_100114840;
  BOOL v19 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG);
  if (v17)
  {
    if (v19)
    {
      LOWORD(clientContext.version) = 0;
      _os_log_debug_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "#supl,connect,using LTE,service type set to Emergency", (uint8_t *)&clientContext, 2u);
    }
    int v20 = (CFTypeRef *)&kCTDataConnectionServiceTypeEmergency;
  }
  else
  {
    if (v19)
    {
      LOWORD(clientContext.version) = 0;
      _os_log_debug_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "#supl,connect,not using LTE,service type set to EmergencyLocation", (uint8_t *)&clientContext, 2u);
    }
    int v20 = (CFTypeRef *)&kCTDataConnectionServiceTypeEmergencyLocation;
  }
  CFTypeRef v22 = *v20;
  CFStringRef v23 = (const __CFString *)kCFStreamPropertyDataConnectionServiceType;
  CFReadStreamSetProperty(*(CFReadStreamRef *)(a1 + 8), kCFStreamPropertyDataConnectionServiceType, *v20);
  CFWriteStreamSetProperty(*(CFWriteStreamRef *)(a1 + 16), v23, v22);
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v55 = 0;
  uint64_t v24 = *(void *)(a1 + 320);
  if (!v24) {
    sub_100003600();
  }
  (*(void (**)(uint64_t, void **))(*(void *)v24 + 48))(v24, __p);
  if (v55 >= 0) {
    uint64_t v25 = __p;
  }
  else {
    uint64_t v25 = (void **)__p[0];
  }
  char v26 = +[NSString stringWithFormat:@"%s", v25];
  CFStringRef v27 = (const __CFString *)kCFStreamPropertyAccountIdentifier;
  CFReadStreamSetProperty(*v12, kCFStreamPropertyAccountIdentifier, v26);
  CFWriteStreamSetProperty(*v13, v27, v26);
  CFReadStreamSetProperty(*v12, kCFStreamPropertySSLSettings, v14);
  CFWriteStreamSetProperty(*v13, kCFStreamPropertySSLSettings, v14);
  CFRelease(v14);
  clientContext.version = 0;
  clientContext.info = (void *)a1;
  memset(&clientContext.retain, 0, 24);
  *(unsigned char *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 192) = 0;
  if (!CFReadStreamSetClient(*(CFReadStreamRef *)(a1 + 8), 0xDuLL, (CFReadStreamClientCallBack)sub_100036558, &clientContext))
  {
    char v34 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
      goto LABEL_72;
    }
    LOWORD(__lk.__m_) = 0;
    unint64_t v35 = "#supl,connect,unable to set read stream client";
LABEL_104:
    _os_log_error_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_ERROR, v35, (uint8_t *)&__lk, 2u);
LABEL_72:
    sub_100036508(*(void *)(a1 + 288), 3);
    goto LABEL_73;
  }
  if (!CFWriteStreamSetClient(*v13, 0xDuLL, (CFWriteStreamClientCallBack)sub_1000366C4, &clientContext))
  {
    char v34 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
      goto LABEL_72;
    }
    LOWORD(__lk.__m_) = 0;
    unint64_t v35 = "#supl,connect,unable to set write stream client";
    goto LABEL_104;
  }
  CFReadStreamSetDispatchQueue(*(CFReadStreamRef *)(a1 + 8), *(dispatch_queue_t *)(a1 + 64));
  CFWriteStreamSetDispatchQueue(*(CFWriteStreamRef *)(a1 + 16), *(dispatch_queue_t *)(a1 + 64));
  if (!CFReadStreamOpen(*v12))
  {
    char v36 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      LOWORD(__lk.__m_) = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_ERROR, "#supl,connect,read stream open failed", (uint8_t *)&__lk, 2u);
    }
    Status = (std::unique_lock<std::mutex>::mutex_type *)CFReadStreamGetStatus(*v12);
    char v38 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      LODWORD(__lk.__m_) = 134349056;
      *(std::unique_lock<std::mutex>::mutex_type **)((char *)&__lk.__m_ + 4) = Status;
      _os_log_error_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_ERROR, "#supl,read stream in bad state streamStatus,%{public}lu", (uint8_t *)&__lk, 0xCu);
    }
    int v39 = CFReadStreamCopyError(*v12);
    sub_100036AC8(a1, v39);
    goto LABEL_70;
  }
  if (!CFWriteStreamOpen(*v13))
  {
    char v42 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      LOWORD(__lk.__m_) = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_ERROR, "#supl,connect,write stream open failed", (uint8_t *)&__lk, 2u);
    }
    uint64_t v43 = (std::unique_lock<std::mutex>::mutex_type *)CFWriteStreamGetStatus(*v13);
    uint64_t v44 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      LODWORD(__lk.__m_) = 134349056;
      *(std::unique_lock<std::mutex>::mutex_type **)((char *)&__lk.__m_ + 4) = v43;
      _os_log_error_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_ERROR, "#supl,write stream in bad state streamStatus,%{public}lu", (uint8_t *)&__lk, 0xCu);
    }
    int v39 = CFWriteStreamCopyError(*v13);
    sub_100036AC8(a1, v39);
LABEL_70:
    if (v39) {
      CFRelease(v39);
    }
    goto LABEL_72;
  }
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 80);
  __lk.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 80));
  v28.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_ + 10000000000;
  while (!*(unsigned char *)(a1 + 72))
  {
    if (std::chrono::steady_clock::now().__d_.__rep_ >= v28.__d_.__rep_) {
      goto LABEL_49;
    }
    v29.__d_.__rep_ = v28.__d_.__rep_ - std::chrono::steady_clock::now().__d_.__rep_;
    if (v29.__d_.__rep_ >= 1)
    {
      std::chrono::steady_clock::now();
      v30.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
      if (!v30.__d_.__rep_)
      {
        std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v31 = 0;
        goto LABEL_44;
      }
      if (v30.__d_.__rep_ < 1)
      {
        if ((unint64_t)v30.__d_.__rep_ >= 0xFFDF3B645A1CAC09) {
          goto LABEL_43;
        }
        std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v31 = 0x8000000000000000;
      }
      else
      {
        if ((unint64_t)v30.__d_.__rep_ > 0x20C49BA5E353F7)
        {
          std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v31 = 0x7FFFFFFFFFFFFFFFLL;
          goto LABEL_44;
        }
LABEL_43:
        std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v31 = 1000 * v30.__d_.__rep_;
LABEL_44:
        if (v31 > (v29.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
        {
          v32.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
LABEL_47:
          std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 144), &__lk, v32);
          std::chrono::steady_clock::now();
          goto LABEL_48;
        }
      }
      v32.__d_.__rep_ = v31 + v29.__d_.__rep_;
      goto LABEL_47;
    }
LABEL_48:
    if (std::chrono::steady_clock::now().__d_.__rep_ >= v28.__d_.__rep_)
    {
LABEL_49:
      BOOL v33 = *(unsigned char *)(a1 + 72) != 0;
      goto LABEL_83;
    }
  }
  BOOL v33 = 1;
LABEL_83:
  if (!__lk.__owns_)
  {
    std::__throw_system_error(1, "unique_lock::unlock: not locked");
    __break(1u);
    return;
  }
  std::mutex::unlock(__lk.__m_);
  __lk.__owns_ = 0;
  unint64_t v47 = *(NSObject **)(a1 + 64);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100036A84;
  block[3] = &unk_100104D40;
  block[4] = a1;
  dispatch_sync(v47, block);
  if (!v33)
  {
    int v48 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_ERROR, "#supl,connect,timeout waiting for connection", buf, 2u);
    }
  }
  if (!*(unsigned char *)(a1 + 193))
  {
    sub_1000368CC(a1);
LABEL_95:
    sub_100036508(*(void *)(a1 + 288), 3);
    goto LABEL_96;
  }
  if (!*(unsigned char *)(a1 + 194))
  {
    sub_1000369A8(a1);
    goto LABEL_95;
  }
  __int16 v49 = qword_100114840;
  if (*(unsigned char *)(a1 + 192))
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "#supl,connect,success", buf, 2u);
    }
    atomic_store(1u, (unsigned __int8 *)(a1 + 28));
    std::string::operator=((std::string *)(a1 + 32), (const std::string *)a2);
    *(_WORD *)(a1 + 56) = a3;
    sub_100036508(*(void *)(a1 + 288), 2);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_ERROR, "#supl,connect,SSL failure", buf, 2u);
    }
    sub_100034E94(a1);
    sub_100036508(*(void *)(a1 + 288), 3);
  }
LABEL_96:
  if (__lk.__owns_) {
    std::mutex::unlock(__lk.__m_);
  }
LABEL_73:
  if (SHIBYTE(v55) < 0) {
    operator delete(__p[0]);
  }
}

void sub_100036434(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,void *a48,uint64_t a49,int a50,__int16 a51,char a52,char a53)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100036508(uint64_t a1, int a2)
{
  int v3 = a2;
  if (!a1) {
    sub_100003600();
  }
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)a1 + 48))(a1, &v3);
}

void sub_100036558(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (a2 == 8)
  {
    int v6 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v8) = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "#supl,processREvent,read stream error", (uint8_t *)&v8, 2u);
    }
    a3[193] = 0;
    goto LABEL_10;
  }
  if (a2 == 1)
  {
    SecCertificateRef v5 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v8) = 0;
      _os_log_debug_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "#supl,processREvent,read stream opened", (uint8_t *)&v8, 2u);
    }
    a3[193] = 1;
    if (a3[195])
    {
      a3[192] = sub_100034F44((uint64_t)a3);
LABEL_10:
      sub_10003576C((uint64_t)a3);
    }
  }
  else
  {
    uint64_t v7 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      int v8 = 134217984;
      uint64_t v9 = a2;
      _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "#supl,processREvent,unsupported event,%lu", (uint8_t *)&v8, 0xCu);
    }
  }
}

void sub_1000366C4(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (a2 == 8)
  {
    int v6 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v13) = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "#supl write stream error", (uint8_t *)&v13, 2u);
    }
    a3[194] = 0;
    goto LABEL_14;
  }
  if (a2 == 4)
  {
    uint64_t v7 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v13) = 0;
      _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "#supl write stream can accept bytes", (uint8_t *)&v13, 2u);
    }
    a3[195] = 1;
    if (!a3[193])
    {
      uint64_t v12 = qword_100114840;
      if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG)) {
        return;
      }
      LOWORD(v13) = 0;
      uint64_t v9 = "#supl read stream not opened yet";
      OSStatus v10 = v12;
      uint32_t v11 = 2;
LABEL_20:
      _os_log_debug_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, v9, (uint8_t *)&v13, v11);
      return;
    }
    a3[192] = sub_100034F44((uint64_t)a3);
LABEL_14:
    sub_10003576C((uint64_t)a3);
    return;
  }
  if (a2 != 1)
  {
    uint64_t v8 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG)) {
      return;
    }
    int v13 = 134217984;
    uint64_t v14 = a2;
    uint64_t v9 = "#supl write event not supported event=%lu";
    OSStatus v10 = v8;
    uint32_t v11 = 12;
    goto LABEL_20;
  }
  SecCertificateRef v5 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v13) = 0;
    _os_log_debug_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "#supl write stream opened", (uint8_t *)&v13, 2u);
  }
  a3[194] = 1;
}

void sub_1000368CC(uint64_t a1)
{
  CFStreamStatus Status = CFReadStreamGetStatus(*(CFReadStreamRef *)(a1 + 8));
  int v3 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    int v5 = 134349056;
    CFStreamStatus v6 = Status;
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "#supl,read stream in bad state streamStatus,%{public}lu", (uint8_t *)&v5, 0xCu);
  }
  SecCertificateRef v4 = CFReadStreamCopyError(*(CFReadStreamRef *)(a1 + 8));
  sub_100036AC8(a1, v4);
  if (v4) {
    CFRelease(v4);
  }
}

void sub_1000369A8(uint64_t a1)
{
  CFStreamStatus Status = CFWriteStreamGetStatus(*(CFWriteStreamRef *)(a1 + 16));
  int v3 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    int v5 = 134349056;
    CFStreamStatus v6 = Status;
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "#supl,write stream in bad state streamStatus,%{public}lu", (uint8_t *)&v5, 0xCu);
  }
  SecCertificateRef v4 = CFWriteStreamCopyError(*(CFWriteStreamRef *)(a1 + 16));
  sub_100036AC8(a1, v4);
  if (v4) {
    CFRelease(v4);
  }
}

void sub_100036A84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  CFReadStreamSetDispatchQueue(*(CFReadStreamRef *)(v1 + 8), 0);
  uint64_t v2 = *(__CFWriteStream **)(v1 + 16);

  CFWriteStreamSetDispatchQueue(v2, 0);
}

std::string *sub_100036AC8(uint64_t a1, CFErrorRef err)
{
  if (err && CFErrorGetCode(err))
  {
    sub_100034924((uint64_t)v19);
    sub_100007D6C(v20, (uint64_t)"domain,", 7);
    CFStringRef Domain = CFErrorGetDomain(err);
    CStringPtr = CFStringGetCStringPtr(Domain, 0x8000100u);
    uint64_t v6 = (uint64_t)CStringPtr;
    if (CStringPtr)
    {
      size_t v7 = strlen(CStringPtr);
      uint64_t v8 = sub_100007D6C(v20, v6, v7);
      uint64_t v9 = ",";
      uint64_t v10 = 1;
    }
    else
    {
      uint64_t v9 = "unkwn,";
      uint64_t v10 = 6;
      uint64_t v8 = v20;
    }
    sub_100007D6C(v8, (uint64_t)v9, v10);
    sub_100007D6C(v20, (uint64_t)"streamErrCode,", 14);
    CFErrorGetCode(err);
    uint64_t v12 = (void *)std::ostream::operator<<();
    sub_100007D6C(v12, (uint64_t)",streamErrDescription,", 22);
    CFStringRef v13 = CFErrorCopyDescription(err);
    uint64_t v14 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      std::stringbuf::str();
      uint64_t v16 = v18 >= 0 ? &v17 : (void **)v17;
      *(_DWORD *)audit_token_t buf = 136446210;
      CFStringRef v23 = v16;
      _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "#supl,err,%{public}s", buf, 0xCu);
      if (v18 < 0) {
        operator delete(v17);
      }
    }
    CFRelease(v13);
    sub_100034E94(a1);
    *(void *)((char *)v19
    v20[0] = v15;
    if (v21 < 0) {
      operator delete((void *)v20[9]);
    }
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    return (std::string *)std::ios::~ios();
  }
  else
  {
    return sub_100034E94(a1);
  }
}

void sub_100036DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_100029F48((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100036E10(uint64_t a1)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)(a1 + 28));
  if ((v2 & 1) == 0)
  {
    int v3 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
    {
LABEL_3:
      sub_100036508(*(void *)(a1 + 288), 12);
      return 4294967293;
    }
    *(_WORD *)audit_token_t buf = 0;
    uint64_t v8 = "#supl connection not open";
    uint64_t v9 = buf;
LABEL_11:
    _os_log_fault_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, v8, v9, 2u);
    goto LABEL_3;
  }
  int v5 = (unsigned int *)(a1 + 24);
  uint64_t result = *(unsigned int *)(a1 + 24);
  if (result == -1)
  {
    CFDataRef v6 = (const __CFData *)CFReadStreamCopyProperty(*(CFReadStreamRef *)(a1 + 8), kCFStreamPropertySocketNativeHandle);
    if (!v6)
    {
      int v3 = qword_100114840;
      if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT)) {
        goto LABEL_3;
      }
      __int16 v10 = 0;
      uint64_t v8 = "#supl couldn't obtain fd of fReadStream";
      uint64_t v9 = (uint8_t *)&v10;
      goto LABEL_11;
    }
    CFDataRef v7 = v6;
    v12.location = 0;
    v12.size_t length = 4;
    CFDataGetBytes(v6, v12, (UInt8 *)(a1 + 24));
    CFRelease(v7);
    return *v5;
  }
  return result;
}

CFIndex sub_100036F20(uint64_t a1, uint64_t a2)
{
  sub_100037468(__p, 0x800uLL);
  SecCertificateRef v4 = (UInt8 *)__p[0];
  CFIndex v5 = (char *)__p[1] - (char *)__p[0];
  if (__p[0]) {
    BOOL v6 = __p[1] == __p[0];
  }
  else {
    BOOL v6 = 1;
  }
  if (v6)
  {
    CFDataRef v7 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)audit_token_t buf = 67240448;
      BOOL v18 = v4 == 0;
      __int16 v19 = 2050;
      CFIndex v20 = v5;
      _os_log_fault_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "#supl bad inputs nullBuf,%{public}d,size,%{public}zu", buf, 0x12u);
    }
    sub_100036508(*(void *)(a1 + 288), 7);
    CFIndex v8 = 4294967292;
    goto LABEL_23;
  }
  unsigned __int8 v9 = atomic_load((unsigned __int8 *)(a1 + 28));
  if ((v9 & 1) == 0)
  {
    __int16 v10 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_fault_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "#supl connection not open", buf, 2u);
    }
LABEL_12:
    sub_100036508(*(void *)(a1 + 288), 6);
    CFIndex v8 = 4294967293;
    goto LABEL_23;
  }
  if (!CFReadStreamHasBytesAvailable(*(CFReadStreamRef *)(a1 + 8)))
  {
    CFRange v12 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "#supl CFReadStreamHasBytesAvailable failed", buf, 2u);
    }
    CFIndex v8 = 0;
    goto LABEL_23;
  }
  CFIndex v8 = CFReadStreamRead(*(CFReadStreamRef *)(a1 + 8), v4, v5);
  uint32_t v11 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)audit_token_t buf = 67240192;
    BOOL v18 = v8;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#supl Read retVal,%{public}d", buf, 8u);
  }
  if ((v8 & 0x80000000) != 0) {
    goto LABEL_12;
  }
  SuplPduLog::traceSuplPdu((SuplPduLog *)v4, (const unsigned __int8 *)v8, 1);
  if (!v8)
  {
LABEL_23:
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    return v8;
  }
  if ((void *)v8 <= (void *)((char *)__p[1] - (char *)__p[0]))
  {
    if ((void *)v8 < (void *)((char *)__p[1] - (char *)__p[0])) {
      __p[1] = (char *)__p[0] + v8;
    }
  }
  else
  {
    sub_100028718((unint64_t *)__p, v8 - (unint64_t)((char *)__p[1] - (char *)__p[0]));
  }
  uint64_t v14 = *(void **)a2;
  if (*(void *)a2)
  {
    *(void *)(a2 + 8) = v14;
    operator delete(v14);
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
  }
  *(_OWORD *)a2 = *(_OWORD *)__p;
  *(void *)(a2 + 16) = v16;
  return v8;
}

void sub_1000371BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
}

uint64_t sub_1000371E0(uint64_t a1, UInt8 **a2)
{
  SecCertificateRef v4 = *a2;
  int v3 = a2[1];
  CFIndex v5 = (const unsigned __int8 *)(v3 - *a2);
  if (*a2) {
    BOOL v6 = v3 == v4;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6)
  {
    CFDataRef v7 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
    {
      int v13 = 67240448;
      BOOL v14 = v4 == 0;
      __int16 v15 = 2050;
      uint64_t v16 = v5;
      _os_log_fault_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "#supl,writeHelper,bad_inputs,nullBuf,%{public}d,size,%{public}zu", (uint8_t *)&v13, 0x12u);
    }
    sub_100036508(*(void *)(a1 + 288), 9);
    return 4294967292;
  }
  else
  {
    unsigned __int8 v9 = atomic_load((unsigned __int8 *)(a1 + 28));
    if ((v9 & 1) == 0)
    {
      __int16 v10 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        LOWORD(v13) = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "#supl,writeHelper,not open", (uint8_t *)&v13, 2u);
      }
LABEL_16:
      sub_100036508(*(void *)(a1 + 288), 8);
      return 4294967293;
    }
    CFIndex v8 = CFWriteStreamWrite(*(CFWriteStreamRef *)(a1 + 16), *a2, (CFIndex)v5);
    uint32_t v11 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = 67240192;
      BOOL v14 = v8;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#supl,writeHelper,retVal,%{public}d", (uint8_t *)&v13, 8u);
    }
    if ((v8 & 0x80000000) != 0) {
      goto LABEL_16;
    }
    SuplPduLog::traceSuplPdu((SuplPduLog *)v4, v5, 0);
  }
  return v8;
}

uint64_t sub_1000373AC(uint64_t a1)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)(a1 + 28));
  if (v2)
  {
    sub_100034E94(a1);
    sub_100036508(*(void *)(a1 + 288), 10);
    return 4294967294;
  }
  else
  {
    int v3 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)CFIndex v5 = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "#supl,close,not_open", v5, 2u);
    }
    sub_100036508(*(void *)(a1 + 288), 11);
    return 4294967293;
  }
}

void sub_100037450()
{
}

void *sub_100037468(void *a1, size_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_10001F810(a1, a2);
    SecCertificateRef v4 = (char *)a1[1];
    CFIndex v5 = &v4[a2];
    bzero(v4, a2);
    a1[1] = v5;
  }
  return a1;
}

void sub_1000374C0(_Unwind_Exception *exception_object)
{
  int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000374DC()
{
  if (CLP::LogEntry::LogEntry::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CLP::LogEntry::LogEntry::default_instance_ + 8))(CLP::LogEntry::LogEntry::default_instance_);
  }
  uint64_t result = qword_1001142C0;
  if (qword_1001142C0)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_1001142C0 + 8);
    return v1();
  }
  return result;
}

double sub_100037564(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 44);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 44))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 44) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 44);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(double *)(a1 + 16) = result;
    int v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return result;
      }
      goto LABEL_8;
    }
LABEL_12:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(double *)(a1 + 24) = result;
    if ((*(_DWORD *)(a2 + 44) & 8) == 0) {
      return result;
    }
LABEL_8:
    uint64_t v6 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(void *)(a1 + 32) = v6;
  }
  return result;
}

void sub_100037658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100037670(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100107680;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100037690(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100107680;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000376E4()
{
}

uint64_t sub_10003773C(uint64_t result)
{
  if (*(unsigned char *)(result + 44))
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_100037758(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_24;
        }
        unint64_t v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v16;
        *(_DWORD *)(a1 + 44) |= 1u;
        CFIndex v8 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 != 17) {
          continue;
        }
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_24;
        }
LABEL_14:
        unint64_t v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v16;
        *(_DWORD *)(a1 + 44) |= 2u;
        unsigned __int8 v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 != 25) {
          continue;
        }
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        unint64_t v16 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16))
        {
          *(void *)(a1 + 24) = v16;
          *(_DWORD *)(a1 + 44) |= 4u;
          uint32_t v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 < v10 && *v11 == 32)
          {
            CFRange v12 = v11 + 1;
            *((void *)this + 1) = v12;
LABEL_28:
            unint64_t v16 = 0;
            if ((unint64_t)v12 >= v10 || *v12 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v16);
              if (!result) {
                return result;
              }
              unint64_t v13 = v16;
              BOOL v14 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v10 = *((void *)this + 2);
            }
            else
            {
              unint64_t v13 = *v12;
              BOOL v14 = (unsigned __int8 *)(v12 + 1);
              *((void *)this + 1) = v14;
            }
            *(void *)(a1 + 32) = v13;
            *(_DWORD *)(a1 + 44) |= 8u;
            if (v14 == (unsigned __int8 *)v10
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_19;
        }
        goto LABEL_24;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        CFRange v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_28;
      default:
        int v7 = TagFallback & 7;
LABEL_24:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000379C0(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
      if ((*(_DWORD *)(v5 + 44) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v7 = *(void *)(v5 + 32);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_100037A68(uint64_t a1, unint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 44);
  if (*(unsigned char *)(a1 + 44))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 8) != 0) {
      uint64_t v5 = v5
    }
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 32), a2)+ 1;
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

double sub_100037AD8(uint64_t a1, void *lpsrc)
{
  return sub_100037564(a1, (uint64_t)lpsrc);
}

uint64_t sub_100037B7C()
{
  return 1;
}

void *sub_100037B84@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.LogEntry.TimeStamp");
}

CLP::LogEntry::LogEntry *CLP::LogEntry::LogEntry::LogEntry(CLP::LogEntry::LogEntry *this)
{
  *(void *)this = &off_1001076F8;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((CLP::LogEntry::LogEntry *)((char *)this + 8));
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  return this;
}

void sub_100037BE0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CLP::LogEntry::LogEntry::~LogEntry(CLP::LogEntry::LogEntry *this)
{
  *(void *)this = &off_1001076F8;
  unsigned __int8 v2 = (CLP::LogEntry::LogEntry *)((char *)this + 8);
  CLP::LogEntry::LogEntry::SharedDtor(this);
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::~ExtensionSet(v2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void *CLP::LogEntry::LogEntry::SharedDtor(void *this)
{
  if ((void *)CLP::LogEntry::LogEntry::default_instance_ != this)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[4];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    this = (void *)v1[5];
    if (this)
    {
      int v3 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v3();
    }
  }
  return this;
}

void sub_100037CF8(CLP::LogEntry::LogEntry *a1)
{
  CLP::LogEntry::LogEntry::~LogEntry(a1);

  operator delete();
}

void sub_100037D30()
{
}

void sub_100037D70()
{
}

uint64_t sub_100037D94(uint64_t a1)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::ExtensionSet::Clear((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8));
  LOBYTE(v3) = *(unsigned char *)(a1 + 52);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 52))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 44))
        {
          *(_OWORD *)(v4 + 24) = 0u;
          *(_OWORD *)(v4 + 8) = 0u;
        }
        *(_DWORD *)(v4 + 44) = 0;
        int v3 = *(_DWORD *)(a1 + 52);
      }
    }
    if ((v3 & 2) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 40);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 20))
        {
          uint64_t result = *(void *)(v5 + 8);
          if (result) {
            uint64_t result = proto::gpsd::LogEntry::Clear(result);
          }
        }
        *(_DWORD *)(v5 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(a1 + 52) = 0;
  return result;
}

uint64_t sub_100037E14(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v6;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        uint64_t v9 = *(void *)(a1 + 32);
        if (!v9) {
          operator new();
        }
        unsigned int v28 = 0;
        unint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28))return 0; {
        }
          }
        else
        {
          unsigned int v28 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        int v11 = *((_DWORD *)this + 14);
        int v12 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0;
        }
        int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v28);
        if (!sub_100037758(v9, this, v14) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
        int v15 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)this + 14) = v17;
        }
        BOOL v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 34)
        {
          *((void *)this + 1) = v18 + 1;
          goto LABEL_33;
        }
      }
      if (TagFallback >> 3 != 4) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_18;
      }
LABEL_33:
      *(_DWORD *)(a1 + 52) |= 2u;
      __int16 v19 = *(CLP::LogEntry::PrivateData::PrivateDataCapture **)(a1 + 40);
      if (!v19) {
        operator new();
      }
      unsigned int v29 = 0;
      CFIndex v20 = (char *)*((void *)this + 1);
      if ((unint64_t)v20 >= *((void *)this + 2) || *v20 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29))return 0; {
      }
        }
      else
      {
        unsigned int v29 = *v20;
        *((void *)this + 1) = v20 + 1;
      }
      int v21 = *((_DWORD *)this + 14);
      int v22 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v21 + 1;
      if (v21 >= v22) {
        return 0;
      }
      int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v29);
      if (!CLP::LogEntry::PrivateData::PrivateDataCapture::MergePartialFromCodedStream(v19, this, v24)
        || !*((unsigned char *)this + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
      int v25 = *((_DWORD *)this + 14);
      BOOL v16 = __OFSUB__(v25, 1);
      int v26 = v25 - 1;
      if (v26 < 0 == v16) {
        *((_DWORD *)this + 14) = v26;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1;
    }
    if ((TagFallback & 0xFFFFFFF8) == 0x10)
    {
      if ((wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField(v5, TagFallback, this, (const wireless_diagnostics::google::protobuf::MessageLite *)CLP::LogEntry::LogEntry::default_instance_) & 1) == 0)return 0; {
    }
      }
    else if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)
    {
      return 0;
    }
  }
}

uint64_t sub_100038144(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (!v6) {
      uint64_t v6 = *(void *)(CLP::LogEntry::LogEntry::default_instance_ + 32);
    }
    wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizes((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8), 2, 3, a2);
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    uint64_t v9 = *(void *)(a1 + 40);
    if (!v9) {
      uint64_t v9 = *(void *)(CLP::LogEntry::LogEntry::default_instance_ + 40);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, v8);
  }
  return result;
}

uint64_t sub_1000381E4(uint64_t a1, unint64_t a2)
{
  if (!*(unsigned char *)(a1 + 52))
  {
    int v3 = 0;
    goto LABEL_18;
  }
  if ((*(unsigned char *)(a1 + 52) & 1) == 0)
  {
    int v3 = 0;
    if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4) {
    uint64_t v4 = *(void *)(CLP::LogEntry::LogEntry::default_instance_ + 32);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100037A68(v4, a2);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  }
  else {
    int v7 = 1;
  }
  int v3 = v6 + v7 + 1;
  if ((*(_DWORD *)(a1 + 52) & 2) != 0)
  {
LABEL_12:
    int v8 = *(CLP::LogEntry::PrivateData::PrivateDataCapture **)(a1 + 40);
    if (!v8) {
      int v8 = *(CLP::LogEntry::PrivateData::PrivateDataCapture **)(CLP::LogEntry::LogEntry::default_instance_ + 40);
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CLP::LogEntry::PrivateData::PrivateDataCapture::ByteSize(v8, a2);
    int v11 = (int)v9;
    if (v9 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
    }
    else {
      int v12 = 1;
    }
    v3 += v11 + v12 + 1;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::ExtensionSet::ByteSize((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8))
         + v3;
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

uint64_t sub_1000382C0(uint64_t a1, char *lpsrc)
{
  if (lpsrc == (char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = lpsrc[52];
  if ((_BYTE)v4)
  {
    if (lpsrc[52])
    {
      *(_DWORD *)(a1 + 52) |= 1u;
      uint64_t v5 = *(void *)(a1 + 32);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *((void *)lpsrc + 4);
      if (!v6) {
        uint64_t v6 = *(void *)(CLP::LogEntry::LogEntry::default_instance_ + 32);
      }
      sub_100037564(v5, v6);
      int v4 = *((_DWORD *)lpsrc + 13);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 52) |= 2u;
      int v7 = *(CLP::LogEntry::PrivateData::PrivateDataCapture **)(a1 + 40);
      if (!v7) {
        operator new();
      }
      int v8 = (const CLP::LogEntry::PrivateData::PrivateDataCapture *)*((void *)lpsrc + 5);
      if (!v8) {
        int v8 = *(const CLP::LogEntry::PrivateData::PrivateDataCapture **)(CLP::LogEntry::LogEntry::default_instance_ + 40);
      }
      CLP::LogEntry::PrivateData::PrivateDataCapture::MergeFrom(v7, v8);
    }
  }
  return wireless_diagnostics::google::protobuf::internal::ExtensionSet::MergeFrom((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(lpsrc + 8));
}

void sub_100038494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000384AC(uint64_t a1)
{
  return wireless_diagnostics::google::protobuf::internal::ExtensionSet::IsInitialized(a1 + 8);
}

void *sub_1000384B4@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.LogEntry");
}

uint64_t sub_1000384C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1000384CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

void sub_1000384D4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_1001142B8 & 1) == 0)
  {
    byte_1001142B8 = 1;
    int v4 = (CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"Sources/Protobuf/Generated/CLPLogEntry.pb.cc", a4);
    CLP::LogEntry::PrivateData::protobuf_AddDesc_CLPPrivateDataCapture_2eproto(v4, v5, v6, v7);
    operator new();
  }
}

void sub_1000385E8()
{
}

uint64_t sub_10003860C(uint64_t a1)
{
  if (*(char *)(a1 + 119) < 0) {
    operator delete(*(void **)(a1 + 96));
  }
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void ProtobufLogger::ProtobufLogger(ProtobufLogger *this)
{
  VendorLogger::generateDefaultConfig((uint64_t)&v7);
  std::string::assign(&v7, "proto");
  std::string::assign(&v12, "bin");
  memset_pattern16(v17, &unk_1000E7BF0, 0x24uLL);
  v16 |= 0x40uLL;
  v17[36] = 0;
  uint64_t v2 = (id *)GpsdPreferences::instance(0);
  GpsdPreferences::protobufLogDirectory(v2, &v18);
  if (SHIBYTE(v14) < 0) {
    operator delete((void *)__p);
  }
  long long __p = v18;
  uint64_t v14 = v19;
  int v3 = (id *)GpsdPreferences::instance(0);
  GpsdPreferences::protobufLogRetentionDays(v3);
  double v15 = (float)((float)(v4 * 24.0) * 3600.0);
  VendorLogger::VendorLogger((char *)this, (long long *)&v7);
  if (SHIBYTE(v14) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
  if (v11 < 0) {
    operator delete(v10);
  }
  if (v9 < 0) {
    operator delete(v8);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  *(_OWORD *)((char *)this + 920) = 0u;
  *(_OWORD *)((char *)this + 936) = 0u;
  *(_OWORD *)((char *)this + 904) = 0u;
  *((void *)this + 119) = 850045863;
  *((_OWORD *)this + 60) = 0u;
  *((_OWORD *)this + 61) = 0u;
  *((_OWORD *)this + 62) = 0u;
  *((_OWORD *)this + 63) = 0u;
  *((_OWORD *)this + 64) = 0u;
  uint64_t v5 = (char *)operator new(3uLL);
  *((void *)this + 127) = v5;
  *((void *)this + 129) = v5 + 3;
  *(_WORD *)uint64_t v5 = 32126;
  _DWORD v5[2] = 1;
  *((void *)this + 128) = v5 + 3;
  uint64_t v6 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    LOWORD(v7.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "#protoLogger,created", (uint8_t *)&v7, 2u);
  }
}

void sub_100038854(_Unwind_Exception *a1)
{
  float v4 = v2;
  std::mutex::~mutex(v4);
  uint64_t v6 = (void *)*((void *)v1 + 116);
  if (v6)
  {
    *((void *)v1 + 117) = v6;
    operator delete(v6);
  }
  std::string v7 = *v3;
  if (*v3)
  {
    *((void *)v1 + 114) = v7;
    operator delete(v7);
  }
  VendorLogger::~VendorLogger(v1);
  _Unwind_Resume(a1);
}

void ProtobufLogger::log(ProtobufLogger *this, const CLP::LogEntry::LogEntry *a2)
{
  uint64_t v4 = *((void *)a2 + 5);
  if (!v4) {
    uint64_t v4 = *(void *)(CLP::LogEntry::LogEntry::default_instance_ + 40);
  }
  uint64_t v5 = *(void *)(v4 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 8);
  }
  if ((*(unsigned char *)(v5 + 52) & 4) != 0)
  {
    uint64_t v6 = *(void *)(v5 + 24);
    if (!v6) {
      uint64_t v6 = *(void *)(proto::gpsd::LogEntry::default_instance_ + 24);
    }
    if (*(_DWORD *)(v6 + 20) == 1) {
      VendorLogger::notifyStart(this);
    }
  }
  ProtobufLogger::logInternal(this, a2);
  if ((*(unsigned char *)(v5 + 52) & 8) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 32);
    if (!v7) {
      uint64_t v7 = *(void *)(proto::gpsd::LogEntry::default_instance_ + 32);
    }
    if (*(_DWORD *)(v7 + 16) == 2)
    {
      VendorLogger::notifyStop(this);
    }
  }
}

void ProtobufLogger::logInternal(ProtobufLogger *this, const wireless_diagnostics::google::protobuf::MessageLite *a2)
{
  uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::MessageLite *))(*(void *)a2 + 72))(a2);
  if ((v4 & 0x80000000) == 0)
  {
    unsigned int v6 = v4;
    if (v4 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, v5);
    }
    else {
      int v7 = 1;
    }
    unint64_t v8 = v7 + (unint64_t)v6;
    char v9 = (std::mutex *)((char *)this + 952);
    std::mutex::lock((std::mutex *)((char *)this + 952));
    unsigned int v10 = (char *)*((void *)this + 113);
    unint64_t v11 = *((void *)this + 114) - (void)v10;
    BOOL v12 = v8 + 4 >= v11;
    size_t v13 = v8 + 4 - v11;
    if (v13 != 0 && v12)
    {
      sub_100028718((unint64_t *)this + 113, v13);
      unsigned int v10 = (char *)*((void *)this + 113);
    }
    else if (!v12)
    {
      *((void *)this + 114) = &v10[v8 + 4];
    }
    wireless_diagnostics::google::protobuf::io::ArrayOutputStream::ArrayOutputStream((wireless_diagnostics::google::protobuf::io::ArrayOutputStream *)v60, v10, v8 + 4, -1);
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::CodedOutputStream();
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v59, v6);
    if ((wireless_diagnostics::google::protobuf::MessageLite::SerializeToCodedStream(a2, (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v59) & 1) == 0)
    {
      int v23 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)audit_token_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "#protoLogger,serialize failed", buf, 2u);
      }
LABEL_79:
      wireless_diagnostics::google::protobuf::io::CodedOutputStream::~CodedOutputStream((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v59);
      wireless_diagnostics::google::protobuf::io::ArrayOutputStream::~ArrayOutputStream((wireless_diagnostics::google::protobuf::io::ArrayOutputStream *)v60);
      std::mutex::unlock(v9);
      return;
    }
    unsigned int v14 = cnlogging::details::CNProtobufStreamChecksum::adler32();
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian32((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v59, v14);
    double v15 = (unint64_t *)((char *)this + 928);
    *((void *)this + 117) = *((void *)this + 116);
    sub_100017B68((unint64_t *)this + 116, v8 + 20);
    uint64_t v16 = (char *)*((void *)this + 127);
    int v17 = (unsigned char *)*((void *)this + 128);
    unint64_t v18 = v17 - v16;
    unint64_t v19 = *((void *)this + 118);
    CFIndex v20 = (char *)*((void *)this + 116);
    if (v19 - (unint64_t)v20 >= v17 - v16)
    {
      unsigned int v24 = (unsigned char *)*((void *)this + 117);
      size_t v25 = v24 - v20;
      if (v24 - v20 < v18)
      {
        int v26 = &v16[v25];
        if (v24 != v20)
        {
          memmove(*((void **)this + 116), *((const void **)this + 127), v25);
          CFIndex v20 = (char *)*((void *)this + 117);
        }
        if (v17 != v26) {
          memmove(v20, v26, v17 - v26);
        }
        CFStringRef v27 = &v20[v17 - v26];
        goto LABEL_32;
      }
    }
    else
    {
      if (v20)
      {
        *((void *)this + 117) = v20;
        operator delete(v20);
        unint64_t v19 = 0;
        *double v15 = 0;
        *((void *)this + 117) = 0;
        *((void *)this + 118) = 0;
      }
      if ((v18 & 0x8000000000000000) != 0) {
        sub_100007204();
      }
      uint64_t v21 = 2 * v19;
      if (2 * v19 <= v18) {
        uint64_t v21 = v17 - v16;
      }
      if (v19 >= 0x3FFFFFFFFFFFFFFFLL) {
        size_t v22 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        size_t v22 = v21;
      }
      sub_10001F810((void *)this + 116, v22);
      CFIndex v20 = (char *)*((void *)this + 117);
    }
    if (v17 != v16) {
      memmove(v20, v16, v17 - v16);
    }
    CFStringRef v27 = &v20[v18];
LABEL_32:
    std::string v57 = (void **)((char *)this + 904);
    *((void *)this + 117) = v27;
    uint64_t v28 = *((void *)this + 113);
    if (*((void *)this + 114) == v28)
    {
      uint64_t v44 = v27;
    }
    else
    {
      unint64_t v29 = 0;
      BOOL v30 = 0;
      do
      {
        if (v30 && (*(unsigned __int8 *)(v28 + v29) | 0x20) == 0x7D)
        {
          unint64_t v31 = *((void *)this + 118);
          if ((unint64_t)v27 >= v31)
          {
            unint64_t v33 = *v15;
            char v34 = &v27[-*v15];
            unint64_t v35 = (unint64_t)(v34 + 1);
            if ((uint64_t)(v34 + 1) < 0) {
              goto LABEL_81;
            }
            unint64_t v36 = v31 - v33;
            if (2 * v36 > v35) {
              unint64_t v35 = 2 * v36;
            }
            if (v36 >= 0x3FFFFFFFFFFFFFFFLL) {
              size_t v37 = 0x7FFFFFFFFFFFFFFFLL;
            }
            else {
              size_t v37 = v35;
            }
            if (v37) {
              char v38 = (char *)operator new(v37);
            }
            else {
              char v38 = 0;
            }
            int v39 = &v34[(void)v38];
            char v40 = &v34[(void)v38];
            *char v40 = 93;
            std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v32 = v40 + 1;
            if (v27 != (char *)v33)
            {
              CFIndex v41 = &v27[~v33];
              do
              {
                char v42 = *--v27;
                (v41--)[(void)v38] = v42;
              }
              while (v27 != (char *)v33);
              CFStringRef v27 = (char *)*v15;
              int v39 = v38;
            }
            *((void *)this + 116) = v39;
            *((void *)this + 117) = v32;
            *((void *)this + 118) = &v38[v37];
            if (v27) {
              operator delete(v27);
            }
          }
          else
          {
            *CFStringRef v27 = 93;
            std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v32 = v27 + 1;
          }
          *((void *)this + 117) = v32;
          uint64_t v28 = *((void *)this + 113);
          CFStringRef v27 = v32;
        }
        unint64_t v43 = *((void *)this + 118);
        if ((unint64_t)v27 >= v43)
        {
          unint64_t v45 = *v15;
          int v46 = &v27[-*v15];
          unint64_t v47 = (unint64_t)(v46 + 1);
          if ((uint64_t)(v46 + 1) < 0) {
LABEL_81:
          }
            sub_100007204();
          unint64_t v48 = v43 - v45;
          if (2 * v48 > v47) {
            unint64_t v47 = 2 * v48;
          }
          if (v48 >= 0x3FFFFFFFFFFFFFFFLL) {
            size_t v49 = 0x7FFFFFFFFFFFFFFFLL;
          }
          else {
            size_t v49 = v47;
          }
          if (v49) {
            int v50 = (char *)operator new(v49);
          }
          else {
            int v50 = 0;
          }
          __int16 v51 = &v46[(void)v50];
          uint64_t v52 = &v46[(void)v50];
          *uint64_t v52 = *(unsigned char *)(v28 + v29);
          uint64_t v44 = v52 + 1;
          if (v27 != (char *)v45)
          {
            uint64_t v53 = &v27[~v45];
            do
            {
              char v54 = *--v27;
              (v53--)[(void)v50] = v54;
            }
            while (v27 != (char *)v45);
            CFStringRef v27 = (char *)*v15;
            __int16 v51 = v50;
          }
          *((void *)this + 116) = v51;
          *((void *)this + 117) = v44;
          *((void *)this + 118) = &v50[v49];
          if (v27) {
            operator delete(v27);
          }
        }
        else
        {
          *CFStringRef v27 = *(unsigned char *)(v28 + v29);
          uint64_t v44 = v27 + 1;
        }
        *((void *)this + 117) = v44;
        uint64_t v28 = *((void *)this + 113);
        BOOL v30 = *(unsigned char *)(v28 + v29++) == 126;
        CFStringRef v27 = v44;
      }
      while (*((void *)this + 114) - v28 > v29);
    }
    VendorLogger::log(this, 6, *((const void **)this + 116), (size_t)&v44[-*((void *)this + 116)]);
    uint64_t v55 = (unsigned char *)*((void *)this + 116);
    char v9 = (std::mutex *)((char *)this + 952);
    if (*((void *)this + 118) - (void)v55 >= 0x10401uLL)
    {
      std::string v56 = *v57;
      *((void *)this + 114) = 0;
      *((void *)this + 115) = 0;
      char *v57 = 0;
      if (v56)
      {
        operator delete(v56);
        uint64_t v55 = (unsigned char *)*v15;
      }
      *double v15 = 0;
      *((void *)this + 117) = 0;
      *((void *)this + 118) = 0;
      if (v55) {
        operator delete(v55);
      }
    }
    goto LABEL_79;
  }
}

void sub_100038E70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
}

void sub_100038EC8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  sub_1000390C8(a1, a2, a3, a4);
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v4);
  sub_1000033AC(__p, "GnssHalNvStore.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  uint64_t v6 = FileByName;
  if (v8 < 0)
  {
    operator delete(__p[0]);
    if (v6) {
      goto LABEL_6;
    }
  }
  else if (FileByName)
  {
    goto LABEL_6;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
LABEL_6:
  qword_1001142D0 = *(void *)(v6 + 80);
  operator new();
}

void sub_10003906C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_1000390C8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_1001142C8 & 1) == 0)
  {
    byte_1001142C8 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"Sources/Protobuf/Generated/GnssHalNvStore.pb.cc", a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n\x14GnssHalNvStore.proto\x12\rproto.gnsshal\"I\n\aNvStore\x12\x13\n\aversion\x18\x01 \x01(\x05:\x02-1\x12)\n\x05items\x18\x02 \x03(\v2\x1A.proto.gnsshal.NvStoreItem\"\xB9\x01\n\vNvStoreItem\x12\n\n\x02id\x18\x01 \x01(\x03\x12\f\n\x04blob\x18\x02 \x01(\f\x12 \n\x15blob_truncated_sha256\x18\x03 \x01(\r:\x010\x12\x1E\n\x12modification_count\x18\x04 \x01(\x03:\x02-1\x12$\n\x18creation_cf_time_seconds\x18\x05 \x01(\x01:\x02-1\x12(\n\x1Cmodification_cf_time_seconds\x18\x06 \x01(\x01:\x02-1", (const void *)0x12C, v4);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_1000391BC()
{
}

uint64_t sub_1000391FC()
{
  if (qword_1001142D8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001142D8 + 8))(qword_1001142D8);
  }
  if (qword_1001142E0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001142E0 + 8))(qword_1001142E0);
  }
  if (qword_1001142F0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001142F0 + 8))(qword_1001142F0);
  }
  uint64_t result = qword_1001142F8;
  if (qword_1001142F8)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_1001142F8 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_1000392E4()
{
  uint64_t v0 = qword_100114300;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v3[1] = sub_100038EC8;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
  if (!qword_1001142D8) {
    ((void (*)(void))sub_1000390C8)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1001142F0) {
    sub_1000390C8(v1);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_1000393B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

proto::gnsshal::NvStore *proto::gnsshal::NvStore::NvStore(proto::gnsshal::NvStore *this)
{
  *(void *)this = &off_1001077A0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((proto::gnsshal::NvStore *)((char *)this + 8));
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 5) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_10003941C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

proto::gnsshal::NvStore *proto::gnsshal::NvStore::NvStore(proto::gnsshal::NvStore *this, const proto::gnsshal::NvStore *a2)
{
  *(void *)this = &off_1001077A0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((proto::gnsshal::NvStore *)((char *)this + 8));
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 5) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 12) = 0;
  proto::gnsshal::NvStore::MergeFrom(this, a2);
  return this;
}

void sub_1000394B0(_Unwind_Exception *a1)
{
  sub_10003ADDC(v3);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t proto::gnsshal::NvStore::MergeFrom(proto::gnsshal::NvStore *this, const proto::gnsshal::NvStore *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((proto::gnsshal::NvStore *)((char *)this + 16), *((_DWORD *)a2 + 6) + *((_DWORD *)this + 6));
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      unsigned int v5 = *(const proto::gnsshal::NvStoreItem **)(*((void *)a2 + 2) + 8 * v4);
      int v6 = *((_DWORD *)this + 7);
      uint64_t v7 = *((int *)this + 6);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((proto::gnsshal::NvStore *)((char *)this + 16), v6 + 1);
          int v6 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v6 + 1;
        sub_10003AD08();
      }
      uint64_t v8 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v7 + 1;
      proto::gnsshal::NvStoreItem::MergeFrom(*(proto::gnsshal::NvStoreItem **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 6));
  }
  if (*((unsigned char *)a2 + 48))
  {
    int v9 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 12) |= 1u;
    *((_DWORD *)this + 10) = v9;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((proto::gnsshal::NvStore *)((char *)this + 8), (const proto::gnsshal::NvStore *)((char *)a2 + 8));
}

void sub_100039630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void proto::gnsshal::NvStore::~NvStore(proto::gnsshal::NvStore *this)
{
  *(void *)this = &off_1001077A0;
  sub_10003ADDC((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((proto::gnsshal::NvStore *)((char *)this + 8));

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

void sub_1000396AC(proto::gnsshal::NvStore *a1)
{
  proto::gnsshal::NvStore::~NvStore(a1);

  operator delete();
}

uint64_t sub_1000396E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 44) = a2;
  return result;
}

void sub_1000396EC()
{
}

void sub_10003972C()
{
}

uint64_t proto::gnsshal::NvStore::Clear(proto::gnsshal::NvStore *this)
{
  if (*((unsigned char *)this + 48)) {
    *((_DWORD *)this + 10) = -1;
  }
  uint64_t result = sub_10003AD6C((uint64_t)this + 16);
  uint64_t v4 = *((void *)this + 1);
  int v3 = (proto::gnsshal::NvStore *)((char *)this + 8);
  *((_DWORD *)v3 + 10) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return result;
}

uint64_t sub_1000397B4(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_16;
        }
        unsigned int v30 = 0;
        unint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v11 >= v12 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v30);
          if (!result) {
            return result;
          }
          unsigned int v13 = v30;
          unsigned int v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v11;
          unsigned int v14 = v11 + 1;
          *((void *)this + 1) = v14;
        }
        a1[10] = v13;
        a1[12] |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 18) {
          goto LABEL_23;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 2) {
        goto LABEL_16;
      }
      while (1)
      {
        int v16 = a1[7];
        uint64_t v17 = a1[6];
        if ((int)v17 >= v16)
        {
          if (v16 == a1[8])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v16 + 1);
            int v16 = a1[7];
          }
          a1[7] = v16 + 1;
          sub_10003AD08();
        }
        uint64_t v18 = *((void *)a1 + 2);
        a1[6] = v17 + 1;
        uint64_t v19 = *(void *)(v18 + 8 * v17);
        unsigned int v31 = 0;
        CFIndex v20 = (char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31))return 0; {
        }
          }
        else
        {
          unsigned int v31 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v31);
        if (!sub_10003A2C4(v19, this, v24, v25) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v26 = *((_DWORD *)this + 14);
        BOOL v27 = __OFSUB__(v26, 1);
        int v28 = v26 - 1;
        if (v28 < 0 == v27) {
          *((_DWORD *)this + 14) = v28;
        }
        unsigned int v14 = (unsigned char *)*((void *)this + 1);
        unint64_t v29 = (unsigned char *)*((void *)this + 2);
        if (v14 >= v29 || *v14 != 18) {
          break;
        }
LABEL_23:
        *((void *)this + 1) = v14 + 1;
      }
      if (v14 == v29 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v10 = TagFallback & 7;
LABEL_16:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100039A3C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 48)) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 40), (int)a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

unsigned char *sub_100039AF0(uint64_t a1, unsigned char *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(a1 + 40);
    *a2 = 8;
    unint64_t v7 = (unint64_t)(a2 + 1);
    if ((v6 & 0x80000000) != 0)
    {
      uint64_t v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, v7, a3);
    }
    else
    {
      if (v6 <= 0x7F)
      {
        v4[1] = (_BYTE)v6;
        v4 += 2;
        goto LABEL_8;
      }
      uint64_t v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, v7, a3);
    }
    uint64_t v4 = (unsigned char *)v8;
  }
LABEL_8:
  if (*(int *)(a1 + 24) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(void *)(*(void *)(a1 + 16) + 8 * v9);
      unsigned char *v4 = 18;
      unint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v10 + 60);
      if (v11 > 0x7F)
      {
        unint64_t v12 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v4 + 1, a3);
      }
      else
      {
        v4[1] = (_BYTE)v11;
        unint64_t v12 = v4 + 2;
      }
      uint64_t v4 = sub_10003A764(v10, v12, a3, a4);
      ++v9;
    }
    while (v9 < *(int *)(a1 + 24));
  }
  double v15 = *(void **)(a1 + 8);
  unsigned int v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return v4;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)v4, a3);
}

uint64_t proto::gnsshal::NvStore::ByteSize(proto::gnsshal::NvStore *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*((unsigned char *)this + 48))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if ((v4 & 0x80000000) != 0)
    {
      int v3 = 11;
    }
    else if (v4 >= 0x80)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    }
    else
    {
      int v3 = 2;
    }
  }
  else
  {
    int v3 = 0;
  }
  int v5 = *((_DWORD *)this + 6);
  uint64_t v6 = (v5 + v3);
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnsshal::NvStoreItem::ByteSize(*(proto::gnsshal::NvStoreItem **)(*((void *)this + 2) + 8 * v7), a2);
      int v9 = (int)v8;
      if (v8 >= 0x80) {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      }
      else {
        int v10 = 1;
      }
      uint64_t v6 = (v9 + v6 + v10);
      ++v7;
    }
    while (v7 < *((int *)this + 6));
  }
  unint64_t v11 = (void *)*((void *)this + 1);
  if (v11 && *v11 != v11[1]) {
    uint64_t v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((proto::gnsshal::NvStore *)((char *)this + 8), a2)+ v6;
  }
  *((_DWORD *)this + 11) = v6;
  return v6;
}

uint64_t sub_100039CD8(proto::gnsshal::NvStore *a1, proto::gnsshal::NvStore *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return proto::gnsshal::NvStore::MergeFrom(a1, v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100039DAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100039DC4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100039E50()
{
  return 1;
}

uint64_t sub_100039E58()
{
  uint64_t v0 = qword_100114300;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100038EC8;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1001142D0;
}

void sub_100039EEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

proto::gnsshal::NvStoreItem *proto::gnsshal::NvStoreItem::NvStoreItem(proto::gnsshal::NvStoreItem *this)
{
  *(void *)this = off_100107850;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((proto::gnsshal::NvStoreItem *)((char *)this + 8));
  *((void *)this + 2) = 0;
  *((void *)this + 3) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *((void *)this + 7) = 0;
  *((void *)this + 4) = -1;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)((char *)this + 40) = _Q0;
  *((_DWORD *)this + 16) = 0;
  return this;
}

void sub_100039F68(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t proto::gnsshal::NvStoreItem::MergeFrom(proto::gnsshal::NvStoreItem *this, const proto::gnsshal::NvStoreItem *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 64);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((proto::gnsshal::NvStoreItem *)((char *)this + 8), (const proto::gnsshal::NvStoreItem *)((char *)a2 + 8));
  }
  if (*((unsigned char *)a2 + 64))
  {
    uint64_t v7 = *((void *)a2 + 2);
    *((_DWORD *)this + 16) |= 1u;
    *((void *)this + 2) = v7;
    int v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_16;
    }
  }
  else if ((*((unsigned char *)a2 + 64) & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = (const std::string *)*((void *)a2 + 3);
  *((_DWORD *)this + 16) |= 2u;
  int v9 = (std::string *)*((void *)this + 3);
  if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v9, v8);
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  int v10 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 16) |= 4u;
  *((_DWORD *)this + 14) = v10;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t v12 = *((void *)a2 + 5);
    *((_DWORD *)this + 16) |= 0x10u;
    *((void *)this + 5) = v12;
    if ((*((_DWORD *)a2 + 16) & 0x20) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((proto::gnsshal::NvStoreItem *)((char *)this + 8), (const proto::gnsshal::NvStoreItem *)((char *)a2 + 8));
    }
    goto LABEL_10;
  }
LABEL_17:
  uint64_t v11 = *((void *)a2 + 4);
  *((_DWORD *)this + 16) |= 8u;
  *((void *)this + 4) = v11;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x10) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v4 & 0x20) != 0)
  {
LABEL_10:
    uint64_t v5 = *((void *)a2 + 6);
    *((_DWORD *)this + 16) |= 0x20u;
    *((void *)this + 6) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((proto::gnsshal::NvStoreItem *)((char *)this + 8), (const proto::gnsshal::NvStoreItem *)((char *)a2 + 8));
}

void sub_10003A100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10003A118(void *a1)
{
  *a1 = off_100107850;
  uint64_t v2 = a1[3];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10003A1B4(void *a1)
{
  sub_10003A118(a1);

  operator delete();
}

uint64_t sub_10003A1EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 60) = a2;
  return result;
}

void sub_10003A1F4()
{
}

void sub_10003A234()
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10003A258(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 64);
  if (v1)
  {
    *(void *)(a1 + 16) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(a1 + 24);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(a1 + 56) = 0;
    *(void *)(a1 + 32) = -1;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(a1 + 40) = _Q0;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 14) = 0;
  if (v9) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10003A2C4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (unsigned int *)(a1 + 56);
  unsigned int v7 = a1 + 8;
  while (2)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unint64_t v25 = 0;
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unint64_t v13 = v25;
          unsigned int v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unint64_t v13 = *v12;
          unsigned int v14 = v12 + 1;
          *((void *)this + 1) = v14;
        }
        *(void *)(a1 + 16) = v13;
        int v15 = *(_DWORD *)(a1 + 64) | 1;
        *(_DWORD *)(a1 + 64) = v15;
        if ((unint64_t)v14 < v11 && *v14 == 18)
        {
          *((void *)this + 1) = v14 + 1;
          goto LABEL_30;
        }
        continue;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_22;
        }
        int v15 = *(_DWORD *)(a1 + 64);
LABEL_30:
        *(_DWORD *)(a1 + 64) = v15 | 2;
        if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        CFIndex v20 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v20 >= v16 || *v20 != 24) {
          continue;
        }
        uint64_t v17 = v20 + 1;
        *((void *)this + 1) = v17;
LABEL_36:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v17;
          int v21 = v17 + 1;
          *((void *)this + 1) = v21;
        }
        *(_DWORD *)(a1 + 64) |= 4u;
        if ((unint64_t)v21 >= v16 || *v21 != 32) {
          continue;
        }
        uint64_t v18 = v21 + 1;
        *((void *)this + 1) = v18;
LABEL_44:
        unint64_t v25 = 0;
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unint64_t v22 = v25;
          int v23 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unint64_t v22 = *v18;
          int v23 = v18 + 1;
          *((void *)this + 1) = v23;
        }
        *(void *)(a1 + 32) = v22;
        *(_DWORD *)(a1 + 64) |= 8u;
        if ((unint64_t)v23 >= v16 || *v23 != 41) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_52:
        unint64_t v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v25) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 40) = v25;
        *(_DWORD *)(a1 + 64) |= 0x10u;
        uint64_t v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 49) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_56:
        unint64_t v25 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v25))
        {
          *(void *)(a1 + 48) = v25;
          *(_DWORD *)(a1 + 64) |= 0x20u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_36;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_44;
      case 5u:
        int v10 = TagFallback & 7;
        if (v10 == 1) {
          goto LABEL_52;
        }
        goto LABEL_22;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_22;
        }
        goto LABEL_56;
      default:
        int v10 = TagFallback & 7;
LABEL_22:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10003A660(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 64);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 16), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 56), a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_18:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
    if ((*(_DWORD *)(v5 + 64) & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) != 0) {
    goto LABEL_18;
  }
LABEL_6:
  if ((v6 & 0x20) != 0) {
LABEL_7:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 48), a3);
LABEL_8:
  uint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

unsigned char *sub_10003A764(uint64_t a1, unsigned char *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v5 = *(_DWORD *)(a1 + 64);
  if (v5)
  {
    int v6 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16);
    *a2 = 8;
    a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)(a2 + 1), a3);
    int v5 = *(_DWORD *)(a1 + 64);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_22;
      }
      goto LABEL_19;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(a1 + 24);
  *a2 = 18;
  if (*(char *)(v7 + 23) < 0) {
    uint64_t v8 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v7 + 8);
  }
  else {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v7 + 23);
  }
  if (v8 > 0x7F)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)a2 + 1, a3);
  }
  else
  {
    a2[1] = (_BYTE)v8;
    int v9 = a2 + 2;
  }
  int v10 = *(char *)(v7 + 23);
  if (v10 >= 0) {
    unint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7;
  }
  else {
    unint64_t v11 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v7;
  }
  if (v10 >= 0) {
    uint64_t v12 = (const void *)*(unsigned __int8 *)(v7 + 23);
  }
  else {
    uint64_t v12 = (const void *)*(unsigned int *)(v7 + 8);
  }
  a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v11, v12, v9, a4);
  if ((*(_DWORD *)(a1 + 64) & 4) != 0)
  {
LABEL_19:
    unint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    *a2 = 24;
    if (v13 > 0x7F)
    {
      a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)a2 + 1, a3);
    }
    else
    {
      a2[1] = (_BYTE)v13;
      a2 += 2;
    }
  }
LABEL_22:
  int v14 = *(_DWORD *)(a1 + 64);
  if ((v14 & 8) == 0)
  {
    if ((v14 & 0x10) == 0) {
      goto LABEL_24;
    }
LABEL_33:
    uint64_t v20 = *(void *)(a1 + 40);
    *a2 = 41;
    *(void *)(a2 + 1) = v20;
    a2 += 9;
    if ((*(_DWORD *)(a1 + 64) & 0x20) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  uint64_t v19 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 32);
  *a2 = 32;
  a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v19, (unint64_t)(a2 + 1), a3);
  int v14 = *(_DWORD *)(a1 + 64);
  if ((v14 & 0x10) != 0) {
    goto LABEL_33;
  }
LABEL_24:
  if ((v14 & 0x20) != 0)
  {
LABEL_25:
    uint64_t v15 = *(void *)(a1 + 48);
    *a2 = 49;
    *(void *)(a2 + 1) = v15;
    a2 += 9;
  }
LABEL_26:
  uint64_t v18 = *(void **)(a1 + 8);
  uint64_t v17 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unint64_t v16 = v18;
  if (!v18 || *v16 == v16[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v17, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t proto::gnsshal::NvStoreItem::ByteSize(proto::gnsshal::NvStoreItem *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 64);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    goto LABEL_24;
  }
  if (*((unsigned char *)this + 64))
  {
    unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2), (unint64_t)a2)+ 1;
    int v3 = *((_DWORD *)this + 16);
    if ((v3 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    unsigned int v4 = 0;
    if ((*((unsigned char *)this + 64) & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v6 = *((void *)this + 3);
  int v7 = *(unsigned __int8 *)(v6 + 23);
  char v8 = v7;
  uint64_t v9 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
  }
  else {
    unint64_t v10 = v9;
  }
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v9 = *(void *)(v6 + 8);
    int v3 = *((_DWORD *)this + 16);
    char v8 = *(unsigned char *)(v6 + 23);
  }
  else
  {
    int v11 = 1;
  }
  if (v8 < 0) {
    int v7 = v9;
  }
  v4 += v11 + v7 + 1;
LABEL_16:
  if ((v3 & 4) != 0)
  {
    uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2)
          + 1;
      int v3 = *((_DWORD *)this + 16);
    }
    else
    {
      int v16 = 2;
    }
    v4 += v16;
    if ((v3 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if ((v3 & 8) != 0)
  {
LABEL_18:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 4), (unint64_t)a2)+ 1;
    int v3 = *((_DWORD *)this + 16);
  }
LABEL_19:
  unsigned int v12 = v4 + 9;
  if ((v3 & 0x10) == 0) {
    unsigned int v12 = v4;
  }
  if ((v3 & 0x20) != 0) {
    uint64_t v5 = v12 + 9;
  }
  else {
    uint64_t v5 = v12;
  }
LABEL_24:
  unint64_t v13 = (void *)*((void *)this + 1);
  if (v13 && *v13 != v13[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((proto::gnsshal::NvStoreItem *)((char *)this + 8), a2)+ v5;
  }
  *((_DWORD *)this + 15) = v5;
  return v5;
}

uint64_t sub_10003AA94(proto::gnsshal::NvStoreItem *a1, proto::gnsshal::NvStoreItem *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return proto::gnsshal::NvStoreItem::MergeFrom(a1, v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10003AB68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10003AB80(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10003AC0C()
{
  return 1;
}

uint64_t sub_10003AC14()
{
  uint64_t v0 = qword_100114300;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100038EC8;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_1001142E8;
}

void sub_10003ACA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10003ACBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_10003ACC4(uint64_t a1)
{
  (*(void (**)(uint64_t))(*(void *)a1 + 152))(a1);
  return v1;
}

uint64_t sub_10003AD00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

void sub_10003AD08()
{
}

void sub_10003AD48()
{
}

uint64_t sub_10003AD6C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t sub_10003ADDC(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    operator delete[]();
  }
  return result;
}

uint64_t GnssHal::PlatformTimer::PlatformTimer(uint64_t a1, dispatch_queue_t queue)
{
  *(void *)a1 = off_100107930;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = queue;
  *(_WORD *)(a1 + 56) = 0;
  char v3 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, queue);
  *(void *)(a1 + 40) = v3;
  if (!v3)
  {
    uint64_t v5 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "timer,nullptr", buf, 2u);
      uint64_t v5 = qword_100114840;
    }
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)audit_token_t buf = 136446722;
      int v14 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/HAL/Implementation/GnssHalTimerImpl.mm";
      __int16 v15 = 1026;
      int v16 = 15;
      __int16 v17 = 2082;
      uint64_t v18 = "PlatformTimer";
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
    }
    sub_1000033AC(v11, "assert");
    sub_1000033AC(v9, "PlatformTimer");
    sub_1000033AC(__p, "timer,nullptr");
    gpsd::util::triggerDiagnosticReport((uint64_t)v11, (long long *)v9, (long long *)__p);
    if (v8 < 0) {
      operator delete(__p[0]);
    }
    if (v10 < 0) {
      operator delete(v9[0]);
    }
    if (v12 < 0) {
      operator delete(v11[0]);
    }
    __assert_rtn("PlatformTimer", "GnssHalTimerImpl.mm", 15, "false && \"timer,nullptr\"");
  }
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_10003B120;
  void v6[3] = &unk_100104D40;
  void v6[4] = a1;
  dispatch_source_set_event_handler(v3, v6);
  return a1;
}

void sub_10003B0C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  if (a31 < 0) {
    operator delete(a26);
  }
  sub_100018A80((void *)(v31 + 8));
  _Unwind_Resume(a1);
}

void sub_10003B120(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v1 + 57)) {
    (*(void (**)(void))(*(void *)v1 + 32))(*(void *)(a1 + 32));
  }
  uint64_t v2 = *(void *)(v1 + 32);
  if (v2)
  {
    char v3 = *(void (**)(void))(*(void *)v2 + 48);
    v3();
  }
  else
  {
    uint64_t v4 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v5 = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "timer,handleEvent,callback,nullptr", v5, 2u);
    }
  }
}

uint64_t sub_10003B204(uint64_t a1)
{
  *(void *)a1 = off_100107930;
  if (*(void *)(a1 + 40))
  {
    uint64_t v2 = a1 + 8;
    uint64_t v3 = *(void *)(a1 + 32);
    *(void *)(a1 + 32) = 0;
    if (v3 == a1 + 8)
    {
      (*(void (**)(uint64_t))(*(void *)v2 + 32))(a1 + 8);
    }
    else if (v3)
    {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
    uint64_t v4 = *(NSObject **)(a1 + 40);
    if (!*(unsigned char *)(a1 + 56))
    {
      dispatch_resume(v4);
      uint64_t v4 = *(NSObject **)(a1 + 40);
    }
    dispatch_source_cancel(v4);

    *(void *)(a1 + 40) = 0;
  }
  sub_100018A80((void *)(a1 + 8));
  return a1;
}

void sub_10003B2E8(uint64_t a1)
{
  sub_10003B204(a1);

  operator delete();
}

double sub_10003B320(gpsd::util *a1)
{
  return (double)gpsd::util::getMachContinuousTimeNs(a1) * 0.000000001;
}

void *sub_10003B348(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(NSObject **)(a1 + 48);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3321888768;
  _DWORD v4[2] = sub_10003B4F4;
  void v4[3] = &unk_100107988;
  void v4[4] = a1;
  sub_10001EF24((uint64_t)v5, a2);
  dispatch_async(v2, v4);
  return sub_100018A80(v5);
}

void sub_10003B404(uint64_t a1, int a2, char a3)
{
  uint64_t v3 = *(NSObject **)(a1 + 48);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _DWORD v4[2] = sub_10003B7A8;
  void v4[3] = &unk_1001079B8;
  void v4[4] = a1;
  int v5 = a2;
  char v6 = a3;
  dispatch_async(v3, v4);
}

void sub_10003B480(uint64_t a1)
{
  uint64_t v1 = *(NSObject **)(a1 + 48);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10003B828;
  block[3] = &unk_100104D40;
  block[4] = a1;
  dispatch_async(v1, block);
}

void *sub_10003B4F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_10001EF24((uint64_t)v6, a1 + 40);
  uint64_t v2 = v1 + 8;
  if (v6 != (void *)(v1 + 8))
  {
    uint64_t v3 = v7;
    uint64_t v4 = *(void *)(v1 + 32);
    if (v7 == v6)
    {
      if (v4 == v2)
      {
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, v8);
        (*(void (**)(void *))(*v7 + 32))(v7);
        int v7 = 0;
        (*(void (**)(void, void *))(**(void **)(v1 + 32) + 24))(*(void *)(v1 + 32), v6);
        (*(void (**)(void))(**(void **)(v1 + 32) + 32))(*(void *)(v1 + 32));
        *(void *)(v1 + 32) = 0;
        int v7 = v6;
        (*(void (**)(void *, uint64_t))(v8[0] + 24))(v8, v1 + 8);
        (*(void (**)(void *))(v8[0] + 32))(v8);
      }
      else
      {
        (*(void (**)(void *, uint64_t))(v6[0] + 24))(v6, v1 + 8);
        (*(void (**)(void *))(*v7 + 32))(v7);
        int v7 = *(void **)(v1 + 32);
      }
      *(void *)(v1 + 32) = v2;
    }
    else if (v4 == v2)
    {
      (*(void (**)(uint64_t, void *))(*(void *)v2 + 24))(v1 + 8, v6);
      (*(void (**)(void))(**(void **)(v1 + 32) + 32))(*(void *)(v1 + 32));
      *(void *)(v1 + 32) = v7;
      int v7 = v6;
    }
    else
    {
      int v7 = *(void **)(v1 + 32);
      *(void *)(v1 + 32) = v3;
    }
  }
  return sub_100018A80(v6);
}

void sub_10003B788(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_100002FCC(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10003B794(uint64_t a1, uint64_t a2)
{
  return sub_10001EF24(a1 + 40, a2 + 40);
}

void *sub_10003B7A0(uint64_t a1)
{
  return sub_100018A80((void *)(a1 + 40));
}

void sub_10003B7A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = 1000000 * *(int *)(a1 + 40);
  *(unsigned char *)(v1 + 57) = *(unsigned char *)(a1 + 44);
  uint64_t v3 = *(NSObject **)(v1 + 40);
  dispatch_time_t v4 = dispatch_walltime(0, v2);
  dispatch_source_set_timer(v3, v4, v2, 0x989680uLL);
  if (!*(unsigned char *)(v1 + 56))
  {
    dispatch_resume(*(dispatch_object_t *)(v1 + 40));
    *(unsigned char *)(v1 + 56) = 1;
  }
}

void sub_10003B828(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v1 + 56))
  {
    *(unsigned char *)(v1 + 56) = 0;
    dispatch_suspend(*(dispatch_object_t *)(v1 + 40));
  }
}

uint64_t GnssHal::InterfacesImpl::InterfacesImpl(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6, uint64_t *a7)
{
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  uint64_t v13 = *a2;
  *a2 = 0;
  uint64_t v14 = *(void *)(a1 + 8);
  *(void *)a1 = off_1001079E8;
  *(void *)(a1 + 8) = v13;
  if (v14) {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
  }
  uint64_t v15 = *a3;
  *a3 = 0;
  uint64_t v16 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v15;
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
  }
  uint64_t v17 = *a4;
  *a4 = 0;
  uint64_t v18 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = v17;
  if (v18) {
    (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
  }
  uint64_t v19 = *a5;
  *a5 = 0;
  uint64_t v20 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = v19;
  if (v20) {
    (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
  }
  uint64_t v21 = *a6;
  *a6 = 0;
  uint64_t v22 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = v21;
  if (v22) {
    (*(void (**)(uint64_t))(*(void *)v22 + 8))(v22);
  }
  uint64_t v23 = *a7;
  *a7 = 0;
  uint64_t v24 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = v23;
  if (v24) {
    (*(void (**)(uint64_t))(*(void *)v24 + 8))(v24);
  }
  return a1;
}

void sub_10003BA08(void *a1)
{
  sub_10003BA7C(a1);

  operator delete();
}

void sub_10003BA44(void *a1)
{
  sub_10003BA7C(a1);

  operator delete();
}

void *sub_10003BA7C(void *a1)
{
  *a1 = off_100107A30;
  uint64_t v2 = a1[6];
  a1[6] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = a1[5];
  a1[5] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = a1[4];
  a1[4] = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  uint64_t v5 = a1[3];
  a1[3] = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  uint64_t v6 = a1[2];
  a1[2] = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = a1[1];
  a1[1] = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  return a1;
}

uint64_t GnssHal::CommUart::CommUart(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_100107A50;
  uint64_t v4 = (id *)GpsdPreferences::instance(0);
  *(unsigned char *)(a1 + 8) = GpsdPreferences::verboseCommDataSniffer(v4);
  *(_WORD *)(a1 + 16) = *(_WORD *)a2;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_1000186E8((unsigned char *)(a1 + 24), *(void **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 40) = *(void *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = -1;
  *(_WORD *)(a1 + 60) = 1;
  *(void *)(a1 + 64) = 0;
  if ((*(unsigned int (**)(uint64_t))(*(void *)a1 + 72))(a1)) {
    operator new();
  }
  return a1;
}

void sub_10003BF0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  sub_10003DFB8(v28, 0);
  if (*(char *)(v26 + 47) < 0) {
    operator delete(*v27);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10003BFD0(uint64_t a1)
{
  *(void *)a1 = off_100107A50;
  sub_10003CA98(a1);
  sub_10003DFB8((void **)(a1 + 64), 0);
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  return a1;
}

void sub_10003C038(uint64_t a1)
{
  sub_10003BFD0(a1);

  operator delete();
}

BOOL sub_10003C070(uint64_t a1)
{
  if ((*(unsigned int (**)(uint64_t))(*(void *)a1 + 32))(a1))
  {
    uint64_t v2 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(handler.c_iflag) = 0;
      _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "#comm,already open", (uint8_t *)&handler, 2u);
    }
    return *(unsigned char *)(a1 + 60) != 0;
  }
  uint64_t v4 = (void **)(a1 + 24);
  if (*(char *)(a1 + 47) < 0)
  {
    unint64_t v5 = *(void *)(a1 + 32);
    if (v5)
    {
      sub_1000186E8(__p, *v4, v5);
      goto LABEL_11;
    }
  }
  else if (*(unsigned char *)(a1 + 47))
  {
    *(_OWORD *)long long __p = *(_OWORD *)v4;
    uint64_t v48 = *(void *)(a1 + 40);
    goto LABEL_11;
  }
  GpsdPlatformInfo::instance(0);
  sub_1000033AC(__p, "/dev/cu.gps");
LABEL_11:
  if (v48 >= 0) {
    uint64_t v6 = __p;
  }
  else {
    uint64_t v6 = (void **)__p[0];
  }
  int v7 = open((const char *)v6, 131074);
  *(_DWORD *)(a1 + 56) = v7;
  char v8 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v20 = __p;
    if (v48 < 0) {
      uint64_t v20 = (void **)__p[0];
    }
    LODWORD(handler.c_iflag) = 136315394;
    *(tcflag_t *)((char *)&handler.c_iflag + 4) = (tcflag_t)v20;
    WORD2(handler.c_oflag) = 1026;
    *(_DWORD *)((char *)&handler.c_oflag + 6) = 131074;
    _os_log_debug_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "#comm,open,%s,flag,0x%{public}X", (uint8_t *)&handler, 0x12u);
    int v7 = *(_DWORD *)(a1 + 56);
  }
  if (v7 == -1)
  {
    uint64_t v11 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      int v12 = *__error();
      LODWORD(handler.c_iflag) = 67240192;
      HIDWORD(handler.c_iflag) = v12;
      uint64_t v13 = "#comm,open,errno,%{public}d";
      p_termios handler = (uint8_t *)&handler;
      uint64_t v15 = v11;
      uint32_t v16 = 8;
LABEL_24:
      _os_log_error_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, v13, p_handler, v16);
    }
LABEL_29:
    uint64_t v3 = 0;
    goto LABEL_30;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)a1 + 112))(a1)) {
    goto LABEL_29;
  }
  if (tcgetattr(*(_DWORD *)(a1 + 56), &handler) == -1)
  {
    uint64_t v17 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      int v23 = *__error();
      *(_DWORD *)audit_token_t buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v23;
      _os_log_error_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "#comm,configure,tcgetattr failed,%{public}d", buf, 8u);
    }
    *(unsigned char *)(a1 + 60) = 0;
    goto LABEL_29;
  }
  cfmakeraw(&handler);
  handler.c_cc[16] = 0;
  handler.c_cc[17] = *(unsigned char *)(a1 + 17);
  if (!handler.c_cc[17])
  {
    uint64_t v18 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
      goto LABEL_29;
    }
    *(_WORD *)audit_token_t buf = 0;
    uint64_t v13 = "#comm,configure,timeoutTenthsOfSeconds is 0";
    p_termios handler = buf;
    uint64_t v15 = v18;
    uint32_t v16 = 2;
    goto LABEL_24;
  }
  speed_t v9 = 115200;
  v49[0] = (void *)115200;
  if (*(unsigned char *)(a1 + 52))
  {
    int v10 = 0;
    switch(*(_DWORD *)(a1 + 48))
    {
      case 0:
        int v10 = 0;
        speed_t v9 = 9600;
        break;
      case 1:
        goto LABEL_47;
      case 3:
        uint64_t v22 = 1000000;
        goto LABEL_48;
      case 4:
        goto LABEL_42;
      case 5:
        uint64_t v22 = 3000000;
        goto LABEL_48;
      case 6:
        goto LABEL_41;
      case 7:
        goto LABEL_38;
      default:
        break;
    }
  }
  else
  {
    if (*(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) == 201)
    {
      uint64_t v21 = (id *)GpsdPreferences::instance(0);
      if (GpsdPreferences::baudRate4M8(v21)) {
LABEL_38:
      }
        uint64_t v22 = 4800000;
      else {
LABEL_42:
      }
        uint64_t v22 = 2400000;
    }
    else if (*(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) == 103 {
           || *(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) == 106)
    }
    {
LABEL_41:
      uint64_t v22 = 3200000;
    }
    else
    {
      uint64_t v24 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)audit_token_t buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = 1;
        _os_log_fault_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_FAULT, "UnsupportedHardware,defaultRate,%d,used", buf, 8u);
      }
LABEL_47:
      uint64_t v22 = 921600;
    }
LABEL_48:
    v49[0] = (void *)v22;
    int v10 = 1;
  }
  if (cfsetspeed(&handler, v9))
  {
    unint64_t v25 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      int v26 = *__error();
      *(_DWORD *)audit_token_t buf = 134349312;
      *(void *)&uint8_t buf[4] = v9;
      *(_WORD *)&uint8_t buf[12] = 1026;
      *(_DWORD *)uint64_t v53 = v26;
      BOOL v27 = "#comm,configure,cfsetspeed failed,%{public}lu,%{public}d";
LABEL_52:
      int v28 = v25;
      uint32_t v29 = 18;
LABEL_78:
      _os_log_error_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_ERROR, v27, buf, v29);
      goto LABEL_57;
    }
    goto LABEL_57;
  }
  tcflag_t v30 = handler.c_cflag | 0x30300;
  if (!*(unsigned char *)(a1 + 16)) {
    tcflag_t v30 = handler.c_cflag & 0xFFFFFFFFFFFCFCFFLL | 0x300;
  }
  handler.c_cflag = v30;
  if (tcsetattr(*(_DWORD *)(a1 + 56), 0, &handler))
  {
    uint64_t v31 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      int v45 = *__error();
      *(_DWORD *)audit_token_t buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v45;
      BOOL v27 = "#comm,configure,tcsetattr failed,%{public}d";
      int v28 = v31;
      uint32_t v29 = 8;
      goto LABEL_78;
    }
    goto LABEL_57;
  }
  if (!v10)
  {
LABEL_62:
    unint64_t v33 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
    {
      int v34 = *(unsigned __int8 *)(a1 + 16);
      int v35 = *(unsigned __int8 *)(a1 + 17);
      unint64_t v36 = v49[0];
      if (!v10) {
        unint64_t v36 = (void *)v9;
      }
      *(_DWORD *)audit_token_t buf = 67240704;
      *(_DWORD *)&uint8_t buf[4] = v34;
      *(_WORD *)&uint8_t buf[8] = 1026;
      *(_DWORD *)&buf[10] = v35;
      *(_WORD *)uint64_t v53 = 2050;
      *(void *)&v53[2] = v36;
      _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_INFO, "#comm,configured,flowCtrl,%{public}d,timeoutTenths,%{public}d,baud,%{public}lu", buf, 0x18u);
    }
    uint64_t v37 = *(void *)(a1 + 64);
    if (v37)
    {
      int v38 = (*(uint64_t (**)(void))(**(void **)v37 + 40))();
      dispatch_source_t v39 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_read, v38, 0, *(dispatch_queue_t *)(v37 + 16));
      *(void *)(v37 + 56) = v39;
      if (!v39)
      {
        int v46 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          LOWORD(handler.c_iflag) = 0;
          _os_log_error_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_ERROR, "#comm,async,readSrc,nullptr", (uint8_t *)&handler, 2u);
          int v46 = qword_100114840;
        }
        if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
        {
          LODWORD(handler.c_iflag) = 136446722;
          *(tcflag_t *)((char *)&handler.c_iflag + 4) = (tcflag_t)"/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/"
                                                                  "HAL/Implementation/GnssHalCommUart.mm";
          WORD2(handler.c_oflag) = 1026;
          *(_DWORD *)((char *)&handler.c_oflag + 6) = 456;
          WORD1(handler.c_cflag) = 2082;
          *(tcflag_t *)((char *)&handler.c_cflag + 4) = (tcflag_t)"open";
          _os_log_error_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", (uint8_t *)&handler, 0x1Cu);
        }
        sub_1000033AC(&handler, "assert");
        sub_1000033AC(buf, "open");
        sub_1000033AC(v49, "#comm,async,readSrc,nullptr");
        gpsd::util::triggerDiagnosticReport((uint64_t)&handler, (long long *)buf, (long long *)v49);
        if (v50 < 0) {
          operator delete(v49[0]);
        }
        if ((v53[9] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
        if (SHIBYTE(handler.c_cflag) < 0) {
          operator delete((void *)handler.c_iflag);
        }
        __assert_rtn("open", "GnssHalCommUart.mm", 456, "false && \"#comm,async,readSrc,nullptr\"");
      }
      sub_100017B68((unint64_t *)(v37 + 64), 0x1000uLL);
      char v40 = *(NSObject **)(v37 + 56);
      handler.c_iflag = (tcflag_t)_NSConcreteStackBlock;
      handler.c_oflag = 3221225472;
      handler.c_cflag = (tcflag_t)sub_10003DE24;
      handler.c_lflag = (tcflag_t)&unk_100104D40;
      *(void *)handler.c_cc = v37;
      dispatch_source_set_event_handler(v40, &handler);
      dispatch_resume(*(dispatch_object_t *)(v37 + 56));
      if (*(void *)(v37 + 8))
      {
        unsigned int v41 = *(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) - 103;
        if (v41 <= 4 && ((1 << v41) & 0x19) != 0)
        {
          (*(void (**)(void))(**(void **)(v37 + 8) + 16))(*(void *)(v37 + 8));
          usleep(0x4E20u);
          (*(void (**)(void))(**(void **)(v37 + 8) + 24))(*(void *)(v37 + 8));
          usleep(0x186A0u);
          char v42 = qword_100114840;
          if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)audit_token_t buf = 0;
            _os_log_debug_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEBUG, "#comm,async,powerOnChip", buf, 2u);
          }
        }
      }
    }
    uint64_t v3 = 1;
    goto LABEL_30;
  }
  int v32 = ioctl(*(_DWORD *)(a1 + 56), 0x80085402uLL, v49);
  unint64_t v25 = qword_100114840;
  if (v32 != -1)
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)audit_token_t buf = 134218240;
      *(void **)&uint8_t buf[4] = v49[0];
      *(_WORD *)&uint8_t buf[12] = 2048;
      *(void *)uint64_t v53 = v9;
      _os_log_debug_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "#comm,configure,IOSSIOSPEED,%lu,standardSpeed,%lu", buf, 0x16u);
    }
    goto LABEL_62;
  }
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    unint64_t v43 = v49[0];
    int v44 = *__error();
    *(_DWORD *)audit_token_t buf = 134349312;
    *(void *)&uint8_t buf[4] = v43;
    *(_WORD *)&uint8_t buf[12] = 1026;
    *(_DWORD *)uint64_t v53 = v44;
    BOOL v27 = "#comm,configure,IOSSIOSPEED failed,%{public}lu,%{public}d";
    goto LABEL_52;
  }
LABEL_57:
  uint64_t v3 = 0;
  *(unsigned char *)(a1 + 60) = 0;
LABEL_30:
  if (SHIBYTE(v48) < 0) {
    operator delete(__p[0]);
  }
  return v3;
}

void sub_10003CA04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v28 - 57) < 0) {
    operator delete(*(void **)(v28 - 80));
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a16 < 0) {
    operator delete(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_10003CA98(uint64_t a1)
{
  if ((*(unsigned int (**)(uint64_t))(*(void *)a1 + 32))(a1))
  {
    uint64_t v2 = *(void *)(a1 + 64);
    if (v2) {
      sub_10003CC0C(v2);
    }
    if (close(*(_DWORD *)(a1 + 56)) < 0)
    {
      uint64_t v9 = qword_100114838;
      if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
      {
        int v10 = *__error();
        v11[0] = 67240192;
        v11[1] = v10;
        uint64_t v4 = "#comm,close,errno,%{public}d";
        unint64_t v5 = v9;
        os_log_type_t v6 = OS_LOG_TYPE_DEFAULT;
        uint32_t v7 = 8;
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v3 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
      {
        LOWORD(v11[0]) = 0;
        uint64_t v4 = "#comm,close,completed";
        unint64_t v5 = v3;
        os_log_type_t v6 = OS_LOG_TYPE_INFO;
        uint32_t v7 = 2;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v5, v6, v4, (uint8_t *)v11, v7);
      }
    }
    *(_DWORD *)(a1 + 56) = -1;
    return;
  }
  char v8 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    LOWORD(v11[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "#comm,close,not open", (uint8_t *)v11, 2u);
  }
}

void sub_10003CC0C(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    unsigned int v2 = *(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) - 103;
    BOOL v3 = v2 > 4;
    int v4 = (1 << v2) & 0x19;
    if (!v3 && v4 != 0) {
      (*(void (**)(void))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8));
    }
  }
  dispatch_release(*(dispatch_object_t *)(a1 + 56));
  os_log_type_t v6 = *(void **)(a1 + 64);
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  if (v6)
  {
    operator delete(v6);
  }
}

BOOL sub_10003CCBC(uint64_t a1)
{
  if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 32))(a1))
  {
    int v2 = *(_DWORD *)(a1 + 56);
    memset(&v16, 0, sizeof(v16));
    if (__darwin_check_fd_set_overflow(v2, &v16, 0)) {
      *(__int32_t *)((char *)v16.fds_bits + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFFCLL)) |= 1 << v2;
    }
    int v3 = select(v2 + 1, &v16, 0, 0, 0);
    BOOL v4 = v3 >= 0;
    if (v3 < 0)
    {
      int v11 = *__error();
      int v12 = qword_100114840;
      if (v11 == 9)
      {
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)audit_token_t buf = 67240192;
          int v18 = v2;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "#comm,select,interrupted,fd,%{public}d", buf, 8u);
        }
      }
      else if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        int v13 = *__error();
        uint64_t v14 = __error();
        uint64_t v15 = strerror(*v14);
        *(_DWORD *)audit_token_t buf = 67240706;
        int v18 = v13;
        __int16 v19 = 2082;
        uint64_t v20 = v15;
        __int16 v21 = 1026;
        int v22 = v2;
        os_log_type_t v6 = "#comm,select,errno,%{public}d,%{public}s,fd,%{public}d";
        uint32_t v7 = v12;
        uint32_t v8 = 24;
        goto LABEL_17;
      }
    }
    else if (*(unsigned char *)(a1 + 61))
    {
      uint64_t v5 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)audit_token_t buf = 0;
        os_log_type_t v6 = "#comm,rx data while in sleep";
        uint32_t v7 = v5;
        uint32_t v8 = 2;
LABEL_17:
        _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, v6, buf, v8);
      }
    }
  }
  else
  {
    uint64_t v9 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v16.fds_bits[0]) = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "#comm,waitForDataAvailable,portNotOpen", (uint8_t *)&v16, 2u);
    }
    return 0;
  }
  return v4;
}

uint64_t sub_10003CF1C(uint64_t a1, void *a2, size_t a3)
{
  if (!*(unsigned char *)(a1 + 60) || ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 32))(a1) & 1) == 0)
  {
    int v10 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = *(unsigned __int8 *)(a1 + 60);
      int v12 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 32))(a1);
      int v14 = 67240448;
      int v15 = v11;
      __int16 v16 = 1026;
      LODWORD(v17) = v12;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#comm,read,unavailable,good,%{public}d,open,%{public}d", (uint8_t *)&v14, 0xEu);
    }
    return -1;
  }
  uint32_t v7 = (const unsigned __int8 *)read(*(_DWORD *)(a1 + 56), a2, a3);
  if (*(unsigned char *)(a1 + 8)) {
    gpsd::util::logBinaryBytes((gpsd::util *)a2, v7, (uint64_t)"#comm,read", v6);
  }
  if (v7 == (const unsigned __int8 *)-1)
  {
    int v8 = *__error();
    uint64_t v9 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      int v14 = 67240450;
      int v15 = v8;
      __int16 v16 = 2082;
      uint64_t v17 = strerror(v8);
      _os_log_debug_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "#comm,read,errno,%{public}d,%{public}s", (uint8_t *)&v14, 0x12u);
    }
    if (v8 == 35) {
      return 0;
    }
    *(unsigned char *)(a1 + 60) = 0;
    return -1;
  }
  return (uint64_t)v7;
}

id sub_10003D0FC()
{
  uint64_t v0 = (id *)GpsdPreferences::instance(0);

  return GpsdPreferences::usesAsyncCommRead(v0);
}

BOOL sub_10003D128(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 64);
  if (v2)
  {
    sub_10003E064((uint64_t)v7, a2);
    if (*(void *)(v2 + 48))
    {
      int v3 = qword_100114838;
      if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)os_log_type_t v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#comm,setReadCallback,alreadySet", v6, 2u);
      }
    }
    sub_10003DDB0((void *)(v2 + 24), (uint64_t)v7);
    BOOL v4 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)os_log_type_t v6 = 0;
      _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "#comm,setReadCallback", v6, 2u);
    }
    sub_10003DF34(v7);
  }
  return v2 != 0;
}

void sub_10003D23C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10003DF34((uint64_t *)va);
  _Unwind_Resume(a1);
}

BOOL sub_10003D258(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = 0;
  do
  {
    unint64_t v7 = v6;
    if (a3 <= v6) {
      break;
    }
    uint64_t v8 = (*(uint64_t (**)(uint64_t, unint64_t, unint64_t))(*(void *)a1 + 56))(a1, a2 + v6, a3 - v6);
    unint64_t v6 = v8 + v7;
  }
  while ((v8 & 0x8000000000000000) == 0);
  return a3 == v7;
}

unint64_t sub_10003D2D4(uint64_t a1, gpsd::util *this, unsigned __int8 *a3, const char *a4)
{
  if (*(unsigned char *)(a1 + 8)) {
    gpsd::util::logBinaryBytes(this, a3, (uint64_t)"#comm,write", a4);
  }
  if (!*(unsigned char *)(a1 + 60) || ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 32))(a1) & 1) == 0)
  {
    int v10 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      int v15 = *(unsigned __int8 *)(a1 + 60);
      int v16 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 32))(a1);
      int v17 = 67240448;
      *(_DWORD *)int v18 = v15;
      *(_WORD *)&void v18[4] = 1026;
      *(_DWORD *)&v18[6] = v16;
      _os_log_debug_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "#comm,write,unavailable,good,%{public}d,open,%{public}d", (uint8_t *)&v17, 0xEu);
    }
    return -1;
  }
  unint64_t v7 = write(*(_DWORD *)(a1 + 56), this, (size_t)a3);
  if (v7 != -1)
  {
    unint64_t v8 = v7;
    if (v7 < (unint64_t)a3)
    {
      uint64_t v9 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
      {
        int v17 = 134349312;
        *(void *)int v18 = a3;
        *(_WORD *)&v18[8] = 1026;
        int v19 = v8;
        _os_log_debug_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "#comm,write,overflow,toWrite,%{public}zu,done,%{public}d,retry", (uint8_t *)&v17, 0x12u);
      }
    }
    return v8;
  }
  int v12 = *__error();
  if (v12 != 35)
  {
    *(unsigned char *)(a1 + 60) = 0;
    int v14 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      int v17 = 67240192;
      *(_DWORD *)int v18 = v12;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "#comm,write,errno,%{public}d", (uint8_t *)&v17, 8u);
    }
    return -1;
  }
  int v13 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    int v17 = 67240192;
    *(_DWORD *)int v18 = 35;
    _os_log_debug_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "#comm,write,errno,%{public}d", (uint8_t *)&v17, 8u);
  }
  return 0;
}

BOOL sub_10003D558(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = 0;
  do
  {
    unint64_t v7 = v6;
    if (a3 <= v6) {
      break;
    }
    uint64_t v8 = (*(uint64_t (**)(uint64_t, unint64_t, unint64_t))(*(void *)a1 + 88))(a1, a2 + v6, a3 - v6);
    unint64_t v6 = v8 + v7;
  }
  while ((v8 & 0x8000000000000000) == 0);
  return a3 == v7;
}

BOOL sub_10003D5D4(uint64_t a1)
{
  BOOL v2 = sub_10003D6A0(a1, 0);
  int v3 = qword_100114840;
  if (v2)
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#comm,enterLowPowerMode,success", buf, 2u);
    }
    *(unsigned char *)(a1 + 61) = 1;
  }
  else if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "#comm,enterLowPowerMode,failure", v5, 2u);
  }
  return v2;
}

BOOL sub_10003D6A0(uint64_t a1, int a2)
{
  BOOL v4 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)audit_token_t buf = 67240192;
    int v11 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "#comm,setRtsState,%{public}d", buf, 8u);
  }
  int v9 = 4;
  if (a2 != 1)
  {
    if (!a2 && ioctl(*(_DWORD *)(a1 + 56), 0x8004746BuLL, &v9) < 0)
    {
      uint64_t v5 = qword_100114840;
      BOOL result = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR);
      if (result)
      {
        int v7 = *__error();
        *(_DWORD *)audit_token_t buf = 67240448;
        int v11 = 0;
        __int16 v12 = 1026;
        int v13 = v7;
LABEL_13:
        _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "#comm,setRtsState,%{public}d,ioctl error,%{public}d", buf, 0xEu);
        return 0;
      }
      return result;
    }
    return 1;
  }
  if ((ioctl(*(_DWORD *)(a1 + 56), 0x8004746CuLL, &v9) & 0x80000000) == 0) {
    return 1;
  }
  uint64_t v5 = qword_100114840;
  BOOL result = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR);
  if (result)
  {
    int v8 = *__error();
    *(_DWORD *)audit_token_t buf = 67240448;
    int v11 = 1;
    __int16 v12 = 1026;
    int v13 = v8;
    goto LABEL_13;
  }
  return result;
}

BOOL sub_10003D854(uint64_t a1)
{
  BOOL v2 = sub_10003D6A0(a1, 1);
  int v3 = qword_100114840;
  if (v2)
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#comm,exitLowPowerMode,success", buf, 2u);
    }
    *(unsigned char *)(a1 + 61) = 0;
  }
  else if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "#comm,exitLowPowerMode,failure", v5, 2u);
  }
  return v2;
}

BOOL sub_10003D91C(uint64_t a1)
{
  if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 32))(a1))
  {
    if (tcflush(*(_DWORD *)(a1 + 56), 3))
    {
      BOOL v2 = qword_100114838;
      if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
      {
        int v3 = *__error();
        v7[0] = 67240192;
        v7[1] = v3;
        _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#comm,readWriteFlush,TCIOFLUSH error,%{public}d", (uint8_t *)v7, 8u);
      }
      BOOL result = 0;
      *(unsigned char *)(a1 + 60) = 0;
    }
    else
    {
      unint64_t v6 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(v7[0]) = 0;
        _os_log_debug_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "#comm,readWriteFlush,success", (uint8_t *)v7, 2u);
      }
      return 1;
    }
  }
  else
  {
    uint64_t v5 = qword_100114840;
    BOOL result = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO);
    if (result)
    {
      LOWORD(v7[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "#comm,readWriteFlush,not open", (uint8_t *)v7, 2u);
      return 0;
    }
  }
  return result;
}

BOOL sub_10003DA98(uint64_t a1)
{
  if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 32))(a1))
  {
    int v2 = tcflush(*(_DWORD *)(a1 + 56), 1);
    int v3 = qword_100114840;
    if (v2)
    {
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
      {
        int v4 = *__error();
        v7[0] = 67240192;
        v7[1] = v4;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "#comm,readFlush,TCIFLUSH error,%{public}d", (uint8_t *)v7, 8u);
      }
      BOOL result = 0;
      *(unsigned char *)(a1 + 60) = 0;
    }
    else
    {
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(v7[0]) = 0;
        _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "#comm,readFlush,success", (uint8_t *)v7, 2u);
      }
      return 1;
    }
  }
  else
  {
    unint64_t v6 = qword_100114840;
    BOOL result = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO);
    if (result)
    {
      LOWORD(v7[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "#comm,readFlush,not open", (uint8_t *)v7, 2u);
      return 0;
    }
  }
  return result;
}

__n128 sub_10003DC0C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)audit_token_t buf = 0;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "#comm,CommUart::pulseTimeMarkStrobe", buf, 2u);
  }
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5)
  {
    unint64_t v6 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_debug_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "#comm,CommUart::AsyncReader::pulseTimeMarkStrobe", buf, 2u);
    }
    __n128 v11 = 0uLL;
    char v12 = 0;
    uint64_t v7 = *(void *)(v5 + 8);
    if (v7)
    {
      (*(void (**)(uint8_t *__return_ptr))(*(void *)v7 + 48))(buf);
      __n128 v11 = *(__n128 *)buf;
      char v12 = v14;
    }
    else
    {
      int v10 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)audit_token_t buf = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "#comm,fGpio,null", buf, 2u);
      }
    }
    __n128 result = v11;
    *(__n128 *)a2 = v11;
    *(unsigned char *)(a2 + 16) = v12;
  }
  else
  {
    int v8 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "#comm,fAsyncReader,null", buf, 2u);
    }
  }
  return result;
}

void *sub_10003DDB0(void *a1, uint64_t a2)
{
  sub_10003E064((uint64_t)v4, a2);
  sub_10003E0FC(v4, a1);
  sub_10003DF34(v4);
  return a1;
}

uint64_t sub_10003DE24(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t result = (*(uint64_t (**)(void, void, void))(*(void *)*v1 + 56))(*v1, v1[8], v1[10] - v1[8]);
  if (result >= 1 && v1[6])
  {
    uint64_t v3 = v1[8];
    return sub_10003DEB0((uint64_t)(v1 + 3), v3, result);
  }
  return result;
}

uint64_t sub_10003DEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  uint64_t v3 = *(void *)(a1 + 24);
  if (!v3) {
    sub_100003600();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(*(void *)v3 + 48))(v3, &v6, &v5);
}

BOOL sub_10003DF08(uint64_t a1)
{
  return *(_DWORD *)(a1 + 56) != -1;
}

uint64_t sub_10003DF18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

double sub_10003DF20(uint64_t a1, double a2)
{
  LOBYTE(a2) = *(unsigned char *)(a1 + 17);
  return (double)*(unint64_t *)&a2 * 10.0;
}

void *sub_10003DF34(void *a1)
{
  int v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void **sub_10003DFB8(void **result, void *a2)
{
  int v2 = *result;
  wireless_diagnostics::google::protobuf::UnknownFieldSet *result = a2;
  if (v2)
  {
    sub_10003CC0C((uint64_t)v2);
    uint64_t v3 = (void *)v2[8];
    if (v3)
    {
      v2[9] = v3;
      operator delete(v3);
    }
    sub_10003DF34(v2 + 3);
    uint64_t v4 = v2[1];
    v2[1] = 0;
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    operator delete();
  }
  return result;
}

uint64_t sub_10003E064(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_10003E0FC(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    uint64_t v4 = (void *)result[3];
    uint64_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        void v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        void v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        void v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      void v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_10003E35C(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100002FCC(a1);
}

uint64_t sub_10003E368()
{
  uint64_t result = CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_;
  if (CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_) {
    return (*(uint64_t (**)(void))(*(void *)CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 8))();
  }
  return result;
}

void CLP::LogEntry::PrivateData::protobuf_AddDesc_CLPPrivateDataCapture_2eproto(CLP::LogEntry::PrivateData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_100114308 & 1) == 0)
  {
    byte_100114308 = 1;
    uint64_t v4 = (CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"Sources/Protobuf/Generated/CLPPrivateDataCapture.pb.cc", a4);
    CLP::LogEntry::PrivateData::protobuf_AddDesc_CLPGnssMeasApi_2eproto(v4, v5, v6, v7);
    proto::gpsd::protobuf_AddDesc_GpsdProtocol_2eproto(v8, v9, v10, v11);
    operator new();
  }
}

void CLP::LogEntry::PrivateData::PrivateDataCapture::MergeFrom(CLP::LogEntry::PrivateData::PrivateDataCapture *this, const CLP::LogEntry::PrivateData::PrivateDataCapture *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (*((unsigned char *)a2 + 20))
  {
    *((_DWORD *)this + 5) |= 1u;
    uint64_t v4 = (proto::gpsd::LogEntry *)*((void *)this + 1);
    if (!v4) {
      operator new();
    }
    uint64_t v5 = (const proto::gpsd::LogEntry *)*((void *)a2 + 1);
    if (!v5) {
      uint64_t v5 = *(const proto::gpsd::LogEntry **)(CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 8);
    }
    proto::gpsd::LogEntry::MergeFrom(v4, v5);
  }
}

void sub_10003E570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10003E588(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100107B20;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10003E618(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_10003E588(a1);

  operator delete();
}

void sub_10003E650()
{
}

uint64_t CLP::LogEntry::PrivateData::PrivateDataCapture::Clear(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 20))
  {
    this = *(void *)(this + 8);
    if (this) {
      this = proto::gpsd::LogEntry::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 20) = 0;
  return this;
}

uint64_t CLP::LogEntry::PrivateData::PrivateDataCapture::MergePartialFromCodedStream(CLP::LogEntry::PrivateData::PrivateDataCapture *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        TagFallbacuint64_t k = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
      }
      if (TagFallback != 8034) {
        break;
      }
      *((_DWORD *)this + 5) |= 1u;
      uint64_t v7 = (proto::gpsd::LogEntry *)*((void *)this + 1);
      if (!v7) {
        operator new();
      }
      unsigned int v17 = 0;
      int v8 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v17)) {
          return 0;
        }
      }
      else
      {
        unsigned int v17 = *v8;
        *((void *)a2 + 1) = v8 + 1;
      }
      int v9 = *((_DWORD *)a2 + 14);
      int v10 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v9 + 1;
      if (v9 >= v10) {
        return 0;
      }
      int v11 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
      if (!proto::gpsd::LogEntry::MergePartialFromCodedStream(v7, a2, v12) || !*((unsigned char *)a2 + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v11);
      int v13 = *((_DWORD *)a2 + 14);
      BOOL v14 = __OFSUB__(v13, 1);
      int v15 = v13 - 1;
      if (v15 < 0 == v14) {
        *((_DWORD *)a2 + 14) = v15;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_10003E8AC(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 20))
  {
    uint64_t v5 = *(void *)(result + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 8);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3EC, v5, a2, a4);
  }
  return result;
}

uint64_t CLP::LogEntry::PrivateData::PrivateDataCapture::ByteSize(CLP::LogEntry::PrivateData::PrivateDataCapture *this, unint64_t a2)
{
  if (*((unsigned char *)this + 20))
  {
    uint64_t v4 = (proto::gpsd::LogEntry *)*((void *)this + 1);
    if (!v4) {
      uint64_t v4 = *(proto::gpsd::LogEntry **)(CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 8);
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gpsd::LogEntry::ByteSize(v4, a2);
    int v7 = (int)v5;
    if (v5 >= 0x80) {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, v6);
    }
    else {
      int v8 = 1;
    }
    uint64_t result = (v7 + v8 + 2);
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

void sub_10003E948(CLP::LogEntry::PrivateData::PrivateDataCapture *a1, void *lpsrc)
{
  CLP::LogEntry::PrivateData::PrivateDataCapture::MergeFrom(a1, (const CLP::LogEntry::PrivateData::PrivateDataCapture *)lpsrc);
}

uint64_t sub_10003E9EC()
{
  return 1;
}

void *sub_10003E9F4@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "CLP.LogEntry.PrivateData.PrivateDataCapture");
}

uint64_t sub_10003EA04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t GnssHal::CommPcie::CommPcie(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = off_100107BB0;
  *(unsigned char *)(a1 + 96) = 0;
  sub_10001D360(a1 + 104, a3);
  if (qword_100114328)
  {
    uint64_t v5 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)int v8 = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "#pcie,sReadCallbackFunction collision", v8, 2u);
    }
  }
  sub_10001D864((uint64_t)v8, a2);
  uint64_t v6 = (uint64_t)v9;
  if (v9 == v8)
  {
    if ((uint64_t *)qword_100114348 == &qword_100114330)
    {
      (*(void (**)(uint8_t *, void *))(*(void *)v8 + 24))(v8, v10);
      (*(void (**)(uint8_t *))(*(void *)v9 + 32))(v9);
      int v9 = 0;
      (*(void (**)(uint64_t, uint8_t *))(*(void *)qword_100114348 + 24))(qword_100114348, v8);
      (*(void (**)(uint64_t))(*(void *)qword_100114348 + 32))(qword_100114348);
      qword_100114348 = 0;
      int v9 = v8;
      (*(void (**)(void *, uint64_t *))(v10[0] + 24))(v10, &qword_100114330);
      (*(void (**)(void *))(v10[0] + 32))(v10);
    }
    else
    {
      (*(void (**)(uint8_t *, uint64_t *))(*(void *)v8 + 24))(v8, &qword_100114330);
      (*(void (**)(uint8_t *))(*(void *)v9 + 32))(v9);
      int v9 = (uint8_t *)qword_100114348;
    }
    qword_100114348 = (uint64_t)&qword_100114330;
  }
  else if ((uint64_t *)qword_100114348 == &qword_100114330)
  {
    (*(void (**)(void))(qword_100114330 + 24))();
    (*(void (**)(uint64_t))(*(void *)qword_100114348 + 32))(qword_100114348);
    qword_100114348 = (uint64_t)v9;
    int v9 = v8;
  }
  else
  {
    int v9 = (uint8_t *)qword_100114348;
    qword_100114348 = v6;
  }
  sub_10001D7E0(v8);
  return a1;
}

void sub_10003ED34(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_100002FCC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10003ED58(uint64_t a1)
{
  *(void *)a1 = off_100107BB0;
  sub_10003F7D8();
  sub_100040AB4();
  if (*(unsigned char *)(a1 + 96))
  {
    uint64_t v2 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "#pcie,freeInternal", buf, 2u);
    }
    int v3 = TelephonyUtilTransportFree();
    uint64_t v4 = qword_100114840;
    if (v3)
    {
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)int v7 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#pcie,freeInternal,success", v7, 2u);
      }
    }
    else if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v6 = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "#pcie,freeInternal,failure", v6, 2u);
    }
    *(unsigned char *)(a1 + 96) = 0;
  }
  sub_100018B88((void *)(a1 + 104));
  return a1;
}

void sub_10003EE94(uint64_t a1)
{
  sub_10003ED58(a1);

  operator delete();
}

uint64_t sub_10003EECC(uint64_t a1, uint64_t a2)
{
  sub_10003DDB0(qword_100114310, a2);
  int v3 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v4 = *(void *)(a2 + 24) != 0;
    v6[0] = 67240192;
    v6[1] = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#pcie,setReadCallback,%{public}d", (uint8_t *)v6, 8u);
  }
  return 1;
}

uint64_t sub_10003EF88(uint64_t a1)
{
  return sub_10003EF90(a1, 30);
}

uint64_t sub_10003EF90(uint64_t a1, int a2)
{
  uint64_t v2 = qword_100114840;
  if (*(unsigned char *)(a1 + 96))
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#pcie,open,already open", buf, 2u);
    }
    return 1;
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)audit_token_t buf = 67240192;
      int v12 = a2;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "#pcie,open,creating,timeout,%{public}d", buf, 8u);
    }
    TelephonyBasebandPCITransportInitParameters();
    *(_DWORD *)audit_token_t buf = 14;
    int v14 = 1000 * a2;
    v15 |= 5u;
    uint64_t v16 = 0x100000000004;
    int v19 = 25;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    _OWORD v10[2] = sub_10003F1C4;
    void v10[3] = &unk_100107C50;
    uint64_t v10[4] = a1;
    int v13 = v10;
    unsigned int v17 = &stru_100107C90;
    int v18 = &stru_100107CB0;
    uint64_t v3 = TelephonyBasebandPCITransportCreate();
    uint64_t v6 = qword_100114840;
    if (v3)
    {
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)int v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#pcie,open,success", v9, 2u);
      }
      char v7 = 1;
    }
    else
    {
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)int v9 = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "#pcie,open,failure", v9, 2u);
      }
      char v7 = 0;
    }
    *(unsigned char *)(a1 + 96) = v7;
  }
  return v3;
}

void sub_10003F1C4(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 32);
  memset(&v15, 0, sizeof(v15));
  if (a2)
  {
    if (a2 == 1)
    {
      int v8 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)audit_token_t buf = 134283777;
        *(void *)unsigned int v17 = a3;
        *(_WORD *)&__int16 v17[8] = 2049;
        *(void *)&v17[10] = a4;
        _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "#pcie,statusBlock,PCITransportStatusError,%{private}p,%{private}p", buf, 0x16u);
      }
      int v9 = "#pcie_TransportStatusError";
    }
    else
    {
      int v11 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)audit_token_t buf = 67240705;
        *(_DWORD *)unsigned int v17 = a2;
        *(_WORD *)&void v17[4] = 2049;
        *(void *)&v17[6] = a3;
        *(_WORD *)&v17[14] = 2049;
        *(void *)&v17[16] = a4;
        _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "#pcie,statusBlock,Unrecognized status 0x%{public}08x,%{private}p,%{private}p", buf, 0x1Cu);
      }
      int v9 = "#pcie_UnknownStatus";
    }
  }
  else
  {
    int v10 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)audit_token_t buf = 134283777;
      *(void *)unsigned int v17 = a3;
      *(_WORD *)&__int16 v17[8] = 2049;
      *(void *)&v17[10] = a4;
      _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "#pcie,statusBlock,PCITransportStatusNotReady,%{private}p,%{private}p", buf, 0x16u);
    }
    int v9 = "#pcie_TransportStatusNotReady";
  }
  std::string::assign(&v15, v9);
  (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  if (!qword_100114348) {
    exit(-1);
  }
  int v12 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    int v13 = &v15;
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v13 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)audit_token_t buf = 136446210;
    *(void *)unsigned int v17 = v13;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#pcie,invoking exit callback,%{public}s", buf, 0xCu);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    sub_1000186E8(&__p, v15.__r_.__value_.__l.__data_, v15.__r_.__value_.__l.__size_);
  }
  else {
    std::string __p = v15;
  }
  if (!qword_100114348) {
    sub_100003600();
  }
  (*(void (**)(uint64_t, std::string *))(*(void *)qword_100114348 + 48))(qword_100114348, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  sub_100040AB4();
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
}

void sub_10003F4A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void sub_10003F4D8(id a1, int a2, void *a3, unsigned int a4)
{
  uint64_t v7 = qword_100114328;
  if (!a2 && a4 && qword_100114328)
  {
    sub_10003DEB0((uint64_t)qword_100114310, (uint64_t)a3, a4);
  }
  else
  {
    int v8 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 67241216;
      v9[1] = a2;
      __int16 v10 = 1026;
      BOOL v11 = a2 == -536870165;
      __int16 v12 = 1026;
      BOOL v13 = a2 == -536870168;
      __int16 v14 = 1026;
      unsigned int v15 = a4;
      __int16 v16 = 1026;
      BOOL v17 = v7 != 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#pcie,async read failure,0x%{public}08x,is_aborted,%{public}d,is_overrun,%{public}d,sz,%{public}u,callback,%{public}d", (uint8_t *)v9, 0x20u);
    }
    free(a3);
  }
}

void sub_10003F644(id a1, int a2, void *a3, unsigned int a4)
{
  if (a2)
  {
    uint64_t v6 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)audit_token_t buf = 67240448;
      int v11 = a2;
      __int16 v12 = 1026;
      unsigned int v13 = a4;
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "#pcie,write error,0x%{public}08x,sz,%{public}u", buf, 0xEu);
    }
    if (!qword_100114348) {
      exit(-2);
    }
    uint64_t v7 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#pcie,invoking exit callback,#pcie_writeError", buf, 2u);
    }
    sub_1000033AC(__p, "#pcie_writeError");
    if (!qword_100114348) {
      sub_100003600();
    }
    (*(void (**)(uint64_t, void **))(*(void *)qword_100114348 + 48))(qword_100114348, __p);
    if (v9 < 0) {
      operator delete(__p[0]);
    }
    sub_100040AB4();
  }
}

void sub_10003F7B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_10003F7D8()
{
  uint64_t v0 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)uint64_t v2 = 0;
    _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#pcie,ignoring close", v2, 2u);
  }
  uint64_t result = (uint64_t *)qword_100114328;
  qword_100114328 = 0;
  if (result == &qword_100114310) {
    return (uint64_t *)(*(uint64_t (**)(uint64_t *))(qword_100114310 + 32))(&qword_100114310);
  }
  if (result) {
    return (uint64_t *)(*(uint64_t (**)(uint64_t *))(*result + 40))(result);
  }
  return result;
}

uint64_t GnssHal::CommPcie::openWithRetries(GnssHal::CommPcie *this, int a2)
{
  unint64_t MachContinuousTimeNs = (gpsd::util *)gpsd::util::getMachContinuousTimeNs(this);
  double v5 = (double)(unint64_t)MachContinuousTimeNs * 0.000000001;
  double v6 = (double)a2;
  double v7 = (double)gpsd::util::getMachContinuousTimeNs(MachContinuousTimeNs) * 0.000000001;
  double v8 = v5 - v7 + (double)a2;
  int v9 = llround(v8);
  if (v9 >= 30) {
    int v10 = 30;
  }
  else {
    int v10 = v9;
  }
  if (v10 >= 1)
  {
    do
    {
      int v11 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)audit_token_t buf = 67240448;
        int v27 = v10;
        __int16 v28 = 2050;
        double v29 = v8;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "#pcie,thisOpen,start,thisTimeoutSec,%{public}d,timeLeftSec,%{public}.3f", buf, 0x12u);
      }
      __int16 v12 = (gpsd::util *)sub_10003EF90((uint64_t)this, v10);
      int v13 = (int)v12;
      double v14 = (double)gpsd::util::getMachContinuousTimeNs(v12) * 0.000000001;
      double v15 = v14 - v7;
      double v16 = v5 - v14 + v6;
      BOOL v17 = qword_100114840;
      int v18 = (gpsd::util *)os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT);
      if (v18)
      {
        *(_DWORD *)audit_token_t buf = 67240704;
        int v27 = v13;
        __int16 v28 = 2050;
        double v29 = v15;
        __int16 v30 = 2050;
        double v31 = v16;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "#pcie,thisOpen,success,%{public}d,durationSec,%{public}.3f,timeLeftSec,%{public}.3f", buf, 0x1Cu);
      }
      if (v16 < 5.0) {
        char v19 = 1;
      }
      else {
        char v19 = v13;
      }
      if (v19) {
        break;
      }
      if (v15 < 5.0) {
        int v18 = (gpsd::util *)sleep(5u);
      }
      double v7 = (double)gpsd::util::getMachContinuousTimeNs(v18) * 0.000000001;
      double v8 = v5 - v7 + v6;
      int v20 = llround(v8);
      int v10 = v20 >= 30 ? 30 : v20;
    }
    while (v10 > 0);
  }
  uint64_t v21 = (*(uint64_t (**)(GnssHal::CommPcie *))(*(void *)this + 32))(this);
  int v22 = qword_100114840;
  BOOL v23 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT);
  if (v23)
  {
    unint64_t v24 = gpsd::util::getMachContinuousTimeNs((gpsd::util *)v23);
    *(_DWORD *)audit_token_t buf = 67240448;
    int v27 = v21;
    __int16 v28 = 2050;
    double v29 = (double)v24 * 0.000000001 - v5;
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "#pcie,overallOpen,success,%{public}d,durationSeconds,%{public}.3f", buf, 0x12u);
  }
  return v21;
}

uint64_t sub_10003FB48()
{
  return 0;
}

uint64_t sub_10003FB50()
{
  return -1;
}

uint64_t sub_10003FB58()
{
  return 0;
}

uint64_t sub_10003FB60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v10 = 0;
  double v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t, void))(a1 + 8);
  uint64_t v3 = a1 + 8;
  BOOL v4 = v5;
  if (!v5 || (uint64_t v6 = a3, (v4(v3, a2, a3, &v10, 1, 1000, 0) & 1) == 0))
  {
    double v7 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)int v9 = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "#pcie, TelephonyUtilTransportWrite failure", v9, 2u);
    }
    return -1;
  }
  return v6;
}

BOOL sub_10003FBF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
  return v4 >= 0 && v4 == a3;
}

uint64_t sub_10003FC48()
{
  uint64_t v0 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    int v2 = 136315138;
    uint64_t v3 = "enterLowPowerMode";
    _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#pcie, %s, interface not available on PCIe platform", (uint8_t *)&v2, 0xCu);
  }
  return 0;
}

uint64_t sub_10003FCF4()
{
  uint64_t v0 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
  {
    int v2 = 136315138;
    uint64_t v3 = "exitLowPowerMode";
    _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#pcie, %s, interface not available on PCIe platform", (uint8_t *)&v2, 0xCu);
  }
  return 1;
}

uint64_t sub_10003FDA0()
{
  uint64_t v0 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)int v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_INFO, "#pcie,readWriteFlush not available on PCIe", v2, 2u);
  }
  return 1;
}

uint64_t sub_10003FE08()
{
  uint64_t v0 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)int v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_INFO, "#pcie,readFlush not available on PCIe", v2, 2u);
  }
  return 1;
}

void sub_10003FE70(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  int v3 = *(_DWORD *)(GpsdPlatformInfo::instance(0) + 8);
  if (v3 == 107 || v3 == 202)
  {
    if (*(unsigned char *)(a1 + 96))
    {
      v5[0] = 0;
      v5[1] = v5;
      _DWORD v5[2] = 0x3812000000;
      v5[3] = sub_1000407B0;
      void v5[4] = sub_1000407C0;
      void v5[5] = "";
      operator new();
    }
  }
  else
  {
    uint64_t v4 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      LOWORD(__lk.__m_) = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "#pcie,#tt,pulseTimemarkStrobe not supported", (uint8_t *)&__lk, 2u);
    }
  }
}

void sub_1000406E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,std::exception_ptr a28,std::mutex *a29,char a30)
{
  _Block_object_dispose(&a21, 8);
  sub_100040C30(v30);
  _Unwind_Resume(a1);
}

uint64_t sub_1000407B0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 48) = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0;
  return result;
}

uint64_t *sub_1000407C0(uint64_t a1)
{
  return sub_100040C30((uint64_t *)(a1 + 48));
}

void sub_1000407C8(uint64_t a1, int a2, uint64_t a3, long long *a4)
{
  if (a2 || !a4)
  {
    double v8 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      LODWORD(v10) = 67240192;
      DWORD1(v10) = a2;
      _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "#pcie,#tt,completion failure,0x%{public}08x", (uint8_t *)&v10, 8u);
    }
    uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 8);
    LOBYTE(v10) = 0;
    int v12 = 2;
    sub_1000408DC(*(void *)(v9 + 48), &v10);
  }
  else
  {
    GpsdPlatformInfo::instance(0);
    uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
    long long v10 = *a4;
    uint64_t v11 = *((void *)a4 + 2);
    int v12 = 0;
    sub_1000408DC(*(void *)(v7 + 48), &v10);
  }
}

void sub_1000408DC(uint64_t a1, _OWORD *a2)
{
  if (!a1) {
    sub_100019754(3u);
  }
  uint64_t v4 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  if ((*(unsigned char *)(a1 + 136) & 1) != 0
    || (v7.__ptr_ = 0, uint64_t v5 = *(void *)(a1 + 16), std::exception_ptr::~exception_ptr(&v7), v5))
  {
    sub_100019754(2u);
  }
  long long v6 = a2[1];
  *(_OWORD *)(a1 + 144) = *a2;
  *(_OWORD *)(a1 + 160) = v6;
  *(_DWORD *)(a1 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 88));
  std::mutex::unlock(v4);
}

void sub_100040978(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_10004098C(uint64_t a1, _OWORD *a2)
{
  if (a2)
  {
    uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
    *(_OWORD *)long long v6 = *a2;
    int v4 = 1;
  }
  else
  {
    uint64_t v5 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long v6 = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "#pcie,#tt-ptm,completion failure", v6, 2u);
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
    v6[0] = 0;
    int v4 = 2;
  }
  int v7 = v4;
  sub_1000408DC(*(void *)(v3 + 48), v6);
}

uint64_t sub_100040A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[0] = a2;
  v5[1] = a3;
  uint64_t v3 = *(void *)(a1 + 24);
  if (!v3) {
    sub_100003600();
  }
  return (*(uint64_t (**)(uint64_t, void *))(*(void *)v3 + 48))(v3, v5);
}

uint64_t sub_100040A88(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 96);
}

uint64_t sub_100040A90()
{
  return 0xFFFFFFFFLL;
}

uint64_t sub_100040A98()
{
  return 1;
}

double sub_100040AA0()
{
  return 0.0;
}

void sub_100040AA8(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t *sub_100040AB4()
{
  uint64_t result = (uint64_t *)qword_100114348;
  qword_100114348 = 0;
  if (result == &qword_100114330) {
    return (uint64_t *)(*(uint64_t (**)(uint64_t *))(qword_100114330 + 32))(&qword_100114330);
  }
  if (result) {
    return (uint64_t *)(*(uint64_t (**)(void))(*result + 40))();
  }
  return result;
}

void sub_100040B20(uint64_t a1)
{
  int v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);

  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

void sub_100040B8C(uint64_t a1)
{
  int v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);

  operator delete();
}

uint64_t sub_100040C0C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 8))();
}

uint64_t *sub_100040C30(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    if ((*(unsigned char *)(v2 + 136) & 1) == 0)
    {
      v6.__ptr_ = 0;
      uint64_t v3 = *(void *)(v2 + 16);
      std::exception_ptr::~exception_ptr(&v6);
      uint64_t v2 = *a1;
      if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
      {
        v7.__cat_ = std::future_category();
        *(void *)&v7.__val_ = 4;
        std::future_error::future_error(&v5, v7);
        sub_1000196C8(&v5);
      }
    }
    if (!atomic_fetch_add((atomic_ullong *volatile)(v2 + 8), 0xFFFFFFFFFFFFFFFFLL)) {
      (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
    }
  }
  return a1;
}

uint64_t sub_100040D14()
{
  qword_100114328 = 0;
  __cxa_atexit((void (*)(void *))sub_10003EA10, qword_100114310, (void *)&_mh_execute_header);
  qword_100114348 = 0;

  return __cxa_atexit((void (*)(void *))sub_10003EA14, &qword_100114330, (void *)&_mh_execute_header);
}

void GpsdProtobufRouter::GpsdProtobufRouter(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 16) = a5;
  *(unsigned char *)(a1 + 17) = 0;
  *(void *)(a1 + 24) = *a4;
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 56) = 0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  uint64_t v7 = a1 + 112;
  uint64_t v8 = *(void *)(a2 + 24);
  if (v8)
  {
    if (v8 == a2)
    {
      *(void *)(a1 + 136) = v7;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), v7);
LABEL_6:
      uint64_t v9 = *(void *)(a3 + 24);
      if (v9)
      {
        if (v9 == a3)
        {
          *(void *)(a1 + 168) = a1 + 144;
          (*(void (**)(void, uint64_t))(**(void **)(a3 + 24) + 24))(*(void *)(a3 + 24), a1 + 144);
LABEL_11:
          if (*(void *)(a1 + 136))
          {
            if (*(void *)(a1 + 168))
            {
              v30[3] = 0;
              void v29[3] = 0;
              if (*(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) == 107 || *(unsigned char *)(a1 + 16))
              {
                *(void *)audit_token_t buf = off_100107D90;
                *(void *)&uint8_t buf[8] = a1;
                *(void *)&v33[4] = buf;
                sub_1000435D4(buf, v30);
                long long v10 = sub_100018F98(buf);
                uint64_t v11 = off_100107E20;
              }
              else
              {
                *(void *)audit_token_t buf = off_100107EB0;
                *(void *)&uint8_t buf[8] = a1;
                *(void *)&v33[4] = buf;
                sub_1000435D4(buf, v30);
                long long v10 = sub_100018F98(buf);
                uint64_t v11 = off_100107F30;
              }
              *(void *)audit_token_t buf = v11;
              *(void *)&uint8_t buf[8] = a1;
              *(void *)&v33[4] = buf;
              sub_100043920(v10, v29);
              sub_10001901C(buf);
              operator new();
            }
            double v16 = qword_100114840;
            if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
            {
              *(_WORD *)audit_token_t buf = 0;
              _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "#router,fRemoteIndicationCallback,null", buf, 2u);
              double v16 = qword_100114840;
            }
            if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)audit_token_t buf = 136446722;
              *(void *)&uint8_t buf[4] = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Daemon/GpsdProtobufRouter.mm";
              *(_WORD *)&uint8_t buf[12] = 1026;
              *(_DWORD *)&unsigned char buf[14] = 26;
              __int16 v32 = 2082;
              *(void *)unint64_t v33 = "GpsdProtobufRouter";
              _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
            }
            sub_1000033AC(v21, "assert");
            sub_1000033AC(v19, "GpsdProtobufRouter");
            sub_1000033AC(v17, "#router,fRemoteIndicationCallback,null");
            gpsd::util::triggerDiagnosticReport((uint64_t)v21, (long long *)v19, (long long *)v17);
            if (v18 < 0) {
              operator delete(v17[0]);
            }
            if (v20 < 0) {
              operator delete(v19[0]);
            }
            int v13 = "false && \"#router,fRemoteIndicationCallback,null\"";
            int v14 = 26;
            if (v22 < 0)
            {
              double v15 = (void **)v21;
              goto LABEL_38;
            }
          }
          else
          {
            int v12 = qword_100114840;
            if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
            {
              *(_WORD *)audit_token_t buf = 0;
              _os_log_error_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "#router,fRemoteResponseCallback,null", buf, 2u);
              int v12 = qword_100114840;
            }
            if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)audit_token_t buf = 136446722;
              *(void *)&uint8_t buf[4] = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Daemon/GpsdProtobufRouter.mm";
              *(_WORD *)&uint8_t buf[12] = 1026;
              *(_DWORD *)&unsigned char buf[14] = 25;
              __int16 v32 = 2082;
              *(void *)unint64_t v33 = "GpsdProtobufRouter";
              _os_log_error_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
            }
            sub_1000033AC(v27, "assert");
            sub_1000033AC(v25, "GpsdProtobufRouter");
            sub_1000033AC(__p, "#router,fRemoteResponseCallback,null");
            gpsd::util::triggerDiagnosticReport((uint64_t)v27, (long long *)v25, (long long *)__p);
            if (v24 < 0) {
              operator delete(__p[0]);
            }
            if (v26 < 0) {
              operator delete(v25[0]);
            }
            int v13 = "false && \"#router,fRemoteResponseCallback,null\"";
            int v14 = 25;
            if (v28 < 0)
            {
              double v15 = (void **)v27;
LABEL_38:
              operator delete(*v15);
            }
          }
          __assert_rtn("GpsdProtobufRouter", "GpsdProtobufRouter.mm", v14, v13);
        }
        uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 16))(v9);
      }
      *(void *)(a1 + 168) = v9;
      goto LABEL_11;
    }
    uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 16))(v8);
  }
  *(void *)(a1 + 136) = v8;
  goto LABEL_6;
}

void sub_10004164C()
{
  sub_10001901C((void *)(v0 - 160));
  sub_1000273C8((void *)(v0 - 128));
  operator delete();
}

void GpsdProtobufRouter::handleRequest(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v6 = *(void *)a1;
    sub_100010FD4(v6, a2, a3);
    return;
  }
  uint64_t v7 = *a2;
  if ((*(unsigned char *)(*a2 + 388) & 4) == 0
    || (unsigned int v8 = *(_DWORD *)(v7 + 20), (proto::gpsd::Request_Type_IsValid((proto::gpsd *)v8) & 1) == 0))
  {
    int v14 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "#router,dispatchRequest,noValidType", buf, 2u);
    }
    *(void *)audit_token_t buf = &off_10010DB10;
    long long v29 = 0uLL;
    *(void *)&long long v30 = 0;
    unsigned int v15 = gnss::Convert::toProtobuf(4u);
    if (v15 >= 0xA) {
      __assert_rtn("set_result_code", "GpsdProtocol.pb.h", 7702, "::proto::gnss::Result_IsValid(value)");
    }
    DWORD1(v30) |= 4u;
    HIDWORD(v29) = v15;
    *(void *)audit_token_t buf = &off_10010DB10;
    double v16 = buf;
    goto LABEL_19;
  }
  if (v8 - 51 <= 1)
  {
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    v23[0] = &off_10010DB10;
    v23[1] = 0;
    uint64_t v9 = (proto::gpsd *)*(unsigned int *)(v7 + 20);
    if (proto::gpsd::Request_Type_IsValid(v9))
    {
      HIDWORD(v25) = 1;
      LODWORD(v24) = v9;
      unsigned int v10 = gnss::Convert::toProtobuf(1u);
      if (v10 < 0xA)
      {
        HIDWORD(v25) |= 4u;
        HIDWORD(v24) = v10;
        uint64_t v11 = *(void *)(a1 + 136);
        if (!v11) {
          sub_100003600();
        }
        (*(void (**)(uint64_t, void *))(*(void *)v11 + 48))(v11, v23);
        *(void *)audit_token_t buf = &off_10010DA98;
        long long v52 = 0u;
        long long v53 = 0u;
        long long v45 = 0u;
        long long v46 = 0u;
        long long v47 = 0u;
        long long v48 = 0u;
        long long v49 = 0u;
        long long v50 = 0u;
        long long v29 = 0u;
        long long v30 = 0u;
        long long v31 = 0u;
        long long v32 = 0u;
        long long v33 = 0u;
        long long v34 = 0u;
        long long v35 = 0u;
        long long v36 = 0u;
        long long v37 = 0u;
        long long v38 = 0u;
        long long v39 = 0u;
        long long v40 = 0u;
        long long v41 = 0u;
        long long v42 = 0u;
        long long v43 = 0u;
        long long v44 = 0u;
        char v51 = 0;
        int v12 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          gpsd::util::stringify(*(_DWORD *)(*a2 + 20), (uint64_t)v26);
          char v19 = v27 >= 0 ? v26 : *(uint8_t **)v26;
          *(_DWORD *)char v54 = 136446210;
          uint64_t v55 = v19;
          _os_log_error_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "#router,deprecatedRequest,type,%{public}s", v54, 0xCu);
          if (v27 < 0) {
            operator delete(*(void **)v26);
          }
        }
        int v13 = *(_DWORD *)(*a2 + 20);
        if (v13 == 51)
        {
          HIDWORD(v29) = 1;
          DWORD2(v53) |= 0x8000004u;
          uint64_t v17 = v42;
          if (!(void)v42) {
            operator new();
          }
          *(_DWORD *)(v42 + 24) |= 1u;
          *(unsigned char *)(v17 + 16) = 1;
LABEL_28:
          operator new();
        }
        if (v13 == 52)
        {
          DWORD2(v53) |= 4u;
          HIDWORD(v29) = 2;
          goto LABEL_28;
        }
        char v18 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)char v26 = 0;
          _os_log_fault_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_FAULT, "#router,handleDeprecatedRequest,noway", v26, 2u);
        }
        proto::gpsd::Request::~Request((proto::gpsd::Request *)buf);
        v23[0] = &off_10010DB10;
        double v16 = (uint8_t *)v23;
LABEL_19:
        wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v16);
        return;
      }
      char v20 = "::proto::gnss::Result_IsValid(value)";
      int v21 = 7702;
      char v22 = "set_result_code";
    }
    else
    {
      char v20 = "::proto::gpsd::Request_Type_IsValid(value)";
      int v21 = 7657;
      char v22 = "set_request_type";
    }
    __assert_rtn(v22, "GpsdProtocol.pb.h", v21, v20);
  }

  sub_100041E28(a1, a2, a3, 2);
}

void sub_100041D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
}

void sub_100041E28(uint64_t a1, uint64_t *a2, unint64_t a3, int a4)
{
  int v8 = *(_DWORD *)(*a2 + 20);
  if ((v8 & 0xFFFFFFFE) != 0xE)
  {
    uint64_t v9 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      gpsd::util::stringify(v8, (uint64_t)__p);
      char v22 = v26 >= 0 ? __p : *(unsigned char **)__p;
      *(_DWORD *)audit_token_t buf = 136446722;
      *(void *)&uint8_t buf[4] = v22;
      __int16 v28 = 1026;
      int v29 = a4;
      __int16 v30 = 2050;
      double v31 = (double)a3 * 0.000001;
      _os_log_debug_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "#router,dispatchRequest,type,%{public}s,src,%{public}d,time,%{public}.3f,ms", buf, 0x1Cu);
      if (v26 < 0) {
        operator delete(*(void **)__p);
      }
    }
  }
  if (*(unsigned char *)(a1 + 56))
  {
    unsigned int v10 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      gpsd::util::stringify(*(_DWORD *)(a1 + 32), (uint64_t)__p);
      if (!*(unsigned char *)(a1 + 56)) {
        sub_100007064();
      }
      char v19 = __p;
      if (v26 < 0) {
        char v19 = *(unsigned char **)__p;
      }
      int v20 = *(_DWORD *)(a1 + 48);
      double v21 = (double)*(unint64_t *)(a1 + 40) * 1000000.0;
      *(_DWORD *)audit_token_t buf = 136446722;
      *(void *)&uint8_t buf[4] = v19;
      __int16 v28 = 1026;
      int v29 = v20;
      __int16 v30 = 2050;
      double v31 = v21;
      _os_log_debug_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "#router,pendingRequest,type,%{public}s,src,%{public}d,time,%{public}.3f,ms", buf, 0x1Cu);
      if (v26 < 0) {
        operator delete(*(void **)__p);
      }
    }
    operator new();
  }
  uint64_t v11 = *a2;
  int v12 = (proto::gpsd *)*(unsigned int *)(*a2 + 20);
  *(_DWORD *)(a1 + 32) = v12;
  *(void *)(a1 + 40) = a3;
  *(_DWORD *)(a1 + 48) = a4;
  unsigned __int8 v13 = 1;
  *(unsigned char *)(a1 + 56) = 1;
  if (a4 != 4)
  {
    if (v12 != 55)
    {
      if (v12 != 56) {
        goto LABEL_14;
      }
      unsigned __int8 v13 = 0;
    }
    atomic_store(v13, (unsigned __int8 *)(a1 + 17));
    int v12 = (proto::gpsd *)*(unsigned int *)(v11 + 20);
LABEL_14:
    switch((int)v12)
    {
      case 0:
        sub_1000429E8(a1, 0, 4u);
        break;
      case 1:
      case 2:
      case 3:
      case 6:
      case 7:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 32:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
        sub_100010FD4(*(void *)a1, a2, a3);
        break;
      case 4:
      case 5:
      case 8:
      case 9:
      case 16:
        sub_100010FD4(*(void *)a1, a2, a3);
        GnssEmergencyManager_Private::handleRemoteRequest(*(void *)(a1 + 8), (wireless_diagnostics::google::protobuf::MessageLite **)a2, a3);
        break;
      case 51:
      case 52:
        uint64_t v24 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)audit_token_t buf = 67240192;
          *(_DWORD *)&uint8_t buf[4] = v12;
          _os_log_fault_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_FAULT, "#router,dispatchRequestFromRemote,requestDeprecated,type,%{public}d", buf, 8u);
        }
        break;
      case 53:
      case 54:
      case 55:
      case 56:
      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 65:
      case 66:
      case 67:
      case 68:
      case 69:
      case 70:
      case 71:
      case 72:
      case 73:
      case 74:
      case 75:
      case 76:
        sub_1000429E8(a1, v12, 1u);
        GnssEmergencyManager_Private::handleRemoteRequest(*(void *)(a1 + 8), (wireless_diagnostics::google::protobuf::MessageLite **)a2, a3);
        break;
      default:
        return;
    }
    return;
  }
  if ((*(unsigned char *)(v11 + 388) & 4) != 0)
  {
    char v15 = (_BYTE)v12 - 8;
    if ((v12 - 8) > 0x3B) {
      goto LABEL_37;
    }
    if (((1 << v15) & 0x800000000000003) != 0)
    {
      sub_100010FD4(*(void *)a1, a2, a3);
      return;
    }
    if (((1 << v15) & 0x600000000000000) != 0)
    {
      double v16 = qword_100114840;
      if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
        return;
      }
      gpsd::util::stringify((int)v12, (uint64_t)buf);
      if ((SBYTE3(v31) & 0x80u) == 0) {
        uint64_t v17 = buf;
      }
      else {
        uint64_t v17 = *(unsigned char **)buf;
      }
      *(_DWORD *)std::string __p = 136446210;
      *(void *)&__p[4] = v17;
      char v18 = "#router,requestFromEmergency,type,%{public}s,deprecated";
    }
    else
    {
LABEL_37:
      sub_1000429E8(a1, v12, 7u);
      double v16 = qword_100114840;
      if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
        return;
      }
      gpsd::util::stringify((int)v12, (uint64_t)buf);
      if ((SBYTE3(v31) & 0x80u) == 0) {
        BOOL v23 = buf;
      }
      else {
        BOOL v23 = *(unsigned char **)buf;
      }
      *(_DWORD *)std::string __p = 136446210;
      *(void *)&__p[4] = v23;
      char v18 = "#router,requestFromEmergency,type,%{public}s,unavailable";
    }
    _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, v18, __p, 0xCu);
    if (SBYTE3(v31) < 0) {
      operator delete(*(void **)buf);
    }
  }
  else
  {
    int v14 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "#router,requestFromEmergency,noType", buf, 2u);
    }
  }
}

void sub_10004280C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t *a16)
{
  operator delete(v17);
  if (v16) {
    operator delete(v16);
  }
  char v19 = a16;
  a16 = 0;
  if (v19) {
    sub_100027298((uint64_t)&a16, v19);
  }
  _Unwind_Resume(a1);
}

void sub_1000429E8(uint64_t a1, proto::gpsd *this, unsigned int a3)
{
  int v4 = (int)this;
  v10[0] = &off_10010DB10;
  v10[1] = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  if (!proto::gpsd::Request_Type_IsValid(this))
  {
    uint64_t v7 = "::proto::gpsd::Request_Type_IsValid(value)";
    int v8 = 7657;
    uint64_t v9 = "set_request_type";
    goto LABEL_6;
  }
  HIDWORD(v12) = 1;
  LODWORD(v11) = v4;
  unsigned int v6 = gnss::Convert::toProtobuf(a3);
  if (v6 >= 0xA)
  {
    uint64_t v7 = "::proto::gnss::Result_IsValid(value)";
    int v8 = 7702;
    uint64_t v9 = "set_result_code";
LABEL_6:
    __assert_rtn(v9, "GpsdProtocol.pb.h", v8, v7);
  }
  HIDWORD(v12) |= 4u;
  HIDWORD(v11) = v6;
  sub_100042AF0(a1, (uint64_t)v10, 1);
  v10[0] = &off_10010DB10;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v10);
}

void sub_100042AD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
}

void sub_100042AF0(uint64_t a1, uint64_t a2, int a3)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v5 = *(void *)(a1 + 136);
    if (!v5) {
      sub_100003600();
    }
    unsigned int v6 = *(void (**)(void))(*(void *)v5 + 48);
    v6();
  }
  else if (*(unsigned char *)(a1 + 56))
  {
    int v8 = *(_DWORD *)(a2 + 16);
    if ((v8 & 0xFFFFFFFE) != 0xE)
    {
      uint64_t v9 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
      {
        gpsd::util::stringify(v8, (uint64_t)v48);
        if (v50[9] >= 0) {
          __int16 v30 = v48;
        }
        else {
          __int16 v30 = *(unsigned char **)v48;
        }
        if (!*(unsigned char *)(a1 + 56)) {
          sub_100007064();
        }
        double v31 = __p;
        gpsd::util::stringify(*(_DWORD *)(a1 + 32), (uint64_t)__p);
        if (v47 < 0) {
          double v31 = (void **)__p[0];
        }
        int v32 = gnss::Convert::fromProtobuf(*(_DWORD *)(a2 + 20));
        gnss::stringify(v32, v44);
        if (!*(unsigned char *)(a1 + 56)) {
          sub_100007064();
        }
        long long v33 = v44;
        if (v45 < 0) {
          long long v33 = (void **)v44[0];
        }
        int v34 = *(_DWORD *)(a1 + 48);
        uint64_t v35 = *(void *)(a1 + 104);
        *(_DWORD *)audit_token_t buf = 136447490;
        *(void *)&uint8_t buf[4] = v30;
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&unsigned char buf[14] = v31;
        *(_WORD *)&unsigned char buf[22] = 2082;
        long long v52 = (uint64_t (*)(uint64_t, uint64_t))v33;
        LOWORD(v53) = 1026;
        *(_DWORD *)((char *)&v53 + 2) = v34;
        HIWORD(v53) = 1026;
        LODWORD(v54) = a3;
        WORD2(v54) = 2050;
        *(void *)((char *)&v54 + 6) = v35;
        _os_log_debug_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "#router,handleResponse,requestType,%{public}s,pendingType,%{public}s,%{public}s,requestSrc,%{public}d, responseSrc,%{public}d,queued,%{public}zu", buf, 0x36u);
        if (v45 < 0) {
          operator delete(v44[0]);
        }
        if (v47 < 0) {
          operator delete(__p[0]);
        }
        if ((v50[9] & 0x80000000) != 0) {
          operator delete(*(void **)v48);
        }
      }
    }
    switch(a3)
    {
      case 0:
      case 2:
      case 4:
        unsigned int v10 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)audit_token_t buf = 67240192;
          *(_DWORD *)&uint8_t buf[4] = a3;
          _os_log_fault_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "#router,handleResponse,unexpectedResponseSource,%{public}d", buf, 8u);
        }
        break;
      case 1:
        uint64_t v12 = *(void *)(a1 + 136);
        if (!v12) {
          sub_100003600();
        }
        goto LABEL_17;
      case 3:
        if (!*(unsigned char *)(a1 + 56)) {
          sub_100007064();
        }
        if (*(_DWORD *)(a1 + 48) == 2)
        {
          uint64_t v12 = *(void *)(a1 + 136);
          if (!v12) {
            sub_100003600();
          }
LABEL_17:
          (*(void (**)(uint64_t, uint64_t))(*(void *)v12 + 48))(v12, a2);
        }
        else
        {
          unsigned __int8 v13 = qword_100114840;
          if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)audit_token_t buf = 0;
            _os_log_debug_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "#router,handleResponse,skip,requesterNotExpectResponse", buf, 2u);
          }
        }
        break;
      default:
        break;
    }
    if (*(unsigned char *)(a1 + 56)) {
      *(unsigned char *)(a1 + 56) = 0;
    }
    if (*(void *)(a1 + 104))
    {
      *(void *)audit_token_t buf = 0;
      *(void *)&uint8_t buf[8] = buf;
      *(void *)&uint8_t buf[16] = 0x3812000000;
      long long v52 = sub_100043318;
      long long v53 = sub_100043328;
      *(void *)&long long v54 = 0;
      uint64_t v14 = *(void *)(*(void *)(a1 + 72) + ((*(void *)(a1 + 96) >> 6) & 0x3FFFFFFFFFFFFF8));
      uint64_t v15 = *(void *)(a1 + 96) & 0x1FFLL;
      uint64_t v16 = *(void *)(v14 + 8 * v15);
      *(void *)(v14 + 8 * v15) = 0;
      *((void *)&v54 + 1) = v16;
      uint64_t v17 = *(uint64_t **)(*(void *)&buf[8] + 48);
      if (!v17 || (uint64_t v18 = *v17) == 0)
      {
        long long v36 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)long long v48 = 0;
          _os_log_error_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_ERROR, "#router,fRequestPendingSend,null", v48, 2u);
          long long v36 = qword_100114840;
        }
        if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long v48 = 136446722;
          *(void *)&v48[4] = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Daemon/GpsdProtobufRouter.mm";
          __int16 v49 = 1026;
          *(_DWORD *)long long v50 = 323;
          *(_WORD *)&v50[4] = 2082;
          *(void *)&v50[6] = "handleResponse";
          _os_log_error_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", v48, 0x1Cu);
        }
        sub_1000033AC(v42, "assert");
        sub_1000033AC(v40, "handleResponse");
        sub_1000033AC(v38, "#router,fRequestPendingSend,null");
        gpsd::util::triggerDiagnosticReport((uint64_t)v42, (long long *)v40, (long long *)v38);
        if (v39 < 0) {
          operator delete(v38[0]);
        }
        if (v41 < 0) {
          operator delete(v40[0]);
        }
        if (v43 < 0) {
          operator delete(v42[0]);
        }
        __assert_rtn("handleResponse", "GpsdProtobufRouter.mm", 323, "false && \"#router,fRequestPendingSend,null\"");
      }
      char v19 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
      {
        gpsd::util::stringify(*(_DWORD *)(v18 + 20), (uint64_t)__p);
        char v27 = v47 >= 0 ? __p : (void **)__p[0];
        double v28 = (double)*(unint64_t *)(*(void *)(*(void *)&buf[8] + 48) + 8) * 0.000001;
        uint64_t v29 = *(void *)(a1 + 104);
        *(_DWORD *)long long v48 = 136446722;
        *(void *)&v48[4] = v27;
        __int16 v49 = 2050;
        *(double *)long long v50 = v28;
        *(_WORD *)&v50[8] = 2050;
        *(void *)&v50[10] = v29;
        _os_log_debug_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEBUG, "#router,handleResponse,sendSavedRequest,type,%{public}s,time,ms,%{public}.3f,queued,%{public}zu", v48, 0x20u);
        if (v47 < 0) {
          operator delete(__p[0]);
        }
      }
      int v20 = *(NSObject **)(a1 + 24);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10004333C;
      block[3] = &unk_100106868;
      block[4] = buf;
      void block[5] = a1;
      dispatch_async(v20, block);
      unint64_t v21 = *(void *)(a1 + 96);
      char v22 = (uint64_t **)(*(void *)(*(void *)(a1 + 72) + ((v21 >> 6) & 0x3FFFFFFFFFFFFF8)) + 8 * (v21 & 0x1FF));
      BOOL v23 = *v22;
      *char v22 = 0;
      if (v23)
      {
        sub_100027298((uint64_t)v22, v23);
        unint64_t v21 = *(void *)(a1 + 96);
      }
      uint64_t v24 = *(void *)(a1 + 104) - 1;
      unint64_t v25 = v21 + 1;
      *(void *)(a1 + 96) = v25;
      *(void *)(a1 + 104) = v24;
      if (v25 >= 0x400)
      {
        operator delete(**(void ***)(a1 + 72));
        *(void *)(a1 + 72) += 8;
        *(void *)(a1 + 96) -= 512;
      }
      _Block_object_dispose(buf, 8);
      char v26 = (uint64_t *)*((void *)&v54 + 1);
      *((void *)&v54 + 1) = 0;
      if (v26) {
        sub_100027298((uint64_t)&v54 + 8, v26);
      }
    }
  }
  else
  {
    uint64_t v11 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#router,handleResponse,fRequestPendingResponse,null", buf, 2u);
    }
  }
}

void sub_10004323C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51)
{
  if (a39 < 0) {
    operator delete(__p);
  }
  if (a45 < 0) {
    operator delete(a40);
  }
  if (a51 < 0) {
    operator delete(a46);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100043318(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0;
  *(void *)(result + 48) = v2;
  return result;
}

void sub_100043328(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 48);
  uint64_t v1 = (void *)(a1 + 48);
  uint64_t v2 = v3;
  void *v1 = 0;
  if (v3) {
    sub_100027298((uint64_t)v1, v2);
  }
}

uint64_t sub_10004333C(uint64_t a1)
{
  return sub_100041E28(*(void *)(a1 + 40));
}

void sub_100043358(uint64_t a1, proto::gpsd::Indication *a2)
{
  int v2 = *((_DWORD *)a2 + 54);
  if (v2)
  {
    BOOL v6 = (v2 & 8) != 0 && *((_DWORD *)a2 + 2) == 1;
    char v7 = !v6;
    if (!v6
      || (unsigned __int8 v8 = atomic_load((unsigned __int8 *)(a1 + 17)), (v8 & 1) == 0)
      || (uint64_t v9 = *(GnssEmergencyManager_Private **)(a1 + 8)) == 0)
    {
      uint64_t v10 = *(void *)(a1 + 168);
      if (!v10) {
        sub_100003600();
      }
      (*(void (**)(uint64_t, proto::gpsd::Indication *))(*(void *)v10 + 48))(v10, a2);
      uint64_t v9 = *(GnssEmergencyManager_Private **)(a1 + 8);
    }
    if (v9) {
      char v11 = v7;
    }
    else {
      char v11 = 1;
    }
    if ((v11 & 1) == 0) {
      GnssEmergencyManager_Private::handleDeviceIndication(v9, a2);
    }
  }
  else
  {
    uint64_t v3 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)audit_token_t buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "#router,handleIndication,noType", buf, 2u);
    }
  }
}

void sub_1000434F4()
{
}

void *sub_100043508(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100107D90;
  result[1] = v3;
  return result;
}

uint64_t sub_100043550(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100107D90;
  a2[1] = v2;
  return result;
}

void sub_10004357C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100043588(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1000435C8()
{
}

void *sub_1000435D4(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    int v4 = (void *)result[3];
    uint64_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        void v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        void v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        void v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      void v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_100043834(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100002FCC(a1);
}

void sub_100043844()
{
}

void *sub_100043858(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100107E20;
  result[1] = v3;
  return result;
}

uint64_t sub_1000438A0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100107E20;
  a2[1] = v2;
  return result;
}

void sub_1000438CC(uint64_t a1, proto::gpsd::Indication *a2)
{
}

uint64_t sub_1000438D4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100043914()
{
}

void *sub_100043920(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    int v4 = (void *)result[3];
    uint64_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        void v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        void v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        void v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      void v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_100043B80(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100002FCC(a1);
}

void sub_100043B90()
{
}

void *sub_100043BA4(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100107EB0;
  result[1] = v3;
  return result;
}

uint64_t sub_100043BEC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100107EB0;
  a2[1] = v2;
  return result;
}

void sub_100043C18()
{
  v0[0] = 0;
  v0[1] = v0;
  v0[2] = 0x3812000000;
  v0[3] = sub_100043DB0;
  v0[4] = sub_100043DC0;
  v0[5] = 0;
  operator new();
}

void sub_100043D40()
{
}

uint64_t sub_100043D64(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100043DA4()
{
}

uint64_t sub_100043DB0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0;
  *(void *)(result + 48) = v2;
  return result;
}

uint64_t sub_100043DC0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0;
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void sub_100043DF8(uint64_t a1)
{
}

void sub_100043E14()
{
}

void *sub_100043E28(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100107F30;
  result[1] = v3;
  return result;
}

uint64_t sub_100043E70(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100107F30;
  a2[1] = v2;
  return result;
}

void sub_100043E9C()
{
  v0[0] = 0;
  v0[1] = v0;
  v0[2] = 0x3812000000;
  v0[3] = sub_100044034;
  v0[4] = sub_100044044;
  v0[5] = 0;
  operator new();
}

void sub_100043FC4()
{
}

uint64_t sub_100043FE8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100044028()
{
}

uint64_t sub_100044034(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0;
  *(void *)(result + 48) = v2;
  return result;
}

uint64_t sub_100044044(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0;
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void sub_10004407C(uint64_t a1)
{
}

void sub_100044094()
{
}

void *sub_1000440A8(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100107FB0;
  result[1] = v3;
  return result;
}

uint64_t sub_1000440F0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100107FB0;
  a2[1] = v2;
  return result;
}

void sub_10004411C()
{
}

void sub_100044218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8))(a10);
  }
  (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_1000442C8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100044308()
{
}

void sub_100044318()
{
}

void *sub_10004432C(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_100108040;
  result[1] = v3;
  return result;
}

uint64_t sub_100044374(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100108040;
  a2[1] = v2;
  return result;
}

void sub_1000443A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (*(_DWORD *)(a2 + 8) != 1 || (unsigned __int8 v3 = atomic_load((unsigned __int8 *)(v2 + 17)), (v3 & 1) != 0))
  {
    uint64_t v5 = *(void *)(v2 + 168);
    if (!v5) {
      sub_100003600();
    }
    BOOL v6 = *(void (**)(void))(*(void *)v5 + 48);
    v6();
  }
  else
  {
    int v4 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)char v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "unexpectedIndicationFromGEM,fIsInEmergencyMode,0", v7, 2u);
    }
  }
}

uint64_t sub_10004446C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1000444AC()
{
}

void *sub_1000444B8(unint64_t a1)
{
  if (a1 >> 61) {
    sub_100007254();
  }
  return operator new(8 * a1);
}

uint64_t sub_1000444F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 8);
}

uint64_t sub_1000444F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_100044500(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void sub_100044508(uint64_t a1, uint64_t *a2, void *a3)
{
  int v6 = *((char *)a2 + 23);
  if (v6 >= 0) {
    char v7 = a2;
  }
  else {
    char v7 = (void *)*a2;
  }
  if (v6 >= 0) {
    unint64_t v8 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    unint64_t v8 = a2[1];
  }
  if (v8 > 0x20)
  {
    if (v8 <= 0x40)
    {
      uint64_t v12 = (char *)v7 + v8;
      uint64_t v13 = *(void *)((char *)v7 + v8 - 16);
      uint64_t v14 = *(void *)((char *)v7 + v8 - 8);
      uint64_t v15 = *v7 - 0x3C5A37A36834CED9 * (v13 + v8);
      uint64_t v17 = v7[2];
      uint64_t v16 = v7[3];
      uint64_t v18 = __ROR8__(v15 + v16, 52);
      uint64_t v19 = __ROR8__(v15, 37);
      uint64_t v20 = v15 + v7[1];
      uint64_t v21 = __ROR8__(v20, 7);
      uint64_t v22 = v20 + v17;
      uint64_t v23 = v21 + v19;
      uint64_t v24 = *((void *)v12 - 4) + v17;
      uint64_t v25 = v14 + v16;
      uint64_t v26 = __ROR8__(v25 + v24, 52);
      uint64_t v27 = v23 + v18;
      uint64_t v28 = __ROR8__(v24, 37);
      uint64_t v29 = *((void *)v12 - 3) + v24;
      uint64_t v30 = __ROR8__(v29, 7);
      uint64_t v31 = v27 + __ROR8__(v22, 31);
      uint64_t v32 = v29 + v13;
      uint64_t v33 = v32 + v25;
      uint64_t v34 = v22 + v16 + v28 + v30 + v26 + __ROR8__(v32, 31);
      unint64_t v35 = 0x9AE16A3B2F90404FLL;
      unint64_t v36 = v31
          - 0x3C5A37A36834CED9
          * ((0xC3A5C85C97CB3127 * (v33 + v31) - 0x651E95C4D06FBFB1 * v34) ^ ((0xC3A5C85C97CB3127 * (v33 + v31)
                                                                                 - 0x651E95C4D06FBFB1 * v34) >> 47));
LABEL_15:
      unint64_t v11 = (v36 ^ (v36 >> 47)) * v35;
      goto LABEL_19;
    }
    uint64_t v44 = *(void *)((char *)v7 + v8 - 48);
    uint64_t v43 = *(void *)((char *)v7 + v8 - 40);
    uint64_t v45 = *(void *)((char *)v7 + v8 - 24);
    uint64_t v46 = *(void *)((char *)v7 + v8 - 56);
    uint64_t v47 = *(void *)((char *)v7 + v8 - 16);
    uint64_t v48 = *(void *)((char *)v7 + v8 - 8);
    unint64_t v49 = v46 + v47;
    unint64_t v50 = 0x9DDFEA08EB382D69
        * (v45 ^ ((0x9DDFEA08EB382D69 * (v45 ^ (v44 + v8))) >> 47) ^ (0x9DDFEA08EB382D69 * (v45 ^ (v44 + v8))));
    unint64_t v51 = 0x9DDFEA08EB382D69 * (v50 ^ (v50 >> 47));
    unint64_t v52 = *(void *)((char *)v7 + v8 - 64) + v8;
    unint64_t v53 = v44 + v46 + v52;
    uint64_t v54 = v53 + v43;
    uint64_t v55 = __ROR8__(v53, 44) + v52 + __ROR8__(v52 + v43 + v51, 21);
    uint64_t v56 = v46 + v47 + *(void *)((char *)v7 + v8 - 32) - 0x4B6D499041670D8DLL;
    uint64_t v57 = v45 + v47 + v56;
    uint64_t v58 = v57 + v48;
    uint64_t v59 = __ROR8__(v57, 44) + v56 + __ROR8__(v56 + v43 + v48, 21);
    std::string v60 = v7 + 4;
    uint64_t v61 = *v7 - 0x4B6D499041670D8DLL * v43;
    uint64_t v62 = -(uint64_t)((v8 - 1) & 0xFFFFFFFFFFFFFFC0);
    do
    {
      uint64_t v63 = *(v60 - 3);
      uint64_t v64 = v61 + v54 + v49 + v63;
      uint64_t v65 = v60[2];
      uint64_t v66 = v60[3];
      uint64_t v67 = v60[1];
      unint64_t v49 = v67 + v54 - 0x4B6D499041670D8DLL * __ROR8__(v49 + v55 + v65, 42);
      uint64_t v68 = v51 + v58;
      uint64_t v69 = *(v60 - 2);
      uint64_t v70 = *(v60 - 1);
      uint64_t v71 = *(v60 - 4) - 0x4B6D499041670D8DLL * v55;
      uint64_t v72 = v71 + v58 + v70;
      uint64_t v73 = v71 + v63 + v69;
      uint64_t v54 = v73 + v70;
      uint64_t v74 = __ROR8__(v73, 44) + v71;
      unint64_t v75 = (0xB492B66FBE98F273 * __ROR8__(v64, 37)) ^ v59;
      uint64_t v61 = 0xB492B66FBE98F273 * __ROR8__(v68, 33);
      uint64_t v55 = v74 + __ROR8__(v72 + v75, 21);
      uint64_t v76 = v61 + v59 + *v60;
      uint64_t v58 = v67 + v65 + v76 + v66;
      uint64_t v59 = __ROR8__(v67 + v65 + v76, 44) + v76 + __ROR8__(v49 + v69 + v76 + v66, 21);
      v60 += 8;
      unint64_t v51 = v75;
      v62 += 64;
    }
    while (v62);
    unint64_t v77 = 0x9DDFEA08EB382D69
        * (v58 ^ ((0x9DDFEA08EB382D69 * (v58 ^ v54)) >> 47) ^ (0x9DDFEA08EB382D69 * (v58 ^ v54)));
    uint64_t v78 = v75 - 0x4B6D499041670D8DLL * (v49 ^ (v49 >> 47)) - 0x622015F714C7D297 * (v77 ^ (v77 >> 47));
    unint64_t v79 = v61
        - 0x622015F714C7D297
        * ((0x9DDFEA08EB382D69
          * (v59 ^ ((0x9DDFEA08EB382D69 * (v59 ^ v55)) >> 47) ^ (0x9DDFEA08EB382D69 * (v59 ^ v55)))) ^ ((0x9DDFEA08EB382D69 * (v59 ^ ((0x9DDFEA08EB382D69 * (v59 ^ v55)) >> 47) ^ (0x9DDFEA08EB382D69 * (v59 ^ v55)))) >> 47));
    unint64_t v11 = 0x9DDFEA08EB382D69
        * ((0x9DDFEA08EB382D69
          * (v79 ^ ((0x9DDFEA08EB382D69 * (v79 ^ v78)) >> 47) ^ (0x9DDFEA08EB382D69 * (v79 ^ v78)))) ^ ((0x9DDFEA08EB382D69 * (v79 ^ ((0x9DDFEA08EB382D69 * (v79 ^ v78)) >> 47) ^ (0x9DDFEA08EB382D69 * (v79 ^ v78)))) >> 47));
  }
  else
  {
    if (v8 > 0x10)
    {
      uint64_t v37 = v7[1];
      unint64_t v38 = 0xB492B66FBE98F273 * *v7;
      uint64_t v39 = __ROR8__(0x9AE16A3B2F90404FLL * *(void *)((char *)v7 + v8 - 8), 30) + __ROR8__(v38 - v37, 43);
      unint64_t v40 = v38
          + v8
          + __ROR8__(v37 ^ 0xC949D7C7509E6557, 20)
          - 0x9AE16A3B2F90404FLL * *(void *)((char *)v7 + v8 - 8);
      uint64_t v41 = (v39 - 0x3C5A37A36834CED9 * *(void *)((char *)v7 + v8 - 16)) ^ v40;
      unint64_t v35 = 0x9DDFEA08EB382D69;
      unint64_t v42 = v40 ^ ((0x9DDFEA08EB382D69 * v41) >> 47) ^ (0x9DDFEA08EB382D69 * v41);
LABEL_14:
      unint64_t v36 = 0x9DDFEA08EB382D69 * v42;
      goto LABEL_15;
    }
    if (v8 >= 9)
    {
      uint64_t v9 = *(void *)((char *)v7 + v8 - 8);
      uint64_t v10 = __ROR8__(v9 + v8, v8);
      unint64_t v11 = (0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69
             * (v10 ^ ((0x9DDFEA08EB382D69 * (v10 ^ *v7)) >> 47) ^ (0x9DDFEA08EB382D69 * (v10 ^ *v7)))) ^ ((0x9DDFEA08EB382D69 * (v10 ^ ((0x9DDFEA08EB382D69 * (v10 ^ *v7)) >> 47) ^ (0x9DDFEA08EB382D69 * (v10 ^ *v7)))) >> 47))) ^ v9;
      goto LABEL_19;
    }
    if (v8 >= 4)
    {
      uint64_t v87 = *(unsigned int *)((char *)v7 + v8 - 4);
      unint64_t v88 = (v8 + (8 * *(_DWORD *)v7)) ^ v87;
      unint64_t v35 = 0x9DDFEA08EB382D69;
      unint64_t v42 = v87 ^ ((0x9DDFEA08EB382D69 * v88) >> 47) ^ (0x9DDFEA08EB382D69 * v88);
      goto LABEL_14;
    }
    unint64_t v11 = 0x9AE16A3B2F90404FLL;
    if (v8)
    {
      unint64_t v89 = v8 + 4 * *((unsigned __int8 *)v7 + v8 - 1);
      unint64_t v90 = 0x9AE16A3B2F90404FLL
          * (*(unsigned __int8 *)v7 | ((unint64_t)*((unsigned __int8 *)v7 + (v8 >> 1)) << 8));
      unint64_t v11 = 0x9AE16A3B2F90404FLL * ((0xC949D7C7509E6557 * v89) ^ v90 ^ (((0xC949D7C7509E6557 * v89) ^ v90) >> 47));
    }
  }
LABEL_19:
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v80 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      uint64_t v81 = a3[1] - *a3;
      LODWORD(buf.__r_.__value_.__l.__data_) = 136381187;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v7;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2050;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v11;
      HIWORD(buf.__r_.__value_.__r.__words[2]) = 2050;
      uint64_t v101 = v81;
      _os_log_error_impl((void *)&_mh_execute_header, v80, OS_LOG_TYPE_ERROR, "logSystemException,%{private}s,%{public}zu,size,%{public}zu", (uint8_t *)&buf, 0x20u);
    }
  }
  else
  {
    int v82 = (id *)GpsdPreferences::instance(0);
    GpsdPreferences::vendorLogDirectory(v82, &buf);
    int v83 = std::string::append(&buf, "/gnss_hw_exception.bin");
    std::string __p = *v83;
    v83->__r_.__value_.__l.__size_ = 0;
    v83->__r_.__value_.__r.__words[2] = 0;
    v83->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(buf.__r_.__value_.__l.__data_);
    }
    sub_1000066E0((void (__cdecl ***)(std::ofstream *__hidden))&buf);
    sub_100007D6C(&buf, (uint64_t)"logSystemException(", 19);
    int v84 = (void *)std::ostream::operator<<();
    sub_100007D6C(v84, (uint64_t)",", 1);
    int v85 = (void *)std::ostream::operator<<();
    sub_100007D6C(v85, (uint64_t)")\n", 2);
    std::ostream::write();
    if (!std::filebuf::close()) {
      std::ios_base::clear((std::ios_base *)((char *)&buf + *(void *)(buf.__r_.__value_.__r.__words[0] - 24)), *(_DWORD *)&v102[*(void *)(buf.__r_.__value_.__r.__words[0] - 24)] | 4);
    }
    int v86 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_FAULT))
    {
      if (*((char *)a2 + 23) >= 0) {
        uint64_t v91 = a2;
      }
      else {
        uint64_t v91 = (uint64_t *)*a2;
      }
      uint64_t v92 = a3[1] - *a3;
      *(_DWORD *)int v94 = 136381187;
      int v95 = v91;
      __int16 v96 = 2050;
      unint64_t v97 = v11;
      __int16 v98 = 2050;
      uint64_t v99 = v92;
      _os_log_fault_impl((void *)&_mh_execute_header, v86, OS_LOG_TYPE_FAULT, "logSystemException,%{private}s,%{public}zu,size,%{public}zu", v94, 0x20u);
    }
    *(unsigned char *)(a1 + 32) = 1;
    std::filebuf::~filebuf();
    std::ostream::~ostream();
    std::ios::~ios();
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_100044C6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100044CB4(void *a1)
{
  std::filebuf::~filebuf();
  std::ostream::~ostream();
  std::ios::~ios();
  return a1;
}

void sub_100044D80(uint64_t a1)
{
}

void sub_100044D8C()
{
}

void sub_100044DA0(uint64_t a1, unsigned int a2, void **a3)
{
}

void sub_100044DA8(uint64_t a1, int a2, uint64_t a3)
{
}

void sub_100044DBC(uint64_t a1, int a2, const void *a3, size_t a4)
{
}

void *GnssHal::GpioEmbedded::GpioEmbedded(void *a1, uint64_t a2)
{
  *a1 = &off_100108148;
  a1[4] = 0;
  sub_10001D360((uint64_t)(a1 + 5), a2);
  unsigned __int8 v3 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "#gpio,frontend,ctor,start", buf, 2u);
  }
  std::mutex::lock(&stru_100114178);
  int v4 = (void *)sub_100044EFC();
  sub_100045104(v4, (uint64_t)a1);
  uint64_t v5 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)char v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "#gpio,frontend,ctor,end", v7, 2u);
  }
  std::mutex::unlock(&stru_100114178);
  return a1;
}

void sub_100044EC4(_Unwind_Exception *a1)
{
  std::mutex::unlock(&stru_100114178);
  sub_100018B88(v2);
  sub_100046944((void *)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_100044EFC()
{
  if (qword_100114358 != -1) {
    dispatch_once(&qword_100114358, &stru_100108188);
  }
  uint64_t result = qword_100114350;
  if (!qword_100114350)
  {
    uint64_t v1 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "null GpioBackend", buf, 2u);
      uint64_t v1 = qword_100114840;
    }
    if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::string buf = 136446722;
      int v6 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/HAL/Implementation/GnssHalGpioImpl.mm";
      __int16 v7 = 1026;
      int v8 = 299;
      __int16 v9 = 2082;
      uint64_t v10 = "instance";
      _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
    }
    sub_1000033AC(&v4, "assert");
    sub_1000033AC(&v3, "instance");
    sub_1000033AC(&v2, "null GpioBackend");
    gpsd::util::triggerDiagnosticReport((uint64_t)&v4, (long long *)&v3, (long long *)&v2);
    std::string::~string(&v2);
    std::string::~string(&v3);
    std::string::~string(&v4);
    __assert_rtn("instance", "GnssHalGpioImpl.mm", 299, "false && \"null GpioBackend\"");
  }
  return result;
}

void sub_1000450B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

void sub_100045104(void *a1, uint64_t a2)
{
  *a1 = a2;
  std::string v3 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    v4[0] = 67240192;
    v4[1] = a2 == 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "#gpio,set frontend,isNull,%{public}d", (uint8_t *)v4, 8u);
  }
}

void GnssHal::GpioEmbedded::~GpioEmbedded(GnssHal::GpioEmbedded *this)
{
  *(void *)this = &off_100108148;
  std::string v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "#gpio,frontend,dtor,start", buf, 2u);
  }
  std::mutex::lock(&stru_100114178);
  std::string v3 = (void *)sub_100044EFC();
  sub_100045104(v3, 0);
  std::string v4 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "#gpio,frontend,dtor,end", v5, 2u);
  }
  std::mutex::unlock(&stru_100114178);
  sub_100018B88((void *)this + 5);
  sub_100046944((void *)this + 1);
}

void sub_1000452B8(GnssHal::GpioEmbedded *a1)
{
  GnssHal::GpioEmbedded::~GpioEmbedded(a1);

  operator delete();
}

void GnssHal::GpioEmbedded::setResetLow(GnssHal::GpioEmbedded *this)
{
  int v1 = *(_DWORD *)(GpsdPlatformInfo::instance(0) + 8);
  if (v1 == 103 || v1 == 201 || v1 == 106)
  {
    std::string v2 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#gpio,setResetLow", buf, 2u);
    }
    uint64_t v3 = sub_100044EFC();
    sub_1000453CC(v3, 1u, 0);
  }
  else
  {
    std::string v4 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#gpio,not supported on platform", v5, 2u);
    }
  }
}

void sub_1000453CC(uint64_t a1, uint32_t a2, uint64_t a3)
{
  int v3 = a3;
  uint64_t input = a3;
  std::mutex::lock(&stru_100114178);
  if (*(unsigned char *)(a1 + 8))
  {
    IOConnectCallScalarMethod(*(_DWORD *)(a1 + 12), a2, &input, 1u, 0, 0);
  }
  else
  {
    int v6 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::string buf = 67240448;
      uint32_t v9 = a2;
      __int16 v10 = 1026;
      int v11 = v3;
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "#gpio,setGpioState failed,selector,%{public}d,input,%{public}d", buf, 0xEu);
    }
  }
  std::mutex::unlock(&stru_100114178);
}

void sub_1000454D0(_Unwind_Exception *a1)
{
}

void sub_1000454E8()
{
  int v0 = *(_DWORD *)(GpsdPlatformInfo::instance(0) + 8);
  if (v0 == 103 || v0 == 201 || v0 == 106)
  {
    int v1 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "#gpio,setResetHigh", buf, 2u);
    }
    uint64_t v2 = sub_100044EFC();
    sub_1000453CC(v2, 1u, 1uLL);
  }
  else
  {
    int v3 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#gpio,not supported on platform", v4, 2u);
    }
  }
}

void sub_1000455C4()
{
  int v0 = *(_DWORD *)(GpsdPlatformInfo::instance(0) + 8);
  if (v0 == 106 || v0 == 103)
  {
    int v1 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "#gpio,setDeviceWakeLow", buf, 2u);
    }
    uint64_t v2 = sub_100044EFC();
    sub_1000453CC(v2, 3u, 1uLL);
  }
  else
  {
    int v3 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#gpio,not supported on platform", v4, 2u);
    }
  }
}

void sub_100045698()
{
  int v0 = *(_DWORD *)(GpsdPlatformInfo::instance(0) + 8);
  if (v0 == 106 || v0 == 103)
  {
    int v1 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "#gpio,setDeviceWakeHigh", buf, 2u);
    }
    uint64_t v2 = sub_100044EFC();
    sub_1000453CC(v2, 3u, 0);
  }
  else
  {
    int v3 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#gpio,not supported on platform", v4, 2u);
    }
  }
}

void sub_10004576C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  kern_return_t v7;
  BOOL CurrentMachContinuousMinusMachAbsoluteNanoseconds;
  unint64_t MachContinuousTimeNs;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  NSObject *v18;
  const char *v19;
  NSObject *v20;
  NSObject *v21;
  uint64_t v22;
  uint32_t outputCnt;
  uint64_t output;
  gpsd::util *v25;
  mach_port_t connection;
  void v27[3];
  void *v28;
  unsigned char buf[12];
  __int16 v30;
  uint64_t v31;
  __int16 v32;
  unsigned char *v33;
  __int16 v34;
  unint64_t v35;
  __int16 v36;
  unint64_t v37;
  __int16 v38;
  unint64_t v39;
  void v40[3];

  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  int v4 = *(_DWORD *)(GpsdPlatformInfo::instance(0) + 8);
  if (v4 != 103 && v4 != 106 && v4 != 201)
  {
    uint64_t v18 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
      return;
    }
    *(_WORD *)std::string buf = 0;
    uint64_t v19 = "#gpio,pulseTimeMarkStrobe not supported";
    goto LABEL_17;
  }
  connection = 0;
  uint64_t v5 = sub_100044EFC();
  if (!sub_100045CF4(v5, &connection))
  {
    uint64_t v18 = qword_100114840;
    if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
      return;
    }
    *(_WORD *)std::string buf = 0;
    uint64_t v19 = "#gpio,#tt,GPSControlConnect failed";
LABEL_17:
    _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, v19, buf, 2u);
    return;
  }
  outputCnt = 2;
  __int16 v7 = IOConnectCallScalarMethod(connection, 5u, 0, 0, &output, &outputCnt);
  if (v7 || outputCnt != 2)
  {
    uint64_t v20 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::string buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v7;
      _os_log_error_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "#gpio,#tt,TogglePIN,failed,Result,%{public}08x", buf, 8u);
    }
  }
  else
  {
    uint64_t v22 = 0;
    CurrentMachContinuousMinusMachAbsoluteNanoseconds = gpsd::util::getCurrentMachContinuousMinusMachAbsoluteNanoseconds((gpsd::util *)&v22, v6);
    if (CurrentMachContinuousMinusMachAbsoluteNanoseconds)
    {
      unint64_t MachContinuousTimeNs = gpsd::util::getMachContinuousTimeNs((gpsd::util *)CurrentMachContinuousMinusMachAbsoluteNanoseconds);
      *(unsigned char *)(a2 + 16) = 1;
      __int16 v10 = gpsd::util::convertMachTimeInTicksToNs(output);
      int v11 = v22;
      uint64_t v12 = v22 + v10;
      *(void *)a2 = v22 + v10;
      uint64_t v13 = gpsd::util::convertMachTimeInTicksToNs((unint64_t)v25) + v11;
      *(void *)(a2 + 8) = v13;
      uint64_t v14 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
      {
        uint64_t v15 = gpsd::util::convertMachTimeInTicksToNs(output);
        uint64_t v16 = gpsd::util::convertMachTimeInTicksToNs((unint64_t)v25);
        *(_DWORD *)std::string buf = 134350336;
        *(void *)&uint8_t buf[4] = v12;
        uint64_t v30 = 2050;
        uint64_t v31 = v13;
        uint64_t v32 = 2050;
        uint64_t v33 = (unsigned char *)(v13 - v12);
        uint64_t v34 = 2050;
        unint64_t v35 = MachContinuousTimeNs;
        unint64_t v36 = 2050;
        uint64_t v37 = v15;
        unint64_t v38 = 2050;
        uint64_t v39 = v16;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "#gpio,#tt,TogglePIN,beforeContNs,%{public}llu,afterContNs,%{public}llu,widthNs,%{public}llu,nowContNs,%{public}llu,beforeMachNs,%{public}llu,afterMachNs,%{public}llu", buf, 0x3Eu);
      }
      uint64_t v28 = 0;
      std::mutex::lock(&stru_100114178);
      sub_10001D360((uint64_t)buf, a1 + 40);
      uint64_t v17 = v33;
      if (v33 == buf)
      {
        if (v28 == v27)
        {
          (*(void (**)(unsigned char *, void *))(*(void *)buf + 24))(buf, v40);
          (*(void (**)(unsigned char *))(*(void *)v33 + 32))(v33);
          uint64_t v33 = 0;
          (*(void (**)(void *, unsigned char *))(*v28 + 24))(v28, buf);
          (*(void (**)(void *))(*v28 + 32))(v28);
          uint64_t v28 = 0;
          uint64_t v33 = buf;
          (*(void (**)(void *, void *))(v40[0] + 24))(v40, v27);
          (*(void (**)(void *))(v40[0] + 32))(v40);
        }
        else
        {
          (*(void (**)(unsigned char *, void *))(*(void *)buf + 24))(buf, v27);
          (*(void (**)(unsigned char *))(*(void *)v33 + 32))(v33);
          uint64_t v33 = v28;
        }
        uint64_t v28 = v27;
      }
      else if (v28 == v27)
      {
        (*(void (**)(void *, unsigned char *))(v27[0] + 24))(v27, buf);
        (*(void (**)(void *))(*v28 + 32))(v28);
        uint64_t v28 = v33;
        uint64_t v33 = buf;
      }
      else
      {
        uint64_t v33 = v28;
        uint64_t v28 = v17;
      }
      sub_100018B88(buf);
      std::mutex::unlock(&stru_100114178);
      if (v28) {
        sub_100040A34((uint64_t)v27, output, (uint64_t)v25);
      }
      sub_100018B88(v27);
    }
    else
    {
      uint64_t v21 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "#gpio,#tt,machCont timestamping failed", buf, 2u);
      }
    }
  }
  IOServiceClose(connection);
}

void sub_100045CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_100018B88((uint64_t *)va);
  _Unwind_Resume(a1);
}

BOOL sub_100045CF4(uint64_t a1, io_connect_t *a2)
{
  kern_return_t v4;
  kern_return_t v5;
  uint64_t v6;
  BOOL result;
  CFDictionaryRef v8;
  kern_return_t MatchingServices;
  kern_return_t v10;
  const char *v11;
  uint64_t v12;
  NSObject *v13;
  uint32_t v14;
  io_service_t v15;
  kern_return_t v16;
  kern_return_t v17;
  uint64_t v18;
  io_iterator_t existing;
  mach_port_t mainPort;
  uint8_t buf[4];
  const char *v22;

  mainPort = 0;
  int v4 = IOMainPort(0, &mainPort);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = qword_100114840;
    uint64_t result = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    *(_DWORD *)std::string buf = 67240192;
    LODWORD(v22) = v5;
    int v11 = "#gpio,IOMasterPort failed,%{public}d";
    goto LABEL_15;
  }
  int v8 = IOServiceMatching("AppleEmbeddedGPSControl");
  if (v8)
  {
    existing = 0;
    MatchingServices = IOServiceGetMatchingServices(mainPort, v8, &existing);
    if (MatchingServices)
    {
      __int16 v10 = MatchingServices;
      int v6 = qword_100114840;
      uint64_t result = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR);
      if (result)
      {
        *(_DWORD *)std::string buf = 67240192;
        LODWORD(v22) = v10;
        int v11 = "#gpio,IOServiceGetMatchingServices failed,%{public}d";
LABEL_15:
        uint64_t v13 = v6;
        uint64_t v14 = 8;
        goto LABEL_16;
      }
    }
    else
    {
      *(_DWORD *)(a1 + 16) = IOIteratorNext(existing);
      IOObjectRelease(existing);
      uint64_t v15 = *(_DWORD *)(a1 + 16);
      if (v15)
      {
        uint64_t v16 = IOServiceOpen(v15, mach_task_self_, 0, a2);
        if (!v16) {
          return 1;
        }
        uint64_t v17 = v16;
        int v6 = qword_100114840;
        uint64_t result = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR);
        if (result)
        {
          *(_DWORD *)std::string buf = 67240192;
          LODWORD(v22) = v17;
          int v11 = "#gpio,IOServiceOpen failed,%{public}d";
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v18 = qword_100114840;
        uint64_t result = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR);
        if (result)
        {
          *(_WORD *)std::string buf = 0;
          int v11 = "#gpio,No fServiceObject";
          uint64_t v13 = v18;
          uint64_t v14 = 2;
          goto LABEL_16;
        }
      }
    }
  }
  else
  {
    uint64_t v12 = qword_100114840;
    uint64_t result = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR);
    if (result)
    {
      *(_DWORD *)std::string buf = 136315138;
      uint64_t v22 = "AppleEmbeddedGPSControl";
      int v11 = "#gpio,IOServiceMatching failed,%s";
      uint64_t v13 = v12;
      uint64_t v14 = 12;
LABEL_16:
      _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, v11, buf, v14);
      return 0;
    }
  }
  return result;
}

void sub_100045F38(uint64_t a1, int a2)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = qword_100114840;
  BOOL v6 = os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO);
  if (v4)
  {
    if (v6)
    {
      int v8 = 67240192;
      int v9 = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "#gpio,notifyDevice,int,sending,%{public}d,", (uint8_t *)&v8, 8u);
      uint64_t v4 = *(void *)(a1 + 32);
      int v8 = a2;
      if (!v4) {
        sub_100003600();
      }
    }
    else
    {
      int v8 = a2;
    }
    (*(void (**)(uint64_t, int *))(*(void *)v4 + 48))(v4, &v8);
  }
  else if (v6)
  {
    int v8 = 67240192;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "#gpio,notifyDevice,int,no callback,%{public}d,", (uint8_t *)&v8, 8u);
  }
  __int16 v7 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    LOWORD(v8) = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "#gpio,notifyDevice,done", (uint8_t *)&v8, 2u);
  }
}

void sub_1000460AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v6 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    int v12 = 67240448;
    LODWORD(v13[0]) = a3;
    WORD2(v13[0]) = 2050;
    *(void *)((char *)v13 + 6) = a4;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "#gpio,callback,begin,%{public}u,%{public}llu", (uint8_t *)&v12, 0x12u);
  }
  std::mutex::lock(&stru_100114178);
  uint64_t v7 = sub_100044EFC();
  if (*(void *)v7)
  {
    int v8 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
    {
      LOWORD(v12) = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "#gpio,callback,locked", (uint8_t *)&v12, 2u);
    }
    if (a4)
    {
      if (a4 == 1)
      {
        sub_100045F38(*(void *)v7, 0);
        ++*(_DWORD *)(v7 + 24);
      }
      else
      {
        __int16 v10 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          int v12 = 134349056;
          v13[0] = a4;
          _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "#gpio,Unrecognized messageArg,%{public}llu", (uint8_t *)&v12, 0xCu);
        }
      }
    }
    else
    {
      sub_100045F38(*(void *)v7, 1);
      ++*(_DWORD *)(v7 + 20);
    }
  }
  else
  {
    int v9 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = 134349056;
      v13[0] = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#gpio,pGpioObject null,%{public}llu", (uint8_t *)&v12, 0xCu);
    }
  }
  int v11 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    LOWORD(v12) = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "#gpio,callback,end", (uint8_t *)&v12, 2u);
  }
  std::mutex::unlock(&stru_100114178);
}

void sub_1000462E4(_Unwind_Exception *exception_object)
{
}

void sub_100046304(uint64_t a1, void *a2)
{
  uint64_t v4 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    BOOL v5 = a2[3] == 0;
    LODWORD(v10[0]) = 67240192;
    HIDWORD(v10[0]) = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "#gpio,setGpioNotifier,int,isNull,%{public}d", (uint8_t *)v10, 8u);
  }
  std::mutex::lock(&stru_100114178);
  uint64_t v6 = a2[3];
  if (!v6) {
    goto LABEL_6;
  }
  if ((void *)v6 != a2)
  {
    uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 16))(v6);
LABEL_6:
    int v11 = (void *)v6;
    goto LABEL_8;
  }
  int v11 = v10;
  (*(void (**)(void *, void *))(*a2 + 24))(a2, v10);
LABEL_8:
  uint64_t v7 = a1 + 8;
  if (v10 != (void *)(a1 + 8))
  {
    int v8 = v11;
    uint64_t v9 = *(void *)(a1 + 32);
    if (v11 == v10)
    {
      if (v9 == v7)
      {
        (*(void (**)(void *, void *))(v10[0] + 24))(v10, v12);
        (*(void (**)(void *))(*v11 + 32))(v11);
        int v11 = 0;
        (*(void (**)(void, void *))(**(void **)(a1 + 32) + 24))(*(void *)(a1 + 32), v10);
        (*(void (**)(void))(**(void **)(a1 + 32) + 32))(*(void *)(a1 + 32));
        *(void *)(a1 + 32) = 0;
        int v11 = v10;
        (*(void (**)(void *, uint64_t))(v12[0] + 24))(v12, a1 + 8);
        (*(void (**)(void *))(v12[0] + 32))(v12);
      }
      else
      {
        (*(void (**)(void *, uint64_t))(v10[0] + 24))(v10, a1 + 8);
        (*(void (**)(void *))(*v11 + 32))(v11);
        int v11 = *(void **)(a1 + 32);
      }
      *(void *)(a1 + 32) = v7;
    }
    else if (v9 == v7)
    {
      (*(void (**)(uint64_t, void *))(*(void *)v7 + 24))(a1 + 8, v10);
      (*(void (**)(void))(**(void **)(a1 + 32) + 32))(*(void *)(a1 + 32));
      *(void *)(a1 + 32) = v11;
      int v11 = v10;
    }
    else
    {
      int v11 = *(void **)(a1 + 32);
      *(void *)(a1 + 32) = v8;
    }
  }
  sub_100046944(v10);
  std::mutex::unlock(&stru_100114178);
}

void sub_10004666C(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_100002FCC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10004669C(id a1)
{
}

void sub_100046920()
{
}

void *sub_100046944(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_1000469C8()
{
  return __cxa_atexit((void (*)(void *))&std::mutex::~mutex, &stru_100114178, (void *)&_mh_execute_header);
}

void sub_1000469EC(const char *a1)
{
  if (unlink(a1))
  {
    uint64_t v2 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      int v3 = *__error();
      int v4 = 136446466;
      BOOL v5 = a1;
      __int16 v6 = 1026;
      int v7 = v3;
      _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "VendorLogger,deleteFile could not unlink,%{public}s,%{public}d", (uint8_t *)&v4, 0x12u);
    }
  }
}

BOOL sub_100046AAC(const char *a1, timespec *a2, off_t *a3)
{
  int v6 = stat(a1, &v10);
  if (v6)
  {
    int v7 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      int v8 = *__error();
      *(_DWORD *)std::string buf = 136446466;
      int v12 = a1;
      __int16 v13 = 1026;
      int v14 = v8;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "VendorLogger,getFileModificationTime could not stat,%{public}s,%{public}d", buf, 0x12u);
    }
  }
  else
  {
    *a2 = v10.st_mtimespec;
    *a3 = v10.st_size;
  }
  return v6 == 0;
}

void sub_100046BA0(uint64_t a1)
{
  sub_100048698(a1);
  if (*(void *)(a1 + 416))
  {
    std::ostream::flush();
    if (!std::filebuf::close()) {
      std::ios_base::clear((std::ios_base *)(a1 + 288 + *(void *)(*(void *)(a1 + 288) - 24)), *(_DWORD *)(a1 + 288 + *(void *)(*(void *)(a1 + 288) - 24) + 32) | 4);
    }
    uint64_t v2 = (const std::__fs::filesystem::path *)(a1 + 856);
    if (*(char *)(a1 + 879) < 0)
    {
      sub_1000186E8(&buf, *(void **)(a1 + 856), *(void *)(a1 + 864));
    }
    else
    {
      *(_OWORD *)&buf.__r_.__value_.__l.__data_ = *(_OWORD *)&v2->__pn_.__r_.__value_.__l.__data_;
      buf.__r_.__value_.__r.__words[2] = *(void *)(a1 + 872);
    }
    sub_1000489A8((uint64_t)v28, (const void **)(a1 + 24), (const void **)(a1 + 72));
    sub_1000489A8((uint64_t)__p, (const void **)(a1 + 48), (const void **)(a1 + 72));
    int64_t size = HIBYTE(buf.__r_.__value_.__r.__words[2]);
    if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_std::string buf = &buf;
    }
    else {
      p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
    }
    if ((v29 & 0x80u) == 0) {
      int v6 = v28;
    }
    else {
      int v6 = (void **)v28[0];
    }
    if ((v29 & 0x80u) == 0) {
      int64_t v7 = v29;
    }
    else {
      int64_t v7 = (int64_t)v28[1];
    }
    if (v7)
    {
      if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int64_t size = buf.__r_.__value_.__l.__size_;
      }
      if (size >= v7)
      {
        uint64_t v19 = (char *)p_buf + size;
        int v20 = *(char *)v6;
        uint64_t v21 = p_buf;
        do
        {
          int64_t v22 = size - v7;
          if (v22 == -1) {
            break;
          }
          uint64_t v23 = (char *)memchr(v21, v20, v22 + 1);
          if (!v23) {
            break;
          }
          uint64_t v24 = v23;
          if (!memcmp(v23, v6, v7))
          {
            if (v24 != v19)
            {
              std::string::size_type v9 = v24 - (char *)p_buf;
              if (v24 - (char *)p_buf != -1) {
                goto LABEL_25;
              }
            }
            break;
          }
          uint64_t v21 = (std::string *)(v24 + 1);
          int64_t size = v19 - (v24 + 1);
        }
        while (size >= v7);
      }
      int v8 = qword_100114838;
      if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t v31 = 136315138;
        uint64_t v32 = p_buf;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "VendorLogger,closeLogFile,Could not archive,%s", v31, 0xCu);
      }
    }
    else
    {
      std::string::size_type v9 = 0;
LABEL_25:
      if ((v27 & 0x80u) == 0) {
        stat v10 = __p;
      }
      else {
        stat v10 = (void **)__p[0];
      }
      if ((v27 & 0x80u) == 0) {
        std::string::size_type v11 = v27;
      }
      else {
        std::string::size_type v11 = (std::string::size_type)__p[1];
      }
      std::string::replace(&buf, v9, v7, (const std::string::value_type *)v10, v11);
      int v12 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
      {
        uint64_t v14 = a1 + 856;
        if (*(char *)(a1 + 879) < 0) {
          uint64_t v14 = v2->__pn_.__r_.__value_.__r.__words[0];
        }
        uint64_t v15 = &buf;
        if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          uint64_t v15 = (std::string *)buf.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)uint64_t v31 = 136315394;
        uint64_t v32 = (std::string *)v14;
        __int16 v33 = 2080;
        uint64_t v34 = v15;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "VendorLogger,closeLogFile,Archiving,Old name,%s,New name,%s", v31, 0x16u);
      }
      if (*(char *)(a1 + 879) < 0) {
        uint64_t v2 = (const std::__fs::filesystem::path *)v2->__pn_.__r_.__value_.__r.__words[0];
      }
      if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v16 = (const std::__fs::filesystem::path *)&buf;
      }
      else {
        uint64_t v16 = (const std::__fs::filesystem::path *)buf.__r_.__value_.__r.__words[0];
      }
      rename(v2, v16, v13);
      if (v17)
      {
        uint64_t v18 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
        {
          int v25 = *__error();
          *(_DWORD *)uint64_t v31 = 67240192;
          LODWORD(v32) = v25;
          _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "VendorLogger,closeLogFile,rename failed,%{public}d", v31, 8u);
        }
      }
    }
    if (*(char *)(a1 + 879) < 0)
    {
      **(unsigned char **)(a1 + 856) = 0;
      *(void *)(a1 + 864) = 0;
    }
    else
    {
      *(unsigned char *)(a1 + 856) = 0;
      *(unsigned char *)(a1 + 879) = 0;
    }
    if ((char)v27 < 0) {
      operator delete(__p[0]);
    }
    if ((char)v29 < 0) {
      operator delete(v28[0]);
    }
    if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(buf.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    int v3 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "VendorLogger,closeLogFile,No output to close", (uint8_t *)&buf, 2u);
    }
  }
  *(unsigned char *)(a1 + 892) = 0;
}

void sub_100046F6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

id sub_100046FC4(uint64_t a1, const void **a2, uint64_t *a3)
{
  BOOL v5 = [+[NSFileManager defaultManager](NSFileManager, "defaultManager") contentsOfDirectoryAtPath:+[NSString stringWithUTF8String:a1] error:0];
  sub_10002A0D4(a3);
  long long v39 = 0u;
  long long v40 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  obuint64_t j = [(NSArray *)v5 reverseObjectEnumerator];
  id result = [(NSEnumerator *)obj countByEnumeratingWithState:&v37 objects:v46 count:16];
  id v7 = result;
  if (result)
  {
    uint64_t v8 = *(void *)v38;
    do
    {
      std::string::size_type v9 = 0;
      do
      {
        if (*(void *)v38 != v8) {
          objc_enumerationMutation(obj);
        }
        stat v10 = (char *)[*(id *)(*((void *)&v37 + 1) + 8 * (void)v9) UTF8String];
        if (v10)
        {
          sub_1000033AC(&v34, v10);
          int v11 = *((char *)a2 + 23);
          if (v11 >= 0) {
            unint64_t v12 = *((unsigned __int8 *)a2 + 23);
          }
          else {
            unint64_t v12 = (unint64_t)a2[1];
          }
          unsigned __int8 v13 = v36;
          if ((char)v36 < 0)
          {
            if (v12 == -1) {
LABEL_49:
            }
              sub_100037450();
            uint64_t v15 = v34;
            if (v35 >= v12) {
              size_t v14 = v12;
            }
            else {
              size_t v14 = v35;
            }
          }
          else
          {
            if (v12 == -1) {
              goto LABEL_49;
            }
            if (v36 >= v12) {
              size_t v14 = v12;
            }
            else {
              size_t v14 = v36;
            }
            uint64_t v15 = &v34;
          }
          if (v11 >= 0) {
            int v17 = a2;
          }
          else {
            int v17 = *a2;
          }
          if (!memcmp(v15, v17, v14) && v14 == v12)
          {
            sub_1000033AC(__p, v10);
            unint64_t v20 = a3[1];
            unint64_t v19 = a3[2];
            if (v20 >= v19)
            {
              unint64_t v22 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v20 - *a3) >> 3);
              unint64_t v23 = v22 + 1;
              if (v22 + 1 > 0xAAAAAAAAAAAAAAALL) {
                sub_100007204();
              }
              unint64_t v24 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v19 - *a3) >> 3);
              if (2 * v24 > v23) {
                unint64_t v23 = 2 * v24;
              }
              if (v24 >= 0x555555555555555) {
                unint64_t v25 = 0xAAAAAAAAAAAAAAALL;
              }
              else {
                unint64_t v25 = v23;
              }
              uint64_t v45 = a3 + 2;
              if (v25) {
                uint64_t v26 = (char *)sub_10002A19C((uint64_t)(a3 + 2), v25);
              }
              else {
                uint64_t v26 = 0;
              }
              unsigned __int8 v27 = &v26[24 * v22];
              *(void *)std::string buf = v26;
              unint64_t v42 = v27;
              uint64_t v44 = &v26[24 * v25];
              long long v28 = *(_OWORD *)__p;
              *((void *)v27 + 2) = v33;
              *(_OWORD *)unsigned __int8 v27 = v28;
              __p[1] = 0;
              uint64_t v33 = 0;
              __p[0] = 0;
              uint64_t v43 = v27 + 24;
              sub_10002A124(a3, buf);
              uint64_t v29 = a3[1];
              sub_10002A304((uint64_t)buf);
              int v30 = SHIBYTE(v33);
              a3[1] = v29;
              if (v30 < 0) {
                operator delete(__p[0]);
              }
            }
            else
            {
              long long v21 = *(_OWORD *)__p;
              *(void *)(v20 + 16) = v33;
              *(_OWORD *)unint64_t v20 = v21;
              a3[1] = v20 + 24;
            }
            unsigned __int8 v13 = v36;
          }
          if ((v13 & 0x80) != 0) {
            operator delete(v34);
          }
        }
        else
        {
          uint64_t v16 = qword_100114840;
          if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)std::string buf = 0;
            _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "VendorLogger,pruneLogFiles,null filename from reverseEnumerateFiles", buf, 2u);
          }
        }
        std::string::size_type v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id result = [(NSEnumerator *)obj countByEnumeratingWithState:&v37 objects:v46 count:16];
      id v7 = result;
    }
    while (result);
  }
  return result;
}

void sub_1000472EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

void VendorLogger::generateDefaultConfig(uint64_t a1@<X8>)
{
  sub_1000033AC((void *)a1, "gpsd");
  sub_1000033AC((void *)(a1 + 24), "o");
  sub_1000033AC((void *)(a1 + 48), "");
  sub_1000033AC((void *)(a1 + 72), "log");
  *(_OWORD *)(a1 + 96) = 0u;
  int v3 = (void **)(a1 + 96);
  *(void *)(a1 + 152) = 0;
  *(unsigned char *)(a1 + 196) = 0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_DWORD *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 200) = 2;
  memset_pattern16((void *)(a1 + 160), &unk_1000E7BF0, 0x24uLL);
  int v4 = (id *)GpsdPreferences::instance(0);
  GpsdPreferences::vendorLogRetentionDays(v4);
  *(double *)(a1 + 120) = (float)((float)(v5 * 24.0) * 3600.0);
  int v6 = (GpsdPreferences *)GpsdPreferences::instance(0);
  *(void *)(a1 + 128) = (uint64_t)(int)GpsdPreferences::vendorLogRotationSizeMB(v6) << 20;
  id v7 = (id *)GpsdPreferences::instance(0);
  *(void *)(a1 + 136) = (uint64_t)(int)GpsdPreferences::vendorLogMaxDirectorySizeMB(v7) << 20;
  uint64_t v8 = (id *)GpsdPreferences::instance(0);
  *(_DWORD *)(a1 + 144) = GpsdPreferences::vendorLogMaxNumberOfFiles(v8);
  std::string::size_type v9 = (id *)GpsdPreferences::instance(0);
  *(unsigned char *)(a1 + 196) = GpsdPreferences::vendorLogPrefixWithTimestamp(v9);
  stat v10 = (id *)GpsdPreferences::instance(0);
  GpsdPreferences::vendorLogDirectory(v10, &v20);
  if (*(char *)(a1 + 119) < 0) {
    operator delete(*v3);
  }
  *(_OWORD *)int v3 = v20;
  *(void *)(a1 + 112) = v21;
  *(void *)(a1 + 152) &= 0xFFFFFFFFFFFFFE00;
  int v11 = (id *)GpsdPreferences::instance(0);
  unsigned int LogLevel = GpsdPreferences::getLogLevel(v11);
  uint64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 152);
  if (LogLevel >= 8) {
    int v15 = 8;
  }
  else {
    int v15 = LogLevel;
  }
  uint64_t v16 = (v15 + 1);
  do
  {
    if (v13)
    {
      v14 |= 1 << v13;
      *(void *)(a1 + 152) = v14;
    }
    ++v13;
  }
  while (v16 != v13);
  int v17 = (id *)GpsdPreferences::instance(0);
  unsigned int v18 = GpsdPreferences::vendorLogAllToOsLog(v17);
  memset_pattern16((void *)(a1 + 160), &unk_1000E7BF0, 0x24uLL);
  if (v18)
  {
    *(_OWORD *)(a1 + 164) = xmmword_1000E8730;
    *(void *)(a1 + 180) = 0x400000003;
    *(_DWORD *)(a1 + 192) = 4;
  }
  else
  {
    *(void *)(a1 + 164) = &_mh_execute_header;
    unsigned int v19 = *(_DWORD *)(GpsdPlatformInfo::instance(0) + 8) - 103;
    if (v19 <= 4 && ((1 << v19) & 0x19) != 0)
    {
      *(_DWORD *)(a1 + 176) = 2;
    }
    else
    {
      GpsdPlatformInfo::instance(0);
      *(_DWORD *)(a1 + 172) = 2;
    }
  }
}

void sub_100047584(_Unwind_Exception *a1)
{
  sub_10003860C(v1);
  _Unwind_Resume(a1);
}

char *VendorLogger::VendorLogger(char *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000186E8(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }
  if (*((char *)a2 + 47) < 0)
  {
    sub_1000186E8(__dst + 24, *((void **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v5 = *(long long *)((char *)a2 + 24);
    *((void *)__dst + 5) = *((void *)a2 + 5);
    *(_OWORD *)(__dst + 24) = v5;
  }
  if (*((char *)a2 + 71) < 0)
  {
    sub_1000186E8(__dst + 48, *((void **)a2 + 6), *((void *)a2 + 7));
  }
  else
  {
    long long v6 = a2[3];
    *((void *)__dst + 8) = *((void *)a2 + 8);
    *((_OWORD *)__dst + 3) = v6;
  }
  if (*((char *)a2 + 95) < 0)
  {
    sub_1000186E8(__dst + 72, *((void **)a2 + 9), *((void *)a2 + 10));
  }
  else
  {
    long long v7 = *(long long *)((char *)a2 + 72);
    *((void *)__dst + 11) = *((void *)a2 + 11);
    *(_OWORD *)(__dst + 72) = v7;
  }
  uint64_t v8 = __dst + 96;
  if (*((char *)a2 + 119) < 0)
  {
    sub_1000186E8(v8, *((void **)a2 + 12), *((void *)a2 + 13));
  }
  else
  {
    long long v9 = a2[6];
    *((void *)__dst + 14) = *((void *)a2 + 14);
    *(_OWORD *)uint64_t v8 = v9;
  }
  long long v10 = *(long long *)((char *)a2 + 152);
  long long v11 = *(long long *)((char *)a2 + 168);
  long long v12 = *(long long *)((char *)a2 + 184);
  int v13 = *((_DWORD *)a2 + 50);
  long long v14 = *(long long *)((char *)a2 + 120);
  long long v15 = *(long long *)((char *)a2 + 136);
  *((void *)__dst + 26) = 0;
  *(_OWORD *)(__dst + 136) = v15;
  *(_OWORD *)(__dst + 120) = v14;
  *((_DWORD *)__dst + 50) = v13;
  *(_OWORD *)(__dst + 184) = v12;
  *(_OWORD *)(__dst + 168) = v11;
  *(_OWORD *)(__dst + 152) = v10;
  *((void *)__dst + 27) = 0;
  *((void *)__dst + 28) = 0;
  *((_DWORD *)__dst + 68) = 2049;
  *((_WORD *)__dst + 138) = 0;
  *((void *)__dst + 35) = 0;
  *((void *)__dst + 36) = v17;
  *(void *)&__dst[*(void *)(v17 - 24) + 288] = v16;
  unsigned int v18 = (std::ios_base *)&__dst[*(void *)(*((void *)__dst + 36) - 24) + 288];
  std::ios_base::init(v18, __dst + 296);
  v18[1].__vftable = 0;
  v18[1].__fmtflags_ = -1;
  std::filebuf::basic_filebuf();
  *((_DWORD *)__dst + 224) = 0;
  *(_OWORD *)(__dst + 856) = 0u;
  *(_OWORD *)(__dst + 872) = 0u;
  *(void *)(__dst + 885) = 0;
  if ((*((_WORD *)__dst + 76) & 0x1FF) == 0) {
    goto LABEL_39;
  }
  unsigned int v19 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_DEFAULT, 0);
  dispatch_queue_t v20 = dispatch_queue_create("com.apple.gpsd.vendor_log", v19);
  *((void *)__dst + 110) = v20;
  if (!v20)
  {
    uint64_t v29 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_ERROR, "null fInternalWorkerQueue", buf, 2u);
      uint64_t v29 = qword_100114840;
    }
    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::string buf = 136446722;
      long long v37 = "/Library/Caches/com.apple.xbs/Sources/CoreGPS/Sources/Daemon/GpsdVendorLogger.mm";
      __int16 v38 = 1026;
      int v39 = 174;
      __int16 v40 = 2082;
      uint64_t v41 = "VendorLogger";
      _os_log_error_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
    }
    sub_1000033AC(v34, "assert");
    sub_1000033AC(v32, "VendorLogger");
    sub_1000033AC(__p, "null fInternalWorkerQueue");
    gpsd::util::triggerDiagnosticReport((uint64_t)v34, (long long *)v32, (long long *)__p);
    if (v31 < 0) {
      operator delete(__p[0]);
    }
    if (v33 < 0) {
      operator delete(v32[0]);
    }
    if (v35 < 0) {
      operator delete(v34[0]);
    }
    __assert_rtn("VendorLogger", "GpsdVendorLogger.mm", 174, "false && \"null fInternalWorkerQueue\"");
  }
  uint64_t v21 = (id *)GpsdPreferences::instance(0);
  if (GpsdPreferences::vendorLogLz4(v21))
  {
    int v22 = 256;
LABEL_24:
    __dst[276] = 1;
    *((_DWORD *)__dst + 68) = v22;
    goto LABEL_25;
  }
  unint64_t v23 = (id *)GpsdPreferences::instance(0);
  if (GpsdPreferences::vendorLogLzfse(v23))
  {
    int v22 = 2049;
    goto LABEL_24;
  }
  unint64_t v24 = (id *)GpsdPreferences::instance(0);
  if (GpsdPreferences::vendorLogZlib(v24))
  {
    int v22 = 517;
    goto LABEL_24;
  }
  if (!__dst[276]) {
    goto LABEL_39;
  }
LABEL_25:
  unint64_t v25 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
  {
    int v26 = *((_DWORD *)__dst + 68);
    if (v26 > 773)
    {
      if (v26 == 774)
      {
        unsigned __int8 v27 = "lzma";
        goto LABEL_38;
      }
      if (v26 == 2049)
      {
        unsigned __int8 v27 = "lzfse";
        goto LABEL_38;
      }
    }
    else
    {
      if (v26 == 256)
      {
        unsigned __int8 v27 = "lz4";
        goto LABEL_38;
      }
      if (v26 == 517)
      {
        unsigned __int8 v27 = "zlib";
LABEL_38:
        *(_DWORD *)std::string buf = 136446210;
        long long v37 = v27;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "VendorLogger,compression enabled,%{public}s", buf, 0xCu);
        goto LABEL_39;
      }
    }
    unsigned __int8 v27 = "unk";
    goto LABEL_38;
  }
LABEL_39:
  sub_100047CF0((uint64_t)__dst);
  return __dst;
}

void sub_100047B44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (*(char *)(v27 + 95) < 0) {
    operator delete(*v30);
  }
  if (*(char *)(v27 + 71) < 0) {
    operator delete(*v29);
  }
  if (*(char *)(v27 + 47) < 0) {
    operator delete(*v28);
  }
  if (*(char *)(v27 + 23) < 0) {
    operator delete(*(void **)v27);
  }
  _Unwind_Resume(exception_object);
}

void VendorLogger::VendorLogger(VendorLogger *this)
{
  VendorLogger::generateDefaultConfig((uint64_t)v2);
  VendorLogger::VendorLogger((char *)this, (long long *)v2);
  if (v11 < 0) {
    operator delete(__p);
  }
  if (v9 < 0) {
    operator delete(v8);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  if (v5 < 0) {
    operator delete(v4);
  }
  if (v3 < 0) {
    operator delete(v2[0]);
  }
}

void sub_100047CDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100047CF0(uint64_t a1)
{
  if ((*(_WORD *)(a1 + 152) & 0x1FF) == 0) {
    return;
  }
  uint64_t v2 = (const char **)(a1 + 96);
  int v3 = *(char *)(a1 + 119);
  long long v4 = (const char *)(a1 + 96);
  if (v3 < 0) {
    long long v4 = *v2;
  }
  if (mkdir(v4, 0x1F8u))
  {
    int v5 = *__error();
    if (v5 != 17)
    {
      uint64_t v9 = qword_100114840;
      if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
        goto LABEL_22;
      }
      if (*(char *)(a1 + 119) < 0) {
        std::string::size_type v10 = (std::string::size_type)*v2;
      }
      else {
        std::string::size_type v10 = (std::string::size_type)v2;
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136446466;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v10;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 1026;
      *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v5;
      long long v14 = "VendorLogger,could not create directory,%{public}s,%{public}d";
      long long v15 = v9;
      uint32_t v16 = 18;
LABEL_112:
      _os_log_error_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, v14, (uint8_t *)&buf, v16);
      goto LABEL_22;
    }
    if (*(char *)(a1 + 119) < 0) {
      long long v6 = *v2;
    }
    else {
      long long v6 = (const char *)v2;
    }
    int v11 = chmod(v6, 0x1F8u);
    long long v12 = qword_100114840;
    if (v11)
    {
      if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
        goto LABEL_22;
      }
      int v13 = *__error();
      LODWORD(buf.__r_.__value_.__l.__data_) = 67240192;
      HIDWORD(buf.__r_.__value_.__r.__words[0]) = v13;
      long long v14 = "VendorLogger,chmod failed,%{public}d";
      long long v15 = v12;
      uint32_t v16 = 8;
      goto LABEL_112;
    }
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      buf.__r_.__value_.__r.__words[0] = 0x1F804000100;
      _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "VendorLogger,directory exists,permissions,%x", (uint8_t *)&buf, 8u);
    }
  }
  else
  {
    char v7 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
    {
      if (*(char *)(a1 + 119) < 0) {
        std::string::size_type v8 = (std::string::size_type)*v2;
      }
      else {
        std::string::size_type v8 = (std::string::size_type)v2;
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136446466;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v8;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 1024;
      *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = 504;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "VendorLogger,created directory,%{public}s,permissions,%x", (uint8_t *)&buf, 0x12u);
    }
  }
LABEL_22:
  sub_100048A70(a1);
  sub_10004913C(a1);
  snprintf(__str, 8uLL, "%03d", *(_DWORD *)(a1 + 888));
  ++*(_DWORD *)(a1 + 888);
  memset(&v54, 0, sizeof(v54));
  VendorLogger::isoTimestampString(&buf);
  sub_1000033AC(&v64, __str);
  if (*(_DWORD *)(GpsdPreferences::instance(0) + 8) == 3)
  {
    std::string::assign(&buf, "unittest");
    std::string::assign(&v64, "000");
  }
  if (*(char *)(a1 + 119) >= 0) {
    size_t v17 = *(unsigned __int8 *)(a1 + 119);
  }
  else {
    size_t v17 = *(void *)(a1 + 104);
  }
  unsigned int v18 = &v57;
  sub_10004B7B4((uint64_t)&v57, v17 + 1);
  if ((v57.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    unsigned int v18 = (std::string *)v57.__r_.__value_.__r.__words[0];
  }
  if (v17)
  {
    if (*(char *)(a1 + 119) >= 0) {
      unsigned int v19 = v2;
    }
    else {
      unsigned int v19 = *(const char ***)(a1 + 96);
    }
    memmove(v18, v19, v17);
  }
  *(_WORD *)((char *)&v18->__r_.__value_.__l.__data_ + v17) = 47;
  int v20 = *(char *)(a1 + 23);
  if (v20 >= 0) {
    uint64_t v21 = (const std::string::value_type *)a1;
  }
  else {
    uint64_t v21 = *(const std::string::value_type **)a1;
  }
  if (v20 >= 0) {
    std::string::size_type v22 = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    std::string::size_type v22 = *(void *)(a1 + 8);
  }
  unint64_t v23 = std::string::append(&v57, v21, v22);
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  v58.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_std::string buf = &buf;
  }
  else {
    p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
  }
  if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(buf.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = buf.__r_.__value_.__l.__size_;
  }
  uint64_t v27 = std::string::append(&v58, (const std::string::value_type *)p_buf, size);
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  v59.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  uint64_t v29 = std::string::append(&v59, "_");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v60.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v60.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  if ((v64.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    char v31 = &v64;
  }
  else {
    char v31 = (std::string *)v64.__r_.__value_.__r.__words[0];
  }
  sub_1000033AC(__p, (char *)v31);
  if ((v56 & 0x80u) == 0) {
    uint64_t v32 = __p;
  }
  else {
    uint64_t v32 = (void **)__p[0];
  }
  if ((v56 & 0x80u) == 0) {
    std::string::size_type v33 = v56;
  }
  else {
    std::string::size_type v33 = (std::string::size_type)__p[1];
  }
  uint64_t v34 = std::string::append(&v60, (const std::string::value_type *)v32, v33);
  long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
  v61.__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v61.__r_.__value_.__l.__data_ = v35;
  v34->__r_.__value_.__l.__size_ = 0;
  v34->__r_.__value_.__r.__words[2] = 0;
  v34->__r_.__value_.__r.__words[0] = 0;
  unsigned __int8 v36 = std::string::append(&v61, ".");
  long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
  v62.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v62.__r_.__value_.__l.__data_ = v37;
  v36->__r_.__value_.__l.__size_ = 0;
  v36->__r_.__value_.__r.__words[2] = 0;
  v36->__r_.__value_.__r.__words[0] = 0;
  int v38 = *(char *)(a1 + 47);
  if (v38 >= 0) {
    int v39 = (const std::string::value_type *)(a1 + 24);
  }
  else {
    int v39 = *(const std::string::value_type **)(a1 + 24);
  }
  if (v38 >= 0) {
    std::string::size_type v40 = *(unsigned __int8 *)(a1 + 47);
  }
  else {
    std::string::size_type v40 = *(void *)(a1 + 32);
  }
  uint64_t v41 = std::string::append(&v62, v39, v40);
  long long v42 = *(_OWORD *)&v41->__r_.__value_.__l.__data_;
  v63.__r_.__value_.__r.__words[2] = v41->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v63.__r_.__value_.__l.__data_ = v42;
  v41->__r_.__value_.__l.__size_ = 0;
  v41->__r_.__value_.__r.__words[2] = 0;
  v41->__r_.__value_.__r.__words[0] = 0;
  int v43 = *(char *)(a1 + 95);
  if (v43 >= 0) {
    uint64_t v44 = (const std::string::value_type *)(a1 + 72);
  }
  else {
    uint64_t v44 = *(const std::string::value_type **)(a1 + 72);
  }
  if (v43 >= 0) {
    std::string::size_type v45 = *(unsigned __int8 *)(a1 + 95);
  }
  else {
    std::string::size_type v45 = *(void *)(a1 + 80);
  }
  uint64_t v46 = std::string::append(&v63, v44, v45);
  std::string::size_type v47 = v46->__r_.__value_.__r.__words[0];
  v65[0] = v46->__r_.__value_.__l.__size_;
  *(void *)((char *)v65 + 7) = *(std::string::size_type *)((char *)&v46->__r_.__value_.__r.__words[1] + 7);
  char v48 = HIBYTE(v46->__r_.__value_.__r.__words[2]);
  v46->__r_.__value_.__l.__size_ = 0;
  v46->__r_.__value_.__r.__words[2] = 0;
  v46->__r_.__value_.__r.__words[0] = 0;
  *(std::string::size_type *)((char *)&v54.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v65 + 7);
  v54.__r_.__value_.__r.__words[0] = v47;
  v54.__r_.__value_.__l.__size_ = v65[0];
  *((unsigned char *)&v54.__r_.__value_.__s + 23) = v48;
  if (SHIBYTE(v63.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v63.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v62.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v61.__r_.__value_.__l.__data_);
  }
  if ((char)v56 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v60.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v59.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v58.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v57.__r_.__value_.__l.__data_);
  }
  if (!*(unsigned char *)(a1 + 276)) {
    goto LABEL_95;
  }
  std::string::append(&v54, ".");
  int v49 = *(_DWORD *)(a1 + 272);
  if (v49 > 773)
  {
    if (v49 == 774)
    {
      unint64_t v50 = "lzma";
      goto LABEL_94;
    }
    if (v49 == 2049)
    {
      unint64_t v50 = "lzfse";
      goto LABEL_94;
    }
LABEL_91:
    unint64_t v50 = "unk";
    goto LABEL_94;
  }
  if (v49 == 256)
  {
    unint64_t v50 = "lz4";
    goto LABEL_94;
  }
  if (v49 != 517) {
    goto LABEL_91;
  }
  unint64_t v50 = "zlib";
LABEL_94:
  std::string::append(&v54, v50);
LABEL_95:
  if (SHIBYTE(v64.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v64.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  unint64_t v51 = (void **)(a1 + 856);
  if (*(char *)(a1 + 879) < 0) {
    operator delete(*v51);
  }
  *(_OWORD *)unint64_t v51 = *(_OWORD *)&v54.__r_.__value_.__l.__data_;
  *(void *)(a1 + 872) = *((void *)&v54.__r_.__value_.__l + 2);
  std::ofstream::open();
  unint64_t v52 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    if (*(char *)(a1 + 879) < 0) {
      unint64_t v51 = (void **)*v51;
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 136446210;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v51;
    _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, "VendorLogger,opening,%{public}s", (uint8_t *)&buf, 0xCu);
  }
  if (!*(void *)(a1 + 416))
  {
    unint64_t v53 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
    {
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_ERROR, "VendorLogger,failed to open", (uint8_t *)&buf, 2u);
    }
  }
  *(_DWORD *)(a1 + 896) = 0;
  *(unsigned char *)(a1 + 892) = 1;
}

void sub_1000483D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61)
{
}

void VendorLogger::~VendorLogger(VendorLogger *this)
{
  uint64_t v2 = *((void *)this + 110);
  if (v2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100048690;
    block[3] = &unk_100104D40;
    block[4] = this;
    dispatch_sync(v2, block);
  }
  if (*((char *)this + 879) < 0) {
    operator delete(*((void **)this + 107));
  }
  std::filebuf::~filebuf();
  std::ostream::~ostream();
  std::ios::~ios();
  long long v4 = (void *)*((void *)this + 26);
  if (v4)
  {
    *((void *)this + 27) = v4;
    operator delete(v4);
  }
  if (*((char *)this + 119) < 0) {
    operator delete(*((void **)this + 12));
  }
  if (*((char *)this + 95) < 0) {
    operator delete(*((void **)this + 9));
  }
  if (*((char *)this + 71) < 0) {
    operator delete(*((void **)this + 6));
  }
  if (*((char *)this + 47) < 0) {
    operator delete(*((void **)this + 3));
  }
  if (*((char *)this + 23) < 0) {
    operator delete(*(void **)this);
  }
}

void sub_100048690(uint64_t a1)
{
}

void sub_100048698(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 276) && *(unsigned char *)(a1 + 277))
  {
    uint64_t v2 = qword_100114840;
    do
    {
      while (1)
      {
        char v15 = 0;
        *(void *)(a1 + 248) = &v15;
        *(void *)(a1 + 256) = 0;
        uint64_t v3 = *(void *)(a1 + 208);
        uint64_t v4 = *(void *)(a1 + 216) - v3;
        *(void *)(a1 + 232) = v3;
        *(void *)(a1 + 240) = v4;
        if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::string buf = 134218752;
          size_t v17 = &v15;
          __int16 v18 = 2048;
          uint64_t v19 = 0;
          __int16 v20 = 2048;
          uint64_t v21 = v3;
          __int16 v22 = 2048;
          uint64_t v23 = v4;
          _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "VendorLogger,flushCompression,before,%p,%zu,%p,%zu", buf, 0x2Au);
        }
        compression_status v5 = compression_stream_process((compression_stream *)(a1 + 232), 1);
        if (v5 > COMPRESSION_STATUS_END)
        {
          uint64_t v9 = qword_100114840;
          if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)std::string buf = 0;
            _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "VendorLogger,flushCompression,failed to finalize stream", buf, 2u);
          }
        }
        else
        {
          uint64_t v6 = *(void *)(a1 + 216) - *(void *)(a1 + 208);
          uint64_t v7 = *(void *)(a1 + 240);
          std::string::size_type v8 = qword_100114840;
          if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)std::string buf = 134217984;
            size_t v17 = (char *)(v6 - v7);
            _os_log_debug_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "VendorLogger,flushCompression,flushed bytes,%zu", buf, 0xCu);
          }
          if (v6 != v7) {
            std::ostream::write();
          }
        }
        uint64_t v2 = qword_100114840;
        if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG)) {
          break;
        }
        if (v5) {
          goto LABEL_17;
        }
      }
      std::string::size_type v10 = *(char **)(a1 + 248);
      uint64_t v11 = *(void *)(a1 + 256);
      uint64_t v12 = *(void *)(a1 + 232);
      uint64_t v13 = *(void *)(a1 + 240);
      *(_DWORD *)std::string buf = 134219008;
      size_t v17 = v10;
      __int16 v18 = 2048;
      uint64_t v19 = v11;
      __int16 v20 = 2048;
      uint64_t v21 = v12;
      __int16 v22 = 2048;
      uint64_t v23 = v13;
      __int16 v24 = 1024;
      compression_status v25 = v5;
      _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "VendorLogger,flushCompression,after,%p,%zu,%p,%zu,status,%d", buf, 0x30u);
      uint64_t v2 = qword_100114840;
    }
    while (v5 == COMPRESSION_STATUS_OK);
LABEL_17:
    *(unsigned char *)(a1 + 277) = 0;
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "VendorLogger,flushCompression,destroying", buf, 2u);
    }
    if (compression_stream_destroy((compression_stream *)(a1 + 232)))
    {
      long long v14 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "VendorLogger,flushCompression,failed to destroy stream", buf, 2u);
      }
    }
  }
}

uint64_t sub_1000489A8(uint64_t a1, const void **a2, const void **a3)
{
  if (*((char *)a2 + 23) >= 0) {
    size_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v5 = (size_t)a2[1];
  }
  if (*((char *)a3 + 23) >= 0) {
    size_t v6 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v6 = (size_t)a3[1];
  }
  uint64_t result = sub_10004B7B4(a1, v6 + v5);
  if (*(char *)(result + 23) >= 0) {
    std::string::size_type v8 = (char *)result;
  }
  else {
    std::string::size_type v8 = *(char **)result;
  }
  if (v5)
  {
    if (*((char *)a2 + 23) >= 0) {
      uint64_t v9 = a2;
    }
    else {
      uint64_t v9 = *a2;
    }
    uint64_t result = (uint64_t)memmove(v8, v9, v5);
  }
  std::string::size_type v10 = &v8[v5];
  if (v6)
  {
    if (*((char *)a3 + 23) >= 0) {
      uint64_t v11 = a3;
    }
    else {
      uint64_t v11 = *a3;
    }
    uint64_t result = (uint64_t)memmove(v10, v11, v6);
  }
  v10[v6] = 0;
  return result;
}

void sub_100048A70(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 892))
  {
    sub_100046BA0(a1);
    if (clock_gettime(_CLOCK_REALTIME, &__tp))
    {
      uint64_t v2 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        int v47 = *__error();
        LODWORD(v60.__r_.__value_.__l.__data_) = 67240192;
        HIDWORD(v60.__r_.__value_.__r.__words[0]) = v47;
        _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "VendorLogger,pruneLogFiles,clock_gettime failed,%{public}d", (uint8_t *)&v60, 8u);
      }
    }
    __darwin_time_t tv_sec = __tp.tv_sec;
    double v4 = (double)__tp.tv_sec;
    double v5 = *(double *)(a1 + 120);
    if (v5 >= (double)__tp.tv_sec)
    {
      size_t v6 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        LODWORD(v60.__r_.__value_.__l.__data_) = 134349056;
        *(std::string::size_type *)((char *)v60.__r_.__value_.__r.__words + 4) = tv_sec;
        _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "VendorLogger,pruneLogFiles,timespecNow too small to use,%{public}ld", (uint8_t *)&v60, 0xCu);
        double v5 = *(double *)(a1 + 120);
      }
    }
    uint64_t v7 = (id *)GpsdPreferences::instance(0);
    GpsdPreferences::vendorLogDirectory(v7, &v56);
    std::string::size_type v8 = &selRef_UTF8String;
    if ((char)v58 < 0)
    {
      if (v57)
      {
        unint64_t v53 = 0;
        std::string v54 = 0;
        uint64_t v55 = 0;
        uint64_t v9 = v56;
        goto LABEL_13;
      }
    }
    else if (v58)
    {
      unint64_t v53 = 0;
      std::string v54 = 0;
      uint64_t v9 = &v56;
      uint64_t v55 = 0;
LABEL_13:
      uint64_t v48 = a1;
      sub_100046FC4((uint64_t)v9, (const void **)a1, (uint64_t *)&v53);
      unint64_t v10 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (v54 - v53));
      if (v54 == v53) {
        uint64_t v11 = 0;
      }
      else {
        uint64_t v11 = v10;
      }
      sub_10004A810((unint64_t)v53, v54, v11, 1);
      off_t v51 = 0;
      uint64_t v12 = v53;
      uint64_t v13 = v54;
      if (v53 != v54)
      {
        int v14 = 0;
        off_t v15 = 0;
        do
        {
          if ((v58 & 0x80u) == 0) {
            size_t v16 = v58;
          }
          else {
            size_t v16 = v57;
          }
          sub_10004B7B4((uint64_t)&v60, v16 + 1);
          if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            size_t v17 = &v60;
          }
          else {
            size_t v17 = (std::string *)v60.__r_.__value_.__r.__words[0];
          }
          if (v16)
          {
            if ((v58 & 0x80u) == 0) {
              __int16 v18 = &v56;
            }
            else {
              __int16 v18 = v56;
            }
            memmove(v17, v18, v16);
          }
          *(_WORD *)((char *)&v17->__r_.__value_.__l.__data_ + v16) = 47;
          int v19 = *((char *)v12 + 23);
          if (v19 >= 0) {
            __int16 v20 = (const std::string::value_type *)v12;
          }
          else {
            __int16 v20 = (const std::string::value_type *)*v12;
          }
          if (v19 >= 0) {
            std::string::size_type v21 = *((unsigned __int8 *)v12 + 23);
          }
          else {
            std::string::size_type v21 = (std::string::size_type)v12[1];
          }
          __int16 v22 = std::string::append(&v60, v20, v21);
          long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
          int64_t v50 = v22->__r_.__value_.__r.__words[2];
          *(_OWORD *)std::string __p = v23;
          v22->__r_.__value_.__l.__size_ = 0;
          v22->__r_.__value_.__r.__words[2] = 0;
          v22->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v60.__r_.__value_.__l.__data_);
          }
          if (v50 >= 0) {
            __int16 v24 = __p;
          }
          else {
            __int16 v24 = (void **)__p[0];
          }
          if (!sub_100046AAC((const char *)v24, &v52, &v51)) {
            goto LABEL_69;
          }
          off_t v25 = v51;
          off_t v26 = v51 + v15;
          uint64_t v27 = v8[264];
          BOOL v28 = os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG);
          __darwin_time_t v29 = v52.tv_sec;
          if (v28)
          {
            if (v50 >= 0) {
              long long v42 = __p;
            }
            else {
              long long v42 = (void **)__p[0];
            }
            LODWORD(v60.__r_.__value_.__l.__data_) = 136316162;
            *(std::string::size_type *)((char *)v60.__r_.__value_.__r.__words + 4) = (std::string::size_type)v42;
            WORD2(v60.__r_.__value_.__r.__words[1]) = 2048;
            *(std::string::size_type *)((char *)&v60.__r_.__value_.__r.__words[1] + 6) = v52.tv_sec;
            HIWORD(v60.__r_.__value_.__r.__words[2]) = 2048;
            uint64_t v61 = (uint64_t)(v4 - v5);
            __int16 v62 = 2048;
            off_t v63 = v25;
            __int16 v64 = 2048;
            off_t v65 = v26;
            _os_log_debug_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEBUG, "VendorLogger,pruneLogFiles,looking at,%s,modTime,%ld,floorTime,%ld,size,%lld,new total,%lld", (uint8_t *)&v60, 0x34u);
          }
          if (v29 >= (uint64_t)(v4 - v5))
          {
            if (v14 >= *(_DWORD *)(v48 + 144))
            {
              if (v50 >= 0) {
                uint64_t v34 = __p;
              }
              else {
                uint64_t v34 = (void **)__p[0];
              }
              sub_1000469EC((const char *)v34);
              std::string::size_type v8 = &selRef_UTF8String;
              uint64_t v35 = qword_100114840;
              if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG)) {
                goto LABEL_68;
              }
              if (v50 >= 0) {
                unsigned __int8 v36 = __p;
              }
              else {
                unsigned __int8 v36 = (void **)__p[0];
              }
              LODWORD(v60.__r_.__value_.__l.__data_) = 136315394;
              *(std::string::size_type *)((char *)v60.__r_.__value_.__r.__words + 4) = (std::string::size_type)v36;
              WORD2(v60.__r_.__value_.__r.__words[1]) = 1024;
              *(_DWORD *)((char *)&v60.__r_.__value_.__r.__words[1] + 6) = v14 + 1;
              long long v37 = v35;
              int v38 = "VendorLogger,pruneLogFiles,deleted due to num files,%s,num files,%d";
              uint32_t v39 = 18;
              goto LABEL_86;
            }
            if (!v25)
            {
              if (v50 >= 0) {
                std::string::size_type v40 = __p;
              }
              else {
                std::string::size_type v40 = (void **)__p[0];
              }
              sub_1000469EC((const char *)v40);
              std::string::size_type v8 = &selRef_UTF8String;
              uint64_t v41 = qword_100114840;
              if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG)) {
                goto LABEL_68;
              }
              if (v50 >= 0) {
                uint64_t v44 = __p;
              }
              else {
                uint64_t v44 = (void **)__p[0];
              }
              LODWORD(v60.__r_.__value_.__l.__data_) = 136315138;
              *(std::string::size_type *)((char *)v60.__r_.__value_.__r.__words + 4) = (std::string::size_type)v44;
              long long v37 = v41;
              int v38 = "VendorLogger,pruneLogFiles,deleted due to zero size,%s";
              uint32_t v39 = 12;
LABEL_86:
              _os_log_debug_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEBUG, v38, (uint8_t *)&v60, v39);
LABEL_68:
              ++v14;
              goto LABEL_69;
            }
            if (v26 > *(void *)(v48 + 136))
            {
              if (v50 >= 0) {
                uint64_t v32 = __p;
              }
              else {
                uint64_t v32 = (void **)__p[0];
              }
              sub_1000469EC((const char *)v32);
              std::string::size_type v8 = &selRef_UTF8String;
              std::string::size_type v33 = qword_100114840;
              if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
              {
                if (v50 >= 0) {
                  std::string::size_type v45 = __p;
                }
                else {
                  std::string::size_type v45 = (void **)__p[0];
                }
                LODWORD(v60.__r_.__value_.__l.__data_) = 136315138;
                *(std::string::size_type *)((char *)v60.__r_.__value_.__r.__words + 4) = (std::string::size_type)v45;
                _os_log_debug_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEBUG, "VendorLogger,pruneLogFiles,deleted due to size,%s", (uint8_t *)&v60, 0xCu);
              }
              off_t v15 = v26;
              goto LABEL_68;
            }
            off_t v15 = v26;
          }
          else
          {
            if (v50 >= 0) {
              long long v30 = __p;
            }
            else {
              long long v30 = (void **)__p[0];
            }
            sub_1000469EC((const char *)v30);
            char v31 = qword_100114840;
            if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
            {
              if (v50 >= 0) {
                int v43 = __p;
              }
              else {
                int v43 = (void **)__p[0];
              }
              LODWORD(v60.__r_.__value_.__l.__data_) = 136315650;
              *(std::string::size_type *)((char *)v60.__r_.__value_.__r.__words + 4) = (std::string::size_type)v43;
              WORD2(v60.__r_.__value_.__r.__words[1]) = 2048;
              *(std::string::size_type *)((char *)&v60.__r_.__value_.__r.__words[1] + 6) = v29;
              HIWORD(v60.__r_.__value_.__r.__words[2]) = 2048;
              uint64_t v61 = (uint64_t)(v4 - v5);
              _os_log_debug_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEBUG, "VendorLogger,pruneLogFiles,deleted due to age,%s,fileTime,%ld,targetTime,%ld", (uint8_t *)&v60, 0x20u);
            }
          }
          ++v14;
          std::string::size_type v8 = &selRef_UTF8String;
LABEL_69:
          if (SHIBYTE(v50) < 0) {
            operator delete(__p[0]);
          }
          v12 += 3;
        }
        while (v12 != v13);
      }
      v60.__r_.__value_.__r.__words[0] = (std::string::size_type)&v53;
      sub_10002A080((void ***)&v60);
      goto LABEL_94;
    }
    uint64_t v46 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v60.__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, "VendorLogger.pruneLogFiles: null path, cannot delete old logs", (uint8_t *)&v60, 2u);
    }
LABEL_94:
    if ((char)v58 < 0) {
      operator delete(v56);
    }
  }
}

void sub_1000490D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  *(void *)(v37 - 176) = &a29;
  sub_10002A080((void ***)(v37 - 176));
  if (a37 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10004913C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 276))
  {
    *(void *)(a1 + 280) = 0;
    uint64_t v2 = *(void *)(a1 + 208);
    unint64_t v3 = *(void *)(a1 + 216) - v2;
    if (v3 >> 15)
    {
      if (v3 != 0x8000) {
        *(void *)(a1 + 216) = v2 + 0x8000;
      }
    }
    else
    {
      sub_100028718((unint64_t *)(a1 + 208), 0x8000 - v3);
    }
    double v4 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "VendorLogger,initCompression", buf, 2u);
    }
    if (compression_stream_init((compression_stream *)(a1 + 232), COMPRESSION_STREAM_ENCODE, *(compression_algorithm *)(a1 + 272)))
    {
      double v5 = qword_100114840;
      if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)size_t v6 = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "VendorLogger,initCompression,Could not init stream", v6, 2u);
      }
      *(unsigned char *)(a1 + 276) = 0;
      *(void *)(a1 + 216) = *(void *)(a1 + 208);
    }
    else
    {
      *(unsigned char *)(a1 + 277) = 1;
    }
  }
}

void VendorLogger::notifyStart(VendorLogger *this)
{
  uint64_t v2 = *((void *)this + 110);
  if (v2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000492D4;
    block[3] = &unk_100104D40;
    block[4] = this;
    dispatch_async(v2, block);
  }
}

void sub_1000492D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = qword_100114840;
  if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v3 = (void *)(v1 + 856);
    if (*(char *)(v1 + 879) < 0) {
      unint64_t v3 = (void *)*v3;
    }
    int v4 = 136446210;
    double v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "VendorLogger,notifyStart,activeFilename,%{public}s", (uint8_t *)&v4, 0xCu);
  }
  if (!*(unsigned char *)(v1 + 892) && (*(_WORD *)(v1 + 152) & 0x1FF) != 0) {
    sub_100047CF0(v1);
  }
}

void VendorLogger::notifyStop(VendorLogger *this)
{
  uint64_t v1 = *((void *)this + 110);
  if (v1)
  {
    unint64_t v3 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "VendorLogger,notifyStop,received", buf, 2u);
      uint64_t v1 = *((void *)this + 110);
    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100049470;
    block[3] = &unk_100104D40;
    block[4] = this;
    dispatch_sync(v1, block);
  }
}

void sub_100049470(uint64_t a1)
{
}

void VendorLogger::flush(VendorLogger *this)
{
  uint64_t v1 = *((void *)this + 110);
  if (v1)
  {
    unint64_t v3 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "VendorLogger,flush,received", buf, 2u);
      uint64_t v1 = *((void *)this + 110);
    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100049548;
    block[3] = &unk_100104D40;
    block[4] = this;
    dispatch_sync(v1, block);
  }
}

uint64_t sub_100049548(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 32);
  if ((*(_WORD *)(v1 + 152) & 0x1FF) != 0)
  {
    sub_100048698(*(void *)(result + 32));
    sub_10004913C(v1);
    return std::ostream::flush();
  }
  return result;
}

void VendorLogger::prepareForTermination(VendorLogger *this)
{
  uint64_t v1 = *((void *)this + 110);
  if (v1)
  {
    unint64_t v3 = qword_100114840;
    if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "VendorLogger,prepareForTermination,received", buf, 2u);
      uint64_t v1 = *((void *)this + 110);
    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100049674;
    block[3] = &unk_100104D40;
    block[4] = this;
    dispatch_sync(v1, block);
  }
}

void sub_100049674(uint64_t a1)
{
}

void VendorLogger::log(uint64_t a1, unsigned int a2, void **a3)
{
  double v6 = (double)gpsd::util::getMachContinuousTimeNs((gpsd::util *)a1) * 0.000000001;
  switch(*(_DWORD *)(a1 + 4 * a2 + 160))
  {
    case 0:
      int v7 = *(unsigned __int8 *)(a1 + 196);
      uint64_t v8 = qword_100114830;
      BOOL v9 = os_log_type_enabled((os_log_t)qword_100114830, OS_LOG_TYPE_FAULT);
      if (v7)
      {
        if (!v9) {
          goto LABEL_34;
        }
        if (*((char *)a3 + 23) >= 0) {
          unint64_t v10 = a3;
        }
        else {
          unint64_t v10 = *a3;
        }
        *(_DWORD *)std::string buf = 134349315;
        *(double *)&uint8_t buf[4] = v6;
        *(_WORD *)&unsigned char buf[12] = 2081;
        *(void *)&unsigned char buf[14] = v10;
        uint64_t v11 = "%{public}.3f,%{private}s";
        uint64_t v12 = v8;
        uint32_t v13 = 22;
      }
      else
      {
        if (!v9) {
          goto LABEL_34;
        }
        if (*((char *)a3 + 23) >= 0) {
          uint64_t v46 = a3;
        }
        else {
          uint64_t v46 = *a3;
        }
        *(_DWORD *)std::string buf = 136380675;
        *(void *)&uint8_t buf[4] = v46;
        uint64_t v11 = "%{private}s";
        uint64_t v12 = v8;
        uint32_t v13 = 12;
      }
      _os_log_fault_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_FAULT, v11, buf, v13);
LABEL_34:
      sub_1000033AC(buf, "Vendor");
      sub_1000033AC(v50, "assert");
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000186E8(&v51[8], *a3, (unint64_t)a3[1]);
      }
      else
      {
        *(_OWORD *)&v51[8] = *(_OWORD *)a3;
        *(void *)&v51[24] = a3[2];
      }
      char v52 = 1;
      gpsd::util::triggerDiagnosticReport((uint64_t)buf);
      if ((v51[31] & 0x80000000) != 0) {
        operator delete(*(void **)&v51[8]);
      }
      if ((v51[7] & 0x80000000) != 0) {
        operator delete(v50[0]);
      }
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
LABEL_67:
      if (*(void *)(a1 + 880))
      {
        *(void *)std::string buf = 0;
        *(void *)&uint8_t buf[8] = buf;
        *(void *)&uint8_t buf[16] = 0x4812000000;
        v50[0] = sub_100049CB0;
        v50[1] = sub_100049CCC;
        *(_OWORD *)&v51[16] = 0u;
        *(_OWORD *)off_t v51 = 0u;
        long long v44 = *(_OWORD *)&v51[8];
        *(void *)&v51[24] = a3[2];
        *(_OWORD *)&v51[8] = *(_OWORD *)a3;
        *(_OWORD *)a3 = v44;
        a3[2] = 0;
        std::string::size_type v45 = *(NSObject **)(a1 + 880);
        v47[0] = _NSConcreteStackBlock;
        v47[1] = 3221225472;
        _DWORD v47[2] = sub_100049CE0;
        v47[3] = &unk_1001081F8;
        v47[4] = buf;
        v47[5] = a1;
        *(double *)&v47[6] = v6;
        unsigned int v48 = a2;
        dispatch_async(v45, v47);
        _Block_object_dispose(buf, 8);
        if ((v51[31] & 0x80000000) != 0) {
          operator delete(*(void **)&v51[8]);
        }
      }
      return;
    case 1:
      int v14 = *(unsigned __int8 *)(a1 + 196);
      uint64_t v15 = qword_100114830;
      BOOL v16 = os_log_type_enabled((os_log_t)qword_100114830, OS_LOG_TYPE_ERROR);
      if (v14)
      {
        if (!v16) {
          goto LABEL_67;
        }
        if (*((char *)a3 + 23) >= 0) {
          size_t v17 = a3;
        }
        else {
          size_t v17 = *a3;
        }
        *(_DWORD *)std::string buf = 134349315;
        *(double *)&uint8_t buf[4] = v6;
        *(_WORD *)&unsigned char buf[12] = 2081;
        *(void *)&unsigned char buf[14] = v17;
        __int16 v18 = "%{public}.3f,%{private}s";
        int v19 = v15;
        uint32_t v20 = 22;
      }
      else
      {
        if (!v16) {
          goto LABEL_67;
        }
        if (*((char *)a3 + 23) >= 0) {
          std::string::size_type v40 = a3;
        }
        else {
          std::string::size_type v40 = *a3;
        }
        *(_DWORD *)std::string buf = 136380675;
        *(void *)&uint8_t buf[4] = v40;
        __int16 v18 = "%{private}s";
        int v19 = v15;
        uint32_t v20 = 12;
      }
      _os_log_error_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, v18, buf, v20);
      goto LABEL_67;
    case 2:
      int v21 = *(unsigned __int8 *)(a1 + 196);
      uint64_t v22 = qword_100114830;
      BOOL v23 = os_log_type_enabled((os_log_t)qword_100114830, OS_LOG_TYPE_DEFAULT);
      if (v21)
      {
        if (v23)
        {
          if (*((char *)a3 + 23) >= 0) {
            __int16 v24 = a3;
          }
          else {
            __int16 v24 = *a3;
          }
          *(_DWORD *)std::string buf = 134349315;
          *(double *)&uint8_t buf[4] = v6;
          *(_WORD *)&unsigned char buf[12] = 2081;
          *(void *)&unsigned char buf[14] = v24;
          off_t v25 = "%{public}.3f,%{private}s";
          off_t v26 = v22;
          os_log_type_t v27 = OS_LOG_TYPE_DEFAULT;
          goto LABEL_26;
        }
      }
      else if (v23)
      {
        if (*((char *)a3 + 23) >= 0) {
          uint64_t v41 = a3;
        }
        else {
          uint64_t v41 = *a3;
        }
        *(_DWORD *)std::string buf = 136380675;
        *(void *)&uint8_t buf[4] = v41;
        off_t v25 = "%{private}s";
        off_t v26 = v22;
        os_log_type_t v27 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_52;
      }
      goto LABEL_67;
    case 3:
      int v28 = *(unsigned __int8 *)(a1 + 196);
      uint64_t v29 = qword_100114830;
      BOOL v30 = os_log_type_enabled((os_log_t)qword_100114830, OS_LOG_TYPE_INFO);
      if (v28)
      {
        if (!v30) {
          goto LABEL_67;
        }
        if (*((char *)a3 + 23) >= 0) {
          char v31 = a3;
        }
        else {
          char v31 = *a3;
        }
        *(_DWORD *)std::string buf = 134349315;
        *(double *)&uint8_t buf[4] = v6;
        *(_WORD *)&unsigned char buf[12] = 2081;
        *(void *)&unsigned char buf[14] = v31;
        off_t v25 = "%{public}.3f,%{private}s";
        off_t v26 = v29;
        os_log_type_t v27 = OS_LOG_TYPE_INFO;
LABEL_26:
        uint32_t v32 = 22;
      }
      else
      {
        if (!v30) {
          goto LABEL_67;
        }
        if (*((char *)a3 + 23) >= 0) {
          long long v42 = a3;
        }
        else {
          long long v42 = *a3;
        }
        *(_DWORD *)std::string buf = 136380675;
        *(void *)&uint8_t buf[4] = v42;
        off_t v25 = "%{private}s";
        off_t v26 = v29;
        os_log_type_t v27 = OS_LOG_TYPE_INFO;
LABEL_52:
        uint32_t v32 = 12;
      }
      _os_log_impl((void *)&_mh_execute_header, v26, v27, v25, buf, v32);
      goto LABEL_67;
    case 4:
      int v33 = *(unsigned __int8 *)(a1 + 196);
      uint64_t v34 = qword_100114830;
      BOOL v35 = os_log_type_enabled((os_log_t)qword_100114830, OS_LOG_TYPE_DEBUG);
      if (v33)
      {
        if (!v35) {
          goto LABEL_67;
        }
        if (*((char *)a3 + 23) >= 0) {
          unsigned __int8 v36 = a3;
        }
        else {
          unsigned __int8 v36 = *a3;
        }
        *(_DWORD *)std::string buf = 134349315;
        *(double *)&uint8_t buf[4] = v6;
        *(_WORD *)&unsigned char buf[12] = 2081;
        *(void *)&unsigned char buf[14] = v36;
        uint64_t v37 = "%{public}.3f,%{private}s";
        int v38 = v34;
        uint32_t v39 = 22;
      }
      else
      {
        if (!v35) {
          goto LABEL_67;
        }
        if (*((char *)a3 + 23) >= 0) {
          int v43 = a3;
        }
        else {
          int v43 = *a3;
        }
        *(_DWORD *)std::string buf = 136380675;
        *(void *)&uint8_t buf[4] = v43;
        uint64_t v37 = "%{private}s";
        int v38 = v34;
        uint32_t v39 = 12;
      }
      _os_log_debug_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEBUG, v37, buf, v39);
      goto LABEL_67;
    default:
      goto LABEL_67;
  }
}

void sub_100049C50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_100049CB0(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a1[3] = result;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  a2[3].n128_u64[0] = 0;
  return result;
}

void sub_100049CCC(uint64_t a1)
{
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
}

void sub_100049CE0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  int v4 = (void *)(v3 + 48);
  double v5 = *(double *)(a1 + 48);
  sub_10004A01C((gpsd::util *)v2, v5);
  if (*(unsigned char *)(v2 + 276))
  {
    if (*(unsigned char *)(v2 + 196))
    {
      int v6 = snprintf(__str, 0x10uLL, "%.3f,", v5);
      if (v6 >= 1) {
        sub_10004A108(v2, (uint64_t)__str, v6);
      }
    }
    int v7 = *(char *)(v3 + 71);
    if (v7 >= 0) {
      uint64_t v8 = v3 + 48;
    }
    else {
      uint64_t v8 = *(void *)(v3 + 48);
    }
    if (v7 >= 0) {
      uint64_t v9 = *(unsigned __int8 *)(v3 + 71);
    }
    else {
      uint64_t v9 = *(void *)(v3 + 56);
    }
    sub_10004A108(v2, v8, v9);
    if (*(char *)(v3 + 71) < 0)
    {
      uint64_t v10 = *(void *)(v3 + 56);
      if (!v10) {
        goto LABEL_24;
      }
      int v4 = (void *)*v4;
    }
    else
    {
      uint64_t v10 = *(unsigned __int8 *)(v3 + 71);
      if (!*(unsigned char *)(v3 + 71)) {
        goto LABEL_24;
      }
    }
    if (*((unsigned char *)v4 + v10 - 1) != 10)
    {
      __str[0] = 10;
      sub_10004A108(v2, (uint64_t)__str, 1);
    }
  }
  else if ((*(unsigned char *)(v2 + 288 + *(void *)(*(void *)(v2 + 288) - 24) + 32) & 5) != 0)
  {
    uint64_t v11 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      if (*(char *)(v3 + 71) >= 0) {
        uint64_t v12 = v3 + 48;
      }
      else {
        uint64_t v12 = *(void *)(v3 + 48);
      }
      *(_DWORD *)std::string __str = 134349315;
      *(double *)__int16 v24 = v5;
      *(_WORD *)&v24[8] = 2081;
      *(void *)off_t v25 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "VendorLogger,unserviced textLogWorker,%{public}.3f,%{private}s", (uint8_t *)__str, 0x16u);
    }
  }
  else
  {
    if (*(unsigned char *)(v2 + 196) && snprintf(__str, 0x10uLL, "%.3f,", v5) >= 1)
    {
      size_t v18 = strlen(__str);
      sub_100007D6C((void *)(v2 + 288), (uint64_t)__str, v18);
    }
    int v19 = *(char *)(v3 + 71);
    if (v19 >= 0) {
      uint64_t v20 = v3 + 48;
    }
    else {
      uint64_t v20 = *(void *)(v3 + 48);
    }
    if (v19 >= 0) {
      uint64_t v21 = *(unsigned __int8 *)(v3 + 71);
    }
    else {
      uint64_t v21 = *(void *)(v3 + 56);
    }
    sub_100007D6C((void *)(v2 + 288), v20, v21);
    if (*(char *)(v3 + 71) < 0)
    {
      uint64_t v22 = *(void *)(v3 + 56);
      if (!v22) {
        goto LABEL_24;
      }
      int v4 = (void *)*v4;
    }
    else
    {
      uint64_t v22 = *(unsigned __int8 *)(v3 + 71);
      if (!*(unsigned char *)(v3 + 71)) {
        goto LABEL_24;
      }
    }
    if (*((unsigned char *)v4 + v22 - 1) != 10) {
      sub_100007D6C((void *)(v2 + 288), (uint64_t)"\n", 1);
    }
  }
LABEL_24:
  unsigned int v13 = *(_DWORD *)(a1 + 56);
  if (v13 >= 9) {
    sub_100007CDC("bitset test argument out of range");
  }
  if (((*(void *)(v2 + 152) >> v13) & 1) == 0 && dword_100114360 <= 9)
  {
    int v14 = ++dword_100114360;
    uint64_t v15 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v16 = *(void *)(*(void *)(a1 + 32) + 8);
      size_t v17 = (void *)(v16 + 48);
      if (*(char *)(v16 + 71) < 0) {
        size_t v17 = (void *)*v17;
      }
      *(_DWORD *)std::string __str = 67240707;
      *(_DWORD *)__int16 v24 = v14;
      *(_WORD *)&v24[4] = 1026;
      *(_DWORD *)&v24[6] = v13;
      *(_WORD *)off_t v25 = 2081;
      *(void *)&v25[2] = v17;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "VendorLogger,outOfLevel,text,%{public}d,level,%{public}d,%{private}s", (uint8_t *)__str, 0x18u);
    }
  }
}

void sub_10004A01C(gpsd::util *a1, double a2)
{
  signed int v3 = vcvtmd_s64_f64((double)gpsd::util::getMachContinuousTimeNs(a1) * 0.000000001 - a2);
  if (*((_DWORD *)a1 + 224) < v3 && *((_DWORD *)a1 + 50) <= v3)
  {
    int v4 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      v5[0] = 67240192;
      v5[1] = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "VendorLogger,addtl memory use is induced by queue backup,%{public}d", (uint8_t *)v5, 8u);
    }
    *((_DWORD *)a1 + 224) = v3;
  }
}

void sub_10004A108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(unsigned char *)(a1 + 276)) {
    return;
  }
  if (*(unsigned char *)(a1 + 277))
  {
    uint64_t v4 = *(void *)(a1 + 208);
    *(void *)(a1 + 232) = v4;
    *(void *)(a1 + 248) = a2;
    *(void *)(a1 + 256) = a3;
    *(void *)(a1 + 240) = *(void *)(a1 + 216) - v4;
    double v5 = (void *)(a1 + 288);
    while (1)
    {
      compression_status v6 = compression_stream_process((compression_stream *)(a1 + 232), 0);
      if (v6) {
        break;
      }
      unint64_t v7 = *(void *)(a1 + 216) - *(void *)(a1 + 208);
      unint64_t v8 = *(void *)(a1 + 240);
      unint64_t v9 = v7 - v8;
      if (v7 == v8)
      {
        if (!*(void *)(a1 + 256)) {
          goto LABEL_25;
        }
      }
      else
      {
        if (v7 < v8)
        {
          uint64_t v10 = qword_100114840;
          if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)std::string buf = 134349312;
            unint64_t v18 = v9;
            __int16 v19 = 2050;
            unint64_t v20 = v7;
            _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "VendorLogger,Excessive bytes_to_print,%{public}zu,limit,%{public}zu", buf, 0x16u);
            unint64_t v9 = *(void *)(a1 + 216) - *(void *)(a1 + 208);
          }
          else
          {
            unint64_t v9 = v7;
          }
        }
        if ((*(unsigned char *)(a1 + 320 + *(void *)(*v5 - 24)) & 5) != 0)
        {
          uint64_t v11 = qword_100114840;
          if (os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)std::string buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "VendorLogger,stream unavailable for compressed output", buf, 2u);
          }
        }
        else
        {
          std::ostream::write();
        }
        *(void *)(a1 + 280) += v9;
        uint64_t v12 = *(void *)(a1 + 208);
        uint64_t v13 = *(void *)(a1 + 216) - v12;
        *(void *)(a1 + 232) = v12;
        *(void *)(a1 + 240) = v13;
      }
    }
    if (v6 == COMPRESSION_STATUS_END)
    {
      int v14 = qword_100114840;
      if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
        goto LABEL_25;
      }
      *(_WORD *)std::string buf = 0;
      uint64_t v15 = "VendorLogger,writeCompressed,unexpected COMPRESSION_STATUS_END";
    }
    else
    {
      int v14 = qword_100114840;
      if (!os_log_type_enabled((os_log_t)qword_100114840, OS_LOG_TYPE_ERROR)) {
        goto LABEL_25;
      }
      *(_WORD *)std::string buf = 0;
      uint64_t v15 = "VendorLogger,writeCompressed,unexpected COMPRESSION_STATUS_ERROR";
    }
    _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, v15, buf, 2u);
LABEL_25:
    if (*(void *)(a1 + 280) > *(void *)(a1 + 128)) {
      sub_100047CF0(a1);
    }
    return;
  }
  if ((byte_100114368 & 1) == 0)
  {
    uint64_t v16 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "VendorLogger,log dropped since compression spun down", buf, 2u);
    }
    byte_100114368 = 1;
  }
}

void VendorLogger::log(gpsd::util *a1, int a2, const void *a3, size_t a4)
{
  if (*((void *)a1 + 110))
  {
    double v8 = (double)gpsd::util::getMachContinuousTimeNs(a1) * 0.000000001;
    v12[0] = 0;
    v12[1] = v12;
    v12[2] = 0x4812000000;
    void v12[3] = sub_10004A508;
    void v12[4] = sub_10004A58C;
    v12[5] = "";
    int v14 = 0;
    uint64_t v15 = 0;
    std::string __p = 0;
    sub_100020F60(&__p, a3, (uint64_t)a3 + a4, a4);
    unint64_t v9 = *((void *)a1 + 110);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10004A5A4;
    block[3] = &unk_1001081F8;
    block[4] = v12;
    void block[5] = a1;
    *(double *)&void block[6] = v8;
    int v11 = a2;
    dispatch_async(v9, block);
    _Block_object_dispose(v12, 8);
    if (__p)
    {
      int v14 = __p;
      operator delete(__p);
    }
  }
}

void *sub_10004A508(void *result, uint64_t a2)
{
  result[6] = 0;
  result[7] = 0;
  result[8] = 0;
  signed int v3 = *(unsigned char **)(a2 + 48);
  uint64_t v2 = *(unsigned char **)(a2 + 56);
  size_t v4 = v2 - v3;
  if (v2 != v3)
  {
    double v5 = result;
    sub_10001F810(result + 6, v2 - v3);
    compression_status v6 = (char *)v5[7];
    __n128 result = memmove(v6, v3, v4);
    void v5[7] = &v6[v4];
  }
  return result;
}

void sub_10004A570(_Unwind_Exception *exception_object)
{
  size_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 56) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

void sub_10004A58C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

void sub_10004A5A4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  double v4 = *(double *)(a1 + 48);
  sub_10004A01C((gpsd::util *)v2, v4);
  if (*(unsigned char *)(v2 + 276))
  {
    if (*(unsigned char *)(v2 + 196))
    {
      int v5 = snprintf(__str, 0x10uLL, "%.3f,", v4);
      if (v5 >= 1) {
        sub_10004A108(v2, (uint64_t)__str, v5);
      }
    }
    sub_10004A108(v2, *(void *)(v3 + 48), *(void *)(v3 + 56) - *(void *)(v3 + 48));
  }
  else
  {
    if (*(unsigned char *)(v2 + 196) && snprintf(__str, 0x10uLL, "%.3f,", v4) >= 1)
    {
      size_t v6 = strlen(__str);
      sub_100007D6C((void *)(v2 + 288), (uint64_t)__str, v6);
    }
    std::ostream::write();
  }
  unsigned int v7 = *(_DWORD *)(a1 + 56);
  if (v7 >= 9) {
    sub_100007CDC("bitset test argument out of range");
  }
  if (((*(void *)(v2 + 152) >> v7) & 1) == 0 && dword_100114364 <= 9)
  {
    int v8 = ++dword_100114364;
    unint64_t v9 = qword_100114838;
    if (os_log_type_enabled((os_log_t)qword_100114838, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string __str = 67240448;
      int v11 = v8;
      __int16 v12 = 1026;
      unsigned int v13 = v7;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "VendorLogger,outOfLevel,binary,%{public}d,level,%{public}d", (uint8_t *)__str, 0xEu);
    }
  }
}

void *VendorLogger::isoTimestampString@<X0>(void *a1@<X8>)
{
  time_t v5 = time(0);
  uint64_t v3 = gmtime(&v5);
  if (v5 < 0 || !v3) {
    strcpy(__s, "unknown_time");
  }
  else {
    strftime(__s, 0x20uLL, "%Y%m%dT_%H-%M-%SZ", v3);
  }
  return sub_1000033AC(a1, __s);
}

void sub_10004A810(unint64_t a1, const void **a2, uint64_t a3, char a4)
{
  while (2)
  {
    uint64_t v10 = a2 - 3;
    __int16 v98 = a2 - 6;
    uint64_t v100 = (uint64_t)a2;
    int v11 = a2 - 9;
    unint64_t v12 = a1;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          a1 = v12;
          uint64_t v13 = (uint64_t)a2 - v12;
          uint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)((uint64_t)a2 - v12) >> 3);
          if (v5 || !v4)
          {
            switch(v14)
            {
              case 0:
              case 1:
                return;
              case 2:
                if (sub_10004B250(v10, (const void **)a1))
                {
                  long long v43 = *(_OWORD *)a1;
                  int v102 = *(const void **)(a1 + 16);
                  long long v101 = v43;
                  long long v44 = *(_OWORD *)v10;
                  *(void *)(a1 + 16) = v10[2];
                  *(_OWORD *)a1 = v44;
                  long long v45 = v101;
                  void v10[2] = v102;
                  *(_OWORD *)uint64_t v10 = v45;
                }
                break;
              case 3:
                sub_10004B2C0((const void **)a1, (const void **)(a1 + 24), v10);
                break;
              case 4:
                sub_10004B5D8(a1, (const void **)(a1 + 24), (const void **)(a1 + 48), (long long *)v10);
                break;
              case 5:
                sub_10004B6A8(a1, (const void **)(a1 + 24), (const void **)(a1 + 48), (long long *)(a1 + 72), (long long *)v10);
                break;
              default:
                JUMPOUT(0);
            }
            return;
          }
          if (v13 <= 575)
          {
            uint64_t v46 = (const void **)(a1 + 24);
            BOOL v48 = (const void **)a1 == a2 || v46 == a2;
            if (a4)
            {
              if (!v48)
              {
                uint64_t v49 = 0;
                unint64_t v50 = a1;
                do
                {
                  off_t v51 = (const void **)v50;
                  unint64_t v50 = (unint64_t)v46;
                  if (sub_10004B250(v46, v51))
                  {
                    long long v52 = *(_OWORD *)v50;
                    int v102 = *(const void **)(v50 + 16);
                    long long v101 = v52;
                    *(void *)(v50 + 8) = 0;
                    *(void *)(v50 + 16) = 0;
                    *(void *)unint64_t v50 = 0;
                    uint64_t v53 = v49;
                    while (1)
                    {
                      uint64_t v54 = a1 + v53;
                      *(_OWORD *)(v54 + 24) = *(_OWORD *)(a1 + v53);
                      *(void *)(v54 + 40) = *(void *)(a1 + v53 + 16);
                      *(unsigned char *)(v54 + 23) = 0;
                      *(unsigned char *)uint64_t v54 = 0;
                      if (!v53) {
                        break;
                      }
                      v53 -= 24;
                      if (!sub_10004B250((const void **)&v101, (const void **)(v53 + a1)))
                      {
                        uint64_t v55 = a1 + v53 + 24;
                        goto LABEL_87;
                      }
                    }
                    uint64_t v55 = a1;
LABEL_87:
                    long long v56 = v101;
                    *(void *)(v55 + 16) = v102;
                    *(_OWORD *)uint64_t v55 = v56;
                  }
                  uint64_t v46 = (const void **)(v50 + 24);
                  v49 += 24;
                }
                while ((const void **)(v50 + 24) != a2);
              }
            }
            else if (!v48)
            {
              unint64_t v91 = a1 - 24;
              do
              {
                uint64_t v92 = (const void **)a1;
                a1 = (unint64_t)v46;
                if (sub_10004B250(v46, v92))
                {
                  long long v93 = *(_OWORD *)a1;
                  int v102 = *(const void **)(a1 + 16);
                  long long v101 = v93;
                  *(void *)(a1 + 8) = 0;
                  *(void *)(a1 + 16) = 0;
                  *(void *)a1 = 0;
                  unint64_t v94 = v91;
                  do
                  {
                    *(_OWORD *)(v94 + 48) = *(_OWORD *)(v94 + 24);
                    *(void *)(v94 + 64) = *(void *)(v94 + 40);
                    *(unsigned char *)(v94 + 47) = 0;
                    *(unsigned char *)(v94 + 24) = 0;
                    BOOL v95 = sub_10004B250((const void **)&v101, (const void **)v94);
                    v94 -= 24;
                  }
                  while (v95);
                  long long v96 = v101;
                  *(void *)(v94 + 64) = v102;
                  *(_OWORD *)(v94 + 48) = v96;
                }
                uint64_t v46 = (const void **)(a1 + 24);
                v91 += 24;
              }
              while ((const void **)(a1 + 24) != a2);
            }
            return;
          }
          if (!a3)
          {
            if ((const void **)a1 != a2)
            {
              int64_t v57 = (unint64_t)(v14 - 2) >> 1;
              int64_t v58 = v57;
              do
              {
                int64_t v59 = v58;
                if (v57 >= v58)
                {
                  uint64_t v60 = (2 * v58) | 1;
                  unint64_t v61 = a1 + 24 * v60;
                  if (2 * v58 + 2 < v14 && sub_10004B250((const void **)(a1 + 24 * v60), (const void **)(v61 + 24)))
                  {
                    v61 += 24;
                    uint64_t v60 = 2 * v59 + 2;
                  }
                  unint64_t v62 = a1 + 24 * v59;
                  if (!sub_10004B250((const void **)v61, (const void **)v62))
                  {
                    long long v63 = *(_OWORD *)v62;
                    int v102 = *(const void **)(v62 + 16);
                    long long v101 = v63;
                    *(void *)(v62 + 8) = 0;
                    *(void *)(v62 + 16) = 0;
                    *(void *)unint64_t v62 = 0;
                    do
                    {
                      unint64_t v64 = v61;
                      long long v65 = *(_OWORD *)v61;
                      *(void *)(v62 + 16) = *(void *)(v61 + 16);
                      *(_OWORD *)unint64_t v62 = v65;
                      *(unsigned char *)(v61 + 23) = 0;
                      *(unsigned char *)unint64_t v61 = 0;
                      if (v57 < v60) {
                        break;
                      }
                      uint64_t v66 = (2 * v60) | 1;
                      unint64_t v61 = a1 + 24 * v66;
                      uint64_t v67 = 2 * v60 + 2;
                      if (v67 < v14 && sub_10004B250((const void **)(a1 + 24 * v66), (const void **)(v61 + 24)))
                      {
                        v61 += 24;
                        uint64_t v66 = v67;
                      }
                      unint64_t v62 = v64;
                      uint64_t v60 = v66;
                    }
                    while (!sub_10004B250((const void **)v61, (const void **)&v101));
                    long long v68 = v101;
                    *(void *)(v64 + 16) = v102;
                    *(_OWORD *)unint64_t v64 = v68;
                  }
                }
                int64_t v58 = v59 - 1;
              }
              while (v59);
              int64_t v69 = v13 / 0x18uLL;
              uint64_t v70 = (_OWORD *)v100;
              do
              {
                uint64_t v71 = 0;
                uint64_t v72 = v70;
                unint64_t v97 = *(void **)a1;
                *(void *)&long long v103 = *(void *)(a1 + 8);
                *(void *)((char *)&v103 + 7) = *(void *)(a1 + 15);
                char v99 = *(unsigned char *)(a1 + 23);
                *(void *)(a1 + 8) = 0;
                *(void *)(a1 + 16) = 0;
                *(void *)a1 = 0;
                uint64_t v73 = v69 - 2;
                if (v69 < 2) {
                  uint64_t v73 = v69 - 1;
                }
                uint64_t v74 = v73 >> 1;
                unint64_t v75 = a1;
                do
                {
                  uint64_t v76 = v75 + 24 * v71 + 24;
                  uint64_t v77 = 2 * v71;
                  uint64_t v71 = (2 * v71) | 1;
                  uint64_t v78 = v77 + 2;
                  if (v77 + 2 < v69 && sub_10004B250((const void **)v76, (const void **)(v76 + 24)))
                  {
                    v76 += 24;
                    uint64_t v71 = v78;
                  }
                  if (*(char *)(v75 + 23) < 0) {
                    operator delete(*(void **)v75);
                  }
                  long long v79 = *(_OWORD *)v76;
                  *(void *)(v75 + 16) = *(void *)(v76 + 16);
                  *(_OWORD *)unint64_t v75 = v79;
                  *(unsigned char *)(v76 + 23) = 0;
                  *(unsigned char *)uint64_t v76 = 0;
                  unint64_t v75 = v76;
                }
                while (v71 <= v74);
                uint64_t v70 = (_OWORD *)((char *)v72 - 24);
                if ((_OWORD *)v76 == (_OWORD *)((char *)v72 - 24))
                {
                  *(void *)uint64_t v76 = v97;
                  uint64_t v89 = *(void *)((char *)&v103 + 7);
                  *(void *)(v76 + 8) = v103;
                  *(void *)(v76 + 15) = v89;
                  *(unsigned char *)(v76 + 23) = v99;
                }
                else
                {
                  long long v80 = *v70;
                  *(void *)(v76 + 16) = *((void *)v72 - 1);
                  *(_OWORD *)uint64_t v76 = v80;
                  *((void *)v72 - 3) = v97;
                  uint64_t v81 = v103;
                  *(void *)((char *)v72 - 9) = *(void *)((char *)&v103 + 7);
                  *((void *)v72 - 2) = v81;
                  *((unsigned char *)v72 - 1) = v99;
                  uint64_t v82 = v76 - a1 + 24;
                  if (v82 >= 25)
                  {
                    unint64_t v83 = (v82 / 0x18uLL - 2) >> 1;
                    unint64_t v84 = a1 + 24 * v83;
                    if (sub_10004B250((const void **)v84, (const void **)v76))
                    {
                      long long v85 = *(_OWORD *)v76;
                      int v102 = *(const void **)(v76 + 16);
                      long long v101 = v85;
                      *(void *)(v76 + 8) = 0;
                      *(void *)(v76 + 16) = 0;
                      *(void *)uint64_t v76 = 0;
                      do
                      {
                        uint64_t v86 = v84;
                        long long v87 = *(_OWORD *)v84;
                        *(void *)(v76 + 16) = *(void *)(v84 + 16);
                        *(_OWORD *)uint64_t v76 = v87;
                        *(unsigned char *)(v84 + 23) = 0;
                        *(unsigned char *)unint64_t v84 = 0;
                        if (!v83) {
                          break;
                        }
                        unint64_t v83 = (v83 - 1) >> 1;
                        unint64_t v84 = a1 + 24 * v83;
                        uint64_t v76 = v86;
                      }
                      while (sub_10004B250((const void **)v84, (const void **)&v101));
                      long long v88 = v101;
                      *(void *)(v86 + 16) = v102;
                      *(_OWORD *)uint64_t v86 = v88;
                    }
                  }
                }
              }
              while (v69-- > 2);
            }
            return;
          }
          unint64_t v15 = (unint64_t)v14 >> 1;
          unint64_t v16 = a1 + 24 * ((unint64_t)v14 >> 1);
          if ((unint64_t)v13 < 0xC01)
          {
            sub_10004B2C0((const void **)v16, (const void **)a1, v10);
          }
          else
          {
            sub_10004B2C0((const void **)a1, (const void **)v16, v10);
            uint64_t v17 = 3 * v15;
            sub_10004B2C0((const void **)(a1 + 24), (const void **)(a1 + 8 * v17 - 24), v98);
            sub_10004B2C0((const void **)(a1 + 48), (const void **)(a1 + 24 + 8 * v17), v11);
            sub_10004B2C0((const void **)(a1 + 8 * v17 - 24), (const void **)v16, (const void **)(a1 + 24 + 8 * v17));
            long long v18 = *(_OWORD *)a1;
            int v102 = *(const void **)(a1 + 16);
            long long v101 = v18;
            uint64_t v19 = *(void *)(v16 + 16);
            *(_OWORD *)a1 = *(_OWORD *)v16;
            *(void *)(a1 + 16) = v19;
            long long v20 = v101;
            *(void *)(v16 + 16) = v102;
            *(_OWORD *)unint64_t v16 = v20;
          }
          --a3;
          if ((a4 & 1) != 0 || sub_10004B250((const void **)(a1 - 24), (const void **)a1)) {
            break;
          }
          long long v33 = *(_OWORD *)a1;
          uint64_t v104 = *(void *)(a1 + 16);
          long long v103 = v33;
          *(void *)(a1 + 8) = 0;
          *(void *)(a1 + 16) = 0;
          *(void *)a1 = 0;
          if (sub_10004B250((const void **)&v103, v10))
          {
            unint64_t v12 = a1;
            do
              v12 += 24;
            while (!sub_10004B250((const void **)&v103, (const void **)v12));
          }
          else
          {
            uint64_t v34 = (const void **)(a1 + 24);
            do
            {
              unint64_t v12 = (unint64_t)v34;
              if (v34 >= a2) {
                break;
              }
              BOOL v35 = sub_10004B250((const void **)&v103, v34);
              uint64_t v34 = (const void **)(v12 + 24);
            }
            while (!v35);
          }
          unint64_t v36 = (unint64_t)a2;
          if (v12 < (unint64_t)a2)
          {
            unint64_t v36 = (unint64_t)a2;
            do
              v36 -= 24;
            while (sub_10004B250((const void **)&v103, (const void **)v36));
          }
          while (v12 < v36)
          {
            long long v37 = *(_OWORD *)v12;
            int v102 = *(const void **)(v12 + 16);
            long long v101 = v37;
            long long v38 = *(_OWORD *)v36;
            *(void *)(v12 + 16) = *(void *)(v36 + 16);
            *(_OWORD *)unint64_t v12 = v38;
            long long v39 = v101;
            *(void *)(v36 + 16) = v102;
            *(_OWORD *)unint64_t v36 = v39;
            do
              v12 += 24;
            while (!sub_10004B250((const void **)&v103, (const void **)v12));
            do
              v36 -= 24;
            while (sub_10004B250((const void **)&v103, (const void **)v36));
          }
          std::string::size_type v40 = (long long *)(v12 - 24);
          BOOL v4 = v12 - 24 >= a1;
          BOOL v5 = v12 - 24 == a1;
          if (v12 - 24 == a1)
          {
            if (*(char *)(v12 - 1) < 0) {
              operator delete(*(void **)a1);
            }
          }
          else
          {
            if (*(char *)(a1 + 23) < 0) {
              operator delete(*(void **)a1);
            }
            long long v41 = *v40;
            *(void *)(a1 + 16) = *(void *)(v12 - 8);
            *(_OWORD *)a1 = v41;
            *(unsigned char *)(v12 - 1) = 0;
            *(unsigned char *)(v12 - 24) = 0;
          }
          a4 = 0;
          long long v42 = v103;
          *(void *)(v12 - 8) = v104;
          *std::string::size_type v40 = v42;
        }
        uint64_t v21 = 0;
        long long v22 = *(_OWORD *)a1;
        uint64_t v104 = *(void *)(a1 + 16);
        long long v103 = v22;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)a1 = 0;
        do
          v21 += 24;
        while (sub_10004B250((const void **)(v21 + a1), (const void **)&v103));
        unint64_t v23 = a1 + v21;
        __int16 v24 = (const void **)v100;
        if (v21 == 24)
        {
          __int16 v24 = (const void **)v100;
          do
          {
            if (v23 >= (unint64_t)v24) {
              break;
            }
            v24 -= 3;
          }
          while (!sub_10004B250(v24, (const void **)&v103));
        }
        else
        {
          do
            v24 -= 3;
          while (!sub_10004B250(v24, (const void **)&v103));
        }
        unint64_t v12 = a1 + v21;
        if (v23 < (unint64_t)v24)
        {
          off_t v25 = v24;
          do
          {
            long long v26 = *(_OWORD *)v12;
            int v102 = *(const void **)(v12 + 16);
            long long v101 = v26;
            long long v27 = *(_OWORD *)v25;
            *(void *)(v12 + 16) = v25[2];
            *(_OWORD *)unint64_t v12 = v27;
            long long v28 = v101;
            v25[2] = v102;
            *(_OWORD *)off_t v25 = v28;
            do
              v12 += 24;
            while (sub_10004B250((const void **)v12, (const void **)&v103));
            do
              v25 -= 3;
            while (!sub_10004B250(v25, (const void **)&v103));
          }
          while (v12 < (unint64_t)v25);
        }
        uint64_t v29 = (long long *)(v12 - 24);
        if (v12 - 24 == a1)
        {
          if (*(char *)(v12 - 1) < 0) {
            operator delete(*(void **)a1);
          }
        }
        else
        {
          if (*(char *)(a1 + 23) < 0) {
            operator delete(*(void **)a1);
          }
          long long v30 = *v29;
          *(void *)(a1 + 16) = *(void *)(v12 - 8);
          *(_OWORD *)a1 = v30;
          *(unsigned char *)(v12 - 1) = 0;
          *(unsigned char *)(v12 - 24) = 0;
        }
        long long v31 = v103;
        *(void *)(v12 - 8) = v104;
        *uint64_t v29 = v31;
        BOOL v4 = v23 >= (unint64_t)v24;
        a2 = (const void **)v100;
        if (v4) {
          break;
        }
LABEL_35:
        sub_10004A810(a1, v12 - 24, a3, a4 & 1);
        a4 = 0;
      }
      BOOL v32 = sub_10004B3E0(a1, v12 - 24);
      if (sub_10004B3E0(v12, v100)) {
        break;
      }
      if (!v32) {
        goto LABEL_35;
      }
    }
    a2 = (const void **)(v12 - 24);
    if (!v32) {
      continue;
    }
    break;
  }
}

BOOL sub_10004B250(const void **a1, const void **a2)
{
  int v2 = *((char *)a1 + 23);
  int v3 = *((char *)a2 + 23);
  if (v3 >= 0) {
    size_t v4 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v4 = (size_t)a2[1];
  }
  if (v3 >= 0) {
    BOOL v5 = a2;
  }
  else {
    BOOL v5 = *a2;
  }
  if (v2 >= 0) {
    size_t v6 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v6 = (size_t)a1[1];
  }
  if (v2 >= 0) {
    unsigned int v7 = a1;
  }
  else {
    unsigned int v7 = *a1;
  }
  if (v6 >= v4) {
    size_t v8 = v4;
  }
  else {
    size_t v8 = v6;
  }
  int v9 = memcmp(v5, v7, v8);
  if (v9) {
    return v9 < 0;
  }
  else {
    return v4 < v6;
  }
}

BOOL sub_10004B2C0(const void **a1, const void **a2, const void **a3)
{
  BOOL v6 = sub_10004B250(a2, a1);
  BOOL result = sub_10004B250(a3, a2);
  if (v6)
  {
    if (result)
    {
      size_t v8 = a1[2];
      long long v9 = *(_OWORD *)a1;
      uint64_t v10 = a3[2];
      *(_OWORD *)a1 = *(_OWORD *)a3;
      a1[2] = v10;
    }
    else
    {
      uint64_t v17 = a1[2];
      long long v18 = *(_OWORD *)a1;
      uint64_t v19 = a2[2];
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = v19;
      *(_OWORD *)a2 = v18;
      a2[2] = v17;
      BOOL result = sub_10004B250(a3, a2);
      if (!result) {
        return result;
      }
      size_t v8 = a2[2];
      long long v9 = *(_OWORD *)a2;
      long long v20 = a3[2];
      *(_OWORD *)a2 = *(_OWORD *)a3;
      a2[2] = v20;
    }
    *(_OWORD *)a3 = v9;
    a3[2] = v8;
  }
  else if (result)
  {
    int v11 = a2[2];
    long long v12 = *(_OWORD *)a2;
    uint64_t v13 = a3[2];
    *(_OWORD *)a2 = *(_OWORD *)a3;
    a2[2] = v13;
    *(_OWORD *)a3 = v12;
    a3[2] = v11;
    BOOL result = sub_10004B250(a2, a1);
    if (result)
    {
      uint64_t v14 = a1[2];
      long long v15 = *(_OWORD *)a1;
      unint64_t v16 = a2[2];
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = v16;
      *(_OWORD *)a2 = v15;
      a2[2] = v14;
    }
  }
  return result;
}

BOOL sub_10004B3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (a2 - a1) >> 3;
  BOOL result = 1;
  switch(0xAAAAAAAAAAAAAAABLL * v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      uint64_t v6 = a2 - 24;
      if (sub_10004B250((const void **)(a2 - 24), (const void **)a1))
      {
        uint64_t v7 = *(void *)(a1 + 16);
        long long v8 = *(_OWORD *)a1;
        uint64_t v9 = *(void *)(v6 + 16);
        *(_OWORD *)a1 = *(_OWORD *)v6;
        *(void *)(a1 + 16) = v9;
        *(_OWORD *)uint64_t v6 = v8;
        *(void *)(v6 + 16) = v7;
      }
      return 1;
    case 3uLL:
      sub_10004B2C0((const void **)a1, (const void **)(a1 + 24), (const void **)(a2 - 24));
      return 1;
    case 4uLL:
      sub_10004B5D8(a1, (const void **)(a1 + 24), (const void **)(a1 + 48), (long long *)(a2 - 24));
      return 1;
    case 5uLL:
      sub_10004B6A8(a1, (const void **)(a1 + 24), (const void **)(a1 + 48), (long long *)(a1 + 72), (long long *)(a2 - 24));
      return 1;
    default:
      uint64_t v10 = (const void **)(a1 + 48);
      sub_10004B2C0((const void **)a1, (const void **)(a1 + 24), (const void **)(a1 + 48));
      uint64_t v11 = a1 + 72;
      if (a1 + 72 == a2) {
        return 1;
      }
      uint64_t v12 = 0;
      int v13 = 0;
      break;
  }
  while (1)
  {
    if (sub_10004B250((const void **)v11, v10))
    {
      long long v17 = *(_OWORD *)v11;
      uint64_t v18 = *(void *)(v11 + 16);
      *(void *)(v11 + 8) = 0;
      *(void *)(v11 + 16) = 0;
      *(void *)uint64_t v11 = 0;
      uint64_t v14 = v12;
      while (1)
      {
        uint64_t v15 = a1 + v14;
        *(_OWORD *)(v15 + 72) = *(_OWORD *)(a1 + v14 + 48);
        *(void *)(v15 + 88) = *(void *)(a1 + v14 + 64);
        *(unsigned char *)(v15 + 71) = 0;
        *(unsigned char *)(v15 + 48) = 0;
        if (v14 == -48) {
          break;
        }
        v14 -= 24;
        if (!sub_10004B250((const void **)&v17, (const void **)(v15 + 24)))
        {
          uint64_t v16 = a1 + v14 + 72;
          goto LABEL_12;
        }
      }
      uint64_t v16 = a1;
LABEL_12:
      *(_OWORD *)uint64_t v16 = v17;
      *(void *)(v16 + 16) = v18;
      if (++v13 == 8) {
        return v11 + 24 == a2;
      }
    }
    uint64_t v10 = (const void **)v11;
    v12 += 24;
    v11 += 24;
    if (v11 == a2) {
      return 1;
    }
  }
}

__n128 sub_10004B5D8(uint64_t a1, const void **a2, const void **a3, long long *a4)
{
  sub_10004B2C0((const void **)a1, a2, a3);
  if (sub_10004B250((const void **)a4, a3))
  {
    uint64_t v9 = a3[2];
    long long v10 = *(_OWORD *)a3;
    uint64_t v11 = (const void *)*((void *)a4 + 2);
    *(_OWORD *)a3 = *a4;
    a3[2] = v11;
    *a4 = v10;
    *((void *)a4 + 2) = v9;
    if (sub_10004B250(a3, a2))
    {
      uint64_t v12 = a2[2];
      long long v13 = *(_OWORD *)a2;
      uint64_t v14 = a3[2];
      *(_OWORD *)a2 = *(_OWORD *)a3;
      a2[2] = v14;
      *(_OWORD *)a3 = v13;
      a3[2] = v12;
      if (sub_10004B250(a2, (const void **)a1))
      {
        uint64_t v15 = *(const void **)(a1 + 16);
        __n128 result = *(__n128 *)a1;
        uint64_t v16 = a2[2];
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = v16;
        *(__n128 *)a2 = result;
        a2[2] = v15;
      }
    }
  }
  return result;
}

__n128 sub_10004B6A8(uint64_t a1, const void **a2, const void **a3, long long *a4, long long *a5)
{
  sub_10004B5D8(a1, a2, a3, a4);
  if (sub_10004B250((const void **)a5, (const void **)a4))
  {
    uint64_t v11 = *((void *)a4 + 2);
    long long v12 = *a4;
    uint64_t v13 = *((void *)a5 + 2);
    *a4 = *a5;
    *((void *)a4 + 2) = v13;
    *a5 = v12;
    *((void *)a5 + 2) = v11;
    if (sub_10004B250((const void **)a4, a3))
    {
      uint64_t v14 = a3[2];
      long long v15 = *(_OWORD *)a3;
      uint64_t v16 = (const void *)*((void *)a4 + 2);
      *(_OWORD *)a3 = *a4;
      a3[2] = v16;
      *a4 = v15;
      *((void *)a4 + 2) = v14;
      if (sub_10004B250(a3, a2))
      {
        long long v17 = a2[2];
        long long v18 = *(_OWORD *)a2;
        uint64_t v19 = a3[2];
        *(_OWORD *)a2 = *(_OWORD *)a3;
        a2[2] = v19;
        *(_OWORD *)a3 = v18;
        a3[2] = v17;
        if (sub_10004B250(a2, (const void **)a1))
        {
          long long v20 = *(const void **)(a1 + 16);
          __n128 result = *(__n128 *)a1;
          uint64_t v21 = a2[2];
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(void *)(a1 + 16) = v21;
          *(__n128 *)a2 = result;
          a2[2] = v20;
        }
      }
    }
  }
  return result;
}

uint64_t sub_10004B7B4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x7FFFFFFFFFFFFFF8) {
    sub_100003460();
  }
  if (a2 > 0x16)
  {
    uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a2 | 7) != 0x17) {
      uint64_t v4 = a2 | 7;
    }
    uint64_t v5 = v4 + 1;
    uint64_t v6 = operator new(v4 + 1);
    *(void *)(a1 + 8) = a2;
    *(void *)(a1 + 16) = v5 | 0x8000000000000000;
    *(void *)a1 = v6;
  }
  else
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 23) = a2;
  }
  return a1;
}

uint64_t sub_10004B83C()
{
  if (qword_100114378) {
    (*(void (**)(uint64_t))(*(void *)qword_100114378 + 8))(qword_100114378);
  }
  if (proto::gnss::Emergency::SummaryReport::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::SummaryReport::default_instance_ + 8))(proto::gnss::Emergency::SummaryReport::default_instance_);
  }
  if (qword_100114380) {
    (*(void (**)(uint64_t))(*(void *)qword_100114380 + 8))(qword_100114380);
  }
  if (qword_100114388) {
    (*(void (**)(uint64_t))(*(void *)qword_100114388 + 8))(qword_100114388);
  }
  if (qword_100114390) {
    (*(void (**)(uint64_t))(*(void *)qword_100114390 + 8))(qword_100114390);
  }
  if (qword_100114398) {
    (*(void (**)(uint64_t))(*(void *)qword_100114398 + 8))(qword_100114398);
  }
  if (proto::gnss::Emergency::LocationId::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::LocationId::default_instance_ + 8))(proto::gnss::Emergency::LocationId::default_instance_);
  }
  if (proto::gnss::Emergency::WlanMeasurementRequest::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::WlanMeasurementRequest::default_instance_ + 8))(proto::gnss::Emergency::WlanMeasurementRequest::default_instance_);
  }
  if (qword_1001143A0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001143A0 + 8))(qword_1001143A0);
  }
  if (proto::gnss::Emergency::WlanMeasurementList::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::WlanMeasurementList::default_instance_ + 8))(proto::gnss::Emergency::WlanMeasurementList::default_instance_);
  }
  if (qword_1001143A8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001143A8 + 8))(qword_1001143A8);
  }
  if (qword_1001143B0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001143B0 + 8))(qword_1001143B0);
  }
  if (qword_1001143B8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001143B8 + 8))(qword_1001143B8);
  }
  if (proto::gnss::Emergency::SuplInitVer2Extension::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::SuplInitVer2Extension::default_instance_ + 8))(proto::gnss::Emergency::SuplInitVer2Extension::default_instance_);
  }
  if (proto::gnss::Emergency::Init::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::Init::default_instance_ + 8))(proto::gnss::Emergency::Init::default_instance_);
  }
  if (proto::gnss::Emergency::SuplContext::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::SuplContext::default_instance_ + 8))(proto::gnss::Emergency::SuplContext::default_instance_);
  }
  if (proto::gnss::Emergency::SessionStatus::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::SessionStatus::default_instance_ + 8))(proto::gnss::Emergency::SessionStatus::default_instance_);
  }
  if (qword_1001143C0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001143C0 + 8))(qword_1001143C0);
  }
  if (proto::gnss::Emergency::ClsUtranCellTime::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::ClsUtranCellTime::default_instance_ + 8))(proto::gnss::Emergency::ClsUtranCellTime::default_instance_);
  }
  if (qword_1001143C8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001143C8 + 8))(qword_1001143C8);
  }
  if (qword_1001143D0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001143D0 + 8))(qword_1001143D0);
  }
  if (proto::gnss::Emergency::PositionRequest::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::PositionRequest::default_instance_ + 8))(proto::gnss::Emergency::PositionRequest::default_instance_);
  }
  if (proto::gnss::Emergency::UtranGpsTimeMeasured::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::UtranGpsTimeMeasured::default_instance_ + 8))(proto::gnss::Emergency::UtranGpsTimeMeasured::default_instance_);
  }
  if (qword_1001143D8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001143D8 + 8))(qword_1001143D8);
  }
  if (qword_1001143E0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001143E0 + 8))(qword_1001143E0);
  }
  if (proto::gnss::Emergency::GpsTimeMeasured::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::GpsTimeMeasured::default_instance_ + 8))(proto::gnss::Emergency::GpsTimeMeasured::default_instance_);
  }
  if (proto::gnss::Emergency::GpsTimeMeasuredParams::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::GpsTimeMeasuredParams::default_instance_ + 8))(proto::gnss::Emergency::GpsTimeMeasuredParams::default_instance_);
  }
  if (qword_1001143E8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001143E8 + 8))(qword_1001143E8);
  }
  if (proto::gnss::Emergency::LocationInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::LocationInfo::default_instance_ + 8))(proto::gnss::Emergency::LocationInfo::default_instance_);
  }
  if (proto::gnss::Emergency::CellInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::CellInfo::default_instance_ + 8))(proto::gnss::Emergency::CellInfo::default_instance_);
  }
  if (proto::gnss::Emergency::UtranGanssTimeMeasured::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::UtranGanssTimeMeasured::default_instance_ + 8))(proto::gnss::Emergency::UtranGanssTimeMeasured::default_instance_);
  }
  if (proto::gnss::Emergency::GeranGanssTimeMeasured::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::GeranGanssTimeMeasured::default_instance_ + 8))(proto::gnss::Emergency::GeranGanssTimeMeasured::default_instance_);
  }
  if (proto::gnss::Emergency::ClsEutranCell::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::ClsEutranCell::default_instance_ + 8))(proto::gnss::Emergency::ClsEutranCell::default_instance_);
  }
  if (proto::gnss::Emergency::GanssTimeMeasured::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::GanssTimeMeasured::default_instance_ + 8))(proto::gnss::Emergency::GanssTimeMeasured::default_instance_);
  }
  if (proto::gnss::Emergency::GanssTimeMeasuredParams::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::GanssTimeMeasuredParams::default_instance_ + 8))(proto::gnss::Emergency::GanssTimeMeasuredParams::default_instance_);
  }
  if (qword_1001143F0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001143F0 + 8))(qword_1001143F0);
  }
  if (qword_1001143F8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001143F8 + 8))(qword_1001143F8);
  }
  if (proto::gnss::Emergency::PointUncertainCircle::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::PointUncertainCircle::default_instance_ + 8))(proto::gnss::Emergency::PointUncertainCircle::default_instance_);
  }
  if (proto::gnss::Emergency::PointUncertainEllipse::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::PointUncertainEllipse::default_instance_ + 8))(proto::gnss::Emergency::PointUncertainEllipse::default_instance_);
  }
  if (proto::gnss::Emergency::PointAltitudeUncertainEllipsoid::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::PointAltitudeUncertainEllipsoid::default_instance_
  }
                                    + 8))(proto::gnss::Emergency::PointAltitudeUncertainEllipsoid::default_instance_);
  if (proto::gnss::Emergency::EllipsoidArc::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::EllipsoidArc::default_instance_ + 8))(proto::gnss::Emergency::EllipsoidArc::default_instance_);
  }
  if (proto::gnss::Emergency::PointAltitude::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::PointAltitude::default_instance_ + 8))(proto::gnss::Emergency::PointAltitude::default_instance_);
  }
  if (qword_100114400) {
    (*(void (**)(uint64_t))(*(void *)qword_100114400 + 8))(qword_100114400);
  }
  if (proto::gnss::Emergency::ShapeInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::ShapeInfo::default_instance_ + 8))(proto::gnss::Emergency::ShapeInfo::default_instance_);
  }
  if (proto::gnss::Emergency::LocEstimate::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::LocEstimate::default_instance_ + 8))(proto::gnss::Emergency::LocEstimate::default_instance_);
  }
  if (qword_100114408) {
    (*(void (**)(uint64_t))(*(void *)qword_100114408 + 8))(qword_100114408);
  }
  if (qword_100114410) {
    (*(void (**)(uint64_t))(*(void *)qword_100114410 + 8))(qword_100114410);
  }
  if (qword_100114418) {
    (*(void (**)(uint64_t))(*(void *)qword_100114418 + 8))(qword_100114418);
  }
  if (qword_100114420) {
    (*(void (**)(uint64_t))(*(void *)qword_100114420 + 8))(qword_100114420);
  }
  if (proto::gnss::Emergency::VelocityInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::VelocityInfo::default_instance_ + 8))(proto::gnss::Emergency::VelocityInfo::default_instance_);
  }
  if (proto::gnss::Emergency::VelocityEstimate::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::VelocityEstimate::default_instance_ + 8))(proto::gnss::Emergency::VelocityEstimate::default_instance_);
  }
  if (proto::gnss::Emergency::PositionReport::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::PositionReport::default_instance_ + 8))(proto::gnss::Emergency::PositionReport::default_instance_);
  }
  if (qword_100114428) {
    (*(void (**)(uint64_t))(*(void *)qword_100114428 + 8))(qword_100114428);
  }
  if (qword_100114430) {
    (*(void (**)(uint64_t))(*(void *)qword_100114430 + 8))(qword_100114430);
  }
  if (proto::gnss::Emergency::GanssMeasurementsForSingleGanss::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::GanssMeasurementsForSingleGanss::default_instance_
  }
                                    + 8))(proto::gnss::Emergency::GanssMeasurementsForSingleGanss::default_instance_);
  if (proto::gnss::Emergency::GanssMeasurements::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::GanssMeasurements::default_instance_ + 8))(proto::gnss::Emergency::GanssMeasurements::default_instance_);
  }
  if (qword_100114438) {
    (*(void (**)(uint64_t))(*(void *)qword_100114438 + 8))(qword_100114438);
  }
  if (proto::gnss::Emergency::GpsMeasurements::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::GpsMeasurements::default_instance_ + 8))(proto::gnss::Emergency::GpsMeasurements::default_instance_);
  }
  if (proto::gnss::Emergency::MeasurementReport::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::MeasurementReport::default_instance_ + 8))(proto::gnss::Emergency::MeasurementReport::default_instance_);
  }
  if (qword_100114440) {
    (*(void (**)(uint64_t))(*(void *)qword_100114440 + 8))(qword_100114440);
  }
  if (qword_100114448) {
    (*(void (**)(uint64_t))(*(void *)qword_100114448 + 8))(qword_100114448);
  }
  if (qword_100114450) {
    (*(void (**)(uint64_t))(*(void *)qword_100114450 + 8))(qword_100114450);
  }
  if (qword_100114458) {
    (*(void (**)(uint64_t))(*(void *)qword_100114458 + 8))(qword_100114458);
  }
  if (qword_100114460) {
    (*(void (**)(uint64_t))(*(void *)qword_100114460 + 8))(qword_100114460);
  }
  if (qword_100114468) {
    (*(void (**)(uint64_t))(*(void *)qword_100114468 + 8))(qword_100114468);
  }
  if (proto::gnss::Emergency::GanssAidRequestPerGanss::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::GanssAidRequestPerGanss::default_instance_ + 8))(proto::gnss::Emergency::GanssAidRequestPerGanss::default_instance_);
  }
  if (qword_100114470) {
    (*(void (**)(uint64_t))(*(void *)qword_100114470 + 8))(qword_100114470);
  }
  if (proto::gnss::Emergency::AssistanceNeededReport::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::AssistanceNeededReport::default_instance_ + 8))(proto::gnss::Emergency::AssistanceNeededReport::default_instance_);
  }
  if (qword_100114478) {
    (*(void (**)(uint64_t))(*(void *)qword_100114478 + 8))(qword_100114478);
  }
  if (qword_100114480) {
    (*(void (**)(uint64_t))(*(void *)qword_100114480 + 8))(qword_100114480);
  }
  if (qword_100114488) {
    (*(void (**)(uint64_t))(*(void *)qword_100114488 + 8))(qword_100114488);
  }
  if (qword_100114490) {
    (*(void (**)(uint64_t))(*(void *)qword_100114490 + 8))(qword_100114490);
  }
  if (proto::gnss::Emergency::CtsCdmaCellTime::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::CtsCdmaCellTime::default_instance_ + 8))(proto::gnss::Emergency::CtsCdmaCellTime::default_instance_);
  }
  if (proto::gnss::Emergency::CellTimeData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::CellTimeData::default_instance_ + 8))(proto::gnss::Emergency::CellTimeData::default_instance_);
  }
  if (proto::gnss::Emergency::CellTimeAssistance::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::CellTimeAssistance::default_instance_ + 8))(proto::gnss::Emergency::CellTimeAssistance::default_instance_);
  }
  if (qword_100114498) {
    (*(void (**)(uint64_t))(*(void *)qword_100114498 + 8))(qword_100114498);
  }
  if (proto::gnss::Emergency::GpsReferenceTime::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::GpsReferenceTime::default_instance_ + 8))(proto::gnss::Emergency::GpsReferenceTime::default_instance_);
  }
  if (proto::gnss::Emergency::ReferenceLocation::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::ReferenceLocation::default_instance_ + 8))(proto::gnss::Emergency::ReferenceLocation::default_instance_);
  }
  if (qword_1001144A0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001144A0 + 8))(qword_1001144A0);
  }
  if (proto::gnss::Emergency::GpsNavigationModel::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::GpsNavigationModel::default_instance_ + 8))(proto::gnss::Emergency::GpsNavigationModel::default_instance_);
  }
  if (qword_1001144A8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001144A8 + 8))(qword_1001144A8);
  }
  if (proto::gnss::Emergency::CplaneContext::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::CplaneContext::default_instance_ + 8))(proto::gnss::Emergency::CplaneContext::default_instance_);
  }
  if (proto::gnss::Emergency::EmergConfig::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::EmergConfig::default_instance_ + 8))(proto::gnss::Emergency::EmergConfig::default_instance_);
  }
  if (qword_1001144B0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001144B0 + 8))(qword_1001144B0);
  }
  if (proto::gnss::Emergency::GpsAcqAssistance::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::GpsAcqAssistance::default_instance_ + 8))(proto::gnss::Emergency::GpsAcqAssistance::default_instance_);
  }
  if (proto::gnss::Emergency::CellFTAssistanceRequest::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::CellFTAssistanceRequest::default_instance_ + 8))(proto::gnss::Emergency::CellFTAssistanceRequest::default_instance_);
  }
  if (proto::gnss::Emergency::CellFTAssistance::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::CellFTAssistance::default_instance_ + 8))(proto::gnss::Emergency::CellFTAssistance::default_instance_);
  }
  if (qword_1001144B8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001144B8 + 8))(qword_1001144B8);
  }
  if (qword_1001144C0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001144C0 + 8))(qword_1001144C0);
  }
  if (qword_1001144C8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001144C8 + 8))(qword_1001144C8);
  }
  if (qword_1001144D0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001144D0 + 8))(qword_1001144D0);
  }
  if (qword_1001144D8) {
    (*(void (**)(uint64_t))(*(void *)qword_1001144D8 + 8))(qword_1001144D8);
  }
  if (qword_1001144E0) {
    (*(void (**)(uint64_t))(*(void *)qword_1001144E0 + 8))(qword_1001144E0);
  }
  if (proto::gnss::Emergency::MeasurementReportWithEstimate::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)proto::gnss::Emergency::MeasurementReportWithEstimate::default_instance_
  }
                                    + 8))(proto::gnss::Emergency::MeasurementReportWithEstimate::default_instance_);
  uint64_t result = qword_1001144E8;
  if (qword_1001144E8)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_1001144E8 + 8);
    return v1();
  }
  return result;
}

void proto::gnss::Emergency::protobuf_AddDesc_GnssEmergencyTypes_2eproto(proto::gnss::Emergency *this, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_100114370 & 1) == 0)
  {
    byte_100114370 = 1;
    uint64_t v4 = (proto::gnss *)wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"Sources/Protobuf/Generated/GnssEmergencyTypes.pb.cc", a4);
    proto::gnss::protobuf_AddDesc_GnssTypes_2eproto(v4, v5, v6, v7);
    operator new();
  }
}

BOOL proto::gnss::Emergency::LcsGanssId_IsValid(proto::gnss::Emergency *this)
{
  return this < 7;
}

void sub_10004EE10(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      char v6 = *(unsigned char *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(unsigned char *)(a1 + 16) = v6;
      int v4 = *(_DWORD *)(a2 + 24);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = *(unsigned char *)(a2 + 17);
    *(_DWORD *)(a1 + 24) |= 2u;
    *(unsigned char *)(a1 + 17) = v7;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return;
    }
LABEL_7:
    uint64_t v5 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 24) |= 4u;
    *(void *)(a1 + 8) = v5;
  }
}

void sub_10004EEE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10004EEFC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108228;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10004EF1C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108228;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10004EF70()
{
}

uint64_t sub_10004EFC0(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_10004EFD8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            TagFallbacuint64_t k = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_18;
          }
          v17[0] = 0;
          long long v10 = (char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
          if ((unint64_t)v10 >= v9 || *v10 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v17);
            if (!result) {
              return result;
            }
            unsigned int v11 = v17[0];
            long long v12 = (unsigned char *)*((void *)this + 1);
            unint64_t v9 = *((void *)this + 2);
          }
          else
          {
            unsigned int v11 = *v10;
            long long v12 = v10 + 1;
            *((void *)this + 1) = v12;
          }
          *(unsigned char *)(a1 + 16) = v11 != 0;
          *(_DWORD *)(a1 + 24) |= 1u;
          if ((unint64_t)v12 < v9 && *v12 == 16)
          {
            uint64_t v13 = v12 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_26;
          }
        }
        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
LABEL_26:
        v17[0] = 0;
        if ((unint64_t)v13 >= v9 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v17);
          if (!result) {
            return result;
          }
          unsigned int v15 = v17[0];
          uint64_t v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v15 = *v13;
          uint64_t v16 = v13 + 1;
          *((void *)this + 1) = v16;
        }
        *(unsigned char *)(a1 + 17) = v15 != 0;
        *(_DWORD *)(a1 + 24) |= 2u;
        if ((unint64_t)v16 < v9 && *v16 == 25)
        {
          *((void *)this + 1) = v16 + 1;
          goto LABEL_34;
        }
      }
      if (v7 != 3) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 1) {
        goto LABEL_18;
      }
LABEL_34:
      *(void *)long long v17 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v17) & 1) == 0)return 0; {
      *(void *)(a1 + 8) = *(void *)v17;
      }
      *(_DWORD *)(a1 + 24) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_10004F1F0(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 17), a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  double v7 = *(double *)(v5 + 8);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, v7, a3);
}

uint64_t sub_10004F27C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 |= 9u;
  }
  if (*(_DWORD *)(a1 + 24)) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_10004F2B4(uint64_t a1, void *lpsrc)
{
  sub_10004EE10(a1, (uint64_t)lpsrc);
}

uint64_t sub_10004F358()
{
  return 1;
}

void *sub_10004F360@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.Configuration");
}

void proto::gnss::Emergency::SummaryReport::MergeFrom(proto::gnss::Emergency::SummaryReport *this, const proto::gnss::Emergency::SummaryReport *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
  }
  int v4 = *((_DWORD *)a2 + 31);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v5 = *((void *)a2 + 1);
      *((_DWORD *)this + 31) |= 1u;
      *((void *)this + 1) = v5;
      int v4 = *((_DWORD *)a2 + 31);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_15;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v6 = *((void *)a2 + 2);
    *((_DWORD *)this + 31) |= 2u;
    *((void *)this + 2) = v6;
    int v4 = *((_DWORD *)a2 + 31);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }
LABEL_15:
    uint64_t v7 = *((void *)a2 + 3);
    *((_DWORD *)this + 31) |= 4u;
    *((void *)this + 3) = v7;
    int v4 = *((_DWORD *)a2 + 31);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }
LABEL_16:
    uint64_t v8 = *((void *)a2 + 4);
    *((_DWORD *)this + 31) |= 8u;
    *((void *)this + 4) = v8;
    int v4 = *((_DWORD *)a2 + 31);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_18;
    }
LABEL_17:
    uint64_t v9 = *((void *)a2 + 5);
    *((_DWORD *)this + 31) |= 0x10u;
    *((void *)this + 5) = v9;
    int v4 = *((_DWORD *)a2 + 31);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_19;
    }
LABEL_18:
    uint64_t v10 = *((void *)a2 + 6);
    *((_DWORD *)this + 31) |= 0x20u;
    *((void *)this + 6) = v10;
    int v4 = *((_DWORD *)a2 + 31);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_22;
      }
      goto LABEL_20;
    }
LABEL_19:
    int v11 = *((_DWORD *)a2 + 14);
    *((_DWORD *)this + 31) |= 0x40u;
    *((_DWORD *)this + 14) = v11;
    int v4 = *((_DWORD *)a2 + 31);
    if ((v4 & 0x80) == 0) {
      goto LABEL_22;
    }
LABEL_20:
    unsigned int v12 = *((_DWORD *)a2 + 15);
    if (v12 >= 0x12) {
      __assert_rtn("set_method_type", "GnssEmergencyTypes.pb.h", 13226, "::proto::gnss::Emergency::PositionMethod_IsValid(value)");
    }
    *((_DWORD *)this + 31) |= 0x80u;
    *((_DWORD *)this + 15) = v12;
    int v4 = *((_DWORD *)a2 + 31);
  }
LABEL_22:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_36;
  }
  if ((v4 & 0x100) != 0)
  {
    unsigned int v13 = *((_DWORD *)a2 + 16);
    if (v13 >= 4) {
      __assert_rtn("set_session_type", "GnssEmergencyTypes.pb.h", 13249, "::proto::gnss::Emergency::PositionSession_IsValid(value)");
    }
    *((_DWORD *)this + 31) |= 0x100u;
    *((_DWORD *)this + 16) = v13;
    int v4 = *((_DWORD *)a2 + 31);
  }
  if ((v4 & 0x200) != 0)
  {
    unsigned int v14 = *((_DWORD *)a2 + 17);
    if (v14 >= 7) {
      __assert_rtn("set_protocol_type", "GnssEmergencyTypes.pb.h", 13272, "::proto::gnss::Emergency::PositionProtocol_IsValid(value)");
    }
    *((_DWORD *)this + 31) |= 0x200u;
    *((_DWORD *)this + 17) = v14;
    int v4 = *((_DWORD *)a2 + 31);
  }
  if ((v4 & 0x400) != 0)
  {
    uint64_t v17 = *((void *)a2 + 9);
    *((_DWORD *)this + 31) |= 0x400u;
    *((void *)this + 9) = v17;
    int v4 = *((_DWORD *)a2 + 31);
    if ((v4 & 0x800) == 0)
    {
LABEL_31:
      if ((v4 & 0x1000) == 0) {
        goto LABEL_32;
      }
      goto LABEL_44;
    }
  }
  else if ((v4 & 0x800) == 0)
  {
    goto LABEL_31;
  }
  uint64_t v18 = *((void *)a2 + 10);
  *((_DWORD *)this + 31) |= 0x800u;
  *((void *)this + 10) = v18;
  int v4 = *((_DWORD *)a2 + 31);
  if ((v4 & 0x1000) == 0)
  {
LABEL_32:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v19 = *((void *)a2 + 11);
  *((_DWORD *)this + 31) |= 0x1000u;
  *((void *)this + 11) = v19;
  int v4 = *((_DWORD *)a2 + 31);
  if ((v4 & 0x2000) == 0)
  {
LABEL_33:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_47;
  }
LABEL_45:
  unsigned int v20 = *((_DWORD *)a2 + 24);
  if (v20 >= 8) {
    __assert_rtn("set_pos_req_type", "GnssEmergencyTypes.pb.h", 13361, "::proto::gnss::Emergency::PositionReqType_IsValid(value)");
  }
  *((_DWORD *)this + 31) |= 0x2000u;
  *((_DWORD *)this + 24) = v20;
  int v4 = *((_DWORD *)a2 + 31);
  if ((v4 & 0x4000) == 0)
  {
LABEL_34:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
LABEL_47:
  unsigned int v21 = *((_DWORD *)a2 + 25);
  if (v21 >= 0x11) {
    __assert_rtn("set_error_code", "GnssEmergencyTypes.pb.h", 13384, "::proto::gnss::Emergency::SessionErrorCode_IsValid(value)");
  }
  *((_DWORD *)this + 31) |= 0x4000u;
  *((_DWORD *)this + 25) = v21;
  int v4 = *((_DWORD *)a2 + 31);
  if ((v4 & 0x8000) != 0)
  {
LABEL_35:
    char v15 = *((unsigned char *)a2 + 104);
    *((_DWORD *)this + 31) |= 0x8000u;
    *((unsigned char *)this + 104) = v15;
    int v4 = *((_DWORD *)a2 + 31);
  }
LABEL_36:
  if ((v4 & 0xFF0000) == 0) {
    return;
  }
  if ((v4 & 0x10000) != 0)
  {
    char v22 = *((unsigned char *)a2 + 105);
    *((_DWORD *)this + 31) |= 0x10000u;
    *((unsigned char *)this + 105) = v22;
    int v4 = *((_DWORD *)a2 + 31);
    if ((v4 & 0x20000) == 0)
    {
LABEL_39:
      if ((v4 & 0x40000) == 0) {
        return;
      }
      goto LABEL_40;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_39;
  }
  uint64_t v23 = *((void *)a2 + 14);
  *((_DWORD *)this + 31) |= 0x20000u;
  *((void *)this + 14) = v23;
  if ((*((_DWORD *)a2 + 31) & 0x40000) != 0)
  {
LABEL_40:
    int v16 = *((_DWORD *)a2 + 27);
    *((_DWORD *)this + 31) |= 0x40000u;
    *((_DWORD *)this + 27) = v16;
  }
}

void sub_10004F718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10004F730(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1001082A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10004F750(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1001082A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10004F7A4()
{
}

uint64_t proto::gnss::Emergency::SummaryReport::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 124);
  if ((_BYTE)v1)
  {
    *(void *)(this + 56) = 0;
    *(_OWORD *)(this + 40) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(this + 89) = 0u;
    *(_OWORD *)(this + 64) = 0u;
    *(_OWORD *)(this + 80) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(unsigned char *)(this + 105) = 0;
    *(void *)(this + 112) = 0;
    *(_DWORD *)(this + 108) = 0;
  }
  *(_DWORD *)(this + 124) = 0;
  return this;
}

uint64_t proto::gnss::Emergency::SummaryReport::MergePartialFromCodedStream(proto::gnss::Emergency::SummaryReport *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)((char *)this + 112);
  uint64_t v6 = (unsigned int *)((char *)this + 108);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_67;
        }
        *(void *)uint64_t v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v54) & 1) == 0)return 0; {
        *((void *)this + 1) = *(void *)v54;
        }
        *((_DWORD *)this + 31) |= 1u;
        uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_67;
        }
LABEL_15:
        *(void *)uint64_t v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v54) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v54;
        }
        *((_DWORD *)this + 31) |= 2u;
        int v11 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v11 + 1;
LABEL_20:
        *(void *)uint64_t v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v54) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v54;
        }
        *((_DWORD *)this + 31) |= 4u;
        unsigned int v12 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v12 + 1;
LABEL_25:
        *(void *)uint64_t v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v54) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v54;
        }
        *((_DWORD *)this + 31) |= 8u;
        unsigned int v13 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v13 + 1;
LABEL_30:
        *(void *)uint64_t v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v54) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v54;
        }
        *((_DWORD *)this + 31) |= 0x10u;
        unsigned int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_35:
        *(void *)uint64_t v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v54) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v54;
        }
        *((_DWORD *)this + 31) |= 0x20u;
        int v16 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v16 >= v15 || *v16 != 56) {
          continue;
        }
        uint64_t v17 = v16 + 1;
        *((void *)a2 + 1) = v17;
LABEL_41:
        v54[0] = 0;
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v54);
          if (!result) {
            return result;
          }
          unsigned int v18 = v54[0];
          uint64_t v19 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v18 = *v17;
          uint64_t v19 = v17 + 1;
          *((void *)a2 + 1) = v19;
        }
        *((_DWORD *)this + 14) = v18;
        *((_DWORD *)this + 31) |= 0x40u;
        if ((unint64_t)v19 >= v15 || *v19 != 64) {
          continue;
        }
        unsigned int v20 = v19 + 1;
        *((void *)a2 + 1) = v20;
LABEL_76:
        v54[0] = 0;
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v54);
          if (!result) {
            return result;
          }
          unsigned int v35 = v54[0];
        }
        else
        {
          unsigned int v35 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        if (v35 <= 0x11)
        {
          *((_DWORD *)this + 31) |= 0x80u;
          *((_DWORD *)this + 15) = v35;
        }
        unint64_t v36 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        if ((unint64_t)v36 >= v21 || *v36 != 72) {
          continue;
        }
        char v22 = v36 + 1;
        *((void *)a2 + 1) = v22;
LABEL_86:
        v54[0] = 0;
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v54);
          if (!result) {
            return result;
          }
          unsigned int v37 = v54[0];
        }
        else
        {
          unsigned int v37 = *v22;
          *((void *)a2 + 1) = v22 + 1;
        }
        if (v37 <= 3)
        {
          *((_DWORD *)this + 31) |= 0x100u;
          *((_DWORD *)this + 16) = v37;
        }
        long long v38 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        if ((unint64_t)v38 >= v23 || *v38 != 80) {
          continue;
        }
        __int16 v24 = v38 + 1;
        *((void *)a2 + 1) = v24;
LABEL_96:
        v54[0] = 0;
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v54);
          if (!result) {
            return result;
          }
          unsigned int v39 = v54[0];
        }
        else
        {
          unsigned int v39 = *v24;
          *((void *)a2 + 1) = v24 + 1;
        }
        if (v39 <= 6)
        {
          *((_DWORD *)this + 31) |= 0x200u;
          *((_DWORD *)this + 17) = v39;
        }
        std::string::size_type v40 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v40 >= *((void *)a2 + 2) || *v40 != 89) {
          continue;
        }
        *((void *)a2 + 1) = v40 + 1;
LABEL_106:
        *(void *)uint64_t v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v54) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v54;
        }
        *((_DWORD *)this + 31) |= 0x400u;
        long long v41 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v41 >= *((void *)a2 + 2) || *v41 != 97) {
          continue;
        }
        *((void *)a2 + 1) = v41 + 1;
LABEL_110:
        *(void *)uint64_t v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v54) & 1) == 0)return 0; {
        *((void *)this + 10) = *(void *)v54;
        }
        *((_DWORD *)this + 31) |= 0x800u;
        long long v42 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v42 >= *((void *)a2 + 2) || *v42 != 105) {
          continue;
        }
        *((void *)a2 + 1) = v42 + 1;
LABEL_114:
        *(void *)uint64_t v54 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v54))
        {
          *((void *)this + 11) = *(void *)v54;
          *((_DWORD *)this + 31) |= 0x1000u;
          long long v43 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v25 = *((void *)a2 + 2);
          if ((unint64_t)v43 < v25 && *v43 == 112)
          {
            long long v26 = v43 + 1;
            *((void *)a2 + 1) = v26;
LABEL_118:
            v54[0] = 0;
            if ((unint64_t)v26 >= v25 || *v26 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v54);
              if (!result) {
                return result;
              }
              unsigned int v44 = v54[0];
            }
            else
            {
              unsigned int v44 = *v26;
              *((void *)a2 + 1) = v26 + 1;
            }
            if (v44 <= 7)
            {
              *((_DWORD *)this + 31) |= 0x2000u;
              *((_DWORD *)this + 24) = v44;
            }
            long long v45 = (unsigned char *)*((void *)a2 + 1);
            unint64_t v27 = *((void *)a2 + 2);
            if ((unint64_t)v45 < v27 && *v45 == 120)
            {
              long long v28 = v45 + 1;
              *((void *)a2 + 1) = v28;
LABEL_128:
              v54[0] = 0;
              if ((unint64_t)v28 >= v27 || *v28 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v54);
                if (!result) {
                  return result;
                }
                unsigned int v46 = v54[0];
              }
              else
              {
                unsigned int v46 = *v28;
                *((void *)a2 + 1) = v28 + 1;
              }
              if (v46 <= 0x10)
              {
                *((_DWORD *)this + 31) |= 0x4000u;
                *((_DWORD *)this + 25) = v46;
              }
              int v47 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v29 = *((void *)a2 + 2);
              if ((int)v29 - (int)v47 >= 2 && *v47 == 128 && v47[1] == 1)
              {
                long long v30 = v47 + 2;
                *((void *)a2 + 1) = v30;
LABEL_139:
                v54[0] = 0;
                if ((unint64_t)v30 >= v29 || (char)*v30 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v54);
                  if (!result) {
                    return result;
                  }
                  unsigned int v48 = v54[0];
                  uint64_t v49 = (unsigned __int8 *)*((void *)a2 + 1);
                  unint64_t v29 = *((void *)a2 + 2);
                }
                else
                {
                  unsigned int v48 = *v30;
                  uint64_t v49 = v30 + 1;
                  *((void *)a2 + 1) = v49;
                }
                *((unsigned char *)this + 104) = v48 != 0;
                *((_DWORD *)this + 31) |= 0x8000u;
                if ((int)v29 - (int)v49 >= 2 && *v49 == 136 && v49[1] == 1)
                {
                  long long v31 = v49 + 2;
                  *((void *)a2 + 1) = v31;
LABEL_148:
                  v54[0] = 0;
                  if ((unint64_t)v31 >= v29 || (char)*v31 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v54);
                    if (!result) {
                      return result;
                    }
                    unsigned int v50 = v54[0];
                    off_t v51 = (unsigned __int8 *)*((void *)a2 + 1);
                    unint64_t v29 = *((void *)a2 + 2);
                  }
                  else
                  {
                    unsigned int v50 = *v31;
                    off_t v51 = v31 + 1;
                    *((void *)a2 + 1) = v51;
                  }
                  *((unsigned char *)this + 105) = v50 != 0;
                  *((_DWORD *)this + 31) |= 0x10000u;
                  if ((int)v29 - (int)v51 >= 2 && *v51 == 144 && v51[1] == 1)
                  {
                    BOOL v32 = v51 + 2;
                    *((void *)a2 + 1) = v32;
LABEL_157:
                    if ((unint64_t)v32 >= v29 || (char)*v32 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
                      if (!result) {
                        return result;
                      }
                      long long v52 = (unsigned __int8 *)*((void *)a2 + 1);
                      unint64_t v29 = *((void *)a2 + 2);
                    }
                    else
                    {
                      unint64_t *v5 = *v32;
                      long long v52 = v32 + 1;
                      *((void *)a2 + 1) = v52;
                    }
                    *((_DWORD *)this + 31) |= 0x20000u;
                    if ((int)v29 - (int)v52 >= 2 && *v52 == 152 && v52[1] == 1)
                    {
                      long long v33 = (char *)(v52 + 2);
                      *((void *)a2 + 1) = v33;
LABEL_166:
                      if ((unint64_t)v33 >= v29 || *v33 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
                        if (!result) {
                          return result;
                        }
                        uint64_t v53 = (unsigned __int8 *)*((void *)a2 + 1);
                        unint64_t v29 = *((void *)a2 + 2);
                      }
                      else
                      {
                        *uint64_t v6 = *v33;
                        uint64_t v53 = (unsigned __int8 *)(v33 + 1);
                        *((void *)a2 + 1) = v53;
                      }
                      *((_DWORD *)this + 31) |= 0x40000u;
                      if (v53 == (unsigned __int8 *)v29
                        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                      {
                        *((_DWORD *)a2 + 8) = 0;
                        uint64_t result = 1;
                        *((unsigned char *)a2 + 36) = 1;
                        return result;
                      }
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_67;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_25;
        }
        goto LABEL_67;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_30;
        }
        goto LABEL_67;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_35;
        }
        goto LABEL_67;
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        uint64_t v17 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_41;
      case 8u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        unsigned int v20 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_76;
      case 9u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        char v22 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_86;
      case 0xAu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        __int16 v24 = (char *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        goto LABEL_96;
      case 0xBu:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_106;
        }
        goto LABEL_67;
      case 0xCu:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_110;
        }
        goto LABEL_67;
      case 0xDu:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_114;
        }
        goto LABEL_67;
      case 0xEu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        long long v26 = (char *)*((void *)a2 + 1);
        unint64_t v25 = *((void *)a2 + 2);
        goto LABEL_118;
      case 0xFu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        long long v28 = (char *)*((void *)a2 + 1);
        unint64_t v27 = *((void *)a2 + 2);
        goto LABEL_128;
      case 0x10u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        long long v30 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v29 = *((void *)a2 + 2);
        goto LABEL_139;
      case 0x11u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        long long v31 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v29 = *((void *)a2 + 2);
        goto LABEL_148;
      case 0x12u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        BOOL v32 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v29 = *((void *)a2 + 2);
        goto LABEL_157;
      case 0x13u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        long long v33 = (char *)*((void *)a2 + 1);
        unint64_t v29 = *((void *)a2 + 2);
        goto LABEL_166;
      default:
        int v9 = TagFallback & 7;
LABEL_67:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000501CC(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 124);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    int v6 = *(_DWORD *)(v5 + 124);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 56), a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 60), a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 64), a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 68), a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(_DWORD *)(v5 + 96), a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(_DWORD *)(v5 + 100), a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned __int8 *)(v5 + 104), a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
LABEL_38:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(void *)(v5 + 112), a2, a4);
    if ((*(_DWORD *)(v5 + 124) & 0x40000) == 0) {
      return result;
    }
    goto LABEL_39;
  }
LABEL_37:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned __int8 *)(v5 + 105), a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x20000) != 0) {
    goto LABEL_38;
  }
LABEL_19:
  if ((v6 & 0x40000) == 0) {
    return result;
  }
LABEL_39:
  int v7 = *(_DWORD *)(v5 + 108);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v7, a2, a4);
}

uint64_t proto::gnss::Emergency::SummaryReport::ByteSize(proto::gnss::Emergency::SummaryReport *this, unint64_t a2)
{
  int v3 = *((_DWORD *)this + 31);
  if ((_BYTE)v3)
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 0x40) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
      if ((v6 & 0x80000000) != 0)
      {
        int v7 = 10;
      }
      else if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
        int v3 = *((_DWORD *)this + 31);
      }
      else
      {
        int v7 = 1;
      }
      uint64_t v5 = (v5 + v7 + 1);
    }
    if ((v3 & 0x80) != 0)
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
      if ((v8 & 0x80000000) != 0)
      {
        int v9 = 11;
      }
      else if (v8 >= 0x80)
      {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
        int v3 = *((_DWORD *)this + 31);
      }
      else
      {
        int v9 = 2;
      }
      uint64_t v5 = (v9 + v5);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
      if ((v10 & 0x80000000) != 0)
      {
        int v11 = 11;
      }
      else if (v10 >= 0x80)
      {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
        int v3 = *((_DWORD *)this + 31);
      }
      else
      {
        int v11 = 2;
      }
      LODWORD(v5) = v11 + v5;
    }
    if ((v3 & 0x200) != 0)
    {
      unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
      if ((v12 & 0x80000000) != 0)
      {
        int v13 = 11;
      }
      else if (v12 >= 0x80)
      {
        int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
        int v3 = *((_DWORD *)this + 31);
      }
      else
      {
        int v13 = 2;
      }
      LODWORD(v5) = v13 + v5;
    }
    int v14 = v5 + 9;
    if ((v3 & 0x400) == 0) {
      int v14 = v5;
    }
    if ((v3 & 0x800) != 0) {
      v14 += 9;
    }
    if ((v3 & 0x1000) != 0) {
      LODWORD(v5) = v14 + 9;
    }
    else {
      LODWORD(v5) = v14;
    }
    if ((v3 & 0x2000) != 0)
    {
      unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 24);
      if ((v15 & 0x80000000) != 0)
      {
        int v16 = 11;
      }
      else if (v15 >= 0x80)
      {
        int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
        int v3 = *((_DWORD *)this + 31);
      }
      else
      {
        int v16 = 2;
      }
      LODWORD(v5) = v16 + v5;
    }
    if ((v3 & 0x4000) != 0)
    {
      uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 25);
      if ((v17 & 0x80000000) != 0)
      {
        int v18 = 11;
      }
      else if (v17 >= 0x80)
      {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
        int v3 = *((_DWORD *)this + 31);
      }
      else
      {
        int v18 = 2;
      }
      LODWORD(v5) = v18 + v5;
    }
    if ((v3 & 0x8000) != 0) {
      uint64_t v5 = (v5 + 3);
    }
    else {
      uint64_t v5 = v5;
    }
  }
  if ((v3 & 0xFF0000) != 0)
  {
    if ((v3 & 0x10000) != 0) {
      uint64_t v5 = (v5 + 3);
    }
    else {
      uint64_t v5 = v5;
    }
    if ((v3 & 0x20000) != 0)
    {
      uint64_t v5 = v5
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 14), a2)+ 2;
      int v3 = *((_DWORD *)this + 31);
    }
    if ((v3 & 0x40000) != 0)
    {
      uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 27);
      if (v19 >= 0x80) {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 2;
      }
      else {
        int v20 = 3;
      }
      uint64_t v5 = (v20 + v5);
    }
  }
  *((_DWORD *)this + 30) = v5;
  return v5;
}

void sub_10005065C(proto::gnss::Emergency::SummaryReport *a1, void *lpsrc)
{
  proto::gnss::Emergency::SummaryReport::MergeFrom(a1, (const proto::gnss::Emergency::SummaryReport *)lpsrc);
}

uint64_t sub_100050700()
{
  return 1;
}

void *sub_100050708@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.SummaryReport");
}

void sub_100050718(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      int v6 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 16) = v6;
      int v4 = *(_DWORD *)(a2 + 28);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_16;
      }
    }
    else if ((*(unsigned char *)(a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 28) |= 2u;
    uint64_t v8 = *(std::string **)(a1 + 8);
    if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v8, v7);
    int v4 = *(_DWORD *)(a2 + 28);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_17;
    }
LABEL_16:
    char v9 = *(unsigned char *)(a2 + 20);
    *(_DWORD *)(a1 + 28) |= 4u;
    *(unsigned char *)(a1 + 20) = v9;
    int v4 = *(_DWORD *)(a2 + 28);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
LABEL_17:
    char v10 = *(unsigned char *)(a2 + 21);
    *(_DWORD *)(a1 + 28) |= 8u;
    *(unsigned char *)(a1 + 21) = v10;
    int v4 = *(_DWORD *)(a2 + 28);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        return;
      }
      goto LABEL_10;
    }
LABEL_18:
    char v11 = *(unsigned char *)(a2 + 22);
    *(_DWORD *)(a1 + 28) |= 0x10u;
    *(unsigned char *)(a1 + 22) = v11;
    if ((*(_DWORD *)(a2 + 28) & 0x20) == 0) {
      return;
    }
LABEL_10:
    char v5 = *(unsigned char *)(a2 + 23);
    *(_DWORD *)(a1 + 28) |= 0x20u;
    *(unsigned char *)(a1 + 23) = v5;
  }
}

void sub_100050890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000508A8(uint64_t result)
{
  if ((_UNKNOWN *)result != &wireless_diagnostics::google::protobuf::internal::kEmptyString && result != 0)
  {
    if (*(char *)(result + 23) < 0) {
      operator delete(*(void **)result);
    }
    operator delete();
  }
  return result;
}

void sub_100050914(uint64_t *a1)
{
  *a1 = (uint64_t)off_100108318;
  sub_1000508A8(a1[1]);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_10005096C(uint64_t *a1)
{
  *a1 = (uint64_t)off_100108318;
  sub_1000508A8(a1[1]);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);

  operator delete();
}

void sub_1000509D8()
{
}

uint64_t proto::gnss::Emergency::SuplConfig::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 28);
  if (v1)
  {
    *(_DWORD *)(this + 16) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 8);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 20) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t sub_100050A7C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char v5 = (unsigned int *)(a1 + 16);
  while (2)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        char v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          unsigned int *v5 = *v10;
          char v11 = v10 + 1;
          *((void *)this + 1) = v11;
LABEL_28:
          int v12 = *(_DWORD *)(a1 + 28) | 1;
          *(_DWORD *)(a1 + 28) = v12;
          if ((unint64_t)v11 < v9 && *v11 == 18)
          {
            *((void *)this + 1) = v11 + 1;
            goto LABEL_31;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (result)
        {
          char v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
          goto LABEL_28;
        }
        break;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_22;
        }
        int v12 = *(_DWORD *)(a1 + 28);
LABEL_31:
        *(_DWORD *)(a1 + 28) = v12 | 2;
        if (*(_UNKNOWN **)(a1 + 8) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v18 >= v13 || *v18 != 24) {
          continue;
        }
        int v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_37:
        unsigned int v28 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28);
          if (!result) {
            return result;
          }
          unsigned int v19 = v28;
          int v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v14;
          int v20 = v14 + 1;
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 20) = v19 != 0;
        *(_DWORD *)(a1 + 28) |= 4u;
        if ((unint64_t)v20 >= v13 || *v20 != 32) {
          continue;
        }
        unint64_t v15 = v20 + 1;
        *((void *)this + 1) = v15;
LABEL_45:
        unsigned int v28 = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28);
          if (!result) {
            return result;
          }
          unsigned int v21 = v28;
          char v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int v21 = *v15;
          char v22 = v15 + 1;
          *((void *)this + 1) = v22;
        }
        *(unsigned char *)(a1 + 21) = v21 != 0;
        *(_DWORD *)(a1 + 28) |= 8u;
        if ((unint64_t)v22 >= v13 || *v22 != 40) {
          continue;
        }
        int v16 = v22 + 1;
        *((void *)this + 1) = v16;
LABEL_53:
        unsigned int v28 = 0;
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28);
          if (!result) {
            return result;
          }
          unsigned int v23 = v28;
          __int16 v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int v23 = *v16;
          __int16 v24 = v16 + 1;
          *((void *)this + 1) = v24;
        }
        *(unsigned char *)(a1 + 22) = v23 != 0;
        *(_DWORD *)(a1 + 28) |= 0x10u;
        if ((unint64_t)v24 >= v13 || *v24 != 48) {
          continue;
        }
        uint64_t v17 = v24 + 1;
        *((void *)this + 1) = v17;
LABEL_61:
        unsigned int v28 = 0;
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28);
          if (!result) {
            return result;
          }
          unsigned int v25 = v28;
          long long v26 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int v25 = *v17;
          long long v26 = (unsigned __int8 *)(v17 + 1);
          *((void *)this + 1) = v26;
        }
        *(unsigned char *)(a1 + 23) = v25 != 0;
        *(_DWORD *)(a1 + 28) |= 0x20u;
        if (v26 != (unsigned __int8 *)v13 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_37;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_45;
      case 5u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_53;
      case 6u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_61;
      default:
        int v8 = TagFallback & 7;
LABEL_22:
        if (v8 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100050E6C(uint64_t result, char a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 22), a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 0x20) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 21), a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return result;
  }
LABEL_13:
  int v7 = *(unsigned __int8 *)(v5 + 23);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, a2, a4);
}

uint64_t proto::gnss::Emergency::SuplConfig::ByteSize(proto::gnss::Emergency::SuplConfig *this, unsigned int a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 28);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0;
    goto LABEL_28;
  }
  if ((*((unsigned char *)this + 28) & 1) == 0)
  {
    int v4 = 0;
    if ((*((unsigned char *)this + 28) & 2) == 0) {
      goto LABEL_19;
    }
LABEL_10:
    uint64_t v7 = *((void *)this + 1);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    char v9 = v8;
    uint64_t v10 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      unint64_t v11 = *(unsigned __int8 *)(v7 + 23);
    }
    else {
      unint64_t v11 = v10;
    }
    if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
      int v8 = *(unsigned __int8 *)(v7 + 23);
      uint64_t v10 = *(void *)(v7 + 8);
      int v3 = *((_DWORD *)this + 7);
      char v9 = *(unsigned char *)(v7 + 23);
    }
    else
    {
      int v12 = 1;
    }
    if (v9 < 0) {
      int v8 = v10;
    }
    v4 += v12 + v8 + 1;
    goto LABEL_19;
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v6 < 0x80)
  {
    int v4 = 2;
    if ((v3 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
  int v3 = *((_DWORD *)this + 7);
  if ((v3 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_19:
  unsigned int v13 = v4 + 2;
  if ((v3 & 4) == 0) {
    unsigned int v13 = v4;
  }
  if ((v3 & 8) != 0) {
    v13 += 2;
  }
  if ((v3 & 0x10) != 0) {
    v13 += 2;
  }
  if ((v3 & 0x20) != 0) {
    uint64_t result = v13 + 2;
  }
  else {
    uint64_t result = v13;
  }
LABEL_28:
  *((_DWORD *)this + 6) = result;
  return result;
}

void sub_100051044(uint64_t a1, void *lpsrc)
{
  sub_100050718(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000510E8()
{
  return 1;
}

void *sub_1000510F0@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.SuplConfig");
}

void sub_100051100(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  int v4 = *(_DWORD *)(a2 + 52);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    char v8 = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(unsigned char *)(a1 + 8) = v8;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v9 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 52) |= 2u;
  *(_DWORD *)(a1 + 12) = v9;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v10 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 52) |= 4u;
  *(_DWORD *)(a1 + 16) = v10;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v11 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 52) |= 8u;
  *(_DWORD *)(a1 + 20) = v11;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_24:
    int v13 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 52) |= 0x20u;
    *(_DWORD *)(a1 + 28) = v13;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_23:
  int v12 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 52) |= 0x10u;
  *(_DWORD *)(a1 + 24) = v12;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_25:
  int v14 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 52) |= 0x40u;
  *(_DWORD *)(a1 + 32) = v14;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 52) |= 0x80u;
    *(_DWORD *)(a1 + 36) = v5;
    int v4 = *(_DWORD *)(a2 + 52);
  }
LABEL_13:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 40);
      *(_DWORD *)(a1 + 52) |= 0x100u;
      *(_DWORD *)(a1 + 40) = v6;
      int v4 = *(_DWORD *)(a2 + 52);
    }
    if ((v4 & 0x200) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 44);
      *(_DWORD *)(a1 + 52) |= 0x200u;
      *(_DWORD *)(a1 + 44) = v7;
    }
  }
}

void sub_1000512B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000512D0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108390;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000512F0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108390;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100051344()
{
}

uint64_t sub_1000513A0(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 52);
  if ((_BYTE)v1)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)(result + 12) = 0;
    *(void *)(result + 28) = 0;
    *(void *)(result + 20) = 0;
    *(_DWORD *)(result + 36) = 0;
  }
  if ((v1 & 0xFF00) != 0) {
    *(void *)(result + 40) = 0;
  }
  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_1000513D4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 12);
  int v6 = (unsigned int *)(a1 + 16);
  int v7 = (unsigned int *)(a1 + 20);
  char v8 = (unsigned int *)(a1 + 24);
  int v9 = (unsigned int *)(a1 + 28);
  int v10 = (unsigned int *)(a1 + 32);
  int v11 = (unsigned int *)(a1 + 36);
  int v12 = (unsigned int *)(a1 + 44);
  while (2)
  {
    int v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v13;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v13 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        unsigned int v40 = 0;
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v17 < v16 && (*v17 & 0x80000000) == 0)
        {
          unsigned int v18 = *v17;
          unsigned int v19 = v17 + 1;
          *((void *)this + 1) = v19;
LABEL_36:
          *(unsigned char *)(a1 + 8) = v18 != 0;
          *(_DWORD *)(a1 + 52) |= 1u;
          if ((unint64_t)v19 < v16 && *v19 == 16)
          {
            int v20 = v19 + 1;
            *((void *)this + 1) = v20;
            goto LABEL_39;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
        if (result)
        {
          unsigned int v18 = v40;
          unsigned int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
          goto LABEL_36;
        }
        break;
      case 2u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
LABEL_39:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unint64_t v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v20;
          unint64_t v29 = v20 + 1;
          *((void *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 52) |= 2u;
        if ((unint64_t)v29 >= v16 || *v29 != 24) {
          continue;
        }
        unsigned int v21 = v29 + 1;
        *((void *)this + 1) = v21;
LABEL_47:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          long long v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v21;
          long long v30 = v21 + 1;
          *((void *)this + 1) = v30;
        }
        *(_DWORD *)(a1 + 52) |= 4u;
        if ((unint64_t)v30 >= v16 || *v30 != 32) {
          continue;
        }
        char v22 = v30 + 1;
        *((void *)this + 1) = v22;
LABEL_55:
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          long long v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v22;
          long long v31 = v22 + 1;
          *((void *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 52) |= 8u;
        if ((unint64_t)v31 >= v16 || *v31 != 40) {
          continue;
        }
        unsigned int v23 = v31 + 1;
        *((void *)this + 1) = v23;
LABEL_63:
        if ((unint64_t)v23 >= v16 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          BOOL v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *char v8 = *v23;
          BOOL v32 = v23 + 1;
          *((void *)this + 1) = v32;
        }
        *(_DWORD *)(a1 + 52) |= 0x10u;
        if ((unint64_t)v32 >= v16 || *v32 != 48) {
          continue;
        }
        __int16 v24 = v32 + 1;
        *((void *)this + 1) = v24;
LABEL_71:
        if ((unint64_t)v24 >= v16 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          long long v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v9 = *v24;
          long long v33 = v24 + 1;
          *((void *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 52) |= 0x20u;
        if ((unint64_t)v33 >= v16 || *v33 != 56) {
          continue;
        }
        unsigned int v25 = v33 + 1;
        *((void *)this + 1) = v25;
LABEL_79:
        if ((unint64_t)v25 >= v16 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          uint64_t v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v25;
          uint64_t v34 = v25 + 1;
          *((void *)this + 1) = v34;
        }
        *(_DWORD *)(a1 + 52) |= 0x40u;
        if ((unint64_t)v34 >= v16 || *v34 != 64) {
          continue;
        }
        long long v26 = v34 + 1;
        *((void *)this + 1) = v26;
LABEL_87:
        if ((unint64_t)v26 >= v16 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          unsigned int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v11 = *v26;
          unsigned int v35 = v26 + 1;
          *((void *)this + 1) = v35;
        }
        *(_DWORD *)(a1 + 52) |= 0x80u;
        if ((unint64_t)v35 >= v16 || *v35 != 72) {
          continue;
        }
        unint64_t v27 = v35 + 1;
        *((void *)this + 1) = v27;
LABEL_95:
        unsigned int v41 = 0;
        if ((unint64_t)v27 >= v16 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41);
          if (!result) {
            return result;
          }
          unsigned int v36 = v41;
          unsigned int v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v36 = *v27;
          unsigned int v37 = v27 + 1;
          *((void *)this + 1) = v37;
        }
        *(_DWORD *)(a1 + 40) = v36;
        *(_DWORD *)(a1 + 52) |= 0x100u;
        if ((unint64_t)v37 >= v16 || *v37 != 80) {
          continue;
        }
        unsigned int v28 = v37 + 1;
        *((void *)this + 1) = v28;
LABEL_103:
        if ((unint64_t)v28 >= v16 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v12);
          if (!result) {
            return result;
          }
          long long v38 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v12 = *v28;
          long long v38 = (unsigned __int8 *)(v28 + 1);
          *((void *)this + 1) = v38;
        }
        *(_DWORD *)(a1 + 52) |= 0x200u;
        if (v38 != (unsigned __int8 *)v16 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        unsigned int v21 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_47;
      case 4u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        char v22 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_55;
      case 5u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        unsigned int v23 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_63;
      case 6u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        __int16 v24 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_71;
      case 7u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        unsigned int v25 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_79;
      case 8u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        long long v26 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_87;
      case 9u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        unint64_t v27 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_95;
      case 0xAu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        unsigned int v28 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_103;
      default:
        int v15 = TagFallback & 7;
LABEL_30:
        if (v15 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_10005198C(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = v5[13];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[13];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[13];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[13];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  int v6 = v5[13];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  int v6 = v5[13];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  int v6 = v5[13];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
    if ((v5[13] & 0x200) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  int v6 = v5[13];
  if ((v6 & 0x100) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    return result;
  }
LABEL_21:
  int v7 = v5[11];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v7, a2, a4);
}

uint64_t proto::gnss::Emergency::LteCellInfo::ByteSize(proto::gnss::Emergency::LteCellInfo *this, unsigned int a2)
{
  int v3 = *((_DWORD *)this + 13);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_39;
  }
  uint64_t v4 = 2 * (v3 & 1u);
  if ((v3 & 2) != 0)
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      int v3 = *((_DWORD *)this + 13);
    }
    else
    {
      int v6 = 1;
    }
    uint64_t v4 = (v4 | 1) + v6;
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0) {
        goto LABEL_5;
      }
      goto LABEL_19;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
    int v3 = *((_DWORD *)this + 13);
  }
  else
  {
    int v8 = 1;
  }
  uint64_t v4 = (v4 + v8 + 1);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_19:
  int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    int v3 = *((_DWORD *)this + 13);
  }
  else
  {
    int v10 = 2;
  }
  uint64_t v4 = (v10 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_27;
  }
LABEL_23:
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    int v3 = *((_DWORD *)this + 13);
  }
  else
  {
    int v12 = 2;
  }
  uint64_t v4 = (v12 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }
LABEL_27:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *((_DWORD *)this + 13);
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_8:
    if ((v3 & 0x80) == 0) {
      goto LABEL_39;
    }
    goto LABEL_35;
  }
LABEL_31:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    int v3 = *((_DWORD *)this + 13);
  }
  else
  {
    int v16 = 2;
  }
  uint64_t v4 = (v16 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_35:
    uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v17 >= 0x80)
    {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
      int v3 = *((_DWORD *)this + 13);
    }
    else
    {
      int v18 = 2;
    }
    uint64_t v4 = (v18 + v4);
  }
LABEL_39:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      unsigned int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
      if ((v19 & 0x80000000) != 0)
      {
        int v20 = 11;
      }
      else if (v19 >= 0x80)
      {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
        int v3 = *((_DWORD *)this + 13);
      }
      else
      {
        int v20 = 2;
      }
      uint64_t v4 = (v20 + v4);
    }
    if ((v3 & 0x200) != 0)
    {
      unsigned int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
      if (v21 >= 0x80) {
        int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
      }
      else {
        int v22 = 2;
      }
      uint64_t v4 = (v22 + v4);
    }
  }
  *((_DWORD *)this + 12) = v4;
  return v4;
}

void sub_100051CB0(uint64_t a1, void *lpsrc)
{
  sub_100051100(a1, (uint64_t)lpsrc);
}

uint64_t sub_100051D54()
{
  return 1;
}

void *sub_100051D5C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.LteCellInfo");
}

void sub_100051D6C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      char v6 = *(unsigned char *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 12) = v7;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    int v8 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(_DWORD *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_14:
    int v9 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_DWORD *)(a1 + 20) = v9;
    if ((*(_DWORD *)(a2 + 32) & 0x10) == 0) {
      return;
    }
LABEL_9:
    int v5 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 0x10u;
    *(_DWORD *)(a1 + 24) = v5;
  }
}

void sub_100051E80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100051E98(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108408;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100051EB8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108408;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100051F0C()
{
}

uint64_t sub_100051F64(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)(result + 20) = 0;
    *(void *)(result + 12) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100051F80(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 12);
  char v6 = (unsigned int *)(a1 + 16);
  int v7 = (unsigned int *)(a1 + 20);
  int v8 = (unsigned int *)(a1 + 24);
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v25 = 0;
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 < v12 && (*v13 & 0x80000000) == 0)
        {
          unsigned int v14 = *v13;
          int v15 = v13 + 1;
          *((void *)this + 1) = v15;
LABEL_26:
          *(unsigned char *)(a1 + 8) = v14 != 0;
          *(_DWORD *)(a1 + 32) |= 1u;
          if ((unint64_t)v15 < v12 && *v15 == 16)
          {
            int v16 = v15 + 1;
            *((void *)this + 1) = v16;
            goto LABEL_29;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
        if (result)
        {
          unsigned int v14 = v25;
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_29:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v16;
          int v20 = v16 + 1;
          *((void *)this + 1) = v20;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        if ((unint64_t)v20 >= v12 || *v20 != 24) {
          continue;
        }
        uint64_t v17 = v20 + 1;
        *((void *)this + 1) = v17;
LABEL_37:
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *char v6 = *v17;
          unsigned int v21 = v17 + 1;
          *((void *)this + 1) = v21;
        }
        *(_DWORD *)(a1 + 32) |= 4u;
        if ((unint64_t)v21 >= v12 || *v21 != 32) {
          continue;
        }
        int v18 = v21 + 1;
        *((void *)this + 1) = v18;
LABEL_45:
        if ((unint64_t)v18 >= v12 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v18;
          int v22 = v18 + 1;
          *((void *)this + 1) = v22;
        }
        *(_DWORD *)(a1 + 32) |= 8u;
        if ((unint64_t)v22 >= v12 || *v22 != 40) {
          continue;
        }
        unsigned int v19 = v22 + 1;
        *((void *)this + 1) = v19;
LABEL_53:
        if ((unint64_t)v19 >= v12 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          unsigned int v23 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v19;
          unsigned int v23 = (unsigned __int8 *)(v19 + 1);
          *((void *)this + 1) = v23;
        }
        *(_DWORD *)(a1 + 32) |= 0x10u;
        if (v23 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_37;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_45;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_53;
      default:
        int v11 = TagFallback & 7;
LABEL_20:
        if (v11 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1000522CC(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[8];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
    if ((v5[8] & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[8];
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = v5[6];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t proto::gnss::Emergency::GsmCellInfo::ByteSize(proto::gnss::Emergency::GsmCellInfo *this, unsigned int a2)
{
  int v3 = *((_DWORD *)this + 8);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_24;
  }
  uint64_t v4 = 2 * (v3 & 1u);
  if ((v3 & 2) != 0)
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *((_DWORD *)this + 8);
    }
    else
    {
      int v6 = 2;
    }
    uint64_t v4 = (v6 + v4);
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0) {
        goto LABEL_5;
      }
      goto LABEL_16;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    int v3 = *((_DWORD *)this + 8);
  }
  else
  {
    int v8 = 2;
  }
  uint64_t v4 = (v8 + v4);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_20;
  }
LABEL_16:
  int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    int v3 = *((_DWORD *)this + 8);
  }
  else
  {
    int v10 = 2;
  }
  uint64_t v4 = (v10 + v4);
  if ((v3 & 0x10) != 0)
  {
LABEL_20:
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if (v11 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    }
    else {
      int v12 = 2;
    }
    uint64_t v4 = (v12 + v4);
  }
LABEL_24:
  *((_DWORD *)this + 7) = v4;
  return v4;
}

void sub_10005247C(uint64_t a1, void *lpsrc)
{
  sub_100051D6C(a1, (uint64_t)lpsrc);
}

uint64_t sub_100052520()
{
  return 1;
}

void *sub_100052528@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GsmCellInfo");
}

void sub_100052538(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 44))
  {
    char v6 = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 44) |= 1u;
    *(unsigned char *)(a1 + 8) = v6;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_16;
    }
  }
  else if ((*(unsigned char *)(a2 + 44) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v7 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 44) |= 2u;
  *(_DWORD *)(a1 + 12) = v7;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  int v8 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 4u;
  *(_DWORD *)(a1 + 16) = v8;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_18;
  }
LABEL_17:
  int v9 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 44) |= 8u;
  *(_DWORD *)(a1 + 20) = v9;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_19:
    int v11 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 44) |= 0x20u;
    *(_DWORD *)(a1 + 28) = v11;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        return;
      }
      goto LABEL_12;
    }
    goto LABEL_20;
  }
LABEL_18:
  int v10 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 44) |= 0x10u;
  *(_DWORD *)(a1 + 24) = v10;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 0x20) != 0) {
    goto LABEL_19;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_20:
  unsigned int v12 = *(_DWORD *)(a2 + 32);
  if (v12 >= 4) {
    __assert_rtn("set_freq_mode", "GnssEmergencyTypes.pb.h", 14153, "::proto::gnss::Emergency::FreqMode_IsValid(value)");
  }
  *(_DWORD *)(a1 + 44) |= 0x40u;
  *(_DWORD *)(a1 + 32) = v12;
  if ((*(_DWORD *)(a2 + 44) & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) |= 0x80u;
    *(_DWORD *)(a1 + 36) = v5;
  }
}

void sub_1000526D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000526EC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108480;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10005270C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108480;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100052760()
{
}

uint64_t sub_1000527BC(uint64_t result)
{
  if (*(unsigned char *)(result + 44))
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)(result + 12) = 0;
    *(void *)(result + 28) = 0;
    *(void *)(result + 20) = 0;
    *(_DWORD *)(result + 36) = 0;
  }
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_1000527E0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 12);
  char v6 = (unsigned int *)(a1 + 16);
  int v7 = (unsigned int *)(a1 + 20);
  int v8 = (unsigned int *)(a1 + 24);
  int v9 = (unsigned int *)(a1 + 28);
  int v10 = (unsigned int *)(a1 + 36);
  while (2)
  {
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v35 = 0;
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          unsigned int v16 = *v15;
          uint64_t v17 = v15 + 1;
          *((void *)this + 1) = v17;
LABEL_32:
          *(unsigned char *)(a1 + 8) = v16 != 0;
          *(_DWORD *)(a1 + 44) |= 1u;
          if ((unint64_t)v17 < v14 && *v17 == 16)
          {
            int v18 = v17 + 1;
            *((void *)this + 1) = v18;
            goto LABEL_35;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35);
        if (result)
        {
          unsigned int v16 = v35;
          uint64_t v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          goto LABEL_32;
        }
        break;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_35:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          long long v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v18;
          long long v26 = v18 + 1;
          *((void *)this + 1) = v26;
        }
        *(_DWORD *)(a1 + 44) |= 2u;
        if ((unint64_t)v26 >= v14 || *v26 != 24) {
          continue;
        }
        unsigned int v19 = v26 + 1;
        *((void *)this + 1) = v19;
LABEL_43:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unint64_t v27 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *char v6 = *v19;
          unint64_t v27 = v19 + 1;
          *((void *)this + 1) = v27;
        }
        *(_DWORD *)(a1 + 44) |= 4u;
        if ((unint64_t)v27 >= v14 || *v27 != 32) {
          continue;
        }
        int v20 = v27 + 1;
        *((void *)this + 1) = v20;
LABEL_51:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v20;
          unsigned int v28 = v20 + 1;
          *((void *)this + 1) = v28;
        }
        *(_DWORD *)(a1 + 44) |= 8u;
        if ((unint64_t)v28 >= v14 || *v28 != 40) {
          continue;
        }
        unsigned int v21 = v28 + 1;
        *((void *)this + 1) = v21;
LABEL_59:
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          unint64_t v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v21;
          unint64_t v29 = v21 + 1;
          *((void *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 44) |= 0x10u;
        if ((unint64_t)v29 >= v14 || *v29 != 48) {
          continue;
        }
        int v22 = v29 + 1;
        *((void *)this + 1) = v22;
LABEL_67:
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          long long v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v9 = *v22;
          long long v30 = v22 + 1;
          *((void *)this + 1) = v30;
        }
        *(_DWORD *)(a1 + 44) |= 0x20u;
        if ((unint64_t)v30 >= v14 || *v30 != 56) {
          continue;
        }
        unsigned int v23 = v30 + 1;
        *((void *)this + 1) = v23;
LABEL_75:
        unsigned int v36 = 0;
        if ((unint64_t)v23 >= v14 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36);
          if (!result) {
            return result;
          }
          unsigned int v31 = v36;
        }
        else
        {
          unsigned int v31 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        if (v31 <= 3)
        {
          *(_DWORD *)(a1 + 44) |= 0x40u;
          *(_DWORD *)(a1 + 32) = v31;
        }
        BOOL v32 = (unsigned char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        if ((unint64_t)v32 >= v24 || *v32 != 64) {
          continue;
        }
        unsigned int v25 = v32 + 1;
        *((void *)this + 1) = v25;
LABEL_85:
        if ((unint64_t)v25 >= v24 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          long long v33 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v25;
          long long v33 = (unsigned __int8 *)(v25 + 1);
          *((void *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 44) |= 0x80u;
        if (v33 != (unsigned __int8 *)v24 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_43;
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_51;
      case 5u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v21 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_59;
      case 6u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_67;
      case 7u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v23 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_75;
      case 8u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v25 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_85;
      default:
        int v13 = TagFallback & 7;
LABEL_26:
        if (v13 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100052CA8(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = v5[11];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[11];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[11];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[11];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  int v6 = v5[11];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
    if ((v5[11] & 0x80) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  int v6 = v5[11];
  if ((v6 & 0x40) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return result;
  }
LABEL_17:
  int v7 = v5[9];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v7, a2, a4);
}

uint64_t proto::gnss::Emergency::WcdmaCellInfo::ByteSize(proto::gnss::Emergency::WcdmaCellInfo *this, unsigned int a2)
{
  int v3 = *((_DWORD *)this + 11);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_41;
  }
  uint64_t v4 = 2 * (v3 & 1u);
  if ((v3 & 2) != 0)
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *((_DWORD *)this + 11);
    }
    else
    {
      int v6 = 2;
    }
    uint64_t v4 = (v6 + v4);
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0) {
        goto LABEL_5;
      }
      goto LABEL_19;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    int v3 = *((_DWORD *)this + 11);
  }
  else
  {
    int v8 = 2;
  }
  uint64_t v4 = (v8 + v4);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_19:
  int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    int v3 = *((_DWORD *)this + 11);
  }
  else
  {
    int v10 = 2;
  }
  uint64_t v4 = (v10 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_27;
  }
LABEL_23:
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    int v3 = *((_DWORD *)this + 11);
  }
  else
  {
    int v12 = 2;
  }
  uint64_t v4 = (v12 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }
LABEL_27:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *((_DWORD *)this + 11);
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_8:
    if ((v3 & 0x80) == 0) {
      goto LABEL_41;
    }
    goto LABEL_37;
  }
LABEL_31:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v15 & 0x80000000) != 0)
  {
    int v16 = 11;
  }
  else if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    int v3 = *((_DWORD *)this + 11);
  }
  else
  {
    int v16 = 2;
  }
  uint64_t v4 = (v16 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_37:
    uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v17 >= 0x80) {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    }
    else {
      int v18 = 2;
    }
    uint64_t v4 = (v18 + v4);
  }
LABEL_41:
  *((_DWORD *)this + 10) = v4;
  return v4;
}

void sub_100052F3C(uint64_t a1, void *lpsrc)
{
  sub_100052538(a1, (uint64_t)lpsrc);
}

uint64_t sub_100052FE0()
{
  return 1;
}

void *sub_100052FE8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.WcdmaCellInfo");
}

void proto::gnss::Emergency::LocationId::MergeFrom(proto::gnss::Emergency::LocationId *this, const proto::gnss::Emergency::LocationId *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((proto::gnss::Emergency::LocationId *)((char *)this + 8), *((_DWORD *)a2 + 4) + *((_DWORD *)this + 4));
  if (*((int *)a2 + 4) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*((void *)a2 + 1) + 8 * v4);
      int v6 = *((_DWORD *)this + 5);
      uint64_t v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((proto::gnss::Emergency::LocationId *)((char *)this + 8), v6 + 1);
          int v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 1);
      *((_DWORD *)this + 4) = v7 + 1;
      sub_100051100(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((proto::gnss::Emergency::LocationId *)((char *)this + 32), *((_DWORD *)a2 + 10) + *((_DWORD *)this + 10));
  if (*((int *)a2 + 10) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(void *)(*((void *)a2 + 4) + 8 * v9);
      int v11 = *((_DWORD *)this + 11);
      uint64_t v12 = *((int *)this + 10);
      if ((int)v12 >= v11)
      {
        if (v11 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((proto::gnss::Emergency::LocationId *)((char *)this + 32), v11 + 1);
          int v11 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v11 + 1;
        operator new();
      }
      uint64_t v13 = *((void *)this + 4);
      *((_DWORD *)this + 10) = v12 + 1;
      sub_100051D6C(*(void *)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *((int *)a2 + 10));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((proto::gnss::Emergency::LocationId *)((char *)this + 56), *((_DWORD *)a2 + 16) + *((_DWORD *)this + 16));
  if (*((int *)a2 + 16) >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      uint64_t v15 = *(void *)(*((void *)a2 + 7) + 8 * v14);
      int v16 = *((_DWORD *)this + 17);
      uint64_t v17 = *((int *)this + 16);
      if ((int)v17 >= v16)
      {
        if (v16 == *((_DWORD *)this + 18))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((proto::gnss::Emergency::LocationId *)((char *)this + 56), v16 + 1);
          int v16 = *((_DWORD *)this + 17);
        }
        *((_DWORD *)this + 17) = v16 + 1;
        operator new();
      }
      uint64_t v18 = *((void *)this + 7);
      *((_DWORD *)this + 16) = v17 + 1;
      sub_100052538(*(void *)(v18 + 8 * v17), v15);
      ++v14;
    }
    while (v14 < *((int *)a2 + 16));
  }
  if (*((unsigned char *)a2 + 88))
  {
    unsigned int v19 = *((_DWORD *)a2 + 20);
    if (v19 >= 7) {
      __assert_rtn("set_cell_type", "GnssEmergencyTypes.pb.h", 14202, "::proto::gnss::Emergency::CellType_IsValid(value)");
    }
    *((_DWORD *)this + 22) |= 1u;
    *((_DWORD *)this + 20) = v19;
  }
}

void sub_10005337C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100053394(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1001084F8;
  int v2 = *((_DWORD *)this + 17);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*((void *)this + 7) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)this + 17);
      }
    }
  }
  if (*((void *)this + 7)) {
    operator delete[]();
  }
  int v5 = *((_DWORD *)this + 11);
  if (v5 >= 1)
  {
    for (uint64_t j = 0; j < v5; ++j)
    {
      uint64_t v7 = *(void *)(*((void *)this + 4) + 8 * j);
      if (v7)
      {
        (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        int v5 = *((_DWORD *)this + 11);
      }
    }
  }
  if (*((void *)this + 4)) {
    operator delete[]();
  }
  int v8 = *((_DWORD *)this + 5);
  if (v8 >= 1)
  {
    for (uint64_t k = 0; k < v8; ++k)
    {
      uint64_t v10 = *(void *)(*((void *)this + 1) + 8 * k);
      if (v10)
      {
        (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
        int v8 = *((_DWORD *)this + 5);
      }
    }
  }
  if (*((void *)this + 1)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10005352C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100053394(a1);

  operator delete();
}

void sub_100053564()
{
}

uint64_t proto::gnss::Emergency::LocationId::Clear(proto::gnss::Emergency::LocationId *this)
{
  if (*((unsigned char *)this + 88)) {
    *((_DWORD *)this + 20) = 0;
  }
  sub_10003AD6C((uint64_t)this + 8);
  sub_10003AD6C((uint64_t)this + 32);
  uint64_t result = sub_10003AD6C((uint64_t)this + 56);
  *((_DWORD *)this + 22) = 0;
  return result;
}

uint64_t proto::gnss::Emergency::LocationId::MergePartialFromCodedStream(proto::gnss::Emergency::LocationId *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  int v5 = (proto::gnss::Emergency::LocationId *)((char *)this + 8);
  int v6 = (proto::gnss::Emergency::LocationId *)((char *)this + 32);
  uint64_t v7 = (proto::gnss::Emergency::LocationId *)((char *)this + 56);
  while (1)
  {
LABEL_2:
    int v8 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v8 < *((void *)a2 + 2) && (*v8 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v52 = 0;
        int v11 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v12 = v52;
        }
        else
        {
          unsigned int v12 = *v11;
          *((void *)a2 + 1) = v11 + 1;
        }
        if (v12 <= 6)
        {
          *((_DWORD *)this + 22) |= 1u;
          *((_DWORD *)this + 20) = v12;
        }
        uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 18) {
          continue;
        }
        goto LABEL_27;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_18;
        }
        while (2)
        {
          int v15 = *((_DWORD *)this + 5);
          uint64_t v16 = *((int *)this + 4);
          if ((int)v16 >= v15)
          {
            if (v15 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v15 + 1);
              int v15 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v15 + 1;
            operator new();
          }
          uint64_t v17 = *((void *)this + 1);
          *((_DWORD *)this + 4) = v16 + 1;
          uint64_t v18 = *(void *)(v17 + 8 * v16);
          unsigned int v52 = 0;
          unsigned int v19 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52))return 0; {
          }
            }
          else
          {
            unsigned int v52 = *v19;
            *((void *)a2 + 1) = v19 + 1;
          }
          int v20 = *((_DWORD *)a2 + 14);
          int v21 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v20 + 1;
          if (v20 >= v21) {
            return 0;
          }
          int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v52);
          if (!sub_1000513D4(v18, a2, v23) || !*((unsigned char *)a2 + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v22);
          int v24 = *((_DWORD *)a2 + 14);
          BOOL v25 = __OFSUB__(v24, 1);
          int v26 = v24 - 1;
          if (v26 < 0 == v25) {
            *((_DWORD *)a2 + 14) = v26;
          }
          uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v14 < *((void *)a2 + 2))
          {
            int v27 = *v14;
            if (v27 == 18)
            {
LABEL_27:
              *((void *)a2 + 1) = v14 + 1;
              continue;
            }
            if (v27 == 26)
            {
              do
              {
                *((void *)a2 + 1) = v14 + 1;
LABEL_46:
                int v28 = *((_DWORD *)this + 11);
                uint64_t v29 = *((int *)this + 10);
                if ((int)v29 >= v28)
                {
                  if (v28 == *((_DWORD *)this + 12))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v28 + 1);
                    int v28 = *((_DWORD *)this + 11);
                  }
                  *((_DWORD *)this + 11) = v28 + 1;
                  operator new();
                }
                uint64_t v30 = *((void *)this + 4);
                *((_DWORD *)this + 10) = v29 + 1;
                uint64_t v31 = *(void *)(v30 + 8 * v29);
                unsigned int v52 = 0;
                BOOL v32 = (char *)*((void *)a2 + 1);
                if ((unint64_t)v32 >= *((void *)a2 + 2) || *v32 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52))return 0; {
                }
                  }
                else
                {
                  unsigned int v52 = *v32;
                  *((void *)a2 + 1) = v32 + 1;
                }
                int v33 = *((_DWORD *)a2 + 14);
                int v34 = *((_DWORD *)a2 + 15);
                *((_DWORD *)a2 + 14) = v33 + 1;
                if (v33 >= v34) {
                  return 0;
                }
                int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v52);
                if (!sub_100051F80(v31, a2, v36) || !*((unsigned char *)a2 + 36)) {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v35);
                int v37 = *((_DWORD *)a2 + 14);
                BOOL v25 = __OFSUB__(v37, 1);
                int v38 = v37 - 1;
                if (v38 < 0 == v25) {
                  *((_DWORD *)a2 + 14) = v38;
                }
                uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
                if ((unint64_t)v14 >= *((void *)a2 + 2)) {
                  goto LABEL_2;
                }
                int v39 = *v14;
              }
              while (v39 == 26);
              if (v39 == 34)
              {
                do
                {
                  *((void *)a2 + 1) = v14 + 1;
LABEL_64:
                  int v40 = *((_DWORD *)this + 17);
                  uint64_t v41 = *((int *)this + 16);
                  if ((int)v41 >= v40)
                  {
                    if (v40 == *((_DWORD *)this + 18))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v40 + 1);
                      int v40 = *((_DWORD *)this + 17);
                    }
                    *((_DWORD *)this + 17) = v40 + 1;
                    operator new();
                  }
                  uint64_t v42 = *((void *)this + 7);
                  *((_DWORD *)this + 16) = v41 + 1;
                  uint64_t v43 = *(void *)(v42 + 8 * v41);
                  unsigned int v52 = 0;
                  unsigned int v44 = (char *)*((void *)a2 + 1);
                  if ((unint64_t)v44 >= *((void *)a2 + 2) || *v44 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52))return 0; {
                  }
                    }
                  else
                  {
                    unsigned int v52 = *v44;
                    *((void *)a2 + 1) = v44 + 1;
                  }
                  int v45 = *((_DWORD *)a2 + 14);
                  int v46 = *((_DWORD *)a2 + 15);
                  *((_DWORD *)a2 + 14) = v45 + 1;
                  if (v45 >= v46) {
                    return 0;
                  }
                  int v47 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v52);
                  if (!sub_1000527E0(v43, a2, v48) || !*((unsigned char *)a2 + 36)) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v47);
                  int v49 = *((_DWORD *)a2 + 14);
                  BOOL v25 = __OFSUB__(v49, 1);
                  int v50 = v49 - 1;
                  if (v50 < 0 == v25) {
                    *((_DWORD *)a2 + 14) = v50;
                  }
                  uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
                  off_t v51 = (unsigned char *)*((void *)a2 + 2);
                }
                while (v14 < v51 && *v14 == 34);
                if (v14 == v51 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                {
                  *((_DWORD *)a2 + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)a2 + 36) = 1;
                  return result;
                }
              }
            }
          }
          break;
        }
        break;
      case 3u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_46;
        }
        goto LABEL_18;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_18;
        }
        goto LABEL_64;
      default:
        int v10 = TagFallback & 7;
LABEL_18:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100053C00(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 88)) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 80), (int)a2, a4);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  if (*(int *)(v5 + 64) >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 56) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 64));
  }
  return result;
}

uint64_t proto::gnss::Emergency::LocationId::ByteSize(proto::gnss::Emergency::LocationId *this, unsigned int a2)
{
  if (*((unsigned char *)this + 88))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
    if ((v4 & 0x80000000) != 0)
    {
      int v3 = 11;
    }
    else if (v4 >= 0x80)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    }
    else
    {
      int v3 = 2;
    }
  }
  else
  {
    int v3 = 0;
  }
  int v5 = *((_DWORD *)this + 4);
  int v6 = v5 + v3;
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::LteCellInfo::ByteSize(*(proto::gnss::Emergency::LteCellInfo **)(*((void *)this + 1) + 8 * v7), a2);
      int v9 = (int)v8;
      if (v8 >= 0x80) {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      }
      else {
        int v10 = 1;
      }
      v6 += v9 + v10;
      ++v7;
    }
    while (v7 < *((int *)this + 4));
  }
  int v11 = *((_DWORD *)this + 10);
  int v12 = v11 + v6;
  if (v11 >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::GsmCellInfo::ByteSize(*(proto::gnss::Emergency::GsmCellInfo **)(*((void *)this + 4) + 8 * v13), a2);
      int v15 = (int)v14;
      if (v14 >= 0x80) {
        int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
      }
      else {
        int v16 = 1;
      }
      v12 += v15 + v16;
      ++v13;
    }
    while (v13 < *((int *)this + 10));
  }
  int v17 = *((_DWORD *)this + 16);
  uint64_t v18 = (v17 + v12);
  if (v17 >= 1)
  {
    uint64_t v19 = 0;
    do
    {
      int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::WcdmaCellInfo::ByteSize(*(proto::gnss::Emergency::WcdmaCellInfo **)(*((void *)this + 7) + 8 * v19), a2);
      int v21 = (int)v20;
      if (v20 >= 0x80) {
        int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
      }
      else {
        int v22 = 1;
      }
      uint64_t v18 = (v21 + v18 + v22);
      ++v19;
    }
    while (v19 < *((int *)this + 16));
  }
  *((_DWORD *)this + 21) = v18;
  return v18;
}

void sub_100053E44(proto::gnss::Emergency::LocationId *a1, void *lpsrc)
{
  proto::gnss::Emergency::LocationId::MergeFrom(a1, (const proto::gnss::Emergency::LocationId *)lpsrc);
}

uint64_t sub_100053EE8()
{
  return 1;
}

void *sub_100053EF0@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.LocationId");
}

void proto::gnss::Emergency::WlanMeasurementRequest::MergeFrom(proto::gnss::Emergency::WlanMeasurementRequest *this, const proto::gnss::Emergency::WlanMeasurementRequest *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 20);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 20))
    {
      int v5 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      char v6 = *((unsigned char *)a2 + 12);
      *((_DWORD *)this + 5) |= 2u;
      *((unsigned char *)this + 12) = v6;
    }
  }
}

void sub_100053FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100053FC4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108570;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100053FE4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108570;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100054038()
{
}

uint64_t proto::gnss::Emergency::WlanMeasurementRequest::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20))
  {
    *(_DWORD *)(this + 8) = 0;
    *(unsigned char *)(this + 12) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t proto::gnss::Emergency::WlanMeasurementRequest::MergePartialFromCodedStream(proto::gnss::Emergency::WlanMeasurementRequest *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  int v5 = (unsigned int *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      char v6 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v6;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      int v11 = (char *)*((void *)a2 + 1);
      unint64_t v9 = *((void *)a2 + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
        if (!result) {
          return result;
        }
        int v12 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int *v5 = *v11;
        int v12 = v11 + 1;
        *((void *)a2 + 1) = v12;
      }
      *((_DWORD *)this + 5) |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        int v10 = v12 + 1;
        *((void *)a2 + 1) = v10;
LABEL_24:
        unsigned int v16 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
          uint64_t v14 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v13 = *v10;
          uint64_t v14 = (unsigned __int8 *)(v10 + 1);
          *((void *)a2 + 1) = v14;
        }
        *((unsigned char *)this + 12) = v13 != 0;
        *((_DWORD *)this + 5) |= 2u;
        if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100054258(uint64_t result, char a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(unsigned __int8 *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t proto::gnss::Emergency::WlanMeasurementRequest::ByteSize(proto::gnss::Emergency::WlanMeasurementRequest *this, unsigned int a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 20);
  if ((_BYTE)v3)
  {
    if (*((unsigned char *)this + 20))
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if (v6 >= 0x80)
      {
        unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        int v3 = *((_DWORD *)this + 5);
      }
      else
      {
        unsigned int v4 = 2;
      }
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      uint64_t result = v4 + 2;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

void sub_100054330(proto::gnss::Emergency::WlanMeasurementRequest *a1, void *lpsrc)
{
  proto::gnss::Emergency::WlanMeasurementRequest::MergeFrom(a1, (const proto::gnss::Emergency::WlanMeasurementRequest *)lpsrc);
}

uint64_t sub_1000543D4()
{
  return 1;
}

void *sub_1000543DC@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.WlanMeasurementRequest");
}

void sub_1000543EC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      int v6 = *(const std::string **)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      int v7 = *(std::string **)(a1 + 8);
      if (v7 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_15;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    char v8 = *(unsigned char *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(unsigned char *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }
LABEL_15:
    char v9 = *(unsigned char *)(a2 + 17);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(unsigned char *)(a1 + 17) = v9;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_16:
    int v10 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_DWORD *)(a1 + 20) = v10;
    if ((*(_DWORD *)(a2 + 32) & 0x10) == 0) {
      return;
    }
LABEL_9:
    int v5 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 0x10u;
    *(_DWORD *)(a1 + 24) = v5;
  }
}

void sub_100054544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005455C(uint64_t *a1)
{
  *a1 = (uint64_t)off_1001085E8;
  sub_1000508A8(a1[1]);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1000545B4(uint64_t *a1)
{
  *a1 = (uint64_t)off_1001085E8;
  sub_1000508A8(a1[1]);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);

  operator delete();
}

void sub_100054620()
{
}

uint64_t sub_100054680(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    if (*(unsigned char *)(result + 32))
    {
      uint64_t v1 = *(void *)(result + 8);
      if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(unsigned char **)uint64_t v1 = 0;
          *(void *)(v1 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v1 = 0;
          *(unsigned char *)(v1 + 23) = 0;
        }
      }
    }
    *(_WORD *)(result + 16) = 0;
    *(_DWORD *)(result + 20) = 0;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1000546D0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 20);
  while (2)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_26;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        if (*(_UNKNOWN **)(a1 + 8) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (result)
        {
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 < v10 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_18;
          }
          continue;
        }
        return result;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_18:
        unsigned int v24 = 0;
        if ((unint64_t)v12 < v10 && (*v12 & 0x80000000) == 0)
        {
          unsigned int v13 = *v12;
          uint64_t v14 = v12 + 1;
          *((void *)this + 1) = v14;
LABEL_32:
          *(unsigned char *)(a1 + 16) = v13 != 0;
          *(_DWORD *)(a1 + 32) |= 2u;
          if ((unint64_t)v14 < v10 && *v14 == 24)
          {
            int v15 = v14 + 1;
            *((void *)this + 1) = v15;
            goto LABEL_35;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
        if (result)
        {
          unsigned int v13 = v24;
          uint64_t v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          goto LABEL_32;
        }
        break;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_35:
        unsigned int v23 = 0;
        if ((unint64_t)v15 >= v10 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
          if (!result) {
            return result;
          }
          unsigned int v18 = v23;
          uint64_t v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v18 = *v15;
          uint64_t v19 = v15 + 1;
          *((void *)this + 1) = v19;
        }
        *(unsigned char *)(a1 + 17) = v18 != 0;
        *(_DWORD *)(a1 + 32) |= 4u;
        if ((unint64_t)v19 >= v10 || *v19 != 32) {
          continue;
        }
        unsigned int v16 = v19 + 1;
        *((void *)this + 1) = v16;
LABEL_43:
        if ((unint64_t)v16 >= v10 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v16;
          int v20 = v16 + 1;
          *((void *)this + 1) = v20;
        }
        *(_DWORD *)(a1 + 32) |= 8u;
        if ((unint64_t)v20 >= v10 || *v20 != 40) {
          continue;
        }
        int v17 = v20 + 1;
        *((void *)this + 1) = v17;
LABEL_51:
        unsigned int v25 = 0;
        if ((unint64_t)v17 >= v10 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v21 = v25;
          int v22 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v21 = *v17;
          int v22 = (unsigned __int8 *)(v17 + 1);
          *((void *)this + 1) = v22;
        }
        *(_DWORD *)(a1 + 24) = v21;
        *(_DWORD *)(a1 + 32) |= 0x10u;
        if (v22 != (unsigned __int8 *)v10 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v16 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_43;
      case 5u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_51;
      default:
        int v8 = TagFallback & 7;
LABEL_26:
        if (v8 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100054A34(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 17), a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = *(_DWORD *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t proto::gnss::Emergency::WlanMeasurementElement::ByteSize(proto::gnss::Emergency::WlanMeasurementElement *this, unsigned int a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 32);
  if ((_BYTE)v3)
  {
    if (*((unsigned char *)this + 32))
    {
      uint64_t v6 = *((void *)this + 1);
      int v7 = *(unsigned __int8 *)(v6 + 23);
      char v8 = v7;
      uint64_t v9 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
      }
      else {
        unint64_t v10 = v9;
      }
      if (v10 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
        int v7 = *(unsigned __int8 *)(v6 + 23);
        uint64_t v9 = *(void *)(v6 + 8);
        int v11 = v12 + 1;
        int v3 = *((_DWORD *)this + 8);
        char v8 = *(unsigned char *)(v6 + 23);
      }
      else
      {
        int v11 = 2;
      }
      if (v8 < 0) {
        int v7 = v9;
      }
      unsigned int v4 = v11 + v7;
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 2;
    }
    if ((v3 & 4) != 0) {
      uint64_t v5 = v4 + 2;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 8) != 0)
    {
      unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
      if (v13 >= 0x80)
      {
        int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
        int v3 = *((_DWORD *)this + 8);
      }
      else
      {
        int v14 = 2;
      }
      uint64_t v5 = (v14 + v5);
    }
    if ((v3 & 0x10) != 0)
    {
      int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
      if ((v15 & 0x80000000) != 0)
      {
        int v16 = 11;
      }
      else if (v15 >= 0x80)
      {
        int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
      }
      else
      {
        int v16 = 2;
      }
      uint64_t v5 = (v16 + v5);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  *((_DWORD *)this + 7) = v5;
  return v5;
}

void sub_100054BFC(uint64_t a1, void *lpsrc)
{
  sub_1000543EC(a1, (uint64_t)lpsrc);
}

uint64_t sub_100054CA0()
{
  return 1;
}

void *sub_100054CA8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.WlanMeasurementElement");
}

void proto::gnss::Emergency::WlanMeasurementList::MergeFrom(proto::gnss::Emergency::WlanMeasurementList *this, const proto::gnss::Emergency::WlanMeasurementList *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  sub_10008B374((proto::gnss::Emergency::WlanMeasurementList *)((char *)this + 8), (uint64_t)a2 + 8);
  if (*((unsigned char *)a2 + 40))
  {
    unsigned int v4 = *((_DWORD *)a2 + 8);
    if (v4 >= 6) {
      __assert_rtn("set_result", "GnssEmergencyTypes.pb.h", 14514, "::proto::gnss::Emergency::WlanMeasurementResult_IsValid(value)");
    }
    *((_DWORD *)this + 10) |= 1u;
    *((_DWORD *)this + 8) = v4;
  }
}

void sub_100054D78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100054D90(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100108660;
  int v2 = *((_DWORD *)this + 5);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*((void *)this + 1) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)this + 5);
      }
    }
  }
  if (*((void *)this + 1)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100054E50(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100054D90(a1);

  operator delete();
}

void sub_100054E88()
{
}

uint64_t proto::gnss::Emergency::WlanMeasurementList::Clear(proto::gnss::Emergency::WlanMeasurementList *this)
{
  if (*((unsigned char *)this + 40)) {
    *((_DWORD *)this + 8) = 0;
  }
  uint64_t result = sub_10003AD6C((uint64_t)this + 8);
  *((_DWORD *)this + 10) = 0;
  return result;
}

uint64_t proto::gnss::Emergency::WlanMeasurementList::MergePartialFromCodedStream(proto::gnss::Emergency::WlanMeasurementList *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (proto::gnss::Emergency::WlanMeasurementList *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v6;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_16;
        }
        unsigned int v26 = 0;
        uint64_t v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
          if (!result) {
            return result;
          }
          unsigned int v10 = v26;
        }
        else
        {
          unsigned int v10 = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        if (v10 <= 5)
        {
          *((_DWORD *)this + 10) |= 1u;
          *((_DWORD *)this + 8) = v10;
        }
        int v12 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v12 < *((void *)a2 + 2) && *v12 == 18) {
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_16;
      }
      while (1)
      {
        int v13 = *((_DWORD *)this + 5);
        uint64_t v14 = *((int *)this + 4);
        if ((int)v14 >= v13)
        {
          if (v13 == *((_DWORD *)this + 6))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v13 + 1);
            int v13 = *((_DWORD *)this + 5);
          }
          *((_DWORD *)this + 5) = v13 + 1;
          operator new();
        }
        uint64_t v15 = *((void *)this + 1);
        *((_DWORD *)this + 4) = v14 + 1;
        uint64_t v16 = *(void *)(v15 + 8 * v14);
        unsigned int v27 = 0;
        int v17 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27))return 0; {
        }
          }
        else
        {
          unsigned int v27 = *v17;
          *((void *)a2 + 1) = v17 + 1;
        }
        int v18 = *((_DWORD *)a2 + 14);
        int v19 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v18 + 1;
        if (v18 >= v19) {
          return 0;
        }
        int v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v27);
        if (!sub_1000546D0(v16, a2, v21) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v20);
        int v22 = *((_DWORD *)a2 + 14);
        BOOL v23 = __OFSUB__(v22, 1);
        int v24 = v22 - 1;
        if (v24 < 0 == v23) {
          *((_DWORD *)a2 + 14) = v24;
        }
        int v12 = (unsigned char *)*((void *)a2 + 1);
        unsigned int v25 = (unsigned char *)*((void *)a2 + 2);
        if (v12 >= v25 || *v12 != 18) {
          break;
        }
LABEL_25:
        *((void *)a2 + 1) = v12 + 1;
      }
      if (v12 == v25 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000551E8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 40)) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 32), (int)a2, a4);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t proto::gnss::Emergency::WlanMeasurementList::ByteSize(proto::gnss::Emergency::WlanMeasurementList *this, unsigned int a2)
{
  if (*((unsigned char *)this + 40))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v4 & 0x80000000) != 0)
    {
      int v3 = 11;
    }
    else if (v4 >= 0x80)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    }
    else
    {
      int v3 = 2;
    }
  }
  else
  {
    int v3 = 0;
  }
  int v5 = *((_DWORD *)this + 4);
  uint64_t v6 = (v5 + v3);
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::WlanMeasurementElement::ByteSize(*(proto::gnss::Emergency::WlanMeasurementElement **)(*((void *)this + 1) + 8 * v7), a2);
      int v9 = (int)v8;
      if (v8 >= 0x80) {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      }
      else {
        int v10 = 1;
      }
      uint64_t v6 = (v9 + v6 + v10);
      ++v7;
    }
    while (v7 < *((int *)this + 4));
  }
  *((_DWORD *)this + 9) = v6;
  return v6;
}

void sub_10005531C(proto::gnss::Emergency::WlanMeasurementList *a1, void *lpsrc)
{
  proto::gnss::Emergency::WlanMeasurementList::MergeFrom(a1, (const proto::gnss::Emergency::WlanMeasurementList *)lpsrc);
}

uint64_t sub_1000553C0()
{
  return 1;
}

void *sub_1000553C8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.WlanMeasurementList");
}

void sub_1000553D8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      char v6 = *(unsigned char *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 12) = v7;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    int v8 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(_DWORD *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_14:
    int v9 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_DWORD *)(a1 + 20) = v9;
    if ((*(_DWORD *)(a2 + 32) & 0x10) == 0) {
      return;
    }
LABEL_9:
    int v5 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 0x10u;
    *(_DWORD *)(a1 + 24) = v5;
  }
}

void sub_1000554EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100055504(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1001086D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100055524(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1001086D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100055578()
{
}

uint64_t sub_1000555D0(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)(result + 20) = 0;
    *(void *)(result + 12) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1000555EC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 12);
  char v6 = (unsigned int *)(a1 + 16);
  int v7 = (unsigned int *)(a1 + 20);
  int v8 = (unsigned int *)(a1 + 24);
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v25 = 0;
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 < v12 && (*v13 & 0x80000000) == 0)
        {
          unsigned int v14 = *v13;
          uint64_t v15 = v13 + 1;
          *((void *)this + 1) = v15;
LABEL_26:
          *(unsigned char *)(a1 + 8) = v14 != 0;
          *(_DWORD *)(a1 + 32) |= 1u;
          if ((unint64_t)v15 < v12 && *v15 == 16)
          {
            uint64_t v16 = v15 + 1;
            *((void *)this + 1) = v16;
            goto LABEL_29;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
        if (result)
        {
          unsigned int v14 = v25;
          uint64_t v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_29:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v16;
          int v20 = v16 + 1;
          *((void *)this + 1) = v20;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        if ((unint64_t)v20 >= v12 || *v20 != 24) {
          continue;
        }
        int v17 = v20 + 1;
        *((void *)this + 1) = v17;
LABEL_37:
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *char v6 = *v17;
          unsigned int v21 = v17 + 1;
          *((void *)this + 1) = v21;
        }
        *(_DWORD *)(a1 + 32) |= 4u;
        if ((unint64_t)v21 >= v12 || *v21 != 32) {
          continue;
        }
        int v18 = v21 + 1;
        *((void *)this + 1) = v18;
LABEL_45:
        if ((unint64_t)v18 >= v12 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v18;
          int v22 = v18 + 1;
          *((void *)this + 1) = v22;
        }
        *(_DWORD *)(a1 + 32) |= 8u;
        if ((unint64_t)v22 >= v12 || *v22 != 40) {
          continue;
        }
        int v19 = v22 + 1;
        *((void *)this + 1) = v19;
LABEL_53:
        if ((unint64_t)v19 >= v12 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          BOOL v23 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v19;
          BOOL v23 = (unsigned __int8 *)(v19 + 1);
          *((void *)this + 1) = v23;
        }
        *(_DWORD *)(a1 + 32) |= 0x10u;
        if (v23 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_37;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_45;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_53;
      default:
        int v11 = TagFallback & 7;
LABEL_20:
        if (v11 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100055938(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[8];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
    if ((v5[8] & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[8];
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = v5[6];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_1000559FC(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[8];
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_24;
  }
  uint64_t v4 = 2 * (v3 & 1);
  if ((v3 & 2) != 0)
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      unsigned int v3 = a1[8];
    }
    else
    {
      int v6 = 2;
    }
    uint64_t v4 = (v6 + v4);
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0) {
        goto LABEL_5;
      }
      goto LABEL_16;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
  if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    unsigned int v3 = a1[8];
  }
  else
  {
    int v8 = 2;
  }
  uint64_t v4 = (v8 + v4);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_20;
  }
LABEL_16:
  int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    unsigned int v3 = a1[8];
  }
  else
  {
    int v10 = 2;
  }
  uint64_t v4 = (v10 + v4);
  if ((v3 & 0x10) != 0)
  {
LABEL_20:
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
    if (v11 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    }
    else {
      int v12 = 2;
    }
    uint64_t v4 = (v12 + v4);
  }
LABEL_24:
  a1[7] = v4;
  return v4;
}

void sub_100055AE8(uint64_t a1, void *lpsrc)
{
  sub_1000553D8(a1, (uint64_t)lpsrc);
}

uint64_t sub_100055B8C()
{
  return 1;
}

void *sub_100055B94@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.QoP");
}

void sub_100055BA4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    sub_10002D764(a1 + 24, *(_DWORD *)(a1 + 32) + v4);
    memcpy((void *)(*(void *)(a1 + 24) + 4 * *(int *)(a1 + 32)), *(const void **)(a2 + 24), 4 * *(int *)(a2 + 32));
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 44);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 44))
    {
      char v6 = *(unsigned char *)(a2 + 8);
      *(_DWORD *)(a1 + 44) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 44);
    }
    if ((v5 & 2) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 12);
      if (v7 >= 5) {
        __assert_rtn("set_slp_address_type", "GnssEmergencyTypes.pb.h", 14702, "::proto::gnss::Emergency::SLPAddressType_IsValid(value)");
      }
      *(_DWORD *)(a1 + 44) |= 2u;
      *(_DWORD *)(a1 + 12) = v7;
      int v5 = *(_DWORD *)(a2 + 44);
    }
    if ((v5 & 4) != 0)
    {
      int v8 = *(const std::string **)(a2 + 16);
      *(_DWORD *)(a1 + 44) |= 4u;
      int v9 = *(std::string **)(a1 + 16);
      if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v9, v8);
    }
  }
}

void sub_100055D14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100055D2C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100108750;
  uint64_t v1 = *((void *)this + 2);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  if (*((void *)this + 3)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100055DDC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100055D2C(a1);

  operator delete();
}

void sub_100055E14()
{
}

uint64_t proto::gnss::Emergency::SLPAddress::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 44);
  if (v1)
  {
    *(unsigned char *)(this + 8) = 0;
    *(_DWORD *)(this + 12) = 0;
    if ((v1 & 4) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t sub_100055EC8(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5 = a1 + 24;
  while (2)
  {
    char v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        v31[0] = 0;
        int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v31);
          if (!result) {
            return result;
          }
          unsigned int v11 = v31[0];
          int v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v11 = *v10;
          int v12 = v10 + 1;
          *((void *)this + 1) = v12;
        }
        *(unsigned char *)(a1 + 8) = v11 != 0;
        *(_DWORD *)(a1 + 44) |= 1u;
        if ((unint64_t)v12 < v9 && *v12 == 16)
        {
          int v13 = v12 + 1;
          *((void *)this + 1) = v13;
          goto LABEL_30;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
LABEL_30:
        v31[0] = 0;
        if ((unint64_t)v13 >= v9 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v31);
          if (!result) {
            return result;
          }
          unsigned int v17 = v31[0];
        }
        else
        {
          unsigned int v17 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (v17 <= 4)
        {
          *(_DWORD *)(a1 + 44) |= 2u;
          *(_DWORD *)(a1 + 12) = v17;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 26) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_40:
        *(_DWORD *)(a1 + 44) |= 4u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v19 = (char *)*((void *)this + 1);
        unsigned int v14 = (char *)*((void *)this + 2);
        if (v19 < v14 && *v19 == 32) {
          goto LABEL_45;
        }
        continue;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_40;
        }
        goto LABEL_20;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 2)
        {
          uint64_t result = sub_10005630C(this, v5);
          if (!result) {
            return result;
          }
          while (1)
          {
            int v19 = (char *)*((void *)this + 1);
            unsigned int v14 = (char *)*((void *)this + 2);
            if (v19 >= v14 || *v19 != 32) {
              break;
            }
LABEL_45:
            uint64_t v15 = v19 + 1;
            *((void *)this + 1) = v15;
LABEL_46:
            unsigned int v30 = 0;
            if (v15 >= v14 || *v15 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v30))return 0; {
            }
              }
            else
            {
              unsigned int v30 = *v15;
              *((void *)this + 1) = v15 + 1;
            }
            int v20 = *(_DWORD *)(a1 + 32);
            if (v20 == *(_DWORD *)(a1 + 36))
            {
              sub_10002D764(v5, v20 + 1);
              int v20 = *(_DWORD *)(a1 + 32);
            }
            unsigned int v21 = v30;
            uint64_t v22 = *(void *)(a1 + 24);
            *(_DWORD *)(a1 + 32) = v20 + 1;
            *(_DWORD *)(v22 + 4 * v20) = v21;
            int v23 = *(_DWORD *)(a1 + 36) - *(_DWORD *)(a1 + 32);
            if (v23 >= 1)
            {
              int v24 = v23 + 1;
              do
              {
                unsigned int v25 = (unsigned char *)*((void *)this + 1);
                unint64_t v26 = *((void *)this + 2);
                if ((unint64_t)v25 >= v26 || *v25 != 32) {
                  break;
                }
                *((void *)this + 1) = v25 + 1;
                if ((unint64_t)(v25 + 1) >= v26 || (char)v25[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v30))return 0; {
                }
                  }
                else
                {
                  unsigned int v30 = v25[1];
                  *((void *)this + 1) = v25 + 2;
                }
                int v27 = *(_DWORD *)(a1 + 32);
                if (v27 >= *(_DWORD *)(a1 + 36))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v31);
                  int v27 = *(_DWORD *)(a1 + 32);
                }
                unsigned int v28 = v30;
                uint64_t v29 = *(void *)(a1 + 24);
                *(_DWORD *)(a1 + 32) = v27 + 1;
                *(_DWORD *)(v29 + 4 * v27) = v28;
                --v24;
              }
              while (v24 > 1);
            }
          }
          if (v19 == v14 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          uint64_t v15 = (char *)*((void *)this + 1);
          unsigned int v14 = (char *)*((void *)this + 2);
          goto LABEL_46;
        }
LABEL_20:
        if (v8 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      default:
        int v8 = TagFallback & 7;
        goto LABEL_20;
    }
  }
}

void sub_1000562E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005630C(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v13 = 0;
  int v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
    if (!result) {
      return result;
    }
    unsigned int v5 = v13;
  }
  else
  {
    unsigned int v5 = *v4;
    unsigned int v13 = v5;
    *((void *)this + 1) = v4 + 1;
  }
  int v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      unsigned int v12 = 0;
      int v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
        if (!result) {
          return result;
        }
      }
      else
      {
        unsigned int v12 = *v8;
        *((void *)this + 1) = v8 + 1;
      }
      int v9 = *(_DWORD *)(a2 + 8);
      if (v9 == *(_DWORD *)(a2 + 12))
      {
        sub_10002D764(a2, v9 + 1);
        int v9 = *(_DWORD *)(a2 + 8);
      }
      unsigned int v10 = v12;
      uint64_t v11 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v9 + 1;
      *(_DWORD *)(v11 + 4 * v9) = v10;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
  return 1;
}

uint64_t sub_100056428(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 4) != 0) {
LABEL_4:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
LABEL_5:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(*(void *)(v5 + 24) + 4 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  return result;
}

uint64_t sub_1000564DC(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 44);
  if ((_BYTE)v3)
  {
    int v4 = 2 * (v3 & 1);
    if ((v3 & 2) != 0)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
      if ((v5 & 0x80000000) != 0)
      {
        int v6 = 11;
      }
      else if (v5 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 44);
      }
      else
      {
        int v6 = 2;
      }
      v4 += v6;
    }
    if ((v3 & 4) != 0)
    {
      uint64_t v7 = *(void *)(a1 + 16);
      int v8 = *(unsigned __int8 *)(v7 + 23);
      char v9 = v8;
      uint64_t v10 = *(void *)(v7 + 8);
      if ((v8 & 0x80u) == 0) {
        unint64_t v11 = *(unsigned __int8 *)(v7 + 23);
      }
      else {
        unint64_t v11 = v10;
      }
      if (v11 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
        int v8 = *(unsigned __int8 *)(v7 + 23);
        uint64_t v10 = *(void *)(v7 + 8);
        char v9 = *(unsigned char *)(v7 + 23);
      }
      else
      {
        int v12 = 1;
      }
      if (v9 < 0) {
        int v8 = v10;
      }
      v4 += v12 + v8 + 1;
    }
  }
  else
  {
    int v4 = 0;
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13 < 1)
  {
    int v15 = 0;
  }
  else
  {
    uint64_t v14 = 0;
    int v15 = 0;
    do
    {
      uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 24)
                                                                                             + 4 * v14);
      if (v16 >= 0x80)
      {
        int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
        int v13 = *(_DWORD *)(a1 + 32);
      }
      else
      {
        int v17 = 1;
      }
      v15 += v17;
      ++v14;
    }
    while (v14 < v13);
  }
  uint64_t result = (v15 + v4 + v13);
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void sub_1000565FC(uint64_t a1, void *lpsrc)
{
  sub_100055BA4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000566A0()
{
  return 1;
}

void *sub_1000566A8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.SLPAddress");
}

void sub_1000566B8(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v5 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v5;
      int v4 = *((_DWORD *)a2 + 4);
    }
    if ((v4 & 2) != 0)
    {
      char v6 = a2[9];
      *(_DWORD *)(a1 + 16) |= 2u;
      *(unsigned char *)(a1 + 9) = v6;
    }
  }
}

void sub_100056764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005677C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1001087C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10005679C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1001087C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000567F0()
{
}

uint64_t sub_100056840(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_WORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100056854(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      char v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v17 = 0;
      uint64_t v10 = (char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17);
        if (!result) {
          return result;
        }
        unsigned int v11 = v17;
        int v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
      }
      else
      {
        unsigned int v11 = *v10;
        int v12 = v10 + 1;
        *((void *)this + 1) = v12;
      }
      *(unsigned char *)(a1 + 8) = v11 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        char v9 = v12 + 1;
        *((void *)this + 1) = v9;
LABEL_23:
        unsigned int v16 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
          uint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v9;
          uint64_t v14 = (unsigned __int8 *)(v9 + 1);
          *((void *)this + 1) = v14;
        }
        *(unsigned char *)(a1 + 9) = v13 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if (v14 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_23;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_15:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100056A0C(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 16);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(unsigned __int8 *)(v5 + 9);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_100056A78(uint64_t a1)
{
  unsigned int v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  if ((*(_DWORD *)(a1 + 16) & 2) != 0) {
    v1 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 12) = v2;
  return v2;
}

void sub_100056AA0(uint64_t a1, unsigned char *lpsrc)
{
  sub_1000566B8(a1, lpsrc);
}

uint64_t sub_100056B44()
{
  return 1;
}

void *sub_100056B4C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.Notification");
}

void sub_100056B5C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      *(_DWORD *)(a1 + 24) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(proto::gnss::Emergency::SuplInitVer2Extension::default_instance_ + 8);
      }
      sub_100055BA4(v5, v6);
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 16);
      if (v7 >= 4) {
        __assert_rtn("set_trigger_type", "GnssEmergencyTypes.pb.h", 14914, "::proto::gnss::Emergency::TriggerType_IsValid(value)");
      }
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v7;
    }
  }
}

void sub_100056C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100056CB0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100108840;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::SuplInitVer2Extension::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100056D40(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100056CB0(a1);

  operator delete();
}

void sub_100056D78()
{
}

uint64_t proto::gnss::Emergency::SuplInitVer2Extension::Clear(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 24))
  {
    if (*(unsigned char *)(this + 24))
    {
      this = *(void *)(this + 8);
      if (this) {
        this = proto::gnss::Emergency::SLPAddress::Clear(this);
      }
    }
    *(_DWORD *)(v1 + 16) = 0;
  }
  *(_DWORD *)(v1 + 24) = 0;
  return this;
}

uint64_t sub_100056E08(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          char v9 = (char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_29;
        }
      }
      else
      {
        int v7 = TagFallback & 7;
      }
LABEL_17:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
    int v7 = TagFallback & 7;
    if (v7 != 2) {
      goto LABEL_17;
    }
    *(_DWORD *)(a1 + 24) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    if (!v10) {
      operator new();
    }
    unsigned int v23 = 0;
    unsigned int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23)) {
        return 0;
      }
    }
    else
    {
      unsigned int v23 = *v11;
      *((void *)this + 1) = v11 + 1;
    }
    int v12 = *((_DWORD *)this + 14);
    int v13 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v12 + 1;
    if (v12 >= v13) {
      return 0;
    }
    int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_100055EC8(v10, this, v15) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
    int v16 = *((_DWORD *)this + 14);
    BOOL v17 = __OFSUB__(v16, 1);
    int v18 = v16 - 1;
    if (v18 < 0 == v17) {
      *((_DWORD *)this + 14) = v18;
    }
    int v19 = (unsigned char *)*((void *)this + 1);
    unint64_t v8 = *((void *)this + 2);
    if ((unint64_t)v19 < v8 && *v19 == 16)
    {
      char v9 = v19 + 1;
      *((void *)this + 1) = v9;
LABEL_29:
      unsigned int v22 = 0;
      if ((unint64_t)v9 >= v8 || *v9 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if (!result) {
          return result;
        }
        unsigned int v20 = v22;
      }
      else
      {
        unsigned int v20 = *v9;
        *((void *)this + 1) = v9 + 1;
      }
      if (v20 <= 3)
      {
        *(_DWORD *)(a1 + 24) |= 2u;
        *(_DWORD *)(a1 + 16) = v20;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
  }
}

uint64_t sub_10005707C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::SuplInitVer2Extension::default_instance_ + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 24) & 2) != 0)
  {
LABEL_7:
    int v8 = *(_DWORD *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, (int)a2, a4);
  }
  return result;
}

uint64_t sub_1000570FC(uint64_t a1, unsigned int a2)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4) {
    uint64_t v4 = *(void *)(proto::gnss::Emergency::SuplInitVer2Extension::default_instance_ + 8);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000564DC(v4, a2);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  }
  else {
    int v7 = 1;
  }
  uint64_t v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 24) & 2) != 0)
  {
LABEL_12:
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v3 = (v9 + v3);
  }
LABEL_18:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1000571B4(uint64_t a1, void *lpsrc)
{
  sub_100056B5C(a1, (uint64_t)lpsrc);
}

uint64_t sub_100057258()
{
  return 1;
}

void *sub_100057260@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.SuplInitVer2Extension");
}

void proto::gnss::Emergency::Init::MergeFrom(proto::gnss::Emergency::Init *this, const proto::gnss::Emergency::Init *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 48);
  if (!(_BYTE)v4) {
    return;
  }
  if (*((unsigned char *)a2 + 48))
  {
    unsigned int v5 = *((_DWORD *)a2 + 10);
    if (v5 >= 0x12) {
      __assert_rtn("set_pos_method", "GnssEmergencyTypes.pb.h", 14941, "::proto::gnss::Emergency::PositionMethod_IsValid(value)");
    }
    *((_DWORD *)this + 12) |= 1u;
    *((_DWORD *)this + 10) = v5;
    int v4 = *((_DWORD *)a2 + 12);
  }
  if ((v4 & 2) == 0)
  {
    if ((v4 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_17:
    *((_DWORD *)this + 12) |= 4u;
    uint64_t v8 = *((void *)this + 2);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = *((void *)a2 + 2);
    if (!v9) {
      uint64_t v9 = *(void *)(proto::gnss::Emergency::Init::default_instance_ + 16);
    }
    sub_100055BA4(v8, v9);
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 8) == 0)
    {
LABEL_10:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_27;
    }
    goto LABEL_22;
  }
  *((_DWORD *)this + 12) |= 2u;
  uint64_t v6 = *((void *)this + 1);
  if (!v6) {
    operator new();
  }
  uint64_t v7 = *((void *)a2 + 1);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::Init::default_instance_ + 8);
  }
  sub_1000553D8(v6, v7);
  int v4 = *((_DWORD *)a2 + 12);
  if ((v4 & 4) != 0) {
    goto LABEL_17;
  }
LABEL_9:
  if ((v4 & 8) == 0) {
    goto LABEL_10;
  }
LABEL_22:
  *((_DWORD *)this + 12) |= 8u;
  uint64_t v10 = *((void *)this + 3);
  if (!v10) {
    operator new();
  }
  unsigned int v11 = (unsigned char *)*((void *)a2 + 3);
  if (!v11) {
    unsigned int v11 = *(unsigned char **)(proto::gnss::Emergency::Init::default_instance_ + 24);
  }
  sub_1000566B8(v10, v11);
  if ((*((_DWORD *)a2 + 12) & 0x10) != 0)
  {
LABEL_27:
    *((_DWORD *)this + 12) |= 0x10u;
    uint64_t v12 = *((void *)this + 4);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = *((void *)a2 + 4);
    if (!v13) {
      uint64_t v13 = *(void *)(proto::gnss::Emergency::Init::default_instance_ + 32);
    }
    sub_100056B5C(v12, v13);
  }
}

void sub_100057520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100057538(void *result)
{
  if ((void *)proto::gnss::Emergency::Init::default_instance_ != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t result = (void *)v1[4];
    if (result)
    {
      unsigned int v5 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v5();
    }
  }
  return result;
}

void sub_100057630(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1001088B8;
  sub_100057538(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100057684(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1001088B8;
  sub_100057538(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000576EC()
{
}

uint64_t proto::gnss::Emergency::Init::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 48);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 40) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 32))
        {
          *(unsigned char *)(v3 + 8) = 0;
          *(void *)(v3 + 20) = 0;
          *(void *)(v3 + 12) = 0;
        }
        *(_DWORD *)(v3 + 32) = 0;
        int v2 = *(_DWORD *)(this + 48);
      }
    }
    if ((v2 & 4) != 0)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        this = proto::gnss::Emergency::SLPAddress::Clear(this);
        int v2 = *(_DWORD *)(v1 + 48);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 16)) {
          *(_WORD *)(v4 + 8) = 0;
        }
        *(_DWORD *)(v4 + 16) = 0;
        int v2 = *(_DWORD *)(v1 + 48);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this) {
        this = proto::gnss::Emergency::SuplInitVer2Extension::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 48) = 0;
  return this;
}

uint64_t proto::gnss::Emergency::Init::MergePartialFromCodedStream(proto::gnss::Emergency::Init *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    unsigned int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 < *((void *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v48 = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v48);
          if (!result) {
            return result;
          }
          unsigned int v9 = v48;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        if (v9 <= 0x11)
        {
          *((_DWORD *)this + 12) |= 1u;
          *((_DWORD *)this + 10) = v9;
        }
        unsigned int v11 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v11 < *((void *)a2 + 2) && *v11 == 18)
        {
          *((void *)a2 + 1) = v11 + 1;
          goto LABEL_29;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
LABEL_29:
        *((_DWORD *)this + 12) |= 2u;
        uint64_t v12 = *((void *)this + 1);
        if (!v12) {
          operator new();
        }
        unsigned int v48 = 0;
        uint64_t v13 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v48))return 0; {
        }
          }
        else
        {
          unsigned int v48 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v48);
        if (!sub_1000555EC(v12, a2, v17) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v16);
        int v18 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v20;
        }
        unsigned int v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_43:
        *((_DWORD *)this + 12) |= 4u;
        uint64_t v22 = *((void *)this + 2);
        if (!v22) {
          operator new();
        }
        unsigned int v48 = 0;
        unsigned int v23 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v48))return 0; {
        }
          }
        else
        {
          unsigned int v48 = *v23;
          *((void *)a2 + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)a2 + 14);
        int v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v48);
        if (!sub_100055EC8(v22, a2, v27) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v26);
        int v28 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v29;
        }
        unsigned int v30 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v30 + 1;
LABEL_57:
        *((_DWORD *)this + 12) |= 8u;
        uint64_t v31 = *((void *)this + 3);
        if (!v31) {
          operator new();
        }
        unsigned int v48 = 0;
        BOOL v32 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v32 >= *((void *)a2 + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v48))return 0; {
        }
          }
        else
        {
          unsigned int v48 = *v32;
          *((void *)a2 + 1) = v32 + 1;
        }
        int v33 = *((_DWORD *)a2 + 14);
        int v34 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v48);
        if (!sub_100056854(v31, a2, v36) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v35);
        int v37 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v38;
        }
        int v39 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v39 >= *((void *)a2 + 2) || *v39 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v39 + 1;
LABEL_71:
        *((_DWORD *)this + 12) |= 0x10u;
        uint64_t v40 = *((void *)this + 4);
        if (!v40) {
          operator new();
        }
        unsigned int v48 = 0;
        uint64_t v41 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v41 >= *((void *)a2 + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v48))return 0; {
        }
          }
        else
        {
          unsigned int v48 = *v41;
          *((void *)a2 + 1) = v41 + 1;
        }
        int v42 = *((_DWORD *)a2 + 14);
        int v43 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v42 + 1;
        if (v42 >= v43) {
          return 0;
        }
        int v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v48);
        if (!sub_100056E08(v40, a2, v45) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v44);
        int v46 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v46, 1);
        int v47 = v46 - 1;
        if (v47 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v47;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_43;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_57;
        }
        goto LABEL_19;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        goto LABEL_71;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100057DE0(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 40), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::Init::default_instance_ + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_11:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(proto::gnss::Emergency::Init::default_instance_ + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(proto::gnss::Emergency::Init::default_instance_ + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 0x10) != 0)
  {
LABEL_17:
    uint64_t v10 = *(void *)(v5 + 32);
    if (!v10) {
      uint64_t v10 = *(void *)(proto::gnss::Emergency::Init::default_instance_ + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  }
  return result;
}

uint64_t proto::gnss::Emergency::Init::ByteSize(proto::gnss::Emergency::Init *this, unsigned int a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 48);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_43;
  }
  if (*((unsigned char *)this + 48))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *((_DWORD *)this + 12);
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*((unsigned char *)this + 48) & 2) == 0) {
      goto LABEL_19;
    }
  }
  int v6 = (unsigned int *)*((void *)this + 1);
  if (!v6) {
    int v6 = *(unsigned int **)(proto::gnss::Emergency::Init::default_instance_ + 8);
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000559FC(v6, a2);
  int v8 = (int)v7;
  if (v7 >= 0x80) {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
  }
  else {
    int v9 = 1;
  }
  uint64_t v4 = (v4 + v8 + v9 + 1);
  int v3 = *((_DWORD *)this + 12);
LABEL_19:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *((void *)this + 2);
    if (!v10) {
      uint64_t v10 = *(void *)(proto::gnss::Emergency::Init::default_instance_ + 16);
    }
    unsigned int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000564DC(v10, a2);
    int v12 = (int)v11;
    if (v11 >= 0x80) {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    }
    else {
      int v13 = 1;
    }
    uint64_t v4 = (v4 + v12 + v13 + 1);
    int v3 = *((_DWORD *)this + 12);
    if ((v3 & 8) == 0)
    {
LABEL_21:
      if ((v3 & 0x10) == 0) {
        goto LABEL_43;
      }
      goto LABEL_37;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_21;
  }
  uint64_t v14 = *((void *)this + 3);
  if (!v14) {
    uint64_t v14 = *(void *)(proto::gnss::Emergency::Init::default_instance_ + 24);
  }
  int v15 = 2 * (*(_DWORD *)(v14 + 16) & 1);
  if ((*(_DWORD *)(v14 + 16) & 2) != 0) {
    v15 += 2;
  }
  if (*(_DWORD *)(v14 + 16)) {
    int v16 = v15;
  }
  else {
    int v16 = 0;
  }
  *(_DWORD *)(v14 + 12) = v16;
  uint64_t v4 = (v4 + v16 + 2);
  if ((*((_DWORD *)this + 12) & 0x10) != 0)
  {
LABEL_37:
    uint64_t v17 = *((void *)this + 4);
    if (!v17) {
      uint64_t v17 = *(void *)(proto::gnss::Emergency::Init::default_instance_ + 32);
    }
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000570FC(v17, a2);
    int v20 = (int)v18;
    if (v18 >= 0x80) {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, v19);
    }
    else {
      int v21 = 1;
    }
    uint64_t v4 = (v4 + v20 + v21 + 1);
  }
LABEL_43:
  *((_DWORD *)this + 11) = v4;
  return v4;
}

void sub_10005808C(proto::gnss::Emergency::Init *a1, void *lpsrc)
{
  proto::gnss::Emergency::Init::MergeFrom(a1, (const proto::gnss::Emergency::Init *)lpsrc);
}

uint64_t sub_100058130()
{
  return 1;
}

void *sub_100058138@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.Init");
}

proto::gnss::Emergency::SuplContext *proto::gnss::Emergency::SuplContext::SuplContext(proto::gnss::Emergency::SuplContext *this, const proto::gnss::Emergency::SuplContext *a2)
{
  *(void *)this = &off_100108930;
  *((void *)this + 1) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *((void *)this + 2) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *((void *)this + 6) = 0;
  proto::gnss::Emergency::SuplContext::MergeFrom(this, a2);
  return this;
}

void sub_1000581A0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void proto::gnss::Emergency::SuplContext::MergeFrom(proto::gnss::Emergency::SuplContext *this, const proto::gnss::Emergency::SuplContext *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  int v4 = *((_DWORD *)a2 + 13);
  if (!(_BYTE)v4) {
    goto LABEL_14;
  }
  if (v4)
  {
    int v5 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 13) |= 1u;
    *((_DWORD *)this + 8) = v5;
    int v4 = *((_DWORD *)a2 + 13);
  }
  if ((v4 & 2) != 0)
  {
    int v8 = (const std::string *)*((void *)a2 + 1);
    *((_DWORD *)this + 13) |= 2u;
    int v9 = (std::string *)*((void *)this + 1);
    if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v9, v8);
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 4) == 0)
    {
LABEL_8:
      if ((v4 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_8;
  }
  char v10 = *((unsigned char *)a2 + 36);
  *((_DWORD *)this + 13) |= 4u;
  *((unsigned char *)this + 36) = v10;
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 8) == 0)
  {
LABEL_9:
    if ((v4 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_21:
  unsigned int v11 = (const std::string *)*((void *)a2 + 2);
  *((_DWORD *)this + 13) |= 8u;
  int v12 = (std::string *)*((void *)this + 2);
  if (v12 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v12, v11);
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x10) == 0)
  {
LABEL_10:
    if ((v4 & 0x20) == 0) {
      goto LABEL_11;
    }
LABEL_29:
    int v15 = (const std::string *)*((void *)a2 + 5);
    *((_DWORD *)this + 13) |= 0x20u;
    int v16 = (std::string *)*((void *)this + 5);
    if (v16 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v16, v15);
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x40) == 0)
    {
LABEL_12:
      if ((v4 & 0x80) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_24:
  *((_DWORD *)this + 13) |= 0x10u;
  uint64_t v13 = *((void *)this + 3);
  if (!v13) {
    operator new();
  }
  uint64_t v14 = *((void *)a2 + 3);
  if (!v14) {
    uint64_t v14 = *(void *)(proto::gnss::Emergency::SuplContext::default_instance_ + 24);
  }
  sub_10004EE10(v13, v14);
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_11:
  if ((v4 & 0x40) == 0) {
    goto LABEL_12;
  }
LABEL_32:
  char v17 = *((unsigned char *)a2 + 37);
  *((_DWORD *)this + 13) |= 0x40u;
  *((unsigned char *)this + 37) = v17;
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x80) != 0)
  {
LABEL_13:
    char v6 = *((unsigned char *)a2 + 38);
    *((_DWORD *)this + 13) |= 0x80u;
    *((unsigned char *)this + 38) = v6;
    int v4 = *((_DWORD *)a2 + 13);
  }
LABEL_14:
  if ((v4 & 0x100) != 0)
  {
    char v7 = *((unsigned char *)a2 + 39);
    *((_DWORD *)this + 13) |= 0x100u;
    *((unsigned char *)this + 39) = v7;
  }
}

void sub_100058448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *proto::gnss::Emergency::SuplContext::SharedDtor(void *this)
{
  uint64_t v1 = this[1];
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  uint64_t v3 = this[2];
  if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  uint64_t v5 = this[5];
  if ((_UNKNOWN *)v5 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    operator delete();
  }
  if ((void *)proto::gnss::Emergency::SuplContext::default_instance_ != this)
  {
    this = (void *)this[3];
    if (this)
    {
      char v7 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v7();
    }
  }
  return this;
}

void proto::gnss::Emergency::SuplContext::~SuplContext(proto::gnss::Emergency::SuplContext *this)
{
  *(void *)this = &off_100108930;
  proto::gnss::Emergency::SuplContext::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000585E4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &off_100108930;
  proto::gnss::Emergency::SuplContext::SharedDtor(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10005864C()
{
}

uint64_t proto::gnss::Emergency::SuplContext::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 52);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(this + 32) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 8);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(unsigned char *)(this + 36) = 0;
    if ((*(unsigned char *)(this + 52) & 8) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    int v4 = *(_DWORD *)(this + 52);
    if ((v4 & 0x10) != 0)
    {
      uint64_t v5 = *(void *)(this + 24);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 24))
        {
          *(_WORD *)(v5 + 16) = 0;
          *(void *)(v5 + 8) = 0;
        }
        *(_DWORD *)(v5 + 24) = 0;
        int v4 = *(_DWORD *)(this + 52);
      }
    }
    if ((v4 & 0x20) != 0)
    {
      uint64_t v6 = *(void *)(this + 40);
      if ((_UNKNOWN *)v6 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(unsigned char **)uint64_t v6 = 0;
          *(void *)(v6 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v6 = 0;
          *(unsigned char *)(v6 + 23) = 0;
        }
      }
    }
    *(_WORD *)(this + 37) = 0;
    int v1 = *(_DWORD *)(this + 52);
  }
  if ((v1 & 0xFF00) != 0) {
    *(unsigned char *)(this + 39) = 0;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t proto::gnss::Emergency::SuplContext::MergePartialFromCodedStream(proto::gnss::Emergency::SuplContext *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 32);
  while (2)
  {
    uint64_t v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        char v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          unsigned int v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v5 = *v10;
          unsigned int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        int v12 = *((_DWORD *)this + 13) | 1;
        *((_DWORD *)this + 13) = v12;
        if ((unint64_t)v11 < v9 && *v11 == 18)
        {
          *((void *)a2 + 1) = v11 + 1;
          goto LABEL_37;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_28;
        }
        int v12 = *((_DWORD *)this + 13);
LABEL_37:
        *((_DWORD *)this + 13) = v12 | 2;
        if (*((_UNKNOWN **)this + 1) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v21 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v21 >= v13 || *v21 != 24) {
          continue;
        }
        uint64_t v14 = v21 + 1;
        *((void *)a2 + 1) = v14;
LABEL_43:
        unsigned int v42 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v42);
          if (!result) {
            return result;
          }
          unsigned int v22 = v42;
          unsigned int v23 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v22 = *v14;
          unsigned int v23 = v14 + 1;
          *((void *)a2 + 1) = v23;
        }
        *((unsigned char *)this + 36) = v22 != 0;
        int v15 = *((_DWORD *)this + 13) | 4;
        *((_DWORD *)this + 13) = v15;
        if ((unint64_t)v23 >= v13 || *v23 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v23 + 1;
LABEL_51:
        *((_DWORD *)this + 13) = v15 | 8;
        if (*((_UNKNOWN **)this + 2) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v24 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v24 + 1;
LABEL_57:
        *((_DWORD *)this + 13) |= 0x10u;
        uint64_t v25 = *((void *)this + 3);
        if (!v25) {
          operator new();
        }
        unsigned int v42 = 0;
        int v26 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v42))return 0; {
        }
          }
        else
        {
          unsigned int v42 = *v26;
          *((void *)a2 + 1) = v26 + 1;
        }
        int v27 = *((_DWORD *)a2 + 14);
        int v28 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v27 + 1;
        if (v27 < v28)
        {
          int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v42);
          if (sub_10004EFD8(v25, a2, v30))
          {
            if (*((unsigned char *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v29);
              int v31 = *((_DWORD *)a2 + 14);
              BOOL v32 = __OFSUB__(v31, 1);
              int v33 = v31 - 1;
              if (v33 < 0 == v32) {
                *((_DWORD *)a2 + 14) = v33;
              }
              int v34 = (unsigned char *)*((void *)a2 + 1);
              if ((unint64_t)v34 < *((void *)a2 + 2) && *v34 == 50)
              {
                *((void *)a2 + 1) = v34 + 1;
LABEL_71:
                *((_DWORD *)this + 13) |= 0x20u;
                if (*((_UNKNOWN **)this + 5) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
                  operator new();
                }
                uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
                if (!result) {
                  return result;
                }
                int v35 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v16 = *((void *)a2 + 2);
                if ((unint64_t)v35 < v16 && *v35 == 56)
                {
                  char v17 = v35 + 1;
                  *((void *)a2 + 1) = v17;
LABEL_77:
                  unsigned int v42 = 0;
                  if ((unint64_t)v17 >= v16 || *v17 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v42);
                    if (!result) {
                      return result;
                    }
                    unsigned int v36 = v42;
                    int v37 = (unsigned char *)*((void *)a2 + 1);
                    unint64_t v16 = *((void *)a2 + 2);
                  }
                  else
                  {
                    unsigned int v36 = *v17;
                    int v37 = v17 + 1;
                    *((void *)a2 + 1) = v37;
                  }
                  *((unsigned char *)this + 37) = v36 != 0;
                  *((_DWORD *)this + 13) |= 0x40u;
                  if ((unint64_t)v37 < v16 && *v37 == 64)
                  {
                    int v18 = v37 + 1;
                    *((void *)a2 + 1) = v18;
LABEL_85:
                    unsigned int v42 = 0;
                    if ((unint64_t)v18 >= v16 || *v18 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v42);
                      if (!result) {
                        return result;
                      }
                      unsigned int v38 = v42;
                      int v39 = (unsigned char *)*((void *)a2 + 1);
                      unint64_t v16 = *((void *)a2 + 2);
                    }
                    else
                    {
                      unsigned int v38 = *v18;
                      int v39 = v18 + 1;
                      *((void *)a2 + 1) = v39;
                    }
                    *((unsigned char *)this + 38) = v38 != 0;
                    *((_DWORD *)this + 13) |= 0x80u;
                    if ((unint64_t)v39 < v16 && *v39 == 72)
                    {
                      unsigned int v19 = v39 + 1;
                      *((void *)a2 + 1) = v19;
LABEL_93:
                      unsigned int v42 = 0;
                      if ((unint64_t)v19 >= v16 || *v19 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v42);
                        if (!result) {
                          return result;
                        }
                        unsigned int v40 = v42;
                        uint64_t v41 = (unsigned __int8 *)*((void *)a2 + 1);
                        unint64_t v16 = *((void *)a2 + 2);
                      }
                      else
                      {
                        unsigned int v40 = *v19;
                        uint64_t v41 = (unsigned __int8 *)(v19 + 1);
                        *((void *)a2 + 1) = v41;
                      }
                      *((unsigned char *)this + 39) = v40 != 0;
                      *((_DWORD *)this + 13) |= 0x100u;
                      if (v41 == (unsigned __int8 *)v16
                        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                      {
                        *((_DWORD *)a2 + 8) = 0;
                        uint64_t result = 1;
                        *((unsigned char *)a2 + 36) = 1;
                        return result;
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_43;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_28;
        }
        int v15 = *((_DWORD *)this + 13);
        goto LABEL_51;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_57;
        }
        goto LABEL_28;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_71;
        }
        goto LABEL_28;
      case 7u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        char v17 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_77;
      case 8u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_85;
      case 9u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v19 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_93;
      default:
        int v8 = TagFallback & 7;
LABEL_28:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100058DB4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 32), a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 36), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_15:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::SuplContext::default_instance_ + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_20:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 38), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 52) & 0x100) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 37), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x80) != 0) {
    goto LABEL_20;
  }
LABEL_9:
  if ((v6 & 0x100) == 0) {
    return result;
  }
LABEL_21:
  int v8 = *(unsigned __int8 *)(v5 + 39);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v8, (BOOL)a2, a4);
}

uint64_t proto::gnss::Emergency::SuplContext::ByteSize(proto::gnss::Emergency::SuplContext *this, unsigned int a2)
{
  int v3 = *((_DWORD *)this + 13);
  if (!(_BYTE)v3)
  {
    unsigned int v5 = 0;
    goto LABEL_57;
  }
  if (v3)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if (v6 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      int v3 = *((_DWORD *)this + 13);
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_19;
    }
  }
  uint64_t v7 = *((void *)this + 1);
  int v8 = *(unsigned __int8 *)(v7 + 23);
  char v9 = v8;
  uint64_t v10 = *(void *)(v7 + 8);
  if ((v8 & 0x80u) == 0) {
    unint64_t v11 = *(unsigned __int8 *)(v7 + 23);
  }
  else {
    unint64_t v11 = v10;
  }
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v10 = *(void *)(v7 + 8);
    int v3 = *((_DWORD *)this + 13);
    char v9 = *(unsigned char *)(v7 + 23);
  }
  else
  {
    int v12 = 1;
  }
  if (v9 < 0) {
    int v8 = v10;
  }
  v4 += v12 + v8 + 1;
LABEL_19:
  if ((v3 & 4) != 0) {
    v4 += 2;
  }
  if ((v3 & 8) == 0)
  {
    if ((v3 & 0x10) == 0) {
      goto LABEL_23;
    }
LABEL_34:
    uint64_t v19 = *((void *)this + 3);
    if (!v19) {
      uint64_t v19 = *(void *)(proto::gnss::Emergency::SuplContext::default_instance_ + 24);
    }
    int v20 = *(_DWORD *)(v19 + 24);
    int v21 = 2 * (v20 & 1);
    if ((v20 & 2) != 0) {
      v21 += 2;
    }
    if ((v20 & 4) != 0) {
      v21 |= 9u;
    }
    if (*(_DWORD *)(v19 + 24)) {
      int v22 = v21;
    }
    else {
      int v22 = 0;
    }
    *(_DWORD *)(v19 + 20) = v22;
    v4 += v22 + 2;
    int v3 = *((_DWORD *)this + 13);
    if ((v3 & 0x20) == 0) {
      goto LABEL_53;
    }
    goto LABEL_44;
  }
  uint64_t v13 = *((void *)this + 2);
  int v14 = *(unsigned __int8 *)(v13 + 23);
  char v15 = v14;
  uint64_t v16 = *(void *)(v13 + 8);
  if ((v14 & 0x80u) == 0) {
    unint64_t v17 = *(unsigned __int8 *)(v13 + 23);
  }
  else {
    unint64_t v17 = v16;
  }
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17, a2);
    int v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v16 = *(void *)(v13 + 8);
    int v3 = *((_DWORD *)this + 13);
    char v15 = *(unsigned char *)(v13 + 23);
  }
  else
  {
    int v18 = 1;
  }
  if (v15 < 0) {
    int v14 = v16;
  }
  v4 += v18 + v14 + 1;
  if ((v3 & 0x10) != 0) {
    goto LABEL_34;
  }
LABEL_23:
  if ((v3 & 0x20) != 0)
  {
LABEL_44:
    uint64_t v23 = *((void *)this + 5);
    int v24 = *(unsigned __int8 *)(v23 + 23);
    char v25 = v24;
    uint64_t v26 = *(void *)(v23 + 8);
    if ((v24 & 0x80u) == 0) {
      unint64_t v27 = *(unsigned __int8 *)(v23 + 23);
    }
    else {
      unint64_t v27 = v26;
    }
    if (v27 >= 0x80)
    {
      int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v27, a2);
      int v24 = *(unsigned __int8 *)(v23 + 23);
      uint64_t v26 = *(void *)(v23 + 8);
      int v3 = *((_DWORD *)this + 13);
      char v25 = *(unsigned char *)(v23 + 23);
    }
    else
    {
      int v28 = 1;
    }
    if (v25 < 0) {
      int v24 = v26;
    }
    v4 += v28 + v24 + 1;
  }
LABEL_53:
  unsigned int v5 = v4 + 2;
  if ((v3 & 0x40) == 0) {
    unsigned int v5 = v4;
  }
  if ((v3 & 0x80) != 0) {
    v5 += 2;
  }
LABEL_57:
  if ((v3 & 0x100) != 0) {
    uint64_t result = v5 + 2;
  }
  else {
    uint64_t result = v5;
  }
  *((_DWORD *)this + 12) = result;
  return result;
}

void sub_100059104(proto::gnss::Emergency::SuplContext *a1, void *lpsrc)
{
  proto::gnss::Emergency::SuplContext::MergeFrom(a1, (const proto::gnss::Emergency::SuplContext *)lpsrc);
}

uint64_t sub_1000591A8()
{
  return 1;
}

void *sub_1000591B0@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.SuplContext");
}

void proto::gnss::Emergency::SessionStatus::MergeFrom(proto::gnss::Emergency::SessionStatus *this, const proto::gnss::Emergency::SessionStatus *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }
  int v4 = *((_DWORD *)a2 + 26);
  if (!(_BYTE)v4) {
    goto LABEL_20;
  }
  if (v4)
  {
    int v5 = *((_DWORD *)a2 + 2);
    *((_DWORD *)this + 26) |= 1u;
    *((_DWORD *)this + 2) = v5;
    int v4 = *((_DWORD *)a2 + 26);
  }
  if ((v4 & 2) != 0)
  {
    unsigned int v6 = *((_DWORD *)a2 + 3);
    if (v6 >= 0x12) {
      __assert_rtn("set_pos_method", "GnssEmergencyTypes.pb.h", 15524, "::proto::gnss::Emergency::PositionMethod_IsValid(value)");
    }
    *((_DWORD *)this + 26) |= 2u;
    *((_DWORD *)this + 3) = v6;
    int v4 = *((_DWORD *)a2 + 26);
  }
  if ((v4 & 4) != 0)
  {
    unsigned int v7 = *((_DWORD *)a2 + 4);
    if (v7 >= 0x21) {
      __assert_rtn("set_status", "GnssEmergencyTypes.pb.h", 15547, "::proto::gnss::Emergency::Status_IsValid(value)");
    }
    *((_DWORD *)this + 26) |= 4u;
    *((_DWORD *)this + 4) = v7;
    int v4 = *((_DWORD *)a2 + 26);
  }
  if ((v4 & 8) != 0)
  {
    unsigned int v8 = *((_DWORD *)a2 + 5);
    if (v8 >= 0x18) {
      __assert_rtn("set_end_cause", "GnssEmergencyTypes.pb.h", 15570, "::proto::gnss::Emergency::EndCause_IsValid(value)");
    }
    *((_DWORD *)this + 26) |= 8u;
    *((_DWORD *)this + 5) = v8;
    int v4 = *((_DWORD *)a2 + 26);
  }
  if ((v4 & 0x10) == 0)
  {
    if ((v4 & 0x20) == 0) {
      goto LABEL_17;
    }
LABEL_48:
    uint64_t v21 = *((void *)a2 + 4);
    *((_DWORD *)this + 26) |= 0x20u;
    *((void *)this + 4) = v21;
    int v4 = *((_DWORD *)a2 + 26);
    if ((v4 & 0x40) == 0)
    {
LABEL_18:
      if ((v4 & 0x80) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
    goto LABEL_49;
  }
  uint64_t v20 = *((void *)a2 + 3);
  *((_DWORD *)this + 26) |= 0x10u;
  *((void *)this + 3) = v20;
  int v4 = *((_DWORD *)a2 + 26);
  if ((v4 & 0x20) != 0) {
    goto LABEL_48;
  }
LABEL_17:
  if ((v4 & 0x40) == 0) {
    goto LABEL_18;
  }
LABEL_49:
  uint64_t v22 = *((void *)a2 + 5);
  *((_DWORD *)this + 26) |= 0x40u;
  *((void *)this + 5) = v22;
  int v4 = *((_DWORD *)a2 + 26);
  if ((v4 & 0x80) != 0)
  {
LABEL_19:
    uint64_t v9 = *((void *)a2 + 6);
    *((_DWORD *)this + 26) |= 0x80u;
    *((void *)this + 6) = v9;
    int v4 = *((_DWORD *)a2 + 26);
  }
LABEL_20:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t v10 = *((void *)a2 + 7);
    *((_DWORD *)this + 26) |= 0x100u;
    *((void *)this + 7) = v10;
    int v4 = *((_DWORD *)a2 + 26);
    if ((v4 & 0x200) == 0)
    {
LABEL_23:
      if ((v4 & 0x400) == 0) {
        goto LABEL_24;
      }
      goto LABEL_32;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_23;
  }
  uint64_t v11 = *((void *)a2 + 8);
  *((_DWORD *)this + 26) |= 0x200u;
  *((void *)this + 8) = v11;
  int v4 = *((_DWORD *)a2 + 26);
  if ((v4 & 0x400) == 0)
  {
LABEL_24:
    if ((v4 & 0x800) == 0) {
      goto LABEL_25;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v12 = *((void *)a2 + 9);
  *((_DWORD *)this + 26) |= 0x400u;
  *((void *)this + 9) = v12;
  int v4 = *((_DWORD *)a2 + 26);
  if ((v4 & 0x800) == 0)
  {
LABEL_25:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_34;
  }
LABEL_33:
  char v13 = *((unsigned char *)a2 + 96);
  *((_DWORD *)this + 26) |= 0x800u;
  *((unsigned char *)this + 96) = v13;
  int v4 = *((_DWORD *)a2 + 26);
  if ((v4 & 0x1000) == 0)
  {
LABEL_26:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_35;
  }
LABEL_34:
  char v14 = *((unsigned char *)a2 + 97);
  *((_DWORD *)this + 26) |= 0x1000u;
  *((unsigned char *)this + 97) = v14;
  int v4 = *((_DWORD *)a2 + 26);
  if ((v4 & 0x2000) == 0)
  {
LABEL_27:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_36;
  }
LABEL_35:
  char v15 = *((unsigned char *)a2 + 98);
  *((_DWORD *)this + 26) |= 0x2000u;
  *((unsigned char *)this + 98) = v15;
  int v4 = *((_DWORD *)a2 + 26);
  if ((v4 & 0x4000) == 0)
  {
LABEL_28:
    if ((v4 & 0x8000) == 0) {
      return;
    }
    goto LABEL_41;
  }
LABEL_36:
  *((_DWORD *)this + 26) |= 0x4000u;
  uint64_t v16 = *((void *)this + 10);
  if (!v16) {
    operator new();
  }
  uint64_t v17 = *((void *)a2 + 10);
  if (!v17) {
    uint64_t v17 = *(void *)(proto::gnss::Emergency::SessionStatus::default_instance_ + 80);
  }
  sub_10005A62C(v16, v17);
  if ((*((_DWORD *)a2 + 26) & 0x8000) != 0)
  {
LABEL_41:
    *((_DWORD *)this + 26) |= 0x8000u;
    uint64_t v18 = *((void *)this + 11);
    if (!v18) {
      operator new();
    }
    uint64_t v19 = *((void *)a2 + 11);
    if (!v19) {
      uint64_t v19 = *(void *)(proto::gnss::Emergency::SessionStatus::default_instance_ + 88);
    }
    sub_10005A798(v18, v19);
  }
}

void sub_100059560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100059578(void *result)
{
  if ((void *)proto::gnss::Emergency::SessionStatus::default_instance_ != result)
  {
    int v1 = result;
    uint64_t v2 = result[10];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[11];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_100059618(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1001089A8;
  sub_100059578(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10005966C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1001089A8;
  sub_100059578(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000596D4()
{
}

uint64_t proto::gnss::Emergency::SessionStatus::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 104);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(this + 40) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_WORD *)(this + 96) = 0;
    *(unsigned char *)(this + 98) = 0;
    *(void *)(this + 64) = 0;
    *(void *)(this + 72) = 0;
    *(void *)(this + 56) = 0;
    if ((v1 & 0x4000) != 0)
    {
      uint64_t v2 = *(void *)(this + 80);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 60))
        {
          *(_OWORD *)(v2 + 40) = 0u;
          *(_OWORD *)(v2 + 24) = 0u;
          *(_OWORD *)(v2 + 8) = 0u;
        }
        *(_DWORD *)(v2 + 60) = 0;
        int v1 = *(_DWORD *)(this + 104);
      }
    }
    if ((v1 & 0x8000) != 0)
    {
      uint64_t v3 = *(void *)(this + 88);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 28))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
      }
    }
  }
  *(_DWORD *)(this + 104) = 0;
  return this;
}

uint64_t sub_1000597C0(uint64_t result)
{
  if (*(unsigned char *)(result + 60))
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  *(_DWORD *)(result + 60) = 0;
  return result;
}

uint64_t sub_1000597E0(uint64_t result)
{
  if (*(unsigned char *)(result + 28))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t proto::gnss::Emergency::SessionStatus::MergePartialFromCodedStream(proto::gnss::Emergency::SessionStatus *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  int v5 = (unsigned int *)((char *)this + 8);
  while (2)
  {
    unsigned int v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v5 = *v10;
          uint64_t v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 26) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          uint64_t v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
          goto LABEL_50;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        uint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_50:
        v60[0] = 0;
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v60);
          if (!result) {
            return result;
          }
          unsigned int v23 = v60[0];
        }
        else
        {
          unsigned int v23 = *v12;
          *((void *)a2 + 1) = v12 + 1;
        }
        if (v23 <= 0x11)
        {
          *((_DWORD *)this + 26) |= 2u;
          *((_DWORD *)this + 3) = v23;
        }
        int v24 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v24 >= v13 || *v24 != 24) {
          continue;
        }
        char v14 = v24 + 1;
        *((void *)a2 + 1) = v14;
LABEL_60:
        v60[0] = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v60);
          if (!result) {
            return result;
          }
          unsigned int v25 = v60[0];
        }
        else
        {
          unsigned int v25 = *v14;
          *((void *)a2 + 1) = v14 + 1;
        }
        if (v25 <= 0x20)
        {
          *((_DWORD *)this + 26) |= 4u;
          *((_DWORD *)this + 4) = v25;
        }
        uint64_t v26 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v26 >= v15 || *v26 != 32) {
          continue;
        }
        uint64_t v16 = v26 + 1;
        *((void *)a2 + 1) = v16;
LABEL_70:
        v60[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v60);
          if (!result) {
            return result;
          }
          unsigned int v27 = v60[0];
        }
        else
        {
          unsigned int v27 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        if (v27 <= 0x17)
        {
          *((_DWORD *)this + 26) |= 8u;
          *((_DWORD *)this + 5) = v27;
        }
        int v28 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_80:
        *(void *)uint64_t v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v60) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v60;
        }
        *((_DWORD *)this + 26) |= 0x10u;
        int v29 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v29 >= *((void *)a2 + 2) || *v29 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v29 + 1;
LABEL_84:
        *(void *)uint64_t v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v60) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v60;
        }
        *((_DWORD *)this + 26) |= 0x20u;
        unsigned int v30 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v30 + 1;
LABEL_88:
        *(void *)uint64_t v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v60) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v60;
        }
        *((_DWORD *)this + 26) |= 0x40u;
        int v31 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v31 >= *((void *)a2 + 2) || *v31 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v31 + 1;
LABEL_92:
        *(void *)uint64_t v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v60) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v60;
        }
        *((_DWORD *)this + 26) |= 0x80u;
        BOOL v32 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v32 >= *((void *)a2 + 2) || *v32 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v32 + 1;
LABEL_96:
        *(void *)uint64_t v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v60) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v60;
        }
        *((_DWORD *)this + 26) |= 0x100u;
        int v33 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v33 >= *((void *)a2 + 2) || *v33 != 81) {
          continue;
        }
        *((void *)a2 + 1) = v33 + 1;
LABEL_100:
        *(void *)uint64_t v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v60) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v60;
        }
        *((_DWORD *)this + 26) |= 0x200u;
        int v34 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v34 >= *((void *)a2 + 2) || *v34 != 89) {
          continue;
        }
        *((void *)a2 + 1) = v34 + 1;
LABEL_104:
        *(void *)uint64_t v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v60) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v60;
        }
        *((_DWORD *)this + 26) |= 0x400u;
        int v35 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        if ((unint64_t)v35 >= v17 || *v35 != 96) {
          continue;
        }
        uint64_t v18 = v35 + 1;
        *((void *)a2 + 1) = v18;
LABEL_108:
        v60[0] = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v60);
          if (!result) {
            return result;
          }
          unsigned int v36 = v60[0];
          int v37 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v36 = *v18;
          int v37 = v18 + 1;
          *((void *)a2 + 1) = v37;
        }
        *((unsigned char *)this + 96) = v36 != 0;
        *((_DWORD *)this + 26) |= 0x800u;
        if ((unint64_t)v37 >= v17 || *v37 != 104) {
          continue;
        }
        uint64_t v19 = v37 + 1;
        *((void *)a2 + 1) = v19;
LABEL_116:
        v60[0] = 0;
        if ((unint64_t)v19 >= v17 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v60);
          if (!result) {
            return result;
          }
          unsigned int v38 = v60[0];
          int v39 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v38 = *v19;
          int v39 = v19 + 1;
          *((void *)a2 + 1) = v39;
        }
        *((unsigned char *)this + 97) = v38 != 0;
        *((_DWORD *)this + 26) |= 0x1000u;
        if ((unint64_t)v39 >= v17 || *v39 != 112) {
          continue;
        }
        uint64_t v20 = v39 + 1;
        *((void *)a2 + 1) = v20;
LABEL_124:
        v60[0] = 0;
        if ((unint64_t)v20 >= v17 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v60);
          if (!result) {
            return result;
          }
          unsigned int v40 = v60[0];
          uint64_t v41 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v40 = *v20;
          uint64_t v41 = v20 + 1;
          *((void *)a2 + 1) = v41;
        }
        *((unsigned char *)this + 98) = v40 != 0;
        int v21 = *((_DWORD *)this + 26) | 0x2000;
        *((_DWORD *)this + 26) = v21;
        if ((unint64_t)v41 >= v17 || *v41 != 122) {
          continue;
        }
        *((void *)a2 + 1) = v41 + 1;
LABEL_132:
        *((_DWORD *)this + 26) = v21 | 0x4000;
        uint64_t v42 = *((void *)this + 10);
        if (!v42) {
          operator new();
        }
        v60[0] = 0;
        int v43 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v43 >= *((void *)a2 + 2) || *v43 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v60))return 0; {
        }
          }
        else
        {
          v60[0] = *v43;
          *((void *)a2 + 1) = v43 + 1;
        }
        int v44 = *((_DWORD *)a2 + 14);
        int v45 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v44 + 1;
        if (v44 >= v45) {
          return 0;
        }
        int v46 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v60[0]);
        if (!sub_100086E0C(v42, a2, v47) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v46);
        int v48 = *((_DWORD *)a2 + 14);
        BOOL v49 = __OFSUB__(v48, 1);
        int v50 = v48 - 1;
        if (v50 < 0 == v49) {
          *((_DWORD *)a2 + 14) = v50;
        }
        off_t v51 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v51 <= 1 || *v51 != 130 || v51[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v51 + 2;
LABEL_147:
        *((_DWORD *)this + 26) |= 0x8000u;
        uint64_t v52 = *((void *)this + 11);
        if (!v52) {
          operator new();
        }
        v60[0] = 0;
        uint64_t v53 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v53 >= *((void *)a2 + 2) || *v53 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v60))return 0; {
        }
          }
        else
        {
          v60[0] = *v53;
          *((void *)a2 + 1) = v53 + 1;
        }
        int v54 = *((_DWORD *)a2 + 14);
        int v55 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v54 + 1;
        if (v54 < v55)
        {
          int v56 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v60[0]);
          if (sub_1000874E0(v52, a2, v57))
          {
            if (*((unsigned char *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v56);
              int v58 = *((_DWORD *)a2 + 14);
              BOOL v49 = __OFSUB__(v58, 1);
              int v59 = v58 - 1;
              if (v59 < 0 == v49) {
                *((_DWORD *)a2 + 14) = v59;
              }
              if (*((void *)a2 + 1) == *((void *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)a2 + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        char v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_60;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        uint64_t v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_70;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_80;
        }
        goto LABEL_42;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_84;
        }
        goto LABEL_42;
      case 7u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_88;
        }
        goto LABEL_42;
      case 8u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_92;
        }
        goto LABEL_42;
      case 9u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_96;
        }
        goto LABEL_42;
      case 0xAu:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_100;
        }
        goto LABEL_42;
      case 0xBu:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_104;
        }
        goto LABEL_42;
      case 0xCu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        uint64_t v18 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_108;
      case 0xDu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        uint64_t v19 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_116;
      case 0xEu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        uint64_t v20 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_124;
      case 0xFu:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_42;
        }
        int v21 = *((_DWORD *)this + 26);
        goto LABEL_132;
      case 0x10u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_42;
        }
        goto LABEL_147;
      default:
        int v8 = TagFallback & 7;
LABEL_42:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10005A148(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 104);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 104);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned __int8 *)(v5 + 96), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned __int8 *)(v5 + 97), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned __int8 *)(v5 + 98), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      return result;
    }
    goto LABEL_35;
  }
LABEL_32:
  uint64_t v7 = *(void *)(v5 + 80);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::SessionStatus::default_instance_ + 80);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 104) & 0x8000) != 0)
  {
LABEL_35:
    uint64_t v8 = *(void *)(v5 + 88);
    if (!v8) {
      uint64_t v8 = *(void *)(proto::gnss::Emergency::SessionStatus::default_instance_ + 88);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v8, a2, a4);
  }
  return result;
}

uint64_t proto::gnss::Emergency::SessionStatus::ByteSize(proto::gnss::Emergency::SessionStatus *this, unsigned int a2)
{
  int v3 = *((_DWORD *)this + 26);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    goto LABEL_40;
  }
  if (v3)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if (v6 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      int v3 = *((_DWORD *)this + 26);
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if ((v7 & 0x80000000) != 0)
  {
    int v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    int v3 = *((_DWORD *)this + 26);
  }
  else
  {
    int v8 = 2;
  }
  v4 += v8;
LABEL_16:
  if ((v3 & 4) != 0)
  {
    unint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 11;
    }
    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *((_DWORD *)this + 26);
    }
    else
    {
      int v10 = 2;
    }
    v4 += v10;
    if ((v3 & 8) == 0) {
      goto LABEL_31;
    }
    goto LABEL_25;
  }
  if ((v3 & 8) != 0)
  {
LABEL_25:
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      int v3 = *((_DWORD *)this + 26);
    }
    else
    {
      int v12 = 2;
    }
    v4 += v12;
  }
LABEL_31:
  unsigned int v13 = v4 + 9;
  if ((v3 & 0x10) == 0) {
    unsigned int v13 = v4;
  }
  if ((v3 & 0x20) != 0) {
    v13 += 9;
  }
  if ((v3 & 0x40) != 0) {
    v13 += 9;
  }
  if ((v3 & 0x80) != 0) {
    uint64_t v5 = v13 + 9;
  }
  else {
    uint64_t v5 = v13;
  }
LABEL_40:
  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v14 = v5 + 9;
    if ((v3 & 0x100) == 0) {
      unsigned int v14 = v5;
    }
    if ((v3 & 0x200) != 0) {
      v14 += 9;
    }
    if ((v3 & 0x400) != 0) {
      v14 += 9;
    }
    if ((v3 & 0x800) != 0) {
      v14 += 2;
    }
    if ((v3 & 0x1000) != 0) {
      v14 += 2;
    }
    if ((v3 & 0x2000) != 0) {
      uint64_t v5 = v14 + 2;
    }
    else {
      uint64_t v5 = v14;
    }
    if ((v3 & 0x4000) != 0)
    {
      uint64_t v15 = *((void *)this + 10);
      if (!v15) {
        uint64_t v15 = *(void *)(proto::gnss::Emergency::SessionStatus::default_instance_ + 80);
      }
      uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000872A4(v15, a2);
      int v17 = (int)v16;
      if (v16 >= 0x80) {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
      }
      else {
        int v18 = 1;
      }
      uint64_t v5 = (v5 + v17 + v18 + 1);
      int v3 = *((_DWORD *)this + 26);
    }
    if ((v3 & 0x8000) != 0)
    {
      uint64_t v19 = *((void *)this + 11);
      if (!v19) {
        uint64_t v19 = *(void *)(proto::gnss::Emergency::SessionStatus::default_instance_ + 88);
      }
      uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100087774(v19, a2);
      int v22 = (int)v20;
      if (v20 >= 0x80) {
        int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, v21);
      }
      else {
        int v23 = 1;
      }
      uint64_t v5 = (v5 + v22 + v23 + 2);
    }
  }
  *((_DWORD *)this + 25) = v5;
  return v5;
}

void sub_10005A588(proto::gnss::Emergency::SessionStatus *a1, void *lpsrc)
{
  proto::gnss::Emergency::SessionStatus::MergeFrom(a1, (const proto::gnss::Emergency::SessionStatus *)lpsrc);
}

void sub_10005A62C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 60);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 60))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 60) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 60);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_15;
      }
    }
    else if ((*(unsigned char *)(a2 + 60) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 60) |= 2u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }
LABEL_15:
    uint64_t v8 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 60) |= 4u;
    *(void *)(a1 + 24) = v8;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }
LABEL_16:
    uint64_t v9 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 60) |= 8u;
    *(void *)(a1 + 32) = v9;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_18;
    }
LABEL_17:
    uint64_t v10 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 60) |= 0x10u;
    *(void *)(a1 + 40) = v10;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        return;
      }
      goto LABEL_11;
    }
LABEL_18:
    int v11 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 60) |= 0x20u;
    *(_DWORD *)(a1 + 48) = v11;
    if ((*(_DWORD *)(a2 + 60) & 0x40) == 0) {
      return;
    }
LABEL_11:
    int v5 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 60) |= 0x40u;
    *(_DWORD *)(a1 + 52) = v5;
  }
}

void sub_10005A780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005A798(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 28);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 28) |= 2u;
    *(_DWORD *)(a1 + 12) = v7;
    if ((*(_DWORD *)(a2 + 28) & 4) == 0) {
      return;
    }
LABEL_7:
    uint64_t v5 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 28) |= 4u;
    *(void *)(a1 + 16) = v5;
  }
}

void sub_10005A86C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005A884()
{
  return 1;
}

void *sub_10005A88C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.SessionStatus");
}

void sub_10005A89C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_10005A948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005A960(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108A20;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10005A980(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108A20;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10005A9D4()
{
}

uint64_t sub_10005AA20(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_10005AA34(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      int v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        unsigned int v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        unsigned int *v5 = *v12;
        unsigned int v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          unsigned int v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10005ABD4(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_10005AC40(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_10005ACD0(_DWORD *a1, void *lpsrc)
{
  sub_10005A89C(a1, (uint64_t)lpsrc);
}

uint64_t sub_10005AD74()
{
  return 1;
}

void *sub_10005AD7C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.ClsGpsCellTime");
}

void sub_10005AD8C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      uint64_t v5 = *(_DWORD **)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(proto::gnss::Emergency::ClsUtranCellTime::default_instance_ + 8);
      }
      sub_10005A89C(v5, v6);
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_16;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(_DWORD *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_17;
    }
LABEL_16:
    int v8 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(_DWORD *)(a1 + 20) = v8;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
LABEL_18:
      unsigned int v10 = *(_DWORD *)(a2 + 28);
      if (v10 >= 5) {
        __assert_rtn("set_modem_state", "GnssEmergencyTypes.pb.h", 16057, "::proto::gnss::Emergency::ClsModemState_IsValid(value)");
      }
      *(_DWORD *)(a1 + 36) |= 0x10u;
      *(_DWORD *)(a1 + 28) = v10;
      return;
    }
LABEL_17:
    int v9 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 8u;
    *(_DWORD *)(a1 + 24) = v9;
    if ((*(_DWORD *)(a2 + 36) & 0x10) == 0) {
      return;
    }
    goto LABEL_18;
  }
}

void sub_10005AF1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005AF34(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100108A98;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::ClsUtranCellTime::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10005AFC4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_10005AF34(a1);

  operator delete();
}

void sub_10005AFFC()
{
}

uint64_t sub_10005B050(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    if (*(unsigned char *)(result + 36))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 20)) {
          *(void *)(v1 + 8) = 0;
        }
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_10005B080(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 16);
  uint64_t v6 = (unsigned int *)(a1 + 20);
  int v7 = (unsigned int *)(a1 + 24);
  while (2)
  {
    int v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_22;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        int v11 = *(unsigned int **)(a1 + 8);
        if (!v11) {
          operator new();
        }
        unsigned int v32 = 0;
        int v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        int v18 = *((_DWORD *)this + 14);
        int v19 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v18 + 1;
        if (v18 >= v19) {
          return 0;
        }
        int v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
        if (!sub_10005AA34(v11, this, v21) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
        int v22 = *((_DWORD *)this + 14);
        BOOL v23 = __OFSUB__(v22, 1);
        int v24 = v22 - 1;
        if (v24 < 0 == v23) {
          *((_DWORD *)this + 14) = v24;
        }
        unsigned int v25 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v25 >= v13 || *v25 != 16) {
          continue;
        }
        unsigned int v14 = v25 + 1;
        *((void *)this + 1) = v14;
        goto LABEL_35;
      case 2u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
LABEL_35:
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v14;
          uint64_t v26 = v14 + 1;
          *((void *)this + 1) = v26;
        }
        *(_DWORD *)(a1 + 36) |= 2u;
        if ((unint64_t)v26 >= v13 || *v26 != 24) {
          continue;
        }
        uint64_t v15 = v26 + 1;
        *((void *)this + 1) = v15;
LABEL_43:
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v15;
          int v28 = v15 + 1;
          *((void *)this + 1) = v28;
        }
        *(_DWORD *)(a1 + 36) |= 4u;
        if ((unint64_t)v28 >= v13 || *v28 != 32) {
          continue;
        }
        uint64_t v16 = v28 + 1;
        *((void *)this + 1) = v16;
LABEL_51:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v16;
          int v29 = v16 + 1;
          *((void *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 36) |= 8u;
        if ((unint64_t)v29 >= v13 || *v29 != 40) {
          continue;
        }
        int v17 = v29 + 1;
        *((void *)this + 1) = v17;
LABEL_59:
        unsigned int v31 = 0;
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31);
          if (!result) {
            return result;
          }
          unsigned int v30 = v31;
        }
        else
        {
          unsigned int v30 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        if (v30 <= 4)
        {
          *(_DWORD *)(a1 + 36) |= 0x10u;
          *(_DWORD *)(a1 + 28) = v30;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_43;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_51;
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_59;
      default:
        int v10 = TagFallback & 7;
LABEL_22:
        if (v10 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_10005B478(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(proto::gnss::Emergency::ClsUtranCellTime::default_instance_ + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = v5[9];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], a2, a4);
  int v6 = v5[9];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_12:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], a2, a4);
    if ((v5[9] & 0x10) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], a2, a4);
  int v6 = v5[9];
  if ((v6 & 8) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_13:
  int v8 = v5[7];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, (int)a2, a4);
}

uint64_t sub_10005B54C(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_34;
  }
  if ((*(unsigned char *)(a1 + 36) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(proto::gnss::Emergency::ClsUtranCellTime::default_instance_ + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005AC40(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v4 = (v10 + v4);
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v12 = 2;
    }
    uint64_t v4 = (v12 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_34;
      }
      goto LABEL_28;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  unint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x10) != 0)
  {
LABEL_28:
    uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if ((v15 & 0x80000000) != 0)
    {
      int v16 = 11;
    }
    else if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    }
    else
    {
      int v16 = 2;
    }
    uint64_t v4 = (v16 + v4);
  }
LABEL_34:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_10005B688(uint64_t a1, void *lpsrc)
{
  sub_10005AD8C(a1, (uint64_t)lpsrc);
}

uint64_t sub_10005B72C()
{
  return 1;
}

void *sub_10005B734@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.ClsUtranCellTime");
}

void sub_10005B744(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 24);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v7;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return;
    }
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v5;
  }
}

void sub_10005B818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005B830(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108B10;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10005B850(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108B10;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10005B8A4()
{
}

uint64_t sub_10005B8F4(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_10005B90C(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  int v7 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v14;
          uint64_t v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        a1[6] |= 1u;
        if ((unint64_t)v15 < v12 && *v15 == 16)
        {
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_27;
        }
      }
      if (v10 != 2) {
        break;
      }
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      int v16 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_27:
      if ((unint64_t)v16 >= v12 || *v16 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!result) {
          return result;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        *int v6 = *v16;
        int v17 = v16 + 1;
        *((void *)this + 1) = v17;
      }
      a1[6] |= 2u;
      if ((unint64_t)v17 < v12 && *v17 == 24)
      {
        unint64_t v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_35:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v18 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v13;
          int v18 = (unsigned __int8 *)(v13 + 1);
          *((void *)this + 1) = v18;
        }
        a1[6] |= 4u;
        if (v18 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      int v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

int *sub_10005BB30(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[6];
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
    if ((v5[6] & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
  int v6 = v5[6];
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = v5[4];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_10005BBBC(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 24))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_10005BC74(_DWORD *a1, void *lpsrc)
{
  sub_10005B744(a1, (uint64_t)lpsrc);
}

uint64_t sub_10005BD18()
{
  return 1;
}

void *sub_10005BD20@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.Plmn");
}

void sub_10005BD30(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 8);
      if (v5 >= 6) {
        __assert_rtn("set_session_protocol", "GnssEmergencyTypes.pb.h", 16154, "::proto::gnss::Emergency::SessionProtocol_IsValid(value)");
      }
      a1[6] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 12);
      if (v6 >= 7) {
        __assert_rtn("set_pos_protocol", "GnssEmergencyTypes.pb.h", 16177, "::proto::gnss::Emergency::PosProtocol_IsValid(value)");
      }
      a1[6] |= 2u;
      a1[3] = v6;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 4) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 16);
      a1[6] |= 4u;
      a1[4] = v7;
    }
  }
}

void sub_10005BE48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005BE60(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108B88;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10005BE80(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108B88;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10005BED4()
{
}

uint64_t sub_10005BF24(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_10005BF3C(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int v5 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unsigned int v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v6;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v8 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v22 = 0;
        unint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v13 = v22;
        }
        else
        {
          unsigned int v13 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        if (v13 <= 5)
        {
          a1[6] |= 1u;
          a1[2] = v13;
        }
        int v16 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v16 < v14 && *v16 == 16)
        {
          uint64_t v15 = v16 + 1;
          *((void *)this + 1) = v15;
          goto LABEL_29;
        }
      }
      if (v8 != 2) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      uint64_t v15 = (char *)*((void *)this + 1);
      unint64_t v14 = *((void *)this + 2);
LABEL_29:
      unsigned int v21 = 0;
      if ((unint64_t)v15 >= v14 || *v15 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
        if (!result) {
          return result;
        }
        unsigned int v17 = v21;
      }
      else
      {
        unsigned int v17 = *v15;
        *((void *)this + 1) = v15 + 1;
      }
      if (v17 <= 6)
      {
        a1[6] |= 2u;
        a1[3] = v17;
      }
      int v18 = (unsigned char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v18 < v10 && *v18 == 24)
      {
        int v11 = v18 + 1;
        *((void *)this + 1) = v11;
LABEL_39:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v19 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v11;
          int v19 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v19;
        }
        a1[6] |= 4u;
        if (v19 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v8 == 3)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_39;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_19:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

int *sub_10005C178(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v5 = result;
  int v6 = result[6];
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
    if ((v5[6] & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
  int v6 = v5[6];
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = v5[4];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_10005C204(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_24;
  }
  if (*(unsigned char *)(a1 + 24))
  {
    unsigned int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_19;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_19:
  if ((v3 & 4) != 0)
  {
    unsigned int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
  }
LABEL_24:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_10005C2D8(_DWORD *a1, void *lpsrc)
{
  sub_10005BD30(a1, (uint64_t)lpsrc);
}

uint64_t sub_10005C37C()
{
  return 1;
}

void *sub_10005C384@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.SessionInfo");
}

void proto::gnss::Emergency::PositionRequest::MergeFrom(proto::gnss::Emergency::PositionRequest *this, const proto::gnss::Emergency::PositionRequest *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }
  int v4 = *((_DWORD *)a2 + 20);
  if (!(_BYTE)v4) {
    goto LABEL_16;
  }
  if (v4)
  {
    int v5 = *((_DWORD *)a2 + 2);
    *((_DWORD *)this + 20) |= 1u;
    *((_DWORD *)this + 2) = v5;
    int v4 = *((_DWORD *)a2 + 20);
  }
  if ((v4 & 2) != 0)
  {
    unsigned int v6 = *((_DWORD *)a2 + 3);
    if (v6 >= 5) {
      __assert_rtn("set_method", "GnssEmergencyTypes.pb.h", 16248, "::proto::gnss::Emergency::MethodType_IsValid(value)");
    }
    *((_DWORD *)this + 20) |= 2u;
    *((_DWORD *)this + 3) = v6;
    int v4 = *((_DWORD *)a2 + 20);
  }
  if ((v4 & 4) != 0)
  {
    int v17 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 20) |= 4u;
    *((_DWORD *)this + 4) = v17;
    int v4 = *((_DWORD *)a2 + 20);
    if ((v4 & 8) == 0)
    {
LABEL_11:
      if ((v4 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_40;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_11;
  }
  int v18 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 20) |= 8u;
  *((_DWORD *)this + 5) = v18;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x10) == 0)
  {
LABEL_12:
    if ((v4 & 0x20) == 0) {
      goto LABEL_13;
    }
LABEL_41:
    int v20 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 20) |= 0x20u;
    *((_DWORD *)this + 7) = v20;
    int v4 = *((_DWORD *)a2 + 20);
    if ((v4 & 0x40) == 0)
    {
LABEL_14:
      if ((v4 & 0x80) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
    goto LABEL_42;
  }
LABEL_40:
  int v19 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 20) |= 0x10u;
  *((_DWORD *)this + 6) = v19;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x20) != 0) {
    goto LABEL_41;
  }
LABEL_13:
  if ((v4 & 0x40) == 0) {
    goto LABEL_14;
  }
LABEL_42:
  int v21 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 20) |= 0x40u;
  *((_DWORD *)this + 8) = v21;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x80) != 0)
  {
LABEL_15:
    int v7 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 20) |= 0x80u;
    *((_DWORD *)this + 9) = v7;
    int v4 = *((_DWORD *)a2 + 20);
  }
LABEL_16:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_26;
  }
  if ((v4 & 0x100) != 0)
  {
    int v10 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 20) |= 0x100u;
    *((_DWORD *)this + 10) = v10;
    int v4 = *((_DWORD *)a2 + 20);
    if ((v4 & 0x200) == 0)
    {
LABEL_19:
      if ((v4 & 0x400) == 0) {
        goto LABEL_20;
      }
      goto LABEL_31;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_19;
  }
  int v11 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 20) |= 0x200u;
  *((_DWORD *)this + 11) = v11;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x400) == 0)
  {
LABEL_20:
    if ((v4 & 0x800) == 0) {
      goto LABEL_21;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v12 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 20) |= 0x400u;
  *((_DWORD *)this + 12) = v12;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x800) == 0)
  {
LABEL_21:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v13 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 20) |= 0x800u;
  *((_DWORD *)this + 13) = v13;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x1000) == 0)
  {
LABEL_22:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v14 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 20) |= 0x1000u;
  *((_DWORD *)this + 14) = v14;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x2000) == 0)
  {
LABEL_23:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v15 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 20) |= 0x2000u;
  *((_DWORD *)this + 15) = v15;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x4000) == 0)
  {
LABEL_24:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
LABEL_35:
  unsigned int v16 = *((_DWORD *)a2 + 16);
  if (v16 >= 7) {
    __assert_rtn("set_pos_protocol", "GnssEmergencyTypes.pb.h", 16535, "::proto::gnss::Emergency::PosProtocol_IsValid(value)");
  }
  *((_DWORD *)this + 20) |= 0x4000u;
  *((_DWORD *)this + 16) = v16;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x8000) != 0)
  {
LABEL_25:
    int v8 = *((_DWORD *)a2 + 17);
    *((_DWORD *)this + 20) |= 0x8000u;
    *((_DWORD *)this + 17) = v8;
    int v4 = *((_DWORD *)a2 + 20);
  }
LABEL_26:
  if ((v4 & 0x10000) != 0)
  {
    int v9 = *((_DWORD *)a2 + 18);
    *((_DWORD *)this + 20) |= 0x10000u;
    *((_DWORD *)this + 18) = v9;
  }
}

void sub_10005C678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005C690(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108C00;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10005C6B0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108C00;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10005C704()
{
}

uint64_t proto::gnss::Emergency::PositionRequest::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 80);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(this + 56) = 0u;
    *(_OWORD *)(this + 40) = 0u;
  }
  if ((v1 & 0xFF0000) != 0) {
    *(_DWORD *)(this + 72) = 0;
  }
  *(_DWORD *)(this + 80) = 0;
  return this;
}

uint64_t proto::gnss::Emergency::PositionRequest::MergePartialFromCodedStream(proto::gnss::Emergency::PositionRequest *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  int v59 = (unsigned int *)((char *)this + 16);
  uint64_t v60 = (unsigned int *)((char *)this + 20);
  unint64_t v61 = (unsigned int *)((char *)this + 24);
  unint64_t v62 = (unsigned int *)((char *)this + 28);
  int v5 = (unsigned int *)((char *)this + 32);
  unsigned int v6 = (unsigned int *)((char *)this + 36);
  int v7 = (unsigned int *)((char *)this + 40);
  int v8 = (unsigned int *)((char *)this + 44);
  int v9 = (unsigned int *)((char *)this + 48);
  int v10 = (unsigned int *)((char *)this + 52);
  int v11 = (unsigned int *)((char *)this + 56);
  int v12 = (unsigned int *)((char *)this + 60);
  int v58 = (unsigned int *)((char *)this + 68);
  int v56 = (unsigned int *)((char *)this + 8);
  unsigned int v57 = (unsigned int *)((char *)this + 72);
  while (2)
  {
    int v13 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v13;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v13 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        if ((unint64_t)v17 < v16 && (*v17 & 0x80000000) == 0)
        {
          unsigned int *v56 = *v17;
          int v18 = v17 + 1;
          *((void *)a2 + 1) = v18;
LABEL_50:
          *((_DWORD *)this + 20) |= 1u;
          if ((unint64_t)v18 < v16 && *v18 == 16)
          {
            int v19 = v18 + 1;
            *((void *)a2 + 1) = v19;
            goto LABEL_53;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v56);
        if (result)
        {
          int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
          goto LABEL_50;
        }
        break;
      case 2u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
LABEL_53:
        unsigned int v64 = 0;
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v64);
          if (!result) {
            return result;
          }
          unsigned int v37 = v64;
        }
        else
        {
          unsigned int v37 = *v19;
          *((void *)a2 + 1) = v19 + 1;
        }
        if (v37 <= 4)
        {
          *((_DWORD *)this + 20) |= 2u;
          *((_DWORD *)this + 3) = v37;
        }
        unsigned int v38 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        if ((unint64_t)v38 >= v20 || *v38 != 24) {
          continue;
        }
        int v21 = v38 + 1;
        *((void *)a2 + 1) = v21;
LABEL_63:
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v59);
          if (!result) {
            return result;
          }
          int v39 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
        }
        else
        {
          *int v59 = *v21;
          int v39 = v21 + 1;
          *((void *)a2 + 1) = v39;
        }
        *((_DWORD *)this + 20) |= 4u;
        if ((unint64_t)v39 >= v20 || *v39 != 32) {
          continue;
        }
        unsigned int v22 = v39 + 1;
        *((void *)a2 + 1) = v22;
LABEL_71:
        if ((unint64_t)v22 >= v20 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v60);
          if (!result) {
            return result;
          }
          unsigned int v40 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v60 = *v22;
          unsigned int v40 = v22 + 1;
          *((void *)a2 + 1) = v40;
        }
        *((_DWORD *)this + 20) |= 8u;
        if ((unint64_t)v40 >= v20 || *v40 != 40) {
          continue;
        }
        BOOL v23 = v40 + 1;
        *((void *)a2 + 1) = v23;
LABEL_79:
        if ((unint64_t)v23 >= v20 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v61);
          if (!result) {
            return result;
          }
          uint64_t v41 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
        }
        else
        {
          *unint64_t v61 = *v23;
          uint64_t v41 = v23 + 1;
          *((void *)a2 + 1) = v41;
        }
        *((_DWORD *)this + 20) |= 0x10u;
        if ((unint64_t)v41 >= v20 || *v41 != 48) {
          continue;
        }
        int v24 = v41 + 1;
        *((void *)a2 + 1) = v24;
LABEL_87:
        if ((unint64_t)v24 >= v20 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!result) {
            return result;
          }
          uint64_t v42 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
        }
        else
        {
          *unint64_t v62 = *v24;
          uint64_t v42 = v24 + 1;
          *((void *)a2 + 1) = v42;
        }
        *((_DWORD *)this + 20) |= 0x20u;
        if ((unint64_t)v42 >= v20 || *v42 != 56) {
          continue;
        }
        unsigned int v25 = v42 + 1;
        *((void *)a2 + 1) = v25;
LABEL_95:
        if ((unint64_t)v25 >= v20 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v43 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v5 = *v25;
          int v43 = v25 + 1;
          *((void *)a2 + 1) = v43;
        }
        *((_DWORD *)this + 20) |= 0x40u;
        if ((unint64_t)v43 >= v20 || *v43 != 64) {
          continue;
        }
        uint64_t v26 = v43 + 1;
        *((void *)a2 + 1) = v26;
LABEL_103:
        if ((unint64_t)v26 >= v20 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v44 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
        }
        else
        {
          *unsigned int v6 = *v26;
          int v44 = v26 + 1;
          *((void *)a2 + 1) = v44;
        }
        *((_DWORD *)this + 20) |= 0x80u;
        if ((unint64_t)v44 >= v20 || *v44 != 72) {
          continue;
        }
        unsigned int v27 = v44 + 1;
        *((void *)a2 + 1) = v27;
LABEL_111:
        if ((unint64_t)v27 >= v20 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          int v45 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v7 = *v27;
          int v45 = v27 + 1;
          *((void *)a2 + 1) = v45;
        }
        *((_DWORD *)this + 20) |= 0x100u;
        if ((unint64_t)v45 >= v20 || *v45 != 80) {
          continue;
        }
        int v28 = v45 + 1;
        *((void *)a2 + 1) = v28;
LABEL_119:
        if ((unint64_t)v28 >= v20 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          int v46 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
        }
        else
        {
          *int v8 = *v28;
          int v46 = v28 + 1;
          *((void *)a2 + 1) = v46;
        }
        *((_DWORD *)this + 20) |= 0x200u;
        if ((unint64_t)v46 >= v20 || *v46 != 88) {
          continue;
        }
        int v29 = v46 + 1;
        *((void *)a2 + 1) = v29;
LABEL_127:
        if ((unint64_t)v29 >= v20 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          unsigned int v47 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v9 = *v29;
          unsigned int v47 = v29 + 1;
          *((void *)a2 + 1) = v47;
        }
        *((_DWORD *)this + 20) |= 0x400u;
        if ((unint64_t)v47 >= v20 || *v47 != 96) {
          continue;
        }
        unsigned int v30 = v47 + 1;
        *((void *)a2 + 1) = v30;
LABEL_135:
        if ((unint64_t)v30 >= v20 || *v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!result) {
            return result;
          }
          int v48 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
        }
        else
        {
          *int v10 = *v30;
          int v48 = v30 + 1;
          *((void *)a2 + 1) = v48;
        }
        *((_DWORD *)this + 20) |= 0x800u;
        if ((unint64_t)v48 >= v20 || *v48 != 104) {
          continue;
        }
        unsigned int v31 = v48 + 1;
        *((void *)a2 + 1) = v31;
LABEL_143:
        if ((unint64_t)v31 >= v20 || *v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v11);
          if (!result) {
            return result;
          }
          BOOL v49 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
        }
        else
        {
          *int v11 = *v31;
          BOOL v49 = v31 + 1;
          *((void *)a2 + 1) = v49;
        }
        *((_DWORD *)this + 20) |= 0x1000u;
        if ((unint64_t)v49 >= v20 || *v49 != 112) {
          continue;
        }
        unsigned int v32 = v49 + 1;
        *((void *)a2 + 1) = v32;
LABEL_151:
        if ((unint64_t)v32 >= v20 || *v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v12);
          if (!result) {
            return result;
          }
          int v50 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
        }
        else
        {
          *int v12 = *v32;
          int v50 = v32 + 1;
          *((void *)a2 + 1) = v50;
        }
        *((_DWORD *)this + 20) |= 0x2000u;
        if ((unint64_t)v50 >= v20 || *v50 != 120) {
          continue;
        }
        int v33 = v50 + 1;
        *((void *)a2 + 1) = v33;
LABEL_159:
        unsigned int v63 = 0;
        if ((unint64_t)v33 >= v20 || *v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v63);
          if (!result) {
            return result;
          }
          unsigned int v51 = v63;
        }
        else
        {
          unsigned int v51 = *v33;
          *((void *)a2 + 1) = v33 + 1;
        }
        if (v51 <= 6)
        {
          *((_DWORD *)this + 20) |= 0x4000u;
          *((_DWORD *)this + 16) = v51;
        }
        uint64_t v52 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v34 = *((void *)a2 + 2);
        if ((int)v34 - (int)v52 < 2 || *v52 != 128 || v52[1] != 1) {
          continue;
        }
        int v35 = v52 + 2;
        *((void *)a2 + 1) = v35;
LABEL_170:
        if ((unint64_t)v35 >= v34 || (char)*v35 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v58);
          if (!result) {
            return result;
          }
          uint64_t v53 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v34 = *((void *)a2 + 2);
        }
        else
        {
          *int v58 = *v35;
          uint64_t v53 = v35 + 1;
          *((void *)a2 + 1) = v53;
        }
        *((_DWORD *)this + 20) |= 0x8000u;
        if ((int)v34 - (int)v53 < 2 || *v53 != 136 || v53[1] != 1) {
          continue;
        }
        unsigned int v36 = (char *)(v53 + 2);
        *((void *)a2 + 1) = v36;
LABEL_179:
        if ((unint64_t)v36 >= v34 || *v36 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v57);
          if (!result) {
            return result;
          }
          int v54 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v34 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v57 = *v36;
          int v54 = (unsigned __int8 *)(v36 + 1);
          *((void *)a2 + 1) = v54;
        }
        *((_DWORD *)this + 20) |= 0x10000u;
        if (v54 != (unsigned __int8 *)v34 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_63;
      case 4u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v22 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_71;
      case 5u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        BOOL v23 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_79;
      case 6u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        int v24 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_87;
      case 7u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v25 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_95;
      case 8u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        uint64_t v26 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_103;
      case 9u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v27 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_111;
      case 0xAu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        int v28 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_119;
      case 0xBu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        int v29 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_127;
      case 0xCu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v30 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_135;
      case 0xDu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v31 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_143;
      case 0xEu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v32 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_151;
      case 0xFu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        int v33 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_159;
      case 0x10u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        int v35 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v34 = *((void *)a2 + 2);
        goto LABEL_170;
      case 0x11u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v36 = (char *)*((void *)a2 + 1);
        unint64_t v34 = *((void *)a2 + 2);
        goto LABEL_179;
      default:
        int v15 = TagFallback & 7;
LABEL_44:
        if (v15 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_10005D0F8(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[20];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[20];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[20];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[20];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[14], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v5[15], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
LABEL_34:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v5[17], a2, a4);
    if ((v5[20] & 0x10000) == 0) {
      return result;
    }
    goto LABEL_35;
  }
LABEL_33:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v5[16], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x8000) != 0) {
    goto LABEL_34;
  }
LABEL_17:
  if ((v6 & 0x10000) == 0) {
    return result;
  }
LABEL_35:
  int v7 = v5[18];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v7, a2, a4);
}

uint64_t proto::gnss::Emergency::PositionRequest::ByteSize(proto::gnss::Emergency::PositionRequest *this, unsigned int a2)
{
  int v3 = *((_DWORD *)this + 20);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_47;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_10;
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *((_DWORD *)this + 20);
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_10:
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v7 & 0x80000000) != 0)
    {
      int v8 = 10;
    }
    else if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *((_DWORD *)this + 20);
    }
    else
    {
      int v8 = 1;
    }
    uint64_t v4 = (v4 + v8 + 1);
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      int v3 = *((_DWORD *)this + 20);
    }
    else
    {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v10 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_31;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    int v3 = *((_DWORD *)this + 20);
  }
  else
  {
    int v12 = 1;
  }
  uint64_t v4 = (v4 + v12 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_19:
    if ((v3 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_35;
  }
LABEL_31:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    int v3 = *((_DWORD *)this + 20);
  }
  else
  {
    int v14 = 1;
  }
  uint64_t v4 = (v4 + v14 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_20:
    if ((v3 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_39;
  }
LABEL_35:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    int v3 = *((_DWORD *)this + 20);
  }
  else
  {
    int v16 = 1;
  }
  uint64_t v4 = (v4 + v16 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_21:
    if ((v3 & 0x80) == 0) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
LABEL_39:
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
    int v3 = *((_DWORD *)this + 20);
  }
  else
  {
    int v18 = 1;
  }
  uint64_t v4 = (v4 + v18 + 1);
  if ((v3 & 0x80) != 0)
  {
LABEL_43:
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v19 >= 0x80)
    {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
      int v3 = *((_DWORD *)this + 20);
    }
    else
    {
      int v20 = 1;
    }
    uint64_t v4 = (v4 + v20 + 1);
  }
LABEL_47:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_56;
  }
  if ((v3 & 0x100) != 0)
  {
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2);
      int v3 = *((_DWORD *)this + 20);
    }
    else
    {
      int v22 = 1;
    }
    uint64_t v4 = (v4 + v22 + 1);
    if ((v3 & 0x200) == 0)
    {
LABEL_50:
      if ((v3 & 0x400) == 0) {
        goto LABEL_51;
      }
      goto LABEL_66;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_50;
  }
  BOOL v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v23 >= 0x80)
  {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2) + 1;
    int v3 = *((_DWORD *)this + 20);
  }
  else
  {
    int v24 = 2;
  }
  uint64_t v4 = (v24 + v4);
  if ((v3 & 0x400) == 0)
  {
LABEL_51:
    if ((v3 & 0x800) == 0) {
      goto LABEL_52;
    }
    goto LABEL_70;
  }
LABEL_66:
  unsigned int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v25 >= 0x80)
  {
    int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2) + 1;
    int v3 = *((_DWORD *)this + 20);
  }
  else
  {
    int v26 = 2;
  }
  uint64_t v4 = (v26 + v4);
  if ((v3 & 0x800) == 0)
  {
LABEL_52:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_74;
  }
LABEL_70:
  unsigned int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v27 >= 0x80)
  {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2) + 1;
    int v3 = *((_DWORD *)this + 20);
  }
  else
  {
    int v28 = 2;
  }
  uint64_t v4 = (v28 + v4);
  if ((v3 & 0x1000) == 0)
  {
LABEL_53:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_78;
  }
LABEL_74:
  int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if (v29 >= 0x80)
  {
    int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2) + 1;
    int v3 = *((_DWORD *)this + 20);
  }
  else
  {
    int v30 = 2;
  }
  uint64_t v4 = (v30 + v4);
  if ((v3 & 0x2000) == 0)
  {
LABEL_54:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_82;
  }
LABEL_78:
  unsigned int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if (v31 >= 0x80)
  {
    int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2) + 1;
    int v3 = *((_DWORD *)this + 20);
  }
  else
  {
    int v32 = 2;
  }
  uint64_t v4 = (v32 + v4);
  if ((v3 & 0x4000) == 0)
  {
LABEL_55:
    if ((v3 & 0x8000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_88;
  }
LABEL_82:
  int v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if ((v33 & 0x80000000) != 0)
  {
    int v34 = 11;
  }
  else if (v33 >= 0x80)
  {
    int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33, a2) + 1;
    int v3 = *((_DWORD *)this + 20);
  }
  else
  {
    int v34 = 2;
  }
  uint64_t v4 = (v34 + v4);
  if ((v3 & 0x8000) == 0)
  {
LABEL_56:
    if ((v3 & 0x10000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_92;
  }
LABEL_88:
  int v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  if (v35 >= 0x80)
  {
    int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35, a2) + 2;
    int v3 = *((_DWORD *)this + 20);
  }
  else
  {
    int v36 = 3;
  }
  uint64_t v4 = (v36 + v4);
  if ((v3 & 0x10000) != 0)
  {
LABEL_92:
    unsigned int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    if (v37 >= 0x80) {
      int v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37, a2) + 2;
    }
    else {
      int v38 = 3;
    }
    uint64_t v4 = (v38 + v4);
  }
LABEL_96:
  *((_DWORD *)this + 19) = v4;
  return v4;
}

void sub_10005D650(proto::gnss::Emergency::PositionRequest *a1, void *lpsrc)
{
  proto::gnss::Emergency::PositionRequest::MergeFrom(a1, (const proto::gnss::Emergency::PositionRequest *)lpsrc);
}

uint64_t sub_10005D6F4()
{
  return 1;
}

void *sub_10005D6FC@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.PositionRequest");
}

void sub_10005D70C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      *(_DWORD *)(a1 + 28) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(proto::gnss::Emergency::UtranGpsTimeMeasured::default_instance_ + 8);
      }
      sub_10005AD8C(v5, v6);
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 2u;
      int v7 = *(_DWORD **)(a1 + 16);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 16);
      if (!v8) {
        uint64_t v8 = *(void *)(proto::gnss::Emergency::UtranGpsTimeMeasured::default_instance_ + 16);
      }
      sub_10005A89C(v7, v8);
    }
  }
}

void sub_10005D868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_10005D880(void *result)
{
  if ((void *)proto::gnss::Emergency::UtranGpsTimeMeasured::default_instance_ != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_10005D920(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108C78;
  sub_10005D880(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10005D974(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108C78;
  sub_10005D880(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10005D9DC()
{
}

uint64_t sub_10005DA28(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 28);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 28))
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_10005B050(result);
        int v2 = *(_DWORD *)(v1 + 28);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 20)) {
          *(void *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return result;
}

uint64_t sub_10005DA84(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_17;
        }
        *(_DWORD *)(a1 + 28) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v27 = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0; {
        }
          }
        else
        {
          unsigned int v27 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
        if (!sub_10005B080(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 < *((void *)this + 2) && *v17 == 18)
        {
          *((void *)this + 1) = v17 + 1;
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 2) {
        goto LABEL_17;
      }
LABEL_29:
      *(_DWORD *)(a1 + 28) |= 2u;
      int v18 = *(unsigned int **)(a1 + 16);
      if (!v18) {
        operator new();
      }
      unsigned int v28 = 0;
      int v19 = (char *)*((void *)this + 1);
      if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28))return 0; {
      }
        }
      else
      {
        unsigned int v28 = *v19;
        *((void *)this + 1) = v19 + 1;
      }
      int v20 = *((_DWORD *)this + 14);
      int v21 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v20 + 1;
      if (v20 >= v21) {
        return 0;
      }
      int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v28);
      if (!sub_10005AA34(v18, this, v23) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
      int v24 = *((_DWORD *)this + 14);
      BOOL v15 = __OFSUB__(v24, 1);
      int v25 = v24 - 1;
      if (v25 < 0 == v15) {
        *((_DWORD *)this + 14) = v25;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v7 = TagFallback & 7;
LABEL_17:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10005DD7C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::UtranGpsTimeMeasured::default_instance_ + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 2) != 0)
  {
LABEL_7:
    uint64_t v8 = *(void *)(v5 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(proto::gnss::Emergency::UtranGpsTimeMeasured::default_instance_ + 16);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return result;
}

uint64_t sub_10005DE0C(uint64_t a1, unsigned int a2)
{
  if (!*(unsigned char *)(a1 + 28))
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4) {
    uint64_t v4 = *(void *)(proto::gnss::Emergency::UtranGpsTimeMeasured::default_instance_ + 8);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005B54C(v4, a2);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  }
  else {
    int v7 = 1;
  }
  uint64_t v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 28) & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(proto::gnss::Emergency::UtranGpsTimeMeasured::default_instance_ + 16);
    }
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005AC40(v8, a2);
    int v11 = (int)v9;
    if (v9 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
    }
    else {
      int v12 = 1;
    }
    uint64_t v3 = (v3 + v11 + v12 + 1);
  }
LABEL_18:
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

void sub_10005DEE0(uint64_t a1, void *lpsrc)
{
  sub_10005D70C(a1, (uint64_t)lpsrc);
}

uint64_t sub_10005DF84()
{
  return 1;
}

void *sub_10005DF8C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.UtranGpsTimeMeasured");
}

void sub_10005DF9C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_10005E048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005E060(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108CF0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10005E080(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108CF0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10005E0D4()
{
}

uint64_t sub_10005E120(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_10005E134(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      int v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        unsigned int v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        unsigned int *v5 = *v12;
        unsigned int v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          int v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10005E2D4(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_10005E340(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_10005E3D0(_DWORD *a1, void *lpsrc)
{
  sub_10005DF9C(a1, (uint64_t)lpsrc);
}

uint64_t sub_10005E474()
{
  return 1;
}

void *sub_10005E47C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GeranGpsTimeMeasuredBased");
}

void sub_10005E48C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_10005E538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005E550(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108D68;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10005E570(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108D68;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10005E5C4()
{
}

uint64_t sub_10005E610(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_10005E624(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      int v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        unsigned int v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        unsigned int *v5 = *v12;
        unsigned int v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          int v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10005E7C4(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_10005E830(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_10005E8C0(_DWORD *a1, void *lpsrc)
{
  sub_10005E48C(a1, (uint64_t)lpsrc);
}

uint64_t sub_10005E964()
{
  return 1;
}

void *sub_10005E96C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GeranGpsTimeMeasuredAssisted");
}

void sub_10005E97C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(proto::gnss::Emergency::GpsTimeMeasured::default_instance_ + 8);
      }
      sub_10005D70C(v5, v6);
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_18;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 36) |= 2u;
    int v7 = *(_DWORD **)(a1 + 16);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(proto::gnss::Emergency::GpsTimeMeasured::default_instance_ + 16);
    }
    sub_10005DF9C(v7, v8);
    if ((*(_DWORD *)(a2 + 36) & 4) != 0)
    {
LABEL_18:
      *(_DWORD *)(a1 + 36) |= 4u;
      int v9 = *(_DWORD **)(a1 + 24);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = *(void *)(a2 + 24);
      if (!v10) {
        uint64_t v10 = *(void *)(proto::gnss::Emergency::GpsTimeMeasured::default_instance_ + 24);
      }
      sub_10005E48C(v9, v10);
    }
  }
}

void sub_10005EB4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_10005EB64(void *result)
{
  if ((void *)proto::gnss::Emergency::GpsTimeMeasured::default_instance_ != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[3];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_10005EC30(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108DE0;
  sub_10005EB64(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10005EC84(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108DE0;
  sub_10005EB64(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10005ECEC()
{
}

uint64_t proto::gnss::Emergency::GpsTimeMeasured::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 36);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 36))
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = sub_10005DA28(this);
        int v2 = *(_DWORD *)(v1 + 36);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 20)) {
          *(void *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 20) = 0;
        int v2 = *(_DWORD *)(v1 + 36);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 20)) {
          *(void *)(v4 + 8) = 0;
        }
        *(_DWORD *)(v4 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

uint64_t sub_10005EDBC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            TagFallbacuint64_t k = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 36) |= 1u;
          uint64_t v9 = *(void *)(a1 + 8);
          if (!v9) {
            operator new();
          }
          unsigned int v37 = 0;
          uint64_t v10 = (char *)*((void *)this + 1);
          if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0; {
          }
            }
          else
          {
            unsigned int v37 = *v10;
            *((void *)this + 1) = v10 + 1;
          }
          int v11 = *((_DWORD *)this + 14);
          int v12 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v11 + 1;
          if (v11 >= v12) {
            return 0;
          }
          int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
          if (!sub_10005DA84(v9, this, v14) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
          int v15 = *((_DWORD *)this + 14);
          BOOL v16 = __OFSUB__(v15, 1);
          int v17 = v15 - 1;
          if (v17 < 0 == v16) {
            *((_DWORD *)this + 14) = v17;
          }
          int v18 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 18)
          {
            *((void *)this + 1) = v18 + 1;
            goto LABEL_32;
          }
        }
        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_20;
        }
LABEL_32:
        *(_DWORD *)(a1 + 36) |= 2u;
        int v19 = *(unsigned int **)(a1 + 16);
        if (!v19) {
          operator new();
        }
        unsigned int v38 = 0;
        int v20 = (char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38))return 0; {
        }
          }
        else
        {
          unsigned int v38 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v38);
        if (!sub_10005E134(v19, this, v24) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v25 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v25, 1);
        int v26 = v25 - 1;
        if (v26 < 0 == v16) {
          *((_DWORD *)this + 14) = v26;
        }
        unsigned int v27 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v27 < *((void *)this + 2) && *v27 == 26)
        {
          *((void *)this + 1) = v27 + 1;
          goto LABEL_46;
        }
      }
      if (v7 != 3) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_20;
      }
LABEL_46:
      *(_DWORD *)(a1 + 36) |= 4u;
      unsigned int v28 = *(unsigned int **)(a1 + 24);
      if (!v28) {
        operator new();
      }
      unsigned int v39 = 0;
      int v29 = (char *)*((void *)this + 1);
      if ((unint64_t)v29 >= *((void *)this + 2) || *v29 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39))return 0; {
      }
        }
      else
      {
        unsigned int v39 = *v29;
        *((void *)this + 1) = v29 + 1;
      }
      int v30 = *((_DWORD *)this + 14);
      int v31 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v30 + 1;
      if (v30 >= v31) {
        return 0;
      }
      int v32 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v39);
      if (!sub_10005E624(v28, this, v33) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v32);
      int v34 = *((_DWORD *)this + 14);
      BOOL v16 = __OFSUB__(v34, 1);
      int v35 = v34 - 1;
      if (v35 < 0 == v16) {
        *((_DWORD *)this + 14) = v35;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_20:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10005F1CC(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(proto::gnss::Emergency::GpsTimeMeasured::default_instance_ + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return result;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(proto::gnss::Emergency::GpsTimeMeasured::default_instance_ + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 4) != 0)
  {
LABEL_11:
    uint64_t v9 = *(void *)(v5 + 24);
    if (!v9) {
      uint64_t v9 = *(void *)(proto::gnss::Emergency::GpsTimeMeasured::default_instance_ + 24);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  }
  return result;
}

uint64_t sub_10005F288(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_25;
  }
  if (*(unsigned char *)(a1 + 36))
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(proto::gnss::Emergency::GpsTimeMeasured::default_instance_ + 8);
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005DE0C(v5, a2);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    }
    else {
      int v8 = 1;
    }
    uint64_t v4 = (v7 + v8 + 1);
    int v3 = *(_DWORD *)(a1 + 36);
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = 0;
  if ((*(unsigned char *)(a1 + 36) & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(proto::gnss::Emergency::GpsTimeMeasured::default_instance_ + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005E340(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 36);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13) {
      uint64_t v13 = *(void *)(proto::gnss::Emergency::GpsTimeMeasured::default_instance_ + 24);
    }
    unsigned int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005E830(v13, a2);
    int v16 = (int)v14;
    if (v14 >= 0x80) {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, v15);
    }
    else {
      int v17 = 1;
    }
    uint64_t v4 = (v4 + v16 + v17 + 1);
  }
LABEL_25:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_10005F3A4(uint64_t a1, void *lpsrc)
{
  sub_10005E97C(a1, (uint64_t)lpsrc);
}

uint64_t sub_10005F448()
{
  return 1;
}

void *sub_10005F450@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GpsTimeMeasured");
}

void sub_10005F460(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 16);
      if (v5 >= 6) {
        __assert_rtn("set_gps_time_measured_type", "GnssEmergencyTypes.pb.h", 16920, "::proto::gnss::Emergency::ClsNetworkType_IsValid(value)");
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(proto::gnss::Emergency::GpsTimeMeasuredParams::default_instance_ + 8);
      }
      sub_10005E97C(v6, v7);
    }
  }
}

void sub_10005F590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005F5A8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100108E58;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::GpsTimeMeasuredParams::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10005F638(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_10005F5A8(a1);

  operator delete();
}

void sub_10005F670()
{
}

uint64_t proto::gnss::Emergency::GpsTimeMeasuredParams::Clear(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 24);
  if (v2)
  {
    *(_DWORD *)(this + 16) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 8);
      if (this) {
        this = proto::gnss::Emergency::GpsTimeMeasured::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return this;
}

uint64_t sub_10005F700(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unsigned int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_15;
        }
        unsigned int v21 = 0;
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v9 = v21;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 5)
        {
          *(_DWORD *)(a1 + 24) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_15;
      }
      int v7 = TagFallback & 7;
      if (v7 == 2) {
        break;
      }
LABEL_15:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_25:
    *(_DWORD *)(a1 + 24) |= 2u;
    uint64_t v12 = *(void *)(a1 + 8);
    if (!v12) {
      operator new();
    }
    unsigned int v22 = 0;
    uint64_t v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22)) {
        return 0;
      }
    }
    else
    {
      unsigned int v22 = *v13;
      *((void *)this + 1) = v13 + 1;
    }
    int v14 = *((_DWORD *)this + 14);
    int v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0;
    }
    int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
    if (!sub_10005EDBC(v12, this, v17) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    int v18 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v18, 1);
    int v20 = v18 - 1;
    if (v20 < 0 == v19) {
      *((_DWORD *)this + 14) = v20;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_10005F960(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::GpsTimeMeasuredParams::default_instance_ + 8);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_10005F9E0(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 24);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(proto::gnss::Emergency::GpsTimeMeasuredParams::default_instance_ + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005F288(v6, a2);
    int v9 = (int)v7;
    if (v7 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    }
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_10005FAA8(uint64_t a1, void *lpsrc)
{
  sub_10005F460(a1, (uint64_t)lpsrc);
}

uint64_t sub_10005FB4C()
{
  return 1;
}

void *sub_10005FB54@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GpsTimeMeasuredParams");
}

void sub_10005FB64(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 24);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v7;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return;
    }
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v5;
  }
}

void sub_10005FC38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10005FC50(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108ED0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10005FC70(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100108ED0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10005FCC4()
{
}

uint64_t sub_10005FD14(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_10005FD2C(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  int v7 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unsigned int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v14;
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        a1[6] |= 1u;
        if ((unint64_t)v15 < v12 && *v15 == 16)
        {
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_27;
        }
      }
      if (v10 != 2) {
        break;
      }
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      int v16 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_27:
      if ((unint64_t)v16 >= v12 || *v16 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!result) {
          return result;
        }
        unsigned int v17 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        *int v6 = *v16;
        unsigned int v17 = v16 + 1;
        *((void *)this + 1) = v17;
      }
      a1[6] |= 2u;
      if ((unint64_t)v17 < v12 && *v17 == 24)
      {
        uint64_t v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_35:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v18 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v13;
          int v18 = (unsigned __int8 *)(v13 + 1);
          *((void *)this + 1) = v18;
        }
        a1[6] |= 4u;
        if (v18 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      int v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

int *sub_10005FF50(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[6];
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
    if ((v5[6] & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
  int v6 = v5[6];
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = v5[4];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_10005FFDC(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 24))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    unsigned int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_100060094(_DWORD *a1, void *lpsrc)
{
  sub_10005FB64(a1, (uint64_t)lpsrc);
}

uint64_t sub_100060138()
{
  return 1;
}

void *sub_100060140@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GpsTOD");
}

void sub_100060150(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 40))
    {
      int v8 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 40) |= 1u;
      *(_DWORD *)(a1 + 8) = v8;
      int v4 = *(_DWORD *)(a2 + 40);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_19;
      }
    }
    else if ((*(unsigned char *)(a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v9 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(_DWORD *)(a1 + 12) = v9;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_20;
    }
LABEL_19:
    int v10 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 40) |= 4u;
    *(_DWORD *)(a1 + 16) = v10;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
LABEL_20:
    unsigned int v11 = *(_DWORD *)(a2 + 20);
    if (v11 >= 4) {
      __assert_rtn("set_fix_type", "GnssEmergencyTypes.pb.h", 17125, "::proto::gnss::Emergency::FixType_IsValid(value)");
    }
    *(_DWORD *)(a1 + 40) |= 8u;
    *(_DWORD *)(a1 + 20) = v11;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 0x10) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    int v5 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 0x10u;
    *(_DWORD *)(a1 + 32) = v5;
    int v4 = *(_DWORD *)(a2 + 40);
LABEL_10:
    if ((v4 & 0x20) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x20u;
      int v6 = *(_DWORD **)(a1 + 24);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 24);
      if (!v7) {
        uint64_t v7 = *(void *)(proto::gnss::Emergency::LocationInfo::default_instance_ + 24);
      }
      sub_10005FB64(v6, v7);
    }
  }
}

void sub_100060300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100060318(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100108F48;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::LocationInfo::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 3);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000603A8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100060318(a1);

  operator delete();
}

void sub_1000603E0()
{
}

uint64_t proto::gnss::Emergency::LocationInfo::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 40);
  if (v1)
  {
    *(_DWORD *)(this + 32) = 0;
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    if ((v1 & 0x20) != 0)
    {
      uint64_t v2 = *(void *)(this + 24);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 24))
        {
          *(void *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
      }
    }
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t sub_100060470(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 12);
  uint64_t v7 = (unsigned int *)(a1 + 16);
  int v8 = (unsigned int *)(a1 + 32);
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v13;
          int v14 = v13 + 1;
          *((void *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 16)
        {
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
          goto LABEL_31;
        }
        continue;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_31:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v15;
          unsigned int v22 = v15 + 1;
          *((void *)this + 1) = v22;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        if ((unint64_t)v22 >= v12 || *v22 != 24) {
          continue;
        }
        int v16 = v22 + 1;
        *((void *)this + 1) = v16;
LABEL_39:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v23 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v16;
          int v23 = v16 + 1;
          *((void *)this + 1) = v23;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        if ((unint64_t)v23 >= v12 || *v23 != 32) {
          continue;
        }
        unsigned int v17 = v23 + 1;
        *((void *)this + 1) = v17;
LABEL_47:
        unsigned int v36 = 0;
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36);
          if (!result) {
            return result;
          }
          unsigned int v24 = v36;
        }
        else
        {
          unsigned int v24 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        if (v24 <= 3)
        {
          *(_DWORD *)(a1 + 40) |= 8u;
          *(_DWORD *)(a1 + 20) = v24;
        }
        int v25 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v25 >= v18 || *v25 != 40) {
          continue;
        }
        BOOL v19 = v25 + 1;
        *((void *)this + 1) = v19;
LABEL_57:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v19;
          int v26 = v19 + 1;
          *((void *)this + 1) = v26;
        }
        int v20 = *(_DWORD *)(a1 + 40) | 0x10;
        *(_DWORD *)(a1 + 40) = v20;
        if ((unint64_t)v26 >= v18 || *v26 != 50) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_65:
        *(_DWORD *)(a1 + 40) = v20 | 0x20;
        unsigned int v27 = *(unsigned int **)(a1 + 24);
        if (!v27) {
          operator new();
        }
        unsigned int v37 = 0;
        unsigned int v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0; {
        }
          }
        else
        {
          unsigned int v37 = *v28;
          *((void *)this + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 < v30)
        {
          int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
          if (sub_10005FD2C(v27, this, v32))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
              int v33 = *((_DWORD *)this + 14);
              BOOL v34 = __OFSUB__(v33, 1);
              int v35 = v33 - 1;
              if (v35 < 0 == v34) {
                *((_DWORD *)this + 14) = v35;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_39;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_47;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        BOOL v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_57;
      case 6u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_23;
        }
        int v20 = *(_DWORD *)(a1 + 40);
        goto LABEL_65;
      default:
        int v11 = TagFallback & 7;
LABEL_23:
        if (v11 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000608E4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 32), a2, a4);
    if ((*(_DWORD *)(v5 + 40) & 0x20) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return result;
  }
LABEL_13:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::LocationInfo::default_instance_ + 24);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, a2, a4);
}

uint64_t sub_1000609D4(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_39;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_17;
      }
LABEL_29:
      unint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
      if (v12 >= 0x80)
      {
        int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 40);
      }
      else
      {
        int v13 = 2;
      }
      uint64_t v4 = (v13 + v4);
      if ((v3 & 0x20) == 0) {
        goto LABEL_39;
      }
      goto LABEL_33;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if ((v10 & 0x80000000) != 0)
  {
    int v11 = 11;
  }
  else if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v4 = (v11 + v4);
  if ((v3 & 0x10) != 0) {
    goto LABEL_29;
  }
LABEL_17:
  if ((v3 & 0x20) == 0) {
    goto LABEL_39;
  }
LABEL_33:
  uint64_t v14 = *(void *)(a1 + 24);
  if (!v14) {
    uint64_t v14 = *(void *)(proto::gnss::Emergency::LocationInfo::default_instance_ + 24);
  }
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005FFDC(v14, a2);
  int v17 = (int)v15;
  if (v15 >= 0x80) {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, v16);
  }
  else {
    int v18 = 1;
  }
  uint64_t v4 = (v4 + v17 + v18 + 1);
LABEL_39:
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

void sub_100060B48(uint64_t a1, void *lpsrc)
{
  sub_100060150(a1, (uint64_t)lpsrc);
}

uint64_t sub_100060BEC()
{
  return 1;
}

void *sub_100060BF4@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.LocationInfo");
}

void sub_100060C04(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(_DWORD *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_11;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v6 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 12) = v6;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_12;
    }
LABEL_11:
    int v7 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(_DWORD *)(a1 + 24) = v7;
    if ((*(_DWORD *)(a2 + 32) & 8) == 0) {
      return;
    }
LABEL_12:
    *(_DWORD *)(a1 + 32) |= 8u;
    int v8 = *(_DWORD **)(a1 + 16);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = *(void *)(a2 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(proto::gnss::Emergency::CellInfo::default_instance_ + 16);
    }
    sub_10005B744(v8, v9);
  }
}

void sub_100060D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100060D68(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100108FC0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::CellInfo::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100060DF8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100060D68(a1);

  operator delete();
}

void sub_100060E30()
{
}

uint64_t sub_100060E80(uint64_t result)
{
  char v1 = *(unsigned char *)(result + 32);
  if (v1)
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 24) = 0;
    if ((v1 & 8) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 24))
        {
          *(void *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
      }
    }
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100060EB8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 12);
  int v7 = (unsigned int *)(a1 + 24);
  while (2)
  {
    int v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v12;
          int v13 = v12 + 1;
          *((void *)this + 1) = v13;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        if ((unint64_t)v13 < v11 && *v13 == 16)
        {
          uint64_t v14 = v13 + 1;
          *((void *)this + 1) = v14;
          goto LABEL_27;
        }
        continue;
      case 2u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_27:
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v14;
          int v18 = v14 + 1;
          *((void *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        if ((unint64_t)v18 >= v11 || *v18 != 24) {
          continue;
        }
        int v15 = v18 + 1;
        *((void *)this + 1) = v15;
LABEL_35:
        if ((unint64_t)v15 >= v11 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          BOOL v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v15;
          BOOL v19 = v15 + 1;
          *((void *)this + 1) = v19;
        }
        int v16 = *(_DWORD *)(a1 + 32) | 4;
        *(_DWORD *)(a1 + 32) = v16;
        if ((unint64_t)v19 >= v11 || *v19 != 34) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 32) = v16 | 8;
        int v20 = *(unsigned int **)(a1 + 16);
        if (!v20) {
          operator new();
        }
        unsigned int v29 = 0;
        unsigned int v21 = (char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29))return 0; {
        }
          }
        else
        {
          unsigned int v29 = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 < v23)
        {
          int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v29);
          if (sub_10005B90C(v20, this, v25))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
              int v26 = *((_DWORD *)this + 14);
              BOOL v27 = __OFSUB__(v26, 1);
              int v28 = v26 - 1;
              if (v28 < 0 == v27) {
                *((_DWORD *)this + 14) = v28;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_35;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_19;
        }
        int v16 = *(_DWORD *)(a1 + 32);
        goto LABEL_43;
      default:
        int v10 = TagFallback & 7;
LABEL_19:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100061230(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), a2, a4);
      if ((*(_DWORD *)(v5 + 32) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::CellInfo::default_instance_ + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_1000612E8(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_27;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 32);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 32);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
    if ((v3 & 8) == 0) {
      goto LABEL_27;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_27;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(proto::gnss::Emergency::CellInfo::default_instance_ + 16);
  }
  unint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005BBBC(v10, a2);
  int v13 = (int)v11;
  if (v11 >= 0x80) {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, v12);
  }
  else {
    int v14 = 1;
  }
  uint64_t v4 = (v4 + v13 + v14 + 1);
LABEL_27:
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

void sub_1000613F8(uint64_t a1, void *lpsrc)
{
  sub_100060C04(a1, (uint64_t)lpsrc);
}

uint64_t sub_10006149C()
{
  return 1;
}

void *sub_1000614A4@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.CellInfo");
}

void sub_1000614B4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_11;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v6 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(_DWORD *)(a1 + 16) = v6;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_12;
    }
LABEL_11:
    int v7 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(_DWORD *)(a1 + 20) = v7;
    if ((*(_DWORD *)(a2 + 36) & 8) == 0) {
      return;
    }
LABEL_12:
    *(_DWORD *)(a1 + 36) |= 8u;
    uint64_t v8 = *(void *)(a1 + 24);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = *(void *)(a2 + 24);
    if (!v9) {
      uint64_t v9 = *(void *)(proto::gnss::Emergency::UtranGanssTimeMeasured::default_instance_ + 24);
    }
    sub_100060C04(v8, v9);
  }
}

void sub_100061600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100061618(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100109038;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::UtranGanssTimeMeasured::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 3);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000616A8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100061618(a1);

  operator delete();
}

void sub_1000616E0()
{
}

uint64_t sub_100061734(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 36);
  if (v2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    if ((v2 & 8) != 0)
    {
      uint64_t result = *(void *)(result + 24);
      if (result) {
        uint64_t result = sub_100060E80(result);
      }
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return result;
}

uint64_t sub_100061774(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 16);
  int v7 = (unsigned int *)(a1 + 20);
  while (2)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v12;
          int v13 = v12 + 1;
          *((void *)this + 1) = v13;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        if ((unint64_t)v13 < v11 && *v13 == 16)
        {
          int v14 = v13 + 1;
          *((void *)this + 1) = v14;
          goto LABEL_27;
        }
        continue;
      case 2u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_27:
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v14;
          int v18 = v14 + 1;
          *((void *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 36) |= 2u;
        if ((unint64_t)v18 >= v11 || *v18 != 24) {
          continue;
        }
        int v15 = v18 + 1;
        *((void *)this + 1) = v15;
LABEL_35:
        if ((unint64_t)v15 >= v11 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          BOOL v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v15;
          BOOL v19 = v15 + 1;
          *((void *)this + 1) = v19;
        }
        int v16 = *(_DWORD *)(a1 + 36) | 4;
        *(_DWORD *)(a1 + 36) = v16;
        if ((unint64_t)v19 >= v11 || *v19 != 34) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 36) = v16 | 8;
        uint64_t v20 = *(void *)(a1 + 24);
        if (!v20) {
          operator new();
        }
        unsigned int v29 = 0;
        unsigned int v21 = (char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29))return 0; {
        }
          }
        else
        {
          unsigned int v29 = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 < v23)
        {
          int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v29);
          if (sub_100060EB8(v20, this, v25))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
              int v26 = *((_DWORD *)this + 14);
              BOOL v27 = __OFSUB__(v26, 1);
              int v28 = v26 - 1;
              if (v28 < 0 == v27) {
                *((_DWORD *)this + 14) = v28;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_35;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_19;
        }
        int v16 = *(_DWORD *)(a1 + 36);
        goto LABEL_43;
      default:
        int v10 = TagFallback & 7;
LABEL_19:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100061AEC(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), (unint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 20), a2, a4);
      if ((*(_DWORD *)(v5 + 36) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::UtranGanssTimeMeasured::default_instance_ + 24);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_100061BA4(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_24;
  }
  if (*(unsigned char *)(a1 + 36))
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 36);
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_11;
    }
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v6 = 2;
  }
  uint64_t v4 = (v6 + v4);
LABEL_11:
  if ((v3 & 4) != 0)
  {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v8 = 2;
    }
    uint64_t v4 = (v8 + v4);
    if ((v3 & 8) == 0) {
      goto LABEL_24;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_24;
  }
  uint64_t v9 = *(void *)(a1 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(proto::gnss::Emergency::UtranGanssTimeMeasured::default_instance_ + 24);
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000612E8(v9, a2);
  int v12 = (int)v10;
  if (v10 >= 0x80) {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, v11);
  }
  else {
    int v13 = 1;
  }
  uint64_t v4 = (v4 + v12 + v13 + 1);
LABEL_24:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_100061CA0(uint64_t a1, void *lpsrc)
{
  sub_1000614B4(a1, (uint64_t)lpsrc);
}

uint64_t sub_100061D44()
{
  return 1;
}

void *sub_100061D4C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.UtranGanssTimeMeasured");
}

void sub_100061D5C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 28);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_10;
      }
    }
    else if ((*(unsigned char *)(a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v6 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 28) |= 2u;
    *(_DWORD *)(a1 + 12) = v6;
    if ((*(_DWORD *)(a2 + 28) & 4) == 0) {
      return;
    }
LABEL_10:
    *(_DWORD *)(a1 + 28) |= 4u;
    uint64_t v7 = *(void *)(a1 + 16);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(proto::gnss::Emergency::GeranGanssTimeMeasured::default_instance_ + 16);
    }
    sub_100060C04(v7, v8);
  }
}

void sub_100061E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100061EA0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1001090B0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::GeranGanssTimeMeasured::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100061F30(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100061EA0(a1);

  operator delete();
}

void sub_100061F68()
{
}

uint64_t sub_100061FB4(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 28);
  if (v2)
  {
    *(void *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_100060E80(result);
      }
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return result;
}

uint64_t sub_100061FF4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 12);
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          uint64_t v7 = (char *)*((void *)this + 1);
          if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
          {
            TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            TagFallbacuint64_t k = *v7;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v7 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v9 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v10 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          int v13 = (char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v13 >= v12 || *v13 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!result) {
              return result;
            }
            int v14 = (unsigned char *)*((void *)this + 1);
            unint64_t v12 = *((void *)this + 2);
          }
          else
          {
            unsigned int *v5 = *v13;
            int v14 = v13 + 1;
            *((void *)this + 1) = v14;
          }
          *(_DWORD *)(a1 + 28) |= 1u;
          if ((unint64_t)v14 < v12 && *v14 == 16)
          {
            int v15 = v14 + 1;
            *((void *)this + 1) = v15;
            goto LABEL_27;
          }
        }
        if (v9 == 2) {
          break;
        }
        if (v9 == 3)
        {
          int v10 = TagFallback & 7;
          if (v10 == 2)
          {
            int v11 = *(_DWORD *)(a1 + 28);
            goto LABEL_35;
          }
        }
        else
        {
          int v10 = TagFallback & 7;
        }
LABEL_19:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
      }
        }
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      int v15 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_27:
      if ((unint64_t)v15 >= v12 || *v15 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!result) {
          return result;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        *int v6 = *v15;
        int v17 = v15 + 1;
        *((void *)this + 1) = v17;
      }
      int v11 = *(_DWORD *)(a1 + 28) | 2;
      *(_DWORD *)(a1 + 28) = v11;
    }
    while ((unint64_t)v17 >= v12 || *v17 != 26);
    *((void *)this + 1) = v17 + 1;
LABEL_35:
    *(_DWORD *)(a1 + 28) = v11 | 4;
    uint64_t v18 = *(void *)(a1 + 16);
    if (!v18) {
      operator new();
    }
    unsigned int v27 = 0;
    BOOL v19 = (char *)*((void *)this + 1);
    if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27)) {
        return 0;
      }
    }
    else
    {
      unsigned int v27 = *v19;
      *((void *)this + 1) = v19 + 1;
    }
    int v20 = *((_DWORD *)this + 14);
    int v21 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v20 + 1;
    if (v20 >= v21) {
      return 0;
    }
    int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
    if (!sub_100060EB8(v18, this, v23) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
    int v24 = *((_DWORD *)this + 14);
    BOOL v25 = __OFSUB__(v24, 1);
    int v26 = v24 - 1;
    if (v26 < 0 == v25) {
      *((_DWORD *)this + 14) = v26;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1000622C8(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::GeranGanssTimeMeasured::default_instance_ + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_100062364(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_21;
  }
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 28);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(proto::gnss::Emergency::GeranGanssTimeMeasured::default_instance_ + 16);
    }
    unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000612E8(v8, a2);
    int v11 = (int)v9;
    if (v9 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
  }
LABEL_21:
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

void sub_100062444(uint64_t a1, void *lpsrc)
{
  sub_100061D5C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000624E8()
{
  return 1;
}

void *sub_1000624F0@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GeranGanssTimeMeasured");
}

void sub_100062500(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  int v4 = *(_DWORD *)(a2 + 60);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v7 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 60) |= 1u;
    *(_DWORD *)(a1 + 8) = v7;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 60) |= 2u;
  *(_DWORD *)(a1 + 12) = v8;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v9 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 60) |= 4u;
  *(_DWORD *)(a1 + 16) = v9;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v10 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 60) |= 8u;
  *(_DWORD *)(a1 + 20) = v10;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    int v13 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 60) |= 0x20u;
    *(_DWORD *)(a1 + 32) = v13;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_23:
  *(_DWORD *)(a1 + 60) |= 0x10u;
  int v11 = *(_DWORD **)(a1 + 24);
  if (!v11) {
    operator new();
  }
  uint64_t v12 = *(void *)(a2 + 24);
  if (!v12) {
    uint64_t v12 = *(void *)(proto::gnss::Emergency::ClsEutranCell::default_instance_ + 24);
  }
  sub_10005B744(v11, v12);
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  int v14 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 60) |= 0x40u;
  *(_DWORD *)(a1 + 36) = v14;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 60) |= 0x80u;
    *(_DWORD *)(a1 + 40) = v5;
    int v4 = *(_DWORD *)(a2 + 60);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v15 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 60) |= 0x100u;
    *(_DWORD *)(a1 + 44) = v15;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        return;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v16 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 60) |= 0x200u;
  *(_DWORD *)(a1 + 48) = v16;
  if ((*(_DWORD *)(a2 + 60) & 0x400) == 0) {
    return;
  }
LABEL_17:
  int v6 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 60) |= 0x400u;
  *(_DWORD *)(a1 + 52) = v6;
}

void sub_100062738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100062750(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100109128;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::ClsEutranCell::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 3);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000627E0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100062750(a1);

  operator delete();
}

void sub_100062818()
{
}

uint64_t sub_100062874(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 60);
  if ((_BYTE)v1)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    if ((v1 & 0x10) != 0)
    {
      uint64_t v2 = *(void *)(result + 24);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 24))
        {
          *(void *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
        int v1 = *(_DWORD *)(result + 60);
      }
    }
    *(void *)(result + 32) = 0;
    *(_DWORD *)(result + 40) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 48) = 0;
    *(_DWORD *)(result + 44) = 0;
  }
  *(_DWORD *)(result + 60) = 0;
  return result;
}

uint64_t sub_1000628C8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int v57 = (unsigned int *)(a1 + 8);
  int v5 = (unsigned int *)(a1 + 12);
  int v6 = (unsigned int *)(a1 + 16);
  int v7 = (unsigned int *)(a1 + 20);
  int v8 = (unsigned int *)(a1 + 32);
  int v9 = (unsigned int *)(a1 + 36);
  int v10 = (unsigned int *)(a1 + 40);
  int v11 = (unsigned int *)(a1 + 48);
  uint64_t v12 = (unsigned int *)(a1 + 52);
  while (2)
  {
    int v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v13;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v13 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v57);
          if (!result) {
            return result;
          }
          uint64_t v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v57 = *v17;
          uint64_t v18 = v17 + 1;
          *((void *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 60) |= 1u;
        if ((unint64_t)v18 < v16 && *v18 == 16)
        {
          BOOL v19 = v18 + 1;
          *((void *)this + 1) = v19;
          goto LABEL_41;
        }
        continue;
      case 2u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        BOOL v19 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
LABEL_41:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v19;
          int v35 = v19 + 1;
          *((void *)this + 1) = v35;
        }
        *(_DWORD *)(a1 + 60) |= 2u;
        if ((unint64_t)v35 >= v16 || *v35 != 24) {
          continue;
        }
        int v20 = v35 + 1;
        *((void *)this + 1) = v20;
LABEL_49:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v20;
          unsigned int v36 = v20 + 1;
          *((void *)this + 1) = v36;
        }
        *(_DWORD *)(a1 + 60) |= 4u;
        if ((unint64_t)v36 >= v16 || *v36 != 32) {
          continue;
        }
        int v21 = v36 + 1;
        *((void *)this + 1) = v21;
LABEL_57:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v21;
          unsigned int v37 = v21 + 1;
          *((void *)this + 1) = v37;
        }
        int v26 = *(_DWORD *)(a1 + 60) | 8;
        *(_DWORD *)(a1 + 60) = v26;
        if ((unint64_t)v37 >= v16 || *v37 != 42) {
          continue;
        }
        int v58 = v12;
        int v59 = v11;
        int v22 = v8;
        unsigned int v23 = v10;
        int v24 = v7;
        BOOL v25 = v5;
        *((void *)this + 1) = v37 + 1;
LABEL_65:
        unsigned int v38 = v9;
        *(_DWORD *)(a1 + 60) = v26 | 0x10;
        unsigned int v39 = *(unsigned int **)(a1 + 24);
        if (!v39) {
          operator new();
        }
        unsigned int v40 = v6;
        unsigned int v61 = 0;
        uint64_t v41 = (char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v61))return 0; {
        }
          }
        else
        {
          unsigned int v61 = *v41;
          *((void *)this + 1) = v41 + 1;
        }
        int v42 = *((_DWORD *)this + 14);
        int v43 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v42 + 1;
        if (v42 < v43)
        {
          int v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v61);
          if (sub_10005B90C(v39, this, v45))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v44);
              int v46 = *((_DWORD *)this + 14);
              BOOL v47 = __OFSUB__(v46, 1);
              int v48 = v46 - 1;
              if (v48 < 0 == v47) {
                *((_DWORD *)this + 14) = v48;
              }
              BOOL v49 = (unsigned char *)*((void *)this + 1);
              unint64_t v27 = *((void *)this + 2);
              int v5 = v25;
              int v6 = v40;
              int v7 = v24;
              int v9 = v38;
              int v10 = v23;
              int v8 = v22;
              uint64_t v12 = v58;
              int v11 = v59;
              if ((unint64_t)v49 < v27 && *v49 == 48)
              {
                int v28 = v49 + 1;
                *((void *)this + 1) = v28;
LABEL_79:
                if ((unint64_t)v28 >= v27 || *v28 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
                  if (!result) {
                    return result;
                  }
                  int v50 = (unsigned char *)*((void *)this + 1);
                  unint64_t v27 = *((void *)this + 2);
                }
                else
                {
                  *int v8 = *v28;
                  int v50 = v28 + 1;
                  *((void *)this + 1) = v50;
                }
                *(_DWORD *)(a1 + 60) |= 0x20u;
                if ((unint64_t)v50 < v27 && *v50 == 56)
                {
                  unsigned int v29 = v50 + 1;
                  *((void *)this + 1) = v29;
LABEL_87:
                  if ((unint64_t)v29 >= v27 || *v29 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
                    if (!result) {
                      return result;
                    }
                    unsigned int v51 = (unsigned char *)*((void *)this + 1);
                    unint64_t v27 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int *v9 = *v29;
                    unsigned int v51 = v29 + 1;
                    *((void *)this + 1) = v51;
                  }
                  *(_DWORD *)(a1 + 60) |= 0x40u;
                  if ((unint64_t)v51 < v27 && *v51 == 64)
                  {
                    int v30 = v51 + 1;
                    *((void *)this + 1) = v30;
LABEL_95:
                    if ((unint64_t)v30 >= v27 || *v30 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
                      if (!result) {
                        return result;
                      }
                      uint64_t v52 = (unsigned char *)*((void *)this + 1);
                      unint64_t v27 = *((void *)this + 2);
                    }
                    else
                    {
                      *int v10 = *v30;
                      uint64_t v52 = v30 + 1;
                      *((void *)this + 1) = v52;
                    }
                    *(_DWORD *)(a1 + 60) |= 0x80u;
                    if ((unint64_t)v52 < v27 && *v52 == 72)
                    {
                      int v31 = v52 + 1;
                      *((void *)this + 1) = v31;
LABEL_103:
                      unsigned int v60 = 0;
                      if ((unint64_t)v31 >= v27 || *v31 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v60);
                        if (!result) {
                          return result;
                        }
                        unsigned int v53 = v60;
                        int v54 = (unsigned char *)*((void *)this + 1);
                        unint64_t v27 = *((void *)this + 2);
                      }
                      else
                      {
                        unsigned int v53 = *v31;
                        int v54 = v31 + 1;
                        *((void *)this + 1) = v54;
                      }
                      *(_DWORD *)(a1 + 44) = v53;
                      *(_DWORD *)(a1 + 60) |= 0x100u;
                      if ((unint64_t)v54 < v27 && *v54 == 80)
                      {
                        unsigned int v32 = v54 + 1;
                        *((void *)this + 1) = v32;
LABEL_111:
                        if ((unint64_t)v32 >= v27 || *v32 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
                          if (!result) {
                            return result;
                          }
                          int v55 = (unsigned char *)*((void *)this + 1);
                          unint64_t v27 = *((void *)this + 2);
                        }
                        else
                        {
                          *int v11 = *v32;
                          int v55 = v32 + 1;
                          *((void *)this + 1) = v55;
                        }
                        *(_DWORD *)(a1 + 60) |= 0x200u;
                        if ((unint64_t)v55 < v27 && *v55 == 88)
                        {
                          int v33 = v55 + 1;
                          *((void *)this + 1) = v33;
LABEL_119:
                          if ((unint64_t)v33 >= v27 || *v33 < 0)
                          {
                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v12);
                            if (!result) {
                              return result;
                            }
                            int v56 = (unsigned __int8 *)*((void *)this + 1);
                            unint64_t v27 = *((void *)this + 2);
                          }
                          else
                          {
                            *uint64_t v12 = *v33;
                            int v56 = (unsigned __int8 *)(v33 + 1);
                            *((void *)this + 1) = v56;
                          }
                          *(_DWORD *)(a1 + 60) |= 0x400u;
                          if (v56 == (unsigned __int8 *)v27
                            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                          {
                            *((_DWORD *)this + 8) = 0;
                            uint64_t result = 1;
                            *((unsigned char *)this + 36) = 1;
                            return result;
                          }
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_49;
      case 4u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_57;
      case 5u:
        int v15 = TagFallback & 7;
        if (v15 != 2) {
          goto LABEL_32;
        }
        int v58 = v12;
        int v59 = v11;
        int v22 = v8;
        unsigned int v23 = v10;
        int v24 = v7;
        BOOL v25 = v5;
        int v26 = *(_DWORD *)(a1 + 60);
        goto LABEL_65;
      case 6u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v28 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_79;
      case 7u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v29 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_87;
      case 8u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v30 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_95;
      case 9u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v31 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_103;
      case 0xAu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v32 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_111;
      case 0xBu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v33 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_119;
      default:
        int v15 = TagFallback & 7;
LABEL_32:
        if (v15 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100062FE8(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 60);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_17:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::ClsEutranCell::default_instance_ + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 32), a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 36), a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 40), a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 48), a2, a4);
    if ((*(_DWORD *)(v5 + 60) & 0x400) == 0) {
      return result;
    }
    goto LABEL_25;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 44), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x200) != 0) {
    goto LABEL_24;
  }
LABEL_11:
  if ((v6 & 0x400) == 0) {
    return result;
  }
LABEL_25:
  int v8 = *(_DWORD *)(v5 + 52);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v8, a2, a4);
}

uint64_t sub_100063164(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 60);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_47;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *(_DWORD *)(a1 + 60);
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_10:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *(_DWORD *)(a1 + 60);
    }
    else
    {
      int v8 = 1;
    }
    uint64_t v4 = (v4 + v8 + 1);
  }
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      int v3 = *(_DWORD *)(a1 + 60);
    }
    else
    {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v10 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    int v3 = *(_DWORD *)(a1 + 60);
  }
  else
  {
    int v12 = 1;
  }
  uint64_t v4 = (v4 + v12 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_17:
    if ((v3 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_35;
  }
LABEL_29:
  uint64_t v13 = *(void *)(a1 + 24);
  if (!v13) {
    uint64_t v13 = *(void *)(proto::gnss::Emergency::ClsEutranCell::default_instance_ + 24);
  }
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005BBBC(v13, a2);
  int v15 = (int)v14;
  if (v14 >= 0x80) {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  }
  else {
    int v16 = 1;
  }
  uint64_t v4 = (v4 + v15 + v16 + 1);
  int v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 0x20) == 0)
  {
LABEL_18:
    if ((v3 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_35:
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 60);
  }
  else
  {
    int v18 = 2;
  }
  uint64_t v4 = (v18 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_19:
    if ((v3 & 0x80) == 0) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
LABEL_39:
  BOOL v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v19 >= 0x80)
  {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 60);
  }
  else
  {
    int v20 = 2;
  }
  uint64_t v4 = (v20 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_43:
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 60);
    }
    else
    {
      int v22 = 2;
    }
    uint64_t v4 = (v22 + v4);
  }
LABEL_47:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_66;
  }
  if ((v3 & 0x100) != 0)
  {
    unsigned int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
    if ((v23 & 0x80000000) != 0)
    {
      int v24 = 11;
    }
    else if (v23 >= 0x80)
    {
      int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 60);
    }
    else
    {
      int v24 = 2;
    }
    uint64_t v4 = (v24 + v4);
    if ((v3 & 0x200) == 0)
    {
LABEL_50:
      if ((v3 & 0x400) == 0) {
        goto LABEL_66;
      }
      goto LABEL_62;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_50;
  }
  BOOL v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v25 >= 0x80)
  {
    int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 60);
  }
  else
  {
    int v26 = 2;
  }
  uint64_t v4 = (v26 + v4);
  if ((v3 & 0x400) != 0)
  {
LABEL_62:
    unint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
    if (v27 >= 0x80) {
      int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2) + 1;
    }
    else {
      int v28 = 2;
    }
    uint64_t v4 = (v28 + v4);
  }
LABEL_66:
  *(_DWORD *)(a1 + 56) = v4;
  return v4;
}

void sub_1000633BC(uint64_t a1, void *lpsrc)
{
  sub_100062500(a1, (uint64_t)lpsrc);
}

uint64_t sub_100063460()
{
  return 1;
}

void *sub_100063468@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.ClsEutranCell");
}

void sub_100063478(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(proto::gnss::Emergency::GanssTimeMeasured::default_instance_ + 8);
      }
      sub_1000614B4(v5, v6);
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_18;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 36) |= 2u;
    uint64_t v7 = *(void *)(a1 + 16);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(proto::gnss::Emergency::GanssTimeMeasured::default_instance_ + 16);
    }
    sub_100061D5C(v7, v8);
    if ((*(_DWORD *)(a2 + 36) & 4) != 0)
    {
LABEL_18:
      *(_DWORD *)(a1 + 36) |= 4u;
      uint64_t v9 = *(void *)(a1 + 24);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = *(void *)(a2 + 24);
      if (!v10) {
        uint64_t v10 = *(void *)(proto::gnss::Emergency::GanssTimeMeasured::default_instance_ + 24);
      }
      sub_100062500(v9, v10);
    }
  }
}

void sub_100063660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100063678(void *result)
{
  if ((void *)proto::gnss::Emergency::GanssTimeMeasured::default_instance_ != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[3];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_100063744(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1001091A0;
  sub_100063678(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100063798(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1001091A0;
  sub_100063678(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100063800()
{
}

uint64_t proto::gnss::Emergency::GanssTimeMeasured::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 36);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 36))
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = sub_100061734(this);
        int v2 = *(_DWORD *)(v1 + 36);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(void *)(v1 + 16);
      if (this)
      {
        this = sub_100061FB4(this);
        int v2 = *(_DWORD *)(v1 + 36);
      }
    }
    if ((v2 & 4) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this) {
        this = sub_100062874(this);
      }
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

uint64_t sub_1000638B8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            TagFallbacuint64_t k = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 36) |= 1u;
          uint64_t v9 = *(void *)(a1 + 8);
          if (!v9) {
            operator new();
          }
          unsigned int v37 = 0;
          uint64_t v10 = (char *)*((void *)this + 1);
          if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0; {
          }
            }
          else
          {
            unsigned int v37 = *v10;
            *((void *)this + 1) = v10 + 1;
          }
          int v11 = *((_DWORD *)this + 14);
          int v12 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v11 + 1;
          if (v11 >= v12) {
            return 0;
          }
          int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
          if (!sub_100061774(v9, this, v14) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
          int v15 = *((_DWORD *)this + 14);
          BOOL v16 = __OFSUB__(v15, 1);
          int v17 = v15 - 1;
          if (v17 < 0 == v16) {
            *((_DWORD *)this + 14) = v17;
          }
          int v18 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 18)
          {
            *((void *)this + 1) = v18 + 1;
            goto LABEL_32;
          }
        }
        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_20;
        }
LABEL_32:
        *(_DWORD *)(a1 + 36) |= 2u;
        uint64_t v19 = *(void *)(a1 + 16);
        if (!v19) {
          operator new();
        }
        unsigned int v38 = 0;
        int v20 = (char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38))return 0; {
        }
          }
        else
        {
          unsigned int v38 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v38);
        if (!sub_100061FF4(v19, this, v24) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v25 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v25, 1);
        int v26 = v25 - 1;
        if (v26 < 0 == v16) {
          *((_DWORD *)this + 14) = v26;
        }
        unint64_t v27 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v27 < *((void *)this + 2) && *v27 == 26)
        {
          *((void *)this + 1) = v27 + 1;
          goto LABEL_46;
        }
      }
      if (v7 != 3) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_20;
      }
LABEL_46:
      *(_DWORD *)(a1 + 36) |= 4u;
      uint64_t v28 = *(void *)(a1 + 24);
      if (!v28) {
        operator new();
      }
      unsigned int v39 = 0;
      unsigned int v29 = (char *)*((void *)this + 1);
      if ((unint64_t)v29 >= *((void *)this + 2) || *v29 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39))return 0; {
      }
        }
      else
      {
        unsigned int v39 = *v29;
        *((void *)this + 1) = v29 + 1;
      }
      int v30 = *((_DWORD *)this + 14);
      int v31 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v30 + 1;
      if (v30 >= v31) {
        return 0;
      }
      int v32 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v39);
      if (!sub_1000628C8(v28, this, v33) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v32);
      int v34 = *((_DWORD *)this + 14);
      BOOL v16 = __OFSUB__(v34, 1);
      int v35 = v34 - 1;
      if (v35 < 0 == v16) {
        *((_DWORD *)this + 14) = v35;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_20:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100063CE0(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(proto::gnss::Emergency::GanssTimeMeasured::default_instance_ + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return result;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(proto::gnss::Emergency::GanssTimeMeasured::default_instance_ + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 4) != 0)
  {
LABEL_11:
    uint64_t v9 = *(void *)(v5 + 24);
    if (!v9) {
      uint64_t v9 = *(void *)(proto::gnss::Emergency::GanssTimeMeasured::default_instance_ + 24);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  }
  return result;
}

uint64_t sub_100063D9C(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_25;
  }
  if (*(unsigned char *)(a1 + 36))
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(proto::gnss::Emergency::GanssTimeMeasured::default_instance_ + 8);
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100061BA4(v5, a2);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    }
    else {
      int v8 = 1;
    }
    uint64_t v4 = (v7 + v8 + 1);
    int v3 = *(_DWORD *)(a1 + 36);
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = 0;
  if ((*(unsigned char *)(a1 + 36) & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(proto::gnss::Emergency::GanssTimeMeasured::default_instance_ + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100062364(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 36);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13) {
      uint64_t v13 = *(void *)(proto::gnss::Emergency::GanssTimeMeasured::default_instance_ + 24);
    }
    unsigned int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100063164(v13, a2);
    int v16 = (int)v14;
    if (v14 >= 0x80) {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, v15);
    }
    else {
      int v17 = 1;
    }
    uint64_t v4 = (v4 + v16 + v17 + 1);
  }
LABEL_25:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_100063EB8(uint64_t a1, void *lpsrc)
{
  sub_100063478(a1, (uint64_t)lpsrc);
}

uint64_t sub_100063F5C()
{
  return 1;
}

void *sub_100063F64@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GanssTimeMeasured");
}

void sub_100063F74(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 16);
      if (v5 >= 6) {
        __assert_rtn("set_ganss_time_measured_type", "GnssEmergencyTypes.pb.h", 17926, "::proto::gnss::Emergency::ClsNetworkType_IsValid(value)");
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(proto::gnss::Emergency::GanssTimeMeasuredParams::default_instance_ + 8);
      }
      sub_100063478(v6, v7);
    }
  }
}

void sub_1000640A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000640BC(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100109218;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::GanssTimeMeasuredParams::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10006414C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000640BC(a1);

  operator delete();
}

void sub_100064184()
{
}

uint64_t proto::gnss::Emergency::GanssTimeMeasuredParams::Clear(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 24);
  if (v2)
  {
    *(_DWORD *)(this + 16) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 8);
      if (this) {
        this = proto::gnss::Emergency::GanssTimeMeasured::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return this;
}

uint64_t sub_100064214(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unsigned int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_15;
        }
        unsigned int v21 = 0;
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v9 = v21;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 5)
        {
          *(_DWORD *)(a1 + 24) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_15;
      }
      int v7 = TagFallback & 7;
      if (v7 == 2) {
        break;
      }
LABEL_15:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_25:
    *(_DWORD *)(a1 + 24) |= 2u;
    uint64_t v12 = *(void *)(a1 + 8);
    if (!v12) {
      operator new();
    }
    unsigned int v22 = 0;
    uint64_t v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22)) {
        return 0;
      }
    }
    else
    {
      unsigned int v22 = *v13;
      *((void *)this + 1) = v13 + 1;
    }
    int v14 = *((_DWORD *)this + 14);
    int v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0;
    }
    int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
    if (!sub_1000638B8(v12, this, v17) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    int v18 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v18, 1);
    int v20 = v18 - 1;
    if (v20 < 0 == v19) {
      *((_DWORD *)this + 14) = v20;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_100064474(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::GanssTimeMeasuredParams::default_instance_ + 8);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_1000644F4(uint64_t a1, unint64_t a2)
{
  char v3 = *(unsigned char *)(a1 + 24);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(proto::gnss::Emergency::GanssTimeMeasuredParams::default_instance_ + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100063D9C(v6, a2);
    int v9 = (int)v7;
    if (v7 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    }
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1000645BC(uint64_t a1, void *lpsrc)
{
  sub_100063F74(a1, (uint64_t)lpsrc);
}

uint64_t sub_100064660()
{
  return 1;
}

void *sub_100064668@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GanssTimeMeasuredParams");
}

void sub_100064678(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 36))
  {
    unsigned int v5 = *(_DWORD *)(a2 + 8);
    if (v5 >= 6) {
      __assert_rtn("set_time_id", "GnssEmergencyTypes.pb.h", 17995, "::proto::gnss::Emergency::GnssTimeId_IsValid(value)");
    }
    a1[9] |= 1u;
    a1[2] = v5;
    int v4 = *(_DWORD *)(a2 + 36);
  }
  if ((v4 & 2) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 12);
    a1[9] |= 2u;
    a1[3] = v7;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0) {
        goto LABEL_10;
      }
LABEL_16:
      int v9 = *(_DWORD *)(a2 + 20);
      a1[9] |= 8u;
      a1[5] = v9;
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 0x10) == 0)
      {
LABEL_11:
        if ((v4 & 0x20) == 0) {
          return;
        }
        goto LABEL_12;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  int v8 = *(_DWORD *)(a2 + 16);
  a1[9] |= 4u;
  a1[4] = v8;
  int v4 = *(_DWORD *)(a2 + 36);
  if ((v4 & 8) != 0) {
    goto LABEL_16;
  }
LABEL_10:
  if ((v4 & 0x10) == 0) {
    goto LABEL_11;
  }
LABEL_17:
  unsigned int v10 = *(_DWORD *)(a2 + 24);
  if (v10 >= 4) {
    __assert_rtn("set_fix_type", "GnssEmergencyTypes.pb.h", 18084, "::proto::gnss::Emergency::FixType_IsValid(value)");
  }
  a1[9] |= 0x10u;
  a1[6] = v10;
  if ((*(_DWORD *)(a2 + 36) & 0x20) != 0)
  {
LABEL_12:
    int v6 = *(_DWORD *)(a2 + 28);
    a1[9] |= 0x20u;
    a1[7] = v6;
  }
}

void sub_1000647F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100064810(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109290;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100064830(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109290;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100064884()
{
}

uint64_t sub_1000648D8(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1000648F0(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int v5 = a1 + 3;
  int v6 = a1 + 4;
  int v7 = a1 + 5;
  int v8 = a1 + 7;
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v30 = 0;
        uint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 < *((void *)this + 2) && (*v12 & 0x80000000) == 0)
        {
          unsigned int v13 = *v12;
          *((void *)this + 1) = v12 + 1;
          goto LABEL_28;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v30);
        if (result)
        {
          unsigned int v13 = v30;
LABEL_28:
          if (v13 <= 5)
          {
            a1[9] |= 1u;
            a1[2] = v13;
          }
          unsigned int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          if ((unint64_t)v21 < v14 && *v21 == 16)
          {
            int v15 = v21 + 1;
            *((void *)this + 1) = v15;
            goto LABEL_33;
          }
          continue;
        }
        break;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_33:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v15;
          unsigned int v22 = v15 + 1;
          *((void *)this + 1) = v22;
        }
        a1[9] |= 2u;
        if ((unint64_t)v22 >= v14 || *v22 != 24) {
          continue;
        }
        int v16 = v22 + 1;
        *((void *)this + 1) = v16;
LABEL_41:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v23 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v16;
          int v23 = v16 + 1;
          *((void *)this + 1) = v23;
        }
        a1[9] |= 4u;
        if ((unint64_t)v23 >= v14 || *v23 != 32) {
          continue;
        }
        unsigned int v17 = v23 + 1;
        *((void *)this + 1) = v17;
LABEL_49:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v17;
          unsigned int v24 = v17 + 1;
          *((void *)this + 1) = v24;
        }
        a1[9] |= 8u;
        if ((unint64_t)v24 >= v14 || *v24 != 40) {
          continue;
        }
        int v18 = v24 + 1;
        *((void *)this + 1) = v18;
LABEL_57:
        unsigned int v29 = 0;
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29);
          if (!result) {
            return result;
          }
          unsigned int v25 = v29;
        }
        else
        {
          unsigned int v25 = *v18;
          *((void *)this + 1) = v18 + 1;
        }
        if (v25 <= 3)
        {
          a1[9] |= 0x10u;
          a1[6] = v25;
        }
        int v26 = (unsigned char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        if ((unint64_t)v26 >= v19 || *v26 != 48) {
          continue;
        }
        int v20 = v26 + 1;
        *((void *)this + 1) = v20;
LABEL_67:
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          unint64_t v27 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v19 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v20;
          unint64_t v27 = (unsigned __int8 *)(v20 + 1);
          *((void *)this + 1) = v27;
        }
        a1[9] |= 0x20u;
        if (v27 != (unsigned __int8 *)v19 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_41;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_49;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_57;
      case 6u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        goto LABEL_67;
      default:
        int v11 = TagFallback & 7;
LABEL_22:
        if (v11 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_100064CC0(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v5 = result;
  int v6 = result[9];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[9];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[9];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[9];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
    if ((v5[9] & 0x20) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[9];
  if ((v6 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return result;
  }
LABEL_13:
  int v7 = v5[7];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, a2, a4);
}

uint64_t sub_100064DA0(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_40;
  }
  if (*(unsigned char *)(a1 + 36))
  {
    unsigned int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_17;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_17:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0) {
        goto LABEL_20;
      }
      goto LABEL_30;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  unsigned int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v4 = (v11 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_20:
    if ((v3 & 0x20) == 0) {
      goto LABEL_40;
    }
    goto LABEL_36;
  }
LABEL_30:
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v12 & 0x80000000) != 0)
  {
    int v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v4 = (v13 + v4);
  if ((v3 & 0x20) != 0)
  {
LABEL_36:
    unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v14 >= 0x80) {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2) + 1;
    }
    else {
      int v15 = 2;
    }
    uint64_t v4 = (v15 + v4);
  }
LABEL_40:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_100064EFC(_DWORD *a1, void *lpsrc)
{
  sub_100064678(a1, (uint64_t)lpsrc);
}

uint64_t sub_100064FA0()
{
  return 1;
}

void *sub_100064FA8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GanssLocationInfo");
}

void sub_100064FB8(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_100065064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10006507C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109308;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10006509C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109308;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000650F0()
{
}

uint64_t sub_10006513C(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_100065150(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v17 = 0;
      unsigned int v10 = (char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17);
        if (!result) {
          return result;
        }
        unsigned int v11 = v17;
        uint64_t v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
      }
      else
      {
        unsigned int v11 = *v10;
        uint64_t v12 = v10 + 1;
        *((void *)this + 1) = v12;
      }
      a1[2] = v11;
      a1[5] |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)this + 1) = v9;
LABEL_23:
        unsigned int v16 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
          unint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v9;
          unint64_t v14 = (unsigned __int8 *)(v9 + 1);
          *((void *)this + 1) = v14;
        }
        a1[3] = v13;
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_23;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_15:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000652F8(uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_100065364(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_19;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else
    {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_100065410(_DWORD *a1, void *lpsrc)
{
  sub_100064FB8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000654B4()
{
  return 1;
}

void *sub_1000654BC@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.EllipsoidPoint");
}

void sub_1000654CC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      *(_DWORD *)(a1 + 24) |= 1u;
      uint64_t v5 = *(_DWORD **)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(proto::gnss::Emergency::PointUncertainCircle::default_instance_ + 8);
      }
      sub_100064FB8(v5, v6);
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v7;
    }
  }
}

void sub_1000655CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000655E4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100109380;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::PointUncertainCircle::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100065674(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000655E4(a1);

  operator delete();
}

void sub_1000656AC()
{
}

uint64_t sub_1000656FC(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    if (*(unsigned char *)(result + 24))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 20)) {
          *(void *)(v1 + 8) = 0;
        }
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_10006572C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          unsigned int v10 = (char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
          goto LABEL_30;
        }
      }
      else
      {
        int v8 = TagFallback & 7;
      }
LABEL_18:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
    int v8 = TagFallback & 7;
    if (v8 != 2) {
      goto LABEL_18;
    }
    *(_DWORD *)(a1 + 24) |= 1u;
    unsigned int v11 = *(_DWORD **)(a1 + 8);
    if (!v11) {
      operator new();
    }
    unsigned int v23 = 0;
    uint64_t v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23)) {
        return 0;
      }
    }
    else
    {
      unsigned int v23 = *v12;
      *((void *)this + 1) = v12 + 1;
    }
    int v13 = *((_DWORD *)this + 14);
    int v14 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v13 + 1;
    if (v13 >= v14) {
      return 0;
    }
    int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_100065150(v11, this, v16) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
    int v17 = *((_DWORD *)this + 14);
    BOOL v18 = __OFSUB__(v17, 1);
    int v19 = v17 - 1;
    if (v19 < 0 == v18) {
      *((_DWORD *)this + 14) = v19;
    }
    int v20 = (unsigned char *)*((void *)this + 1);
    unint64_t v9 = *((void *)this + 2);
    if ((unint64_t)v20 < v9 && *v20 == 16)
    {
      unsigned int v10 = v20 + 1;
      *((void *)this + 1) = v10;
LABEL_30:
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        unsigned int v21 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        unsigned int *v5 = *v10;
        unsigned int v21 = (unsigned __int8 *)(v10 + 1);
        *((void *)this + 1) = v21;
      }
      *(_DWORD *)(a1 + 24) |= 2u;
      if (v21 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
  }
}

uint64_t sub_100065980(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::PointUncertainCircle::default_instance_ + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 24) & 2) != 0)
  {
LABEL_7:
    int v8 = *(_DWORD *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return result;
}

uint64_t sub_100065A00(uint64_t a1, unsigned int a2)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4) {
    uint64_t v4 = *(void *)(proto::gnss::Emergency::PointUncertainCircle::default_instance_ + 8);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100065364(v4, a2);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  }
  else {
    int v7 = 1;
  }
  uint64_t v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 24) & 2) != 0)
  {
LABEL_12:
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    uint64_t v3 = (v9 + v3);
  }
LABEL_16:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_100065AAC(uint64_t a1, void *lpsrc)
{
  sub_1000654CC(a1, (uint64_t)lpsrc);
}

uint64_t sub_100065B50()
{
  return 1;
}

void *sub_100065B58@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.PointUncertainCircle");
}

void sub_100065B68(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      int v6 = *(_DWORD **)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(proto::gnss::Emergency::PointUncertainEllipse::default_instance_ + 8);
      }
      sub_100064FB8(v6, v7);
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_17;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v8 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(_DWORD *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_18;
    }
LABEL_17:
    int v9 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(_DWORD *)(a1 + 20) = v9;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_18:
    int v10 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 8u;
    *(_DWORD *)(a1 + 24) = v10;
    if ((*(_DWORD *)(a2 + 36) & 0x10) == 0) {
      return;
    }
LABEL_9:
    int v5 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 36) |= 0x10u;
    *(_DWORD *)(a1 + 28) = v5;
  }
}

void sub_100065CD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100065CE8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1001093F8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::PointUncertainEllipse::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100065D78(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100065CE8(a1);

  operator delete();
}

void sub_100065DB0()
{
}

uint64_t sub_100065E04(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    if (*(unsigned char *)(result + 36))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 20)) {
          *(void *)(v1 + 8) = 0;
        }
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_100065E34(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 16);
  int v6 = (unsigned int *)(a1 + 20);
  uint64_t v7 = (unsigned int *)(a1 + 24);
  int v8 = (unsigned int *)(a1 + 28);
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_22;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        uint64_t v12 = *(_DWORD **)(a1 + 8);
        if (!v12) {
          operator new();
        }
        unsigned int v32 = 0;
        int v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        int v19 = *((_DWORD *)this + 14);
        int v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
        if (!sub_100065150(v12, this, v22) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        int v23 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v23, 1);
        int v25 = v23 - 1;
        if (v25 < 0 == v24) {
          *((_DWORD *)this + 14) = v25;
        }
        int v26 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v26 >= v14 || *v26 != 16) {
          continue;
        }
        int v15 = v26 + 1;
        *((void *)this + 1) = v15;
        goto LABEL_35;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_35:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unint64_t v27 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v15;
          unint64_t v27 = v15 + 1;
          *((void *)this + 1) = v27;
        }
        *(_DWORD *)(a1 + 36) |= 2u;
        if ((unint64_t)v27 >= v14 || *v27 != 24) {
          continue;
        }
        unsigned int v16 = v27 + 1;
        *((void *)this + 1) = v16;
LABEL_43:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v16;
          unsigned int v29 = v16 + 1;
          *((void *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 36) |= 4u;
        if ((unint64_t)v29 >= v14 || *v29 != 32) {
          continue;
        }
        int v17 = v29 + 1;
        *((void *)this + 1) = v17;
LABEL_51:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v17;
          unsigned int v30 = v17 + 1;
          *((void *)this + 1) = v30;
        }
        *(_DWORD *)(a1 + 36) |= 8u;
        if ((unint64_t)v30 >= v14 || *v30 != 40) {
          continue;
        }
        BOOL v18 = v30 + 1;
        *((void *)this + 1) = v18;
LABEL_59:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v31 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v18;
          int v31 = (unsigned __int8 *)(v18 + 1);
          *((void *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 36) |= 0x10u;
        if (v31 != (unsigned __int8 *)v14 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_43;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_51;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        BOOL v18 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_59;
      default:
        int v11 = TagFallback & 7;
LABEL_22:
        if (v11 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100066220(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(proto::gnss::Emergency::PointUncertainEllipse::default_instance_ + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = v5[9];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], a2, a4);
  int v6 = v5[9];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_12:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], a2, a4);
    if ((v5[9] & 0x10) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], a2, a4);
  int v6 = v5[9];
  if ((v6 & 8) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_13:
  int v8 = v5[7];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, a2, a4);
}

uint64_t sub_1000662F4(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_32;
  }
  if ((*(unsigned char *)(a1 + 36) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(proto::gnss::Emergency::PointUncertainEllipse::default_instance_ + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100065364(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v4 = (v10 + v4);
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v12 = 2;
    }
    uint64_t v4 = (v12 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_32;
      }
      goto LABEL_28;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x10) != 0)
  {
LABEL_28:
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v15 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    }
    else {
      int v16 = 2;
    }
    uint64_t v4 = (v16 + v4);
  }
LABEL_32:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_100066424(uint64_t a1, void *lpsrc)
{
  sub_100065B68(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000664C8()
{
  return 1;
}

void *sub_1000664D0@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.PointUncertainEllipse");
}

void sub_1000664E0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 44))
    {
      *(_DWORD *)(a1 + 44) |= 1u;
      int v6 = *(_DWORD **)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(proto::gnss::Emergency::PointAltitudeUncertainEllipsoid::default_instance_ + 8);
      }
      sub_100064FB8(v6, v7);
      int v4 = *(_DWORD *)(a2 + 44);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_19;
      }
    }
    else if ((*(unsigned char *)(a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v8 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(_DWORD *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_20;
    }
LABEL_19:
    int v9 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(_DWORD *)(a1 + 20) = v9;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
LABEL_20:
    int v10 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(_DWORD *)(a1 + 24) = v10;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_22;
    }
LABEL_21:
    int v11 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 44) |= 0x10u;
    *(_DWORD *)(a1 + 28) = v11;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        return;
      }
      goto LABEL_11;
    }
LABEL_22:
    int v12 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 0x20u;
    *(_DWORD *)(a1 + 32) = v12;
    if ((*(_DWORD *)(a2 + 44) & 0x40) == 0) {
      return;
    }
LABEL_11:
    int v5 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) |= 0x40u;
    *(_DWORD *)(a1 + 36) = v5;
  }
}

void sub_100066688(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000666A0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100109470;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::PointAltitudeUncertainEllipsoid::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100066730(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000666A0(a1);

  operator delete();
}

void sub_100066768()
{
}

uint64_t sub_1000667C0(uint64_t result)
{
  if (*(unsigned char *)(result + 44))
  {
    if (*(unsigned char *)(result + 44))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 20)) {
          *(void *)(v1 + 8) = 0;
        }
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)(result + 32) = 0;
  }
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_1000667F4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 16);
  int v6 = (unsigned int *)(a1 + 20);
  uint64_t v7 = (unsigned int *)(a1 + 24);
  int v8 = (unsigned int *)(a1 + 28);
  int v9 = (unsigned int *)(a1 + 32);
  int v10 = (unsigned int *)(a1 + 36);
  while (2)
  {
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_26;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        int v14 = *(_DWORD **)(a1 + 8);
        if (!v14) {
          operator new();
        }
        unsigned int v38 = 0;
        int v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38))return 0; {
        }
          }
        else
        {
          unsigned int v38 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v23 = *((_DWORD *)this + 14);
        int v24 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v23 + 1;
        if (v23 >= v24) {
          return 0;
        }
        int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v38);
        if (!sub_100065150(v14, this, v26) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
        int v27 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v27, 1);
        int v29 = v27 - 1;
        if (v29 < 0 == v28) {
          *((_DWORD *)this + 14) = v29;
        }
        unsigned int v30 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v30 >= v16 || *v30 != 16) {
          continue;
        }
        int v17 = v30 + 1;
        *((void *)this + 1) = v17;
        goto LABEL_39;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
LABEL_39:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v17;
          int v31 = v17 + 1;
          *((void *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 44) |= 2u;
        if ((unint64_t)v31 >= v16 || *v31 != 24) {
          continue;
        }
        BOOL v18 = v31 + 1;
        *((void *)this + 1) = v18;
LABEL_47:
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v18;
          unsigned int v33 = v18 + 1;
          *((void *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 44) |= 4u;
        if ((unint64_t)v33 >= v16 || *v33 != 32) {
          continue;
        }
        int v19 = v33 + 1;
        *((void *)this + 1) = v19;
LABEL_55:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v19;
          int v34 = v19 + 1;
          *((void *)this + 1) = v34;
        }
        *(_DWORD *)(a1 + 44) |= 8u;
        if ((unint64_t)v34 >= v16 || *v34 != 40) {
          continue;
        }
        int v20 = v34 + 1;
        *((void *)this + 1) = v20;
LABEL_63:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v20;
          int v35 = v20 + 1;
          *((void *)this + 1) = v35;
        }
        *(_DWORD *)(a1 + 44) |= 0x10u;
        if ((unint64_t)v35 >= v16 || *v35 != 48) {
          continue;
        }
        int v21 = v35 + 1;
        *((void *)this + 1) = v21;
LABEL_71:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          unsigned int v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v9 = *v21;
          unsigned int v36 = v21 + 1;
          *((void *)this + 1) = v36;
        }
        *(_DWORD *)(a1 + 44) |= 0x20u;
        if ((unint64_t)v36 >= v16 || *v36 != 56) {
          continue;
        }
        unsigned int v22 = v36 + 1;
        *((void *)this + 1) = v22;
LABEL_79:
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          unsigned int v37 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v22;
          unsigned int v37 = (unsigned __int8 *)(v22 + 1);
          *((void *)this + 1) = v37;
        }
        *(_DWORD *)(a1 + 44) |= 0x40u;
        if (v37 != (unsigned __int8 *)v16 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        BOOL v18 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_47;
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_55;
      case 5u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_63;
      case 6u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_71;
      case 7u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v22 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_79;
      default:
        int v13 = TagFallback & 7;
LABEL_26:
        if (v13 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100066CD8(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(proto::gnss::Emergency::PointAltitudeUncertainEllipsoid::default_instance_ + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = v5[11];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], a2, a4);
  int v6 = v5[11];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], a2, a4);
  int v6 = v5[11];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], a2, a4);
  int v6 = v5[11];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_16:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[8], a2, a4);
    if ((v5[11] & 0x40) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], a2, a4);
  int v6 = v5[11];
  if ((v6 & 0x20) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return result;
  }
LABEL_17:
  int v8 = v5[9];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v8, a2, a4);
}

uint64_t sub_100066DE4(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_42;
  }
  if ((*(unsigned char *)(a1 + 44) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(proto::gnss::Emergency::PointAltitudeUncertainEllipsoid::default_instance_ + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100065364(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 44);
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v4 = (v10 + v4);
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 44);
    }
    else
    {
      int v12 = 2;
    }
    uint64_t v4 = (v12 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_30;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 44);
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_19:
    if ((v3 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_34;
  }
LABEL_30:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 44);
  }
  else
  {
    int v16 = 2;
  }
  uint64_t v4 = (v16 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_20:
    if ((v3 & 0x40) == 0) {
      goto LABEL_42;
    }
    goto LABEL_38;
  }
LABEL_34:
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 44);
  }
  else
  {
    int v18 = 2;
  }
  uint64_t v4 = (v18 + v4);
  if ((v3 & 0x40) != 0)
  {
LABEL_38:
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if (v19 >= 0x80) {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    }
    else {
      int v20 = 2;
    }
    uint64_t v4 = (v20 + v4);
  }
LABEL_42:
  *(_DWORD *)(a1 + 40) = v4;
  return v4;
}

void sub_100066F6C(uint64_t a1, void *lpsrc)
{
  sub_1000664E0(a1, (uint64_t)lpsrc);
}

uint64_t sub_100067010()
{
  return 1;
}

void *sub_100067018@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.PointAltitudeUncertainEllipsoid");
}

void sub_100067028(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 40))
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      int v6 = *(_DWORD **)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(proto::gnss::Emergency::EllipsoidArc::default_instance_ + 8);
      }
      sub_100064FB8(v6, v7);
      int v4 = *(_DWORD *)(a2 + 40);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_18;
      }
    }
    else if ((*(unsigned char *)(a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v8 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(_DWORD *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_19;
    }
LABEL_18:
    int v9 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 40) |= 4u;
    *(_DWORD *)(a1 + 20) = v9;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
LABEL_19:
    int v10 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 40) |= 8u;
    *(_DWORD *)(a1 + 24) = v10;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        return;
      }
      goto LABEL_10;
    }
LABEL_20:
    int v11 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 40) |= 0x10u;
    *(_DWORD *)(a1 + 28) = v11;
    if ((*(_DWORD *)(a2 + 40) & 0x20) == 0) {
      return;
    }
LABEL_10:
    int v5 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 0x20u;
    *(_DWORD *)(a1 + 32) = v5;
  }
}

void sub_1000671B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000671C8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1001094E8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::EllipsoidArc::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100067258(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000671C8(a1);

  operator delete();
}

void sub_100067290()
{
}

uint64_t sub_1000672E8(uint64_t result)
{
  if (*(unsigned char *)(result + 40))
  {
    if (*(unsigned char *)(result + 40))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 20)) {
          *(void *)(v1 + 8) = 0;
        }
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
  }
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_10006731C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 16);
  int v6 = (unsigned int *)(a1 + 20);
  uint64_t v7 = (unsigned int *)(a1 + 24);
  int v8 = (unsigned int *)(a1 + 28);
  int v9 = (unsigned int *)(a1 + 32);
  while (2)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_24;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        int v13 = *(_DWORD **)(a1 + 8);
        if (!v13) {
          operator new();
        }
        unsigned int v35 = 0;
        int v14 = (char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35))return 0; {
        }
          }
        else
        {
          unsigned int v35 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
        if (!sub_100065150(v13, this, v24) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v25 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v25, 1);
        int v27 = v25 - 1;
        if (v27 < 0 == v26) {
          *((_DWORD *)this + 14) = v27;
        }
        BOOL v28 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v28 >= v15 || *v28 != 16) {
          continue;
        }
        int v16 = v28 + 1;
        *((void *)this + 1) = v16;
        goto LABEL_37;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
LABEL_37:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v16;
          int v29 = v16 + 1;
          *((void *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        if ((unint64_t)v29 >= v15 || *v29 != 24) {
          continue;
        }
        int v17 = v29 + 1;
        *((void *)this + 1) = v17;
LABEL_45:
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v17;
          int v31 = v17 + 1;
          *((void *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        if ((unint64_t)v31 >= v15 || *v31 != 32) {
          continue;
        }
        int v18 = v31 + 1;
        *((void *)this + 1) = v18;
LABEL_53:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v18;
          unsigned int v32 = v18 + 1;
          *((void *)this + 1) = v32;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        if ((unint64_t)v32 >= v15 || *v32 != 40) {
          continue;
        }
        int v19 = v32 + 1;
        *((void *)this + 1) = v19;
LABEL_61:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          unsigned int v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v19;
          unsigned int v33 = v19 + 1;
          *((void *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        if ((unint64_t)v33 >= v15 || *v33 != 48) {
          continue;
        }
        int v20 = v33 + 1;
        *((void *)this + 1) = v20;
LABEL_69:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          int v34 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v9 = *v20;
          int v34 = (unsigned __int8 *)(v20 + 1);
          *((void *)this + 1) = v34;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        if (v34 != (unsigned __int8 *)v15 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_45;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_53;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_61;
      case 6u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_69;
      default:
        int v12 = TagFallback & 7;
LABEL_24:
        if (v12 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100067788(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(proto::gnss::Emergency::EllipsoidArc::default_instance_ + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = v5[10];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], a2, a4);
  int v6 = v5[10];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], a2, a4);
  int v6 = v5[10];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], a2, a4);
    if ((v5[10] & 0x20) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], a2, a4);
  int v6 = v5[10];
  if ((v6 & 0x10) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return result;
  }
LABEL_15:
  int v8 = v5[8];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v8, a2, a4);
}

uint64_t sub_100067878(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_37;
  }
  if ((*(unsigned char *)(a1 + 40) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(proto::gnss::Emergency::EllipsoidArc::default_instance_ + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100065364(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v4 = (v10 + v4);
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      int v12 = 2;
    }
    uint64_t v4 = (v12 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_29;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_19:
    if ((v3 & 0x20) == 0) {
      goto LABEL_37;
    }
    goto LABEL_33;
  }
LABEL_29:
  unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v16 = 2;
  }
  uint64_t v4 = (v16 + v4);
  if ((v3 & 0x20) != 0)
  {
LABEL_33:
    int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v17 >= 0x80) {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    }
    else {
      int v18 = 2;
    }
    uint64_t v4 = (v18 + v4);
  }
LABEL_37:
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

void sub_1000679D4(uint64_t a1, void *lpsrc)
{
  sub_100067028(a1, (uint64_t)lpsrc);
}

uint64_t sub_100067A78()
{
  return 1;
}

void *sub_100067A80@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.EllipsoidArc");
}

void sub_100067A90(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      *(_DWORD *)(a1 + 24) |= 1u;
      uint64_t v5 = *(_DWORD **)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(proto::gnss::Emergency::PointAltitude::default_instance_ + 8);
      }
      sub_100064FB8(v5, v6);
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v7;
    }
  }
}

void sub_100067B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100067BA8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100109560;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::PointAltitude::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100067C38(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100067BA8(a1);

  operator delete();
}

void sub_100067C70()
{
}

uint64_t sub_100067CC0(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    if (*(unsigned char *)(result + 24))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 20)) {
          *(void *)(v1 + 8) = 0;
        }
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_100067CF0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          int v10 = (char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
          goto LABEL_30;
        }
      }
      else
      {
        int v8 = TagFallback & 7;
      }
LABEL_18:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
    int v8 = TagFallback & 7;
    if (v8 != 2) {
      goto LABEL_18;
    }
    *(_DWORD *)(a1 + 24) |= 1u;
    int v11 = *(_DWORD **)(a1 + 8);
    if (!v11) {
      operator new();
    }
    unsigned int v23 = 0;
    int v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23)) {
        return 0;
      }
    }
    else
    {
      unsigned int v23 = *v12;
      *((void *)this + 1) = v12 + 1;
    }
    int v13 = *((_DWORD *)this + 14);
    int v14 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v13 + 1;
    if (v13 >= v14) {
      return 0;
    }
    int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_100065150(v11, this, v16) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
    int v17 = *((_DWORD *)this + 14);
    BOOL v18 = __OFSUB__(v17, 1);
    int v19 = v17 - 1;
    if (v19 < 0 == v18) {
      *((_DWORD *)this + 14) = v19;
    }
    int v20 = (unsigned char *)*((void *)this + 1);
    unint64_t v9 = *((void *)this + 2);
    if ((unint64_t)v20 < v9 && *v20 == 16)
    {
      int v10 = v20 + 1;
      *((void *)this + 1) = v10;
LABEL_30:
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        int v21 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        unsigned int *v5 = *v10;
        int v21 = (unsigned __int8 *)(v10 + 1);
        *((void *)this + 1) = v21;
      }
      *(_DWORD *)(a1 + 24) |= 2u;
      if (v21 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
  }
}

uint64_t sub_100067F44(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::PointAltitude::default_instance_ + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 24) & 2) != 0)
  {
LABEL_7:
    int v8 = *(_DWORD *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return result;
}

uint64_t sub_100067FC4(uint64_t a1, unsigned int a2)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4) {
    uint64_t v4 = *(void *)(proto::gnss::Emergency::PointAltitude::default_instance_ + 8);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100065364(v4, a2);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  }
  else {
    int v7 = 1;
  }
  uint64_t v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 24) & 2) != 0)
  {
LABEL_12:
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    uint64_t v3 = (v9 + v3);
  }
LABEL_16:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_100068070(uint64_t a1, void *lpsrc)
{
  sub_100067A90(a1, (uint64_t)lpsrc);
}

uint64_t sub_100068114()
{
  return 1;
}

void *sub_10006811C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.PointAltitude");
}

void sub_10006812C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), *(_DWORD *)(a2 + 16) + a1[4]);
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 8) + 8 * v4);
      int v6 = a1[5];
      uint64_t v7 = (int)a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), v6 + 1);
          int v6 = a1[5];
        }
        a1[5] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 1);
      a1[4] = v7 + 1;
      sub_100064FB8(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
  if (*(unsigned char *)(a2 + 40))
  {
    int v9 = *(_DWORD *)(a2 + 32);
    a1[10] |= 1u;
    a1[8] = v9;
  }
}

void sub_1000682A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000682BC(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1001095D8;
  int v2 = *((_DWORD *)this + 5);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*((void *)this + 1) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)this + 5);
      }
    }
  }
  if (*((void *)this + 1)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10006837C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000682BC(a1);

  operator delete();
}

void sub_1000683B4()
{
}

uint64_t sub_10006840C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t result = sub_10003AD6C(a1 + 8);
  *(_DWORD *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_100068444(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = a1 + 8;
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_16;
        }
        int v10 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v10 >= v11 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v10;
          int v12 = v10 + 1;
          *((void *)this + 1) = v12;
        }
        a1[10] |= 1u;
        if ((unint64_t)v12 < v11 && *v12 == 18) {
          goto LABEL_23;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_16;
      }
      while (1)
      {
        int v14 = a1[5];
        uint64_t v15 = (int)a1[4];
        if ((int)v15 >= v14)
        {
          if (v14 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v14 + 1);
            int v14 = a1[5];
          }
          a1[5] = v14 + 1;
          operator new();
        }
        uint64_t v16 = *((void *)a1 + 1);
        a1[4] = v15 + 1;
        int v17 = *(_DWORD **)(v16 + 8 * v15);
        unsigned int v27 = 0;
        BOOL v18 = (char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0; {
        }
          }
        else
        {
          unsigned int v27 = *v18;
          *((void *)this + 1) = v18 + 1;
        }
        int v19 = *((_DWORD *)this + 14);
        int v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
        if (!sub_100065150(v17, this, v22) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        int v23 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v23, 1);
        int v25 = v23 - 1;
        if (v25 < 0 == v24) {
          *((_DWORD *)this + 14) = v25;
        }
        int v12 = (unsigned char *)*((void *)this + 1);
        BOOL v26 = (unsigned char *)*((void *)this + 2);
        if (v12 >= v26 || *v12 != 18) {
          break;
        }
LABEL_23:
        *((void *)this + 1) = v12 + 1;
      }
      if (v12 == v26 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v9 = TagFallback & 7;
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000686F4(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 40)) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 32), a2, a4);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_10006876C(uint64_t a1, unsigned int a2)
{
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v4 >= 0x80) {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    }
    else {
      int v3 = 2;
    }
  }
  else
  {
    int v3 = 0;
  }
  int v5 = *(_DWORD *)(a1 + 16);
  uint64_t v6 = (v5 + v3);
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100065364(*(void *)(*(void *)(a1 + 8) + 8 * v7), a2);
      int v9 = (int)v8;
      if (v8 >= 0x80) {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      }
      else {
        int v10 = 1;
      }
      uint64_t v6 = (v9 + v6 + v10);
      ++v7;
    }
    while (v7 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 36) = v6;
  return v6;
}

void sub_10006881C(_DWORD *a1, void *lpsrc)
{
  sub_10006812C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000688C0()
{
  return 1;
}

void *sub_1000688C8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.Polygon");
}

void sub_1000688D8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 72);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 72))
  {
    *(_DWORD *)(a1 + 72) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 8);
    }
    sub_1000654CC(v6, v7);
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
  }
  else if ((*(unsigned char *)(a2 + 72) & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 72) |= 2u;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9) {
    uint64_t v9 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 16);
  }
  sub_100065B68(v8, v9);
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_24:
  *(_DWORD *)(a1 + 72) |= 4u;
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = *(void *)(a2 + 24);
  if (!v11) {
    uint64_t v11 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 24);
  }
  sub_1000664E0(v10, v11);
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_34;
  }
LABEL_29:
  *(_DWORD *)(a1 + 72) |= 8u;
  uint64_t v12 = *(void *)(a1 + 32);
  if (!v12) {
    operator new();
  }
  uint64_t v13 = *(void *)(a2 + 32);
  if (!v13) {
    uint64_t v13 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 32);
  }
  sub_100067028(v12, v13);
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_39:
    *(_DWORD *)(a1 + 72) |= 0x20u;
    uint64_t v16 = *(void *)(a1 + 48);
    if (!v16) {
      operator new();
    }
    uint64_t v17 = *(void *)(a2 + 48);
    if (!v17) {
      uint64_t v17 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 48);
    }
    sub_100067A90(v16, v17);
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        return;
      }
      goto LABEL_12;
    }
    goto LABEL_44;
  }
LABEL_34:
  *(_DWORD *)(a1 + 72) |= 0x10u;
  int v14 = *(_DWORD **)(a1 + 40);
  if (!v14) {
    operator new();
  }
  uint64_t v15 = *(void *)(a2 + 40);
  if (!v15) {
    uint64_t v15 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 40);
  }
  sub_100064FB8(v14, v15);
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x20) != 0) {
    goto LABEL_39;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_44:
  *(_DWORD *)(a1 + 72) |= 0x40u;
  BOOL v18 = *(_DWORD **)(a1 + 56);
  if (!v18) {
    operator new();
  }
  uint64_t v19 = *(void *)(a2 + 56);
  if (!v19) {
    uint64_t v19 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 56);
  }
  sub_10006812C(v18, v19);
  if ((*(_DWORD *)(a2 + 72) & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) |= 0x80u;
    *(_DWORD *)(a1 + 64) = v5;
  }
}

void sub_100068CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100068CE4(void *result)
{
  if ((void *)proto::gnss::Emergency::ShapeInfo::default_instance_ != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[5];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[6];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t result = (void *)v1[7];
    if (result)
    {
      uint64_t v8 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v8();
    }
  }
  return result;
}

void sub_100068E60(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109650;
  sub_100068CE4(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100068EB4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109650;
  sub_100068CE4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100068F1C()
{
}

uint64_t proto::gnss::Emergency::ShapeInfo::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 72);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 72))
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = sub_1000656FC(this);
        int v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(void *)(v1 + 16);
      if (this)
      {
        this = sub_100065E04(this);
        int v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 4) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        this = sub_1000667C0(this);
        int v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        this = sub_1000672E8(this);
        int v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 40);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 20)) {
          *(void *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 20) = 0;
        int v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      this = *(void *)(v1 + 48);
      if (this)
      {
        this = sub_100067CC0(this);
        int v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 56);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 40)) {
          *(_DWORD *)(v4 + 32) = 0;
        }
        this = sub_10003AD6C(v4 + 8);
        *(_DWORD *)(v4 + 40) = 0;
      }
    }
    *(_DWORD *)(v1 + 64) = 0;
  }
  *(_DWORD *)(v1 + 72) = 0;
  return this;
}

uint64_t sub_100069054(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 64);
  while (1)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 < *((void *)this + 2) && (*v6 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 72) |= 1u;
        uint64_t v9 = *(void *)(a1 + 8);
        if (!v9) {
          operator new();
        }
        unsigned int v77 = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0; {
        }
          }
        else
        {
          unsigned int v77 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        int v13 = *((_DWORD *)this + 14);
        int v14 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0;
        }
        int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_10006572C(v9, this, v16) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
        int v17 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)this + 14) = v19;
        }
        int v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 18) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
        goto LABEL_41;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_28;
        }
LABEL_41:
        *(_DWORD *)(a1 + 72) |= 2u;
        uint64_t v21 = *(void *)(a1 + 16);
        if (!v21) {
          operator new();
        }
        unsigned int v77 = 0;
        unsigned int v22 = (char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0; {
        }
          }
        else
        {
          unsigned int v77 = *v22;
          *((void *)this + 1) = v22 + 1;
        }
        int v23 = *((_DWORD *)this + 14);
        int v24 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v23 + 1;
        if (v23 >= v24) {
          return 0;
        }
        int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_100065E34(v21, this, v26) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
        int v27 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v27, 1);
        int v28 = v27 - 1;
        if (v28 < 0 == v18) {
          *((_DWORD *)this + 14) = v28;
        }
        int v29 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v29 >= *((void *)this + 2) || *v29 != 26) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
LABEL_55:
        *(_DWORD *)(a1 + 72) |= 4u;
        uint64_t v30 = *(void *)(a1 + 24);
        if (!v30) {
          operator new();
        }
        unsigned int v77 = 0;
        int v31 = (char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0; {
        }
          }
        else
        {
          unsigned int v77 = *v31;
          *((void *)this + 1) = v31 + 1;
        }
        int v32 = *((_DWORD *)this + 14);
        int v33 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v32 + 1;
        if (v32 >= v33) {
          return 0;
        }
        int v34 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_1000667F4(v30, this, v35) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v34);
        int v36 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v36, 1);
        int v37 = v36 - 1;
        if (v37 < 0 == v18) {
          *((_DWORD *)this + 14) = v37;
        }
        unsigned int v38 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v38 >= *((void *)this + 2) || *v38 != 34) {
          continue;
        }
        *((void *)this + 1) = v38 + 1;
LABEL_69:
        *(_DWORD *)(a1 + 72) |= 8u;
        uint64_t v39 = *(void *)(a1 + 32);
        if (!v39) {
          operator new();
        }
        unsigned int v77 = 0;
        unsigned int v40 = (char *)*((void *)this + 1);
        if ((unint64_t)v40 >= *((void *)this + 2) || *v40 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0; {
        }
          }
        else
        {
          unsigned int v77 = *v40;
          *((void *)this + 1) = v40 + 1;
        }
        int v41 = *((_DWORD *)this + 14);
        int v42 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v41 + 1;
        if (v41 >= v42) {
          return 0;
        }
        int v43 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_10006731C(v39, this, v44) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v43);
        int v45 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v45, 1);
        int v46 = v45 - 1;
        if (v46 < 0 == v18) {
          *((_DWORD *)this + 14) = v46;
        }
        BOOL v47 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v47 >= *((void *)this + 2) || *v47 != 42) {
          continue;
        }
        *((void *)this + 1) = v47 + 1;
LABEL_83:
        *(_DWORD *)(a1 + 72) |= 0x10u;
        int v48 = *(_DWORD **)(a1 + 40);
        if (!v48) {
          operator new();
        }
        unsigned int v77 = 0;
        BOOL v49 = (char *)*((void *)this + 1);
        if ((unint64_t)v49 >= *((void *)this + 2) || *v49 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0; {
        }
          }
        else
        {
          unsigned int v77 = *v49;
          *((void *)this + 1) = v49 + 1;
        }
        int v50 = *((_DWORD *)this + 14);
        int v51 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v50 + 1;
        if (v50 >= v51) {
          return 0;
        }
        int v52 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_100065150(v48, this, v53) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v52);
        int v54 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v54, 1);
        int v55 = v54 - 1;
        if (v55 < 0 == v18) {
          *((_DWORD *)this + 14) = v55;
        }
        int v56 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v56 >= *((void *)this + 2) || *v56 != 50) {
          continue;
        }
        *((void *)this + 1) = v56 + 1;
LABEL_97:
        *(_DWORD *)(a1 + 72) |= 0x20u;
        uint64_t v57 = *(void *)(a1 + 48);
        if (!v57) {
          operator new();
        }
        unsigned int v77 = 0;
        int v58 = (char *)*((void *)this + 1);
        if ((unint64_t)v58 >= *((void *)this + 2) || *v58 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0; {
        }
          }
        else
        {
          unsigned int v77 = *v58;
          *((void *)this + 1) = v58 + 1;
        }
        int v59 = *((_DWORD *)this + 14);
        int v60 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v59 + 1;
        if (v59 >= v60) {
          return 0;
        }
        int v61 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_100067CF0(v57, this, v62) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v61);
        int v63 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v63, 1);
        int v64 = v63 - 1;
        if (v64 < 0 == v18) {
          *((_DWORD *)this + 14) = v64;
        }
        long long v65 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v65 >= *((void *)this + 2) || *v65 != 58) {
          continue;
        }
        *((void *)this + 1) = v65 + 1;
LABEL_111:
        *(_DWORD *)(a1 + 72) |= 0x40u;
        uint64_t v66 = *(_DWORD **)(a1 + 56);
        if (!v66) {
          operator new();
        }
        unsigned int v77 = 0;
        uint64_t v67 = (char *)*((void *)this + 1);
        if ((unint64_t)v67 >= *((void *)this + 2) || *v67 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0; {
        }
          }
        else
        {
          unsigned int v77 = *v67;
          *((void *)this + 1) = v67 + 1;
        }
        int v68 = *((_DWORD *)this + 14);
        int v69 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v68 + 1;
        if (v68 >= v69) {
          return 0;
        }
        int v70 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_100068444(v66, this, v71) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v70);
        int v72 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v72, 1);
        int v73 = v72 - 1;
        if (v73 < 0 == v18) {
          *((_DWORD *)this + 14) = v73;
        }
        uint64_t v74 = (unsigned char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v74 < v11 && *v74 == 64)
        {
          uint64_t v12 = v74 + 1;
          *((void *)this + 1) = v12;
LABEL_125:
          if ((unint64_t)v12 >= v11 || *v12 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!result) {
              return result;
            }
            unint64_t v75 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v11 = *((void *)this + 2);
          }
          else
          {
            unsigned int *v5 = *v12;
            unint64_t v75 = (unsigned __int8 *)(v12 + 1);
            *((void *)this + 1) = v75;
          }
          *(_DWORD *)(a1 + 72) |= 0x80u;
          if (v75 == (unsigned __int8 *)v11
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
        }
        break;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_55;
        }
        goto LABEL_28;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_69;
        }
        goto LABEL_28;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_83;
        }
        goto LABEL_28;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_97;
        }
        goto LABEL_28;
      case 7u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_111;
        }
        goto LABEL_28;
      case 8u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_125;
      default:
        int v8 = TagFallback & 7;
LABEL_28:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1000699AC(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 72);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_16:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_19:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_22:
  uint64_t v11 = *(void *)(v5 + 40);
  if (!v11) {
    uint64_t v11 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 40);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }
LABEL_25:
  uint64_t v12 = *(void *)(v5 + 48);
  if (!v12) {
    uint64_t v12 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 48);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      return result;
    }
    goto LABEL_31;
  }
LABEL_28:
  uint64_t v13 = *(void *)(v5 + 56);
  if (!v13) {
    uint64_t v13 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 56);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v13, a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x80) != 0)
  {
LABEL_31:
    int v14 = *(_DWORD *)(v5 + 64);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v14, a2, a4);
  }
  return result;
}

uint64_t sub_100069B34(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 72);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_59;
  }
  if ((*(unsigned char *)(a1 + 72) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 72) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100065A00(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 72);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000662F4(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 72);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13) {
      uint64_t v13 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 24);
    }
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100066DE4(v13, a2);
    int v15 = (int)v14;
    if (v14 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
    }
    else {
      int v16 = 1;
    }
    uint64_t v4 = (v4 + v15 + v16 + 1);
    int v3 = *(_DWORD *)(a1 + 72);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_37;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)(a1 + 32);
  if (!v17) {
    uint64_t v17 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 32);
  }
  BOOL v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100067878(v17, a2);
  int v19 = (int)v18;
  if (v18 >= 0x80) {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
  }
  else {
    int v20 = 1;
  }
  uint64_t v4 = (v4 + v19 + v20 + 1);
  int v3 = *(_DWORD *)(a1 + 72);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_43;
  }
LABEL_37:
  uint64_t v21 = *(void *)(a1 + 40);
  if (!v21) {
    uint64_t v21 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 40);
  }
  unsigned int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100065364(v21, a2);
  int v23 = (int)v22;
  if (v22 >= 0x80) {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
  }
  else {
    int v24 = 1;
  }
  uint64_t v4 = (v4 + v23 + v24 + 1);
  int v3 = *(_DWORD *)(a1 + 72);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }
LABEL_43:
  uint64_t v25 = *(void *)(a1 + 48);
  if (!v25) {
    uint64_t v25 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 48);
  }
  unsigned int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100067FC4(v25, a2);
  int v27 = (int)v26;
  if (v26 >= 0x80) {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
  }
  else {
    int v28 = 1;
  }
  uint64_t v4 = (v4 + v27 + v28 + 1);
  int v3 = *(_DWORD *)(a1 + 72);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0) {
      goto LABEL_59;
    }
    goto LABEL_55;
  }
LABEL_49:
  uint64_t v29 = *(void *)(a1 + 56);
  if (!v29) {
    uint64_t v29 = *(void *)(proto::gnss::Emergency::ShapeInfo::default_instance_ + 56);
  }
  uint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10006876C(v29, a2);
  int v31 = (int)v30;
  if (v30 >= 0x80) {
    int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
  }
  else {
    int v32 = 1;
  }
  uint64_t v4 = (v4 + v31 + v32 + 1);
  if ((*(_DWORD *)(a1 + 72) & 0x80) != 0)
  {
LABEL_55:
    int v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if (v33 >= 0x80) {
      int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33, a2) + 1;
    }
    else {
      int v34 = 2;
    }
    uint64_t v4 = (v34 + v4);
  }
LABEL_59:
  *(_DWORD *)(a1 + 68) = v4;
  return v4;
}

void sub_100069DB0(uint64_t a1, void *lpsrc)
{
  sub_1000688D8(a1, (uint64_t)lpsrc);
}

uint64_t sub_100069E54()
{
  return 1;
}

void *sub_100069E5C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.ShapeInfo");
}

void sub_100069E6C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 16);
      if (v5 >= 9) {
        __assert_rtn("set_shape_type", "GnssEmergencyTypes.pb.h", 19156, "::proto::gnss::Emergency::ShapeType_IsValid(value)");
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(proto::gnss::Emergency::LocEstimate::default_instance_ + 8);
      }
      sub_1000688D8(v6, v7);
    }
  }
}

void sub_100069FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100069FC0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1001096C8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::LocEstimate::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10006A050(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100069FC0(a1);

  operator delete();
}

void sub_10006A088()
{
}

uint64_t proto::gnss::Emergency::LocEstimate::Clear(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 24);
  if (v2)
  {
    *(_DWORD *)(this + 16) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 8);
      if (this) {
        this = proto::gnss::Emergency::ShapeInfo::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return this;
}

uint64_t sub_10006A118(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unsigned int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_15;
        }
        unsigned int v21 = 0;
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v9 = v21;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 8)
        {
          *(_DWORD *)(a1 + 24) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_15;
      }
      int v7 = TagFallback & 7;
      if (v7 == 2) {
        break;
      }
LABEL_15:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_25:
    *(_DWORD *)(a1 + 24) |= 2u;
    uint64_t v12 = *(void *)(a1 + 8);
    if (!v12) {
      operator new();
    }
    unsigned int v22 = 0;
    uint64_t v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22)) {
        return 0;
      }
    }
    else
    {
      unsigned int v22 = *v13;
      *((void *)this + 1) = v13 + 1;
    }
    int v14 = *((_DWORD *)this + 14);
    int v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0;
    }
    int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
    if (!sub_100069054(v12, this, v17) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    int v18 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v18, 1);
    int v20 = v18 - 1;
    if (v20 < 0 == v19) {
      *((_DWORD *)this + 14) = v20;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_10006A384(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::LocEstimate::default_instance_ + 8);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_10006A404(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 24);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(proto::gnss::Emergency::LocEstimate::default_instance_ + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100069B34(v6, a2);
    int v9 = (int)v7;
    if (v7 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    }
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_10006A4CC(uint64_t a1, void *lpsrc)
{
  sub_100069E6C(a1, (uint64_t)lpsrc);
}

uint64_t sub_10006A570()
{
  return 1;
}

void *sub_10006A578@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.LocEstimate");
}

void sub_10006A588(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_10006A634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10006A64C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109740;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10006A66C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109740;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10006A6C0()
{
}

uint64_t sub_10006A70C(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_10006A720(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      uint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      uint64_t v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        uint64_t v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        unsigned int *v5 = *v12;
        uint64_t v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          int v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10006A8C0(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_10006A92C(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_10006A9BC(_DWORD *a1, void *lpsrc)
{
  sub_10006A588(a1, (uint64_t)lpsrc);
}

uint64_t sub_10006AA60()
{
  return 1;
}

void *sub_10006AA68@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.HorizontalVelocity");
}

void sub_10006AA78(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[7] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 28);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[7] |= 2u;
    a1[3] = v7;
    int v4 = *(_DWORD *)(a2 + 28);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    int v8 = *(_DWORD *)(a2 + 16);
    a1[7] |= 4u;
    a1[4] = v8;
    if ((*(_DWORD *)(a2 + 28) & 8) == 0) {
      return;
    }
LABEL_8:
    int v5 = *(_DWORD *)(a2 + 20);
    a1[7] |= 8u;
    a1[5] = v5;
  }
}

void sub_10006AB6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10006AB84(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1001097B8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10006ABA4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1001097B8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10006ABF8()
{
}

uint64_t sub_10006AC44(uint64_t result)
{
  if (*(unsigned char *)(result + 28))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_10006AC58(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  int v7 = a1 + 4;
  int v8 = a1 + 5;
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 < v12 && (*v13 & 0x80000000) == 0)
        {
          unsigned int *v5 = *v13;
          int v14 = v13 + 1;
          *((void *)this + 1) = v14;
LABEL_24:
          a1[7] |= 1u;
          if ((unint64_t)v14 < v12 && *v14 == 16)
          {
            int v15 = v14 + 1;
            *((void *)this + 1) = v15;
            goto LABEL_27;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (result)
        {
          int v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_27:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v15;
          int v18 = v15 + 1;
          *((void *)this + 1) = v18;
        }
        a1[7] |= 2u;
        if ((unint64_t)v18 >= v12 || *v18 != 24) {
          continue;
        }
        int v16 = v18 + 1;
        *((void *)this + 1) = v16;
LABEL_35:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          BOOL v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v16;
          BOOL v19 = v16 + 1;
          *((void *)this + 1) = v19;
        }
        a1[7] |= 4u;
        if ((unint64_t)v19 >= v12 || *v19 != 32) {
          continue;
        }
        unsigned int v17 = v19 + 1;
        *((void *)this + 1) = v17;
LABEL_43:
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v17;
          int v20 = (unsigned __int8 *)(v17 + 1);
          *((void *)this + 1) = v20;
        }
        a1[7] |= 8u;
        if (v20 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_35;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_43;
      default:
        int v11 = TagFallback & 7;
LABEL_18:
        if (v11 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_10006AF18(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[7];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[7];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
      if ((v5[7] & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[7];
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = v5[5];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_10006AFC0(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_25;
  }
  if (*(unsigned char *)(a1 + 28))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 28);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_21;
  }
  int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    int v9 = 2;
  }
  uint64_t v4 = (v9 + v4);
  if ((v3 & 8) != 0)
  {
LABEL_21:
    unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v10 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    }
    else {
      int v11 = 2;
    }
    uint64_t v4 = (v11 + v4);
  }
LABEL_25:
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

void sub_10006B0A8(_DWORD *a1, void *lpsrc)
{
  sub_10006AA78(a1, (uint64_t)lpsrc);
}

uint64_t sub_10006B14C()
{
  return 1;
}

void *sub_10006B154@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.HorizWithVertVelocity");
}

void sub_10006B164(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 24);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v7;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return;
    }
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v5;
  }
}

void sub_10006B238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10006B250(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109830;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10006B270(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109830;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10006B2C4()
{
}

uint64_t sub_10006B314(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_10006B32C(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  int v7 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v14;
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        a1[6] |= 1u;
        if ((unint64_t)v15 < v12 && *v15 == 16)
        {
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_27;
        }
      }
      if (v10 != 2) {
        break;
      }
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      int v16 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_27:
      if ((unint64_t)v16 >= v12 || *v16 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!result) {
          return result;
        }
        unsigned int v17 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        *int v6 = *v16;
        unsigned int v17 = v16 + 1;
        *((void *)this + 1) = v17;
      }
      a1[6] |= 2u;
      if ((unint64_t)v17 < v12 && *v17 == 24)
      {
        uint64_t v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_35:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v18 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v13;
          int v18 = (unsigned __int8 *)(v13 + 1);
          *((void *)this + 1) = v18;
        }
        a1[6] |= 4u;
        if (v18 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      int v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

int *sub_10006B550(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[6];
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
    if ((v5[6] & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
  int v6 = v5[6];
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = v5[4];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_10006B5DC(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 24))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_10006B694(_DWORD *a1, void *lpsrc)
{
  sub_10006B164(a1, (uint64_t)lpsrc);
}

uint64_t sub_10006B738()
{
  return 1;
}

void *sub_10006B740@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.HorizWithUncertaintyVelocity");
}

void sub_10006B750(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[9] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_14;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[9] |= 2u;
    a1[3] = v7;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_15;
    }
LABEL_14:
    int v8 = *(_DWORD *)(a2 + 16);
    a1[9] |= 4u;
    a1[4] = v8;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
LABEL_15:
    int v9 = *(_DWORD *)(a2 + 20);
    a1[9] |= 8u;
    a1[5] = v9;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        return;
      }
      goto LABEL_10;
    }
LABEL_16:
    int v10 = *(_DWORD *)(a2 + 24);
    a1[9] |= 0x10u;
    a1[6] = v10;
    if ((*(_DWORD *)(a2 + 36) & 0x20) == 0) {
      return;
    }
LABEL_10:
    int v5 = *(_DWORD *)(a2 + 28);
    a1[9] |= 0x20u;
    a1[7] = v5;
  }
}

void sub_10006B884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10006B89C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1001098A8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10006B8BC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1001098A8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10006B910()
{
}

uint64_t sub_10006B964(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_10006B97C(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  int v7 = a1 + 4;
  int v8 = a1 + 5;
  int v9 = a1 + 6;
  int v10 = a1 + 7;
  while (2)
  {
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          unsigned int *v5 = *v15;
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
LABEL_28:
          a1[9] |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            unsigned int v17 = v16 + 1;
            *((void *)this + 1) = v17;
            goto LABEL_31;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (result)
        {
          int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          goto LABEL_28;
        }
        break;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_31:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v17;
          unsigned int v22 = v17 + 1;
          *((void *)this + 1) = v22;
        }
        a1[9] |= 2u;
        if ((unint64_t)v22 >= v14 || *v22 != 24) {
          continue;
        }
        int v18 = v22 + 1;
        *((void *)this + 1) = v18;
LABEL_39:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v23 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v18;
          int v23 = v18 + 1;
          *((void *)this + 1) = v23;
        }
        a1[9] |= 4u;
        if ((unint64_t)v23 >= v14 || *v23 != 32) {
          continue;
        }
        BOOL v19 = v23 + 1;
        *((void *)this + 1) = v19;
LABEL_47:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v19;
          int v24 = v19 + 1;
          *((void *)this + 1) = v24;
        }
        a1[9] |= 8u;
        if ((unint64_t)v24 >= v14 || *v24 != 40) {
          continue;
        }
        int v20 = v24 + 1;
        *((void *)this + 1) = v20;
LABEL_55:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          uint64_t v25 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v9 = *v20;
          uint64_t v25 = v20 + 1;
          *((void *)this + 1) = v25;
        }
        a1[9] |= 0x10u;
        if ((unint64_t)v25 >= v14 || *v25 != 48) {
          continue;
        }
        unsigned int v21 = v25 + 1;
        *((void *)this + 1) = v21;
LABEL_63:
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          unsigned int v26 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v21;
          unsigned int v26 = (unsigned __int8 *)(v21 + 1);
          *((void *)this + 1) = v26;
        }
        a1[9] |= 0x20u;
        if (v26 != (unsigned __int8 *)v14 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_39;
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        BOOL v19 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_47;
      case 5u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_55;
      case 6u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v21 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_63;
      default:
        int v13 = TagFallback & 7;
LABEL_22:
        if (v13 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_10006BD34(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[9];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[9];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[9];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[9];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
    if ((v5[9] & 0x20) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[9];
  if ((v6 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return result;
  }
LABEL_13:
  int v7 = v5[7];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, a2, a4);
}

uint64_t sub_10006BE14(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_35;
  }
  if (*(unsigned char *)(a1 + 36))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_27;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v4 = (v11 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_17:
    if ((v3 & 0x20) == 0) {
      goto LABEL_35;
    }
    goto LABEL_31;
  }
LABEL_27:
  unint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v4 = (v13 + v4);
  if ((v3 & 0x20) != 0)
  {
LABEL_31:
    unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v14 >= 0x80) {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2) + 1;
    }
    else {
      int v15 = 2;
    }
    uint64_t v4 = (v15 + v4);
  }
LABEL_35:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_10006BF54(_DWORD *a1, void *lpsrc)
{
  sub_10006B750(a1, (uint64_t)lpsrc);
}

uint64_t sub_10006BFF8()
{
  return 1;
}

void *sub_10006C000@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.HorizWithVertUncertaintyVelocity");
}

void sub_10006C010(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v4) {
    return;
  }
  if ((*(unsigned char *)(a2 + 44) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    *(_DWORD *)(a1 + 44) |= 2u;
    int v7 = *(_DWORD **)(a1 + 16);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(proto::gnss::Emergency::VelocityInfo::default_instance_ + 16);
    }
    sub_10006AA78(v7, v8);
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_24;
    }
    goto LABEL_19;
  }
  *(_DWORD *)(a1 + 44) |= 1u;
  int v5 = *(_DWORD **)(a1 + 8);
  if (!v5) {
    operator new();
  }
  uint64_t v6 = *(void *)(a2 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(proto::gnss::Emergency::VelocityInfo::default_instance_ + 8);
  }
  sub_10006A588(v5, v6);
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 2) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v4 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_19:
  *(_DWORD *)(a1 + 44) |= 4u;
  int v9 = *(_DWORD **)(a1 + 24);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = *(void *)(a2 + 24);
  if (!v10) {
    uint64_t v10 = *(void *)(proto::gnss::Emergency::VelocityInfo::default_instance_ + 24);
  }
  sub_10006B164(v9, v10);
  if ((*(_DWORD *)(a2 + 44) & 8) != 0)
  {
LABEL_24:
    *(_DWORD *)(a1 + 44) |= 8u;
    int v11 = *(_DWORD **)(a1 + 32);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 32);
    if (!v12) {
      uint64_t v12 = *(void *)(proto::gnss::Emergency::VelocityInfo::default_instance_ + 32);
    }
    sub_10006B750(v11, v12);
  }
}

void sub_10006C260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_10006C278(void *result)
{
  if ((void *)proto::gnss::Emergency::VelocityInfo::default_instance_ != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t result = (void *)v1[4];
    if (result)
    {
      int v5 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v5();
    }
  }
  return result;
}

void sub_10006C370(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109920;
  sub_10006C278(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10006C3C4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109920;
  sub_10006C278(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10006C42C()
{
}

uint64_t proto::gnss::Emergency::VelocityInfo::Clear(uint64_t this)
{
  LOBYTE(v1) = *(unsigned char *)(this + 44);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(this + 44))
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 20)) {
          *(void *)(v2 + 8) = 0;
        }
        *(_DWORD *)(v2 + 20) = 0;
        int v1 = *(_DWORD *)(this + 44);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 28))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        int v1 = *(_DWORD *)(this + 44);
      }
    }
    if ((v1 & 4) != 0)
    {
      uint64_t v4 = *(void *)(this + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 24))
        {
          *(void *)(v4 + 8) = 0;
          *(_DWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 24) = 0;
        int v1 = *(_DWORD *)(this + 44);
      }
    }
    if ((v1 & 8) != 0)
    {
      uint64_t v5 = *(void *)(this + 32);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 36))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
          *(void *)(v5 + 24) = 0;
        }
        *(_DWORD *)(v5 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t sub_10006C518(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v8 = *(unsigned int **)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v45 = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0; {
        }
          }
        else
        {
          unsigned int v45 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
        if (!sub_10006A720(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        unsigned int v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 18) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_31;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
LABEL_31:
        *(_DWORD *)(a1 + 44) |= 2u;
        int v18 = *(unsigned int **)(a1 + 16);
        if (!v18) {
          operator new();
        }
        unsigned int v45 = 0;
        BOOL v19 = (char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0; {
        }
          }
        else
        {
          unsigned int v45 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
        if (!sub_10006AC58(v18, this, v23) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v24 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v15) {
          *((_DWORD *)this + 14) = v25;
        }
        unsigned int v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 26) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_45:
        *(_DWORD *)(a1 + 44) |= 4u;
        int v27 = *(unsigned int **)(a1 + 24);
        if (!v27) {
          operator new();
        }
        unsigned int v45 = 0;
        int v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0; {
        }
          }
        else
        {
          unsigned int v45 = *v28;
          *((void *)this + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0;
        }
        int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
        if (!sub_10006B32C(v27, this, v32) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        int v33 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v15) {
          *((_DWORD *)this + 14) = v34;
        }
        unsigned int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 34) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_59:
        *(_DWORD *)(a1 + 44) |= 8u;
        int v36 = *(unsigned int **)(a1 + 32);
        if (!v36) {
          operator new();
        }
        unsigned int v45 = 0;
        int v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0; {
        }
          }
        else
        {
          unsigned int v45 = *v37;
          *((void *)this + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
        if (!sub_10006B97C(v36, this, v41) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v42 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v15) {
          *((_DWORD *)this + 14) = v43;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_45;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        goto LABEL_59;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10006CA70(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(proto::gnss::Emergency::VelocityInfo::default_instance_ + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(proto::gnss::Emergency::VelocityInfo::default_instance_ + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(proto::gnss::Emergency::VelocityInfo::default_instance_ + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 8) != 0)
  {
LABEL_15:
    uint64_t v10 = *(void *)(v5 + 32);
    if (!v10) {
      uint64_t v10 = *(void *)(proto::gnss::Emergency::VelocityInfo::default_instance_ + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  }
  return result;
}

uint64_t sub_10006CB58(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_33;
  }
  if ((*(unsigned char *)(a1 + 44) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(proto::gnss::Emergency::VelocityInfo::default_instance_ + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10006A92C(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(proto::gnss::Emergency::VelocityInfo::default_instance_ + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10006AFC0(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 44);
  }
LABEL_18:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_33;
    }
    goto LABEL_27;
  }
  uint64_t v13 = *(void *)(a1 + 24);
  if (!v13) {
    uint64_t v13 = *(void *)(proto::gnss::Emergency::VelocityInfo::default_instance_ + 24);
  }
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10006B5DC(v13, a2);
  int v15 = (int)v14;
  if (v14 >= 0x80) {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  }
  else {
    int v16 = 1;
  }
  uint64_t v4 = (v4 + v15 + v16 + 1);
  if ((*(_DWORD *)(a1 + 44) & 8) != 0)
  {
LABEL_27:
    uint64_t v17 = *(void *)(a1 + 32);
    if (!v17) {
      uint64_t v17 = *(void *)(proto::gnss::Emergency::VelocityInfo::default_instance_ + 32);
    }
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10006BE14(v17, a2);
    int v20 = (int)v18;
    if (v18 >= 0x80) {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, v19);
    }
    else {
      int v21 = 1;
    }
    uint64_t v4 = (v4 + v20 + v21 + 1);
  }
LABEL_33:
  *(_DWORD *)(a1 + 40) = v4;
  return v4;
}

void sub_10006CCC4(uint64_t a1, void *lpsrc)
{
  sub_10006C010(a1, (uint64_t)lpsrc);
}

uint64_t sub_10006CD68()
{
  return 1;
}

void *sub_10006CD70@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.VelocityInfo");
}

void sub_10006CD80(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 16);
      if (v5 >= 6) {
        __assert_rtn("set_velocity_type", "GnssEmergencyTypes.pb.h", 19743, "::proto::gnss::Emergency::VelocityType_IsValid(value)");
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(proto::gnss::Emergency::VelocityEstimate::default_instance_ + 8);
      }
      sub_10006C010(v6, v7);
    }
  }
}

void sub_10006CEB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10006CECC(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100109998;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::VelocityEstimate::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10006CF5C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_10006CECC(a1);

  operator delete();
}

void sub_10006CF94()
{
}

uint64_t proto::gnss::Emergency::VelocityEstimate::Clear(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 24);
  if (v2)
  {
    *(_DWORD *)(this + 16) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 8);
      if (this) {
        this = proto::gnss::Emergency::VelocityInfo::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return this;
}

uint64_t sub_10006D024(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unsigned int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_15;
        }
        unsigned int v21 = 0;
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v9 = v21;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 5)
        {
          *(_DWORD *)(a1 + 24) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_15;
      }
      int v7 = TagFallback & 7;
      if (v7 == 2) {
        break;
      }
LABEL_15:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_25:
    *(_DWORD *)(a1 + 24) |= 2u;
    uint64_t v12 = *(void *)(a1 + 8);
    if (!v12) {
      operator new();
    }
    unsigned int v22 = 0;
    uint64_t v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22)) {
        return 0;
      }
    }
    else
    {
      unsigned int v22 = *v13;
      *((void *)this + 1) = v13 + 1;
    }
    int v14 = *((_DWORD *)this + 14);
    int v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0;
    }
    int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
    if (!sub_10006C518(v12, this, v17) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    int v18 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v18, 1);
    int v20 = v18 - 1;
    if (v20 < 0 == v19) {
      *((_DWORD *)this + 14) = v20;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_10006D288(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::VelocityEstimate::default_instance_ + 8);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_10006D308(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 24);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(proto::gnss::Emergency::VelocityEstimate::default_instance_ + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10006CB58(v6, a2);
    int v9 = (int)v7;
    if (v7 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    }
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_10006D3D0(uint64_t a1, void *lpsrc)
{
  sub_10006CD80(a1, (uint64_t)lpsrc);
}

uint64_t sub_10006D474()
{
  return 1;
}

void *sub_10006D47C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.VelocityEstimate");
}

void proto::gnss::Emergency::PositionReport::MergeFrom(proto::gnss::Emergency::PositionReport *this, const proto::gnss::Emergency::PositionReport *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 64);
  if (!(_BYTE)v4) {
    return;
  }
  if (*((unsigned char *)a2 + 64))
  {
    unsigned int v5 = *((_DWORD *)a2 + 2);
    if (v5 >= 9) {
      __assert_rtn("set_result", "GnssEmergencyTypes.pb.h", 19812, "::proto::gnss::Emergency::ErrorCodes_IsValid(value)");
    }
    *((_DWORD *)this + 16) |= 1u;
    *((_DWORD *)this + 2) = v5;
    int v4 = *((_DWORD *)a2 + 16);
  }
  if ((v4 & 2) != 0)
  {
    int v7 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 16) |= 2u;
    *((_DWORD *)this + 3) = v7;
    int v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  *((_DWORD *)this + 16) |= 4u;
  unsigned int v8 = (_DWORD *)*((void *)this + 2);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *((void *)a2 + 2);
  if (!v9) {
    uint64_t v9 = *(void *)(proto::gnss::Emergency::PositionReport::default_instance_ + 16);
  }
  sub_10005BD30(v8, v9);
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_22:
  *((_DWORD *)this + 16) |= 8u;
  uint64_t v10 = *((void *)this + 3);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = *((void *)a2 + 3);
  if (!v11) {
    uint64_t v11 = *(void *)(proto::gnss::Emergency::PositionReport::default_instance_ + 24);
  }
  sub_100060150(v10, v11);
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_32:
    *((_DWORD *)this + 16) |= 0x20u;
    uint64_t v14 = *((void *)this + 5);
    if (!v14) {
      operator new();
    }
    uint64_t v15 = *((void *)a2 + 5);
    if (!v15) {
      uint64_t v15 = *(void *)(proto::gnss::Emergency::PositionReport::default_instance_ + 40);
    }
    sub_100069E6C(v14, v15);
    int v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 0x40) == 0)
    {
LABEL_13:
      if ((v4 & 0x80) == 0) {
        return;
      }
      goto LABEL_14;
    }
    goto LABEL_37;
  }
LABEL_27:
  *((_DWORD *)this + 16) |= 0x10u;
  uint64_t v12 = (_DWORD *)*((void *)this + 4);
  if (!v12) {
    operator new();
  }
  uint64_t v13 = *((void *)a2 + 4);
  if (!v13) {
    uint64_t v13 = *(void *)(proto::gnss::Emergency::PositionReport::default_instance_ + 32);
  }
  sub_100064678(v12, v13);
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x20) != 0) {
    goto LABEL_32;
  }
LABEL_12:
  if ((v4 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_37:
  *((_DWORD *)this + 16) |= 0x40u;
  uint64_t v16 = *((void *)this + 6);
  if (!v16) {
    operator new();
  }
  uint64_t v17 = *((void *)a2 + 6);
  if (!v17) {
    uint64_t v17 = *(void *)(proto::gnss::Emergency::PositionReport::default_instance_ + 48);
  }
  sub_10006CD80(v16, v17);
  if ((*((_DWORD *)a2 + 16) & 0x80) != 0)
  {
LABEL_14:
    int v6 = *((_DWORD *)a2 + 14);
    *((_DWORD *)this + 16) |= 0x80u;
    *((_DWORD *)this + 14) = v6;
  }
}

void sub_10006D7E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_10006D800(void *result)
{
  if ((void *)proto::gnss::Emergency::PositionReport::default_instance_ != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[4];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[5];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t result = (void *)v1[6];
    if (result)
    {
      int v6 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v6();
    }
  }
  return result;
}

void sub_10006D924(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109A10;
  sub_10006D800(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10006D978(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109A10;
  sub_10006D800(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10006D9E0()
{
}

uint64_t proto::gnss::Emergency::PositionReport::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 64);
  if ((_BYTE)v2)
  {
    *(void *)(this + 8) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 24))
        {
          *(void *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        int v2 = *(_DWORD *)(this + 64);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(void *)(this + 24);
      if (this)
      {
        this = proto::gnss::Emergency::LocationInfo::Clear(this);
        int v2 = *(_DWORD *)(v1 + 64);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 32);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 64);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this)
      {
        this = proto::gnss::Emergency::LocEstimate::Clear(this);
        int v2 = *(_DWORD *)(v1 + 64);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      this = *(void *)(v1 + 48);
      if (this) {
        this = proto::gnss::Emergency::VelocityEstimate::Clear(this);
      }
    }
    *(_DWORD *)(v1 + 56) = 0;
  }
  *(_DWORD *)(v1 + 64) = 0;
  return this;
}

uint64_t proto::gnss::Emergency::PositionReport::MergePartialFromCodedStream(proto::gnss::Emergency::PositionReport *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 < *((void *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unsigned int v67 = 0;
        unsigned int v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v67);
          if (!result) {
            return result;
          }
          unsigned int v9 = v67;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        if (v9 <= 8)
        {
          *((_DWORD *)this + 16) |= 1u;
          *((_DWORD *)this + 2) = v9;
        }
        uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v16 < v10 && *v16 == 16)
        {
          uint64_t v11 = v16 + 1;
          *((void *)a2 + 1) = v11;
          goto LABEL_36;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        uint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
LABEL_36:
        unsigned int v67 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v67);
          if (!result) {
            return result;
          }
          unsigned int v17 = v67;
          int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v17 = *v11;
          int v18 = v11 + 1;
          *((void *)a2 + 1) = v18;
        }
        *((_DWORD *)this + 3) = v17;
        int v12 = *((_DWORD *)this + 16) | 2;
        *((_DWORD *)this + 16) = v12;
        if ((unint64_t)v18 >= v10 || *v18 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_44:
        *((_DWORD *)this + 16) = v12 | 4;
        BOOL v19 = (_DWORD *)*((void *)this + 2);
        if (!v19) {
          operator new();
        }
        unsigned int v67 = 0;
        int v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v67))return 0; {
        }
          }
        else
        {
          unsigned int v67 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v67);
        if (!sub_10005BF3C(v19, a2, v24) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v23);
        int v25 = *((_DWORD *)a2 + 14);
        BOOL v26 = __OFSUB__(v25, 1);
        int v27 = v25 - 1;
        if (v27 < 0 == v26) {
          *((_DWORD *)a2 + 14) = v27;
        }
        int v28 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_58:
        *((_DWORD *)this + 16) |= 8u;
        uint64_t v29 = *((void *)this + 3);
        if (!v29) {
          operator new();
        }
        unsigned int v67 = 0;
        int v30 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v67))return 0; {
        }
          }
        else
        {
          unsigned int v67 = *v30;
          *((void *)a2 + 1) = v30 + 1;
        }
        int v31 = *((_DWORD *)a2 + 14);
        int v32 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v31 + 1;
        if (v31 >= v32) {
          return 0;
        }
        int v33 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v67);
        if (!sub_100060470(v29, a2, v34) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v33);
        int v35 = *((_DWORD *)a2 + 14);
        BOOL v26 = __OFSUB__(v35, 1);
        int v36 = v35 - 1;
        if (v36 < 0 == v26) {
          *((_DWORD *)a2 + 14) = v36;
        }
        int v37 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v37 >= *((void *)a2 + 2) || *v37 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v37 + 1;
LABEL_72:
        *((_DWORD *)this + 16) |= 0x10u;
        int v38 = (unsigned int *)*((void *)this + 4);
        if (!v38) {
          operator new();
        }
        unsigned int v67 = 0;
        int v39 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v39 >= *((void *)a2 + 2) || *v39 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v67))return 0; {
        }
          }
        else
        {
          unsigned int v67 = *v39;
          *((void *)a2 + 1) = v39 + 1;
        }
        int v40 = *((_DWORD *)a2 + 14);
        int v41 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v40 + 1;
        if (v40 >= v41) {
          return 0;
        }
        int v42 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v67);
        if (!sub_1000648F0(v38, a2, v43) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v42);
        int v44 = *((_DWORD *)a2 + 14);
        BOOL v26 = __OFSUB__(v44, 1);
        int v45 = v44 - 1;
        if (v45 < 0 == v26) {
          *((_DWORD *)a2 + 14) = v45;
        }
        int v46 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v46 >= *((void *)a2 + 2) || *v46 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v46 + 1;
LABEL_86:
        *((_DWORD *)this + 16) |= 0x20u;
        uint64_t v47 = *((void *)this + 5);
        if (!v47) {
          operator new();
        }
        unsigned int v67 = 0;
        int v48 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v48 >= *((void *)a2 + 2) || *v48 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v67))return 0; {
        }
          }
        else
        {
          unsigned int v67 = *v48;
          *((void *)a2 + 1) = v48 + 1;
        }
        int v49 = *((_DWORD *)a2 + 14);
        int v50 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v49 + 1;
        if (v49 >= v50) {
          return 0;
        }
        int v51 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v67);
        if (!sub_10006A118(v47, a2, v52) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v51);
        int v53 = *((_DWORD *)a2 + 14);
        BOOL v26 = __OFSUB__(v53, 1);
        int v54 = v53 - 1;
        if (v54 < 0 == v26) {
          *((_DWORD *)a2 + 14) = v54;
        }
        int v55 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v55 >= *((void *)a2 + 2) || *v55 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v55 + 1;
LABEL_100:
        *((_DWORD *)this + 16) |= 0x40u;
        uint64_t v56 = *((void *)this + 6);
        if (!v56) {
          operator new();
        }
        unsigned int v67 = 0;
        uint64_t v57 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v57 >= *((void *)a2 + 2) || *v57 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v67))return 0; {
        }
          }
        else
        {
          unsigned int v67 = *v57;
          *((void *)a2 + 1) = v57 + 1;
        }
        int v58 = *((_DWORD *)a2 + 14);
        int v59 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v58 + 1;
        if (v58 >= v59) {
          return 0;
        }
        int v60 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v67);
        if (!sub_10006D024(v56, a2, v61) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v60);
        int v62 = *((_DWORD *)a2 + 14);
        BOOL v26 = __OFSUB__(v62, 1);
        int v63 = v62 - 1;
        if (v63 < 0 == v26) {
          *((_DWORD *)a2 + 14) = v63;
        }
        int v64 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v64 < v13 && *v64 == 64)
        {
          uint64_t v14 = v64 + 1;
          *((void *)a2 + 1) = v14;
LABEL_114:
          unsigned int v67 = 0;
          if ((unint64_t)v14 >= v13 || *v14 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v67);
            if (!result) {
              return result;
            }
            unsigned int v65 = v67;
            uint64_t v66 = (unsigned __int8 *)*((void *)a2 + 1);
            unint64_t v13 = *((void *)a2 + 2);
          }
          else
          {
            unsigned int v65 = *v14;
            uint64_t v66 = (unsigned __int8 *)(v14 + 1);
            *((void *)a2 + 1) = v66;
          }
          *((_DWORD *)this + 14) = v65;
          *((_DWORD *)this + 16) |= 0x80u;
          if (v66 == (unsigned __int8 *)v13 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_25;
        }
        int v12 = *((_DWORD *)this + 16);
        goto LABEL_44;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_58;
        }
        goto LABEL_25;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_72;
        }
        goto LABEL_25;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_86;
        }
        goto LABEL_25;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_100;
        }
        goto LABEL_25;
      case 8u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        uint64_t v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_114;
      default:
        int v7 = TagFallback & 7;
LABEL_25:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10006E2F8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 64);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::PositionReport::default_instance_ + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_15:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(proto::gnss::Emergency::PositionReport::default_instance_ + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_18:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9) {
    uint64_t v9 = *(void *)(proto::gnss::Emergency::PositionReport::default_instance_ + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_21:
  uint64_t v10 = *(void *)(v5 + 40);
  if (!v10) {
    uint64_t v10 = *(void *)(proto::gnss::Emergency::PositionReport::default_instance_ + 40);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_24:
  uint64_t v11 = *(void *)(v5 + 48);
  if (!v11) {
    uint64_t v11 = *(void *)(proto::gnss::Emergency::PositionReport::default_instance_ + 48);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v11, a2, a4);
  if ((*(_DWORD *)(v5 + 64) & 0x80) != 0)
  {
LABEL_27:
    int v12 = *(_DWORD *)(v5 + 56);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v12, (int)a2, a4);
  }
  return result;
}

uint64_t proto::gnss::Emergency::PositionReport::ByteSize(proto::gnss::Emergency::PositionReport *this, unsigned int a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 64);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_61;
  }
  if ((*((unsigned char *)this + 64) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*((unsigned char *)this + 64) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *((_DWORD *)this + 16);
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v7 & 0x80000000) != 0)
    {
      int v8 = 10;
    }
    else if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *((_DWORD *)this + 16);
    }
    else
    {
      int v8 = 1;
    }
    uint64_t v4 = (v4 + v8 + 1);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v9 = *((void *)this + 2);
    if (!v9) {
      uint64_t v9 = *(void *)(proto::gnss::Emergency::PositionReport::default_instance_ + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005C204(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *((_DWORD *)this + 16);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_37;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v13 = *((void *)this + 3);
  if (!v13) {
    uint64_t v13 = *(void *)(proto::gnss::Emergency::PositionReport::default_instance_ + 24);
  }
  uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000609D4(v13, a2);
  int v15 = (int)v14;
  if (v14 >= 0x80) {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  }
  else {
    int v16 = 1;
  }
  uint64_t v4 = (v4 + v15 + v16 + 1);
  int v3 = *((_DWORD *)this + 16);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_43;
  }
LABEL_37:
  uint64_t v17 = *((void *)this + 4);
  if (!v17) {
    uint64_t v17 = *(void *)(proto::gnss::Emergency::PositionReport::default_instance_ + 32);
  }
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100064DA0(v17, a2);
  int v19 = (int)v18;
  if (v18 >= 0x80) {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
  }
  else {
    int v20 = 1;
  }
  uint64_t v4 = (v4 + v19 + v20 + 1);
  int v3 = *((_DWORD *)this + 16);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }
LABEL_43:
  uint64_t v21 = *((void *)this + 5);
  if (!v21) {
    uint64_t v21 = *(void *)(proto::gnss::Emergency::PositionReport::default_instance_ + 40);
  }
  int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10006A404(v21, a2);
  int v23 = (int)v22;
  if (v22 >= 0x80) {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
  }
  else {
    int v24 = 1;
  }
  uint64_t v4 = (v4 + v23 + v24 + 1);
  int v3 = *((_DWORD *)this + 16);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0) {
      goto LABEL_61;
    }
    goto LABEL_55;
  }
LABEL_49:
  uint64_t v25 = *((void *)this + 6);
  if (!v25) {
    uint64_t v25 = *(void *)(proto::gnss::Emergency::PositionReport::default_instance_ + 48);
  }
  BOOL v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10006D308(v25, a2);
  int v27 = (int)v26;
  if (v26 >= 0x80) {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
  }
  else {
    int v28 = 1;
  }
  uint64_t v4 = (v4 + v27 + v28 + 1);
  if ((*((_DWORD *)this + 16) & 0x80) != 0)
  {
LABEL_55:
    uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if ((v29 & 0x80000000) != 0)
    {
      int v30 = 11;
    }
    else if (v29 >= 0x80)
    {
      int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2) + 1;
    }
    else
    {
      int v30 = 2;
    }
    uint64_t v4 = (v30 + v4);
  }
LABEL_61:
  *((_DWORD *)this + 15) = v4;
  return v4;
}

void sub_10006E6C0(proto::gnss::Emergency::PositionReport *a1, void *lpsrc)
{
  proto::gnss::Emergency::PositionReport::MergeFrom(a1, (const proto::gnss::Emergency::PositionReport *)lpsrc);
}

uint64_t sub_10006E764()
{
  return 1;
}

void *sub_10006E76C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.PositionReport");
}

void sub_10006E77C(_DWORD *a1, _DWORD *a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  int v4 = a2[12];
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v7 = a2[2];
    a1[12] |= 1u;
    a1[2] = v7;
    int v4 = a2[12];
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = a2[3];
  a1[12] |= 2u;
  a1[3] = v8;
  int v4 = a2[12];
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v9 = a2[4];
  a1[12] |= 4u;
  a1[4] = v9;
  int v4 = a2[12];
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v10 = a2[5];
  a1[12] |= 8u;
  a1[5] = v10;
  int v4 = a2[12];
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_22:
    int v12 = a2[7];
    a1[12] |= 0x20u;
    a1[7] = v12;
    int v4 = a2[12];
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_20:
  unsigned int v11 = a2[6];
  if (v11 >= 6) {
    __assert_rtn("set_multi_path", "GnssEmergencyTypes.pb.h", 20181, "::proto::gnss::Emergency::MultipathIndicator_IsValid(value)");
  }
  a1[12] |= 0x10u;
  a1[6] = v11;
  int v4 = a2[12];
  if ((v4 & 0x20) != 0) {
    goto LABEL_22;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_23:
  int v13 = a2[8];
  a1[12] |= 0x40u;
  a1[8] = v13;
  int v4 = a2[12];
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = a2[9];
    a1[12] |= 0x80u;
    a1[9] = v5;
    int v4 = a2[12];
  }
LABEL_13:
  if ((v4 & 0x100) != 0)
  {
    int v6 = a2[10];
    a1[12] |= 0x100u;
    a1[10] = v6;
  }
}

void sub_10006E938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10006E950(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109A88;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10006E970(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109A88;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10006E9C4()
{
}

uint64_t sub_10006EA1C(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 48);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0) {
    *(_DWORD *)(result + 40) = 0;
  }
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_10006EA48(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 3;
  int v6 = a1 + 4;
  int v7 = a1 + 5;
  int v8 = a1 + 7;
  int v9 = a1 + 8;
  int v10 = a1 + 9;
  unsigned int v11 = a1 + 10;
  while (2)
  {
    int v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v12;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v38 = 0;
        int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          unsigned int v17 = *v16;
          int v18 = v16 + 1;
          *((void *)this + 1) = v18;
LABEL_34:
          a1[2] = v17;
          a1[12] |= 1u;
          if ((unint64_t)v18 < v15 && *v18 == 16)
          {
            int v19 = v18 + 1;
            *((void *)this + 1) = v19;
            goto LABEL_37;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38);
        if (result)
        {
          unsigned int v17 = v38;
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          goto LABEL_34;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
LABEL_37:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v19;
          int v28 = v19 + 1;
          *((void *)this + 1) = v28;
        }
        a1[12] |= 2u;
        if ((unint64_t)v28 >= v15 || *v28 != 24) {
          continue;
        }
        int v20 = v28 + 1;
        *((void *)this + 1) = v20;
LABEL_45:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v20;
          uint64_t v29 = v20 + 1;
          *((void *)this + 1) = v29;
        }
        a1[12] |= 4u;
        if ((unint64_t)v29 >= v15 || *v29 != 32) {
          continue;
        }
        uint64_t v21 = v29 + 1;
        *((void *)this + 1) = v21;
LABEL_53:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v21;
          int v30 = v21 + 1;
          *((void *)this + 1) = v30;
        }
        a1[12] |= 8u;
        if ((unint64_t)v30 >= v15 || *v30 != 40) {
          continue;
        }
        int v22 = v30 + 1;
        *((void *)this + 1) = v22;
LABEL_61:
        unsigned int v39 = 0;
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39);
          if (!result) {
            return result;
          }
          unsigned int v31 = v39;
        }
        else
        {
          unsigned int v31 = *v22;
          *((void *)this + 1) = v22 + 1;
        }
        if (v31 <= 5)
        {
          a1[12] |= 0x10u;
          a1[6] = v31;
        }
        int v32 = (unsigned char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        if ((unint64_t)v32 >= v23 || *v32 != 48) {
          continue;
        }
        int v24 = v32 + 1;
        *((void *)this + 1) = v24;
LABEL_71:
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v24;
          int v33 = v24 + 1;
          *((void *)this + 1) = v33;
        }
        a1[12] |= 0x20u;
        if ((unint64_t)v33 >= v23 || *v33 != 56) {
          continue;
        }
        uint64_t v25 = v33 + 1;
        *((void *)this + 1) = v25;
LABEL_79:
        if ((unint64_t)v25 >= v23 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          unsigned int v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v9 = *v25;
          unsigned int v34 = v25 + 1;
          *((void *)this + 1) = v34;
        }
        a1[12] |= 0x40u;
        if ((unint64_t)v34 >= v23 || *v34 != 64) {
          continue;
        }
        BOOL v26 = v34 + 1;
        *((void *)this + 1) = v26;
LABEL_87:
        if ((unint64_t)v26 >= v23 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v26;
          int v35 = v26 + 1;
          *((void *)this + 1) = v35;
        }
        a1[12] |= 0x80u;
        if ((unint64_t)v35 >= v23 || *v35 != 72) {
          continue;
        }
        int v27 = v35 + 1;
        *((void *)this + 1) = v27;
LABEL_95:
        if ((unint64_t)v27 >= v23 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          int v36 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v11 = *v27;
          int v36 = (unsigned __int8 *)(v27 + 1);
          *((void *)this + 1) = v36;
        }
        a1[12] |= 0x100u;
        if (v36 != (unsigned __int8 *)v23 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_45;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_53;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_61;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_71;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v25 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_79;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        BOOL v26 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_87;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v27 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_95;
      default:
        int v14 = TagFallback & 7;
LABEL_28:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_10006EF88(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[12];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[12];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[12];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[12];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[12];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  int v6 = v5[12];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  int v6 = v5[12];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
    if ((v5[12] & 0x100) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  int v6 = v5[12];
  if ((v6 & 0x80) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v6 & 0x100) == 0) {
    return result;
  }
LABEL_19:
  int v7 = v5[10];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v7, a2, a4);
}

uint64_t sub_10006F0BC(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[12];
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    if ((v3 & 0x100) == 0) {
      goto LABEL_55;
    }
    goto LABEL_51;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_13;
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    unsigned int v3 = a1[12];
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_13:
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      unsigned int v3 = a1[12];
    }
    else
    {
      int v8 = 2;
    }
    uint64_t v4 = (v8 + v4);
  }
LABEL_17:
  if ((v3 & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      unsigned int v3 = a1[12];
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v4 = (v10 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0) {
        goto LABEL_20;
      }
      goto LABEL_33;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  unsigned int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v12 = 2;
  }
  uint64_t v4 = (v12 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_20:
    if ((v3 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_39;
  }
LABEL_33:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if ((v13 & 0x80000000) != 0)
  {
    int v14 = 11;
  }
  else if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_21:
    if ((v3 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_43;
  }
LABEL_39:
  unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v16 = 2;
  }
  uint64_t v4 = (v16 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_22:
    if ((v3 & 0x80) == 0) {
      goto LABEL_23;
    }
    goto LABEL_47;
  }
LABEL_43:
  unsigned int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v18 = 2;
  }
  uint64_t v4 = (v18 + v4);
  if ((v3 & 0x80) == 0)
  {
LABEL_23:
    if ((v3 & 0x100) == 0) {
      goto LABEL_55;
    }
    goto LABEL_51;
  }
LABEL_47:
  int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
  if (v19 >= 0x80)
  {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v20 = 2;
  }
  uint64_t v4 = (v20 + v4);
  if ((v3 & 0x100) != 0)
  {
LABEL_51:
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v21 >= 0x80) {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
    }
    else {
      int v22 = 2;
    }
    uint64_t v4 = (v22 + v4);
  }
LABEL_55:
  a1[11] = v4;
  return v4;
}

void sub_10006F29C(_DWORD *a1, _DWORD *lpsrc)
{
  sub_10006E77C(a1, lpsrc);
}

uint64_t sub_10006F340()
{
  return 1;
}

void *sub_10006F348@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GanssMeasurementElement");
}

void sub_10006F358(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD **)(*(void *)(a2 + 16) + 8 * v4);
      int v6 = a1[7];
      uint64_t v7 = (int)a1[6];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v6 + 1);
          int v6 = a1[7];
        }
        a1[7] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 2);
      a1[6] = v7 + 1;
      sub_10006E77C(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 24));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 48);
  if ((_BYTE)v9)
  {
    if (*(unsigned char *)(a2 + 48))
    {
      int v11 = *(_DWORD *)(a2 + 8);
      a1[12] |= 1u;
      a1[2] = v11;
      int v9 = *(_DWORD *)(a2 + 48);
      if ((v9 & 2) == 0)
      {
LABEL_14:
        if ((v9 & 4) == 0) {
          return;
        }
        goto LABEL_15;
      }
    }
    else if ((*(unsigned char *)(a2 + 48) & 2) == 0)
    {
      goto LABEL_14;
    }
    int v12 = *(_DWORD *)(a2 + 12);
    a1[12] |= 2u;
    a1[3] = v12;
    if ((*(_DWORD *)(a2 + 48) & 4) == 0) {
      return;
    }
LABEL_15:
    int v10 = *(_DWORD *)(a2 + 40);
    a1[12] |= 4u;
    a1[10] = v10;
  }
}

void sub_10006F524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10006F53C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100109B00;
  int v2 = *((_DWORD *)this + 7);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*((void *)this + 2) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)this + 7);
      }
    }
  }
  if (*((void *)this + 2)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10006F5FC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_10006F53C(a1);

  operator delete();
}

void sub_10006F634()
{
}

uint64_t sub_10006F68C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    *(void *)(a1 + 8) = 0;
    *(_DWORD *)(a1 + 40) = 0;
  }
  uint64_t result = sub_10003AD6C(a1 + 16);
  *(_DWORD *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_10006F6C8(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  uint64_t v7 = a1 + 10;
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  while (1)
  {
    int v9 = (unsigned __int8 *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || (char)*v9 < 0) {
      break;
    }
    TagFallbacuint64_t k = *v9;
    *((_DWORD *)this + 8) = TagFallback;
    *((void *)this + 1) = v9 + 1;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v13;
          int v14 = v13 + 1;
          *((void *)this + 1) = v14;
        }
        a1[12] |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 16)
        {
          unint64_t v15 = v14 + 1;
          *((void *)this + 1) = v15;
          goto LABEL_26;
        }
        continue;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_26:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v15;
          int v18 = v15 + 1;
          *((void *)this + 1) = v18;
        }
        a1[12] |= 2u;
        if ((unint64_t)v18 >= v12 || *v18 != 24) {
          continue;
        }
        int v16 = v18 + 1;
        *((void *)this + 1) = v16;
LABEL_34:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v16;
          int v19 = v16 + 1;
          *((void *)this + 1) = v19;
        }
        a1[12] |= 4u;
        if ((unint64_t)v19 >= v12 || *v19 != 34) {
          continue;
        }
        break;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_18;
        }
        goto LABEL_42;
      default:
        int v11 = TagFallback & 7;
LABEL_18:
        if (v11 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
    do
    {
      *((void *)this + 1) = v19 + 1;
LABEL_42:
      int v20 = a1[7];
      uint64_t v21 = (int)a1[6];
      if ((int)v21 >= v20)
      {
        if (v20 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v20 + 1);
          int v20 = a1[7];
        }
        a1[7] = v20 + 1;
        operator new();
      }
      uint64_t v22 = *((void *)a1 + 2);
      a1[6] = v21 + 1;
      unint64_t v23 = *(unsigned int **)(v22 + 8 * v21);
      unsigned int v33 = 0;
      int v24 = (char *)*((void *)this + 1);
      if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33))return 0; {
      }
        }
      else
      {
        unsigned int v33 = *v24;
        *((void *)this + 1) = v24 + 1;
      }
      int v25 = *((_DWORD *)this + 14);
      int v26 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v25 + 1;
      if (v25 >= v26) {
        return 0;
      }
      int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v33);
      if (!sub_10006EA48(v23, this, v28) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
      int v29 = *((_DWORD *)this + 14);
      BOOL v30 = __OFSUB__(v29, 1);
      int v31 = v29 - 1;
      if (v31 < 0 == v30) {
        *((_DWORD *)this + 14) = v31;
      }
      int v19 = (unsigned char *)*((void *)this + 1);
      int v32 = (unsigned char *)*((void *)this + 2);
    }
    while (v19 < v32 && *v19 == 34);
    if (v19 == v32 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
  TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
  *((_DWORD *)this + 8) = TagFallback;
  if (TagFallback) {
    goto LABEL_7;
  }
  return 1;
}

uint64_t sub_10006FAA0(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 4) != 0) {
LABEL_4:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 40), a2, a4);
LABEL_5:
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return result;
}

uint64_t sub_10006FB54(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 48);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 48);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 48) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 48);
  }
  else
  {
    int v7 = 2;
  }
  v4 += v7;
LABEL_14:
  if ((v3 & 4) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    v4 += v9;
  }
LABEL_19:
  int v10 = *(_DWORD *)(a1 + 24);
  uint64_t v11 = (v10 + v4);
  if (v10 >= 1)
  {
    uint64_t v12 = 0;
    do
    {
      int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10006F0BC(*(unsigned int **)(*(void *)(a1 + 16)+ 8 * v12), a2);
      int v14 = (int)v13;
      if (v13 >= 0x80) {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
      }
      else {
        int v15 = 1;
      }
      uint64_t v11 = (v14 + v11 + v15);
      ++v12;
    }
    while (v12 < *(int *)(a1 + 24));
  }
  *(_DWORD *)(a1 + 44) = v11;
  return v11;
}

void sub_10006FC68(_DWORD *a1, void *lpsrc)
{
  sub_10006F358(a1, (uint64_t)lpsrc);
}

uint64_t sub_10006FD0C()
{
  return 1;
}

void *sub_10006FD14@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GanssSignalMeasurementInfo");
}

void sub_10006FD24(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 16);
      if (v5 >= 7) {
        __assert_rtn("set_ganss_id", "GnssEmergencyTypes.pb.h", 20391, "::proto::gnss::Emergency::GanssId_IsValid(value)");
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      int v6 = *(_DWORD **)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(proto::gnss::Emergency::GanssMeasurementsForSingleGanss::default_instance_ + 8);
      }
      sub_10006F358(v6, v7);
    }
  }
}

void sub_10006FE58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10006FE70(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100109B78;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::GanssMeasurementsForSingleGanss::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10006FF00(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_10006FE70(a1);

  operator delete();
}

void sub_10006FF38()
{
}

uint64_t proto::gnss::Emergency::GanssMeasurementsForSingleGanss::Clear(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 24);
  if (v2)
  {
    *(_DWORD *)(this + 16) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 48))
        {
          *(void *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 40) = 0;
        }
        this = sub_10003AD6C(v3 + 16);
        *(_DWORD *)(v3 + 48) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return this;
}

uint64_t sub_10006FFE0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unsigned int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_15;
        }
        unsigned int v21 = 0;
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v9 = v21;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 6)
        {
          *(_DWORD *)(a1 + 24) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_15;
      }
      int v7 = TagFallback & 7;
      if (v7 == 2) {
        break;
      }
LABEL_15:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_25:
    *(_DWORD *)(a1 + 24) |= 2u;
    uint64_t v12 = *(_DWORD **)(a1 + 8);
    if (!v12) {
      operator new();
    }
    unsigned int v22 = 0;
    int v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22)) {
        return 0;
      }
    }
    else
    {
      unsigned int v22 = *v13;
      *((void *)this + 1) = v13 + 1;
    }
    int v14 = *((_DWORD *)this + 14);
    int v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0;
    }
    int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
    if (!sub_10006F6C8(v12, this, v17) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    int v18 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v18, 1);
    int v20 = v18 - 1;
    if (v20 < 0 == v19) {
      *((_DWORD *)this + 14) = v20;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_100070244(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::GanssMeasurementsForSingleGanss::default_instance_ + 8);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_1000702C4(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 24);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(proto::gnss::Emergency::GanssMeasurementsForSingleGanss::default_instance_ + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10006FB54(v6, a2);
    int v9 = (int)v7;
    if (v7 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    }
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_10007038C(uint64_t a1, void *lpsrc)
{
  sub_10006FD24(a1, (uint64_t)lpsrc);
}

uint64_t sub_100070430()
{
  return 1;
}

void *sub_100070438@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GanssMeasurementsForSingleGanss");
}

void sub_100070448(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 52);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 52))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 8);
      if (v5 >= 6) {
        __assert_rtn("set_time_id", "GnssEmergencyTypes.pb.h", 20460, "::proto::gnss::Emergency::GnssTimeId_IsValid(value)");
      }
      *(_DWORD *)(a1 + 52) |= 1u;
      *(_DWORD *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 52);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      *(_DWORD *)(a1 + 52) |= 2u;
      *(_DWORD *)(a1 + 12) = v6;
      int v4 = *(_DWORD *)(a2 + 52);
      if ((v4 & 4) == 0)
      {
LABEL_9:
        if ((v4 & 8) == 0) {
          goto LABEL_10;
        }
        goto LABEL_17;
      }
    }
    else if ((v4 & 4) == 0)
    {
      goto LABEL_9;
    }
    int v7 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 4u;
    *(_DWORD *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 8) == 0)
    {
LABEL_10:
      if ((v4 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_18;
    }
LABEL_17:
    int v8 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 52) |= 8u;
    *(_DWORD *)(a1 + 20) = v8;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x10) == 0)
    {
LABEL_11:
      if ((v4 & 0x20) == 0) {
        goto LABEL_12;
      }
      goto LABEL_19;
    }
LABEL_18:
    int v9 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 52) |= 0x10u;
    *(_DWORD *)(a1 + 32) = v9;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x20) == 0)
    {
LABEL_12:
      if ((v4 & 0x40) == 0) {
        goto LABEL_13;
      }
      goto LABEL_24;
    }
LABEL_19:
    *(_DWORD *)(a1 + 52) |= 0x20u;
    uint64_t v10 = *(void *)(a1 + 24);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 24);
    if (!v11) {
      uint64_t v11 = *(void *)(proto::gnss::Emergency::GanssMeasurements::default_instance_ + 24);
    }
    sub_100063F74(v10, v11);
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x40) == 0)
    {
LABEL_13:
      if ((v4 & 0x80) == 0) {
        return;
      }
LABEL_25:
      *(_DWORD *)(a1 + 52) |= 0x80u;
      uint64_t v13 = *(void *)(a1 + 40);
      if (!v13) {
        operator new();
      }
      uint64_t v14 = *(void *)(a2 + 40);
      if (!v14) {
        uint64_t v14 = *(void *)(proto::gnss::Emergency::GanssMeasurements::default_instance_ + 40);
      }
      sub_10006FD24(v13, v14);
      return;
    }
LABEL_24:
    int v12 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 52) |= 0x40u;
    *(_DWORD *)(a1 + 36) = v12;
    if ((*(_DWORD *)(a2 + 52) & 0x80) == 0) {
      return;
    }
    goto LABEL_25;
  }
}

void sub_100070690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1000706A8(void *result)
{
  if ((void *)proto::gnss::Emergency::GanssMeasurements::default_instance_ != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[3];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[5];
    if (result)
    {
      char v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_100070748(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109BF0;
  sub_1000706A8(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10007079C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109BF0;
  sub_1000706A8(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100070804()
{
}

uint64_t proto::gnss::Emergency::GanssMeasurements::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 52);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 32) = 0;
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    if ((v2 & 0x20) != 0)
    {
      this = *(void *)(this + 24);
      if (this)
      {
        this = proto::gnss::Emergency::GanssTimeMeasuredParams::Clear(this);
        int v2 = *(_DWORD *)(v1 + 52);
      }
    }
    *(_DWORD *)(v1 + 36) = 0;
    if ((v2 & 0x80) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this) {
        this = proto::gnss::Emergency::GanssMeasurementsForSingleGanss::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 52) = 0;
  return this;
}

uint64_t sub_1000708B8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int v5 = (unsigned int *)(a1 + 12);
  int v6 = (unsigned int *)(a1 + 16);
  int v7 = (unsigned int *)(a1 + 20);
  int v8 = (unsigned int *)(a1 + 32);
  int v9 = (unsigned int *)(a1 + 36);
  while (2)
  {
    uint64_t v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        unsigned int v49 = 0;
        uint64_t v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v49);
          if (!result) {
            return result;
          }
          unsigned int v14 = v49;
        }
        else
        {
          unsigned int v14 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (v14 <= 5)
        {
          *(_DWORD *)(a1 + 52) |= 1u;
          *(_DWORD *)(a1 + 8) = v14;
        }
        int v25 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v25 < v15 && *v25 == 16)
        {
          int v16 = v25 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_37;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
LABEL_37:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v16;
          int v26 = v16 + 1;
          *((void *)this + 1) = v26;
        }
        *(_DWORD *)(a1 + 52) |= 2u;
        if ((unint64_t)v26 >= v15 || *v26 != 24) {
          continue;
        }
        unsigned int v17 = v26 + 1;
        *((void *)this + 1) = v17;
LABEL_45:
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v27 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v17;
          int v27 = v17 + 1;
          *((void *)this + 1) = v27;
        }
        *(_DWORD *)(a1 + 52) |= 4u;
        if ((unint64_t)v27 >= v15 || *v27 != 32) {
          continue;
        }
        int v18 = v27 + 1;
        *((void *)this + 1) = v18;
LABEL_53:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v18;
          unsigned int v28 = v18 + 1;
          *((void *)this + 1) = v28;
        }
        *(_DWORD *)(a1 + 52) |= 8u;
        if ((unint64_t)v28 >= v15 || *v28 != 40) {
          continue;
        }
        BOOL v19 = v28 + 1;
        *((void *)this + 1) = v19;
LABEL_61:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v19;
          int v29 = v19 + 1;
          *((void *)this + 1) = v29;
        }
        int v20 = *(_DWORD *)(a1 + 52) | 0x10;
        *(_DWORD *)(a1 + 52) = v20;
        if ((unint64_t)v29 >= v15 || *v29 != 50) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
LABEL_69:
        *(_DWORD *)(a1 + 52) = v20 | 0x20;
        uint64_t v30 = *(void *)(a1 + 24);
        if (!v30) {
          operator new();
        }
        unsigned int v50 = 0;
        int v31 = (char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50))return 0; {
        }
          }
        else
        {
          unsigned int v50 = *v31;
          *((void *)this + 1) = v31 + 1;
        }
        int v32 = *((_DWORD *)this + 14);
        int v33 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v32 + 1;
        if (v32 >= v33) {
          return 0;
        }
        int v34 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v50);
        if (!sub_100064214(v30, this, v35) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v34);
        int v36 = *((_DWORD *)this + 14);
        BOOL v37 = __OFSUB__(v36, 1);
        int v38 = v36 - 1;
        if (v38 < 0 == v37) {
          *((_DWORD *)this + 14) = v38;
        }
        unsigned int v39 = (unsigned char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        if ((unint64_t)v39 >= v21 || *v39 != 56) {
          continue;
        }
        unsigned int v22 = v39 + 1;
        *((void *)this + 1) = v22;
LABEL_83:
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          int v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v9 = *v22;
          int v40 = v22 + 1;
          *((void *)this + 1) = v40;
        }
        int v23 = *(_DWORD *)(a1 + 52) | 0x40;
        *(_DWORD *)(a1 + 52) = v23;
        if ((unint64_t)v40 >= v21 || *v40 != 66) {
          continue;
        }
        *((void *)this + 1) = v40 + 1;
LABEL_91:
        *(_DWORD *)(a1 + 52) = v23 | 0x80;
        uint64_t v41 = *(void *)(a1 + 40);
        if (!v41) {
          operator new();
        }
        unsigned int v51 = 0;
        int v42 = (char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
        }
          }
        else
        {
          unsigned int v51 = *v42;
          *((void *)this + 1) = v42 + 1;
        }
        int v43 = *((_DWORD *)this + 14);
        int v44 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v43 + 1;
        if (v43 < v44)
        {
          int v45 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
          if (sub_10006FFE0(v41, this, v46))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v45);
              int v47 = *((_DWORD *)this + 14);
              BOOL v37 = __OFSUB__(v47, 1);
              int v48 = v47 - 1;
              if (v48 < 0 == v37) {
                *((_DWORD *)this + 14) = v48;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_45;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_53;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        BOOL v19 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_61;
      case 6u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_27;
        }
        int v20 = *(_DWORD *)(a1 + 52);
        goto LABEL_69;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        unsigned int v22 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_83;
      case 8u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_27;
        }
        int v23 = *(_DWORD *)(a1 + 52);
        goto LABEL_91;
      default:
        int v12 = TagFallback & 7;
LABEL_27:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100070ECC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 32), a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_18:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 36), a2, a4);
    if ((*(_DWORD *)(v5 + 52) & 0x80) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_15:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::GanssMeasurements::default_instance_ + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x40) != 0) {
    goto LABEL_18;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return result;
  }
LABEL_19:
  uint64_t v8 = *(void *)(v5 + 40);
  if (!v8) {
    uint64_t v8 = *(void *)(proto::gnss::Emergency::GanssMeasurements::default_instance_ + 40);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v8, a2, a4);
}

uint64_t sub_100071004(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 52) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 52);
    }
    else
    {
      int v8 = 2;
    }
    uint64_t v4 = (v8 + v4);
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 52);
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v4 = (v10 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_31;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    int v12 = 2;
  }
  uint64_t v4 = (v12 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_19:
    if ((v3 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_35;
  }
LABEL_31:
  uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_20:
    if ((v3 & 0x40) == 0) {
      goto LABEL_21;
    }
LABEL_41:
    BOOL v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if (v19 >= 0x80)
    {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 52);
    }
    else
    {
      int v20 = 2;
    }
    uint64_t v4 = (v20 + v4);
    if ((v3 & 0x80) == 0) {
      goto LABEL_51;
    }
    goto LABEL_45;
  }
LABEL_35:
  uint64_t v15 = *(void *)(a1 + 24);
  if (!v15) {
    uint64_t v15 = *(void *)(proto::gnss::Emergency::GanssMeasurements::default_instance_ + 24);
  }
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000644F4(v15, a2);
  int v17 = (int)v16;
  if (v16 >= 0x80) {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
  }
  else {
    int v18 = 1;
  }
  uint64_t v4 = (v4 + v17 + v18 + 1);
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 0x40) != 0) {
    goto LABEL_41;
  }
LABEL_21:
  if ((v3 & 0x80) == 0) {
    goto LABEL_51;
  }
LABEL_45:
  uint64_t v21 = *(void *)(a1 + 40);
  if (!v21) {
    uint64_t v21 = *(void *)(proto::gnss::Emergency::GanssMeasurements::default_instance_ + 40);
  }
  unsigned int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000702C4(v21, a2);
  int v24 = (int)v22;
  if (v22 >= 0x80) {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, v23);
  }
  else {
    int v25 = 1;
  }
  uint64_t v4 = (v4 + v24 + v25 + 1);
LABEL_51:
  *(_DWORD *)(a1 + 48) = v4;
  return v4;
}

void sub_1000711EC(uint64_t a1, void *lpsrc)
{
  sub_100070448(a1, (uint64_t)lpsrc);
}

uint64_t sub_100071290()
{
  return 1;
}

void *sub_100071298@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GanssMeasurements");
}

void sub_1000712A8(_DWORD *a1, _DWORD *a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  int v4 = a2[12];
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v7 = a2[2];
    a1[12] |= 1u;
    a1[2] = v7;
    int v4 = a2[12];
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = a2[3];
  a1[12] |= 2u;
  a1[3] = v8;
  int v4 = a2[12];
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v9 = a2[4];
  a1[12] |= 4u;
  a1[4] = v9;
  int v4 = a2[12];
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v10 = a2[5];
  a1[12] |= 8u;
  a1[5] = v10;
  int v4 = a2[12];
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    int v12 = a2[7];
    a1[12] |= 0x20u;
    a1[7] = v12;
    int v4 = a2[12];
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_20:
  int v11 = a2[6];
  a1[12] |= 0x10u;
  a1[6] = v11;
  int v4 = a2[12];
  if ((v4 & 0x20) != 0) {
    goto LABEL_21;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_22:
  unsigned int v13 = a2[8];
  if (v13 >= 6) {
    __assert_rtn("set_multi_path", "GnssEmergencyTypes.pb.h", 20813, "::proto::gnss::Emergency::MultipathIndicator_IsValid(value)");
  }
  a1[12] |= 0x40u;
  a1[8] = v13;
  int v4 = a2[12];
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = a2[9];
    a1[12] |= 0x80u;
    a1[9] = v5;
    int v4 = a2[12];
  }
LABEL_13:
  if ((v4 & 0x100) != 0)
  {
    int v6 = a2[10];
    a1[12] |= 0x100u;
    a1[10] = v6;
  }
}

void sub_100071464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10007147C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109C68;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10007149C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109C68;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000714F0()
{
}

uint64_t sub_100071548(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 48);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0) {
    *(_DWORD *)(result + 40) = 0;
  }
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_100071574(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 3;
  int v6 = a1 + 4;
  int v7 = a1 + 5;
  int v8 = a1 + 6;
  int v9 = a1 + 7;
  int v10 = a1 + 9;
  int v11 = a1 + 10;
  while (2)
  {
    int v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v12;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v38 = 0;
        int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          unsigned int v17 = *v16;
          int v18 = v16 + 1;
          *((void *)this + 1) = v18;
LABEL_34:
          a1[2] = v17;
          a1[12] |= 1u;
          if ((unint64_t)v18 < v15 && *v18 == 16)
          {
            BOOL v19 = v18 + 1;
            *((void *)this + 1) = v19;
            goto LABEL_37;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38);
        if (result)
        {
          unsigned int v17 = v38;
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          goto LABEL_34;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        BOOL v19 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
LABEL_37:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v19;
          unsigned int v28 = v19 + 1;
          *((void *)this + 1) = v28;
        }
        a1[12] |= 2u;
        if ((unint64_t)v28 >= v15 || *v28 != 24) {
          continue;
        }
        int v20 = v28 + 1;
        *((void *)this + 1) = v20;
LABEL_45:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v20;
          int v29 = v20 + 1;
          *((void *)this + 1) = v29;
        }
        a1[12] |= 4u;
        if ((unint64_t)v29 >= v15 || *v29 != 32) {
          continue;
        }
        uint64_t v21 = v29 + 1;
        *((void *)this + 1) = v21;
LABEL_53:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          uint64_t v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v21;
          uint64_t v30 = v21 + 1;
          *((void *)this + 1) = v30;
        }
        a1[12] |= 8u;
        if ((unint64_t)v30 >= v15 || *v30 != 40) {
          continue;
        }
        unsigned int v22 = v30 + 1;
        *((void *)this + 1) = v22;
LABEL_61:
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v22;
          int v31 = v22 + 1;
          *((void *)this + 1) = v31;
        }
        a1[12] |= 0x10u;
        if ((unint64_t)v31 >= v15 || *v31 != 48) {
          continue;
        }
        unsigned int v23 = v31 + 1;
        *((void *)this + 1) = v23;
LABEL_69:
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          int v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v9 = *v23;
          int v32 = v23 + 1;
          *((void *)this + 1) = v32;
        }
        a1[12] |= 0x20u;
        if ((unint64_t)v32 >= v15 || *v32 != 56) {
          continue;
        }
        int v24 = v32 + 1;
        *((void *)this + 1) = v24;
LABEL_77:
        unsigned int v39 = 0;
        if ((unint64_t)v24 >= v15 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39);
          if (!result) {
            return result;
          }
          unsigned int v33 = v39;
        }
        else
        {
          unsigned int v33 = *v24;
          *((void *)this + 1) = v24 + 1;
        }
        if (v33 <= 5)
        {
          a1[12] |= 0x40u;
          a1[8] = v33;
        }
        int v34 = (unsigned char *)*((void *)this + 1);
        unint64_t v25 = *((void *)this + 2);
        if ((unint64_t)v34 >= v25 || *v34 != 64) {
          continue;
        }
        int v26 = v34 + 1;
        *((void *)this + 1) = v26;
LABEL_87:
        if ((unint64_t)v26 >= v25 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          unsigned int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v25 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v26;
          unsigned int v35 = v26 + 1;
          *((void *)this + 1) = v35;
        }
        a1[12] |= 0x80u;
        if ((unint64_t)v35 >= v25 || *v35 != 72) {
          continue;
        }
        int v27 = v35 + 1;
        *((void *)this + 1) = v27;
LABEL_95:
        if ((unint64_t)v27 >= v25 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          int v36 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v25 = *((void *)this + 2);
        }
        else
        {
          *int v11 = *v27;
          int v36 = (unsigned __int8 *)(v27 + 1);
          *((void *)this + 1) = v36;
        }
        a1[12] |= 0x100u;
        if (v36 != (unsigned __int8 *)v25 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_45;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_53;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v22 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_61;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v23 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_69;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_77;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v26 = (char *)*((void *)this + 1);
        unint64_t v25 = *((void *)this + 2);
        goto LABEL_87;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v27 = (char *)*((void *)this + 1);
        unint64_t v25 = *((void *)this + 2);
        goto LABEL_95;
      default:
        int v14 = TagFallback & 7;
LABEL_28:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_100071AB4(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[12];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[12];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[12];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[12];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[12];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  int v6 = v5[12];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  int v6 = v5[12];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
    if ((v5[12] & 0x100) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  int v6 = v5[12];
  if ((v6 & 0x80) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v6 & 0x100) == 0) {
    return result;
  }
LABEL_19:
  int v7 = v5[10];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v7, a2, a4);
}

uint64_t sub_100071BE8(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[12];
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    if ((v3 & 0x100) == 0) {
      goto LABEL_55;
    }
    goto LABEL_51;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_13;
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    unsigned int v3 = a1[12];
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_13:
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      unsigned int v3 = a1[12];
    }
    else
    {
      int v8 = 2;
    }
    uint64_t v4 = (v8 + v4);
  }
LABEL_17:
  if ((v3 & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      unsigned int v3 = a1[12];
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v4 = (v10 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0) {
        goto LABEL_20;
      }
      goto LABEL_33;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v12 = 2;
  }
  uint64_t v4 = (v12 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_20:
    if ((v3 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_37;
  }
LABEL_33:
  unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_21:
    if ((v3 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_41;
  }
LABEL_37:
  unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v16 = 2;
  }
  uint64_t v4 = (v16 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_22:
    if ((v3 & 0x80) == 0) {
      goto LABEL_23;
    }
    goto LABEL_47;
  }
LABEL_41:
  unsigned int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if ((v17 & 0x80000000) != 0)
  {
    int v18 = 11;
  }
  else if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v18 = 2;
  }
  uint64_t v4 = (v18 + v4);
  if ((v3 & 0x80) == 0)
  {
LABEL_23:
    if ((v3 & 0x100) == 0) {
      goto LABEL_55;
    }
    goto LABEL_51;
  }
LABEL_47:
  BOOL v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
  if (v19 >= 0x80)
  {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v20 = 2;
  }
  uint64_t v4 = (v20 + v4);
  if ((v3 & 0x100) != 0)
  {
LABEL_51:
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v21 >= 0x80) {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
    }
    else {
      int v22 = 2;
    }
    uint64_t v4 = (v22 + v4);
  }
LABEL_55:
  a1[11] = v4;
  return v4;
}

void sub_100071DC8(_DWORD *a1, _DWORD *lpsrc)
{
  sub_1000712A8(a1, lpsrc);
}

uint64_t sub_100071E6C()
{
  return 1;
}

void *sub_100071E74@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GpsMeasurementElement");
}

void sub_100071E84(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), *(_DWORD *)(a2 + 32) + *(_DWORD *)(a1 + 32));
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD **)(*(void *)(a2 + 24) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 36);
      uint64_t v7 = *(int *)(a1 + 32);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 24);
      *(_DWORD *)(a1 + 32) = v7 + 1;
      sub_1000712A8(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 32));
  }
  int v9 = *(_DWORD *)(a2 + 76);
  if (!(_BYTE)v9) {
    goto LABEL_20;
  }
  if (v9)
  {
    int v13 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 76) |= 1u;
    *(_DWORD *)(a1 + 8) = v13;
    int v9 = *(_DWORD *)(a2 + 76);
    if ((v9 & 2) == 0)
    {
LABEL_14:
      if ((v9 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_29;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_14;
  }
  int v14 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 76) |= 2u;
  *(_DWORD *)(a1 + 12) = v14;
  int v9 = *(_DWORD *)(a2 + 76);
  if ((v9 & 4) == 0)
  {
LABEL_15:
    if ((v9 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v15 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 76) |= 4u;
  *(_DWORD *)(a1 + 16) = v15;
  int v9 = *(_DWORD *)(a2 + 76);
  if ((v9 & 8) == 0)
  {
LABEL_16:
    if ((v9 & 0x20) == 0) {
      goto LABEL_17;
    }
LABEL_31:
    *(_DWORD *)(a1 + 76) |= 0x20u;
    uint64_t v17 = *(void *)(a1 + 48);
    if (!v17) {
      operator new();
    }
    uint64_t v18 = *(void *)(a2 + 48);
    if (!v18) {
      uint64_t v18 = *(void *)(proto::gnss::Emergency::GpsMeasurements::default_instance_ + 48);
    }
    sub_10005F460(v17, v18);
    int v9 = *(_DWORD *)(a2 + 76);
    if ((v9 & 0x40) == 0)
    {
LABEL_18:
      if ((v9 & 0x80) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
    goto LABEL_36;
  }
LABEL_30:
  int v16 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 76) |= 8u;
  *(_DWORD *)(a1 + 20) = v16;
  int v9 = *(_DWORD *)(a2 + 76);
  if ((v9 & 0x20) != 0) {
    goto LABEL_31;
  }
LABEL_17:
  if ((v9 & 0x40) == 0) {
    goto LABEL_18;
  }
LABEL_36:
  int v19 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 76) |= 0x40u;
  *(_DWORD *)(a1 + 56) = v19;
  int v9 = *(_DWORD *)(a2 + 76);
  if ((v9 & 0x80) != 0)
  {
LABEL_19:
    int v10 = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 76) |= 0x80u;
    *(_DWORD *)(a1 + 60) = v10;
    int v9 = *(_DWORD *)(a2 + 76);
  }
LABEL_20:
  if ((v9 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 76) |= 0x100u;
    int v11 = *(_DWORD **)(a1 + 64);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 64);
    if (!v12) {
      uint64_t v12 = *(void *)(proto::gnss::Emergency::GpsMeasurements::default_instance_ + 64);
    }
    sub_10005FB64(v11, v12);
  }
}

void sub_1000721A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000721B8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100109CE0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::GpsMeasurements::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 6);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 8);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  int v4 = *((_DWORD *)this + 9);
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i < v4; ++i)
    {
      uint64_t v6 = *(void *)(*((void *)this + 3) + 8 * i);
      if (v6)
      {
        (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
        int v4 = *((_DWORD *)this + 9);
      }
    }
  }
  if (*((void *)this + 3)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1000722E0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000721B8(a1);

  operator delete();
}

void sub_100072318()
{
}

uint64_t proto::gnss::Emergency::GpsMeasurements::Clear(proto::gnss::Emergency::GpsMeasurements *this)
{
  int v2 = *((_DWORD *)this + 19);
  if ((_BYTE)v2)
  {
    *((void *)this + 1) = 0;
    *((void *)this + 2) = 0;
    if ((v2 & 0x20) != 0)
    {
      uint64_t v3 = *((void *)this + 6);
      if (v3)
      {
        proto::gnss::Emergency::GpsTimeMeasuredParams::Clear(v3);
        int v2 = *((_DWORD *)this + 19);
      }
    }
    *((void *)this + 7) = 0;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v4 = *((void *)this + 8);
    if (v4)
    {
      if (*(unsigned char *)(v4 + 24))
      {
        *(void *)(v4 + 8) = 0;
        *(_DWORD *)(v4 + 16) = 0;
      }
      *(_DWORD *)(v4 + 24) = 0;
    }
  }
  uint64_t result = sub_10003AD6C((uint64_t)this + 24);
  *((_DWORD *)this + 19) = 0;
  return result;
}

uint64_t sub_1000723E8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 8);
  uint64_t v6 = (unsigned int *)(a1 + 12);
  uint64_t v7 = (unsigned int *)(a1 + 16);
  uint64_t v8 = (unsigned int *)(a1 + 20);
  int v60 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  int v9 = (unsigned int *)(a1 + 56);
  int v10 = (unsigned int *)(a1 + 60);
LABEL_2:
  while (2)
  {
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v15;
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
        }
        *(_DWORD *)(a1 + 76) |= 1u;
        if ((unint64_t)v16 < v14 && *v16 == 16)
        {
          uint64_t v17 = v16 + 1;
          *((void *)this + 1) = v17;
          goto LABEL_37;
        }
        continue;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_37:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unint64_t v25 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v17;
          unint64_t v25 = v17 + 1;
          *((void *)this + 1) = v25;
        }
        *(_DWORD *)(a1 + 76) |= 2u;
        if ((unint64_t)v25 >= v14 || *v25 != 24) {
          continue;
        }
        uint64_t v18 = v25 + 1;
        *((void *)this + 1) = v18;
LABEL_45:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v18;
          int v26 = v18 + 1;
          *((void *)this + 1) = v26;
        }
        *(_DWORD *)(a1 + 76) |= 4u;
        if ((unint64_t)v26 >= v14 || *v26 != 32) {
          continue;
        }
        int v19 = v26 + 1;
        *((void *)this + 1) = v19;
LABEL_53:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v27 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v8 = *v19;
          int v27 = v19 + 1;
          *((void *)this + 1) = v27;
        }
        *(_DWORD *)(a1 + 76) |= 8u;
        if ((unint64_t)v27 >= v14 || *v27 != 42) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v27 + 1;
LABEL_61:
          int v28 = *(_DWORD *)(a1 + 36);
          uint64_t v29 = *(int *)(a1 + 32);
          if ((int)v29 >= v28)
          {
            if (v28 == *(_DWORD *)(a1 + 40))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v60, v28 + 1);
              int v28 = *(_DWORD *)(a1 + 36);
            }
            *(_DWORD *)(a1 + 36) = v28 + 1;
            operator new();
          }
          uint64_t v30 = *(void *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v29 + 1;
          int v31 = *(unsigned int **)(v30 + 8 * v29);
          unsigned int v61 = 0;
          int v32 = (char *)*((void *)this + 1);
          if ((unint64_t)v32 >= *((void *)this + 2) || *v32 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v61))return 0; {
          }
            }
          else
          {
            unsigned int v61 = *v32;
            *((void *)this + 1) = v32 + 1;
          }
          int v33 = *((_DWORD *)this + 14);
          int v34 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v33 + 1;
          if (v33 >= v34) {
            return 0;
          }
          int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v61);
          if (!sub_100071574(v31, this, v36) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
          int v37 = *((_DWORD *)this + 14);
          BOOL v38 = __OFSUB__(v37, 1);
          int v39 = v37 - 1;
          if (v39 < 0 == v38) {
            *((_DWORD *)this + 14) = v39;
          }
          int v27 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v27 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v40 = *v27;
        }
        while (v40 == 42);
        if (v40 != 50) {
          continue;
        }
        *((void *)this + 1) = v27 + 1;
LABEL_79:
        *(_DWORD *)(a1 + 76) |= 0x20u;
        uint64_t v41 = *(void *)(a1 + 48);
        if (!v41) {
          operator new();
        }
        unsigned int v62 = 0;
        int v42 = (char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v62))return 0; {
        }
          }
        else
        {
          unsigned int v62 = *v42;
          *((void *)this + 1) = v42 + 1;
        }
        int v43 = *((_DWORD *)this + 14);
        int v44 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v43 + 1;
        if (v43 >= v44) {
          return 0;
        }
        int v45 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v62);
        if (!sub_10005F700(v41, this, v46) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v45);
        int v47 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v47, 1);
        int v48 = v47 - 1;
        if (v48 < 0 == v38) {
          *((_DWORD *)this + 14) = v48;
        }
        unsigned int v49 = (unsigned char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        if ((unint64_t)v49 >= v20 || *v49 != 56) {
          continue;
        }
        uint64_t v21 = v49 + 1;
        *((void *)this + 1) = v21;
LABEL_93:
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          unsigned int v50 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v9 = *v21;
          unsigned int v50 = v21 + 1;
          *((void *)this + 1) = v50;
        }
        *(_DWORD *)(a1 + 76) |= 0x40u;
        if ((unint64_t)v50 >= v20 || *v50 != 64) {
          continue;
        }
        int v22 = v50 + 1;
        *((void *)this + 1) = v22;
LABEL_101:
        if ((unint64_t)v22 >= v20 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          unsigned int v51 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v22;
          unsigned int v51 = v22 + 1;
          *((void *)this + 1) = v51;
        }
        int v23 = *(_DWORD *)(a1 + 76) | 0x80;
        *(_DWORD *)(a1 + 76) = v23;
        if ((unint64_t)v51 >= v20 || *v51 != 74) {
          continue;
        }
        *((void *)this + 1) = v51 + 1;
LABEL_109:
        *(_DWORD *)(a1 + 76) = v23 | 0x100;
        unsigned int v52 = *(unsigned int **)(a1 + 64);
        if (!v52) {
          operator new();
        }
        unsigned int v63 = 0;
        int v53 = (char *)*((void *)this + 1);
        if ((unint64_t)v53 >= *((void *)this + 2) || *v53 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v53;
          *((void *)this + 1) = v53 + 1;
        }
        int v54 = *((_DWORD *)this + 14);
        int v55 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v54 + 1;
        if (v54 < v55)
        {
          int v56 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
          if (sub_10005FD2C(v52, this, v57))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v56);
              int v58 = *((_DWORD *)this + 14);
              BOOL v38 = __OFSUB__(v58, 1);
              int v59 = v58 - 1;
              if (v59 < 0 == v38) {
                *((_DWORD *)this + 14) = v59;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_45;
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_53;
      case 5u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_61;
        }
        goto LABEL_29;
      case 6u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_79;
        }
        goto LABEL_29;
      case 7u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        uint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_93;
      case 8u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_101;
      case 9u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_29;
        }
        int v23 = *(_DWORD *)(a1 + 76);
        goto LABEL_109;
      default:
        int v13 = TagFallback & 7;
LABEL_29:
        if (v13 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100072B6C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 76);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  if ((*(_DWORD *)(v5 + 76) & 8) != 0) {
LABEL_5:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
LABEL_6:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  int v8 = *(_DWORD *)(v5 + 76);
  if ((v8 & 0x20) != 0)
  {
    uint64_t v9 = *(void *)(v5 + 48);
    if (!v9) {
      uint64_t v9 = *(void *)(proto::gnss::Emergency::GpsMeasurements::default_instance_ + 48);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
    int v8 = *(_DWORD *)(v5 + 76);
    if ((v8 & 0x40) == 0)
    {
LABEL_11:
      if ((v8 & 0x80) == 0) {
        goto LABEL_12;
      }
LABEL_22:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 60), a2, a4);
      if ((*(_DWORD *)(v5 + 76) & 0x100) == 0) {
        return result;
      }
      goto LABEL_23;
    }
  }
  else if ((v8 & 0x40) == 0)
  {
    goto LABEL_11;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 56), a2, a4);
  int v8 = *(_DWORD *)(v5 + 76);
  if ((v8 & 0x80) != 0) {
    goto LABEL_22;
  }
LABEL_12:
  if ((v8 & 0x100) == 0) {
    return result;
  }
LABEL_23:
  uint64_t v10 = *(void *)(v5 + 64);
  if (!v10) {
    uint64_t v10 = *(void *)(proto::gnss::Emergency::GpsMeasurements::default_instance_ + 64);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v10, a2, a4);
}

uint64_t sub_100072CE4(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 76);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
        int v3 = *(_DWORD *)(a1 + 76);
      }
      else
      {
        int v6 = 1;
      }
      int v4 = v6 + 1;
      if ((v3 & 2) == 0)
      {
LABEL_15:
        if ((v3 & 4) != 0)
        {
          uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
          if (v9 >= 0x80)
          {
            int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
            int v3 = *(_DWORD *)(a1 + 76);
          }
          else
          {
            int v10 = 2;
          }
          v4 += v10;
          if ((v3 & 8) == 0)
          {
LABEL_17:
            if ((v3 & 0x20) == 0) {
              goto LABEL_18;
            }
            goto LABEL_30;
          }
        }
        else if ((v3 & 8) == 0)
        {
          goto LABEL_17;
        }
        int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
        if (v11 >= 0x80)
        {
          int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
          int v3 = *(_DWORD *)(a1 + 76);
        }
        else
        {
          int v12 = 2;
        }
        v4 += v12;
        if ((v3 & 0x20) == 0)
        {
LABEL_18:
          if ((v3 & 0x40) == 0) {
            goto LABEL_19;
          }
          goto LABEL_36;
        }
LABEL_30:
        uint64_t v13 = *(void *)(a1 + 48);
        if (!v13) {
          uint64_t v13 = *(void *)(proto::gnss::Emergency::GpsMeasurements::default_instance_ + 48);
        }
        unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005F9E0(v13, a2);
        int v15 = (int)v14;
        if (v14 >= 0x80) {
          int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
        }
        else {
          int v16 = 1;
        }
        v4 += v15 + v16 + 1;
        int v3 = *(_DWORD *)(a1 + 76);
        if ((v3 & 0x40) == 0)
        {
LABEL_19:
          if ((v3 & 0x80) == 0) {
            goto LABEL_20;
          }
          goto LABEL_40;
        }
LABEL_36:
        uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
        if (v17 >= 0x80)
        {
          int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
          int v3 = *(_DWORD *)(a1 + 76);
        }
        else
        {
          int v18 = 2;
        }
        v4 += v18;
        if ((v3 & 0x80) == 0)
        {
LABEL_20:
          if ((v3 & 0x100) == 0) {
            goto LABEL_50;
          }
          goto LABEL_44;
        }
LABEL_40:
        int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
        if (v19 >= 0x80)
        {
          int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
          int v3 = *(_DWORD *)(a1 + 76);
        }
        else
        {
          int v20 = 2;
        }
        v4 += v20;
        if ((v3 & 0x100) == 0) {
          goto LABEL_50;
        }
        goto LABEL_44;
      }
    }
    else
    {
      int v4 = 0;
      if ((v3 & 2) == 0) {
        goto LABEL_15;
      }
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *(_DWORD *)(a1 + 76);
    }
    else
    {
      int v8 = 1;
    }
    v4 += v8 + 1;
    goto LABEL_15;
  }
  int v4 = 0;
  if ((v3 & 0x100) == 0) {
    goto LABEL_50;
  }
LABEL_44:
  uint64_t v21 = *(void *)(a1 + 64);
  if (!v21) {
    uint64_t v21 = *(void *)(proto::gnss::Emergency::GpsMeasurements::default_instance_ + 64);
  }
  int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005FFDC(v21, a2);
  int v23 = (int)v22;
  if (v22 >= 0x80) {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
  }
  else {
    int v24 = 1;
  }
  v4 += v23 + v24 + 1;
LABEL_50:
  int v25 = *(_DWORD *)(a1 + 32);
  uint64_t v26 = (v25 + v4);
  if (v25 >= 1)
  {
    uint64_t v27 = 0;
    do
    {
      int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100071BE8(*(unsigned int **)(*(void *)(a1 + 24)+ 8 * v27), a2);
      int v29 = (int)v28;
      if (v28 >= 0x80) {
        int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28, a2);
      }
      else {
        int v30 = 1;
      }
      uint64_t v26 = (v29 + v26 + v30);
      ++v27;
    }
    while (v27 < *(int *)(a1 + 32));
  }
  *(_DWORD *)(a1 + 72) = v26;
  return v26;
}

void sub_100072F1C(uint64_t a1, void *lpsrc)
{
  sub_100071E84(a1, (uint64_t)lpsrc);
}

uint64_t sub_100072FC0()
{
  return 1;
}

void *sub_100072FC8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GpsMeasurements");
}

void proto::gnss::Emergency::MeasurementReport::MergeFrom(proto::gnss::Emergency::MeasurementReport *this, const proto::gnss::Emergency::MeasurementReport *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 52);
  if (!(_BYTE)v4) {
    return;
  }
  if (*((unsigned char *)a2 + 52))
  {
    unsigned int v5 = *((_DWORD *)a2 + 2);
    if (v5 >= 9) {
      __assert_rtn("set_result", "GnssEmergencyTypes.pb.h", 21129, "::proto::gnss::Emergency::ErrorCodes_IsValid(value)");
    }
    *((_DWORD *)this + 13) |= 1u;
    *((_DWORD *)this + 2) = v5;
    int v4 = *((_DWORD *)a2 + 13);
  }
  if ((v4 & 2) != 0)
  {
    int v7 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 13) |= 2u;
    *((_DWORD *)this + 3) = v7;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  *((_DWORD *)this + 13) |= 4u;
  int v8 = (_DWORD *)*((void *)this + 2);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *((void *)a2 + 2);
  if (!v9) {
    uint64_t v9 = *(void *)(proto::gnss::Emergency::MeasurementReport::default_instance_ + 16);
  }
  sub_10005BD30(v8, v9);
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_26:
    *((_DWORD *)this + 13) |= 0x10u;
    uint64_t v12 = *((void *)this + 4);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = *((void *)a2 + 4);
    if (!v13) {
      uint64_t v13 = *(void *)(proto::gnss::Emergency::MeasurementReport::default_instance_ + 32);
    }
    sub_100070448(v12, v13);
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x20) == 0)
    {
LABEL_12:
      if ((v4 & 0x40) == 0) {
        return;
      }
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_21:
  *((_DWORD *)this + 13) |= 8u;
  uint64_t v10 = *((void *)this + 3);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = *((void *)a2 + 3);
  if (!v11) {
    uint64_t v11 = *(void *)(proto::gnss::Emergency::MeasurementReport::default_instance_ + 24);
  }
  sub_100071E84(v10, v11);
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x10) != 0) {
    goto LABEL_26;
  }
LABEL_11:
  if ((v4 & 0x20) == 0) {
    goto LABEL_12;
  }
LABEL_31:
  int v14 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 13) |= 0x20u;
  *((_DWORD *)this + 10) = v14;
  if ((*((_DWORD *)a2 + 13) & 0x40) != 0)
  {
LABEL_13:
    char v6 = *((unsigned char *)a2 + 44);
    *((_DWORD *)this + 13) |= 0x40u;
    *((unsigned char *)this + 44) = v6;
  }
}

void sub_10007326C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100073284(void *result)
{
  if ((void *)proto::gnss::Emergency::MeasurementReport::default_instance_ != result)
  {
    int v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[4];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_100073350(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109D58;
  sub_100073284(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1000733A4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109D58;
  sub_100073284(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10007340C()
{
}

uint64_t proto::gnss::Emergency::MeasurementReport::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 52);
  if ((_BYTE)v2)
  {
    *(void *)(this + 8) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 24))
        {
          *(void *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        int v2 = *(_DWORD *)(this + 52);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(void *)(this + 24);
      if (this)
      {
        this = proto::gnss::Emergency::GpsMeasurements::Clear((proto::gnss::Emergency::GpsMeasurements *)this);
        int v2 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this) {
        this = proto::gnss::Emergency::GanssMeasurements::Clear(this);
      }
    }
    *(_DWORD *)(v1 + 40) = 0;
    *(unsigned char *)(v1 + 44) = 0;
  }
  *(_DWORD *)(v1 + 52) = 0;
  return this;
}

uint64_t proto::gnss::Emergency::MeasurementReport::MergePartialFromCodedStream(proto::gnss::Emergency::MeasurementReport *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int v5 = (unsigned int *)((char *)this + 12);
  char v6 = (unsigned int *)((char *)this + 40);
  while (2)
  {
    int v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v52 = 0;
        uint64_t v10 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v11 = v52;
        }
        else
        {
          unsigned int v11 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        if (v11 <= 8)
        {
          *((_DWORD *)this + 13) |= 1u;
          *((_DWORD *)this + 2) = v11;
        }
        int v19 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        if ((unint64_t)v19 < v12 && *v19 == 16)
        {
          uint64_t v13 = v19 + 1;
          *((void *)a2 + 1) = v13;
          goto LABEL_35;
        }
        continue;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v13 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
LABEL_35:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v20 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v5 = *v13;
          int v20 = v13 + 1;
          *((void *)a2 + 1) = v20;
        }
        int v14 = *((_DWORD *)this + 13) | 2;
        *((_DWORD *)this + 13) = v14;
        if ((unint64_t)v20 >= v12 || *v20 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_43:
        *((_DWORD *)this + 13) = v14 | 4;
        uint64_t v21 = (_DWORD *)*((void *)this + 2);
        if (!v21) {
          operator new();
        }
        unsigned int v52 = 0;
        int v22 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52))return 0; {
        }
          }
        else
        {
          unsigned int v52 = *v22;
          *((void *)a2 + 1) = v22 + 1;
        }
        int v23 = *((_DWORD *)a2 + 14);
        int v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24) {
          return 0;
        }
        int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v52);
        if (!sub_10005BF3C(v21, a2, v26) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v25);
        int v27 = *((_DWORD *)a2 + 14);
        BOOL v28 = __OFSUB__(v27, 1);
        int v29 = v27 - 1;
        if (v29 < 0 == v28) {
          *((_DWORD *)a2 + 14) = v29;
        }
        int v30 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v30 + 1;
LABEL_57:
        *((_DWORD *)this + 13) |= 8u;
        uint64_t v31 = *((void *)this + 3);
        if (!v31) {
          operator new();
        }
        unsigned int v52 = 0;
        int v32 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v32 >= *((void *)a2 + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52))return 0; {
        }
          }
        else
        {
          unsigned int v52 = *v32;
          *((void *)a2 + 1) = v32 + 1;
        }
        int v33 = *((_DWORD *)a2 + 14);
        int v34 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v52);
        if (!sub_1000723E8(v31, a2, v36) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v35);
        int v37 = *((_DWORD *)a2 + 14);
        BOOL v28 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v28) {
          *((_DWORD *)a2 + 14) = v38;
        }
        int v39 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v39 >= *((void *)a2 + 2) || *v39 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v39 + 1;
LABEL_71:
        *((_DWORD *)this + 13) |= 0x10u;
        uint64_t v40 = *((void *)this + 4);
        if (!v40) {
          operator new();
        }
        unsigned int v52 = 0;
        uint64_t v41 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v41 >= *((void *)a2 + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52))return 0; {
        }
          }
        else
        {
          unsigned int v52 = *v41;
          *((void *)a2 + 1) = v41 + 1;
        }
        int v42 = *((_DWORD *)a2 + 14);
        int v43 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v42 + 1;
        if (v42 < v43)
        {
          int v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v52);
          if (sub_1000708B8(v40, a2, v45))
          {
            if (*((unsigned char *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v44);
              int v46 = *((_DWORD *)a2 + 14);
              BOOL v28 = __OFSUB__(v46, 1);
              int v47 = v46 - 1;
              if (v47 < 0 == v28) {
                *((_DWORD *)a2 + 14) = v47;
              }
              int v48 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v15 = *((void *)a2 + 2);
              if ((unint64_t)v48 < v15 && *v48 == 48)
              {
                int v16 = v48 + 1;
                *((void *)a2 + 1) = v16;
LABEL_85:
                if ((unint64_t)v16 >= v15 || *v16 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
                  if (!result) {
                    return result;
                  }
                  unsigned int v49 = (unsigned char *)*((void *)a2 + 1);
                  unint64_t v15 = *((void *)a2 + 2);
                }
                else
                {
                  *char v6 = *v16;
                  unsigned int v49 = v16 + 1;
                  *((void *)a2 + 1) = v49;
                }
                *((_DWORD *)this + 13) |= 0x20u;
                if ((unint64_t)v49 < v15 && *v49 == 56)
                {
                  uint64_t v17 = v49 + 1;
                  *((void *)a2 + 1) = v17;
LABEL_93:
                  unsigned int v52 = 0;
                  if ((unint64_t)v17 >= v15 || *v17 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
                    if (!result) {
                      return result;
                    }
                    unsigned int v50 = v52;
                    unsigned int v51 = (unsigned __int8 *)*((void *)a2 + 1);
                    unint64_t v15 = *((void *)a2 + 2);
                  }
                  else
                  {
                    unsigned int v50 = *v17;
                    unsigned int v51 = (unsigned __int8 *)(v17 + 1);
                    *((void *)a2 + 1) = v51;
                  }
                  *((unsigned char *)this + 44) = v50 != 0;
                  *((_DWORD *)this + 13) |= 0x40u;
                  if (v51 == (unsigned __int8 *)v15
                    && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                  {
                    *((_DWORD *)a2 + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)a2 + 36) = 1;
                    return result;
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_24;
        }
        int v14 = *((_DWORD *)this + 13);
        goto LABEL_43;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_57;
        }
        goto LABEL_24;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_71;
        }
        goto LABEL_24;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_85;
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v17 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_93;
      default:
        int v9 = TagFallback & 7;
LABEL_24:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100073B3C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_11:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::MeasurementReport::default_instance_ + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(proto::gnss::Emergency::MeasurementReport::default_instance_ + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_20:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 40), a2, a4);
    if ((*(_DWORD *)(v5 + 52) & 0x40) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_17:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9) {
    uint64_t v9 = *(void *)(proto::gnss::Emergency::MeasurementReport::default_instance_ + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) != 0) {
    goto LABEL_20;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return result;
  }
LABEL_21:
  int v10 = *(unsigned __int8 *)(v5 + 44);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, (BOOL)a2, a4);
}

uint64_t proto::gnss::Emergency::MeasurementReport::ByteSize(proto::gnss::Emergency::MeasurementReport *this, unint64_t a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 52);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0;
    goto LABEL_47;
  }
  if (*((unsigned char *)this + 52))
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if ((v6 & 0x80000000) != 0)
    {
      unsigned int v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else if (v6 >= 0x80)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      int v3 = *((_DWORD *)this + 13);
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      unsigned int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    unsigned int v4 = 0;
    if ((*((unsigned char *)this + 52) & 2) == 0) {
      goto LABEL_17;
    }
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    int v3 = *((_DWORD *)this + 13);
  }
  else
  {
    int v8 = 2;
  }
  v4 += v8;
LABEL_17:
  if ((v3 & 4) != 0)
  {
    uint64_t v9 = *((void *)this + 2);
    if (!v9) {
      uint64_t v9 = *(void *)(proto::gnss::Emergency::MeasurementReport::default_instance_ + 16);
    }
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005C204(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    v4 += v11 + v12 + 1;
    int v3 = *((_DWORD *)this + 13);
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0) {
        goto LABEL_20;
      }
LABEL_34:
      uint64_t v17 = *((void *)this + 4);
      if (!v17) {
        uint64_t v17 = *(void *)(proto::gnss::Emergency::MeasurementReport::default_instance_ + 32);
      }
      int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100071004(v17, a2);
      int v19 = (int)v18;
      if (v18 >= 0x80) {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
      }
      else {
        int v20 = 1;
      }
      v4 += v19 + v20 + 1;
      int v3 = *((_DWORD *)this + 13);
      if ((v3 & 0x20) == 0) {
        goto LABEL_44;
      }
      goto LABEL_40;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  uint64_t v13 = *((void *)this + 3);
  if (!v13) {
    uint64_t v13 = *(void *)(proto::gnss::Emergency::MeasurementReport::default_instance_ + 24);
  }
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100072CE4(v13, a2);
  int v15 = (int)v14;
  if (v14 >= 0x80) {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  }
  else {
    int v16 = 1;
  }
  v4 += v15 + v16 + 1;
  int v3 = *((_DWORD *)this + 13);
  if ((v3 & 0x10) != 0) {
    goto LABEL_34;
  }
LABEL_20:
  if ((v3 & 0x20) != 0)
  {
LABEL_40:
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
      int v3 = *((_DWORD *)this + 13);
    }
    else
    {
      int v22 = 2;
    }
    v4 += v22;
  }
LABEL_44:
  if ((v3 & 0x40) != 0) {
    uint64_t result = v4 + 2;
  }
  else {
    uint64_t result = v4;
  }
LABEL_47:
  *((_DWORD *)this + 12) = result;
  return result;
}

void sub_100073E2C(proto::gnss::Emergency::MeasurementReport *a1, void *lpsrc)
{
  proto::gnss::Emergency::MeasurementReport::MergeFrom(a1, (const proto::gnss::Emergency::MeasurementReport *)lpsrc);
}

uint64_t sub_100073ED0()
{
  return 1;
}

void *sub_100073ED8@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.MeasurementReport");
}

void sub_100073EE8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    sub_10002D764(a1 + 24, *(_DWORD *)(a1 + 32) + v4);
    memcpy((void *)(*(void *)(a1 + 24) + 4 * *(int *)(a1 + 32)), *(const void **)(a2 + 24), 4 * *(int *)(a2 + 32));
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
  }
  int v5 = *(_DWORD *)(a2 + 48);
  if (v5)
  {
    sub_10002D764(a1 + 40, *(_DWORD *)(a1 + 48) + v5);
    memcpy((void *)(*(void *)(a1 + 40) + 4 * *(int *)(a1 + 48)), *(const void **)(a2 + 40), 4 * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }
  LOBYTE(v6) = *(unsigned char *)(a2 + 64);
  if ((_BYTE)v6)
  {
    if (*(unsigned char *)(a2 + 64))
    {
      int v8 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 64) |= 1u;
      *(_DWORD *)(a1 + 8) = v8;
      int v6 = *(_DWORD *)(a2 + 64);
      if ((v6 & 2) == 0)
      {
LABEL_10:
        if ((v6 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_17;
      }
    }
    else if ((*(unsigned char *)(a2 + 64) & 2) == 0)
    {
      goto LABEL_10;
    }
    int v9 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 64) |= 2u;
    *(_DWORD *)(a1 + 12) = v9;
    int v6 = *(_DWORD *)(a2 + 64);
    if ((v6 & 4) == 0)
    {
LABEL_11:
      if ((v6 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_18;
    }
LABEL_17:
    int v10 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 64) |= 4u;
    *(_DWORD *)(a1 + 16) = v10;
    int v6 = *(_DWORD *)(a2 + 64);
    if ((v6 & 8) == 0)
    {
LABEL_12:
      if ((v6 & 0x40) == 0) {
        return;
      }
      goto LABEL_13;
    }
LABEL_18:
    int v11 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 64) |= 8u;
    *(_DWORD *)(a1 + 20) = v11;
    if ((*(_DWORD *)(a2 + 64) & 0x40) == 0) {
      return;
    }
LABEL_13:
    int v7 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 64) |= 0x40u;
    *(_DWORD *)(a1 + 56) = v7;
  }
}

void sub_100074084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10007409C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100109DD0;
  if (*((void *)this + 5)) {
    operator delete[]();
  }
  if (*((void *)this + 3)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100074128(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_10007409C(a1);

  operator delete();
}

void sub_100074160()
{
}

uint64_t sub_1000741BC(uint64_t result)
{
  if (*(unsigned char *)(result + 64))
  {
    *(_DWORD *)(result + 56) = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_1000741DC(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5 = a1 + 40;
  uint64_t v6 = a1 + 24;
  unsigned int v49 = (unsigned int *)(a1 + 8);
  unsigned int v50 = (unsigned int *)(a1 + 12);
  int v7 = (unsigned int *)(a1 + 16);
  int v8 = (unsigned int *)(a1 + 20);
  int v9 = (unsigned int *)(a1 + 56);
LABEL_2:
  while (2)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v49);
          if (!result) {
            return result;
          }
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v49 = *v14;
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 64) |= 1u;
        if ((unint64_t)v15 < v13 && *v15 == 16)
        {
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_39;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
LABEL_39:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v50);
          if (!result) {
            return result;
          }
          int v23 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v50 = *v16;
          int v23 = v16 + 1;
          *((void *)this + 1) = v23;
        }
        *(_DWORD *)(a1 + 64) |= 2u;
        if ((unint64_t)v23 >= v13 || *v23 != 24) {
          continue;
        }
        uint64_t v17 = v23 + 1;
        *((void *)this + 1) = v17;
LABEL_47:
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v17;
          int v24 = v17 + 1;
          *((void *)this + 1) = v24;
        }
        *(_DWORD *)(a1 + 64) |= 4u;
        if ((unint64_t)v24 >= v13 || *v24 != 32) {
          continue;
        }
        int v18 = v24 + 1;
        *((void *)this + 1) = v18;
LABEL_55:
        if ((unint64_t)v18 >= v13 || (char)*v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v25 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v18;
          int v25 = v18 + 1;
          *((void *)this + 1) = v25;
        }
        *(_DWORD *)(a1 + 64) |= 8u;
        if ((unint64_t)v25 >= v13) {
          continue;
        }
        int v26 = *v25;
        goto LABEL_81;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_47;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v18 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_55;
      case 5u:
        int v12 = TagFallback & 7;
        if (v12 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            int v19 = (char *)*((void *)this + 1);
            unint64_t v13 = *((void *)this + 2);
            goto LABEL_62;
          }
          goto LABEL_26;
        }
        uint64_t result = sub_10005630C(this, v6);
        if (!result) {
          return result;
        }
        while (1)
        {
          int v25 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          if ((unint64_t)v25 >= v13) {
            goto LABEL_2;
          }
          int v26 = *v25;
          if (v26 == 48) {
            goto LABEL_103;
          }
LABEL_81:
          if (v26 != 40) {
            goto LABEL_2;
          }
          int v19 = (char *)(v25 + 1);
          *((void *)this + 1) = v19;
LABEL_62:
          unsigned int v51 = 0;
          if ((unint64_t)v19 >= v13 || *v19 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
          }
            }
          else
          {
            unsigned int v51 = *v19;
            *((void *)this + 1) = v19 + 1;
          }
          int v27 = *(_DWORD *)(a1 + 32);
          if (v27 == *(_DWORD *)(a1 + 36))
          {
            sub_10002D764(v6, v27 + 1);
            int v27 = *(_DWORD *)(a1 + 32);
          }
          unsigned int v28 = v51;
          uint64_t v29 = *(void *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v27 + 1;
          *(_DWORD *)(v29 + 4 * v27) = v28;
          int v30 = *(_DWORD *)(a1 + 36) - *(_DWORD *)(a1 + 32);
          if (v30 >= 1)
          {
            int v31 = v30 + 1;
            do
            {
              int v32 = (unsigned char *)*((void *)this + 1);
              unint64_t v33 = *((void *)this + 2);
              if ((unint64_t)v32 >= v33 || *v32 != 40) {
                break;
              }
              *((void *)this + 1) = v32 + 1;
              if ((unint64_t)(v32 + 1) >= v33 || (char)v32[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
              }
                }
              else
              {
                unsigned int v51 = v32[1];
                *((void *)this + 1) = v32 + 2;
              }
              int v34 = *(_DWORD *)(a1 + 32);
              if (v34 >= *(_DWORD *)(a1 + 36))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v52);
                int v34 = *(_DWORD *)(a1 + 32);
              }
              unsigned int v35 = v51;
              uint64_t v36 = *(void *)(a1 + 24);
              *(_DWORD *)(a1 + 32) = v34 + 1;
              *(_DWORD *)(v36 + 4 * v34) = v35;
              --v31;
            }
            while (v31 > 1);
          }
        }
      case 6u:
        int v12 = TagFallback & 7;
        if (v12 == 2)
        {
          uint64_t result = sub_10005630C(this, v5);
          if (!result) {
            return result;
          }
          while (1)
          {
            int v25 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v13 = *((void *)this + 2);
            if ((unint64_t)v25 >= v13) {
              goto LABEL_2;
            }
            int v47 = *v25;
            if (v47 == 56)
            {
              uint64_t v21 = (char *)(v25 + 1);
              *((void *)this + 1) = v21;
LABEL_105:
              if ((unint64_t)v21 >= v13 || *v21 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
                if (!result) {
                  return result;
                }
                int v48 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v13 = *((void *)this + 2);
              }
              else
              {
                unsigned int *v9 = *v21;
                int v48 = (unsigned __int8 *)(v21 + 1);
                *((void *)this + 1) = v48;
              }
              *(_DWORD *)(a1 + 64) |= 0x40u;
              if (v48 == (unsigned __int8 *)v13
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              goto LABEL_2;
            }
            if (v47 != 48) {
              goto LABEL_2;
            }
LABEL_103:
            int v20 = (char *)(v25 + 1);
            *((void *)this + 1) = v20;
LABEL_83:
            unsigned int v51 = 0;
            if ((unint64_t)v20 >= v13 || *v20 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
            }
              }
            else
            {
              unsigned int v51 = *v20;
              *((void *)this + 1) = v20 + 1;
            }
            int v37 = *(_DWORD *)(a1 + 48);
            if (v37 == *(_DWORD *)(a1 + 52))
            {
              sub_10002D764(v5, v37 + 1);
              int v37 = *(_DWORD *)(a1 + 48);
            }
            unsigned int v38 = v51;
            uint64_t v39 = *(void *)(a1 + 40);
            *(_DWORD *)(a1 + 48) = v37 + 1;
            *(_DWORD *)(v39 + 4 * v37) = v38;
            int v40 = *(_DWORD *)(a1 + 52) - *(_DWORD *)(a1 + 48);
            if (v40 >= 1)
            {
              int v41 = v40 + 1;
              do
              {
                int v42 = (unsigned char *)*((void *)this + 1);
                unint64_t v43 = *((void *)this + 2);
                if ((unint64_t)v42 >= v43 || *v42 != 48) {
                  break;
                }
                *((void *)this + 1) = v42 + 1;
                if ((unint64_t)(v42 + 1) >= v43 || (char)v42[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
                }
                  }
                else
                {
                  unsigned int v51 = v42[1];
                  *((void *)this + 1) = v42 + 2;
                }
                int v44 = *(_DWORD *)(a1 + 48);
                if (v44 >= *(_DWORD *)(a1 + 52))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v52);
                  int v44 = *(_DWORD *)(a1 + 48);
                }
                unsigned int v45 = v51;
                uint64_t v46 = *(void *)(a1 + 40);
                *(_DWORD *)(a1 + 48) = v44 + 1;
                *(_DWORD *)(v46 + 4 * v44) = v45;
                --v41;
              }
              while (v41 > 1);
            }
          }
        }
        if ((TagFallback & 7) == 0)
        {
          int v20 = (char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          goto LABEL_83;
        }
LABEL_26:
        if (v12 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        uint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_105;
      default:
        int v12 = TagFallback & 7;
        goto LABEL_26;
    }
  }
}

void sub_100074850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007488C(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 64);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  if ((*(_DWORD *)(v5 + 64) & 8) != 0) {
LABEL_5:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
LABEL_6:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(*(void *)(v5 + 24) + 4 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(*(void *)(v5 + 40) + 4 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 48));
  }
  if ((*(unsigned char *)(v5 + 64) & 0x40) != 0)
  {
    int v9 = *(_DWORD *)(v5 + 56);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v9, a2, a4);
  }
  return result;
}

uint64_t sub_1000749C4(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 64);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_30;
  }
  if (*(unsigned char *)(a1 + 64))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 64);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 64) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    int v7 = 2;
  }
  v4 += v7;
LABEL_14:
  if ((v3 & 4) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      int v9 = 2;
    }
    v4 += v9;
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x40) == 0) {
        goto LABEL_30;
      }
      goto LABEL_26;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    int v11 = 2;
  }
  v4 += v11;
  if ((v3 & 0x40) != 0)
  {
LABEL_26:
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    if (v12 >= 0x80) {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    }
    else {
      int v13 = 2;
    }
    v4 += v13;
  }
LABEL_30:
  int v14 = *(_DWORD *)(a1 + 32);
  if (v14 < 1)
  {
    int v16 = 0;
  }
  else
  {
    uint64_t v15 = 0;
    int v16 = 0;
    do
    {
      uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 24)
                                                                                             + 4 * v15);
      if (v17 >= 0x80)
      {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
        int v14 = *(_DWORD *)(a1 + 32);
      }
      else
      {
        int v18 = 1;
      }
      v16 += v18;
      ++v15;
    }
    while (v15 < v14);
  }
  int v19 = *(_DWORD *)(a1 + 48);
  if (v19 < 1)
  {
    int v21 = 0;
  }
  else
  {
    uint64_t v20 = 0;
    int v21 = 0;
    do
    {
      int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 40)
                                                                                             + 4 * v20);
      if (v22 >= 0x80)
      {
        int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
        int v19 = *(_DWORD *)(a1 + 48);
      }
      else
      {
        int v23 = 1;
      }
      v21 += v23;
      ++v20;
    }
    while (v20 < v19);
  }
  uint64_t result = (v16 + v4 + v19 + v14 + v21);
  *(_DWORD *)(a1 + 60) = result;
  return result;
}

void sub_100074B8C(uint64_t a1, void *lpsrc)
{
  sub_100073EE8(a1, (uint64_t)lpsrc);
}

uint64_t sub_100074C30()
{
  return 1;
}

void *sub_100074C38@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GpsAssistanceRequest");
}

void sub_100074C48(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_100074CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100074D0C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109E48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100074D2C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109E48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100074D80()
{
}

uint64_t sub_100074DCC(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_100074DE0(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      int v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        int v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        unsigned int *v5 = *v12;
        int v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          int v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100074F80(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_100074FEC(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_10007507C(_DWORD *a1, void *lpsrc)
{
  sub_100074C48(a1, (uint64_t)lpsrc);
}

uint64_t sub_100075120()
{
  return 1;
}

void *sub_100075128@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GanssTimeModelElem");
}

void sub_100075138(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    sub_10002D764(a1 + 24, *(_DWORD *)(a1 + 32) + v4);
    memcpy((void *)(*(void *)(a1 + 24) + 4 * *(int *)(a1 + 32)), *(const void **)(a2 + 24), 4 * *(int *)(a2 + 32));
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 48);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 48))
    {
      int v7 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 48) |= 1u;
      *(_DWORD *)(a1 + 8) = v7;
      int v5 = *(_DWORD *)(a2 + 48);
      if ((v5 & 2) == 0)
      {
LABEL_8:
        if ((v5 & 4) == 0) {
          goto LABEL_9;
        }
        goto LABEL_15;
      }
    }
    else if ((*(unsigned char *)(a2 + 48) & 2) == 0)
    {
      goto LABEL_8;
    }
    int v8 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 48) |= 2u;
    *(_DWORD *)(a1 + 12) = v8;
    int v5 = *(_DWORD *)(a2 + 48);
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_16;
    }
LABEL_15:
    int v9 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 48) |= 4u;
    *(_DWORD *)(a1 + 16) = v9;
    int v5 = *(_DWORD *)(a2 + 48);
    if ((v5 & 8) == 0)
    {
LABEL_10:
      if ((v5 & 0x10) == 0) {
        return;
      }
      goto LABEL_11;
    }
LABEL_16:
    int v10 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 48) |= 8u;
    *(_DWORD *)(a1 + 20) = v10;
    if ((*(_DWORD *)(a2 + 48) & 0x10) == 0) {
      return;
    }
LABEL_11:
    int v6 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 48) |= 0x10u;
    *(_DWORD *)(a1 + 40) = v6;
  }
}

void sub_100075290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000752A8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100109EC0;
  if (*((void *)this + 3)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100075318(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000752A8(a1);

  operator delete();
}

void sub_100075350()
{
}

uint64_t sub_1000753A8(uint64_t result)
{
  if (*(unsigned char *)(result + 48))
  {
    *(_DWORD *)(result + 40) = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_1000753C4(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5 = a1 + 24;
  uint64_t v36 = (unsigned int *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 12);
  int v7 = (unsigned int *)(a1 + 16);
  int v8 = (unsigned int *)(a1 + 20);
  int v9 = (unsigned int *)(a1 + 40);
  while (2)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v14 = (char *)*((void *)this + 1);
        int v13 = (char *)*((void *)this + 2);
        if (v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v36);
          if (!result) {
            return result;
          }
          uint64_t v15 = (char *)*((void *)this + 1);
          int v13 = (char *)*((void *)this + 2);
        }
        else
        {
          *uint64_t v36 = *v14;
          uint64_t v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 48) |= 1u;
        if (v15 < v13 && *v15 == 16)
        {
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_34;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v16 = (char *)*((void *)this + 1);
        int v13 = (char *)*((void *)this + 2);
LABEL_34:
        if (v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v22 = (char *)*((void *)this + 1);
          int v13 = (char *)*((void *)this + 2);
        }
        else
        {
          *int v6 = *v16;
          int v22 = v16 + 1;
          *((void *)this + 1) = v22;
        }
        *(_DWORD *)(a1 + 48) |= 2u;
        if (v22 >= v13 || *v22 != 24) {
          continue;
        }
        uint64_t v17 = v22 + 1;
        *((void *)this + 1) = v17;
LABEL_42:
        if (v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v23 = (char *)*((void *)this + 1);
          int v13 = (char *)*((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v17;
          int v23 = v17 + 1;
          *((void *)this + 1) = v23;
        }
        *(_DWORD *)(a1 + 48) |= 4u;
        if (v23 >= v13 || *v23 != 32) {
          continue;
        }
        int v18 = v23 + 1;
        *((void *)this + 1) = v18;
LABEL_50:
        if (v18 >= v13 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v24 = (char *)*((void *)this + 1);
          int v13 = (char *)*((void *)this + 2);
        }
        else
        {
          *int v8 = *v18;
          int v24 = v18 + 1;
          *((void *)this + 1) = v24;
        }
        *(_DWORD *)(a1 + 48) |= 8u;
        if (v24 >= v13 || *v24 != 40) {
          continue;
        }
        int v19 = v24 + 1;
        *((void *)this + 1) = v19;
LABEL_58:
        if (v19 >= v13 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          int v25 = (char *)*((void *)this + 1);
          int v13 = (char *)*((void *)this + 2);
        }
        else
        {
          unsigned int *v9 = *v19;
          int v25 = v19 + 1;
          *((void *)this + 1) = v25;
        }
        *(_DWORD *)(a1 + 48) |= 0x10u;
        if (v25 < v13 && *v25 == 48) {
          goto LABEL_65;
        }
        continue;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        int v13 = (char *)*((void *)this + 2);
        goto LABEL_42;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v18 = (char *)*((void *)this + 1);
        int v13 = (char *)*((void *)this + 2);
        goto LABEL_50;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v19 = (char *)*((void *)this + 1);
        int v13 = (char *)*((void *)this + 2);
        goto LABEL_58;
      case 6u:
        int v12 = TagFallback & 7;
        if (v12 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            uint64_t v20 = (char *)*((void *)this + 1);
            int v13 = (char *)*((void *)this + 2);
            goto LABEL_66;
          }
LABEL_24:
          if (v12 == 4) {
            return 1;
          }
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
          continue;
          }
        }
        uint64_t result = sub_10005630C(this, v5);
        if (!result) {
          return result;
        }
LABEL_83:
        int v25 = (char *)*((void *)this + 1);
        int v13 = (char *)*((void *)this + 2);
        if (v25 >= v13 || *v25 != 48)
        {
          if (v25 == v13 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
LABEL_65:
        uint64_t v20 = v25 + 1;
        *((void *)this + 1) = v20;
LABEL_66:
        unsigned int v37 = 0;
        if (v20 < v13 && (*v20 & 0x80000000) == 0)
        {
          unsigned int v37 = *v20;
          *((void *)this + 1) = v20 + 1;
LABEL_70:
          int v26 = *(_DWORD *)(a1 + 32);
          if (v26 == *(_DWORD *)(a1 + 36))
          {
            sub_10002D764(v5, v26 + 1);
            int v26 = *(_DWORD *)(a1 + 32);
          }
          unsigned int v27 = v37;
          uint64_t v28 = *(void *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v26 + 1;
          *(_DWORD *)(v28 + 4 * v26) = v27;
          int v29 = *(_DWORD *)(a1 + 36) - *(_DWORD *)(a1 + 32);
          if (v29 >= 1)
          {
            int v30 = v29 + 1;
            do
            {
              int v31 = (unsigned char *)*((void *)this + 1);
              unint64_t v32 = *((void *)this + 2);
              if ((unint64_t)v31 >= v32 || *v31 != 48) {
                break;
              }
              *((void *)this + 1) = v31 + 1;
              if ((unint64_t)(v31 + 1) >= v32 || (char)v31[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0; {
              }
                }
              else
              {
                unsigned int v37 = v31[1];
                *((void *)this + 1) = v31 + 2;
              }
              int v33 = *(_DWORD *)(a1 + 32);
              if (v33 >= *(_DWORD *)(a1 + 36))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v38);
                int v33 = *(_DWORD *)(a1 + 32);
              }
              unsigned int v34 = v37;
              uint64_t v35 = *(void *)(a1 + 24);
              *(_DWORD *)(a1 + 32) = v33 + 1;
              *(_DWORD *)(v35 + 4 * v33) = v34;
              --v30;
            }
            while (v30 > 1);
          }
          goto LABEL_83;
        }
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))goto LABEL_70; {
        return 0;
        }
      default:
        int v12 = TagFallback & 7;
        goto LABEL_24;
    }
  }
}

void sub_1000758B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000758E0(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 0x10) != 0) {
LABEL_6:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 40), a2, a4);
LABEL_7:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(*(void *)(v5 + 24) + 4 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  return result;
}

uint64_t sub_1000759CC(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 48);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_30;
  }
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 48);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 48) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 48);
  }
  else
  {
    int v7 = 2;
  }
  v4 += v7;
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 48);
    }
    else
    {
      int v9 = 2;
    }
    v4 += v9;
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_30;
      }
      goto LABEL_26;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 48);
  }
  else
  {
    int v11 = 2;
  }
  v4 += v11;
  if ((v3 & 0x10) != 0)
  {
LABEL_26:
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if (v12 >= 0x80) {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    }
    else {
      int v13 = 2;
    }
    v4 += v13;
  }
LABEL_30:
  int v14 = *(_DWORD *)(a1 + 32);
  if (v14 < 1)
  {
    int v16 = 0;
  }
  else
  {
    uint64_t v15 = 0;
    int v16 = 0;
    do
    {
      uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 24)
                                                                                             + 4 * v15);
      if (v17 >= 0x80)
      {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
        int v14 = *(_DWORD *)(a1 + 32);
      }
      else
      {
        int v18 = 1;
      }
      v16 += v18;
      ++v15;
    }
    while (v15 < v14);
  }
  uint64_t result = (v16 + v4 + v14);
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_100075B38(uint64_t a1, void *lpsrc)
{
  sub_100075138(a1, (uint64_t)lpsrc);
}

uint64_t sub_100075BDC()
{
  return 1;
}

void *sub_100075BE4@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GanssDataBitAssist");
}

void sub_100075BF4(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_100075CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100075CB8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109F38;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100075CD8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_100109F38;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100075D2C()
{
}

uint64_t sub_100075D78(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_100075D8C(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      int v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        int v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        unsigned int *v5 = *v12;
        int v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          int v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100075F2C(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_100075F98(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_100076028(_DWORD *a1, void *lpsrc)
{
  sub_100075BF4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000760CC()
{
  return 1;
}

void *sub_1000760D4@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GanssStoredSatDataElem");
}

void sub_1000760E4(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6), *(_DWORD *)(a2 + 32) + a1[8]);
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 24) + 8 * v4);
      int v6 = a1[9];
      uint64_t v7 = (int)a1[8];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[10])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6), v6 + 1);
          int v6 = a1[9];
        }
        a1[9] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 3);
      a1[8] = v7 + 1;
      sub_100075BF4(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 32));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 52);
  if ((_BYTE)v9)
  {
    if (*(unsigned char *)(a2 + 52))
    {
      int v11 = *(_DWORD *)(a2 + 8);
      a1[13] |= 1u;
      a1[2] = v11;
      int v9 = *(_DWORD *)(a2 + 52);
      if ((v9 & 2) == 0)
      {
LABEL_14:
        if ((v9 & 4) == 0) {
          goto LABEL_15;
        }
        goto LABEL_20;
      }
    }
    else if ((*(unsigned char *)(a2 + 52) & 2) == 0)
    {
      goto LABEL_14;
    }
    int v12 = *(_DWORD *)(a2 + 12);
    a1[13] |= 2u;
    a1[3] = v12;
    int v9 = *(_DWORD *)(a2 + 52);
    if ((v9 & 4) == 0)
    {
LABEL_15:
      if ((v9 & 8) == 0) {
        return;
      }
      goto LABEL_16;
    }
LABEL_20:
    int v13 = *(_DWORD *)(a2 + 16);
    a1[13] |= 4u;
    a1[4] = v13;
    if ((*(_DWORD *)(a2 + 52) & 8) == 0) {
      return;
    }
LABEL_16:
    int v10 = *(_DWORD *)(a2 + 20);
    a1[13] |= 8u;
    a1[5] = v10;
  }
}

void sub_1000762C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000762DC(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_100109FB0;
  int v2 = *((_DWORD *)this + 9);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*((void *)this + 3) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)this + 9);
      }
    }
  }
  if (*((void *)this + 3)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10007639C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000762DC(a1);

  operator delete();
}

void sub_1000763D4()
{
}

uint64_t sub_100076430(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 52))
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
  }
  uint64_t result = sub_10003AD6C(a1 + 24);
  *(_DWORD *)(a1 + 52) = 0;
  return result;
}

uint64_t sub_100076468(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = a1 + 2;
  int v6 = a1 + 3;
  uint64_t v7 = a1 + 4;
  uint64_t v8 = a1 + 5;
  int v9 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6);
  while (1)
  {
    int v10 = (unsigned __int8 *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || (char)*v10 < 0) {
      break;
    }
    TagFallbacuint64_t k = *v10;
    *((_DWORD *)this + 8) = TagFallback;
    *((void *)this + 1) = v10 + 1;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v14;
          uint64_t v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        a1[13] |= 1u;
        if ((unint64_t)v15 < v13 && *v15 == 16)
        {
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_28;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
LABEL_28:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v16;
          uint64_t v20 = v16 + 1;
          *((void *)this + 1) = v20;
        }
        a1[13] |= 2u;
        if ((unint64_t)v20 >= v13 || *v20 != 24) {
          continue;
        }
        uint64_t v17 = v20 + 1;
        *((void *)this + 1) = v17;
LABEL_36:
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v17;
          int v21 = v17 + 1;
          *((void *)this + 1) = v21;
        }
        a1[13] |= 4u;
        if ((unint64_t)v21 >= v13 || *v21 != 32) {
          continue;
        }
        int v18 = v21 + 1;
        *((void *)this + 1) = v18;
LABEL_44:
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v8 = *v18;
          int v22 = v18 + 1;
          *((void *)this + 1) = v22;
        }
        a1[13] |= 8u;
        if ((unint64_t)v22 >= v13 || *v22 != 42) {
          continue;
        }
        break;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_36;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_44;
      case 5u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_20;
        }
        goto LABEL_52;
      default:
        int v12 = TagFallback & 7;
LABEL_20:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
    do
    {
      *((void *)this + 1) = v22 + 1;
LABEL_52:
      int v23 = a1[9];
      uint64_t v24 = (int)a1[8];
      if ((int)v24 >= v23)
      {
        if (v23 == a1[10])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9, v23 + 1);
          int v23 = a1[9];
        }
        a1[9] = v23 + 1;
        operator new();
      }
      uint64_t v25 = *((void *)a1 + 3);
      a1[8] = v24 + 1;
      int v26 = *(unsigned int **)(v25 + 8 * v24);
      unsigned int v36 = 0;
      unsigned int v27 = (char *)*((void *)this + 1);
      if ((unint64_t)v27 >= *((void *)this + 2) || *v27 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36))return 0; {
      }
        }
      else
      {
        unsigned int v36 = *v27;
        *((void *)this + 1) = v27 + 1;
      }
      int v28 = *((_DWORD *)this + 14);
      int v29 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v28 + 1;
      if (v28 >= v29) {
        return 0;
      }
      int v30 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v36);
      if (!sub_100075D8C(v26, this, v31) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v30);
      int v32 = *((_DWORD *)this + 14);
      BOOL v33 = __OFSUB__(v32, 1);
      int v34 = v32 - 1;
      if (v34 < 0 == v33) {
        *((_DWORD *)this + 14) = v34;
      }
      int v22 = (unsigned char *)*((void *)this + 1);
      uint64_t v35 = (unsigned char *)*((void *)this + 2);
    }
    while (v22 < v35 && *v22 == 42);
    if (v22 == v35 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
  TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
  *((_DWORD *)this + 8) = TagFallback;
  if (TagFallback) {
    goto LABEL_7;
  }
  return 1;
}

uint64_t sub_1000768B4(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 8) != 0) {
LABEL_5:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
LABEL_6:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  return result;
}

uint64_t sub_100076984(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_25;
  }
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 52);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    int v7 = 2;
  }
  v4 += v7;
LABEL_14:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_21;
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    int v9 = 2;
  }
  v4 += v9;
  if ((v3 & 8) != 0)
  {
LABEL_21:
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v10 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    }
    else {
      int v11 = 2;
    }
    v4 += v11;
  }
LABEL_25:
  int v12 = *(_DWORD *)(a1 + 32);
  uint64_t v13 = (v12 + v4);
  if (v12 >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100075F98(*(void *)(*(void *)(a1 + 24) + 8 * v14), a2);
      int v16 = (int)v15;
      if (v15 >= 0x80) {
        int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
      }
      else {
        int v17 = 1;
      }
      uint64_t v13 = (v16 + v13 + v17);
      ++v14;
    }
    while (v14 < *(int *)(a1 + 32));
  }
  *(_DWORD *)(a1 + 48) = v13;
  return v13;
}

void sub_100076AC8(_DWORD *a1, void *lpsrc)
{
  sub_1000760E4(a1, (uint64_t)lpsrc);
}

uint64_t sub_100076B6C()
{
  return 1;
}

void *sub_100076B74@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GanssNavModelAddData");
}

void sub_100076B84(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[7] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 28);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[7] |= 2u;
    a1[3] = v7;
    int v4 = *(_DWORD *)(a2 + 28);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    int v8 = *(_DWORD *)(a2 + 16);
    a1[7] |= 4u;
    a1[4] = v8;
    if ((*(_DWORD *)(a2 + 28) & 8) == 0) {
      return;
    }
LABEL_8:
    int v5 = *(_DWORD *)(a2 + 20);
    a1[7] |= 8u;
    a1[5] = v5;
  }
}

void sub_100076C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100076C90(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A028;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100076CB0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A028;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100076D04()
{
}

uint64_t sub_100076D50(uint64_t result)
{
  if (*(unsigned char *)(result + 28))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_100076D64(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  int v7 = a1 + 4;
  int v8 = a1 + 5;
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 < v12 && (*v13 & 0x80000000) == 0)
        {
          unsigned int *v5 = *v13;
          uint64_t v14 = v13 + 1;
          *((void *)this + 1) = v14;
LABEL_24:
          a1[7] |= 1u;
          if ((unint64_t)v14 < v12 && *v14 == 16)
          {
            uint64_t v15 = v14 + 1;
            *((void *)this + 1) = v15;
            goto LABEL_27;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (result)
        {
          uint64_t v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_27:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v15;
          int v18 = v15 + 1;
          *((void *)this + 1) = v18;
        }
        a1[7] |= 2u;
        if ((unint64_t)v18 >= v12 || *v18 != 24) {
          continue;
        }
        int v16 = v18 + 1;
        *((void *)this + 1) = v16;
LABEL_35:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v16;
          int v19 = v16 + 1;
          *((void *)this + 1) = v19;
        }
        a1[7] |= 4u;
        if ((unint64_t)v19 >= v12 || *v19 != 32) {
          continue;
        }
        int v17 = v19 + 1;
        *((void *)this + 1) = v17;
LABEL_43:
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          uint64_t v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v17;
          uint64_t v20 = (unsigned __int8 *)(v17 + 1);
          *((void *)this + 1) = v20;
        }
        a1[7] |= 8u;
        if (v20 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_35;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_43;
      default:
        int v11 = TagFallback & 7;
LABEL_18:
        if (v11 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_100077024(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[7];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[7];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
      if ((v5[7] & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[7];
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = v5[5];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_1000770CC(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_25;
  }
  if (*(unsigned char *)(a1 + 28))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 28);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_21;
  }
  int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    int v9 = 2;
  }
  uint64_t v4 = (v9 + v4);
  if ((v3 & 8) != 0)
  {
LABEL_21:
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v10 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    }
    else {
      int v11 = 2;
    }
    uint64_t v4 = (v11 + v4);
  }
LABEL_25:
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

void sub_1000771B4(_DWORD *a1, void *lpsrc)
{
  sub_100076B84(a1, (uint64_t)lpsrc);
}

uint64_t sub_100077258()
{
  return 1;
}

void *sub_100077260@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GanssAddAssistDataChoices");
}

void sub_100077270(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 16) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 28);
      uint64_t v7 = *(int *)(a1 + 24);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 28);
        }
        *(_DWORD *)(a1 + 28) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 16);
      *(_DWORD *)(a1 + 24) = v7 + 1;
      sub_100074C48(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 24));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 72);
  if (!(_BYTE)v9) {
    return;
  }
  if (*(unsigned char *)(a2 + 72))
  {
    unsigned int v10 = *(_DWORD *)(a2 + 8);
    if (v10 >= 7) {
      __assert_rtn("set_ganss_id", "GnssEmergencyTypes.pb.h", 21956, "::proto::gnss::Emergency::LcsGanssId_IsValid(value)");
    }
    *(_DWORD *)(a1 + 72) |= 1u;
    *(_DWORD *)(a1 + 8) = v10;
    int v9 = *(_DWORD *)(a2 + 72);
  }
  if ((v9 & 2) != 0)
  {
    int v11 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 72) |= 2u;
    *(_DWORD *)(a1 + 12) = v11;
    int v9 = *(_DWORD *)(a2 + 72);
    if ((v9 & 4) == 0)
    {
LABEL_17:
      if ((v9 & 0x10) == 0) {
        goto LABEL_18;
      }
LABEL_23:
      *(_DWORD *)(a1 + 72) |= 0x10u;
      uint64_t v13 = *(void *)(a1 + 40);
      if (!v13) {
        operator new();
      }
      uint64_t v14 = *(void *)(a2 + 40);
      if (!v14) {
        uint64_t v14 = *(void *)(proto::gnss::Emergency::GanssAidRequestPerGanss::default_instance_ + 40);
      }
      sub_100075138(v13, v14);
      int v9 = *(_DWORD *)(a2 + 72);
      if ((v9 & 0x20) == 0)
      {
LABEL_19:
        if ((v9 & 0x40) == 0) {
          return;
        }
        goto LABEL_33;
      }
      goto LABEL_28;
    }
  }
  else if ((v9 & 4) == 0)
  {
    goto LABEL_17;
  }
  int v12 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 72) |= 4u;
  *(_DWORD *)(a1 + 64) = v12;
  int v9 = *(_DWORD *)(a2 + 72);
  if ((v9 & 0x10) != 0) {
    goto LABEL_23;
  }
LABEL_18:
  if ((v9 & 0x20) == 0) {
    goto LABEL_19;
  }
LABEL_28:
  *(_DWORD *)(a1 + 72) |= 0x20u;
  uint64_t v15 = *(_DWORD **)(a1 + 48);
  if (!v15) {
    operator new();
  }
  uint64_t v16 = *(void *)(a2 + 48);
  if (!v16) {
    uint64_t v16 = *(void *)(proto::gnss::Emergency::GanssAidRequestPerGanss::default_instance_ + 48);
  }
  sub_1000760E4(v15, v16);
  if ((*(_DWORD *)(a2 + 72) & 0x40) != 0)
  {
LABEL_33:
    *(_DWORD *)(a1 + 72) |= 0x40u;
    int v17 = *(_DWORD **)(a1 + 56);
    if (!v17) {
      operator new();
    }
    uint64_t v18 = *(void *)(a2 + 56);
    if (!v18) {
      uint64_t v18 = *(void *)(proto::gnss::Emergency::GanssAidRequestPerGanss::default_instance_ + 56);
    }
    sub_100076B84(v17, v18);
  }
}

void sub_1000775CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000775E4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010A0A0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::GanssAidRequestPerGanss::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 7);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  int v5 = *((_DWORD *)this + 7);
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i < v5; ++i)
    {
      uint64_t v7 = *(void *)(*((void *)this + 2) + 8 * i);
      if (v7)
      {
        (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        int v5 = *((_DWORD *)this + 7);
      }
    }
  }
  if (*((void *)this + 2)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100077738(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1000775E4(a1);

  operator delete();
}

void sub_100077770()
{
}

uint64_t sub_1000777D0(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 72);
  if ((_BYTE)v2)
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 64) = 0;
    if ((v2 & 0x10) != 0)
    {
      uint64_t v3 = *(void *)(result + 40);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 48))
        {
          *(_DWORD *)(v3 + 40) = 0;
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 32) = 0;
        *(_DWORD *)(v3 + 48) = 0;
        int v2 = *(_DWORD *)(result + 72);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      uint64_t v4 = *(void *)(result + 48);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 52))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        uint64_t result = sub_10003AD6C(v4 + 24);
        *(_DWORD *)(v4 + 52) = 0;
        int v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 56);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 28))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 28) = 0;
      }
    }
  }
  if (*(int *)(v1 + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(v1 + 16) + 8 * v6);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 32))(v7);
      ++v6;
    }
    while (v6 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 72) = 0;
  return result;
}

uint64_t sub_1000778C0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 12);
  uint64_t v6 = (unsigned int *)(a1 + 64);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 < *((void *)this + 2) && (*v8 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v59 = 0;
        int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59);
          if (!result) {
            return result;
          }
          unsigned int v12 = v59;
        }
        else
        {
          unsigned int v12 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v12 <= 6)
        {
          *(_DWORD *)(a1 + 72) |= 1u;
          *(_DWORD *)(a1 + 8) = v12;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v17 < v13 && *v17 == 16)
        {
          uint64_t v14 = v17 + 1;
          *((void *)this + 1) = v14;
          goto LABEL_34;
        }
        continue;
      case 2u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
LABEL_34:
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v14;
          uint64_t v18 = v14 + 1;
          *((void *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 72) |= 2u;
        if ((unint64_t)v18 >= v13 || *v18 != 24) {
          continue;
        }
        uint64_t v15 = v18 + 1;
        *((void *)this + 1) = v15;
LABEL_42:
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v15;
          int v19 = v15 + 1;
          *((void *)this + 1) = v19;
        }
        *(_DWORD *)(a1 + 72) |= 4u;
        if ((unint64_t)v19 >= v13 || *v19 != 34) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v19 + 1;
LABEL_50:
          int v20 = *(_DWORD *)(a1 + 28);
          uint64_t v21 = *(int *)(a1 + 24);
          if ((int)v21 >= v20)
          {
            if (v20 == *(_DWORD *)(a1 + 32))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v20 + 1);
              int v20 = *(_DWORD *)(a1 + 28);
            }
            *(_DWORD *)(a1 + 28) = v20 + 1;
            operator new();
          }
          uint64_t v22 = *(void *)(a1 + 16);
          *(_DWORD *)(a1 + 24) = v21 + 1;
          int v23 = *(unsigned int **)(v22 + 8 * v21);
          unsigned int v59 = 0;
          uint64_t v24 = (char *)*((void *)this + 1);
          if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0; {
          }
            }
          else
          {
            unsigned int v59 = *v24;
            *((void *)this + 1) = v24 + 1;
          }
          int v25 = *((_DWORD *)this + 14);
          int v26 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v25 + 1;
          if (v25 >= v26) {
            return 0;
          }
          int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
          if (!sub_100074DE0(v23, this, v28) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
          int v29 = *((_DWORD *)this + 14);
          BOOL v30 = __OFSUB__(v29, 1);
          int v31 = v29 - 1;
          if (v31 < 0 == v30) {
            *((_DWORD *)this + 14) = v31;
          }
          int v19 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v19 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v32 = *v19;
        }
        while (v32 == 34);
        if (v32 != 42) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_68:
        *(_DWORD *)(a1 + 72) |= 0x10u;
        uint64_t v33 = *(void *)(a1 + 40);
        if (!v33) {
          operator new();
        }
        unsigned int v59 = 0;
        int v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0; {
        }
          }
        else
        {
          unsigned int v59 = *v34;
          *((void *)this + 1) = v34 + 1;
        }
        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        if (!sub_1000753C4(v33, this, v38) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v39 = *((_DWORD *)this + 14);
        BOOL v30 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v30) {
          *((_DWORD *)this + 14) = v40;
        }
        int v41 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 != 50) {
          continue;
        }
        *((void *)this + 1) = v41 + 1;
LABEL_82:
        *(_DWORD *)(a1 + 72) |= 0x20u;
        int v42 = *(_DWORD **)(a1 + 48);
        if (!v42) {
          operator new();
        }
        unsigned int v59 = 0;
        unint64_t v43 = (char *)*((void *)this + 1);
        if ((unint64_t)v43 >= *((void *)this + 2) || *v43 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0; {
        }
          }
        else
        {
          unsigned int v59 = *v43;
          *((void *)this + 1) = v43 + 1;
        }
        int v44 = *((_DWORD *)this + 14);
        int v45 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v44 + 1;
        if (v44 >= v45) {
          return 0;
        }
        int v46 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        if (!sub_100076468(v42, this, v47) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v46);
        int v48 = *((_DWORD *)this + 14);
        BOOL v30 = __OFSUB__(v48, 1);
        int v49 = v48 - 1;
        if (v49 < 0 == v30) {
          *((_DWORD *)this + 14) = v49;
        }
        unsigned int v50 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v50 >= *((void *)this + 2) || *v50 != 58) {
          continue;
        }
        *((void *)this + 1) = v50 + 1;
LABEL_96:
        *(_DWORD *)(a1 + 72) |= 0x40u;
        unsigned int v51 = *(unsigned int **)(a1 + 56);
        if (!v51) {
          operator new();
        }
        unsigned int v59 = 0;
        unsigned int v52 = (char *)*((void *)this + 1);
        if ((unint64_t)v52 >= *((void *)this + 2) || *v52 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0; {
        }
          }
        else
        {
          unsigned int v59 = *v52;
          *((void *)this + 1) = v52 + 1;
        }
        int v53 = *((_DWORD *)this + 14);
        int v54 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v53 + 1;
        if (v53 >= v54) {
          return 0;
        }
        int v55 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        if (!sub_100076D64(v51, this, v56) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v55);
        int v57 = *((_DWORD *)this + 14);
        BOOL v30 = __OFSUB__(v57, 1);
        int v58 = v57 - 1;
        if (v58 < 0 == v30) {
          *((_DWORD *)this + 14) = v58;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_42;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_50;
        }
        goto LABEL_24;
      case 5u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_68;
        }
        goto LABEL_24;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_82;
        }
        goto LABEL_24;
      case 7u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_24;
        }
        goto LABEL_96;
      default:
        int v10 = TagFallback & 7;
LABEL_24:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100077FFC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 72);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 4) != 0) {
LABEL_4:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 64), a2, a4);
LABEL_5:
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  int v8 = *(_DWORD *)(v5 + 72);
  if ((v8 & 0x10) != 0)
  {
    uint64_t v9 = *(void *)(v5 + 40);
    if (!v9) {
      uint64_t v9 = *(void *)(proto::gnss::Emergency::GanssAidRequestPerGanss::default_instance_ + 40);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
    int v8 = *(_DWORD *)(v5 + 72);
    if ((v8 & 0x20) == 0)
    {
LABEL_10:
      if ((v8 & 0x40) == 0) {
        return result;
      }
      goto LABEL_21;
    }
  }
  else if ((v8 & 0x20) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)(v5 + 48);
  if (!v10) {
    uint64_t v10 = *(void *)(proto::gnss::Emergency::GanssAidRequestPerGanss::default_instance_ + 48);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v10, a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x40) != 0)
  {
LABEL_21:
    uint64_t v11 = *(void *)(v5 + 56);
    if (!v11) {
      uint64_t v11 = *(void *)(proto::gnss::Emergency::GanssAidRequestPerGanss::default_instance_ + 56);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v11, a2, a4);
  }
  return result;
}

uint64_t sub_10007814C(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 72);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_44;
  }
  if (*(unsigned char *)(a1 + 72))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v5 & 0x80000000) != 0)
    {
      int v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      int v3 = *(_DWORD *)(a1 + 72);
      int v4 = v6 + 1;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 72) & 2) == 0) {
      goto LABEL_17;
    }
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    int v8 = 2;
  }
  v4 += v8;
LABEL_17:
  if ((v3 & 4) != 0)
  {
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      int v10 = 2;
    }
    v4 += v10;
    if ((v3 & 0x10) == 0)
    {
LABEL_19:
      if ((v3 & 0x20) == 0) {
        goto LABEL_20;
      }
      goto LABEL_32;
    }
  }
  else if ((v3 & 0x10) == 0)
  {
    goto LABEL_19;
  }
  uint64_t v11 = *(void *)(a1 + 40);
  if (!v11) {
    uint64_t v11 = *(void *)(proto::gnss::Emergency::GanssAidRequestPerGanss::default_instance_ + 40);
  }
  unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000759CC(v11, a2);
  int v13 = (int)v12;
  if (v12 >= 0x80) {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
  }
  else {
    int v14 = 1;
  }
  v4 += v13 + v14 + 1;
  int v3 = *(_DWORD *)(a1 + 72);
  if ((v3 & 0x20) == 0)
  {
LABEL_20:
    if ((v3 & 0x40) == 0) {
      goto LABEL_44;
    }
    goto LABEL_38;
  }
LABEL_32:
  uint64_t v15 = *(void *)(a1 + 48);
  if (!v15) {
    uint64_t v15 = *(void *)(proto::gnss::Emergency::GanssAidRequestPerGanss::default_instance_ + 48);
  }
  uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100076984(v15, a2);
  int v17 = (int)v16;
  if (v16 >= 0x80) {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
  }
  else {
    int v18 = 1;
  }
  v4 += v17 + v18 + 1;
  if ((*(_DWORD *)(a1 + 72) & 0x40) != 0)
  {
LABEL_38:
    uint64_t v19 = *(void *)(a1 + 56);
    if (!v19) {
      uint64_t v19 = *(void *)(proto::gnss::Emergency::GanssAidRequestPerGanss::default_instance_ + 56);
    }
    int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000770CC(v19, a2);
    int v21 = (int)v20;
    if (v20 >= 0x80) {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
    }
    else {
      int v22 = 1;
    }
    v4 += v21 + v22 + 1;
  }
LABEL_44:
  int v23 = *(_DWORD *)(a1 + 24);
  uint64_t v24 = (v23 + v4);
  if (v23 >= 1)
  {
    uint64_t v25 = 0;
    do
    {
      int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100074FEC(*(void *)(*(void *)(a1 + 16) + 8 * v25), a2);
      int v27 = (int)v26;
      if (v26 >= 0x80) {
        int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
      }
      else {
        int v28 = 1;
      }
      uint64_t v24 = (v27 + v24 + v28);
      ++v25;
    }
    while (v25 < *(int *)(a1 + 24));
  }
  *(_DWORD *)(a1 + 68) = v24;
  return v24;
}

void sub_100078358(uint64_t a1, void *lpsrc)
{
  sub_100077270(a1, (uint64_t)lpsrc);
}

uint64_t sub_1000783FC()
{
  return 1;
}

void *sub_100078404@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GanssAidRequestPerGanss");
}

void sub_100078414(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    sub_10002D764(a1 + 16, *(_DWORD *)(a1 + 24) + v4);
    memcpy((void *)(*(void *)(a1 + 16) + 4 * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), *(_DWORD *)(a2 + 48) + *(_DWORD *)(a1 + 48));
  if (*(int *)(a2 + 48) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 40) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 52);
      uint64_t v8 = *(int *)(a1 + 48);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 56))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), v7 + 1);
          int v7 = *(_DWORD *)(a1 + 52);
        }
        *(_DWORD *)(a1 + 52) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *(void *)(a1 + 40);
      *(_DWORD *)(a1 + 48) = v8 + 1;
      sub_100077270(*(void *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 48));
  }
  LOBYTE(v10) = *(unsigned char *)(a2 + 72);
  if ((_BYTE)v10)
  {
    if (*(unsigned char *)(a2 + 72))
    {
      int v12 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 72) |= 1u;
      *(_DWORD *)(a1 + 8) = v12;
      int v10 = *(_DWORD *)(a2 + 72);
      if ((v10 & 2) == 0)
      {
LABEL_16:
        if ((v10 & 8) == 0) {
          goto LABEL_17;
        }
        goto LABEL_23;
      }
    }
    else if ((*(unsigned char *)(a2 + 72) & 2) == 0)
    {
      goto LABEL_16;
    }
    int v13 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 72) |= 2u;
    *(_DWORD *)(a1 + 12) = v13;
    int v10 = *(_DWORD *)(a2 + 72);
    if ((v10 & 8) == 0)
    {
LABEL_17:
      if ((v10 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_24;
    }
LABEL_23:
    int v14 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 72) |= 8u;
    *(_DWORD *)(a1 + 32) = v14;
    int v10 = *(_DWORD *)(a2 + 72);
    if ((v10 & 0x10) == 0)
    {
LABEL_18:
      if ((v10 & 0x20) == 0) {
        return;
      }
      goto LABEL_19;
    }
LABEL_24:
    int v15 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 72) |= 0x10u;
    *(_DWORD *)(a1 + 36) = v15;
    if ((*(_DWORD *)(a2 + 72) & 0x20) == 0) {
      return;
    }
LABEL_19:
    int v11 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) |= 0x20u;
    *(_DWORD *)(a1 + 64) = v11;
  }
}

void sub_10007866C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100078684(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010A118;
  int v2 = *((_DWORD *)this + 13);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*((void *)this + 5) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)this + 13);
      }
    }
  }
  if (*((void *)this + 5)) {
    operator delete[]();
  }
  if (*((void *)this + 2)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100078760(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100078684(a1);

  operator delete();
}

void sub_100078798()
{
}

uint64_t proto::gnss::Emergency::GanssAssistanceRequest::Clear(proto::gnss::Emergency::GanssAssistanceRequest *this)
{
  if (*((unsigned char *)this + 72))
  {
    *((void *)this + 1) = 0;
    *((void *)this + 4) = 0;
    *((_DWORD *)this + 16) = 0;
  }
  *((_DWORD *)this + 6) = 0;
  uint64_t result = sub_10003AD6C((uint64_t)this + 40);
  *((_DWORD *)this + 18) = 0;
  return result;
}

uint64_t sub_100078844(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = a1 + 16;
  int v44 = (unsigned int *)(a1 + 8);
  uint64_t v6 = (unsigned int *)(a1 + 12);
  int v7 = (unsigned int *)(a1 + 32);
  uint64_t v8 = (unsigned int *)(a1 + 36);
  uint64_t v9 = (unsigned int *)(a1 + 64);
  int v10 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40);
LABEL_2:
  while (2)
  {
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v44);
          if (!result) {
            return result;
          }
          uint64_t v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v44 = *v15;
          uint64_t v16 = v15 + 1;
          *((void *)this + 1) = v16;
        }
        *(_DWORD *)(a1 + 72) |= 1u;
        if ((unint64_t)v16 < v14 && *v16 == 16)
        {
          int v17 = v16 + 1;
          *((void *)this + 1) = v17;
          goto LABEL_35;
        }
        continue;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v17 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_35:
        if ((unint64_t)v17 >= v14 || (char)*v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v23 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v17;
          int v23 = v17 + 1;
          *((void *)this + 1) = v23;
        }
        *(_DWORD *)(a1 + 72) |= 2u;
        if ((unint64_t)v23 < v14)
        {
          int v24 = *v23;
          goto LABEL_53;
        }
        continue;
      case 3u:
        int v13 = TagFallback & 7;
        if (v13 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline();
          if (!result) {
            return result;
          }
          while (1)
          {
            int v23 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v14 = *((void *)this + 2);
            if ((unint64_t)v23 >= v14) {
              goto LABEL_2;
            }
            int v24 = *v23;
            if (v24 == 32) {
              break;
            }
LABEL_53:
            if (v24 != 24) {
              goto LABEL_2;
            }
            int v18 = (char *)(v23 + 1);
            *((void *)this + 1) = v18;
LABEL_42:
            unsigned int v45 = 0;
            if ((unint64_t)v18 >= v14 || *v18 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45);
              if (!result) {
                return result;
              }
              unsigned int v25 = v45;
            }
            else
            {
              unsigned int v25 = *v18;
              *((void *)this + 1) = v18 + 1;
            }
            if (v25 <= 6)
            {
              int v26 = *(_DWORD *)(a1 + 24);
              if (v26 == *(_DWORD *)(a1 + 28))
              {
                sub_10002D764(v5, v26 + 1);
                int v26 = *(_DWORD *)(a1 + 24);
              }
              uint64_t v27 = *(void *)(a1 + 16);
              *(_DWORD *)(a1 + 24) = v26 + 1;
              *(_DWORD *)(v27 + 4 * v26) = v25;
            }
          }
          uint64_t v19 = (char *)(v23 + 1);
          *((void *)this + 1) = v19;
LABEL_56:
          if ((unint64_t)v19 >= v14 || *v19 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
            if (!result) {
              return result;
            }
            int v28 = (unsigned char *)*((void *)this + 1);
            unint64_t v14 = *((void *)this + 2);
          }
          else
          {
            unsigned int *v7 = *v19;
            int v28 = v19 + 1;
            *((void *)this + 1) = v28;
          }
          *(_DWORD *)(a1 + 72) |= 8u;
          if ((unint64_t)v28 < v14 && *v28 == 40)
          {
            int v20 = v28 + 1;
            *((void *)this + 1) = v20;
LABEL_64:
            if ((unint64_t)v20 >= v14 || *v20 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
              if (!result) {
                return result;
              }
              int v29 = (unsigned char *)*((void *)this + 1);
              unint64_t v14 = *((void *)this + 2);
            }
            else
            {
              *uint64_t v8 = *v20;
              int v29 = v20 + 1;
              *((void *)this + 1) = v29;
            }
            *(_DWORD *)(a1 + 72) |= 0x10u;
            if ((unint64_t)v29 < v14 && *v29 == 48)
            {
              int v21 = v29 + 1;
              *((void *)this + 1) = v21;
LABEL_72:
              if ((unint64_t)v21 >= v14 || *v21 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
                if (!result) {
                  return result;
                }
                BOOL v30 = (unsigned char *)*((void *)this + 1);
                unint64_t v14 = *((void *)this + 2);
              }
              else
              {
                unsigned int *v9 = *v21;
                BOOL v30 = v21 + 1;
                *((void *)this + 1) = v30;
              }
              *(_DWORD *)(a1 + 72) |= 0x20u;
              if ((unint64_t)v30 < v14 && *v30 == 58)
              {
                do
                {
                  *((void *)this + 1) = v30 + 1;
LABEL_80:
                  int v31 = *(_DWORD *)(a1 + 52);
                  uint64_t v32 = *(int *)(a1 + 48);
                  if ((int)v32 >= v31)
                  {
                    if (v31 == *(_DWORD *)(a1 + 56))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v10, v31 + 1);
                      int v31 = *(_DWORD *)(a1 + 52);
                    }
                    *(_DWORD *)(a1 + 52) = v31 + 1;
                    operator new();
                  }
                  uint64_t v33 = *(void *)(a1 + 40);
                  *(_DWORD *)(a1 + 48) = v32 + 1;
                  uint64_t v34 = *(void *)(v33 + 8 * v32);
                  unsigned int v46 = 0;
                  int v35 = (char *)*((void *)this + 1);
                  if ((unint64_t)v35 >= *((void *)this + 2) || *v35 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46))return 0; {
                  }
                    }
                  else
                  {
                    unsigned int v46 = *v35;
                    *((void *)this + 1) = v35 + 1;
                  }
                  int v36 = *((_DWORD *)this + 14);
                  int v37 = *((_DWORD *)this + 15);
                  *((_DWORD *)this + 14) = v36 + 1;
                  if (v36 >= v37) {
                    return 0;
                  }
                  int v38 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v46);
                  if (!sub_1000778C0(v34, this, v39) || !*((unsigned char *)this + 36)) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v38);
                  int v40 = *((_DWORD *)this + 14);
                  BOOL v41 = __OFSUB__(v40, 1);
                  int v42 = v40 - 1;
                  if (v42 < 0 == v41) {
                    *((_DWORD *)this + 14) = v42;
                  }
                  BOOL v30 = (unsigned char *)*((void *)this + 1);
                  unint64_t v43 = (unsigned char *)*((void *)this + 2);
                }
                while (v30 < v43 && *v30 == 58);
                if (v30 == v43 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                {
                  *((_DWORD *)this + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)this + 36) = 1;
                  return result;
                }
              }
            }
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          int v18 = (char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          goto LABEL_42;
        }
LABEL_25:
        if (v13 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_56;
      case 5u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_64;
      case 6u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_72;
      case 7u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_25;
        }
        goto LABEL_80;
      default:
        int v13 = TagFallback & 7;
        goto LABEL_25;
    }
  }
}

uint64_t sub_100078DFC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 72);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 72);
  }
  if ((v6 & 2) != 0) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(*(void *)(v5 + 16) + 4 * v7++), (int)a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  int v8 = *(_DWORD *)(v5 + 72);
  if ((v8 & 8) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 32), a2, a4);
    int v8 = *(_DWORD *)(v5 + 72);
    if ((v8 & 0x10) == 0)
    {
LABEL_10:
      if ((v8 & 0x20) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else if ((v8 & 0x10) == 0)
  {
    goto LABEL_10;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 36), a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x20) != 0) {
LABEL_11:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 64), a2, a4);
LABEL_12:
  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v9 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(*(void *)(v5 + 40) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 48));
  }
  return result;
}

uint64_t sub_100078F14(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 72);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_30;
  }
  if (*(unsigned char *)(a1 + 72))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 72);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 72) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    int v7 = 2;
  }
  v4 += v7;
LABEL_14:
  if ((v3 & 8) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      int v9 = 2;
    }
    v4 += v9;
    if ((v3 & 0x10) == 0)
    {
LABEL_16:
      if ((v3 & 0x20) == 0) {
        goto LABEL_30;
      }
      goto LABEL_26;
    }
  }
  else if ((v3 & 0x10) == 0)
  {
    goto LABEL_16;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    int v11 = 2;
  }
  v4 += v11;
  if ((v3 & 0x20) != 0)
  {
LABEL_26:
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if (v12 >= 0x80) {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    }
    else {
      int v13 = 2;
    }
    v4 += v13;
  }
LABEL_30:
  int v14 = *(_DWORD *)(a1 + 24);
  if (v14 < 1)
  {
    int v16 = 0;
  }
  else
  {
    uint64_t v15 = 0;
    int v16 = 0;
    do
    {
      int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 16)
                                                                                             + 4 * v15);
      if ((v17 & 0x80000000) != 0)
      {
        int v18 = 10;
      }
      else if (v17 >= 0x80)
      {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
        int v14 = *(_DWORD *)(a1 + 24);
      }
      else
      {
        int v18 = 1;
      }
      v16 += v18;
      ++v15;
    }
    while (v15 < v14);
  }
  int v19 = *(_DWORD *)(a1 + 48);
  uint64_t v20 = (v16 + v19 + v4 + v14);
  if (v19 >= 1)
  {
    uint64_t v21 = 0;
    do
    {
      int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007814C(*(void *)(*(void *)(a1 + 40) + 8 * v21), a2);
      int v23 = (int)v22;
      if (v22 >= 0x80) {
        int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
      }
      else {
        int v24 = 1;
      }
      uint64_t v20 = (v23 + v20 + v24);
      ++v21;
    }
    while (v21 < *(int *)(a1 + 48));
  }
  *(_DWORD *)(a1 + 68) = v20;
  return v20;
}

void sub_1000790E4(uint64_t a1, void *lpsrc)
{
  sub_100078414(a1, (uint64_t)lpsrc);
}

uint64_t sub_100079188()
{
  return 1;
}

void *sub_100079190@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GanssAssistanceRequest");
}

void proto::gnss::Emergency::AssistanceNeededReport::MergeFrom(proto::gnss::Emergency::AssistanceNeededReport *this, const proto::gnss::Emergency::AssistanceNeededReport *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 44);
  if (!(_BYTE)v4) {
    return;
  }
  if (*((unsigned char *)a2 + 44))
  {
    unsigned int v5 = *((_DWORD *)a2 + 2);
    if (v5 >= 9) {
      __assert_rtn("set_result", "GnssEmergencyTypes.pb.h", 22344, "::proto::gnss::Emergency::ErrorCodes_IsValid(value)");
    }
    *((_DWORD *)this + 11) |= 1u;
    *((_DWORD *)this + 2) = v5;
    int v4 = *((_DWORD *)a2 + 11);
  }
  if ((v4 & 2) == 0)
  {
    if ((v4 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_13:
    *((_DWORD *)this + 11) |= 4u;
    int v7 = (_DWORD *)*((void *)this + 2);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *((void *)a2 + 2);
    if (!v8) {
      uint64_t v8 = *(void *)(proto::gnss::Emergency::AssistanceNeededReport::default_instance_ + 16);
    }
    sub_10005BD30(v7, v8);
    int v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 8) == 0)
    {
LABEL_10:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_23;
    }
    goto LABEL_18;
  }
  int v6 = *((_DWORD *)a2 + 3);
  *((_DWORD *)this + 11) |= 2u;
  *((_DWORD *)this + 3) = v6;
  int v4 = *((_DWORD *)a2 + 11);
  if ((v4 & 4) != 0) {
    goto LABEL_13;
  }
LABEL_9:
  if ((v4 & 8) == 0) {
    goto LABEL_10;
  }
LABEL_18:
  *((_DWORD *)this + 11) |= 8u;
  uint64_t v9 = *((void *)this + 3);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = *((void *)a2 + 3);
  if (!v10) {
    uint64_t v10 = *(void *)(proto::gnss::Emergency::AssistanceNeededReport::default_instance_ + 24);
  }
  sub_100073EE8(v9, v10);
  if ((*((_DWORD *)a2 + 11) & 0x10) != 0)
  {
LABEL_23:
    *((_DWORD *)this + 11) |= 0x10u;
    uint64_t v11 = *((void *)this + 4);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *((void *)a2 + 4);
    if (!v12) {
      uint64_t v12 = *(void *)(proto::gnss::Emergency::AssistanceNeededReport::default_instance_ + 32);
    }
    sub_100078414(v11, v12);
  }
}

void sub_100079400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100079418(void *result)
{
  if ((void *)proto::gnss::Emergency::AssistanceNeededReport::default_instance_ != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[4];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_1000794E4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A190;
  sub_100079418(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100079538(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A190;
  sub_100079418(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1000795A0()
{
}

uint64_t proto::gnss::Emergency::AssistanceNeededReport::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 44);
  if ((_BYTE)v2)
  {
    *(void *)(this + 8) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 24))
        {
          *(void *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        int v2 = *(_DWORD *)(this + 44);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v4 = *(void *)(this + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 64))
        {
          *(_DWORD *)(v4 + 56) = 0;
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 32) = 0;
        *(_DWORD *)(v4 + 48) = 0;
        *(_DWORD *)(v4 + 64) = 0;
        int v2 = *(_DWORD *)(this + 44);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(this + 32);
      if (this) {
        this = proto::gnss::Emergency::GanssAssistanceRequest::Clear((proto::gnss::Emergency::GanssAssistanceRequest *)this);
      }
    }
  }
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

uint64_t proto::gnss::Emergency::AssistanceNeededReport::MergePartialFromCodedStream(proto::gnss::Emergency::AssistanceNeededReport *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int v5 = (unsigned int *)((char *)this + 12);
  while (1)
  {
    int v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 < *((void *)a2 + 2) && (*v6 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v44 = 0;
        uint64_t v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44);
          if (!result) {
            return result;
          }
          unsigned int v10 = v44;
        }
        else
        {
          unsigned int v10 = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        if (v10 <= 8)
        {
          *((_DWORD *)this + 11) |= 1u;
          *((_DWORD *)this + 2) = v10;
        }
        uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v15 < v11 && *v15 == 16)
        {
          uint64_t v12 = v15 + 1;
          *((void *)a2 + 1) = v12;
          goto LABEL_30;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
LABEL_30:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v16 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v5 = *v12;
          int v16 = v12 + 1;
          *((void *)a2 + 1) = v16;
        }
        int v13 = *((_DWORD *)this + 11) | 2;
        *((_DWORD *)this + 11) = v13;
        if ((unint64_t)v16 >= v11 || *v16 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_38:
        *((_DWORD *)this + 11) = v13 | 4;
        int v17 = (_DWORD *)*((void *)this + 2);
        if (!v17) {
          operator new();
        }
        unsigned int v44 = 0;
        int v18 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44))return 0; {
        }
          }
        else
        {
          unsigned int v44 = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        int v19 = *((_DWORD *)a2 + 14);
        int v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v44);
        if (!sub_10005BF3C(v17, a2, v22) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v21);
        int v23 = *((_DWORD *)a2 + 14);
        BOOL v24 = __OFSUB__(v23, 1);
        int v25 = v23 - 1;
        if (v25 < 0 == v24) {
          *((_DWORD *)a2 + 14) = v25;
        }
        int v26 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_52:
        *((_DWORD *)this + 11) |= 8u;
        uint64_t v27 = *((void *)this + 3);
        if (!v27) {
          operator new();
        }
        unsigned int v44 = 0;
        int v28 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44))return 0; {
        }
          }
        else
        {
          unsigned int v44 = *v28;
          *((void *)a2 + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)a2 + 14);
        int v30 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0;
        }
        int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v44);
        if (!sub_1000741DC(v27, a2, v32) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v31);
        int v33 = *((_DWORD *)a2 + 14);
        BOOL v24 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v24) {
          *((_DWORD *)a2 + 14) = v34;
        }
        int v35 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v35 + 1;
LABEL_66:
        *((_DWORD *)this + 11) |= 0x10u;
        uint64_t v36 = *((void *)this + 4);
        if (!v36) {
          operator new();
        }
        unsigned int v44 = 0;
        int v37 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v37 >= *((void *)a2 + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44))return 0; {
        }
          }
        else
        {
          unsigned int v44 = *v37;
          *((void *)a2 + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)a2 + 14);
        int v39 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v44);
        if (!sub_100078844(v36, a2, v41) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v40);
        int v42 = *((_DWORD *)a2 + 14);
        BOOL v24 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v24) {
          *((_DWORD *)a2 + 14) = v43;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_20;
        }
        int v13 = *((_DWORD *)this + 11);
        goto LABEL_38;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_52;
        }
        goto LABEL_20;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_20;
        }
        goto LABEL_66;
      default:
        int v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100079BE8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_9:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::AssistanceNeededReport::default_instance_ + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(proto::gnss::Emergency::AssistanceNeededReport::default_instance_ + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 0x10) != 0)
  {
LABEL_15:
    uint64_t v9 = *(void *)(v5 + 32);
    if (!v9) {
      uint64_t v9 = *(void *)(proto::gnss::Emergency::AssistanceNeededReport::default_instance_ + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  }
  return result;
}

uint64_t proto::gnss::Emergency::AssistanceNeededReport::ByteSize(proto::gnss::Emergency::AssistanceNeededReport *this, unsigned int a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 44);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_39;
  }
  if (*((unsigned char *)this + 44))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *((_DWORD *)this + 11);
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*((unsigned char *)this + 44) & 2) == 0) {
      goto LABEL_17;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *((_DWORD *)this + 11);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_17:
  if ((v3 & 4) != 0)
  {
    uint64_t v8 = *((void *)this + 2);
    if (!v8) {
      uint64_t v8 = *(void *)(proto::gnss::Emergency::AssistanceNeededReport::default_instance_ + 16);
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005C204(v8, a2);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    }
    else {
      int v11 = 1;
    }
    uint64_t v4 = (v4 + v10 + v11 + 1);
    int v3 = *((_DWORD *)this + 11);
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0) {
        goto LABEL_39;
      }
      goto LABEL_33;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  uint64_t v12 = *((void *)this + 3);
  if (!v12) {
    uint64_t v12 = *(void *)(proto::gnss::Emergency::AssistanceNeededReport::default_instance_ + 24);
  }
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000749C4(v12, a2);
  int v14 = (int)v13;
  if (v13 >= 0x80) {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
  }
  else {
    int v15 = 1;
  }
  uint64_t v4 = (v4 + v14 + v15 + 1);
  if ((*((_DWORD *)this + 11) & 0x10) != 0)
  {
LABEL_33:
    uint64_t v16 = *((void *)this + 4);
    if (!v16) {
      uint64_t v16 = *(void *)(proto::gnss::Emergency::AssistanceNeededReport::default_instance_ + 32);
    }
    int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100078F14(v16, a2);
    int v19 = (int)v17;
    if (v17 >= 0x80) {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, v18);
    }
    else {
      int v20 = 1;
    }
    uint64_t v4 = (v4 + v19 + v20 + 1);
  }
LABEL_39:
  *((_DWORD *)this + 10) = v4;
  return v4;
}

void sub_100079E68(proto::gnss::Emergency::AssistanceNeededReport *a1, void *lpsrc)
{
  proto::gnss::Emergency::AssistanceNeededReport::MergeFrom(a1, (const proto::gnss::Emergency::AssistanceNeededReport *)lpsrc);
}

uint64_t sub_100079F0C()
{
  return 1;
}

void *sub_100079F14@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.AssistanceNeededReport");
}

void sub_100079F24(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010A208;
  int v2 = *((_DWORD *)this + 5);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*((void *)this + 1) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)this + 5);
      }
    }
  }
  if (*((void *)this + 1)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100079FE4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100079F24(a1);

  operator delete();
}

void sub_10007A01C()
{
}

uint64_t sub_10007A074(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 40)) {
    *(_DWORD *)(result + 32) = 0;
  }
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 8) + 8 * v2);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t sub_10007A0F4(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = a1 + 8;
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_16;
        }
        int v10 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v10 >= v11 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v10;
          uint64_t v12 = v10 + 1;
          *((void *)this + 1) = v12;
        }
        a1[10] |= 1u;
        if ((unint64_t)v12 < v11 && *v12 == 18) {
          goto LABEL_23;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_16;
      }
      while (1)
      {
        int v14 = a1[5];
        uint64_t v15 = (int)a1[4];
        if ((int)v15 >= v14)
        {
          if (v14 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v14 + 1);
            int v14 = a1[5];
          }
          a1[5] = v14 + 1;
          operator new();
        }
        uint64_t v16 = *((void *)a1 + 1);
        a1[4] = v15 + 1;
        uint64_t v17 = *(void *)(v16 + 8 * v15);
        unsigned int v27 = 0;
        unsigned int v18 = (char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0; {
        }
          }
        else
        {
          unsigned int v27 = *v18;
          *((void *)this + 1) = v18 + 1;
        }
        int v19 = *((_DWORD *)this + 14);
        int v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
        if (!sub_1000628C8(v17, this, v22) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        int v23 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v23, 1);
        int v25 = v23 - 1;
        if (v25 < 0 == v24) {
          *((_DWORD *)this + 14) = v25;
        }
        uint64_t v12 = (unsigned char *)*((void *)this + 1);
        int v26 = (unsigned char *)*((void *)this + 2);
        if (v12 >= v26 || *v12 != 18) {
          break;
        }
LABEL_23:
        *((void *)this + 1) = v12 + 1;
      }
      if (v12 == v26 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v9 = TagFallback & 7;
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10007A3B4(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 40)) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 32), a2, a4);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_10007A42C(uint64_t a1, unsigned int a2)
{
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v4 >= 0x80) {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    }
    else {
      int v3 = 2;
    }
  }
  else
  {
    int v3 = 0;
  }
  int v5 = *(_DWORD *)(a1 + 16);
  uint64_t v6 = (v5 + v3);
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100063164(*(void *)(*(void *)(a1 + 8) + 8 * v7), a2);
      int v9 = (int)v8;
      if (v8 >= 0x80) {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      }
      else {
        int v10 = 1;
      }
      uint64_t v6 = (v9 + v6 + v10);
      ++v7;
    }
    while (v7 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 36) = v6;
  return v6;
}

void sub_10007A4DC(int *a1, int *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), lpsrc[4] + a1[4]);
  if (lpsrc[4] >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*((void *)lpsrc + 1) + 8 * v4);
      int v6 = a1[5];
      uint64_t v7 = a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), v6 + 1);
          int v6 = a1[5];
        }
        a1[5] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 1);
      a1[4] = v7 + 1;
      sub_100062500(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < lpsrc[4]);
  }
  if (lpsrc[10])
  {
    int v9 = lpsrc[8];
    a1[10] |= 1u;
    a1[8] = v9;
  }
}

void sub_10007A6CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007A6E4()
{
  return 1;
}

void *sub_10007A6EC@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.EutranCellTime");
}

void sub_10007A6FC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A280;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10007A71C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A280;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10007A770()
{
}

uint64_t sub_10007A7C8(uint64_t result)
{
  if (*(unsigned char *)(result + 40))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_10007A7E4(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = a1 + 2;
  int v6 = a1 + 3;
  uint64_t v7 = a1 + 4;
  uint64_t v8 = a1 + 5;
  int v9 = a1 + 6;
  int v10 = a1 + 7;
  unint64_t v11 = a1 + 8;
  while (2)
  {
    uint64_t v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v12;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          unsigned int *v5 = *v16;
          uint64_t v17 = v16 + 1;
          *((void *)this + 1) = v17;
LABEL_30:
          a1[10] |= 1u;
          if ((unint64_t)v17 < v15 && *v17 == 16)
          {
            unsigned int v18 = v17 + 1;
            *((void *)this + 1) = v18;
            goto LABEL_33;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (result)
        {
          uint64_t v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          goto LABEL_30;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v18 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
LABEL_33:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          BOOL v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v18;
          BOOL v24 = v18 + 1;
          *((void *)this + 1) = v24;
        }
        a1[10] |= 2u;
        if ((unint64_t)v24 >= v15 || *v24 != 24) {
          continue;
        }
        int v19 = v24 + 1;
        *((void *)this + 1) = v19;
LABEL_41:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v25 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v19;
          int v25 = v19 + 1;
          *((void *)this + 1) = v25;
        }
        a1[10] |= 4u;
        if ((unint64_t)v25 >= v15 || *v25 != 32) {
          continue;
        }
        int v20 = v25 + 1;
        *((void *)this + 1) = v20;
LABEL_49:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v8 = *v20;
          int v26 = v20 + 1;
          *((void *)this + 1) = v26;
        }
        a1[10] |= 8u;
        if ((unint64_t)v26 >= v15 || *v26 != 40) {
          continue;
        }
        int v21 = v26 + 1;
        *((void *)this + 1) = v21;
LABEL_57:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          unsigned int v27 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v9 = *v21;
          unsigned int v27 = v21 + 1;
          *((void *)this + 1) = v27;
        }
        a1[10] |= 0x10u;
        if ((unint64_t)v27 >= v15 || *v27 != 48) {
          continue;
        }
        unsigned int v22 = v27 + 1;
        *((void *)this + 1) = v22;
LABEL_65:
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v22;
          int v28 = v22 + 1;
          *((void *)this + 1) = v28;
        }
        a1[10] |= 0x20u;
        if ((unint64_t)v28 >= v15 || *v28 != 56) {
          continue;
        }
        int v23 = v28 + 1;
        *((void *)this + 1) = v23;
LABEL_73:
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          int v29 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *unint64_t v11 = *v23;
          int v29 = (unsigned __int8 *)(v23 + 1);
          *((void *)this + 1) = v29;
        }
        a1[10] |= 0x40u;
        if (v29 != (unsigned __int8 *)v15 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_41;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_49;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_57;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v22 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_65;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v23 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_73;
      default:
        int v14 = TagFallback & 7;
LABEL_24:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_10007AC1C(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = result[10];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[10];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[10];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[10];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[10];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
    if ((v5[10] & 0x40) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  int v6 = v5[10];
  if ((v6 & 0x20) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return result;
  }
LABEL_15:
  int v7 = v5[8];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v7, a2, a4);
}

uint64_t sub_10007AD18(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_40;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_28;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v4 = (v11 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_17:
    if ((v3 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_32;
  }
LABEL_28:
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v4 = (v13 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_18:
    if ((v3 & 0x40) == 0) {
      goto LABEL_40;
    }
    goto LABEL_36;
  }
LABEL_32:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v15 = 2;
  }
  uint64_t v4 = (v15 + v4);
  if ((v3 & 0x40) != 0)
  {
LABEL_36:
    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v16 >= 0x80) {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2) + 1;
    }
    else {
      int v17 = 2;
    }
    uint64_t v4 = (v17 + v4);
  }
LABEL_40:
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

void sub_10007AE84(_DWORD *a1, _DWORD *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *((unsigned char *)lpsrc + 40);
  if (!(_BYTE)v4) {
    return;
  }
  if (lpsrc[10])
  {
    int v6 = lpsrc[2];
    a1[10] |= 1u;
    a1[2] = v6;
    int v4 = lpsrc[10];
    if ((v4 & 2) == 0)
    {
LABEL_7:
      if ((v4 & 4) == 0) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }
  }
  else if ((lpsrc[10] & 2) == 0)
  {
    goto LABEL_7;
  }
  int v7 = lpsrc[3];
  a1[10] |= 2u;
  a1[3] = v7;
  int v4 = lpsrc[10];
  if ((v4 & 4) == 0)
  {
LABEL_8:
    if ((v4 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  int v8 = lpsrc[4];
  a1[10] |= 4u;
  a1[4] = v8;
  int v4 = lpsrc[10];
  if ((v4 & 8) == 0)
  {
LABEL_9:
    if ((v4 & 0x10) == 0) {
      goto LABEL_10;
    }
LABEL_18:
    int v10 = lpsrc[6];
    a1[10] |= 0x10u;
    a1[6] = v10;
    int v4 = lpsrc[10];
    if ((v4 & 0x20) == 0)
    {
LABEL_11:
      if ((v4 & 0x40) == 0) {
        return;
      }
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_17:
  int v9 = lpsrc[5];
  a1[10] |= 8u;
  a1[5] = v9;
  int v4 = lpsrc[10];
  if ((v4 & 0x10) != 0) {
    goto LABEL_18;
  }
LABEL_10:
  if ((v4 & 0x20) == 0) {
    goto LABEL_11;
  }
LABEL_19:
  int v11 = lpsrc[7];
  a1[10] |= 0x20u;
  a1[7] = v11;
  if ((lpsrc[10] & 0x40) != 0)
  {
LABEL_12:
    int v5 = lpsrc[8];
    a1[10] |= 0x40u;
    a1[8] = v5;
  }
}

void sub_10007B040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10007B058()
{
  return 1;
}

void *sub_10007B060@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.ClsGeranCellTime");
}

void sub_10007B070(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_10007B11C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10007B134(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A2F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10007B154(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A2F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10007B1A8()
{
}

uint64_t sub_10007B1F4(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_10007B208(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      uint64_t v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        int v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        unsigned int *v5 = *v12;
        int v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          int v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10007B3A8(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_10007B414(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_10007B4A4(_DWORD *a1, void *lpsrc)
{
  sub_10007B070(a1, (uint64_t)lpsrc);
}

uint64_t sub_10007B548()
{
  return 1;
}

void *sub_10007B550@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.GpsTowCdmaCellTime");
}

void sub_10007B560(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 24);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v7;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return;
    }
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v5;
  }
}

void sub_10007B634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10007B64C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A370;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10007B66C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A370;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10007B6C0()
{
}

uint64_t sub_10007B710(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_10007B728(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  int v7 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v14;
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        a1[6] |= 1u;
        if ((unint64_t)v15 < v12 && *v15 == 16)
        {
          uint64_t v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_27;
        }
      }
      if (v10 != 2) {
        break;
      }
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      uint64_t v16 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_27:
      if ((unint64_t)v16 >= v12 || *v16 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!result) {
          return result;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        *int v6 = *v16;
        int v17 = v16 + 1;
        *((void *)this + 1) = v17;
      }
      a1[6] |= 2u;
      if ((unint64_t)v17 < v12 && *v17 == 24)
      {
        int v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_35:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v18 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v13;
          unsigned int v18 = (unsigned __int8 *)(v13 + 1);
          *((void *)this + 1) = v18;
        }
        a1[6] |= 4u;
        if (v18 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      int v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

int *sub_10007B94C(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[6];
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
    if ((v5[6] & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
  int v6 = v5[6];
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = v5[4];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t proto::gnss::Emergency::CtsEutranCellTime::ByteSize(proto::gnss::Emergency::CtsEutranCellTime *this, unsigned int a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 24);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_19;
  }
  if (*((unsigned char *)this + 24))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *((_DWORD *)this + 6);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*((unsigned char *)this + 24) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *((_DWORD *)this + 6);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
  }
LABEL_19:
  *((_DWORD *)this + 5) = v4;
  return v4;
}

void sub_10007BA90(_DWORD *a1, void *lpsrc)
{
  sub_10007B560(a1, (uint64_t)lpsrc);
}

uint64_t sub_10007BB34()
{
  return 1;
}

void *sub_10007BB3C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.CtsEutranCellTime");
}

void sub_10007BB4C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      *(_DWORD *)(a1 + 28) |= 1u;
      int v6 = *(_DWORD **)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(proto::gnss::Emergency::CtsCdmaCellTime::default_instance_ + 8);
      }
      sub_10007B070(v6, v7);
      int v4 = *(_DWORD *)(a2 + 28);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v8 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 28) |= 2u;
    *(_DWORD *)(a1 + 16) = v8;
    if ((*(_DWORD *)(a2 + 28) & 4) == 0) {
      return;
    }
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 28) |= 4u;
    *(_DWORD *)(a1 + 20) = v5;
  }
}

void sub_10007BC74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10007BC8C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010A3E8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::CtsCdmaCellTime::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10007BD1C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_10007BC8C(a1);

  operator delete();
}

void sub_10007BD54()
{
}

uint64_t proto::gnss::Emergency::CtsCdmaCellTime::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 28))
  {
    if (*(unsigned char *)(this + 28))
    {
      uint64_t v1 = *(void *)(this + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 20)) {
          *(void *)(v1 + 8) = 0;
        }
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t sub_10007BDD0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 16);
  int v6 = (unsigned int *)(a1 + 20);
  while (1)
  {
    while (1)
    {
      uint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      unsigned int v9 = TagFallback >> 3;
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (v9 == 2)
      {
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_33:
        if ((unint64_t)v15 >= v11 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          BOOL v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v15;
          BOOL v24 = v15 + 1;
          *((void *)this + 1) = v24;
        }
        *(_DWORD *)(a1 + 28) |= 2u;
        if ((unint64_t)v24 < v11 && *v24 == 24)
        {
          unint64_t v12 = v24 + 1;
          *((void *)this + 1) = v12;
LABEL_41:
          if ((unint64_t)v12 >= v11 || *v12 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
            if (!result) {
              return result;
            }
            int v26 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v11 = *((void *)this + 2);
          }
          else
          {
            *int v6 = *v12;
            int v26 = (unsigned __int8 *)(v12 + 1);
            *((void *)this + 1) = v26;
          }
          *(_DWORD *)(a1 + 28) |= 4u;
          if (v26 == (unsigned __int8 *)v11
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
        }
      }
      else
      {
        if (v9 == 3)
        {
          int v10 = TagFallback & 7;
          if ((TagFallback & 7) == 0)
          {
            unint64_t v12 = (char *)*((void *)this + 1);
            unint64_t v11 = *((void *)this + 2);
            goto LABEL_41;
          }
        }
        else
        {
          int v10 = TagFallback & 7;
        }
LABEL_21:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
      }
        }
    }
    int v10 = TagFallback & 7;
    if (v10 != 2) {
      goto LABEL_21;
    }
    *(_DWORD *)(a1 + 28) |= 1u;
    int v13 = *(unsigned int **)(a1 + 8);
    if (!v13) {
      operator new();
    }
    unsigned int v27 = 0;
    int v14 = (char *)*((void *)this + 1);
    if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27)) {
        return 0;
      }
    }
    else
    {
      unsigned int v27 = *v14;
      *((void *)this + 1) = v14 + 1;
    }
    int v16 = *((_DWORD *)this + 14);
    int v17 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v16 + 1;
    if (v16 >= v17) {
      return 0;
    }
    int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
    if (!sub_10007B208(v13, this, v19) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
    int v20 = *((_DWORD *)this + 14);
    BOOL v21 = __OFSUB__(v20, 1);
    int v22 = v20 - 1;
    if (v22 < 0 == v21) {
      *((_DWORD *)this + 14) = v22;
    }
    int v23 = (unsigned char *)*((void *)this + 1);
    unint64_t v11 = *((void *)this + 2);
    if ((unint64_t)v23 < v11 && *v23 == 16)
    {
      int v15 = v23 + 1;
      *((void *)this + 1) = v15;
      goto LABEL_33;
    }
  }
}

uint64_t sub_10007C0A0(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], a2, a4);
    if ((v5[7] & 4) == 0) {
      return result;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::CtsCdmaCellTime::default_instance_ + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = v5[7];
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_9:
  int v8 = v5[5];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t proto::gnss::Emergency::CtsCdmaCellTime::ByteSize(proto::gnss::Emergency::CtsCdmaCellTime *this, unsigned int a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 28);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_21;
  }
  if (*((unsigned char *)this + 28))
  {
    uint64_t v5 = *((void *)this + 1);
    if (!v5) {
      uint64_t v5 = *(void *)(proto::gnss::Emergency::CtsCdmaCellTime::default_instance_ + 8);
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007B414(v5, a2);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    }
    else {
      int v8 = 1;
    }
    uint64_t v4 = (v7 + v8 + 1);
    int v3 = *((_DWORD *)this + 7);
    if ((v3 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*((unsigned char *)this + 28) & 2) == 0) {
      goto LABEL_16;
    }
  }
  unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    int v3 = *((_DWORD *)this + 7);
  }
  else
  {
    int v10 = 2;
  }
  uint64_t v4 = (v10 + v4);
LABEL_16:
  if ((v3 & 4) != 0)
  {
    unint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v11 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    }
    else {
      int v12 = 2;
    }
    uint64_t v4 = (v12 + v4);
  }
LABEL_21:
  *((_DWORD *)this + 6) = v4;
  return v4;
}

void sub_10007C210(uint64_t a1, void *lpsrc)
{
  sub_10007BB4C(a1, (uint64_t)lpsrc);
}

uint64_t sub_10007C2B4()
{
  return 1;
}

void *sub_10007C2BC@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.CtsCdmaCellTime");
}

void proto::gnss::Emergency::CellTimeData::MergeFrom(proto::gnss::Emergency::CellTimeData *this, const proto::gnss::Emergency::CellTimeData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 28))
    {
      *((_DWORD *)this + 7) |= 1u;
      uint64_t v5 = (_DWORD *)*((void *)this + 1);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *((void *)a2 + 1);
      if (!v6) {
        uint64_t v6 = *(void *)(proto::gnss::Emergency::CellTimeData::default_instance_ + 8);
      }
      sub_10007B560(v5, v6);
      int v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 2) != 0)
    {
      *((_DWORD *)this + 7) |= 2u;
      uint64_t v7 = *((void *)this + 2);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *((void *)a2 + 2);
      if (!v8) {
        uint64_t v8 = *(void *)(proto::gnss::Emergency::CellTimeData::default_instance_ + 16);
      }
      sub_10007BB4C(v7, v8);
    }
  }
}

void sub_10007C424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_10007C43C(void *result)
{
  if ((void *)proto::gnss::Emergency::CellTimeData::default_instance_ != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_10007C4DC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A460;
  sub_10007C43C(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10007C530(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A460;
  sub_10007C43C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10007C598()
{
}

uint64_t proto::gnss::Emergency::CellTimeData::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 28);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 28))
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 24))
        {
          *(void *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        int v2 = *(_DWORD *)(this + 28);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 16);
      if (this) {
        this = proto::gnss::Emergency::CtsCdmaCellTime::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

uint64_t sub_10007C644(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_17;
        }
        *(_DWORD *)(a1 + 28) |= 1u;
        uint64_t v8 = *(unsigned int **)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v27 = 0;
        unsigned int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0; {
        }
          }
        else
        {
          unsigned int v27 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
        if (!sub_10007B728(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 < *((void *)this + 2) && *v17 == 18)
        {
          *((void *)this + 1) = v17 + 1;
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 2) {
        goto LABEL_17;
      }
LABEL_29:
      *(_DWORD *)(a1 + 28) |= 2u;
      uint64_t v18 = *(void *)(a1 + 16);
      if (!v18) {
        operator new();
      }
      unsigned int v28 = 0;
      unsigned int v19 = (char *)*((void *)this + 1);
      if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28))return 0; {
      }
        }
      else
      {
        unsigned int v28 = *v19;
        *((void *)this + 1) = v19 + 1;
      }
      int v20 = *((_DWORD *)this + 14);
      int v21 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v20 + 1;
      if (v20 >= v21) {
        return 0;
      }
      int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v28);
      if (!sub_10007BDD0(v18, this, v23) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
      int v24 = *((_DWORD *)this + 14);
      BOOL v15 = __OFSUB__(v24, 1);
      int v25 = v24 - 1;
      if (v25 < 0 == v15) {
        *((_DWORD *)this + 14) = v25;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v7 = TagFallback & 7;
LABEL_17:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10007C938(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::CellTimeData::default_instance_ + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 2) != 0)
  {
LABEL_7:
    uint64_t v8 = *(void *)(v5 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(proto::gnss::Emergency::CellTimeData::default_instance_ + 16);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return result;
}

uint64_t proto::gnss::Emergency::CellTimeData::ByteSize(proto::gnss::Emergency::CellTimeData *this, unsigned int a2)
{
  if (!*((unsigned char *)this + 28))
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if ((*((unsigned char *)this + 28) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 28) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  int v4 = (proto::gnss::Emergency::CtsEutranCellTime *)*((void *)this + 1);
  if (!v4) {
    int v4 = *(proto::gnss::Emergency::CtsEutranCellTime **)(proto::gnss::Emergency::CellTimeData::default_instance_ + 8);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::CtsEutranCellTime::ByteSize(v4, a2);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  }
  else {
    int v7 = 1;
  }
  uint64_t v3 = (v6 + v7 + 1);
  if ((*((_DWORD *)this + 7) & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = (proto::gnss::Emergency::CtsCdmaCellTime *)*((void *)this + 2);
    if (!v8) {
      uint64_t v8 = *(proto::gnss::Emergency::CtsCdmaCellTime **)(proto::gnss::Emergency::CellTimeData::default_instance_ + 16);
    }
    unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::CtsCdmaCellTime::ByteSize(v8, a2);
    int v11 = (int)v9;
    if (v9 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
    }
    else {
      int v12 = 1;
    }
    uint64_t v3 = (v3 + v11 + v12 + 1);
  }
LABEL_18:
  *((_DWORD *)this + 6) = v3;
  return v3;
}

void sub_10007CA9C(proto::gnss::Emergency::CellTimeData *a1, void *lpsrc)
{
  proto::gnss::Emergency::CellTimeData::MergeFrom(a1, (const proto::gnss::Emergency::CellTimeData *)lpsrc);
}

uint64_t sub_10007CB40()
{
  return 1;
}

void *sub_10007CB48@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.CellTimeData");
}

void sub_10007CB58(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 16);
      if (v5 >= 6) {
        __assert_rtn("set_cell_time_assistance_type", "GnssEmergencyTypes.pb.h", 23024, "::proto::gnss::Emergency::ClsNetworkType_IsValid(value)");
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      int v6 = *(proto::gnss::Emergency::CellTimeData **)(a1 + 8);
      if (!v6) {
        operator new();
      }
      int v7 = *(const proto::gnss::Emergency::CellTimeData **)(a2 + 8);
      if (!v7) {
        int v7 = *(const proto::gnss::Emergency::CellTimeData **)(proto::gnss::Emergency::CellTimeAssistance::default_instance_
      }
                                                            + 8);
      proto::gnss::Emergency::CellTimeData::MergeFrom(v6, v7);
    }
  }
}

void sub_10007CC80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10007CC98(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010A4D8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)proto::gnss::Emergency::CellTimeAssistance::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10007CD28(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_10007CC98(a1);

  operator delete();
}

void sub_10007CD60()
{
}

uint64_t proto::gnss::Emergency::CellTimeAssistance::Clear(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 24);
  if (v2)
  {
    *(_DWORD *)(this + 16) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 8);
      if (this) {
        this = proto::gnss::Emergency::CellTimeData::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return this;
}

uint64_t sub_10007CDF0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unsigned int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_15;
        }
        unsigned int v21 = 0;
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v9 = v21;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 5)
        {
          *(_DWORD *)(a1 + 24) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_15;
      }
      int v7 = TagFallback & 7;
      if (v7 == 2) {
        break;
      }
LABEL_15:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_25:
    *(_DWORD *)(a1 + 24) |= 2u;
    uint64_t v12 = *(void *)(a1 + 8);
    if (!v12) {
      operator new();
    }
    unsigned int v22 = 0;
    unsigned int v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22)) {
        return 0;
      }
    }
    else
    {
      unsigned int v22 = *v13;
      *((void *)this + 1) = v13 + 1;
    }
    int v14 = *((_DWORD *)this + 14);
    int v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0;
    }
    int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
    if (!sub_10007C644(v12, this, v17) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    int v18 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v18, 1);
    int v20 = v18 - 1;
    if (v20 < 0 == v19) {
      *((_DWORD *)this + 14) = v20;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_10007D048(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(proto::gnss::Emergency::CellTimeAssistance::default_instance_ + 8);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_10007D0C8(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 24);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_19;
      }
    }
    int v6 = *(proto::gnss::Emergency::CellTimeData **)(a1 + 8);
    if (!v6) {
      int v6 = *(proto::gnss::Emergency::CellTimeData **)(proto::gnss::Emergency::CellTimeAssistance::default_instance_ + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)proto::gnss::Emergency::CellTimeData::ByteSize(v6, a2);
    int v9 = (int)v7;
    if (v7 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    }
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_10007D190(uint64_t a1, void *lpsrc)
{
  sub_10007CB58(a1, (uint64_t)lpsrc);
}

uint64_t sub_10007D234()
{
  return 1;
}

void *sub_10007D23C@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.CellTimeAssistance");
}

void sub_10007D24C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[8] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[8] |= 2u;
    a1[3] = v7;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    int v8 = *(_DWORD *)(a2 + 16);
    a1[8] |= 4u;
    a1[4] = v8;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_14:
    int v9 = *(_DWORD *)(a2 + 20);
    a1[8] |= 8u;
    a1[5] = v9;
    if ((*(_DWORD *)(a2 + 32) & 0x10) == 0) {
      return;
    }
LABEL_9:
    int v5 = *(_DWORD *)(a2 + 24);
    a1[8] |= 0x10u;
    a1[6] = v5;
  }
}

void sub_10007D360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10007D378(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A550;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10007D398(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10010A550;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10007D3EC()
{
}

uint64_t sub_10007D43C(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_10007D454(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  int v7 = a1 + 4;
  int v8 = a1 + 5;
  int v9 = a1 + 6;
  while (2)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v14 < v13 && (*v14 & 0x80000000) == 0)
        {
          unsigned int *v5 = *v14;
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
LABEL_26:
          a1[8] |= 1u;
          if ((unint64_t)v15 < v13 && *v15 == 16)
          {
            int v16 = v15 + 1;
            *((void *)this + 1) = v16;
            goto LABEL_29;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (result)
        {
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
LABEL_29:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v16;
          int v20 = v16 + 1;
          *((void *)this + 1) = v20;
        }
        a1[8] |= 2u;
        if ((unint64_t)v20 >= v13 || *v20 != 24) {
          continue;
        }
        unsigned int v17 = v20 + 1;
        *((void *)this + 1) = v17;
LABEL_37:
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v7 = *v17;
          unsigned int v21 = v17 + 1;
          *((void *)this + 1) = v21;
        }
        a1[8] |= 4u;
        if ((unint64_t)v21 >= v13 || *v21 != 32) {
          continue;
        }
        int v18 = v21 + 1;
        *((void *)this + 1) = v18;
LABEL_45:
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          unsigned int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v18;
          unsigned int v22 = v18 + 1;
          *((void *)this + 1) = v22;
        }
        a1[8] |= 8u;
        if ((unint64_t)v22 >= v13 || *v22 != 40) {
          continue;
        }
        BOOL v19 = v22 + 1;
        *((void *)this + 1) = v19;
LABEL_53:
        if ((unint64_t)v19 >= v13 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          unsigned int v23 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v9 = *v19;
          unsigned int v23 = (unsigned __int8 *)(v19 + 1);
          *((void *)this + 1) = v23;
        }
        a1[8] |= 0x10u;
        if (v23 != (unsigned __int8 *)v13 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_37;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_45;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        BOOL v19 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_53;
      default:
        int v12 = TagFallback & 7;
LABEL_20:
        if (v12 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_10007D794(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[8];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[8];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
    if ((v5[8] & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[8];
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = v5[6];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_10007D858(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_30;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 32);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 32);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_30;
      }
      goto LABEL_26;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v4 = (v11 + v4);
  if ((v3 & 0x10) != 0)
  {
LABEL_26:
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if (v12 >= 0x80) {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    }
    else {
      int v13 = 2;
    }
    uint64_t v4 = (v13 + v4);
  }
LABEL_30:
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

void sub_10007D96C(_DWORD *a1, void *lpsrc)
{
  sub_10007D24C(a1, (uint64_t)lpsrc);
}

uint64_t sub_10007DA10()
{
  return 1;
}

void *sub_10007DA18@<X0>(void *a1@<X8>)
{
  return sub_1000033AC(a1, "proto.gnss.Emergency.TowAssist");
}

void proto::gnss::Emergency::GpsReferenceTime::MergeFrom(proto::gnss::Emergency::GpsReferenceTime *this, const proto::gnss::Emergency::GpsReferenceTime *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((proto::gnss::Emergency::GpsReferenceTime *)((char *)this + 24), *((_DWORD *)a2 + 8) + *((_DWORD *)this + 8));
  if (*((int *)a2 + 8) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*((void *)a2 + 3) + 8 * v4);
      int v6 = *((_DWORD *)this + 9);
      uint64_t v7 = *((int *)this + 8);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 10))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((proto::gnss::Emergency::GpsReferenceTime *)((char *)this + 24), v6 + 1);
          int v6 = *((_DWORD *)this + 9);
        }
        *((_DWORD *)this + 9) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 3);
      *((_DWORD *)this + 8) = v7 + 1;
      sub_10007D24C(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 8));
  }
  int v9 = *((_DWORD *)a2 + 17);
  if (!(_BYTE)v9) {
    goto LABEL_19;
  }
  if (v9)
  {
    int v11 = *((_DWORD *)a2 + 2);
    *((_DWORD *)this + 17) |= 1u;
    *((_DWORD *)this + 2) = v11;
    int v9 = *((_DWORD *)a2 + 17);
    if ((v9 & 2) == 0)
    {
LABEL_14:
      if ((v9 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_24;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_14;
  }
  int v12 = *((_DWORD *)a2 + 3);
  *((_DWORD *)this + 17) |= 2u;
  *((_DWORD *)this + 3) = v12;
  int v9 = *((_DWORD *)a2 + 17);
  if ((v9 & 4) == 0)
  {
LABEL_15:
    if ((v9 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v13 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 17) |= 4u;
  *((_DWORD *)this + 4) = v13;
  int v9 = *((_DWORD *)a2 + 17);
  if ((v9 & 8) == 0)
  {
LABEL_16:
    if ((v9 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v14 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 17) |= 8u;
  *((_DWORD *)this + 5) = v14;
  int v9 = *((_DWORD *)a2 + 17);
  if ((v9 & 0x20) == 0)
  {
LABEL_17:
    if ((v9 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v15 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 17) |= 0x20u;
  *((_DWORD *)this + 12) = v15;
  int v9 = *((_DWORD *)a2 + 17);
  if ((v9 & 0x40) != 0)
  {
LABEL_27:
    unsigned int v16 = *((_DWORD *)a2 + 13);
    if (v16 >= 6) {
      __assert_rtn("set_session_protocol", "GnssEmergencyTypes.pb.h", 23342, "::proto::gnss::Emergency::SessionProtocol_IsValid(value)");
    }
    *((_DWORD *)this + 17) |= 0x40u;
    *((_DWORD *)this + 13) = v16;
    int v9 = *((_DWORD *)a2 + 17);
    if ((v9 & 0x80) != 0) {
      goto LABEL_29;
    }
LABEL_19:
    if ((v9 & 0x100) == 0) {
      return;
    }
    goto LABEL_20;
  }
LABEL_18:
  if ((v9 & 0x80) == 0) {
    goto LABEL_19;
  }
LABEL_29:
  unsigned int v17 = *((_DWORD *)a2 + 14);
  if (v17 >= 7) {
    __assert_rtn("set_pos_protocol", "GnssEmergencyTypes.pb.h", 23365, "::proto::gnss::Emergency::PosProtocol_IsValid(value)");
  }
  *((_DWORD *)this + 17) |= 0x80u;
  *((_DWORD *)this + 14) = v17;
  if ((*((_DWORD *)a2 + 17) & 0x100) != 0)
  {
LABEL_20:
    int v10 = *((_DWORD *)a2 + 15);
    *((_DWORD *)this + 17) |= 0x100u;
    *((_DWORD *)this + 15) = v10;
  }
}

void sub_10007DCE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10007DCF8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10010A5C8;
  int v2 = *((_DWORD *)this + 9);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*((void *)this + 3) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)this + 9);
      }
    }
  }
  if (*((void *)this + 3)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10007DDB8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_10007DCF8(a1);

  operator delete();
}

void sub_10007DDF0()
{
}

uint64_t proto::gnss::Emergency::GpsReferenceTime::Clear(proto::gnss::Emergency::GpsReferenceTime *this)
{
  int v2 = *((_DWORD *)this + 17);
  if ((_BYTE)v2)
  {
    *((void *)this + 6) = 0;
    *((_DWORD *)this + 14) = 0;
    *((void *)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  if ((v2 & 0xFF00) != 0) {
    *((_DWORD *)this + 15) = 0;
  }
  uint64_t result = sub_10003AD6C((uint64_t)this + 24);
  *((_DWORD *)this + 17) = 0;
  return result;
}

uint64_t proto::gnss::Emergency::GpsReferenceTime::MergePartialFromCodedStream(proto::gnss::Emergency::GpsReferenceTime *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 8);
  int v6 = (unsigned int *)((char *)this + 12);
  uint64_t v7 = (unsigned int *)((char *)this + 16);
  uint64_t v8 = (unsigned int *)((char *)this + 20);
  unsigned int v50 = (proto::gnss::Emergency::GpsReferenceTime *)((char *)this + 24);
  int v9 = (unsigned int *)((char *)this + 48);
  int v10 = (unsigned int *)((char *)this + 60);
  while (1)
  {
    while (1)
    {
LABEL_2:
      int v11 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v11;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v11 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      switch(TagFallback >> 3)
      {
        case 1u:
          int v13 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          int v15 = (char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
          if ((unint64_t)v15 >= v14 || *v15 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
            if (!result) {
              return result;
            }
            unsigned int v16 = (unsigned char *)*((void *)a2 + 1);
            unint64_t v14 = *((void *)a2 + 2);
          }
          else
          {
            unsigned int *v5 = *v15;
            unsigned int v16 = v15 + 1;
            *((void *)a2 + 1) = v16;
          }
          *((_DWORD *)this + 17) |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            unsigned int v17 = v16 + 1;
            *((void *)a2 + 1) = v17;
            goto LABEL_37;
          }
          continue;
        case 2u:
          int v13 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          unsigned int v17 = (char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
LABEL_37:
          if ((unint64_t)v17 >= v14 || *v17 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
            if (!result) {
              return result;
            }
            unsigned int v28 = (unsigned char *)*((void *)a2 + 1);
            unint64_t v14 = *((void *)a2 + 2);
          }
          else
          {
            *int v6 = *v17;
            unsigned int v28 = v17 + 1;
            *((void *)a2 + 1) = v28;
          }
          *((_DWORD *)this + 17) |= 2u;
          if ((unint64_t)v28 >= v14 || *v28 != 24) {
            continue;
          }
          int v18 = v28 + 1;
          *((void *)a2 + 1) = v18;
LABEL_45:
          if ((unint64_t)v18 >= v14 || *v18 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
            if (!result) {
              return result;
            }
            int v29 = (unsigned char *)*((void *)a2 + 1);
            unint64_t v14 = *((void *)a2 + 2);
          }
          else
          {
            unsigned int *v7 = *v18;
            int v29 = v18 + 1;
            *((void *)a2 + 1) = v29;
          }
          *((_DWORD *)this + 17) |= 4u;
          if ((unint64_t)v29 >= v14 || *v29 != 32) {
            continue;
          }
          BOOL v19 = v29 + 1;
          *((void *)a2 + 1) = v19;
LABEL_53:
          if ((unint64_t)v19 >= v14 || *v19 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
            if (!result) {
              return result;
            }
            int v30 = (unsigned char *)*((void *)a2 + 1);
            unint64_t v14 = *((void *)a2 + 2);
          }
          else
          {
            *uint64_t v8 = *v19;
            int v30 = v19 + 1;
            *((void *)a2 + 1) = v30;
          }
          *((_DWORD *)this + 17) |= 8u;
          if ((unint64_t)v30 >= v14 || *v30 != 42) {
            continue;
          }
          break;
        case 3u:
          int v13 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          int v18 = (char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
          goto LABEL_45;
        case 4u:
          int v13 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          BOOL v19 = (char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
          goto LABEL_53;
        case 5u:
          int v13 = TagFallback & 7;
          if (v13 == 2) {
            goto LABEL_61;
          }
          goto LABEL_28;
        case 6u:
          int v13 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          unsigned int v21 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
          goto LABEL_79;
        case 7u:
          int v13 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          unsigned int v22 = (char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
          goto LABEL_87;
        case 8u:
          int v13 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          int v24 = (char *)*((void *)a2 + 1);
          unint64_t v23 = *((void *)a2 + 2);
          goto LABEL_97;
        case 9u:
          int v13 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          int v26 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v25 = *((void *)a2 + 2);
          goto LABEL_107;
        default:
          int v13 = TagFallback & 7;
LABEL_28:
          if (v13 == 4) {
            return 1;
          }
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
          continue;
          }
      }
      do
      {
        *((void *)a2 + 1) = v30 + 1;
LABEL_61:
        int v31 = *((_DWORD *)this + 9);
        uint64_t v32 = *((int *)this + 8);
        if ((int)v32 >= v31)
        {
          if (v31 == *((_DWORD *)this + 10))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v50, v31 + 1);
            int v31 = *((_DWORD *)this + 9);
          }
          *((_DWORD *)this + 9) = v31 + 1;
          operator new();
        }
        uint64_t v33 = *((void *)this + 3);
        *((_DWORD *)this + 8) = v32 + 1;
        int v34 = *(unsigned int **)(v33 + 8 * v32);
        unsigned int v53 = 0;
        int v35 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53))return 0; {
        }
          }
        else
        {
          unsigned int v53 = *v35;
          *((void *)a2 + 1) = v35 + 1;
        }
        int v36 = *((_DWORD *)a2 + 14);
        int v37 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v36 + 1;
        if (v36 >= v37) {
          return 0;
        }
        int v38 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v53);
        if (!sub_10007D454(v34, a2, v39) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v38);
        int v40 = *((_DWORD *)a2 + 14);
        BOOL v41 = __OFSUB__(v40, 1);
        int v42 = v40 - 1;
        if (v42 < 0 == v41) {
          *((_DWORD *)a2 + 14) = v42;
        }
        int v30 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        if ((unint64_t)v30 >= v20) {
          goto LABEL_2;
        }
        int v43 = *v30;
      }
      while (v43 == 42);
      if (v43 != 48) {
        continue;
      }
      unsigned int v21 = v30 + 1;
      *((void *)a2 + 1) = v21;
LABEL_79:
      if ((unint64_t)v21 >= v20 || (char)*v21 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
        if (result)
        {
          unsigned int v44 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
          goto LABEL_84;
        }
        return result;
      }
      unsigned int *v9 = *v21;
      unsigned int v44 = v21 + 1;
      *((void *)a2 + 1) = v44;
LABEL_84:
      *((_DWORD *)this + 17) |= 0x20u;
      if ((unint64_t)v44 < v20 && *v44 == 56)
      {
        unsigned int v22 = v44 + 1;
        *((void *)a2 + 1) = v22;
LABEL_87:
        unsigned int v52 = 0;
        if ((unint64_t)v22 < v20 && (*v22 & 0x80000000) == 0)
        {
          unsigned int v45 = *v22;
          *((void *)a2 + 1) = v22 + 1;
          goto LABEL_92;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
        if (!result) {
          return result;
        }
        unsigned int v45 = v52;
LABEL_92:
        if (v45 <= 5)
        {
          *((_DWORD *)this + 17) |= 0x40u;
          *((_DWORD *)this + 13) = v45;
        }
        unsigned int v46 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        if ((unint64_t)v46 < v23 && *v46 == 64)
        {
          int v24 = v46 + 1;
          *((void *)a2 + 1) = v24;
LABEL_97:
          unsigned int v51 = 0;
          if ((unint64_t)v24 < v23 && (*v24 & 0x80000000) == 0)
          {
            unsigned int v47 = *v24;
            *((void *)a2 + 1) = v24 + 1;
            goto LABEL_102;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51);
          if (!result) {
            return result;
          }
          unsigned int v47 = v51;
LABEL_102:
          if (v47 <= 6)
          {
            *((_DWORD *)this + 17) |= 0x80u;
            *((_DWORD *)this + 14) = v47;
          }
          int v48 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v25 = *((void *)a2 + 2);
          if ((unint64_t)v48 < v25 && *v48 == 72) {
            break;
          }
        }
      }
    }
    int v26 = v48 + 1;
    *((void *)a2 + 1) = v26;
LABEL_107:
    if ((unint64_t)v26 >= v25 || (char)*v26 < 0) {
      break;
    }
    *int v10 = *v26;
    int v49 = (char *)(v26 + 1);
    *((void *)a2 + 1) = v49;
LABEL_112:
    *((_DWORD *)this + 17) |= 0x100u;
    if (v49 == (char *)v25 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)a2 + 36) = 1;
      return result;
    }
  }
  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
  if (result)
  {
    int v49 = (char *)*((void *)a2 + 1);
    unint64_t v25 = *((void *)a2 + 2);
    goto LABEL_112;
  }
  return result;
}