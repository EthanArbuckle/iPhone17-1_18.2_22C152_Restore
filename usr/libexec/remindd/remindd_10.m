uint64_t sub_1006A88EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  void *v30;
  void *v31;
  Swift::String v32;
  Swift::String v33;
  NSString v34;
  uint64_t v35;
  int64_t v36;
  void *v37;
  uint64_t v38;

  v6 = v5;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  if (a2 || a3)
  {
    swift_errorRetain();
    swift_willThrow();
    return swift_release();
  }
  v35 = a4 + 64;
  v12 = 1 << *(unsigned char *)(a4 + 32);
  v13 = -1;
  if (v12 < 64) {
    v13 = ~(-1 << v12);
  }
  v14 = v13 & *(void *)(a4 + 64);
  v15 = result + 144;
  swift_bridgeObjectRetain();
  v38 = v15;
  result = swift_beginAccess();
  v16 = 0;
  v36 = (unint64_t)(v12 + 63) >> 6;
  v37 = a5;
  if (!v14) {
    goto LABEL_9;
  }
LABEL_8:
  v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v17 | (v16 << 6); ; i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    v22 = (uint64_t *)(*(void *)(a4 + 48) + 16 * i);
    v23 = *v22;
    v24 = (void *)v22[1];
    v25 = *(void **)(*(void *)(a4 + 56) + 8 * i);
    v26 = *(void *)v38;
    v27 = *(void *)(*(void *)v38 + 16);
    swift_bridgeObjectRetain();
    if (!v27) {
      goto LABEL_30;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = sub_1001806F8(v23, (uint64_t)v24);
    if ((v29 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_30:
      v31 = self;
      _StringGuts.grow(_:)(79);
      v32._countAndFlagsBits = 0xD00000000000004DLL;
      v32._object = (void *)0x80000001007DBEF0;
      String.append(_:)(v32);
      v33._countAndFlagsBits = v23;
      v33._object = v24;
      String.append(_:)(v33);
      swift_bridgeObjectRelease();
      v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v31 internalErrorWithDebugDescription:v34];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    v30 = *(void **)(*(void *)(v26 + 56) + 8 * v28);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1006CF9F8(v25, v37, v30, (uint64_t (*)(id *))sub_1007426D4, (void (*)(void))type metadata accessor for REMCDSmartListSection, (void (*)(void))type metadata accessor for REMCDSmartListSection, 0xD000000000000015, (void *)0x80000001007DC050, (uint64_t (*)(void *))sub_1002EFD5C, (uint64_t (*)(id, uint64_t))sub_10072D3BC, &off_1008B2D28, (void (*)(void))type metadata accessor for REMCDSmartListSection, (uint64_t (*)(void))sub_10030703C, (void (*)(id, char *, uint64_t))sub_1004E8B0C, (unint64_t)&type metadata for REMSmartListSectionStorageCDIngestor.ValueKey, (uint64_t)sub_100716050);
    if (v6)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_32:
      swift_release();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    result = swift_release();
    if (v14) {
      goto LABEL_8;
    }
LABEL_9:
    if (__OFADD__(v16++, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    v20 = *(void *)(v35 + 8 * v16);
    if (!v20) {
      break;
    }
LABEL_19:
    v14 = (v20 - 1) & v20;
  }
  v21 = v16 + 1;
  if (v16 + 1 >= v36) {
    goto LABEL_32;
  }
  v20 = *(void *)(v35 + 8 * v21);
  if (v20) {
    goto LABEL_18;
  }
  v21 = v16 + 2;
  if (v16 + 2 >= v36) {
    goto LABEL_32;
  }
  v20 = *(void *)(v35 + 8 * v21);
  if (v20) {
    goto LABEL_18;
  }
  v21 = v16 + 3;
  if (v16 + 3 >= v36) {
    goto LABEL_32;
  }
  v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
LABEL_18:
    v16 = v21;
    goto LABEL_19;
  }
  while (1)
  {
    v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_19;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1006A8D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = v6;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  if (a2 || a3)
  {
    swift_errorRetain();
    swift_willThrow();
    return swift_release();
  }
  uint64_t v39 = a5;
  uint64_t v37 = a4 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(a4 + 64);
  uint64_t v17 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t v41 = v17;
  uint64_t result = swift_beginAccess();
  int64_t v18 = 0;
  int64_t v38 = (unint64_t)(v14 + 63) >> 6;
  v40 = a6;
  if (!v16) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    v24 = (uint64_t *)(*(void *)(a4 + 48) + 16 * i);
    uint64_t v26 = *v24;
    v25 = (void *)v24[1];
    uint64_t v27 = *(void *)(*(void *)(a4 + 56) + 8 * i);
    uint64_t v28 = *(void *)v41;
    uint64_t v29 = *(void *)(*(void *)v41 + 16);
    swift_bridgeObjectRetain();
    if (!v29) {
      goto LABEL_30;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_1001806F8(v26, (uint64_t)v25);
    if ((v31 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_30:
      v33 = self;
      _StringGuts.grow(_:)(79);
      v34._object = (void *)0x80000001007DBEF0;
      v34._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v34);
      v35._countAndFlagsBits = v26;
      v35._object = v25;
      String.append(_:)(v35);
      swift_bridgeObjectRelease();
      NSString v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v33 internalErrorWithDebugDescription:v36];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v32 = *(void *)(*(void *)(v28 + 56) + 8 * v30);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v40(v27, v39, v32);
    if (v8)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_32:
      swift_release();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v16) {
      goto LABEL_8;
    }
LABEL_9:
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v18 >= v38) {
      goto LABEL_32;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v18);
    if (!v22) {
      break;
    }
LABEL_19:
    unint64_t v16 = (v22 - 1) & v22;
  }
  int64_t v23 = v18 + 1;
  if (v18 + 1 >= v38) {
    goto LABEL_32;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v23);
  if (v22) {
    goto LABEL_18;
  }
  int64_t v23 = v18 + 2;
  if (v18 + 2 >= v38) {
    goto LABEL_32;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v23);
  if (v22) {
    goto LABEL_18;
  }
  int64_t v23 = v18 + 3;
  if (v18 + 3 >= v38) {
    goto LABEL_32;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v23);
  if (v22)
  {
LABEL_18:
    int64_t v18 = v23;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v38) {
      goto LABEL_32;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_19;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1006A9130(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = v4;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v31 = a2 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a2 + 64);
  uint64_t v11 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v12 = 0;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  if (!v10) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    int64_t v18 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v20 = *v18;
    unint64_t v19 = (void *)v18[1];
    uint64_t v21 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v22 = *(void *)v11;
    uint64_t v23 = *(void *)(*(void *)v11 + 16);
    swift_bridgeObjectRetain();
    if (!v23) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_1001806F8(v20, (uint64_t)v19);
    if ((v25 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v27 = self;
      _StringGuts.grow(_:)(79);
      v28._object = (void *)0x80000001007DBEF0;
      v28._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v28);
      v29._countAndFlagsBits = v20;
      v29._object = v19;
      String.append(_:)(v29);
      swift_bridgeObjectRelease();
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v27 internalErrorWithDebugDescription:v30];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v26 = *(void *)(*(void *)(v22 + 56) + 8 * v24);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    a4(v21, a3, v26);
    if (v5)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v10) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v12 >= v32) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v31 + 8 * v12);
    if (!v16) {
      break;
    }
LABEL_16:
    unint64_t v10 = (v16 - 1) & v16;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v32) {
    goto LABEL_29;
  }
  unint64_t v16 = *(void *)(v31 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v32) {
    goto LABEL_29;
  }
  unint64_t v16 = *(void *)(v31 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v32)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v16 = *(void *)(v31 + 8 * v17);
  if (v16)
  {
LABEL_15:
    int64_t v12 = v17;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v32) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v31 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006A9494(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1006E8C14(v20, a3, v25, (uint64_t)sub_100742410, (uint64_t (*)(uint64_t, char *, unint64_t))sub_1003B42CC, &qword_100910E00, (uint64_t)off_1008AA408, sub_100711E38, (uint64_t (*)(void))sub_10030703C, (void (*)(id, void, uint64_t, unint64_t *, uint64_t))sub_100728A08);
    if (v4)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006A9864(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1006E8C14(v20, a3, v25, (uint64_t)sub_1007422BC, (uint64_t (*)(uint64_t, char *, unint64_t))sub_1003B42F8, &qword_100910E10, (uint64_t)off_1008AA3F0, sub_1007122A0, (uint64_t (*)(void))sub_10030703C, (void (*)(id, void, uint64_t, unint64_t *, uint64_t))sub_100728A08);
    if (v4)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006A9C34(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1006E8C14(v20, a3, v25, (uint64_t)sub_100742168, (uint64_t (*)(uint64_t, char *, unint64_t))sub_1003B4324, (unint64_t *)&qword_100910E40, (uint64_t)off_1008AA3E8, sub_100712708, (uint64_t (*)(void))sub_10030703C, (void (*)(id, void, uint64_t, unint64_t *, uint64_t))sub_100728568);
    if (v4)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AA004(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1006E8C14(v20, a3, v25, (uint64_t)sub_100742014, (uint64_t (*)(uint64_t, char *, unint64_t))sub_1003B4350, &qword_10091FD58, (uint64_t)off_1008AA3F8, sub_100712B70, (uint64_t (*)(void))sub_10030703C, (void (*)(id, void, uint64_t, unint64_t *, uint64_t))sub_100728568);
    if (v4)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AA3D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1006EDF94(v20, a3, v25, (uint64_t)sub_10074129C, (uint64_t (*)(uint64_t, char *, unint64_t))sub_1003B45E4, &qword_100915848, (uint64_t)off_1008AA4A8, sub_1007138A8, (uint64_t (*)(void))sub_10030703C, (void (*)(void *, id, void, uint64_t))sub_100499324);
    if (v4)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AA7A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1006EDF94(v20, a3, v25, (uint64_t)sub_1007413F8, (uint64_t (*)(uint64_t, char *, unint64_t))sub_1003B4610, (unint64_t *)&unk_100915850, (uint64_t)off_1008AA458, sub_100713D10, (uint64_t (*)(void))sub_10030703C, (void (*)(void *, id, void, uint64_t))sub_100499364);
    if (v4)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AAB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1006EDF94(v20, a3, v25, (uint64_t)sub_100741554, (uint64_t (*)(uint64_t, char *, unint64_t))sub_1003B463C, (unint64_t *)&unk_10090AF90, (uint64_t)off_1008AA440, sub_100714178, (uint64_t (*)(void))sub_10030703C, (void (*)(void *, id, void, uint64_t))sub_1004993A4);
    if (v4)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AAF44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1006EDF94(v20, a3, v25, (uint64_t)sub_100741818, (uint64_t (*)(uint64_t, char *, unint64_t))sub_1003B4668, (unint64_t *)&qword_100911820, (uint64_t)off_1008AA480, sub_1007145E0, (uint64_t (*)(void))sub_10030703C, (void (*)(void *, id, void, uint64_t))sub_100365604);
    if (v4)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AB314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(NSObject **)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      v27._object = (void *)0x80000001007DBEF0;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1006F493C(v20, a3, v25, (uint64_t)sub_10074022C, (uint64_t (*)(uint64_t, char *, NSObject *))sub_1003B576C, (void (*)(void))type metadata accessor for REMCDTemplateSection, (void (*)(void))type metadata accessor for REMCDTemplateSection, 0xD000000000000014, (void *)0x80000001007DBF90, (uint64_t (*)(void *, uint64_t *))sub_100715BE8, (uint64_t (*)(void))sub_10030703C, (uint64_t (*)(id, void))sub_10035A40C, (void (*)(void *, id, void, uint64_t))sub_1004821F0);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AB724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(NSObject **)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      v27._object = (void *)0x80000001007DBEF0;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1006F493C(v20, a3, v25, (uint64_t)sub_1007403E8, (uint64_t (*)(uint64_t, char *, NSObject *))sub_1003B5798, (void (*)(void))type metadata accessor for REMCDSmartListSection, (void (*)(void))type metadata accessor for REMCDSmartListSection, 0xD000000000000015, (void *)0x80000001007DC050, (uint64_t (*)(void *, uint64_t *))sub_100716050, (uint64_t (*)(void))sub_10030703C, (uint64_t (*)(id, void))sub_10035A40C, (void (*)(void *, id, void, uint64_t))sub_1004E94C8);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006ABB34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(NSObject **)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      v27._object = (void *)0x80000001007DBEF0;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1006F493C(v20, a3, v25, (uint64_t)sub_10074055C, (uint64_t (*)(uint64_t, char *, NSObject *))sub_1003B57C4, (void (*)(void))type metadata accessor for REMCDListSection, (void (*)(void))type metadata accessor for REMCDListSection, 0xD000000000000010, (void *)0x80000001007DC070, (uint64_t (*)(void *, uint64_t *))sub_1007164B8, (uint64_t (*)(void))sub_10030703C, (uint64_t (*)(id, void))sub_10035A40C, (void (*)(void *, id, void, uint64_t))sub_10035AF8C);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006ABF44(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = v4;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v31 = a2 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a2 + 64);
  uint64_t v11 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v12 = 0;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  if (!v10) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    int64_t v18 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v20 = *v18;
    uint64_t v19 = (void *)v18[1];
    uint64_t v21 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v22 = *(void *)v11;
    uint64_t v23 = *(void *)(*(void *)v11 + 16);
    swift_bridgeObjectRetain();
    if (!v23) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_1001806F8(v20, (uint64_t)v19);
    if ((v25 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      Swift::String v27 = self;
      _StringGuts.grow(_:)(79);
      v28._object = (void *)0x80000001007DBEF0;
      v28._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v28);
      v29._countAndFlagsBits = v20;
      v29._object = v19;
      String.append(_:)(v29);
      swift_bridgeObjectRelease();
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v27 internalErrorWithDebugDescription:v30];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v26 = *(void *)(*(void *)(v22 + 56) + 8 * v24);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    a4(v21, a3, v26);
    if (v5)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v10) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v12 >= v32) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v31 + 8 * v12);
    if (!v16) {
      break;
    }
LABEL_16:
    unint64_t v10 = (v16 - 1) & v16;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v32) {
    goto LABEL_29;
  }
  unint64_t v16 = *(void *)(v31 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v32) {
    goto LABEL_29;
  }
  unint64_t v16 = *(void *)(v31 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v32) {
    goto LABEL_29;
  }
  unint64_t v16 = *(void *)(v31 + 8 * v17);
  if (v16)
  {
LABEL_15:
    int64_t v12 = v17;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v32) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v31 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AC29C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v18, (uint64_t)v19);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v18;
      v28._object = v19;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    unint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_100702AF8(v20, a3, v25, (uint64_t (*)(id *))static REMCDRecurrenceRule.shouldAttemptLocalObjectMerge(), (unint64_t *)&qword_10090DC20, (uint64_t)off_1008AA448, (uint64_t (*)(uint64_t, unint64_t))sub_100711568, (unint64_t *)sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AC644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v18, (uint64_t)v19);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v18;
      v28._object = v19;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    unint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_100702AF8(v20, a3, v25, (uint64_t (*)(id *))static REMCDRecurrenceRule.shouldAttemptLocalObjectMerge(), &qword_100910E00, (uint64_t)off_1008AA408, (uint64_t (*)(uint64_t, unint64_t))sub_100711E38, (unint64_t *)sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AC9EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v18, (uint64_t)v19);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v18;
      v28._object = v19;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    unint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_100702AF8(v20, a3, v25, (uint64_t (*)(id *))static REMCDRecurrenceRule.shouldAttemptLocalObjectMerge(), &qword_100910E10, (uint64_t)off_1008AA3F0, (uint64_t (*)(uint64_t, unint64_t))sub_1007122A0, (unint64_t *)sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006ACD94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v18, (uint64_t)v19);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v18;
      v28._object = v19;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    unint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_100702AF8(v20, a3, v25, (uint64_t (*)(id *))static REMCDRecurrenceRule.shouldAttemptLocalObjectMerge(), (unint64_t *)&qword_100910E40, (uint64_t)off_1008AA3E8, (uint64_t (*)(uint64_t, unint64_t))sub_100712708, (unint64_t *)sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AD13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v18, (uint64_t)v19);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v18;
      v28._object = v19;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    unint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_100702AF8(v20, a3, v25, (uint64_t (*)(id *))static REMCDRecurrenceRule.shouldAttemptLocalObjectMerge(), &qword_10091FD58, (uint64_t)off_1008AA3F8, (uint64_t (*)(uint64_t, unint64_t))sub_100712B70, (unint64_t *)sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AD4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v18, (uint64_t)v19);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v18;
      v28._object = v19;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    unint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_100702AF8(v20, a3, v25, (uint64_t (*)(id *))static REMCDRecurrenceRule.shouldAttemptLocalObjectMerge(), (unint64_t *)&unk_100909AC0, (uint64_t)off_1008AA3E0, (uint64_t (*)(uint64_t, unint64_t))sub_100712FD8, (unint64_t *)sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AD88C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v18, (uint64_t)v19);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v18;
      v28._object = v19;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    unint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_100702AF8(v20, a3, v25, (uint64_t (*)(id *))static REMCDRecurrenceRule.shouldAttemptLocalObjectMerge(), &qword_100910230, (uint64_t)off_1008AA410, (uint64_t (*)(uint64_t, unint64_t))sub_100713440, (unint64_t *)sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006ADC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v18, (uint64_t)v19);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v18;
      v28._object = v19;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    unint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_100702AF8(v20, a3, v25, (uint64_t (*)(id *))static REMCDRecurrenceRule.shouldAttemptLocalObjectMerge(), &qword_100915848, (uint64_t)off_1008AA4A8, (uint64_t (*)(uint64_t, unint64_t))sub_1007138A8, (unint64_t *)sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006ADFDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v18, (uint64_t)v19);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v18;
      v28._object = v19;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    unint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_100702AF8(v20, a3, v25, (uint64_t (*)(id *))static REMCDRecurrenceRule.shouldAttemptLocalObjectMerge(), (unint64_t *)&unk_100915850, (uint64_t)off_1008AA458, (uint64_t (*)(uint64_t, unint64_t))sub_100713D10, (unint64_t *)sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AE384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v18, (uint64_t)v19);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v18;
      v28._object = v19;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    unint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_100702AF8(v20, a3, v25, (uint64_t (*)(id *))static REMCDRecurrenceRule.shouldAttemptLocalObjectMerge(), (unint64_t *)&unk_10090AF90, (uint64_t)off_1008AA440, (uint64_t (*)(uint64_t, unint64_t))sub_100714178, (unint64_t *)sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AE72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v18, (uint64_t)v19);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v18;
      v28._object = v19;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    unint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_100702AF8(v20, a3, v25, (uint64_t (*)(id *))static REMCDRecurrenceRule.shouldAttemptLocalObjectMerge(), (unint64_t *)&qword_100911820, (uint64_t)off_1008AA480, (uint64_t (*)(uint64_t, unint64_t))sub_1007145E0, (unint64_t *)sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AEAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, __objc2_class **, void *(*)(uint64_t a1, uint64_t a2), unint64_t (*)(void *)))
{
  uint64_t v6 = v5;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v32 = a2 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a2 + 64);
  uint64_t v12 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v13 = 0;
  int64_t v33 = (unint64_t)(v9 + 63) >> 6;
  if (!v11) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    uint64_t v19 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v20 = *v19;
    uint64_t v21 = (void *)v19[1];
    uint64_t v22 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v23 = *(void *)v12;
    uint64_t v24 = *(void *)(*(void *)v12 + 16);
    swift_bridgeObjectRetain();
    if (!v24) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_1001806F8(v20, (uint64_t)v21);
    if ((v26 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      Swift::String v28 = self;
      _StringGuts.grow(_:)(79);
      v29._object = (void *)0x80000001007DBEF0;
      v29._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v29);
      v30._countAndFlagsBits = v20;
      v30._object = v21;
      String.append(_:)(v30);
      swift_bridgeObjectRelease();
      NSString v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v28 internalErrorWithDebugDescription:v31];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v27 = *(void *)(*(void *)(v23 + 56) + 8 * v25);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    a5(v22, a3, v27, a4, &qword_100921E40, off_1008AA430, sub_100715318, sub_10030703C);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v11) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v13 >= v33) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v32 + 8 * v13);
    if (!v17) {
      break;
    }
LABEL_16:
    unint64_t v11 = (v17 - 1) & v17;
  }
  int64_t v18 = v13 + 1;
  if (v13 + 1 >= v33) {
    goto LABEL_29;
  }
  unint64_t v17 = *(void *)(v32 + 8 * v18);
  if (v17) {
    goto LABEL_15;
  }
  int64_t v18 = v13 + 2;
  if (v13 + 2 >= v33) {
    goto LABEL_29;
  }
  unint64_t v17 = *(void *)(v32 + 8 * v18);
  if (v17) {
    goto LABEL_15;
  }
  int64_t v18 = v13 + 3;
  if (v13 + 3 >= v33)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v17 = *(void *)(v32 + 8 * v18);
  if (v17)
  {
LABEL_15:
    int64_t v13 = v18;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v33) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v32 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AEE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      char v26 = self;
      _StringGuts.grow(_:)(79);
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      v27._object = (void *)0x80000001007DBEF0;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1007073C8(v20, a3, v25, (uint64_t (*)(id *))sub_1007426B8, (uint64_t *)type metadata accessor for REMCDDueDateDeltaAlert, (uint64_t)sub_100715780, (void (*)(void))type metadata accessor for REMCDDueDateDeltaAlert, 0xD000000000000016, (void *)0x80000001007DC190, (uint64_t (*)(void))sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AF248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      char v26 = self;
      _StringGuts.grow(_:)(79);
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      v27._object = (void *)0x80000001007DBEF0;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1007073C8(v20, a3, v25, (uint64_t (*)(id *))sub_1007426B8, (uint64_t *)type metadata accessor for REMCDTemplateSection, (uint64_t)sub_100715BE8, (void (*)(void))type metadata accessor for REMCDTemplateSection, 0xD000000000000014, (void *)0x80000001007DBF90, (uint64_t (*)(void))sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AF61C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      char v26 = self;
      _StringGuts.grow(_:)(79);
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      v27._object = (void *)0x80000001007DBEF0;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1007073C8(v20, a3, v25, (uint64_t (*)(id *))sub_1007426B8, (uint64_t *)type metadata accessor for REMCDSmartListSection, (uint64_t)sub_100716050, (void (*)(void))type metadata accessor for REMCDSmartListSection, 0xD000000000000015, (void *)0x80000001007DC050, (uint64_t (*)(void))sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AF9F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      char v26 = self;
      _StringGuts.grow(_:)(79);
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      v27._object = (void *)0x80000001007DBEF0;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1007073C8(v20, a3, v25, (uint64_t (*)(id *))sub_1007426B8, (uint64_t *)type metadata accessor for REMCDListSection, (uint64_t)sub_1007164B8, (void (*)(void))type metadata accessor for REMCDListSection, 0xD000000000000010, (void *)0x80000001007DC070, (uint64_t (*)(void))sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006AFDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      char v26 = self;
      _StringGuts.grow(_:)(79);
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      v27._object = (void *)0x80000001007DBEF0;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1007073C8(v20, a3, v25, (uint64_t (*)(id *))sub_100740BC0, (uint64_t *)type metadata accessor for REMCDSavedReminder, (uint64_t)sub_1007171F0, (void (*)(void))type metadata accessor for REMCDSavedReminder, 0xD000000000000012, (void *)0x80000001007CC3C0, (uint64_t (*)(void))sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006B0198(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v29 = a2 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 64);
  uint64_t v9 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v10 = 0;
  int64_t v30 = (unint64_t)(v6 + 63) >> 6;
  if (!v8) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    int64_t v16 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v18 = *v16;
    unint64_t v17 = (void *)v16[1];
    unint64_t v19 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v20 = *(void *)v9;
    uint64_t v21 = *(void *)(*(void *)v9 + 16);
    swift_bridgeObjectRetain();
    if (!v21) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_1001806F8(v18, (uint64_t)v17);
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v25 = self;
      _StringGuts.grow(_:)(79);
      v26._object = (void *)0x80000001007DBEF0;
      v26._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v26);
      v27._countAndFlagsBits = v18;
      v27._object = v17;
      String.append(_:)(v27);
      swift_bridgeObjectRelease();
      NSString v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v25 internalErrorWithDebugDescription:v28];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    char v24 = *(uint64_t **)(*(void *)(v20 + 56) + 8 * v22);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_10073D3FC(v19, v24);
    if (v3)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v8) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v10 >= v30) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v29 + 8 * v10);
    if (!v14) {
      break;
    }
LABEL_16:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v10 + 1;
  if (v10 + 1 >= v30) {
    goto LABEL_29;
  }
  unint64_t v14 = *(void *)(v29 + 8 * v15);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v10 + 2;
  if (v10 + 2 >= v30) {
    goto LABEL_29;
  }
  unint64_t v14 = *(void *)(v29 + 8 * v15);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v10 + 3;
  if (v10 + 3 >= v30)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v14 = *(void *)(v29 + 8 * v15);
  if (v14)
  {
LABEL_15:
    int64_t v10 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v29 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006B04F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t), uint64_t (*a7)(void))
{
  uint64_t v8 = v7;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v34 = a2 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(a2 + 64);
  uint64_t v14 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v15 = 0;
  int64_t v35 = (unint64_t)(v11 + 63) >> 6;
  if (!v13) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v16 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    uint64_t v21 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v23 = *v21;
    unint64_t v22 = (void *)v21[1];
    unint64_t v24 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v25 = *(void *)v14;
    uint64_t v26 = *(void *)(*(void *)v14 + 16);
    swift_bridgeObjectRetain();
    if (!v26) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v27 = sub_1001806F8(v23, (uint64_t)v22);
    if ((v28 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      int64_t v30 = self;
      _StringGuts.grow(_:)(79);
      v31._object = (void *)0x80000001007DBEF0;
      v31._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v31);
      v32._countAndFlagsBits = v23;
      v32._object = v22;
      String.append(_:)(v32);
      swift_bridgeObjectRelease();
      NSString v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v30 internalErrorWithDebugDescription:v33];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v29 = *(void *)(*(void *)(v25 + 56) + 8 * v27);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_10073E0F0(v24, v29, a4, a5, a6, a7);
    if (v8)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v13) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v15 >= v35) {
      goto LABEL_29;
    }
    unint64_t v19 = *(void *)(v34 + 8 * v15);
    if (!v19) {
      break;
    }
LABEL_16:
    unint64_t v13 = (v19 - 1) & v19;
  }
  int64_t v20 = v15 + 1;
  if (v15 + 1 >= v35) {
    goto LABEL_29;
  }
  unint64_t v19 = *(void *)(v34 + 8 * v20);
  if (v19) {
    goto LABEL_15;
  }
  int64_t v20 = v15 + 2;
  if (v15 + 2 >= v35) {
    goto LABEL_29;
  }
  unint64_t v19 = *(void *)(v34 + 8 * v20);
  if (v19) {
    goto LABEL_15;
  }
  int64_t v20 = v15 + 3;
  if (v15 + 3 >= v35)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v19 = *(void *)(v34 + 8 * v20);
  if (v19)
  {
LABEL_15:
    int64_t v15 = v20;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v15 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v15 >= v35) {
      goto LABEL_29;
    }
    unint64_t v19 = *(void *)(v34 + 8 * v15);
    ++v20;
    if (v19) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006B0858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, __objc2_class **, void *(*)(uint64_t a1, uint64_t a2), unint64_t (*)(void *)))
{
  uint64_t v6 = v5;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v32 = a2 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a2 + 64);
  uint64_t v12 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v13 = 0;
  int64_t v33 = (unint64_t)(v9 + 63) >> 6;
  if (!v11) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    unint64_t v19 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v20 = *v19;
    uint64_t v21 = (void *)v19[1];
    uint64_t v22 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v23 = *(void *)v12;
    uint64_t v24 = *(void *)(*(void *)v12 + 16);
    swift_bridgeObjectRetain();
    if (!v24) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_1001806F8(v20, (uint64_t)v21);
    if ((v26 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      char v28 = self;
      _StringGuts.grow(_:)(79);
      v29._object = (void *)0x80000001007DBEF0;
      v29._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v29);
      v30._countAndFlagsBits = v20;
      v30._object = v21;
      String.append(_:)(v30);
      swift_bridgeObjectRelease();
      NSString v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v28 internalErrorWithDebugDescription:v31];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v27 = *(void *)(*(void *)(v23 + 56) + 8 * v25);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    a5(v22, a3, v27, a4, &qword_100909AF8, off_1008AA498, sub_100714EB0, sub_10030703C);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v11) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v13 >= v33) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v32 + 8 * v13);
    if (!v17) {
      break;
    }
LABEL_16:
    unint64_t v11 = (v17 - 1) & v17;
  }
  int64_t v18 = v13 + 1;
  if (v13 + 1 >= v33) {
    goto LABEL_29;
  }
  unint64_t v17 = *(void *)(v32 + 8 * v18);
  if (v17) {
    goto LABEL_15;
  }
  int64_t v18 = v13 + 2;
  if (v13 + 2 >= v33) {
    goto LABEL_29;
  }
  unint64_t v17 = *(void *)(v32 + 8 * v18);
  if (v17) {
    goto LABEL_15;
  }
  int64_t v18 = v13 + 3;
  if (v13 + 3 >= v33)
  {
LABEL_29:
    swift_release();
    return swift_release();
  }
  unint64_t v17 = *(void *)(v32 + 8 * v18);
  if (v17)
  {
LABEL_15:
    int64_t v13 = v18;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v33) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v32 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006B0BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      char v26 = self;
      _StringGuts.grow(_:)(79);
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      v27._object = (void *)0x80000001007DBEF0;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_10070E830(v20, a3, v25, (uint64_t (*)(id *))sub_1007425CC, (uint64_t)type metadata accessor for REMCDDueDateDeltaAlert, (uint64_t (*)(void *, uint64_t))sub_100715780, (void (*)(void))type metadata accessor for REMCDDueDateDeltaAlert, 0xD000000000000016, (void *)0x80000001007DC190, (uint64_t (*)(void))sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006B0FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      char v26 = self;
      _StringGuts.grow(_:)(79);
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      v27._object = (void *)0x80000001007DBEF0;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_10070E830(v20, a3, v25, (uint64_t (*)(id *))sub_1007401F0, (uint64_t)type metadata accessor for REMCDTemplateSection, (uint64_t (*)(void *, uint64_t))sub_100715BE8, (void (*)(void))type metadata accessor for REMCDTemplateSection, 0xD000000000000014, (void *)0x80000001007DBF90, (uint64_t (*)(void))sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006B13A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      char v26 = self;
      _StringGuts.grow(_:)(79);
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      v27._object = (void *)0x80000001007DBEF0;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_10070E830(v20, a3, v25, (uint64_t (*)(id *))sub_1007403B4, (uint64_t)type metadata accessor for REMCDSmartListSection, (uint64_t (*)(void *, uint64_t))sub_100716050, (void (*)(void))type metadata accessor for REMCDSmartListSection, 0xD000000000000015, (void *)0x80000001007DC050, (uint64_t (*)(void))sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006B1774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      char v26 = self;
      _StringGuts.grow(_:)(79);
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      v27._object = (void *)0x80000001007DBEF0;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_10070E830(v20, a3, v25, (uint64_t (*)(id *))sub_100740518, (uint64_t)type metadata accessor for REMCDListSection, (uint64_t (*)(void *, uint64_t))sub_1007164B8, (void (*)(void))type metadata accessor for REMCDListSection, 0xD000000000000010, (void *)0x80000001007DC070, (uint64_t (*)(void))sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006B1B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    int64_t v18 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      char v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_10070E830(v20, a3, v25, (uint64_t (*)(id *))sub_10074068C, (uint64_t)type metadata accessor for REMCDTemplate, (uint64_t (*)(void *, uint64_t))sub_100716920, (void (*)(void))type metadata accessor for REMCDTemplate, 0x6D655444434D4552, (void *)0xED00006574616C70, (uint64_t (*)(void))sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006B1F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v18, (uint64_t)v19);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      char v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v18;
      v28._object = v19;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_10070DC24(v20, a3, v25, (uint64_t (*)(id *))sub_1007409E8, (uint64_t)&unk_100910210, (uint64_t)off_1008AA4A0, (uint64_t (*)(void *, NSObject *))sub_100716D88, (uint64_t (*)(void))sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006B22B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = *v17;
    uint64_t v18 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v19, (uint64_t)v18);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      char v26 = self;
      _StringGuts.grow(_:)(79);
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      v27._object = (void *)0x80000001007DBEF0;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v19;
      v28._object = v18;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_10070E830(v20, a3, v25, (uint64_t (*)(id *))sub_100740B7C, (uint64_t)type metadata accessor for REMCDSavedReminder, (uint64_t (*)(void *, uint64_t))sub_1007171F0, (void (*)(void))type metadata accessor for REMCDSavedReminder, 0xD000000000000012, (void *)0x80000001007CC3C0, (uint64_t (*)(void))sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006B268C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v30 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  uint64_t v10 = result + 144;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = (void *)v17[1];
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v21 = *(void *)v10;
    uint64_t v22 = *(void *)(*(void *)v10 + 16);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1001806F8(v18, (uint64_t)v19);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      char v26 = self;
      _StringGuts.grow(_:)(79);
      v27._object = (void *)0x80000001007DBEF0;
      v27._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v27);
      v28._countAndFlagsBits = v18;
      v28._object = v19;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 internalErrorWithDebugDescription:v29];

      swift_willThrow();
      swift_release();
      return swift_release();
    }
    uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_10070DC24(v20, a3, v25, (uint64_t (*)(id *))sub_100741950, (uint64_t)&qword_100909AD0, (uint64_t)off_1008AA460, (uint64_t (*)(void *, NSObject *))sub_100717AC0, (uint64_t (*)(void))sub_10030703C);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v31) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v11 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

void sub_1006B2A28(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v234 = a2;
  uint64_t v7 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v7 - 8);
  uint64_t v236 = (uint64_t)&v200 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v239 = (uint64_t)&v200 - v10;
  uint64_t v241 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v241 - 8);
  __chkstk_darwin(v241);
  v238 = (char *)&v200 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v237 = (char *)&v200 - v14;
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v231 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  os_log_t v232 = (os_log_t)((char *)&v200 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = *(char ***)(a3 + 16);
  uint64_t v17 = *(void *)(a3 + 24);
  id v235 = *(id *)(a3 + 32);
  uint64_t v19 = qword_1009073A0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19 != -1) {
    goto LABEL_150;
  }
LABEL_2:
  uint64_t v20 = sub_10008E2DC(v15, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v246 = v20;
  uint64_t v21 = Logger.logObject.getter();
  LODWORD(v242) = static os_log_type_t.info.getter();
  BOOL v22 = os_log_type_enabled(v21, (os_log_type_t)v242);
  unint64_t v23 = a1 >> 62;
  uint64_t v240 = v15;
  unint64_t v247 = a1;
  v243 = (char **)a3;
  unint64_t v244 = a1 >> 62;
  v233 = (char *)v11;
  if (v22)
  {
    uint64_t v230 = (uint64_t)v18;
    uint64_t v18 = (char **)swift_slowAlloc();
    v229 = (void *)swift_slowAlloc();
    v248 = v229;
    *(_DWORD *)uint64_t v18 = 136446978;
    v251 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v248);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *((_WORD *)v18 + 6) = 2048;
    if (!v23)
    {
      uint64_t v24 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
    goto LABEL_154;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v23)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    NSString v29 = _swiftEmptyArrayStorage;
    if (!v11) {
      break;
    }
    v248 = _swiftEmptyArrayStorage;
    uint64_t v21 = &v248;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v11 & 0x8000000000000000) == 0)
    {
      uint64_t v17 = 0;
      a3 = a1 & 0xC000000000000001;
      uint64_t v18 = &selRef_intersectsSet_;
      while (v11 != v17)
      {
        if (a3) {
          id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v30 = *(id *)(a1 + 8 * v17 + 32);
        }
        id v31 = v30;
        sub_100695DC4([v31 remObjectID], (void (*)(void))type metadata accessor for REMCDSavedAttachment, 0xD000000000000014, (void *)0x80000001007DC170);
        if (v4)
        {

          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        ++v17;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v15 = v248[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        a1 = v247;
        if (v11 == v17)
        {
          NSString v29 = v248;
          uint64_t v15 = v240;
          unint64_t v23 = v244;
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      swift_once();
      goto LABEL_2;
    }
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    v251 = (void *)v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *((_WORD *)v18 + 11) = 2082;
    type metadata accessor for REMCDSavedAttachment();
    id v25 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v28 = v27;

    v251 = (void *)sub_1000C51B8(v26, v28, (uint64_t *)&v248);
    a1 = v247;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *((_WORD *)v18 + 16) = 2082;
    swift_bridgeObjectRetain();
    v251 = (void *)sub_1000C51B8(v230, v17, (uint64_t *)&v248);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v242, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v15 = v240;
    unint64_t v23 = v244;
  }
LABEL_19:
  uint64_t v32 = *(void *)(v245 + 96);
  if (v32 > 1)
  {
    if ((unint64_t)(v32 - 2) >= 3 && v32 != 4499 && v32 != 4599)
    {
LABEL_157:
      (*(void (**)(os_log_t, uint64_t, uint64_t))(v231 + 16))(v232, v246, v15);
      sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
      sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
      sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
      __break(1u);
      JUMPOUT(0x1006B4F18);
    }
LABEL_26:
    int64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v17 = swift_slowAlloc();
      v248 = (void *)swift_slowAlloc();
      uint64_t v242 = (uint64_t)v29;
      *(_DWORD *)uint64_t v17 = 136315138;
      os_log_t v232 = (os_log_t)(v17 + 4);
      uint64_t v18 = (char **)[(id)type metadata accessor for REMCDSavedAttachment() cdEntityName];
      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v37 = v36;

      v251 = (void *)sub_1000C51B8(v35, v37, (uint64_t *)&v248);
      NSString v29 = (void *)v242;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Performing fetch during upsert {CDType: %s}", (uint8_t *)v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    int64_t v38 = v243;
    unint64_t v23 = v244;
    uint64_t v39 = sub_100710C98((uint64_t)v29, (uint64_t)v243);
    swift_bridgeObjectRelease();
    if (v4)
    {
      swift_bridgeObjectRelease();
      return;
    }
    v229 = v39;
    a1 = v247;
    uint64_t v41 = v247 & 0xFFFFFFFFFFFFFF8;
    if (!v23) {
      goto LABEL_31;
    }
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v21)
    {
LABEL_134:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_38;
  }
  if (!v32) {
    goto LABEL_26;
  }
  if (v32 != 1) {
    goto LABEL_157;
  }
  swift_bridgeObjectRelease();
  v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.debug.getter();
  uint64_t v17 = v43;
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc();
    v248 = (void *)swift_slowAlloc();
    *(_DWORD *)v44 = 136315138;
    uint64_t v242 = (uint64_t)(v44 + 4);
    id v45 = [(id)type metadata accessor for REMCDSavedAttachment() cdEntityName];
    uint64_t v18 = (char **)static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v47 = v46;

    a1 = v247;
    v251 = (void *)sub_1000C51B8((uint64_t)v18, v47, (uint64_t *)&v248);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unint64_t v23 = v244;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v17, "Skipping fetch during upsert {CDType: %s}", v44, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  int64_t v38 = v243;
  v229 = (void *)sub_1002EE780((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v41 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v23) {
    goto LABEL_37;
  }
LABEL_31:
  uint64_t v21 = *(NSObject **)(v41 + 16);
  if (!v21) {
    goto LABEL_134;
  }
LABEL_38:
  v48 = 0;
  uint64_t v218 = v245 + 24;
  v221 = (char *)(v38 + 6);
  v217 = v38 + 7;
  unint64_t v224 = a1 & 0xC000000000000001;
  uint64_t v216 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v215 = a1 + 32;
  v226 = (void **)(v233 + 8);
  v225 = &v252;
  v220 = v233 + 56;
  v219 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v233 + 48);
  v214 = (char *)&v251 + 4;
  v223 = (void *)0x80000001007DC170;
  *(void *)&long long v40 = 136446978;
  long long v213 = v40;
  *(void *)&long long v40 = 136446210;
  long long v228 = v40;
  *(void *)&long long v40 = 136447490;
  long long v210 = v40;
  *(void *)&long long v40 = 136447234;
  long long v208 = v40;
  *(void *)&long long v40 = 136446466;
  long long v211 = v40;
  v212 = (char *)&type metadata for Any + 8;
  v222 = v21;
  while (1)
  {
    if (v224)
    {
      id v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v51 = __OFADD__(v48, 1);
      v52 = ((char *)&v48->isa + 1);
      if (v51) {
        goto LABEL_153;
      }
      goto LABEL_47;
    }
    if ((unint64_t)v48 >= *(void *)(v216 + 16)) {
      break;
    }
    id v50 = *(id *)(v215 + 8 * (void)v48);
    BOOL v51 = __OFADD__(v48, 1);
    v52 = ((char *)&v48->isa + 1);
    if (v51) {
      goto LABEL_153;
    }
LABEL_47:
    v53 = (char *)v50;
    id v54 = [v53 remObjectID];
    v55 = (char **)sub_100695DC4(v54, (void (*)(void))type metadata accessor for REMCDSavedAttachment, 0xD000000000000014, v223);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    v243 = v55;
    v227 = v52;
    unint64_t v244 = 0;

    v233 = v53;
    id v56 = [v53 accountID];
    id v57 = [v56 uuid];

    v58 = v237;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v59 = UUID.uuidString.getter();
    uint64_t v61 = v60;
    v62 = (void (*)(char *, uint64_t))*v226;
    v63 = v58;
    uint64_t v64 = v241;
    ((void (*)(char *, uint64_t))*v226)(v63, v241);
    id v65 = [self localInternalAccountID];
    id v66 = [v65 uuid];

    v67 = v238;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v68 = UUID.uuidString.getter();
    uint64_t v70 = v69;
    uint64_t v242 = (uint64_t)v62;
    v62(v67, v64);
    if (v59 == v68 && v61 == v70)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v71 = v245;
      uint64_t v17 = v247;
      v72 = v229;
      uint64_t v18 = v243;
    }
    else
    {
      char v73 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v71 = v245;
      uint64_t v17 = v247;
      v72 = v229;
      uint64_t v18 = v243;
      if ((v73 & 1) == 0) {
        goto LABEL_57;
      }
    }
    int v74 = 0x7FFFFFFF;
    unint64_t v75 = v244;
    switch(*(unsigned __int16 *)(v71 + 68) >> 14)
    {
      case 2:
        int v74 = *(_DWORD *)(v71 + 64);
        break;
      case 3:
        break;
      default:
        int v74 = 2147483519;
        break;
    }
    sub_100662770(2, v74);
    if (v75)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v244 = 0;
    uint64_t v71 = v245;
LABEL_57:
    v76._rawValue = &off_1008B2F20;
    char v77 = sub_100698D0C(v76, (void (*)(void))type metadata accessor for REMCDSavedAttachment);
    if (v72[2])
    {
      v78 = v18;
      unint64_t v79 = sub_10030703C(v78);
      if (v80)
      {
        id v81 = *(id *)(v72[7] + 8 * v79);

        unint64_t v23 = v78;
        v82 = Logger.logObject.getter();
        os_log_type_t v83 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v82, v83))
        {
          uint64_t v17 = swift_slowAlloc();
          uint64_t v18 = (char **)swift_slowAlloc();
          v243 = (char **)swift_slowAlloc();
          v248 = v243;
          *(_DWORD *)uint64_t v17 = v211;
          v251 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v248);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v17 + 12) = 2114;
          uint64_t v242 = (uint64_t)v81;
          v251 = (void *)v23;
          id v49 = (id)v23;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v18 = (char *)v23;

          _os_log_impl((void *)&_mh_execute_header, v82, v83, "[%{public}s] Skipping merge() and updateChangeCount() since this ingestable is immutable and is not a new insertion {objectID: %{public}@}", (uint8_t *)v17, 0x16u);
          sub_100094134((uint64_t *)&unk_10090A040);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        goto LABEL_40;
      }
    }
    if (v77 == 2)
    {
LABEL_140:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      [self noSuchObjectErrorWithObjectID:v18];
      swift_willThrow();

      return;
    }
    if (v77) {
      uint64_t v84 = 6911093;
    }
    else {
      uint64_t v84 = 0x44497463656A626FLL;
    }
    if (v77) {
      unint64_t v85 = 0xE300000000000000;
    }
    else {
      unint64_t v85 = 0xE800000000000000;
    }
    if (v84 == 0x44497463656A626FLL && v85 == 0xE800000000000000)
    {
LABEL_71:
      swift_bridgeObjectRelease_n();
      goto LABEL_76;
    }
    char v86 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v86 & 1) == 0)
    {
      if (v84 == 6911093 && v85 == 0xE300000000000000) {
        goto LABEL_71;
      }
      char v87 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v87 & 1) == 0) {
        goto LABEL_140;
      }
    }
LABEL_76:
    v88 = *(void **)(v71 + 88);
    type metadata accessor for REMCDSavedAttachment();
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    id v90 = [ObjCClassFromMetadata entity];
    id v91 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v90 insertIntoManagedObjectContext:v88];
    id v92 = v235;
    [v88 assignObject:v91 toPersistentStore:v92];

    id v93 = v91;
    id v94 = [v18 uuid];
    uint64_t v95 = v239;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v96 = v241;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))v220)(v95, 0, 1, v241);
    uint64_t v97 = v236;
    sub_1001248EC(v95, v236);
    int v98 = (*v219)(v97, 1, v96);
    Class isa = 0;
    if (v98 != 1)
    {
      uint64_t v100 = v236;
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      ((void (*)(uint64_t, uint64_t))v242)(v100, v241);
    }
    [v93 setIdentifier:isa];

    sub_1001260DC(v239);
    v101 = v18;
    swift_retain_n();
    id v102 = v93;
    v103 = v101;
    v104 = (char **)v102;
    v105 = Logger.logObject.getter();
    os_log_type_t v106 = static os_log_type_t.default.getter();
    int v107 = v106;
    BOOL v108 = os_log_type_enabled(v105, v106);
    v243 = v104;
    if (v108)
    {
      uint64_t v109 = swift_slowAlloc();
      v110 = (void *)swift_slowAlloc();
      uint64_t v242 = swift_slowAlloc();
      v248 = (void *)v242;
      *(_DWORD *)uint64_t v109 = v213;
      v251 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v248);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v109 + 12) = 2082;
      sub_10010B4E8(v218, (uint64_t)v250);
      sub_10073F754((uint64_t)v250, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      LODWORD(v232) = v107;
      uint64_t v111 = sub_100696CF4();
      unint64_t v113 = v112;
      sub_10073F754((uint64_t)v250, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      v251 = (void *)sub_1000C51B8(v111, v113, (uint64_t *)&v248);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v109 + 22) = 2114;
      v251 = v103;
      v114 = v103;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v110 = v103;

      *(_WORD *)(v109 + 32) = 2112;
      v115 = [v243 objectID];
      v251 = v115;
      v104 = v243;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v110[1] = v115;

      _os_log_impl((void *)&_mh_execute_header, v105, (os_log_type_t)v232, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v109, 0x2Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    swift_beginAccess();
    uint64_t v17 = v103;
    sub_1001A6B7C((uint64_t)v104, v17);
    swift_endAccess();

    uint64_t v116 = 2;
    uint64_t v242 = 2;
    v117 = &byte_1008B6790;
    do
    {
      if (((*(unsigned int *)(v71 + 64) | ((unint64_t)*(unsigned __int16 *)(v71 + 68) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
      {
        char v118 = *v117;
        v119 = Logger.logObject.getter();
        os_log_type_t v120 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v119, v120))
        {
          uint64_t v121 = swift_slowAlloc();
          v248 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v121 = v228;
          LOBYTE(v251) = v118;
          uint64_t v122 = String.init<A>(describing:)();
          *(void *)(v121 + 4) = sub_1000C51B8(v122, v123, (uint64_t *)&v248);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v119, v120, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v121, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
      }
      LODWORD(v23) = *(_DWORD *)(v71 + 64);
      if (*(unsigned __int16 *)(v71 + 68) >> 14 == 2 && (*(_DWORD *)(v71 + 64) & 1) == 0)
      {
        if (qword_100907AE0 != -1) {
          goto LABEL_156;
        }
        goto LABEL_136;
      }
      ++v117;
      --v116;
    }
    while (v116);
    swift_retain_n();
    id v125 = (id)v17;
    v126 = v243;
    v127 = (char **)v125;
    uint64_t v18 = v126;
    v128 = Logger.logObject.getter();
    int v129 = static os_log_type_t.default.getter();
    BOOL v130 = os_log_type_enabled(v128, (os_log_type_t)v129);
    v243 = v127;
    if (v130)
    {
      LODWORD(v230) = v129;
      os_log_t v232 = v128;
      uint64_t v131 = swift_slowAlloc();
      v132 = (void *)swift_slowAlloc();
      uint64_t v231 = swift_slowAlloc();
      v248 = (void *)v231;
      *(_DWORD *)uint64_t v131 = v210;
      v251 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v248);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v131 + 12) = 2082;
      sub_10010B4E8(v218, (uint64_t)v249);
      sub_10073F754((uint64_t)v249, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v133 = sub_100696CF4();
      unint64_t v135 = v134;
      sub_10073F754((uint64_t)v249, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      v251 = (void *)sub_1000C51B8(v133, v135, (uint64_t *)&v248);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v131 + 22) = 2114;
      v251 = v127;
      v136 = v127;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v132 = v127;

      *(_WORD *)(v131 + 32) = 2112;
      v137 = [v18 objectID];
      v251 = v137;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v209 = v132;
      v132[1] = v137;

      *(_WORD *)(v131 + 42) = 2082;
      uint64_t v138 = 2;
      v251 = _swiftEmptyArrayStorage;
      sub_1001DE058(0, 2, 0);
      v139 = v251;
      unint64_t v140 = v251[2];
      uint64_t v141 = 2 * v140;
      v142 = &byte_1008B6790;
      do
      {
        if (*v142) {
          uint64_t v143 = 6911093;
        }
        else {
          uint64_t v143 = 0x44497463656A626FLL;
        }
        if (*v142) {
          unint64_t v144 = 0xE300000000000000;
        }
        else {
          unint64_t v144 = 0xE800000000000000;
        }
        v251 = v139;
        unint64_t v145 = v139[3];
        unint64_t v146 = v140 + 1;
        if (v140 >= v145 >> 1)
        {
          sub_1001DE058(v145 > 1, v140 + 1, 1);
          v139 = v251;
        }
        v139[2] = v146;
        v147 = &v139[v141];
        v147[4] = v143;
        v147[5] = v144;
        v141 += 2;
        ++v142;
        unint64_t v140 = v146;
        --v138;
      }
      while (v138);
      a1 = v247;
      uint64_t v148 = v245;
      uint64_t v149 = Array.description.getter();
      unint64_t v151 = v150;
      swift_bridgeObjectRelease();
      v251 = (void *)sub_1000C51B8(v149, v151, (uint64_t *)&v248);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v131 + 52) = 1024;
      int v152 = *(unsigned __int8 *)(v148 + 104);
      swift_release();
      LODWORD(v251) = v152;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      os_log_t v153 = v232;
      _os_log_impl((void *)&_mh_execute_header, v232, (os_log_type_t)v230, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v131, 0x3Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
      a1 = v247;
    }
    uint64_t v17 = (uint64_t)v233;
    unint64_t v154 = v244;
    sub_1001B3D18(v233, v18);
    if (v154)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v244 = 0;
    id v155 = [v18 changedValues];
    uint64_t v156 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    v157 = v217;
    swift_beginAccess();
    v158 = v243;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v251 = (void *)*v157;
    void *v157 = 0x8000000000000000;
    unint64_t v23 = v156;
    sub_1002C4FAC(v156, v158, isUniquelyReferenced_nonNull_native);
    void *v157 = v251;

    swift_bridgeObjectRelease();
    swift_endAccess();
    int v160 = *(unsigned __int8 *)(v245 + 104);
    if (v242 && (v160 & 1) != 0)
    {
      v161 = v18;
      swift_bridgeObjectRelease();
      [v161 updateChangeCount];

      goto LABEL_40;
    }
    v162 = v158;
    swift_retain_n();
    v163 = v162;
    v164 = v18;
    uint64_t v18 = (char **)v23;
    swift_bridgeObjectRetain();
    v165 = Logger.logObject.getter();
    LODWORD(v209) = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v165, (os_log_type_t)v209))
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      goto LABEL_40;
    }
    os_log_t v205 = v165;
    v206 = v164;
    uint64_t v166 = swift_slowAlloc();
    v207 = (void *)swift_slowAlloc();
    v203 = (void *)swift_slowAlloc();
    v248 = v203;
    *(_DWORD *)uint64_t v166 = v208;
    v251 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v248);
    LOWORD(v23) = (_WORD)v225;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v166 + 12) = 1024;
    swift_release();
    LODWORD(v251) = v160;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v166 + 18) = 1024;
    uint64_t v4 = 1;
    LODWORD(v251) = 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v166 + 24) = 2114;
    v251 = v163;
    a3 = v163;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v207 = v163;

    id v202 = (id)a3;
    v204 = (uint8_t *)v166;
    *(_WORD *)(v166 + 34) = 2082;
    uint64_t v15 = (uint64_t)v18[2];
    if (!v15) {
      goto LABEL_133;
    }
    v251 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1001DE058(0, v15, 0);
    v167 = v251;
    uint64_t v11 = sub_10072617C((uint64_t)v18);
    uint64_t v17 = v168;
    v169 = 0;
    os_log_t v170 = (os_log_t)(v18 + 8);
    char v171 = *((unsigned char *)v18 + 32);
    uint64_t v231 = v168;
    v201 = v18 + 11;
    uint64_t v230 = v15;
    os_log_t v232 = (os_log_t)(v18 + 8);
    while (2)
    {
      if (v11 < 0 || v11 >= 1 << v171) {
        goto LABEL_144;
      }
      unint64_t v23 = (unint64_t)v11 >> 6;
      a1 = 1 << v11;
      if (((uint64_t)v170[(unint64_t)v11 >> 6].isa & (1 << v11)) == 0) {
        goto LABEL_145;
      }
      if (*((_DWORD *)v18 + 9) != v17) {
        goto LABEL_146;
      }
      uint64_t v174 = (uint64_t)&v18[6][16 * v11];
      v175 = *(char ***)v174;
      uint64_t v15 = *(void *)(v174 + 8);
      uint64_t v242 = (uint64_t)v169;
      v243 = v175;
      v251 = v167;
      a3 = v167[2];
      unint64_t v176 = v167[3];
      swift_bridgeObjectRetain();
      if (a3 >= v176 >> 1)
      {
        sub_1001DE058(v176 > 1, a3 + 1, 1);
        v167 = v251;
      }
      v167[2] = a3 + 1;
      v177 = &v167[2 * a3];
      v177[4] = v243;
      v177[5] = v15;
      char v171 = *((unsigned char *)v18 + 32);
      uint64_t v4 = 1;
      unint64_t v172 = 1 << v171;
      if (v11 >= 1 << v171) {
        goto LABEL_147;
      }
      os_log_t v170 = v232;
      Class v178 = v232[v23].isa;
      if (((unint64_t)v178 & a1) == 0) {
        goto LABEL_148;
      }
      if (*((_DWORD *)v18 + 9) != v17) {
        goto LABEL_149;
      }
      unint64_t v179 = (unint64_t)v178 & (-2 << (v11 & 0x3F));
      if (v179)
      {
        unint64_t v172 = __clz(__rbit64(v179)) | v11 & 0xFFFFFFFFFFFFFFC0;
        a1 = v247;
        uint64_t v15 = v230;
        uint64_t v173 = v242;
      }
      else
      {
        v180 = (char *)(v23 + 1);
        unint64_t v181 = (v172 + 63) >> 6;
        a1 = v247;
        uint64_t v15 = v230;
        uint64_t v173 = v242;
        if (v23 + 1 < v181)
        {
          Class v182 = v232[(void)v180].isa;
          if (v182) {
            goto LABEL_125;
          }
          v180 = (char *)(v23 + 2);
          if (v23 + 2 < v181)
          {
            Class v182 = v232[(void)v180].isa;
            if (v182)
            {
LABEL_125:
              unint64_t v172 = __clz(__rbit64((unint64_t)v182)) + ((void)v180 << 6);
            }
            else
            {
              while (v181 - 3 != v23)
              {
                Class v182 = (Class)v201[v23++];
                if (v182)
                {
                  v180 = (char *)(v23 + 2);
                  goto LABEL_125;
                }
              }
            }
          }
        }
      }
      v169 = (void *)(v173 + 1);
      uint64_t v17 = v231;
      uint64_t v11 = v172;
      if (v169 != (void *)v15) {
        continue;
      }
      break;
    }
    swift_bridgeObjectRelease();
LABEL_133:
    uint64_t v17 = (uint64_t)v233;
    v183 = v204;
    uint64_t v184 = Array.description.getter();
    unint64_t v186 = v185;
    swift_bridgeObjectRelease();
    v251 = (void *)sub_1000C51B8(v184, v186, (uint64_t *)&v248);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v187 = v205;
    _os_log_impl((void *)&_mh_execute_header, v205, (os_log_type_t)v209, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v183, 0x2Cu);
    sub_100094134((uint64_t *)&unk_10090A040);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v188 = v206;
LABEL_40:
    uint64_t v21 = v222;
    v48 = v227;
    uint64_t v4 = v244;
    if (v227 == v222) {
      goto LABEL_134;
    }
  }
  __break(1u);
LABEL_156:
  swift_once();
LABEL_136:
  sub_10008E2DC(v240, (uint64_t)qword_100920A70);
  v189 = Logger.logObject.getter();
  os_log_type_t v190 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v189, v190))
  {
    uint64_t v191 = swift_slowAlloc();
    v248 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v191 = v211;
    uint64_t v192 = sub_100662CC0(1);
    v251 = (void *)sub_1000C51B8(v192, v193, (uint64_t *)&v248);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v191 + 12) = 2082;
    uint64_t v194 = sub_100662CC0(v23);
    v251 = (void *)sub_1000C51B8(v194, v195, (uint64_t *)&v248);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v189, v190, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v191, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  v196 = self;
  NSString v197 = String._bridgeToObjectiveC()();
  sub_100662CC0(1);
  NSString v198 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100662CC0(v23);
  NSString v199 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v196 unauthorizedErrorWithMissingEntitlement:v197 requestedAccessLevel:v198 currentAccesslevel:v199];

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1006B4F28(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v248 = a2;
  uint64_t v7 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v7 - 8);
  uint64_t v245 = (uint64_t)&v209 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v209 - v10;
  uint64_t v249 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v249 - 8);
  __chkstk_darwin(v249);
  unint64_t v247 = (char *)&v209 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v246 = (char *)&v209 - v15;
  unint64_t v16 = type metadata accessor for Logger();
  os_log_t v240 = *(os_log_t *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v241 = (char *)&v209 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (__objc2_class **)a3[2];
  unint64_t v18 = a3[3];
  id v251 = a3;
  id v242 = (id)a3[4];
  uint64_t v20 = qword_1009073A0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    goto LABEL_168;
  }
LABEL_2:
  uint64_t v21 = sub_10008E2DC(v16, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v254 = v21;
  BOOL v22 = Logger.logObject.getter();
  LODWORD(v250) = static os_log_type_t.info.getter();
  BOOL v23 = os_log_type_enabled(v22, (os_log_type_t)v250);
  uint64_t v24 = a1 >> 62;
  unint64_t v255 = a1;
  v243 = v11;
  unint64_t v252 = a1 >> 62;
  unint64_t v236 = v16;
  unint64_t v244 = (char *)v12;
  if (v23)
  {
    a1 = swift_slowAlloc();
    uint64_t v238 = swift_slowAlloc();
    v256 = (void *)v238;
    *(_DWORD *)a1 = 136446978;
    v259 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v256);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(a1 + 12) = 2048;
    uint64_t v239 = (char *)v19;
    if (!v24)
    {
      uint64_t v25 = *(void *)((v255 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
    goto LABEL_172;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  while (1)
  {
    unint64_t v30 = v253;
    if (v24)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v12) {
      break;
    }
    v256 = _swiftEmptyArrayStorage;
    BOOL v22 = &v256;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v12 & 0x8000000000000000) == 0)
    {
      unint64_t v18 = 0;
      unint64_t v16 = a1 & 0xC000000000000001;
      uint64_t v19 = off_1008AA448;
      while (v12 != v18)
      {
        if (v16) {
          id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v31 = *(id *)(a1 + 8 * v18 + 32);
        }
        id v32 = v31;
        sub_100694DE8([v32 remObjectID], (unint64_t *)&qword_10090DC20);
        if (v4)
        {

          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        ++v18;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v11 = (char *)v256[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        a1 = v255;
        if (v12 == v18)
        {
          int64_t v33 = v256;
          uint64_t v24 = v252;
          unint64_t v30 = v253;
          goto LABEL_20;
        }
      }
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
LABEL_167:
      __break(1u);
LABEL_168:
      swift_once();
      goto LABEL_2;
    }
    __break(1u);
LABEL_171:
    __break(1u);
LABEL_172:
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    v259 = (void *)v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(a1 + 22) = 2082;
    sub_1000963CC(0, (unint64_t *)&qword_10090DC20);
    id v26 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v29 = v28;

    v259 = (void *)sub_1000C51B8(v27, v29, (uint64_t *)&v256);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(a1 + 32) = 2082;
    swift_bridgeObjectRetain();
    v259 = (void *)sub_1000C51B8((uint64_t)v239, v18, (uint64_t *)&v256);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v250, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)a1, 0x2Au);
    uint64_t v11 = (char *)v238;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a1 = v255;
    uint64_t v24 = v252;
  }
  int64_t v33 = _swiftEmptyArrayStorage;
LABEL_20:
  uint64_t v34 = *(void *)(v30 + 96);
  if (v34 > 1)
  {
    if ((unint64_t)(v34 - 2) >= 3 && v34 != 4499 && v34 != 4599)
    {
LABEL_175:
      ((void (*)(char *, uint64_t, unint64_t))v240[2].isa)(v241, v254, v236);
      sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
      sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
      sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
      __break(1u);
      JUMPOUT(0x1006B77A8);
    }
LABEL_27:
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v250 = (uint64_t)v33;
      unint64_t v37 = (uint8_t *)swift_slowAlloc();
      v256 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v37 = 136315138;
      uint64_t v241 = (char *)(v37 + 4);
      id v38 = [self cdEntityName];
      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v41 = v40;

      a1 = v255;
      v259 = (void *)sub_1000C51B8(v39, v41, (uint64_t *)&v256);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      int64_t v33 = (void *)v250;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Performing fetch during upsert {CDType: %s}", v37, 0xCu);
      swift_arrayDestroy();
      uint64_t v24 = v252;
      swift_slowDealloc();
      unint64_t v30 = v253;
      swift_slowDealloc();
    }

    unint64_t v18 = (unint64_t)v251;
    v42 = (char *)sub_100711568((uint64_t)v33, (uint64_t)v251);
    swift_bridgeObjectRelease();
    if (v4)
    {
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v241 = v42;
    uint64_t v44 = a1 & 0xFFFFFFFFFFFFFF8;
    if (!v24) {
      goto LABEL_32;
    }
LABEL_38:
    swift_bridgeObjectRetain();
    BOOL v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v22)
    {
LABEL_153:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_39;
  }
  if (!v34) {
    goto LABEL_27;
  }
  if (v34 != 1) {
    goto LABEL_175;
  }
  swift_bridgeObjectRelease();
  id v45 = Logger.logObject.getter();
  os_log_type_t v46 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v45, v46))
  {
    unint64_t v47 = (uint8_t *)swift_slowAlloc();
    v256 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v47 = 136315138;
    uint64_t v250 = (uint64_t)(v47 + 4);
    id v48 = [self cdEntityName];
    uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v51 = v50;

    uint64_t v52 = v49;
    a1 = v255;
    v259 = (void *)sub_1000C51B8(v52, v51, (uint64_t *)&v256);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v24 = v252;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "Skipping fetch during upsert {CDType: %s}", v47, 0xCu);
    swift_arrayDestroy();
    unint64_t v30 = v253;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  unint64_t v18 = (unint64_t)v251;
  uint64_t v241 = (char *)sub_1002EEAD8((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v44 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v24) {
    goto LABEL_38;
  }
LABEL_32:
  BOOL v22 = *(NSObject **)(v44 + 16);
  if (!v22) {
    goto LABEL_153;
  }
LABEL_39:
  v53 = 0;
  uint64_t v227 = v30 + 24;
  unint64_t v230 = v18 + 48;
  v226 = (void **)(v18 + 56);
  unint64_t v232 = a1 & 0xC000000000000001;
  uint64_t v225 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v224 = a1 + 32;
  uint64_t v234 = v244 + 8;
  v233 = &v260;
  v229 = v244 + 56;
  long long v228 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v244 + 48);
  v223 = (char *)&v259 + 4;
  *(void *)&long long v43 = 136446978;
  long long v222 = v43;
  *(void *)&long long v43 = 136446210;
  long long v237 = v43;
  *(void *)&long long v43 = 136447490;
  long long v219 = v43;
  *(void *)&long long v43 = 136447234;
  long long v217 = v43;
  *(void *)&long long v43 = 136446466;
  long long v220 = v43;
  v221 = (char *)&type metadata for Any + 8;
  uint64_t v231 = v22;
  while (1)
  {
    if (v232)
    {
      id v54 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v55 = __OFADD__(v53, 1);
      id v56 = ((char *)&v53->isa + 1);
      if (v55) {
        goto LABEL_171;
      }
    }
    else
    {
      if ((unint64_t)v53 >= *(void *)(v225 + 16))
      {
        __break(1u);
LABEL_174:
        swift_once();
        goto LABEL_155;
      }
      id v54 = *(id *)(v224 + 8 * (void)v53);
      BOOL v55 = __OFADD__(v53, 1);
      id v56 = ((char *)&v53->isa + 1);
      if (v55) {
        goto LABEL_171;
      }
    }
    id v57 = (char *)v54;
    v58 = sub_100694DE8([v57 remObjectID], (unint64_t *)&qword_10090DC20);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    id v251 = v58;
    id v235 = v56;
    unint64_t v252 = 0;
    unint64_t v244 = v57;

    id v59 = [*(id *)(v248 + 16) uuid];
    uint64_t v60 = v246;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v61 = UUID.uuidString.getter();
    uint64_t v63 = v62;
    uint64_t v64 = *(void (**)(char *, uint64_t))v234;
    uint64_t v65 = v249;
    (*(void (**)(char *, uint64_t))v234)(v60, v249);
    id v66 = [self localInternalAccountID];
    id v67 = [v66 uuid];

    uint64_t v68 = v247;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v69 = UUID.uuidString.getter();
    uint64_t v71 = v70;
    v64(v68, v65);
    if (v61 != v69) {
      goto LABEL_50;
    }
    if (v63 == v71)
    {
      swift_bridgeObjectRelease_n();
      id v72 = v251;
    }
    else
    {
LABEL_50:
      char v73 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v74 = v241;
      id v72 = v251;
      if ((v73 & 1) == 0)
      {
        unint64_t v18 = v253;
        goto LABEL_57;
      }
    }
    unint64_t v75 = v252;
    unint64_t v18 = v253;
    int v76 = 0x7FFFFFFF;
    switch(*(unsigned __int16 *)(v253 + 68) >> 14)
    {
      case 2:
        int v76 = *(_DWORD *)(v253 + 64);
        break;
      case 3:
        break;
      default:
        int v76 = 2147483519;
        break;
    }
    sub_100662770(2, v76);
    if (v75)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v252 = 0;
    int v74 = v241;
LABEL_57:
    v77._rawValue = &off_1008B4370;
    int v78 = sub_100698378(v77, (unint64_t *)&qword_10090DC20);
    if (!*((void *)v74 + 2)) {
      goto LABEL_62;
    }
    id v79 = v72;
    unint64_t v80 = sub_10030703C(v79);
    if ((v81 & 1) == 0) {
      break;
    }
    id v82 = *(id *)(*((void *)v74 + 7) + 8 * v80);

    uint64_t v24 = (uint64_t)v79;
    os_log_type_t v83 = Logger.logObject.getter();
    os_log_type_t v84 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v83, v84))
    {
      unint64_t v18 = swift_slowAlloc();
      unint64_t v85 = (void *)swift_slowAlloc();
      uint64_t v250 = swift_slowAlloc();
      v256 = (void *)v250;
      *(_DWORD *)unint64_t v18 = v220;
      v259 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v256);
      id v251 = v82;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v18 + 12) = 2114;
      v259 = (void *)v24;
      id v86 = (id)v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v85 = v24;

      _os_log_impl((void *)&_mh_execute_header, v83, v84, "[%{public}s] Skipping merge() and updateChangeCount() since this ingestable is immutable and is not a new insertion {objectID: %{public}@}", (uint8_t *)v18, 0x16u);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_100;
    }

LABEL_136:
    a1 = v255;
    BOOL v22 = v231;
    v53 = v235;
    uint64_t v4 = v252;
    if (v235 == v231) {
      goto LABEL_153;
    }
  }

LABEL_62:
  unint64_t v87 = 0xE800000000000000;
  uint64_t v88 = 0x44497463656A626FLL;
  switch((char)v78)
  {
    case 0:
      goto LABEL_64;
    case 1:
    case 3:
      goto LABEL_67;
    case 2:
      unint64_t v87 = 0xE400000000000000;
      uint64_t v88 = 1701667182;
LABEL_64:
      if (v88 == 0x44497463656A626FLL && v87 == 0xE800000000000000)
      {
LABEL_66:
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_67:
        char v89 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v89 & 1) == 0)
        {
          unint64_t v184 = 0xE800000000000000;
          uint64_t v185 = 0x44497463656A626FLL;
          switch(v78)
          {
            case 0:
              goto LABEL_130;
            case 1:
              uint64_t v185 = 0x6E6F697461657263;
              unint64_t v184 = 0xEC00000065746144;
              goto LABEL_130;
            case 2:
              unint64_t v184 = 0xE400000000000000;
              uint64_t v185 = 1701667182;
              goto LABEL_130;
            case 3:
              unint64_t v184 = 0xE400000000000000;
              uint64_t v185 = 1701869940;
LABEL_130:
              if (v185 == 0x6E6F697461657263 && v184 == 0xEC00000065746144) {
                goto LABEL_66;
              }
              char v186 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v186 & 1) == 0)
              {
                unint64_t v192 = 0xE800000000000000;
                uint64_t v193 = 0x44497463656A626FLL;
                switch(v78)
                {
                  case 0:
                    goto LABEL_142;
                  case 1:
                    uint64_t v193 = 0x6E6F697461657263;
                    unint64_t v192 = 0xEC00000065746144;
                    goto LABEL_142;
                  case 2:
                    unint64_t v192 = 0xE400000000000000;
                    uint64_t v193 = 1701667182;
                    goto LABEL_142;
                  case 3:
                    unint64_t v192 = 0xE400000000000000;
                    uint64_t v193 = 1701869940;
LABEL_142:
                    if (v193 == 1701667182 && v192 == 0xE400000000000000) {
                      goto LABEL_66;
                    }
                    char v194 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v194 & 1) == 0)
                    {
                      unint64_t v195 = 0xE800000000000000;
                      uint64_t v196 = 0x44497463656A626FLL;
                      switch(&unk_1008B6000)
                      {
                        case 0u:
                          goto LABEL_149;
                        case 1u:
                          uint64_t v196 = 0x6E6F697461657263;
                          unint64_t v195 = 0xEC00000065746144;
                          goto LABEL_149;
                        case 2u:
                          unint64_t v195 = 0xE400000000000000;
                          uint64_t v196 = 1701667182;
                          goto LABEL_149;
                        case 3u:
                          unint64_t v195 = 0xE400000000000000;
                          uint64_t v196 = 1701869940;
LABEL_149:
                          if (v196 == 1701869940 && v195 == 0xE400000000000000) {
                            goto LABEL_66;
                          }
                          char v197 = _stringCompareWithSmolCheck(_:_:expecting:)();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          if ((v197 & 1) == 0) {
                            goto LABEL_152;
                          }
                          goto LABEL_68;
                        default:
                          goto LABEL_152;
                      }
                    }
                    break;
                  default:
                    goto LABEL_152;
                }
              }
              break;
            default:
              goto LABEL_152;
          }
        }
      }
LABEL_68:
      id v90 = *(void **)(v18 + 88);
      sub_1000963CC(0, (unint64_t *)&qword_10090DC20);
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      id v92 = [ObjCClassFromMetadata entity];
      id v93 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v92 insertIntoManagedObjectContext:v90];
      id v94 = v242;
      [v90 assignObject:v93 toPersistentStore:v94];

      id v95 = v93;
      id v96 = [v72 uuid];
      uint64_t v97 = (uint64_t)v243;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v98 = v249;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))v229)(v97, 0, 1, v249);
      uint64_t v99 = v245;
      sub_1001248EC(v97, v245);
      int v100 = (*v228)(v99, 1, v98);
      Class isa = 0;
      if (v100 != 1)
      {
        uint64_t v102 = v245;
        Class isa = UUID._bridgeToObjectiveC()().super.isa;
        v64((char *)v102, v249);
      }
      [v95 setIdentifier:isa];

      sub_1001260DC(v97);
      id v103 = v72;
      swift_retain_n();
      id v104 = v95;
      v105 = v103;
      id v106 = v104;
      unint64_t v107 = v18;
      BOOL v108 = Logger.logObject.getter();
      os_log_type_t v109 = static os_log_type_t.default.getter();
      int v110 = v109;
      BOOL v111 = os_log_type_enabled(v108, v109);
      id v251 = v106;
      if (v111)
      {
        uint64_t v112 = swift_slowAlloc();
        unint64_t v113 = (void *)swift_slowAlloc();
        uint64_t v250 = swift_slowAlloc();
        v256 = (void *)v250;
        *(_DWORD *)uint64_t v112 = v222;
        v259 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v256);
        LODWORD(v240) = v110;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v112 + 12) = 2082;
        sub_10010B4E8(v227, (uint64_t)v258);
        sub_10073F754((uint64_t)v258, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
        uint64_t v114 = sub_100696CF4();
        unint64_t v116 = v115;
        sub_10073F754((uint64_t)v258, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
        v259 = (void *)sub_1000C51B8(v114, v116, (uint64_t *)&v256);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v112 + 22) = 2114;
        v259 = v105;
        v117 = v105;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *unint64_t v113 = v105;

        *(_WORD *)(v112 + 32) = 2112;
        char v118 = [v251 objectID];
        v259 = v118;
        id v106 = v251;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v113[1] = v118;

        _os_log_impl((void *)&_mh_execute_header, v108, (os_log_type_t)v240, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v112, 0x2Au);
        sub_100094134((uint64_t *)&unk_10090A040);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      unint64_t v18 = v107;
      swift_beginAccess();
      uint64_t v24 = v105;
      sub_1001A6B7C((uint64_t)v106, v24);
      swift_endAccess();

      uint64_t v119 = 4;
      uint64_t v250 = 4;
      os_log_type_t v120 = &byte_1008B67B8;
      break;
    default:
LABEL_152:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      [self noSuchObjectErrorWithObjectID:v72];
      swift_willThrow();

      return;
  }
  while (1)
  {
    char v122 = *v120++;
    char v121 = v122;
    if (((*(unsigned int *)(v18 + 64) | ((unint64_t)*(unsigned __int16 *)(v18 + 68) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
    {
      unint64_t v123 = Logger.logObject.getter();
      os_log_type_t v124 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v123, v124))
      {
        uint64_t v125 = swift_slowAlloc();
        v256 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v125 = v237;
        LOBYTE(v259) = v121;
        uint64_t v126 = String.init<A>(describing:)();
        *(void *)(v125 + 4) = sub_1000C51B8(v126, v127, (uint64_t *)&v256);
        unint64_t v18 = v253;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v123, v124, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v125, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
    }
    LODWORD(v53) = *(_DWORD *)(v18 + 64);
    if (*(unsigned __int16 *)(v18 + 68) >> 14 == 2 && (*(_DWORD *)(v18 + 64) & 1) == 0) {
      break;
    }
    if (!--v119)
    {
      swift_retain_n();
      id v129 = (id)v24;
      id v130 = v251;
      uint64_t v131 = v129;
      id v132 = v130;
      uint64_t v133 = Logger.logObject.getter();
      int v134 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v133, (os_log_type_t)v134))
      {
        LODWORD(v238) = v134;
        os_log_t v240 = v133;
        uint64_t v135 = swift_slowAlloc();
        v136 = (void *)swift_slowAlloc();
        uint64_t v239 = (char *)swift_slowAlloc();
        v256 = v239;
        *(_DWORD *)uint64_t v135 = v219;
        v259 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v256);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v135 + 12) = 2082;
        sub_10010B4E8(v227, (uint64_t)v257);
        sub_10073F754((uint64_t)v257, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
        uint64_t v137 = sub_100696CF4();
        uint64_t v138 = v131;
        unint64_t v140 = v139;
        sub_10073F754((uint64_t)v257, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
        v259 = (void *)sub_1000C51B8(v137, v140, (uint64_t *)&v256);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v135 + 22) = 2114;
        v259 = v138;
        uint64_t v141 = v138;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        id v251 = v138;
        void *v136 = v138;

        *(_WORD *)(v135 + 32) = 2112;
        v142 = [v132 objectID];
        v259 = v142;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v218 = v136;
        v136[1] = v142;

        *(_WORD *)(v135 + 42) = 2082;
        uint64_t v143 = 4;
        v259 = _swiftEmptyArrayStorage;
        sub_1001DE058(0, 4, 0);
        unint64_t v144 = v259;
        unint64_t v145 = &byte_1008B67B8;
        do
        {
          int v146 = *v145++;
          unint64_t v147 = 0xE800000000000000;
          uint64_t v148 = 0x44497463656A626FLL;
          switch(v146)
          {
            case 1:
              uint64_t v148 = 0x6E6F697461657263;
              unint64_t v147 = 0xEC00000065746144;
              break;
            case 2:
              unint64_t v147 = 0xE400000000000000;
              uint64_t v148 = 1701667182;
              break;
            case 3:
              unint64_t v147 = 0xE400000000000000;
              uint64_t v148 = 1701869940;
              break;
            default:
              break;
          }
          v259 = v144;
          unint64_t v150 = v144[2];
          unint64_t v149 = v144[3];
          if (v150 >= v149 >> 1)
          {
            sub_1001DE058(v149 > 1, v150 + 1, 1);
            unint64_t v144 = v259;
          }
          v144[2] = v150 + 1;
          unint64_t v151 = &v144[2 * v150];
          v151[4] = v148;
          v151[5] = v147;
          --v143;
        }
        while (v143);
        uint64_t v152 = Array.description.getter();
        unint64_t v154 = v153;
        swift_bridgeObjectRelease();
        v259 = (void *)sub_1000C51B8(v152, v154, (uint64_t *)&v256);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v135 + 52) = 1024;
        unint64_t v155 = v253;
        int v156 = *(unsigned __int8 *)(v253 + 104);
        swift_release();
        LODWORD(v259) = v156;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        os_log_t v157 = v240;
        _os_log_impl((void *)&_mh_execute_header, v240, (os_log_type_t)v238, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v135, 0x3Au);
        sub_100094134((uint64_t *)&unk_10090A040);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        unint64_t v18 = v155;
        swift_slowDealloc();

        uint64_t v24 = 1;
        uint64_t v131 = v251;
      }
      else
      {

        swift_release_n();
        uint64_t v24 = 1;
      }
      unint64_t v158 = v252;
      sub_10034ED20(v244, v132, (uint64_t)&off_1008B6798);
      if (!v158)
      {
        unint64_t v252 = 0;
        id v159 = [v132 changedValues];
        uint64_t v19 = (__objc2_class **)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        int v160 = v226;
        swift_beginAccess();
        v161 = v131;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v259 = *v160;
        *int v160 = (void *)0x8000000000000000;
        sub_1002C4FAC((uint64_t)v19, v161, isUniquelyReferenced_nonNull_native);
        *int v160 = v259;

        swift_bridgeObjectRelease();
        swift_endAccess();
        uint64_t v4 = *(unsigned __int8 *)(v18 + 104);
        if (v250 && (v4 & 1) != 0)
        {
          os_log_type_t v83 = v132;
          swift_bridgeObjectRelease();
          [v83 updateChangeCount];

LABEL_100:
          goto LABEL_136;
        }
        v163 = v161;
        swift_retain_n();
        uint64_t v12 = v163;
        id v164 = v132;
        swift_bridgeObjectRetain();
        v165 = Logger.logObject.getter();
        int v166 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v165, (os_log_type_t)v166))
        {

          swift_bridgeObjectRelease_n();
          swift_release_n();
          goto LABEL_136;
        }
        uint64_t v216 = (uint64_t)v164;
        int v212 = v166;
        os_log_t v215 = v165;
        uint64_t v167 = swift_slowAlloc();
        uint64_t v218 = (void *)swift_slowAlloc();
        long long v213 = (void *)swift_slowAlloc();
        v256 = v213;
        *(_DWORD *)uint64_t v167 = v217;
        v259 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v256);
        unint64_t v16 = (unint64_t)v233;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v167 + 12) = 1024;
        swift_release();
        LODWORD(v259) = v4;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        *(_WORD *)(v167 + 18) = 1024;
        LODWORD(v259) = 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v167 + 24) = 2114;
        v259 = (void *)v12;
        unint64_t v18 = (unint64_t)(id)v12;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v218 = v12;

        v214 = (uint8_t *)v167;
        *(_WORD *)(v167 + 34) = 2082;
        uint64_t v11 = (char *)v19[2];
        if (!v11)
        {
          uint64_t v24 = v216;
LABEL_135:
          os_log_t v187 = v214;
          uint64_t v188 = Array.description.getter();
          unint64_t v190 = v189;
          swift_bridgeObjectRelease();
          v259 = (void *)sub_1000C51B8(v188, v190, (uint64_t *)&v256);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          os_log_t v191 = v215;
          _os_log_impl((void *)&_mh_execute_header, v215, (os_log_type_t)v212, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v187, 0x2Cu);
          sub_100094134((uint64_t *)&unk_10090A040);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          goto LABEL_136;
        }
        unint64_t v211 = v18;
        v259 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_1001DE058(0, (int64_t)v11, 0);
        uint64_t v168 = v259;
        unint64_t v18 = sub_10072617C((uint64_t)v19);
        a1 = v169;
        os_log_t v170 = 0;
        os_log_t v171 = (os_log_t)(v19 + 8);
        char v172 = *((unsigned char *)v19 + 32);
        uint64_t v238 = v169;
        long long v210 = v19 + 11;
        uint64_t v239 = v11;
        os_log_t v240 = (os_log_t)(v19 + 8);
        while (2)
        {
          if ((v18 & 0x8000000000000000) != 0 || (uint64_t)v18 >= 1 << v172) {
            goto LABEL_162;
          }
          uint64_t v12 = v18 >> 6;
          uint64_t v4 = 1 << v18;
          if (((uint64_t)v171[v18 >> 6].isa & (1 << v18)) == 0) {
            goto LABEL_163;
          }
          if (*((_DWORD *)v19 + 9) != a1) {
            goto LABEL_164;
          }
          uint64_t v175 = (uint64_t)v19[6] + 16 * v18;
          unint64_t v176 = *(void **)v175;
          uint64_t v11 = *(char **)(v175 + 8);
          uint64_t v250 = (uint64_t)v170;
          id v251 = v176;
          v259 = v168;
          unint64_t v16 = v168[2];
          unint64_t v177 = v168[3];
          swift_bridgeObjectRetain();
          if (v16 >= v177 >> 1)
          {
            sub_1001DE058(v177 > 1, v16 + 1, 1);
            uint64_t v168 = v259;
          }
          v168[2] = v16 + 1;
          Class v178 = &v168[2 * v16];
          v178[4] = v251;
          v178[5] = v11;
          char v172 = *((unsigned char *)v19 + 32);
          unint64_t v173 = 1 << v172;
          if ((uint64_t)v18 >= 1 << v172) {
            goto LABEL_165;
          }
          os_log_t v171 = v240;
          Class v179 = v240[v12].isa;
          if (((unint64_t)v179 & v4) == 0) {
            goto LABEL_166;
          }
          if (*((_DWORD *)v19 + 9) != a1) {
            goto LABEL_167;
          }
          unint64_t v180 = (unint64_t)v179 & (-2 << (v18 & 0x3F));
          if (v180)
          {
            unint64_t v173 = __clz(__rbit64(v180)) | v18 & 0xFFFFFFFFFFFFFFC0;
            uint64_t v11 = v239;
            uint64_t v174 = v250;
          }
          else
          {
            uint64_t v181 = v12 + 1;
            unint64_t v182 = (v173 + 63) >> 6;
            uint64_t v11 = v239;
            uint64_t v174 = v250;
            if (v12 + 1 < v182)
            {
              Class v183 = v240[v181].isa;
              if (v183) {
                goto LABEL_118;
              }
              uint64_t v181 = v12 + 2;
              if (v12 + 2 < v182)
              {
                Class v183 = v240[v181].isa;
                if (v183)
                {
LABEL_118:
                  unint64_t v173 = __clz(__rbit64((unint64_t)v183)) + (v181 << 6);
                }
                else
                {
                  while (v182 - 3 != v12)
                  {
                    Class v183 = (Class)v210[v12++];
                    if (v183)
                    {
                      uint64_t v181 = v12 + 2;
                      goto LABEL_118;
                    }
                  }
                }
              }
            }
          }
          os_log_t v170 = (char *)(v174 + 1);
          a1 = v238;
          unint64_t v18 = v173;
          if (v170 == v11)
          {
            swift_bridgeObjectRelease();
            uint64_t v24 = v216;
            unint64_t v18 = v211;
            goto LABEL_135;
          }
          continue;
        }
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
  }
  if (qword_100907AE0 != -1) {
    goto LABEL_174;
  }
LABEL_155:
  sub_10008E2DC(v236, (uint64_t)qword_100920A70);
  NSString v198 = Logger.logObject.getter();
  os_log_type_t v199 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v198, v199))
  {
    uint64_t v200 = swift_slowAlloc();
    v256 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v200 = v220;
    uint64_t v201 = sub_100662CC0(1);
    v259 = (void *)sub_1000C51B8(v201, v202, (uint64_t *)&v256);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v200 + 12) = 2082;
    uint64_t v203 = sub_100662CC0((__int16)v53);
    v259 = (void *)sub_1000C51B8(v203, v204, (uint64_t *)&v256);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v198, v199, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v200, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  os_log_t v205 = self;
  NSString v206 = String._bridgeToObjectiveC()();
  sub_100662CC0(1);
  NSString v207 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100662CC0((__int16)v53);
  NSString v208 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v205 unauthorizedErrorWithMissingEntitlement:v206 requestedAccessLevel:v207 currentAccesslevel:v208];

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1006B7848(void *a1, void *a2, void *a3)
{
  v288 = a1;
  uint64_t v6 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v6 - 8);
  uint64_t v282 = (uint64_t)&v244 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v281 = (char *)&v244 - v9;
  uint64_t v287 = type metadata accessor for UUID();
  v283 = *(void **)(v287 - 8);
  __chkstk_darwin(v287);
  uint64_t v11 = (char *)&v244 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v244 - v13;
  uint64_t v15 = type metadata accessor for Logger();
  v279 = *(char **)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = ((char *)&v244 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v18 = a3[3];
  v284 = (void *)a3[2];
  id v280 = (id)a3[4];
  uint64_t v289 = v3;
  uint64_t v19 = *(void *)(v3 + 72);
  v286 = a2;
  v291[3] = v19;
  v292 = a2;
  v291[2] = &v292;
  swift_bridgeObjectRetain();
  uint64_t v20 = v288;
  swift_bridgeObjectRetain();
  unint64_t v21 = (unint64_t)v20;
  BOOL v22 = v290;
  BOOL v23 = sub_100692158((uint64_t (*)(id *))sub_100742728, v291, v21);
  if (v22)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v278 = v18;
  v288 = 0;
  os_log_t v271 = v17;
  *(void *)&long long v275 = a3;
  uint64_t v24 = (void *)v289;
  v290 = v23;
  uint64_t v273 = v19;
  v276 = v14;
  v274 = v11;
  uint64_t v277 = v15;
  if (qword_1009073A0 != -1) {
    goto LABEL_165;
  }
  while (1)
  {
    uint64_t v25 = sub_10008E2DC(v277, (uint64_t)qword_100916070);
    unint64_t v26 = (unint64_t)v290;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v285 = v25;
    uint64_t v27 = Logger.logObject.getter();
    int v28 = static os_log_type_t.info.getter();
    int64_t v29 = v26 >> 62;
    if (os_log_type_enabled(v27, (os_log_type_t)v28))
    {
      uint64_t v30 = swift_slowAlloc();
      id v31 = (void *)swift_slowAlloc();
      v292 = v31;
      *(_DWORD *)uint64_t v30 = 136446978;
      v295 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v292);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v30 + 12) = 2048;
      LODWORD(v270) = v28;
      v269 = v31;
      uint64_t v32 = (uint64_t)&v297;
      if (v29) {
        goto LABEL_174;
      }
      int64_t v33 = v288;
      uint64_t v34 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_7:
      swift_bridgeObjectRelease();
      v295 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 22) = 2082;
      type metadata accessor for REMCDManualSortHint();
      id v35 = [(id)swift_getObjCClassFromMetadata() description];
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v38 = v37;

      v295 = sub_1000C51B8(v36, v38, (uint64_t *)&v292);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      unint64_t v26 = (unint64_t)v290;
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 32) = 2082;
      unint64_t v39 = v278;
      swift_bridgeObjectRetain();
      v295 = sub_1000C51B8((uint64_t)v284, v39, (uint64_t *)&v292);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v270, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v30, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v24 = (void *)v289;
    }
    else
    {
      int64_t v33 = v288;

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    if (v29)
    {
      swift_bridgeObjectRetain();
      uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v40 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v30 = (uint64_t)_swiftEmptyArrayStorage;
    v272 = (void *)v29;
    if (!v40) {
      break;
    }
    v292 = _swiftEmptyArrayStorage;
    uint64_t v27 = &v292;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v40 < 0) {
      goto LABEL_173;
    }
    uint64_t v41 = 0;
    unint64_t v42 = v26 & 0xC000000000000001;
    while (v40 != v41)
    {
      if (v42) {
        id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v43 = *(id *)(v26 + 8 * v41 + 32);
      }
      id v44 = v43;
      id v45 = sub_100695DC4([v44 remObjectID], (void (*)(void))type metadata accessor for REMCDManualSortHint, 0xD000000000000013, (void *)0x80000001007DC150);
      if (v33)
      {

        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      uint64_t v24 = v45;
      ++v41;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      unint64_t v26 = (unint64_t)v290;
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v40 == v41)
      {
        uint64_t v30 = (uint64_t)v292;
        uint64_t v24 = (void *)v289;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_165:
    swift_once();
  }
LABEL_21:
  uint64_t v46 = v24[12];
  if (v46 <= 1)
  {
    if (v46)
    {
      if (v46 != 1) {
        goto LABEL_178;
      }
      swift_bridgeObjectRelease();
      uint64_t v63 = Logger.logObject.getter();
      os_log_type_t v64 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v63, v64))
      {
        uint64_t v65 = (uint8_t *)swift_slowAlloc();
        v292 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v65 = 136315138;
        v288 = v65 + 4;
        id v66 = [(id)type metadata accessor for REMCDManualSortHint() cdEntityName];
        uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v69 = v68;

        uint64_t v70 = (void *)v289;
        v295 = sub_1000C51B8(v67, v69, (uint64_t *)&v292);
        uint64_t v24 = v70;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        unint64_t v26 = (unint64_t)v290;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v63, v64, "Skipping fetch during upsert {CDType: %s}", v65, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      uint64_t v62 = v286;
      id v57 = v276;
      v58 = v275;
      unint64_t v278 = sub_1002EEC0C((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v61 = v33;
      goto LABEL_36;
    }
  }
  else if ((unint64_t)(v46 - 2) >= 3 && v46 != 4499 && v46 != 4599)
  {
LABEL_178:
    (*((void (**)(os_log_t, uint64_t, uint64_t))v279 + 2))(v271, v285, v277);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
    __break(1u);
    JUMPOUT(0x1006B9E9CLL);
  }
  unint64_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    v288 = (void *)swift_slowAlloc();
    v292 = v288;
    *(_DWORD *)uint64_t v49 = 136315138;
    v284 = v49 + 4;
    id v50 = [(id)type metadata accessor for REMCDManualSortHint() cdEntityName];
    uint64_t v51 = v30;
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v54 = v53;

    BOOL v55 = (void *)v289;
    uint64_t v56 = v52;
    uint64_t v30 = v51;
    v295 = sub_1000C51B8(v56, v54, (uint64_t *)&v292);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "Performing fetch during upsert {CDType: %s}", v49, 0xCu);
    swift_arrayDestroy();
    uint64_t v24 = v55;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v57 = v276;
  v58 = v275;
  id v59 = sub_1007119D0(v30, v275);
  swift_bridgeObjectRelease();
  uint64_t v61 = v33;
  if (v33) {
    goto LABEL_2;
  }
  unint64_t v278 = (unint64_t)v59;
  uint64_t v62 = v286;
  unint64_t v26 = (unint64_t)v290;
LABEL_36:
  if (v272)
  {
    swift_bridgeObjectRetain();
    uint64_t v71 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v71 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v71) {
    goto LABEL_150;
  }
  unint64_t v72 = 0;
  v262 = v24 + 3;
  v261 = v58 + 6;
  v265 = v58 + 7;
  unint64_t v73 = v26 & 0xC000000000000001;
  uint64_t v258 = v26 & 0xFFFFFFFFFFFFFF8;
  v257 = (void *)(v26 + 32);
  v268 = (void (**)(char *, uint64_t))(v283 + 1);
  uint64_t v260 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v283 + 7);
  v259 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v283 + 6);
  v269 = &v296;
  v256 = (char *)&v295 + 4;
  v267 = (void *)0x80000001007DC150;
  *(void *)&long long v60 = 136446978;
  long long v254 = v60;
  *(void *)&long long v60 = 136446210;
  long long v275 = v60;
  *(void *)&long long v60 = 136447490;
  long long v255 = v60;
  *(void *)&long long v60 = 136447234;
  long long v252 = v60;
  unint64_t v253 = (char *)&type metadata for Any + 8;
  unint64_t v263 = v26 & 0xC000000000000001;
  uint64_t v264 = v71;
  while (1)
  {
    if (v73)
    {
      id v74 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v75 = __OFADD__(v72, 1);
      unint64_t v76 = v72 + 1;
      if (v75) {
        break;
      }
      goto LABEL_47;
    }
    if (v72 >= *(void *)(v258 + 16)) {
      goto LABEL_176;
    }
    id v74 = (id)v257[v72];
    BOOL v75 = __OFADD__(v72, 1);
    unint64_t v76 = v72 + 1;
    if (v75) {
      break;
    }
LABEL_47:
    id v77 = v74;
    id v78 = [v77 remObjectID];
    v279 = (char *)sub_100695DC4(v78, (void (*)(void))type metadata accessor for REMCDManualSortHint, 0xD000000000000013, v267);
    if (v61)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v266 = v76;
    v288 = 0;
    v284 = v77;

    id v79 = [(id)v62[2] uuid];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v80 = UUID.uuidString.getter();
    char v81 = v57;
    uint64_t v82 = v80;
    uint64_t v84 = v83;
    unint64_t v85 = v274;
    id v86 = *v268;
    uint64_t v87 = v287;
    (*v268)(v81, v287);
    id v88 = [self localInternalAccountID];
    id v89 = [v88 uuid];

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v90 = UUID.uuidString.getter();
    uint64_t v92 = v91;
    v283 = v86;
    v86(v85, v87);
    if (v82 == v90 && v84 == v92)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v93 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v93 & 1) == 0)
      {
        uint64_t v98 = v288;
        uint64_t v97 = v273;
        id v96 = v284;
        goto LABEL_57;
      }
    }
    int v94 = 0x7FFFFFFF;
    id v95 = v288;
    id v96 = v284;
    uint64_t v97 = v273;
    switch(*(unsigned __int16 *)(v289 + 68) >> 14)
    {
      case 2:
        int v94 = *(_DWORD *)(v289 + 64);
        break;
      case 3:
        break;
      default:
        int v94 = 2147483519;
        break;
    }
    sub_100662770(2, v94);
    uint64_t v98 = v95;
    if (v95)
    {
LABEL_159:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
LABEL_57:
    uint64_t v99 = sub_100728EB0(v96, v97);
    if (v98) {
      goto LABEL_159;
    }
    int v100 = v99;
    v288 = 0;
    v101._rawValue = &off_1008B4A30;
    uint64_t v102 = sub_100698D0C(v101, (void (*)(void))type metadata accessor for REMCDManualSortHint);
    uint64_t v103 = v287;
    if (!*(void *)(v278 + 16)) {
      goto LABEL_62;
    }
    id v104 = v279;
    unint64_t v105 = v278;
    unint64_t v106 = sub_10030703C(v104);
    if ((v107 & 1) == 0)
    {

LABEL_62:
      if (v102 == 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        int v110 = v100[2];
        if (v110)
        {
          if (v102) {
            uint64_t v111 = 0x6465696669646F6DLL;
          }
          else {
            uint64_t v111 = 0x44497463656A626FLL;
          }
          if (v102) {
            unint64_t v112 = 0xEC00000065746144;
          }
          else {
            unint64_t v112 = 0xE800000000000000;
          }
          swift_bridgeObjectRetain();
          uint64_t v113 = 0;
          while (1)
          {
            uint64_t v114 = *((unsigned char *)v100 + v113 + 32) ? 0x6465696669646F6DLL : 0x44497463656A626FLL;
            unint64_t v115 = *((unsigned char *)v100 + v113 + 32) ? 0xEC00000065746144 : 0xE800000000000000;
            if (v114 == v111 && v115 == v112) {
              break;
            }
            char v117 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v117) {
              goto LABEL_85;
            }
            if (v110 == (void *)++v113)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              goto LABEL_156;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_85:
          swift_bridgeObjectRelease();
          uint64_t v118 = v289;
          uint64_t v119 = *(void **)(v289 + 88);
          type metadata accessor for REMCDManualSortHint();
          ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
          id v121 = [ObjCClassFromMetadata entity];
          id v122 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v121 insertIntoManagedObjectContext:v119];
          id v123 = v280;
          id v124 = v122;
          [v119 assignObject:v124 toPersistentStore:v123];

          id v125 = v124;
          id v126 = [v279 uuid];
          uint64_t v127 = (uint64_t)v281;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          (*v260)(v127, 0, 1, v103);
          uint64_t v128 = v103;
          uint64_t v129 = v282;
          sub_1001248EC(v127, v282);
          int v130 = (*v259)(v129, 1, v128);
          Class isa = 0;
          if (v130 != 1)
          {
            Class isa = UUID._bridgeToObjectiveC()().super.isa;
            ((void (*)(uint64_t, uint64_t))v283)(v129, v287);
          }
          [v125 setIdentifier:isa v244];

          sub_1001260DC(v127);
          id v132 = v279;
          uint64_t v133 = v118;
          swift_retain_n();
          id v134 = v125;
          uint64_t v135 = v132;
          BOOL v108 = v134;
          v136 = Logger.logObject.getter();
          os_log_type_t v137 = static os_log_type_t.default.getter();
          int v138 = v137;
          if (os_log_type_enabled(v136, v137))
          {
            uint64_t v139 = swift_slowAlloc();
            LODWORD(v271) = v138;
            uint64_t v140 = v139;
            uint64_t v141 = swift_slowAlloc();
            v272 = v108;
            v142 = (void *)v141;
            v283 = (void *)swift_slowAlloc();
            v292 = v283;
            *(_DWORD *)uint64_t v140 = v254;
            v295 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v292);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v140 + 12) = 2082;
            sub_10010B4E8((uint64_t)v262, (uint64_t)v294);
            sub_10073F754((uint64_t)v294, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v143 = sub_100696CF4();
            unint64_t v145 = v144;
            sub_10073F754((uint64_t)v294, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            v295 = sub_1000C51B8(v143, v145, (uint64_t *)&v292);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v140 + 22) = 2114;
            v295 = v135;
            int v146 = v135;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            void *v142 = v135;

            uint64_t v147 = v289;
            *(_WORD *)(v140 + 32) = 2112;
            uint64_t v148 = [v272 objectID];
            v295 = v148;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            v142[1] = v148;

            _os_log_impl((void *)&_mh_execute_header, v136, (os_log_type_t)v271, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v140, 0x2Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            BOOL v108 = v272;
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v109 = v147;
          }
          else
          {

            swift_release_n();
            uint64_t v109 = v133;
          }
          swift_beginAccess();
          sub_1001A6B7C((uint64_t)v108, (uint64_t)v135);
          swift_endAccess();
          goto LABEL_91;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_156:
        id v96 = v284;
      }
      id v242 = self;
      v243 = v279;
      [v242 noSuchObjectErrorWithObjectID:v279];
      swift_willThrow();

      return;
    }
    BOOL v108 = *(id *)(*(void *)(v105 + 56) + 8 * v106);
    uint64_t v109 = v289;
LABEL_91:

    unint64_t v149 = v100[2];
    v283 = v149;
    if (!v149) {
      goto LABEL_103;
    }
    v272 = v108;
    swift_bridgeObjectRetain();
    for (unint64_t i = 0; i != v149; unint64_t i = (void *)((char *)i + 1))
    {
      if (((*(unsigned int *)(v109 + 64) | ((unint64_t)*(unsigned __int16 *)(v109 + 68) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
      {
        uint64_t v151 = v109;
        char v152 = *((unsigned char *)i + (void)v100 + 32);
        unint64_t v153 = Logger.logObject.getter();
        os_log_type_t v154 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v153, v154))
        {
          uint64_t v155 = swift_slowAlloc();
          v292 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v155 = v275;
          LOBYTE(v295) = v152;
          uint64_t v156 = String.init<A>(describing:)();
          *(void *)(v155 + 4) = sub_1000C51B8(v156, v157, (uint64_t *)&v292);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v153, v154, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v155, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        uint64_t v109 = v151;
        unint64_t v149 = v283;
      }
      LODWORD(v58) = *(_DWORD *)(v109 + 64);
      if (*(unsigned __int16 *)(v109 + 68) >> 14 == 2 && (*(_DWORD *)(v109 + 64) & 1) == 0)
      {
        uint64_t v229 = v277;
        if (qword_100907AE0 != -1) {
          goto LABEL_177;
        }
        goto LABEL_153;
      }
    }
    swift_bridgeObjectRelease();
    BOOL v108 = v272;
LABEL_103:
    swift_retain_n();
    id v159 = v279;
    swift_bridgeObjectRetain_n();
    int v160 = v108;
    v161 = v159;
    os_log_t v162 = v160;
    v163 = Logger.logObject.getter();
    int v164 = static os_log_type_t.default.getter();
    BOOL v165 = os_log_type_enabled(v163, (os_log_type_t)v164);
    v279 = v161;
    if (v165)
    {
      LODWORD(v250) = v164;
      os_log_t v271 = v163;
      uint64_t v166 = swift_slowAlloc();
      v272 = (void *)swift_slowAlloc();
      id v251 = (void *)swift_slowAlloc();
      v292 = v251;
      *(_DWORD *)uint64_t v166 = v255;
      v295 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v292);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v166 + 12) = 2082;
      sub_10010B4E8((uint64_t)v262, (uint64_t)v293);
      sub_10073F754((uint64_t)v293, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v167 = sub_100696CF4();
      unint64_t v169 = v168;
      sub_10073F754((uint64_t)v293, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      v295 = sub_1000C51B8(v167, v169, (uint64_t *)&v292);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v166 + 22) = 2114;
      v295 = v161;
      os_log_t v170 = v161;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      os_log_t v171 = v162;
      char v172 = v272;
      void *v272 = v161;

      *(_WORD *)(v166 + 32) = 2112;
      unint64_t v173 = [v171 objectID];
      v295 = v173;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v174 = v172;
      os_log_t v162 = v171;
      v174[1] = v173;

      uint64_t v270 = v166;
      *(_WORD *)(v166 + 42) = 2082;
      int64_t v175 = (int64_t)v100[2];
      if (v175)
      {
        os_log_t v249 = v171;
        v295 = _swiftEmptyArrayStorage;
        sub_1001DE058(0, v175, 0);
        uint64_t v176 = 0;
        unint64_t v177 = v295;
        Class v178 = v295[2].isa;
        uint64_t v179 = 2 * (void)v178;
        do
        {
          unint64_t v180 = (unint64_t)v178 + v176;
          if (*((unsigned char *)v100 + v176 + 32)) {
            uint64_t v181 = 0x6465696669646F6DLL;
          }
          else {
            uint64_t v181 = 0x44497463656A626FLL;
          }
          if (*((unsigned char *)v100 + v176 + 32)) {
            unint64_t v182 = 0xEC00000065746144;
          }
          else {
            unint64_t v182 = 0xE800000000000000;
          }
          v295 = v177;
          unint64_t v183 = (unint64_t)v177[3].isa;
          unint64_t v184 = v180 + 1;
          if (v180 >= v183 >> 1)
          {
            sub_1001DE058(v183 > 1, v180 + 1, 1);
            unint64_t v177 = v295;
          }
          ++v176;
          v177[2].Class isa = (Class)v184;
          uint64_t v185 = &v177[v179];
          v185[4].Class isa = (Class)v181;
          v185[5].Class isa = (Class)v182;
          v179 += 2;
        }
        while (v175 != v176);
        swift_bridgeObjectRelease();
        uint64_t v109 = v289;
        os_log_t v162 = v249;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v186 = v270;
      uint64_t v187 = Array.description.getter();
      unint64_t v189 = v188;
      swift_bridgeObjectRelease();
      v295 = sub_1000C51B8(v187, v189, (uint64_t *)&v292);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_WORD *)(v186 + 52) = 1024;
      int v190 = *(unsigned __int8 *)(v109 + 104);
      swift_release();
      LODWORD(v295) = v190;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      os_log_t v191 = v271;
      _os_log_impl((void *)&_mh_execute_header, v271, (os_log_type_t)v250, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v186, 0x3Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    unint64_t v192 = v284;
    uint64_t v193 = v288;
    sub_10048AA78(v284, (char *)v162);
    if (v193)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      return;
    }
    v288 = 0;
    id v194 = [v162 changedValues];
    unint64_t v195 = (char *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v196 = (NSObject **)v265;
    swift_beginAccess();
    char v197 = v279;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v295 = *v196;
    void *v196 = 0x8000000000000000;
    v279 = v195;
    sub_1002C4FAC((uint64_t)v195, v197, isUniquelyReferenced_nonNull_native);
    void *v196 = v295;

    swift_bridgeObjectRelease();
    swift_endAccess();
    int v199 = *(unsigned __int8 *)(v109 + 104);
    v58 = v162;
    swift_bridgeObjectRelease();
    if (v283 && (v199 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      [v58 updateChangeCount];

      goto LABEL_149;
    }
    uint64_t v200 = v197;
    swift_retain_n();
    uint64_t v201 = v200;
    unint64_t v202 = v279;
    swift_bridgeObjectRetain();
    uint64_t v203 = Logger.logObject.getter();
    int v204 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v203, (os_log_type_t)v204))
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      goto LABEL_149;
    }
    int v246 = v204;
    os_log_t v249 = v203;
    uint64_t v250 = v58;
    uint64_t v30 = swift_slowAlloc();
    id v251 = (void *)swift_slowAlloc();
    unint64_t v247 = (void *)swift_slowAlloc();
    v292 = v247;
    *(_DWORD *)uint64_t v30 = v252;
    v295 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v292);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v30 + 12) = 1024;
    swift_release();
    LODWORD(v295) = v199;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v30 + 18) = 1024;
    LODWORD(v295) = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v30 + 24) = 2114;
    v295 = v201;
    os_log_t v205 = v201;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v251 = v201;

    uint64_t v245 = v205;
    uint64_t v248 = (uint8_t *)v30;
    *(_WORD *)(v30 + 34) = 2082;
    int64_t v29 = *((void *)v202 + 2);
    if (!v29) {
      goto LABEL_148;
    }
    v295 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1001DE058(0, v29, 0);
    uint64_t v27 = v295;
    uint64_t v206 = sub_10072617C((uint64_t)v279);
    NSString v207 = v279;
    int v209 = v208;
    long long v210 = 0;
    unint64_t v211 = v279 + 64;
    uint64_t v32 = v279[32];
    uint64_t v270 = v208;
    unint64_t v244 = v279 + 88;
    os_log_t v271 = (os_log_t)v29;
    v272 = v279 + 64;
    while (2)
    {
      if (v206 < 0 || (uint64_t v32 = 1 << v32, v206 >= v32))
      {
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        int64_t v33 = *(void **)(v32 - 256);
        swift_bridgeObjectRetain();
        uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      int64_t v29 = (unint64_t)v206 >> 6;
      uint64_t v32 = *(void *)&v211[8 * ((unint64_t)v206 >> 6)];
      uint64_t v30 = 1 << v206;
      if ((v32 & (1 << v206)) == 0) {
        goto LABEL_168;
      }
      uint64_t v32 = *((unsigned int *)v207 + 9);
      if (v32 != v209) {
        goto LABEL_169;
      }
      v279 = v210;
      uint64_t v213 = *((void *)v207 + 6) + 16 * v206;
      v214 = *(objc_class **)(v213 + 8);
      v283 = *(void **)v213;
      v295 = v27;
      unint64_t v216 = (unint64_t)v27[2].isa;
      unint64_t v215 = (unint64_t)v27[3].isa;
      long long v217 = v207;
      swift_bridgeObjectRetain();
      if (v216 >= v215 >> 1)
      {
        sub_1001DE058(v215 > 1, v216 + 1, 1);
        uint64_t v27 = v295;
      }
      v27[2].Class isa = (Class)(v216 + 1);
      uint64_t v218 = &v27[2 * v216];
      v218[4].Class isa = (Class)v283;
      v218[5].Class isa = v214;
      uint64_t v32 = v217[32];
      unint64_t v212 = 1 << v32;
      if (v206 >= 1 << v32) {
        goto LABEL_170;
      }
      unint64_t v211 = (char *)v272;
      uint64_t v219 = v272[v29];
      if ((v219 & v30) == 0) {
        goto LABEL_171;
      }
      NSString v207 = v217;
      if (*((_DWORD *)v217 + 9) != v209) {
        goto LABEL_172;
      }
      unint64_t v220 = v219 & (-2 << (v206 & 0x3F));
      if (v220)
      {
        unint64_t v212 = __clz(__rbit64(v220)) | v206 & 0xFFFFFFFFFFFFFFC0;
        unint64_t v192 = v284;
      }
      else
      {
        v221 = (char *)(v29 + 1);
        unint64_t v222 = (v212 + 63) >> 6;
        unint64_t v192 = v284;
        if (v29 + 1 < v222)
        {
          unint64_t v223 = v272[(void)v221];
          if (v223) {
            goto LABEL_140;
          }
          v221 = (char *)(v29 + 2);
          if (v29 + 2 < v222)
          {
            unint64_t v223 = v272[(void)v221];
            if (v223)
            {
LABEL_140:
              unint64_t v212 = __clz(__rbit64(v223)) + ((void)v221 << 6);
            }
            else
            {
              while (v222 - 3 != v29)
              {
                unint64_t v223 = *(void *)&v244[8 * v29++];
                if (v223)
                {
                  v221 = (char *)(v29 + 2);
                  goto LABEL_140;
                }
              }
            }
          }
        }
      }
      long long v210 = v279 + 1;
      int v209 = v270;
      uint64_t v206 = v212;
      int64_t v29 = (int64_t)v271;
      if (v279 + 1 != (char *)v271) {
        continue;
      }
      break;
    }
    swift_bridgeObjectRelease();
LABEL_148:
    unint64_t v224 = v248;
    uint64_t v225 = Array.description.getter();
    v58 = v226;
    swift_bridgeObjectRelease();
    v295 = sub_1000C51B8(v225, (unint64_t)v58, (uint64_t *)&v292);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v227 = v249;
    _os_log_impl((void *)&_mh_execute_header, v249, (os_log_type_t)v246, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v224, 0x2Cu);
    sub_100094134((uint64_t *)&unk_10090A040);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    long long v228 = v250;
LABEL_149:
    unint64_t v72 = v266;
    uint64_t v61 = v288;
    uint64_t v62 = v286;
    id v57 = v276;
    unint64_t v73 = v263;
    if (v266 == v264)
    {
LABEL_150:
      swift_bridgeObjectRelease();
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  swift_once();
  uint64_t v229 = v277;
LABEL_153:
  sub_10008E2DC(v229, (uint64_t)qword_100920A70);
  unint64_t v230 = Logger.logObject.getter();
  os_log_type_t v231 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v230, v231))
  {
    uint64_t v232 = swift_slowAlloc();
    v292 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v232 = 136446466;
    uint64_t v233 = sub_100662CC0(1);
    v295 = sub_1000C51B8(v233, v234, (uint64_t *)&v292);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v232 + 12) = 2082;
    uint64_t v235 = sub_100662CC0((__int16)v58);
    v295 = sub_1000C51B8(v235, v236, (uint64_t *)&v292);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v230, v231, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v232, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  long long v237 = v284;
  uint64_t v238 = self;
  NSString v239 = String._bridgeToObjectiveC()();
  sub_100662CC0(1);
  NSString v240 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100662CC0((__int16)v58);
  NSString v241 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v238 unauthorizedErrorWithMissingEntitlement:v239 requestedAccessLevel:v240 currentAccesslevel:v241];

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
}

void sub_1006B9EAC(unint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5 = v4;
  int64_t v6 = v3;
  uint64_t v242 = a2;
  uint64_t v9 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v9 - 8);
  uint64_t v239 = (uint64_t)&v205 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v244 = (uint64_t)&v205 - v12;
  uint64_t v245 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v245 - 8);
  __chkstk_darwin(v245);
  NSString v241 = (char *)&v205 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  NSString v240 = (char *)&v205 - v16;
  unint64_t v17 = type metadata accessor for Logger();
  unint64_t v236 = *(NSObject **)(v17 - 8);
  __chkstk_darwin(v17);
  long long v237 = (char *)&v205 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (char *)*((void *)a3 + 2);
  uint64_t v19 = *((void *)a3 + 3);
  unint64_t v247 = a3;
  id v238 = (id)*((void *)a3 + 4);
  uint64_t v21 = qword_1009073A0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21 != -1) {
    goto LABEL_152;
  }
LABEL_2:
  uint64_t v22 = sub_10008E2DC(v17, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v250 = v22;
  BOOL v23 = Logger.logObject.getter();
  LODWORD(v246) = static os_log_type_t.info.getter();
  BOOL v24 = os_log_type_enabled(v23, (os_log_type_t)v246);
  unint64_t v25 = a1 >> 62;
  unint64_t v251 = a1;
  unint64_t v248 = a1 >> 62;
  int64_t v249 = v6;
  unint64_t v232 = v17;
  v243 = (char *)v13;
  if (v24)
  {
    unint64_t v235 = (unint64_t)v20;
    uint64_t v20 = (char *)swift_slowAlloc();
    unint64_t v234 = (void *)swift_slowAlloc();
    long long v252 = v234;
    *(_DWORD *)uint64_t v20 = 136446978;
    long long v255 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *((_WORD *)v20 + 6) = 2048;
    if (!v25)
    {
      uint64_t v26 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
    goto LABEL_156;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v25)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v13) {
      break;
    }
    long long v252 = _swiftEmptyArrayStorage;
    BOOL v23 = &v252;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v13 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = 0;
      unint64_t v17 = a1 & 0xC000000000000001;
      a1 = (unint64_t)&qword_100910E00;
      while (v13 != v19)
      {
        if (v17) {
          id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v32 = *(id *)(v251 + 8 * v19 + 32);
        }
        id v33 = v32;
        uint64_t v34 = (char *)sub_100694DE8([v33 remObjectID], &qword_100910E00);
        if (v5)
        {

          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        uint64_t v20 = v34;
        ++v19;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        int64_t v6 = v252[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v13 == v19)
        {
          a1 = v251;
          id v35 = v252;
          unint64_t v25 = v248;
          goto LABEL_20;
        }
      }
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      swift_once();
      goto LABEL_2;
    }
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    long long v255 = (void *)v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *((_WORD *)v20 + 11) = 2082;
    sub_1000963CC(0, &qword_100910E00);
    id v27 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v30 = v29;

    uint64_t v31 = v28;
    a1 = v251;
    long long v255 = (void *)sub_1000C51B8(v31, v30, (uint64_t *)&v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *((_WORD *)v20 + 16) = 2082;
    swift_bridgeObjectRetain();
    long long v255 = (void *)sub_1000C51B8(v235, v19, (uint64_t *)&v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v246, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v20, 0x2Au);
    int64_t v6 = (int64_t)v234;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v25 = v248;
  }
  id v35 = _swiftEmptyArrayStorage;
LABEL_20:
  int64_t v36 = v249;
  uint64_t v37 = *(void *)(v249 + 96);
  if (v37 > 1)
  {
    if ((unint64_t)(v37 - 2) >= 3 && v37 != 4499 && v37 != 4599)
    {
LABEL_159:
      ((void (*)(char *, uint64_t, unint64_t))v236[2].isa)(v237, v250, v232);
      sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
      sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
      sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
      __break(1u);
      JUMPOUT(0x1006BC37CLL);
    }
LABEL_27:
    unint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v246 = (uint64_t)v35;
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      long long v252 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136315138;
      long long v237 = (char *)(v40 + 4);
      uint64_t v20 = (char *)[self cdEntityName];
      uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v43 = v42;

      uint64_t v44 = v41;
      unint64_t v25 = v248;
      long long v255 = (void *)sub_1000C51B8(v44, v43, (uint64_t *)&v252);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v35 = (void *)v246;
      int64_t v36 = v249;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Performing fetch during upsert {CDType: %s}", v40, 0xCu);
      swift_arrayDestroy();
      a1 = v251;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v19 = (uint64_t)v247;
    id v45 = (char *)sub_100711E38((uint64_t)v35, (uint64_t)v247);
    swift_bridgeObjectRelease();
    if (v5)
    {
      swift_bridgeObjectRelease();
      return;
    }
    long long v237 = v45;
    uint64_t v47 = a1 & 0xFFFFFFFFFFFFFF8;
    if (!v25) {
      goto LABEL_32;
    }
LABEL_38:
    swift_bridgeObjectRetain();
    BOOL v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v23)
    {
LABEL_136:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_39;
  }
  if (!v37) {
    goto LABEL_27;
  }
  if (v37 != 1) {
    goto LABEL_159;
  }
  swift_bridgeObjectRelease();
  os_log_type_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v48, v49))
  {
    id v50 = (uint8_t *)swift_slowAlloc();
    long long v252 = (void *)swift_slowAlloc();
    *(_DWORD *)id v50 = 136315138;
    uint64_t v246 = (uint64_t)(v50 + 4);
    id v51 = [self cdEntityName];
    uint64_t v20 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v53 = v52;

    unint64_t v25 = v248;
    long long v255 = (void *)sub_1000C51B8((uint64_t)v20, v53, (uint64_t *)&v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a1 = v251;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "Skipping fetch during upsert {CDType: %s}", v50, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    int64_t v36 = v249;
    swift_slowDealloc();
  }

  uint64_t v19 = (uint64_t)v247;
  long long v237 = (char *)sub_1002EEC18((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v47 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v25) {
    goto LABEL_38;
  }
LABEL_32:
  BOOL v23 = *(NSObject **)(v47 + 16);
  if (!v23) {
    goto LABEL_136;
  }
LABEL_39:
  unint64_t v54 = 0;
  uint64_t v223 = v36 + 24;
  uint64_t v226 = v19 + 48;
  unint64_t v222 = (void *)(v19 + 56);
  unint64_t v228 = a1 & 0xC000000000000001;
  uint64_t v221 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v220 = a1 + 32;
  unint64_t v230 = (void **)(v243 + 8);
  uint64_t v229 = &v256;
  uint64_t v225 = v243 + 56;
  unint64_t v224 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v243 + 48);
  uint64_t v219 = (char *)&v255 + 4;
  *(void *)&long long v46 = 136446978;
  long long v218 = v46;
  *(void *)&long long v46 = 136446210;
  long long v233 = v46;
  *(void *)&long long v46 = 136447490;
  long long v215 = v46;
  *(void *)&long long v46 = 136447234;
  long long v213 = v46;
  *(void *)&long long v46 = 136446466;
  long long v216 = v46;
  long long v217 = (char *)&type metadata for Any + 8;
  os_log_t v227 = v23;
  while (1)
  {
    if (v228)
    {
      id v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v57 = __OFADD__(v54, 1);
      v58 = ((char *)&v54->isa + 1);
      if (v57) {
        goto LABEL_155;
      }
      goto LABEL_49;
    }
    if ((unint64_t)v54 >= *(void *)(v221 + 16)) {
      break;
    }
    id v56 = *(id *)(v220 + 8 * (void)v54);
    BOOL v57 = __OFADD__(v54, 1);
    v58 = ((char *)&v54->isa + 1);
    if (v57) {
      goto LABEL_155;
    }
LABEL_49:
    id v59 = (char *)v56;
    long long v60 = (char *)sub_100694DE8([v59 remObjectID], &qword_100910E00);
    if (v5)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v247 = v60;
    os_log_type_t v231 = v58;
    unint64_t v248 = 0;
    v243 = v59;

    id v61 = [*(id *)(v242 + 16) uuid];
    uint64_t v62 = v240;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v63 = UUID.uuidString.getter();
    uint64_t v65 = v64;
    id v66 = (void (*)(char *, uint64_t))*v230;
    uint64_t v67 = v245;
    ((void (*)(char *, uint64_t))*v230)(v62, v245);
    id v68 = [self localInternalAccountID];
    id v69 = [v68 uuid];

    uint64_t v70 = v241;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v19 = UUID.uuidString.getter();
    uint64_t v72 = v71;
    uint64_t v246 = (uint64_t)v66;
    v66(v70, v67);
    if (v63 == v19 && v65 == v72)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v20 = v247;
    }
    else
    {
      char v73 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v74 = v237;
      uint64_t v20 = v247;
      if ((v73 & 1) == 0) {
        goto LABEL_59;
      }
    }
    unint64_t v75 = v248;
    int v76 = 0x7FFFFFFF;
    id v77 = v243;
    switch(*(unsigned __int16 *)(v249 + 68) >> 14)
    {
      case 2:
        int v76 = *(_DWORD *)(v249 + 64);
        break;
      case 3:
        break;
      default:
        int v76 = 2147483519;
        break;
    }
    sub_100662770(2, v76);
    if (v75)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v248 = 0;
    id v74 = v237;
LABEL_59:
    v78._rawValue = &off_1008B4D88;
    char v79 = sub_1006990C8(v78, &qword_100910E00);
    if (*((void *)v74 + 2))
    {
      uint64_t v80 = v20;
      unint64_t v81 = sub_10030703C(v80);
      if (v82)
      {
        id v83 = *(id *)(*((void *)v74 + 7) + 8 * v81);

        uint64_t v84 = v80;
        unint64_t v85 = Logger.logObject.getter();
        os_log_type_t v86 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v85, v86))
        {
          uint64_t v19 = swift_slowAlloc();
          uint64_t v20 = (char *)swift_slowAlloc();
          unint64_t v247 = (char *)swift_slowAlloc();
          long long v252 = v247;
          *(_DWORD *)uint64_t v19 = v216;
          long long v255 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v252);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v19 + 12) = 2114;
          uint64_t v246 = (uint64_t)v83;
          long long v255 = v84;
          BOOL v55 = v84;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(void *)uint64_t v20 = v84;

          _os_log_impl((void *)&_mh_execute_header, v85, v86, "[%{public}s] Skipping merge() and updateChangeCount() since this ingestable is immutable and is not a new insertion {objectID: %{public}@}", (uint8_t *)v19, 0x16u);
          sub_100094134((uint64_t *)&unk_10090A040);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        a1 = v251;
        goto LABEL_42;
      }
    }
    if (v79 == 2)
    {
LABEL_142:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      [self noSuchObjectErrorWithObjectID:v20];
      swift_willThrow();

      return;
    }
    if (v79) {
      uint64_t v87 = 0x746E657665;
    }
    else {
      uint64_t v87 = 0x44497463656A626FLL;
    }
    if (v79) {
      unint64_t v88 = 0xE500000000000000;
    }
    else {
      unint64_t v88 = 0xE800000000000000;
    }
    if (v87 == 0x44497463656A626FLL && v88 == 0xE800000000000000)
    {
LABEL_73:
      swift_bridgeObjectRelease_n();
      goto LABEL_78;
    }
    char v89 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v89 & 1) == 0)
    {
      if (v87 == 0x746E657665 && v88 == 0xE500000000000000) {
        goto LABEL_73;
      }
      char v90 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v90 & 1) == 0) {
        goto LABEL_142;
      }
    }
LABEL_78:
    uint64_t v91 = *(void **)(v249 + 88);
    sub_1000963CC(0, &qword_100910E00);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    id v93 = [ObjCClassFromMetadata entity];
    id v94 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v93 insertIntoManagedObjectContext:v91];
    id v95 = v238;
    [v91 assignObject:v94 toPersistentStore:v95];

    id v96 = v94;
    id v97 = [v20 uuid];
    uint64_t v98 = v244;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v99 = v245;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))v225)(v98, 0, 1, v245);
    uint64_t v100 = v239;
    sub_1001248EC(v98, v239);
    int v101 = (*v224)(v100, 1, v99);
    Class isa = 0;
    if (v101 != 1)
    {
      uint64_t v103 = v239;
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      ((void (*)(uint64_t, uint64_t))v246)(v103, v245);
    }
    [v96 setIdentifier:isa];

    sub_1001260DC(v244);
    id v104 = v20;
    int64_t v105 = v249;
    swift_retain_n();
    id v106 = v96;
    char v107 = v104;
    BOOL v108 = (char *)v106;
    uint64_t v109 = Logger.logObject.getter();
    os_log_type_t v110 = static os_log_type_t.default.getter();
    int v111 = v110;
    BOOL v112 = os_log_type_enabled(v109, v110);
    unint64_t v247 = v108;
    if (v112)
    {
      uint64_t v113 = swift_slowAlloc();
      uint64_t v114 = (void *)swift_slowAlloc();
      uint64_t v246 = swift_slowAlloc();
      long long v252 = (void *)v246;
      *(_DWORD *)uint64_t v113 = v218;
      long long v255 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v252);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v113 + 12) = 2082;
      sub_10010B4E8(v223, (uint64_t)v254);
      sub_10073F754((uint64_t)v254, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      LODWORD(v236) = v111;
      uint64_t v115 = sub_100696CF4();
      unint64_t v117 = v116;
      sub_10073F754((uint64_t)v254, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      long long v255 = (void *)sub_1000C51B8(v115, v117, (uint64_t *)&v252);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v113 + 22) = 2114;
      long long v255 = v107;
      uint64_t v118 = v107;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v114 = v107;

      *(_WORD *)(v113 + 32) = 2112;
      uint64_t v119 = [v247 objectID];
      long long v255 = v119;
      BOOL v108 = v247;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v114[1] = v119;

      _os_log_impl((void *)&_mh_execute_header, v109, (os_log_type_t)v236, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v113, 0x2Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v120 = v105;
    swift_beginAccess();
    a1 = v107;
    sub_1001A6B7C((uint64_t)v108, a1);
    swift_endAccess();

    uint64_t v121 = 2;
    uint64_t v246 = 2;
    id v122 = &byte_1008B67E0;
    do
    {
      if (((*(unsigned int *)(v120 + 64) | ((unint64_t)*(unsigned __int16 *)(v120 + 68) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
      {
        char v123 = *v122;
        id v124 = Logger.logObject.getter();
        os_log_type_t v125 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v124, v125))
        {
          uint64_t v126 = swift_slowAlloc();
          long long v252 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v126 = v233;
          LOBYTE(v255) = v123;
          uint64_t v127 = String.init<A>(describing:)();
          *(void *)(v126 + 4) = sub_1000C51B8(v127, v128, (uint64_t *)&v252);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v124, v125, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v126, 0xCu);
          swift_arrayDestroy();
          uint64_t v120 = v249;
          swift_slowDealloc();
          swift_slowDealloc();
        }
      }
      LODWORD(v19) = *(_DWORD *)(v120 + 64);
      if (*(unsigned __int16 *)(v120 + 68) >> 14 == 2 && (*(_DWORD *)(v120 + 64) & 1) == 0)
      {
        if (qword_100907AE0 != -1) {
          goto LABEL_158;
        }
        goto LABEL_138;
      }
      ++v122;
      --v121;
    }
    while (v121);
    swift_retain_n();
    id v130 = (id)a1;
    uint64_t v131 = v247;
    id v132 = (char *)v130;
    uint64_t v133 = v131;
    id v134 = Logger.logObject.getter();
    int v135 = static os_log_type_t.default.getter();
    BOOL v136 = os_log_type_enabled(v134, (os_log_type_t)v135);
    unint64_t v247 = v132;
    if (v136)
    {
      LODWORD(v234) = v135;
      unint64_t v236 = v134;
      uint64_t v137 = swift_slowAlloc();
      int v138 = (void *)swift_slowAlloc();
      unint64_t v235 = swift_slowAlloc();
      long long v252 = (void *)v235;
      *(_DWORD *)uint64_t v137 = v215;
      long long v255 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v252);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v137 + 12) = 2082;
      sub_10010B4E8(v223, (uint64_t)v253);
      sub_10073F754((uint64_t)v253, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v139 = sub_100696CF4();
      unint64_t v141 = v140;
      sub_10073F754((uint64_t)v253, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      long long v255 = (void *)sub_1000C51B8(v139, v141, (uint64_t *)&v252);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v137 + 22) = 2114;
      long long v255 = v132;
      v142 = v132;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *int v138 = v132;

      *(_WORD *)(v137 + 32) = 2112;
      uint64_t v143 = [v133 objectID];
      long long v255 = v143;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v214 = v138;
      v138[1] = v143;

      *(_WORD *)(v137 + 42) = 2082;
      uint64_t v144 = 2;
      long long v255 = _swiftEmptyArrayStorage;
      sub_1001DE058(0, 2, 0);
      unint64_t v145 = v255;
      unint64_t v146 = v255[2];
      uint64_t v147 = 2 * v146;
      uint64_t v148 = &byte_1008B67E0;
      do
      {
        if (*v148) {
          uint64_t v149 = 0x746E657665;
        }
        else {
          uint64_t v149 = 0x44497463656A626FLL;
        }
        if (*v148) {
          unint64_t v150 = 0xE500000000000000;
        }
        else {
          unint64_t v150 = 0xE800000000000000;
        }
        long long v255 = v145;
        unint64_t v151 = v145[3];
        unint64_t v152 = v146 + 1;
        if (v146 >= v151 >> 1)
        {
          sub_1001DE058(v151 > 1, v146 + 1, 1);
          unint64_t v145 = v255;
        }
        v145[2] = v152;
        unint64_t v153 = &v145[v147];
        v153[4] = v149;
        v153[5] = v150;
        v147 += 2;
        ++v148;
        unint64_t v146 = v152;
        --v144;
      }
      while (v144);
      uint64_t v154 = Array.description.getter();
      unint64_t v156 = v155;
      swift_bridgeObjectRelease();
      long long v255 = (void *)sub_1000C51B8(v154, v156, (uint64_t *)&v252);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v137 + 52) = 1024;
      uint64_t v120 = v249;
      int v157 = *(unsigned __int8 *)(v249 + 104);
      swift_release();
      LODWORD(v255) = v157;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      unint64_t v158 = v236;
      _os_log_impl((void *)&_mh_execute_header, v236, (os_log_type_t)v234, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v137, 0x3Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    a1 = v251;
    id v159 = v243;
    unint64_t v160 = v248;
    sub_100159138(v243, v133, (uint64_t)&off_1008B67C0);
    if (v160)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v248 = 0;
    unint64_t v236 = v133;
    id v161 = [v133 changedValues];
    uint64_t v19 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    os_log_t v162 = v222;
    swift_beginAccess();
    v163 = v247;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v255 = (void *)*v162;
    *os_log_t v162 = 0x8000000000000000;
    uint64_t v20 = (char *)v19;
    sub_1002C4FAC(v19, v163, isUniquelyReferenced_nonNull_native);
    *os_log_t v162 = v255;

    swift_bridgeObjectRelease();
    swift_endAccess();
    int v165 = *(unsigned __int8 *)(v120 + 104);
    if (v246 && (v165 & 1) != 0)
    {
      uint64_t v166 = v236;
      swift_bridgeObjectRelease();
      [v166 updateChangeCount];

      goto LABEL_42;
    }
    uint64_t v167 = v163;
    swift_retain_n();
    uint64_t v19 = v120;
    unint64_t v168 = v167;
    unint64_t v169 = v236;
    swift_bridgeObjectRetain();
    os_log_t v170 = Logger.logObject.getter();
    int v171 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v170, (os_log_type_t)v171))
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      goto LABEL_42;
    }
    int v208 = v171;
    os_log_t v211 = v170;
    unint64_t v212 = v169;
    unint64_t v17 = swift_slowAlloc();
    v214 = (void *)swift_slowAlloc();
    int v209 = (void *)swift_slowAlloc();
    long long v252 = v209;
    *(_DWORD *)unint64_t v17 = v213;
    long long v255 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 1024;
    swift_release();
    LODWORD(v255) = v165;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v17 + 18) = 1024;
    LODWORD(v255) = 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 24) = 2114;
    long long v255 = v168;
    uint64_t v5 = v168;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v214 = v168;

    id v207 = (id)v5;
    long long v210 = (uint8_t *)v17;
    *(_WORD *)(v17 + 34) = 2082;
    int64_t v6 = *((void *)v20 + 2);
    if (!v6) {
      goto LABEL_135;
    }
    long long v255 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1001DE058(0, v6, 0);
    char v172 = v255;
    uint64_t v13 = sub_10072617C((uint64_t)v20);
    a1 = v173;
    uint64_t v174 = 0;
    int64_t v175 = (v20 + 64);
    char v176 = v20[32];
    unint64_t v235 = v173;
    uint64_t v206 = v20 + 88;
    unint64_t v234 = (void *)v6;
    unint64_t v236 = (v20 + 64);
    while (2)
    {
      if (v13 < 0 || v13 >= 1 << v176) {
        goto LABEL_146;
      }
      uint64_t v19 = (unint64_t)v13 >> 6;
      uint64_t v5 = 1 << v13;
      if (((uint64_t)v175[(unint64_t)v13 >> 6].isa & (1 << v13)) == 0) {
        goto LABEL_147;
      }
      if (*((_DWORD *)v20 + 9) != a1) {
        goto LABEL_148;
      }
      uint64_t v179 = *((void *)v20 + 6) + 16 * v13;
      unint64_t v180 = *(char **)v179;
      int64_t v6 = *(void *)(v179 + 8);
      uint64_t v246 = (uint64_t)v174;
      unint64_t v247 = v180;
      long long v255 = v172;
      unint64_t v17 = v172[2];
      unint64_t v181 = v172[3];
      swift_bridgeObjectRetain();
      if (v17 >= v181 >> 1)
      {
        sub_1001DE058(v181 > 1, v17 + 1, 1);
        char v172 = v255;
      }
      v172[2] = v17 + 1;
      unint64_t v182 = &v172[2 * v17];
      v182[4] = v247;
      v182[5] = v6;
      char v176 = v20[32];
      unint64_t v177 = 1 << v176;
      if (v13 >= 1 << v176) {
        goto LABEL_149;
      }
      int64_t v175 = v236;
      Class v183 = v236[v19].isa;
      if (((unint64_t)v183 & v5) == 0) {
        goto LABEL_150;
      }
      if (*((_DWORD *)v20 + 9) != a1) {
        goto LABEL_151;
      }
      unint64_t v184 = (unint64_t)v183 & (-2 << (v13 & 0x3F));
      if (v184)
      {
        unint64_t v177 = __clz(__rbit64(v184)) | v13 & 0xFFFFFFFFFFFFFFC0;
        int64_t v6 = (int64_t)v234;
        uint64_t v178 = v246;
      }
      else
      {
        uint64_t v185 = v19 + 1;
        unint64_t v186 = (v177 + 63) >> 6;
        int64_t v6 = (int64_t)v234;
        uint64_t v178 = v246;
        if (v19 + 1 < v186)
        {
          unint64_t v187 = (unint64_t)v236[v185].isa;
          if (v187) {
            goto LABEL_127;
          }
          uint64_t v185 = v19 + 2;
          if (v19 + 2 < v186)
          {
            unint64_t v187 = (unint64_t)v236[v185].isa;
            if (v187)
            {
LABEL_127:
              unint64_t v177 = __clz(__rbit64(v187)) + (v185 << 6);
            }
            else
            {
              while (v186 - 3 != v19)
              {
                unint64_t v187 = *(void *)&v206[8 * v19++];
                if (v187)
                {
                  uint64_t v185 = v19 + 2;
                  goto LABEL_127;
                }
              }
            }
          }
        }
      }
      uint64_t v174 = (void *)(v178 + 1);
      a1 = v235;
      uint64_t v13 = v177;
      if (v174 != (void *)v6) {
        continue;
      }
      break;
    }
    swift_bridgeObjectRelease();
    a1 = v251;
LABEL_135:
    unint64_t v188 = v210;
    uint64_t v189 = Array.description.getter();
    unint64_t v191 = v190;
    swift_bridgeObjectRelease();
    long long v255 = (void *)sub_1000C51B8(v189, v191, (uint64_t *)&v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v192 = v211;
    _os_log_impl((void *)&_mh_execute_header, v211, (os_log_type_t)v208, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v188, 0x2Cu);
    sub_100094134((uint64_t *)&unk_10090A040);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v193 = v212;
LABEL_42:
    BOOL v23 = v227;
    unint64_t v54 = v231;
    uint64_t v5 = v248;
    if (v231 == v227) {
      goto LABEL_136;
    }
  }
  __break(1u);
LABEL_158:
  swift_once();
LABEL_138:
  sub_10008E2DC(v232, (uint64_t)qword_100920A70);
  id v194 = Logger.logObject.getter();
  os_log_type_t v195 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v194, v195))
  {
    uint64_t v196 = swift_slowAlloc();
    long long v252 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v196 = v216;
    uint64_t v197 = sub_100662CC0(1);
    long long v255 = (void *)sub_1000C51B8(v197, v198, (uint64_t *)&v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v196 + 12) = 2082;
    uint64_t v199 = sub_100662CC0(v19);
    long long v255 = (void *)sub_1000C51B8(v199, v200, (uint64_t *)&v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v194, v195, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v196, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v201 = self;
  NSString v202 = String._bridgeToObjectiveC()();
  sub_100662CC0(1);
  NSString v203 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100662CC0(v19);
  NSString v204 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v201 unauthorizedErrorWithMissingEntitlement:v202 requestedAccessLevel:v203 currentAccesslevel:v204];

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1006BC38C(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v4;
  int64_t v6 = v3;
  uint64_t v250 = a2;
  uint64_t v9 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v9 - 8);
  uint64_t v247 = (uint64_t)&v210 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v251 = (uint64_t)&v210 - v12;
  uint64_t v252 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v252 - 8);
  __chkstk_darwin(v252);
  int64_t v249 = (char *)&v210 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  unint64_t v248 = (char *)&v210 - v16;
  unint64_t v17 = type metadata accessor for Logger();
  os_log_t v243 = *(os_log_t *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v244 = (char *)&v210 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (char *)a3[2];
  unint64_t v19 = a3[3];
  id v254 = a3;
  id v245 = (id)a3[4];
  uint64_t v21 = qword_1009073A0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21 != -1) {
    goto LABEL_164;
  }
LABEL_2:
  uint64_t v22 = sub_10008E2DC(v17, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v257 = v22;
  BOOL v23 = Logger.logObject.getter();
  LODWORD(v253) = static os_log_type_t.info.getter();
  BOOL v24 = os_log_type_enabled(v23, (os_log_type_t)v253);
  unint64_t v25 = a1 >> 62;
  unint64_t v258 = a1;
  unint64_t v255 = a1 >> 62;
  int64_t v256 = v6;
  unint64_t v239 = v17;
  uint64_t v246 = (char *)v13;
  if (v24)
  {
    uint64_t v242 = v20;
    uint64_t v20 = (char *)swift_slowAlloc();
    uint64_t v241 = swift_slowAlloc();
    v259 = (void *)v241;
    *(_DWORD *)uint64_t v20 = 136446978;
    v262 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v259);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *((_WORD *)v20 + 6) = 2048;
    if (!v25)
    {
      uint64_t v26 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
    goto LABEL_168;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v25)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v13) {
      break;
    }
    v259 = _swiftEmptyArrayStorage;
    BOOL v23 = &v259;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v13 & 0x8000000000000000) == 0)
    {
      unint64_t v19 = 0;
      unint64_t v17 = a1 & 0xC000000000000001;
      a1 = (unint64_t)&qword_100910E10;
      while (v13 != v19)
      {
        if (v17) {
          id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v32 = *(id *)(v258 + 8 * v19 + 32);
        }
        id v33 = v32;
        uint64_t v34 = (char *)sub_100694DE8([v33 remObjectID], &qword_100910E10);
        if (v5)
        {

          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        uint64_t v20 = v34;
        ++v19;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        int64_t v6 = v259[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v13 == v19)
        {
          a1 = v258;
          id v35 = v259;
          unint64_t v25 = v255;
          goto LABEL_20;
        }
      }
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      swift_once();
      goto LABEL_2;
    }
    __break(1u);
LABEL_167:
    __break(1u);
LABEL_168:
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    v262 = (void *)v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *((_WORD *)v20 + 11) = 2082;
    sub_1000963CC(0, &qword_100910E10);
    id v27 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v30 = v29;

    uint64_t v31 = v28;
    a1 = v258;
    v262 = (void *)sub_1000C51B8(v31, v30, (uint64_t *)&v259);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *((_WORD *)v20 + 16) = 2082;
    swift_bridgeObjectRetain();
    v262 = (void *)sub_1000C51B8((uint64_t)v242, v19, (uint64_t *)&v259);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v253, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v20, 0x2Au);
    int64_t v6 = v241;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v25 = v255;
  }
  id v35 = _swiftEmptyArrayStorage;
LABEL_20:
  int64_t v36 = v256;
  uint64_t v37 = *(void *)(v256 + 96);
  if (v37 > 1)
  {
    if ((unint64_t)(v37 - 2) >= 3 && v37 != 4499 && v37 != 4599)
    {
LABEL_171:
      ((void (*)(char *, uint64_t, unint64_t))v243[2].isa)(v244, v257, v239);
      sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
      sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
      sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
      __break(1u);
      JUMPOUT(0x1006BEA6CLL);
    }
LABEL_27:
    unint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v253 = (uint64_t)v35;
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      v259 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136315138;
      uint64_t v244 = (char *)(v40 + 4);
      uint64_t v20 = (char *)[self cdEntityName];
      uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v43 = v42;

      uint64_t v44 = v41;
      unint64_t v25 = v255;
      v262 = (void *)sub_1000C51B8(v44, v43, (uint64_t *)&v259);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v35 = (void *)v253;
      int64_t v36 = v256;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Performing fetch during upsert {CDType: %s}", v40, 0xCu);
      swift_arrayDestroy();
      a1 = v258;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    unint64_t v19 = (unint64_t)v254;
    id v45 = (char *)sub_1007122A0((uint64_t)v35, (uint64_t)v254);
    swift_bridgeObjectRelease();
    if (v5)
    {
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v244 = v45;
    uint64_t v47 = a1 & 0xFFFFFFFFFFFFFF8;
    if (!v25) {
      goto LABEL_32;
    }
LABEL_38:
    swift_bridgeObjectRetain();
    BOOL v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v23)
    {
LABEL_149:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_39;
  }
  if (!v37) {
    goto LABEL_27;
  }
  if (v37 != 1) {
    goto LABEL_171;
  }
  swift_bridgeObjectRelease();
  os_log_type_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v48, v49))
  {
    id v50 = (uint8_t *)swift_slowAlloc();
    v259 = (void *)swift_slowAlloc();
    *(_DWORD *)id v50 = 136315138;
    uint64_t v253 = (uint64_t)(v50 + 4);
    id v51 = [self cdEntityName];
    uint64_t v20 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v53 = v52;

    unint64_t v25 = v255;
    v262 = (void *)sub_1000C51B8((uint64_t)v20, v53, (uint64_t *)&v259);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a1 = v258;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "Skipping fetch during upsert {CDType: %s}", v50, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    int64_t v36 = v256;
    swift_slowDealloc();
  }

  unint64_t v19 = (unint64_t)v254;
  uint64_t v244 = (char *)sub_1002EEC24((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v47 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v25) {
    goto LABEL_38;
  }
LABEL_32:
  BOOL v23 = *(NSObject **)(v47 + 16);
  if (!v23) {
    goto LABEL_149;
  }
LABEL_39:
  unint64_t v54 = 0;
  uint64_t v228 = v36 + 24;
  unint64_t v232 = v19 + 48;
  os_log_t v227 = (void **)(v19 + 56);
  unint64_t v235 = a1 & 0xC000000000000001;
  uint64_t v226 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v225 = a1 + 32;
  long long v237 = (id *)(v246 + 8);
  unint64_t v236 = &v263;
  os_log_type_t v231 = v246 + 56;
  unint64_t v230 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v246 + 48);
  unint64_t v224 = (char *)&v262 + 4;
  unint64_t v229 = (unint64_t)"ents";
  unint64_t v233 = 0x80000001007C70B0;
  *(void *)&long long v46 = 136446978;
  long long v223 = v46;
  *(void *)&long long v46 = 136446210;
  long long v240 = v46;
  *(void *)&long long v46 = 136447490;
  long long v220 = v46;
  *(void *)&long long v46 = 136447234;
  long long v218 = v46;
  *(void *)&long long v46 = 136446466;
  long long v221 = v46;
  unint64_t v222 = (char *)&type metadata for Any + 8;
  unint64_t v234 = v23;
  while (1)
  {
    if (v235)
    {
      id v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v57 = __OFADD__(v54, 1);
      v58 = ((char *)&v54->isa + 1);
      if (v57) {
        goto LABEL_167;
      }
      goto LABEL_49;
    }
    if ((unint64_t)v54 >= *(void *)(v226 + 16)) {
      break;
    }
    id v56 = *(id *)(v225 + 8 * (void)v54);
    BOOL v57 = __OFADD__(v54, 1);
    v58 = ((char *)&v54->isa + 1);
    if (v57) {
      goto LABEL_167;
    }
LABEL_49:
    id v59 = (char *)v56;
    long long v60 = sub_100694DE8([v59 remObjectID], &qword_100910E10);
    if (v5)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    id v254 = v60;
    id v238 = v58;
    unint64_t v255 = 0;
    uint64_t v246 = v59;

    id v61 = [*(id *)(v250 + 16) uuid];
    uint64_t v62 = v248;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v63 = UUID.uuidString.getter();
    uint64_t v65 = v64;
    uint64_t v20 = (char *)*v237;
    uint64_t v66 = v252;
    ((void (*)(char *, uint64_t))*v237)(v62, v252);
    id v67 = [self localInternalAccountID];
    id v68 = [v67 uuid];

    id v69 = v249;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v70 = UUID.uuidString.getter();
    uint64_t v72 = v71;
    ((void (*)(char *, uint64_t))v20)(v69, v66);
    if (v63 == v70 && v65 == v72)
    {
      swift_bridgeObjectRelease_n();
      id v73 = v254;
    }
    else
    {
      char v74 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v75 = v244;
      id v73 = v254;
      if ((v74 & 1) == 0)
      {
        int64_t v77 = v256;
        goto LABEL_60;
      }
    }
    unint64_t v76 = v255;
    int64_t v77 = v256;
    int v78 = 0x7FFFFFFF;
    switch(*(unsigned __int16 *)(v256 + 68) >> 14)
    {
      case 2:
        int v78 = *(_DWORD *)(v256 + 64);
        break;
      case 3:
        break;
      default:
        int v78 = 2147483519;
        break;
    }
    sub_100662770(2, v78);
    if (v76)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v255 = 0;
    unint64_t v75 = v244;
LABEL_60:
    unint64_t v19 = sub_100699A38();
    if (*((void *)v75 + 2))
    {
      id v79 = v73;
      unint64_t v80 = sub_10030703C(v79);
      if (v81)
      {
        id v82 = *(id *)(*((void *)v75 + 7) + 8 * v80);

        id v83 = v79;
        uint64_t v84 = Logger.logObject.getter();
        os_log_type_t v85 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v84, v85))
        {
          unint64_t v19 = swift_slowAlloc();
          uint64_t v20 = (char *)swift_slowAlloc();
          uint64_t v253 = swift_slowAlloc();
          v259 = (void *)v253;
          *(_DWORD *)unint64_t v19 = v221;
          v262 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v259);
          id v254 = v82;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v19 + 12) = 2114;
          v262 = v83;
          BOOL v55 = v83;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(void *)uint64_t v20 = v83;

          _os_log_impl((void *)&_mh_execute_header, v84, v85, "[%{public}s] Skipping merge() and updateChangeCount() since this ingestable is immutable and is not a new insertion {objectID: %{public}@}", (uint8_t *)v19, 0x16u);
          sub_100094134((uint64_t *)&unk_10090A040);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        a1 = v258;
        goto LABEL_42;
      }
    }
    if (v19 == 3)
    {
LABEL_148:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      [self noSuchObjectErrorWithObjectID:v73];
      swift_willThrow();

      return;
    }
    if (!(_BYTE)v19)
    {
LABEL_67:
      swift_bridgeObjectRelease_n();
      goto LABEL_69;
    }
    char v86 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v86 & 1) == 0)
    {
      if ((_BYTE)v19)
      {
        if (v19 == 1)
        {
          unint64_t v154 = v229 | 0x8000000000000000;
          unint64_t v155 = 0xD000000000000012;
        }
        else
        {
          unint64_t v155 = 0x74696D69786F7270;
          unint64_t v154 = 0xE900000000000079;
        }
      }
      else
      {
        unint64_t v154 = 0xE800000000000000;
        unint64_t v155 = 0x44497463656A626FLL;
      }
      if (v155 == 0xD000000000000012 && (v229 | 0x8000000000000000) == v154) {
        goto LABEL_67;
      }
      char v189 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v189 & 1) == 0)
      {
        if ((_BYTE)v19)
        {
          if (v19 == 1)
          {
            unint64_t v190 = v229 | 0x8000000000000000;
            unint64_t v191 = 0xD000000000000012;
          }
          else
          {
            unint64_t v191 = 0x74696D69786F7270;
            unint64_t v190 = 0xE900000000000079;
          }
        }
        else
        {
          unint64_t v190 = 0xE800000000000000;
          unint64_t v191 = 0x44497463656A626FLL;
        }
        if (v191 == 0x74696D69786F7270 && v190 == 0xE900000000000079) {
          goto LABEL_67;
        }
        char v198 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v198 & 1) == 0) {
          goto LABEL_148;
        }
      }
    }
LABEL_69:
    uint64_t v87 = *(void **)(v77 + 88);
    sub_1000963CC(0, &qword_100910E10);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    id v89 = [ObjCClassFromMetadata entity];
    id v90 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v89 insertIntoManagedObjectContext:v87];
    id v91 = v245;
    [v87 assignObject:v90 toPersistentStore:v91];

    id v92 = v90;
    id v93 = [v73 uuid];
    uint64_t v94 = v251;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v95 = v252;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))v231)(v94, 0, 1, v252);
    uint64_t v96 = v247;
    sub_1001248EC(v94, v247);
    int v97 = (*v230)(v96, 1, v95);
    Class isa = 0;
    if (v97 != 1)
    {
      uint64_t v99 = v247;
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      ((void (*)(uint64_t, uint64_t))v20)(v99, v252);
    }
    [v92 setIdentifier:isa];

    sub_1001260DC(v251);
    id v100 = v73;
    int64_t v101 = v256;
    swift_retain_n();
    id v102 = v92;
    uint64_t v103 = v100;
    id v104 = v102;
    int64_t v105 = Logger.logObject.getter();
    os_log_type_t v106 = static os_log_type_t.default.getter();
    int v107 = v106;
    BOOL v108 = os_log_type_enabled(v105, v106);
    id v254 = v104;
    if (v108)
    {
      uint64_t v109 = swift_slowAlloc();
      os_log_type_t v110 = (void *)swift_slowAlloc();
      uint64_t v253 = swift_slowAlloc();
      v259 = (void *)v253;
      *(_DWORD *)uint64_t v109 = v223;
      v262 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v259);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v109 + 12) = 2082;
      sub_10010B4E8(v228, (uint64_t)v261);
      sub_10073F754((uint64_t)v261, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      LODWORD(v243) = v107;
      uint64_t v111 = sub_100696CF4();
      unint64_t v113 = v112;
      sub_10073F754((uint64_t)v261, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      v262 = (void *)sub_1000C51B8(v111, v113, (uint64_t *)&v259);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v109 + 22) = 2114;
      v262 = v103;
      uint64_t v114 = v103;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v110 = v103;

      *(_WORD *)(v109 + 32) = 2112;
      uint64_t v115 = [v254 objectID];
      v262 = v115;
      id v104 = v254;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v110[1] = v115;

      _os_log_impl((void *)&_mh_execute_header, v105, (os_log_type_t)v243, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v109, 0x2Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    int64_t v116 = v101;
    swift_beginAccess();
    a1 = v103;
    sub_1001A6B7C((uint64_t)v104, a1);
    swift_endAccess();

    uint64_t v117 = 3;
    uint64_t v253 = 3;
    uint64_t v118 = &byte_1008B6808;
    do
    {
      char v120 = *v118++;
      char v119 = v120;
      if (((*(unsigned int *)(v116 + 64) | ((unint64_t)*(unsigned __int16 *)(v116 + 68) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
      {
        uint64_t v121 = Logger.logObject.getter();
        os_log_type_t v122 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v121, v122))
        {
          uint64_t v123 = swift_slowAlloc();
          v259 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v123 = v240;
          LOBYTE(v262) = v119;
          uint64_t v124 = String.init<A>(describing:)();
          *(void *)(v123 + 4) = sub_1000C51B8(v124, v125, (uint64_t *)&v259);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v121, v122, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v123, 0xCu);
          swift_arrayDestroy();
          int64_t v116 = v256;
          swift_slowDealloc();
          swift_slowDealloc();
        }
      }
      LODWORD(v19) = *(_DWORD *)(v116 + 64);
      if (*(unsigned __int16 *)(v116 + 68) >> 14 == 2 && (*(_DWORD *)(v116 + 64) & 1) == 0)
      {
        if (qword_100907AE0 != -1) {
          goto LABEL_170;
        }
        goto LABEL_151;
      }
      --v117;
    }
    while (v117);
    swift_retain_n();
    id v127 = (id)a1;
    id v128 = v254;
    id v129 = v127;
    uint64_t v20 = (char *)v128;
    id v130 = Logger.logObject.getter();
    int v131 = static os_log_type_t.default.getter();
    BOOL v132 = os_log_type_enabled(v130, (os_log_type_t)v131);
    id v254 = v129;
    if (v132)
    {
      LODWORD(v241) = v131;
      os_log_t v243 = v130;
      uint64_t v133 = swift_slowAlloc();
      id v134 = (void *)swift_slowAlloc();
      uint64_t v242 = (void *)swift_slowAlloc();
      v259 = v242;
      *(_DWORD *)uint64_t v133 = v220;
      v262 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v259);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v133 + 12) = 2082;
      sub_10010B4E8(v228, (uint64_t)v260);
      sub_10073F754((uint64_t)v260, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v135 = sub_100696CF4();
      unint64_t v137 = v136;
      sub_10073F754((uint64_t)v260, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      v262 = (void *)sub_1000C51B8(v135, v137, (uint64_t *)&v259);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v133 + 22) = 2114;
      v262 = v129;
      id v138 = v129;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v134 = v129;

      *(_WORD *)(v133 + 32) = 2112;
      uint64_t v139 = [v20 objectID];
      v262 = v139;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v219 = v134;
      v134[1] = v139;

      *(_WORD *)(v133 + 42) = 2082;
      uint64_t v140 = 3;
      v262 = _swiftEmptyArrayStorage;
      sub_1001DE058(0, 3, 0);
      unint64_t v141 = v262;
      v142 = &byte_1008B6808;
      unint64_t v143 = v229;
      do
      {
        int v145 = *v142++;
        int v144 = v145;
        unint64_t v146 = v143 | 0x8000000000000000;
        BOOL v147 = v145 == 1;
        if (v145 == 1) {
          unint64_t v148 = 0xD000000000000012;
        }
        else {
          unint64_t v148 = 0x74696D69786F7270;
        }
        if (!v147) {
          unint64_t v146 = 0xE900000000000079;
        }
        if (v144) {
          uint64_t v149 = v148;
        }
        else {
          uint64_t v149 = 0x44497463656A626FLL;
        }
        if (v144) {
          unint64_t v150 = v146;
        }
        else {
          unint64_t v150 = 0xE800000000000000;
        }
        v262 = v141;
        unint64_t v152 = v141[2];
        unint64_t v151 = v141[3];
        if (v152 >= v151 >> 1)
        {
          sub_1001DE058(v151 > 1, v152 + 1, 1);
          unint64_t v143 = v229;
          unint64_t v141 = v262;
        }
        v141[2] = v152 + 1;
        unint64_t v153 = &v141[2 * v152];
        v153[4] = v149;
        v153[5] = v150;
        --v140;
      }
      while (v140);
      uint64_t v156 = Array.description.getter();
      unint64_t v158 = v157;
      swift_bridgeObjectRelease();
      v262 = (void *)sub_1000C51B8(v156, v158, (uint64_t *)&v259);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v133 + 52) = 1024;
      int64_t v116 = v256;
      int v159 = *(unsigned __int8 *)(v256 + 104);
      swift_release();
      LODWORD(v262) = v159;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      os_log_t v160 = v243;
      _os_log_impl((void *)&_mh_execute_header, v243, (os_log_type_t)v241, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v133, 0x3Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    a1 = v258;
    unint64_t v161 = v255;
    sub_100158C40(v246, v20, (uint64_t)&off_1008B67E8);
    if (v161)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v255 = 0;
    id v162 = [v20 changedValues];
    uint64_t v163 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    int v164 = v227;
    swift_beginAccess();
    id v165 = v254;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v262 = *v164;
    *int v164 = (void *)0x8000000000000000;
    unint64_t v19 = v163;
    sub_1002C4FAC(v163, v165, isUniquelyReferenced_nonNull_native);
    *int v164 = v262;

    swift_bridgeObjectRelease();
    swift_endAccess();
    int v167 = *(unsigned __int8 *)(v116 + 104);
    if (v253 && (v167 & 1) != 0)
    {
      unint64_t v168 = v20;
      swift_bridgeObjectRelease();
      [v168 updateChangeCount];

      goto LABEL_42;
    }
    id v169 = v165;
    swift_retain_n();
    id v170 = v169;
    int v171 = v20;
    uint64_t v20 = (char *)v163;
    swift_bridgeObjectRetain();
    char v172 = Logger.logObject.getter();
    int v173 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v172, (os_log_type_t)v173))
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      goto LABEL_42;
    }
    int v213 = v173;
    os_log_t v216 = v172;
    long long v217 = v171;
    unint64_t v17 = swift_slowAlloc();
    uint64_t v219 = (void *)swift_slowAlloc();
    v214 = (void *)swift_slowAlloc();
    v259 = v214;
    *(_DWORD *)unint64_t v17 = v218;
    v262 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v259);
    unint64_t v19 = (unint64_t)v236;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 1024;
    swift_release();
    LODWORD(v262) = v167;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v17 + 18) = 1024;
    LODWORD(v262) = 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 24) = 2114;
    v262 = v170;
    uint64_t v5 = (uint64_t)v170;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v219 = v170;

    id v212 = (id)v5;
    long long v215 = (uint8_t *)v17;
    *(_WORD *)(v17 + 34) = 2082;
    int64_t v6 = *((void *)v20 + 2);
    if (!v6) {
      goto LABEL_142;
    }
    v262 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1001DE058(0, v6, 0);
    uint64_t v174 = v262;
    uint64_t v13 = sub_10072617C((uint64_t)v20);
    a1 = v175;
    uint64_t v176 = 0;
    os_log_t v177 = (os_log_t)(v20 + 64);
    char v178 = v20[32];
    uint64_t v241 = v175;
    os_log_t v211 = v20 + 88;
    uint64_t v242 = (void *)v6;
    os_log_t v243 = (os_log_t)(v20 + 64);
    while (2)
    {
      if (v13 < 0 || v13 >= 1 << v178) {
        goto LABEL_158;
      }
      unint64_t v19 = (unint64_t)v13 >> 6;
      uint64_t v5 = 1 << v13;
      if (((uint64_t)v177[(unint64_t)v13 >> 6].isa & (1 << v13)) == 0) {
        goto LABEL_159;
      }
      if (*((_DWORD *)v20 + 9) != a1) {
        goto LABEL_160;
      }
      uint64_t v180 = *((void *)v20 + 6) + 16 * v13;
      unint64_t v181 = *(void **)v180;
      int64_t v6 = *(void *)(v180 + 8);
      uint64_t v253 = v176;
      id v254 = v181;
      v262 = v174;
      unint64_t v17 = v174[2];
      unint64_t v182 = v174[3];
      swift_bridgeObjectRetain();
      if (v17 >= v182 >> 1)
      {
        sub_1001DE058(v182 > 1, v17 + 1, 1);
        uint64_t v174 = v262;
      }
      v174[2] = v17 + 1;
      Class v183 = &v174[2 * v17];
      v183[4] = v254;
      v183[5] = v6;
      char v178 = v20[32];
      unint64_t v179 = 1 << v178;
      if (v13 >= 1 << v178) {
        goto LABEL_161;
      }
      os_log_t v177 = v243;
      Class v184 = v243[v19].isa;
      if (((unint64_t)v184 & v5) == 0) {
        goto LABEL_162;
      }
      if (*((_DWORD *)v20 + 9) != a1) {
        goto LABEL_163;
      }
      unint64_t v185 = (unint64_t)v184 & (-2 << (v13 & 0x3F));
      if (v185)
      {
        unint64_t v179 = __clz(__rbit64(v185)) | v13 & 0xFFFFFFFFFFFFFFC0;
        int64_t v6 = (int64_t)v242;
      }
      else
      {
        unint64_t v186 = v19 + 1;
        unint64_t v187 = (v179 + 63) >> 6;
        int64_t v6 = (int64_t)v242;
        if (v19 + 1 < v187)
        {
          Class v188 = v243[v186].isa;
          if (v188) {
            goto LABEL_126;
          }
          unint64_t v186 = v19 + 2;
          if (v19 + 2 < v187)
          {
            Class v188 = v243[v186].isa;
            if (v188)
            {
LABEL_126:
              unint64_t v179 = __clz(__rbit64((unint64_t)v188)) + (v186 << 6);
            }
            else
            {
              while (v187 - 3 != v19)
              {
                Class v188 = *(Class *)&v211[8 * v19++];
                if (v188)
                {
                  unint64_t v186 = v19 + 2;
                  goto LABEL_126;
                }
              }
            }
          }
        }
      }
      uint64_t v176 = v253 + 1;
      a1 = v241;
      uint64_t v13 = v179;
      if (v253 + 1 != v6) {
        continue;
      }
      break;
    }
    swift_bridgeObjectRelease();
    a1 = v258;
LABEL_142:
    os_log_t v192 = v215;
    uint64_t v193 = Array.description.getter();
    unint64_t v195 = v194;
    swift_bridgeObjectRelease();
    v262 = (void *)sub_1000C51B8(v193, v195, (uint64_t *)&v259);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v196 = v216;
    _os_log_impl((void *)&_mh_execute_header, v216, (os_log_type_t)v213, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v192, 0x2Cu);
    sub_100094134((uint64_t *)&unk_10090A040);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v197 = v217;
LABEL_42:
    BOOL v23 = v234;
    unint64_t v54 = v238;
    uint64_t v5 = v255;
    if (v238 == v234) {
      goto LABEL_149;
    }
  }
  __break(1u);
LABEL_170:
  swift_once();
LABEL_151:
  sub_10008E2DC(v239, (uint64_t)qword_100920A70);
  uint64_t v199 = Logger.logObject.getter();
  os_log_type_t v200 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v199, v200))
  {
    uint64_t v201 = swift_slowAlloc();
    v259 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v201 = v221;
    uint64_t v202 = sub_100662CC0(1);
    v262 = (void *)sub_1000C51B8(v202, v203, (uint64_t *)&v259);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v201 + 12) = 2082;
    uint64_t v204 = sub_100662CC0(v19);
    v262 = (void *)sub_1000C51B8(v204, v205, (uint64_t *)&v259);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v199, v200, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v201, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v206 = self;
  NSString v207 = String._bridgeToObjectiveC()();
  sub_100662CC0(1);
  NSString v208 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100662CC0(v19);
  NSString v209 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v206 unauthorizedErrorWithMissingEntitlement:v207 requestedAccessLevel:v208 currentAccesslevel:v209];

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1006BEA7C(unint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5 = v4;
  int64_t v6 = v3;
  uint64_t v242 = a2;
  uint64_t v9 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v9 - 8);
  uint64_t v239 = (uint64_t)&v205 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v244 = (uint64_t)&v205 - v12;
  uint64_t v245 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v245 - 8);
  __chkstk_darwin(v245);
  uint64_t v241 = (char *)&v205 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  long long v240 = (char *)&v205 - v16;
  unint64_t v17 = type metadata accessor for Logger();
  unint64_t v236 = *(NSObject **)(v17 - 8);
  __chkstk_darwin(v17);
  long long v237 = (char *)&v205 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (char *)*((void *)a3 + 2);
  uint64_t v19 = *((void *)a3 + 3);
  uint64_t v247 = a3;
  id v238 = (id)*((void *)a3 + 4);
  uint64_t v21 = qword_1009073A0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21 != -1) {
    goto LABEL_152;
  }
LABEL_2:
  uint64_t v22 = sub_10008E2DC(v17, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v250 = v22;
  BOOL v23 = Logger.logObject.getter();
  LODWORD(v246) = static os_log_type_t.info.getter();
  BOOL v24 = os_log_type_enabled(v23, (os_log_type_t)v246);
  unint64_t v25 = a1 >> 62;
  unint64_t v251 = a1;
  unint64_t v248 = a1 >> 62;
  int64_t v249 = v6;
  unint64_t v232 = v17;
  os_log_t v243 = (char *)v13;
  if (v24)
  {
    unint64_t v235 = (unint64_t)v20;
    uint64_t v20 = (char *)swift_slowAlloc();
    unint64_t v234 = (void *)swift_slowAlloc();
    uint64_t v252 = v234;
    *(_DWORD *)uint64_t v20 = 136446978;
    unint64_t v255 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *((_WORD *)v20 + 6) = 2048;
    if (!v25)
    {
      uint64_t v26 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
    goto LABEL_156;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v25)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v13) {
      break;
    }
    uint64_t v252 = _swiftEmptyArrayStorage;
    BOOL v23 = &v252;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v13 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = 0;
      unint64_t v17 = a1 & 0xC000000000000001;
      a1 = (unint64_t)&qword_100910E40;
      while (v13 != v19)
      {
        if (v17) {
          id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v32 = *(id *)(v251 + 8 * v19 + 32);
        }
        id v33 = v32;
        uint64_t v34 = (char *)sub_100694DE8([v33 remObjectID], (unint64_t *)&qword_100910E40);
        if (v5)
        {

          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        uint64_t v20 = v34;
        ++v19;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        int64_t v6 = v252[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v13 == v19)
        {
          a1 = v251;
          id v35 = v252;
          unint64_t v25 = v248;
          goto LABEL_20;
        }
      }
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      swift_once();
      goto LABEL_2;
    }
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    unint64_t v255 = (void *)v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *((_WORD *)v20 + 11) = 2082;
    sub_1000963CC(0, (unint64_t *)&qword_100910E40);
    id v27 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v30 = v29;

    uint64_t v31 = v28;
    a1 = v251;
    unint64_t v255 = (void *)sub_1000C51B8(v31, v30, (uint64_t *)&v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *((_WORD *)v20 + 16) = 2082;
    swift_bridgeObjectRetain();
    unint64_t v255 = (void *)sub_1000C51B8(v235, v19, (uint64_t *)&v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v246, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v20, 0x2Au);
    int64_t v6 = (int64_t)v234;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v25 = v248;
  }
  id v35 = _swiftEmptyArrayStorage;
LABEL_20:
  int64_t v36 = v249;
  uint64_t v37 = *(void *)(v249 + 96);
  if (v37 > 1)
  {
    if ((unint64_t)(v37 - 2) >= 3 && v37 != 4499 && v37 != 4599)
    {
LABEL_159:
      ((void (*)(char *, uint64_t, unint64_t))v236[2].isa)(v237, v250, v232);
      sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
      sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
      sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
      __break(1u);
      JUMPOUT(0x1006C0F8CLL);
    }
LABEL_27:
    unint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v246 = (uint64_t)v35;
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v252 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136315138;
      long long v237 = (char *)(v40 + 4);
      uint64_t v20 = (char *)[self cdEntityName];
      uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v43 = v42;

      uint64_t v44 = v41;
      unint64_t v25 = v248;
      unint64_t v255 = (void *)sub_1000C51B8(v44, v43, (uint64_t *)&v252);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v35 = (void *)v246;
      int64_t v36 = v249;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Performing fetch during upsert {CDType: %s}", v40, 0xCu);
      swift_arrayDestroy();
      a1 = v251;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v19 = (uint64_t)v247;
    id v45 = (char *)sub_100712708((uint64_t)v35, (uint64_t)v247);
    swift_bridgeObjectRelease();
    if (v5)
    {
      swift_bridgeObjectRelease();
      return;
    }
    long long v237 = v45;
    uint64_t v47 = a1 & 0xFFFFFFFFFFFFFF8;
    if (!v25) {
      goto LABEL_32;
    }
LABEL_38:
    swift_bridgeObjectRetain();
    BOOL v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v23)
    {
LABEL_136:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_39;
  }
  if (!v37) {
    goto LABEL_27;
  }
  if (v37 != 1) {
    goto LABEL_159;
  }
  swift_bridgeObjectRelease();
  os_log_type_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v48, v49))
  {
    id v50 = (uint8_t *)swift_slowAlloc();
    uint64_t v252 = (void *)swift_slowAlloc();
    *(_DWORD *)id v50 = 136315138;
    uint64_t v246 = (uint64_t)(v50 + 4);
    id v51 = [self cdEntityName];
    uint64_t v20 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v53 = v52;

    unint64_t v25 = v248;
    unint64_t v255 = (void *)sub_1000C51B8((uint64_t)v20, v53, (uint64_t *)&v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a1 = v251;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "Skipping fetch during upsert {CDType: %s}", v50, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    int64_t v36 = v249;
    swift_slowDealloc();
  }

  uint64_t v19 = (uint64_t)v247;
  long long v237 = (char *)sub_1002EEC30((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v47 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v25) {
    goto LABEL_38;
  }
LABEL_32:
  BOOL v23 = *(NSObject **)(v47 + 16);
  if (!v23) {
    goto LABEL_136;
  }
LABEL_39:
  unint64_t v54 = 0;
  uint64_t v223 = v36 + 24;
  uint64_t v226 = v19 + 48;
  unint64_t v222 = (void *)(v19 + 56);
  unint64_t v228 = a1 & 0xC000000000000001;
  uint64_t v221 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v220 = a1 + 32;
  unint64_t v230 = (void **)(v243 + 8);
  unint64_t v229 = &v256;
  unint64_t v225 = v243 + 56;
  unint64_t v224 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v243 + 48);
  uint64_t v219 = (char *)&v255 + 4;
  *(void *)&long long v46 = 136446978;
  long long v218 = v46;
  *(void *)&long long v46 = 136446210;
  long long v233 = v46;
  *(void *)&long long v46 = 136447490;
  long long v215 = v46;
  *(void *)&long long v46 = 136447234;
  long long v213 = v46;
  *(void *)&long long v46 = 136446466;
  long long v216 = v46;
  long long v217 = (char *)&type metadata for Any + 8;
  os_log_t v227 = v23;
  while (1)
  {
    if (v228)
    {
      id v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v57 = __OFADD__(v54, 1);
      v58 = ((char *)&v54->isa + 1);
      if (v57) {
        goto LABEL_155;
      }
      goto LABEL_49;
    }
    if ((unint64_t)v54 >= *(void *)(v221 + 16)) {
      break;
    }
    id v56 = *(id *)(v220 + 8 * (void)v54);
    BOOL v57 = __OFADD__(v54, 1);
    v58 = ((char *)&v54->isa + 1);
    if (v57) {
      goto LABEL_155;
    }
LABEL_49:
    id v59 = (char *)v56;
    long long v60 = (char *)sub_100694DE8([v59 remObjectID], (unint64_t *)&qword_100910E40);
    if (v5)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    uint64_t v247 = v60;
    os_log_type_t v231 = v58;
    unint64_t v248 = 0;
    os_log_t v243 = v59;

    id v61 = [*(id *)(v242 + 16) uuid];
    uint64_t v62 = v240;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v63 = UUID.uuidString.getter();
    uint64_t v65 = v64;
    uint64_t v66 = (void (*)(char *, uint64_t))*v230;
    uint64_t v67 = v245;
    ((void (*)(char *, uint64_t))*v230)(v62, v245);
    id v68 = [self localInternalAccountID];
    id v69 = [v68 uuid];

    uint64_t v70 = v241;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v19 = UUID.uuidString.getter();
    uint64_t v72 = v71;
    uint64_t v246 = (uint64_t)v66;
    v66(v70, v67);
    if (v63 == v19 && v65 == v72)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v20 = v247;
    }
    else
    {
      char v73 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v74 = v237;
      uint64_t v20 = v247;
      if ((v73 & 1) == 0) {
        goto LABEL_59;
      }
    }
    unint64_t v75 = v248;
    int v76 = 0x7FFFFFFF;
    int64_t v77 = v243;
    switch(*(unsigned __int16 *)(v249 + 68) >> 14)
    {
      case 2:
        int v76 = *(_DWORD *)(v249 + 64);
        break;
      case 3:
        break;
      default:
        int v76 = 2147483519;
        break;
    }
    sub_100662770(2, v76);
    if (v75)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v248 = 0;
    char v74 = v237;
LABEL_59:
    v78._rawValue = &off_1008B4C70;
    char v79 = sub_1006990C8(v78, (unint64_t *)&qword_100910E40);
    if (*((void *)v74 + 2))
    {
      unint64_t v80 = v20;
      unint64_t v81 = sub_10030703C(v80);
      if (v82)
      {
        id v83 = *(id *)(*((void *)v74 + 7) + 8 * v81);

        uint64_t v84 = v80;
        os_log_type_t v85 = Logger.logObject.getter();
        os_log_type_t v86 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v85, v86))
        {
          uint64_t v19 = swift_slowAlloc();
          uint64_t v20 = (char *)swift_slowAlloc();
          uint64_t v247 = (char *)swift_slowAlloc();
          uint64_t v252 = v247;
          *(_DWORD *)uint64_t v19 = v216;
          unint64_t v255 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v252);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v19 + 12) = 2114;
          uint64_t v246 = (uint64_t)v83;
          unint64_t v255 = v84;
          BOOL v55 = v84;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(void *)uint64_t v20 = v84;

          _os_log_impl((void *)&_mh_execute_header, v85, v86, "[%{public}s] Skipping merge() and updateChangeCount() since this ingestable is immutable and is not a new insertion {objectID: %{public}@}", (uint8_t *)v19, 0x16u);
          sub_100094134((uint64_t *)&unk_10090A040);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        a1 = v251;
        goto LABEL_42;
      }
    }
    if (v79 == 2)
    {
LABEL_142:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      [self noSuchObjectErrorWithObjectID:v20];
      swift_willThrow();

      return;
    }
    if (v79) {
      uint64_t v87 = 0x706D6F4365746164;
    }
    else {
      uint64_t v87 = 0x44497463656A626FLL;
    }
    if (v79) {
      unint64_t v88 = 0xEE0073746E656E6FLL;
    }
    else {
      unint64_t v88 = 0xE800000000000000;
    }
    if (v87 == 0x44497463656A626FLL && v88 == 0xE800000000000000)
    {
LABEL_73:
      swift_bridgeObjectRelease_n();
      goto LABEL_78;
    }
    char v89 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v89 & 1) == 0)
    {
      if (v87 == 0x706D6F4365746164 && v88 == 0xEE0073746E656E6FLL) {
        goto LABEL_73;
      }
      char v90 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v90 & 1) == 0) {
        goto LABEL_142;
      }
    }
LABEL_78:
    id v91 = *(void **)(v249 + 88);
    sub_1000963CC(0, (unint64_t *)&qword_100910E40);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    id v93 = [ObjCClassFromMetadata entity];
    id v94 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v93 insertIntoManagedObjectContext:v91];
    id v95 = v238;
    [v91 assignObject:v94 toPersistentStore:v95];

    id v96 = v94;
    id v97 = [v20 uuid];
    uint64_t v98 = v244;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v99 = v245;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))v225)(v98, 0, 1, v245);
    uint64_t v100 = v239;
    sub_1001248EC(v98, v239);
    int v101 = (*v224)(v100, 1, v99);
    Class isa = 0;
    if (v101 != 1)
    {
      uint64_t v103 = v239;
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      ((void (*)(uint64_t, uint64_t))v246)(v103, v245);
    }
    [v96 setIdentifier:isa];

    sub_1001260DC(v244);
    id v104 = v20;
    int64_t v105 = v249;
    swift_retain_n();
    id v106 = v96;
    int v107 = v104;
    BOOL v108 = (char *)v106;
    uint64_t v109 = Logger.logObject.getter();
    os_log_type_t v110 = static os_log_type_t.default.getter();
    int v111 = v110;
    BOOL v112 = os_log_type_enabled(v109, v110);
    uint64_t v247 = v108;
    if (v112)
    {
      uint64_t v113 = swift_slowAlloc();
      uint64_t v114 = (void *)swift_slowAlloc();
      uint64_t v246 = swift_slowAlloc();
      uint64_t v252 = (void *)v246;
      *(_DWORD *)uint64_t v113 = v218;
      unint64_t v255 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v252);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v113 + 12) = 2082;
      sub_10010B4E8(v223, (uint64_t)v254);
      sub_10073F754((uint64_t)v254, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      LODWORD(v236) = v111;
      uint64_t v115 = sub_100696CF4();
      unint64_t v117 = v116;
      sub_10073F754((uint64_t)v254, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      unint64_t v255 = (void *)sub_1000C51B8(v115, v117, (uint64_t *)&v252);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v113 + 22) = 2114;
      unint64_t v255 = v107;
      uint64_t v118 = v107;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v114 = v107;

      *(_WORD *)(v113 + 32) = 2112;
      char v119 = [v247 objectID];
      unint64_t v255 = v119;
      BOOL v108 = v247;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v114[1] = v119;

      _os_log_impl((void *)&_mh_execute_header, v109, (os_log_type_t)v236, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v113, 0x2Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v120 = v105;
    swift_beginAccess();
    a1 = v107;
    sub_1001A6B7C((uint64_t)v108, a1);
    swift_endAccess();

    uint64_t v121 = 2;
    uint64_t v246 = 2;
    os_log_type_t v122 = &byte_1008B6830;
    do
    {
      if (((*(unsigned int *)(v120 + 64) | ((unint64_t)*(unsigned __int16 *)(v120 + 68) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
      {
        char v123 = *v122;
        uint64_t v124 = Logger.logObject.getter();
        os_log_type_t v125 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v124, v125))
        {
          uint64_t v126 = swift_slowAlloc();
          uint64_t v252 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v126 = v233;
          LOBYTE(v255) = v123;
          uint64_t v127 = String.init<A>(describing:)();
          *(void *)(v126 + 4) = sub_1000C51B8(v127, v128, (uint64_t *)&v252);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v124, v125, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v126, 0xCu);
          swift_arrayDestroy();
          uint64_t v120 = v249;
          swift_slowDealloc();
          swift_slowDealloc();
        }
      }
      LODWORD(v19) = *(_DWORD *)(v120 + 64);
      if (*(unsigned __int16 *)(v120 + 68) >> 14 == 2 && (*(_DWORD *)(v120 + 64) & 1) == 0)
      {
        if (qword_100907AE0 != -1) {
          goto LABEL_158;
        }
        goto LABEL_138;
      }
      ++v122;
      --v121;
    }
    while (v121);
    swift_retain_n();
    id v130 = (id)a1;
    int v131 = v247;
    BOOL v132 = (char *)v130;
    uint64_t v133 = v131;
    id v134 = Logger.logObject.getter();
    int v135 = static os_log_type_t.default.getter();
    BOOL v136 = os_log_type_enabled(v134, (os_log_type_t)v135);
    uint64_t v247 = v132;
    if (v136)
    {
      LODWORD(v234) = v135;
      unint64_t v236 = v134;
      uint64_t v137 = swift_slowAlloc();
      id v138 = (void *)swift_slowAlloc();
      unint64_t v235 = swift_slowAlloc();
      uint64_t v252 = (void *)v235;
      *(_DWORD *)uint64_t v137 = v215;
      unint64_t v255 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v252);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v137 + 12) = 2082;
      sub_10010B4E8(v223, (uint64_t)v253);
      sub_10073F754((uint64_t)v253, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v139 = sub_100696CF4();
      unint64_t v141 = v140;
      sub_10073F754((uint64_t)v253, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      unint64_t v255 = (void *)sub_1000C51B8(v139, v141, (uint64_t *)&v252);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v137 + 22) = 2114;
      unint64_t v255 = v132;
      v142 = v132;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v138 = v132;

      *(_WORD *)(v137 + 32) = 2112;
      unint64_t v143 = [v133 objectID];
      unint64_t v255 = v143;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v214 = v138;
      v138[1] = v143;

      *(_WORD *)(v137 + 42) = 2082;
      uint64_t v144 = 2;
      unint64_t v255 = _swiftEmptyArrayStorage;
      sub_1001DE058(0, 2, 0);
      int v145 = v255;
      unint64_t v146 = v255[2];
      uint64_t v147 = 2 * v146;
      unint64_t v148 = &byte_1008B6830;
      do
      {
        if (*v148) {
          uint64_t v149 = 0x706D6F4365746164;
        }
        else {
          uint64_t v149 = 0x44497463656A626FLL;
        }
        if (*v148) {
          unint64_t v150 = 0xEE0073746E656E6FLL;
        }
        else {
          unint64_t v150 = 0xE800000000000000;
        }
        unint64_t v255 = v145;
        unint64_t v151 = v145[3];
        unint64_t v152 = v146 + 1;
        if (v146 >= v151 >> 1)
        {
          sub_1001DE058(v151 > 1, v146 + 1, 1);
          int v145 = v255;
        }
        v145[2] = v152;
        unint64_t v153 = &v145[v147];
        v153[4] = v149;
        v153[5] = v150;
        v147 += 2;
        ++v148;
        unint64_t v146 = v152;
        --v144;
      }
      while (v144);
      uint64_t v154 = Array.description.getter();
      unint64_t v156 = v155;
      swift_bridgeObjectRelease();
      unint64_t v255 = (void *)sub_1000C51B8(v154, v156, (uint64_t *)&v252);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v137 + 52) = 1024;
      uint64_t v120 = v249;
      int v157 = *(unsigned __int8 *)(v249 + 104);
      swift_release();
      LODWORD(v255) = v157;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      unint64_t v158 = v236;
      _os_log_impl((void *)&_mh_execute_header, v236, (os_log_type_t)v234, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v137, 0x3Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    a1 = v251;
    int v159 = v243;
    unint64_t v160 = v248;
    sub_1001588E4(v243, v133, (uint64_t)&off_1008B6810);
    if (v160)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v248 = 0;
    unint64_t v236 = v133;
    id v161 = [v133 changedValues];
    uint64_t v19 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v162 = v222;
    swift_beginAccess();
    uint64_t v163 = v247;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v255 = (void *)*v162;
    *id v162 = 0x8000000000000000;
    uint64_t v20 = (char *)v19;
    sub_1002C4FAC(v19, v163, isUniquelyReferenced_nonNull_native);
    *id v162 = v255;

    swift_bridgeObjectRelease();
    swift_endAccess();
    int v165 = *(unsigned __int8 *)(v120 + 104);
    if (v246 && (v165 & 1) != 0)
    {
      uint64_t v166 = v236;
      swift_bridgeObjectRelease();
      [v166 updateChangeCount];

      goto LABEL_42;
    }
    int v167 = v163;
    swift_retain_n();
    uint64_t v19 = v120;
    unint64_t v168 = v167;
    id v169 = v236;
    swift_bridgeObjectRetain();
    id v170 = Logger.logObject.getter();
    int v171 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v170, (os_log_type_t)v171))
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      goto LABEL_42;
    }
    int v208 = v171;
    os_log_t v211 = v170;
    id v212 = v169;
    unint64_t v17 = swift_slowAlloc();
    v214 = (void *)swift_slowAlloc();
    NSString v209 = (void *)swift_slowAlloc();
    uint64_t v252 = v209;
    *(_DWORD *)unint64_t v17 = v213;
    unint64_t v255 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 1024;
    swift_release();
    LODWORD(v255) = v165;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v17 + 18) = 1024;
    LODWORD(v255) = 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 24) = 2114;
    unint64_t v255 = v168;
    uint64_t v5 = v168;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v214 = v168;

    id v207 = (id)v5;
    uint64_t v210 = (uint8_t *)v17;
    *(_WORD *)(v17 + 34) = 2082;
    int64_t v6 = *((void *)v20 + 2);
    if (!v6) {
      goto LABEL_135;
    }
    unint64_t v255 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1001DE058(0, v6, 0);
    char v172 = v255;
    uint64_t v13 = sub_10072617C((uint64_t)v20);
    a1 = v173;
    uint64_t v174 = 0;
    unint64_t v175 = (v20 + 64);
    char v176 = v20[32];
    unint64_t v235 = v173;
    uint64_t v206 = v20 + 88;
    unint64_t v234 = (void *)v6;
    unint64_t v236 = (v20 + 64);
    while (2)
    {
      if (v13 < 0 || v13 >= 1 << v176) {
        goto LABEL_146;
      }
      uint64_t v19 = (unint64_t)v13 >> 6;
      uint64_t v5 = 1 << v13;
      if (((uint64_t)v175[(unint64_t)v13 >> 6].isa & (1 << v13)) == 0) {
        goto LABEL_147;
      }
      if (*((_DWORD *)v20 + 9) != a1) {
        goto LABEL_148;
      }
      uint64_t v179 = *((void *)v20 + 6) + 16 * v13;
      uint64_t v180 = *(char **)v179;
      int64_t v6 = *(void *)(v179 + 8);
      uint64_t v246 = (uint64_t)v174;
      uint64_t v247 = v180;
      unint64_t v255 = v172;
      unint64_t v17 = v172[2];
      unint64_t v181 = v172[3];
      swift_bridgeObjectRetain();
      if (v17 >= v181 >> 1)
      {
        sub_1001DE058(v181 > 1, v17 + 1, 1);
        char v172 = v255;
      }
      v172[2] = v17 + 1;
      unint64_t v182 = &v172[2 * v17];
      v182[4] = v247;
      v182[5] = v6;
      char v176 = v20[32];
      unint64_t v177 = 1 << v176;
      if (v13 >= 1 << v176) {
        goto LABEL_149;
      }
      unint64_t v175 = v236;
      Class v183 = v236[v19].isa;
      if (((unint64_t)v183 & v5) == 0) {
        goto LABEL_150;
      }
      if (*((_DWORD *)v20 + 9) != a1) {
        goto LABEL_151;
      }
      unint64_t v184 = (unint64_t)v183 & (-2 << (v13 & 0x3F));
      if (v184)
      {
        unint64_t v177 = __clz(__rbit64(v184)) | v13 & 0xFFFFFFFFFFFFFFC0;
        int64_t v6 = (int64_t)v234;
        uint64_t v178 = v246;
      }
      else
      {
        uint64_t v185 = v19 + 1;
        unint64_t v186 = (v177 + 63) >> 6;
        int64_t v6 = (int64_t)v234;
        uint64_t v178 = v246;
        if (v19 + 1 < v186)
        {
          unint64_t v187 = (unint64_t)v236[v185].isa;
          if (v187) {
            goto LABEL_127;
          }
          uint64_t v185 = v19 + 2;
          if (v19 + 2 < v186)
          {
            unint64_t v187 = (unint64_t)v236[v185].isa;
            if (v187)
            {
LABEL_127:
              unint64_t v177 = __clz(__rbit64(v187)) + (v185 << 6);
            }
            else
            {
              while (v186 - 3 != v19)
              {
                unint64_t v187 = *(void *)&v206[8 * v19++];
                if (v187)
                {
                  uint64_t v185 = v19 + 2;
                  goto LABEL_127;
                }
              }
            }
          }
        }
      }
      uint64_t v174 = (void *)(v178 + 1);
      a1 = v235;
      uint64_t v13 = v177;
      if (v174 != (void *)v6) {
        continue;
      }
      break;
    }
    swift_bridgeObjectRelease();
    a1 = v251;
LABEL_135:
    Class v188 = v210;
    uint64_t v189 = Array.description.getter();
    unint64_t v191 = v190;
    swift_bridgeObjectRelease();
    unint64_t v255 = (void *)sub_1000C51B8(v189, v191, (uint64_t *)&v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v192 = v211;
    _os_log_impl((void *)&_mh_execute_header, v211, (os_log_type_t)v208, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v188, 0x2Cu);
    sub_100094134((uint64_t *)&unk_10090A040);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v193 = v212;
LABEL_42:
    BOOL v23 = v227;
    unint64_t v54 = v231;
    uint64_t v5 = v248;
    if (v231 == v227) {
      goto LABEL_136;
    }
  }
  __break(1u);
LABEL_158:
  swift_once();
LABEL_138:
  sub_10008E2DC(v232, (uint64_t)qword_100920A70);
  unint64_t v194 = Logger.logObject.getter();
  os_log_type_t v195 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v194, v195))
  {
    uint64_t v196 = swift_slowAlloc();
    uint64_t v252 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v196 = v216;
    uint64_t v197 = sub_100662CC0(1);
    unint64_t v255 = (void *)sub_1000C51B8(v197, v198, (uint64_t *)&v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v196 + 12) = 2082;
    uint64_t v199 = sub_100662CC0(v19);
    unint64_t v255 = (void *)sub_1000C51B8(v199, v200, (uint64_t *)&v252);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v194, v195, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v196, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v201 = self;
  NSString v202 = String._bridgeToObjectiveC()();
  sub_100662CC0(1);
  NSString v203 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100662CC0(v19);
  NSString v204 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v201 unauthorizedErrorWithMissingEntitlement:v202 requestedAccessLevel:v203 currentAccesslevel:v204];

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1006C0F9C(unint64_t a1, uint64_t a2, char **a3)
{
  uint64_t v5 = v4;
  unint64_t v6 = v3;
  uint64_t v246 = a2;
  uint64_t v9 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v9 - 8);
  uint64_t v244 = (uint64_t)&v211 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  os_log_t v243 = (char *)&v211 - v12;
  uint64_t v255 = type metadata accessor for UUID();
  int64_t v249 = *(char **)(v255 - 8);
  __chkstk_darwin(v255);
  uint64_t v245 = (char *)&v211 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v252 = (char *)&v211 - v15;
  uint64_t isa = type metadata accessor for Logger();
  uint64_t v247 = *(uint8_t **)(isa - 8);
  __chkstk_darwin(isa);
  unint64_t v248 = (char *)&v211 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v19 = (unint64_t)a3[2];
  unint64_t v18 = (unint64_t)a3[3];
  uint64_t v250 = a3;
  uint64_t v242 = a3[4];
  uint64_t v20 = qword_1009073A0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    goto LABEL_161;
  }
LABEL_2:
  uint64_t v21 = sub_10008E2DC(isa, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v254 = v21;
  uint64_t v22 = Logger.logObject.getter();
  int v23 = static os_log_type_t.info.getter();
  BOOL v24 = os_log_type_enabled(v22, (os_log_type_t)v23);
  unint64_t v25 = a1 >> 62;
  unint64_t v256 = a1;
  unint64_t v251 = v6;
  id v253 = (id)(a1 >> 62);
  uint64_t v236 = isa;
  if (v24)
  {
    LODWORD(v240) = v23;
    uint64_t v26 = swift_slowAlloc();
    id v27 = swift_slowAlloc();
    uint64_t v257 = v27;
    *(_DWORD *)uint64_t v26 = 136446978;
    v261 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v257);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v26 + 12) = 2048;
    unint64_t v241 = v19;
    uint64_t v239 = (uint64_t)v27;
    if (!v25)
    {
      uint64_t v28 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
    goto LABEL_165;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v25)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v26 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v26) {
      break;
    }
    uint64_t v257 = _swiftEmptyArrayStorage;
    uint64_t v22 = &v257;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v26 & 0x8000000000000000) == 0)
    {
      unint64_t v18 = 0;
      unint64_t v6 = a1 & 0xC000000000000001;
      unint64_t v19 = (unint64_t)off_1008AA3F8;
      while (v26 != v18)
      {
        if (v6) {
          id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v33 = *(id *)(a1 + 8 * v18 + 32);
        }
        id v34 = v33;
        sub_100694DE8([v34 remObjectID], &qword_10091FD58);
        if (v5)
        {

          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        ++v18;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t isa = (uint64_t)v257[2].isa;
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        a1 = v256;
        if (v26 == v18)
        {
          id v35 = v257;
          unint64_t v6 = v251;
          unint64_t v25 = (unint64_t)v253;
          goto LABEL_20;
        }
      }
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      swift_once();
      goto LABEL_2;
    }
LABEL_164:
    __break(1u);
LABEL_165:
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    v261 = (void *)v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 22) = 2082;
    LOWORD(v19) = v26 + 24;
    sub_1000963CC(0, &qword_10091FD58);
    id v29 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v32 = v31;

    v261 = (void *)sub_1000C51B8(v30, v32, (uint64_t *)&v257);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a1 = v256;
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 32) = 2082;
    swift_bridgeObjectRetain();
    v261 = (void *)sub_1000C51B8(v241, v18, (uint64_t *)&v257);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v240, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v26, 0x2Au);
    uint64_t isa = v239;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v6 = v251;
    unint64_t v25 = (unint64_t)v253;
  }
  id v35 = _swiftEmptyArrayStorage;
LABEL_20:
  uint64_t v36 = *(void *)(v6 + 96);
  if (v36 <= 1)
  {
    if (v36)
    {
      if (v36 != 1) {
        goto LABEL_168;
      }
      swift_bridgeObjectRelease();
      long long v46 = Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v46, v47))
      {
        os_log_type_t v48 = (uint8_t *)swift_slowAlloc();
        uint64_t v257 = swift_slowAlloc();
        *(_DWORD *)os_log_type_t v48 = 136315138;
        unint64_t v248 = (char *)(v48 + 4);
        unint64_t v19 = (unint64_t)[self cdEntityName];
        uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v51 = v50;

        uint64_t v52 = v49;
        a1 = v256;
        v261 = (void *)sub_1000C51B8(v52, v51, (uint64_t *)&v257);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        unint64_t v25 = (unint64_t)v253;
        unint64_t v6 = v251;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "Skipping fetch during upsert {CDType: %s}", v48, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      unint64_t v18 = (unint64_t)v250;
      unint64_t v241 = sub_1002EEC3C((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v45 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v25) {
        goto LABEL_32;
      }
LABEL_38:
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v22)
      {
LABEL_144:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_39;
    }
  }
  else if ((unint64_t)(v36 - 2) >= 3 && v36 != 4499 && v36 != 4599)
  {
LABEL_168:
    (*((void (**)(char *, uint64_t, uint64_t))v247 + 2))(v248, v254, v236);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
    __break(1u);
    JUMPOUT(0x1006C35D0);
  }
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v37, v38))
  {
    unint64_t v248 = (char *)v35;
    os_log_type_t v39 = (uint8_t *)swift_slowAlloc();
    uint64_t v257 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v39 = 136315138;
    uint64_t v247 = v39 + 4;
    id v40 = [self cdEntityName];
    unint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v42 = v41;

    a1 = v256;
    v261 = (void *)sub_1000C51B8(v19, v42, (uint64_t *)&v257);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    id v35 = v248;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Performing fetch during upsert {CDType: %s}", v39, 0xCu);
    swift_arrayDestroy();
    unint64_t v25 = (unint64_t)v253;
    unint64_t v6 = v251;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  unint64_t v18 = (unint64_t)v250;
  unint64_t v43 = sub_100712B70((uint64_t)v35, (uint64_t)v250);
  swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v241 = (unint64_t)v43;
  uint64_t v45 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v25) {
    goto LABEL_38;
  }
LABEL_32:
  uint64_t v22 = *(NSObject **)(v45 + 16);
  if (!v22) {
    goto LABEL_144;
  }
LABEL_39:
  unint64_t v53 = 0;
  uint64_t v228 = v6 + 24;
  unint64_t v231 = v18 + 48;
  os_log_t v227 = (void *)(v18 + 56);
  unint64_t v233 = a1 & 0xC000000000000001;
  uint64_t v226 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v225 = a1 + 32;
  uint64_t v250 = (char **)(v249 + 8);
  unint64_t v234 = &v262;
  unint64_t v230 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v249 + 56);
  unint64_t v229 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v249 + 48);
  unint64_t v224 = (char *)&v261 + 4;
  *(void *)&long long v44 = 136446978;
  long long v223 = v44;
  *(void *)&long long v44 = 136446210;
  long long v237 = v44;
  *(void *)&long long v44 = 136447490;
  long long v220 = v44;
  *(void *)&long long v44 = 136447234;
  long long v217 = v44;
  *(void *)&long long v44 = 136446466;
  long long v221 = v44;
  unint64_t v222 = (char *)&type metadata for Any + 8;
  unint64_t v232 = v22;
  while (1)
  {
    if (v233)
    {
      id v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v57 = __OFADD__(v53, 1);
      uint64_t v26 = v53 + 1;
      if (v57) {
        goto LABEL_163;
      }
    }
    else
    {
      if (v53 >= *(void *)(v226 + 16))
      {
        __break(1u);
        goto LABEL_167;
      }
      id v56 = *(id *)(v225 + 8 * v53);
      BOOL v57 = __OFADD__(v53, 1);
      uint64_t v26 = v53 + 1;
      if (v57)
      {
LABEL_163:
        __break(1u);
        goto LABEL_164;
      }
    }
    id v58 = v56;
    unint64_t v248 = (char *)sub_100694DE8([v58 remObjectID], &qword_10091FD58);
    if (v5)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    uint64_t v235 = v26;
    uint64_t v247 = 0;
    id v253 = v58;

    id v59 = [*(id *)(v246 + 16) uuid];
    long long v60 = v252;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    long long v240 = UUID.uuidString.getter();
    uint64_t v62 = v61;
    unint64_t v18 = (unint64_t)v250;
    uint64_t v63 = *v250;
    uint64_t v64 = v255;
    ((void (*)(char *, uint64_t))*v250)(v60, v255);
    id v65 = [self localInternalAccountID];
    id v66 = [v65 uuid];

    uint64_t v67 = v245;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    id v68 = UUID.uuidString.getter();
    uint64_t v70 = v69;
    int64_t v249 = v63;
    ((void (*)(char *, uint64_t))v63)(v67, v64);
    if (v240 != v68) {
      goto LABEL_53;
    }
    if (v62 == v70)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_53:
      char v71 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v72 = v241;
      if ((v71 & 1) == 0)
      {
        unint64_t v73 = v251;
        goto LABEL_60;
      }
    }
    unint64_t v73 = v251;
    int v74 = 0x7FFFFFFF;
    unint64_t v75 = v247;
    id v76 = v253;
    switch(*(unsigned __int16 *)(v251 + 68) >> 14)
    {
      case 2:
        int v74 = *(_DWORD *)(v251 + 64);
        break;
      case 3:
        break;
      default:
        int v74 = 2147483519;
        break;
    }
    sub_100662770(2, v74);
    if (v75)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      id v207 = &v263;
LABEL_149:
      id v208 = (id)*(v207 - 32);
      goto LABEL_150;
    }
    uint64_t v247 = 0;
    unint64_t v72 = v241;
LABEL_60:
    v77._rawValue = &off_1008B4630;
    char v78 = sub_1006990C8(v77, &qword_10091FD58);
    if (*(void *)(v72 + 16))
    {
      char v79 = v248;
      unint64_t v80 = sub_10030703C(v79);
      if (v81)
      {
        char v82 = (char *)*(id *)(*(void *)(v72 + 56) + 8 * v80);

        id v83 = v79;
        uint64_t v84 = Logger.logObject.getter();
        os_log_type_t v85 = static os_log_type_t.info.getter();
        LOWORD(v19) = v85;
        if (!os_log_type_enabled(v84, v85))
        {

          goto LABEL_42;
        }
        unint64_t v18 = swift_slowAlloc();
        unint64_t v54 = (void *)swift_slowAlloc();
        int64_t v249 = (char *)swift_slowAlloc();
        uint64_t v257 = v249;
        *(_DWORD *)unint64_t v18 = v221;
        v261 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v257);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v18 + 12) = 2114;
        unint64_t v248 = v82;
        v261 = v83;
        BOOL v55 = v83;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *unint64_t v54 = v83;

        _os_log_impl((void *)&_mh_execute_header, v84, (os_log_type_t)v19, "[%{public}s] Skipping merge() and updateChangeCount() since this ingestable is immutable and is not a new insertion {objectID: %{public}@}", (uint8_t *)v18, 0x16u);
        sub_100094134((uint64_t *)&unk_10090A040);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

LABEL_41:
        goto LABEL_42;
      }
    }
    if (v78 == 2) {
      break;
    }
    if (v78) {
      uint64_t v86 = 0x65746E49656D6974;
    }
    else {
      uint64_t v86 = 0x44497463656A626FLL;
    }
    if (v78) {
      unint64_t v87 = 0xEC0000006C617672;
    }
    else {
      unint64_t v87 = 0xE800000000000000;
    }
    if (v86 != 0x44497463656A626FLL || v87 != 0xE800000000000000)
    {
      char v88 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v88) {
        goto LABEL_79;
      }
      if (v86 != 0x65746E49656D6974 || v87 != 0xEC0000006C617672)
      {
        char v89 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v89 & 1) == 0) {
          break;
        }
        goto LABEL_79;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_79:
    char v90 = *(void **)(v73 + 88);
    sub_1000963CC(0, &qword_10091FD58);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    id v92 = [ObjCClassFromMetadata entity];
    id v93 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v92 insertIntoManagedObjectContext:v90];
    id v94 = v242;
    [v90 assignObject:v93 toPersistentStore:v94];

    id v95 = v93;
    id v96 = v248;
    id v97 = [v248 uuid];
    uint64_t v98 = (uint64_t)v243;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v99 = v255;
    (*v230)(v98, 0, 1, v255);
    uint64_t v100 = v244;
    sub_1001248EC(v98, v244);
    int v101 = (*v229)(v100, 1, v99);
    Class v102 = 0;
    if (v101 != 1)
    {
      uint64_t v103 = v244;
      Class v102 = UUID._bridgeToObjectiveC()().super.isa;
      ((void (*)(uint64_t, uint64_t))v249)(v103, v255);
    }
    [v95 setIdentifier:v102, v211];

    sub_1001260DC(v98);
    id v104 = v96;
    swift_retain_n();
    id v105 = v95;
    id v106 = v104;
    int v107 = (char *)v105;
    BOOL v108 = Logger.logObject.getter();
    os_log_type_t v109 = static os_log_type_t.default.getter();
    int v110 = v109;
    BOOL v111 = os_log_type_enabled(v108, v109);
    unint64_t v248 = v107;
    if (v111)
    {
      uint64_t v112 = swift_slowAlloc();
      uint64_t v113 = (void *)swift_slowAlloc();
      long long v240 = swift_slowAlloc();
      uint64_t v257 = v240;
      *(_DWORD *)uint64_t v112 = v223;
      v261 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v257);
      LODWORD(v239) = v110;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v112 + 12) = 2082;
      sub_10010B4E8(v228, (uint64_t)v259);
      sub_10073F754((uint64_t)v259, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v114 = sub_100696CF4();
      unint64_t v116 = v115;
      sub_10073F754((uint64_t)v259, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      v261 = (void *)sub_1000C51B8(v114, v116, (uint64_t *)&v257);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v112 + 22) = 2114;
      v261 = v106;
      unint64_t v117 = v106;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v113 = v106;

      *(_WORD *)(v112 + 32) = 2112;
      uint64_t v118 = [v248 objectID];
      v261 = v118;
      int v107 = v248;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v113[1] = v118;

      _os_log_impl((void *)&_mh_execute_header, v108, (os_log_type_t)v239, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v112, 0x2Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    swift_beginAccess();
    char v119 = v106;
    sub_1001A6B7C((uint64_t)v107, (uint64_t)v119);
    swift_endAccess();
    long long v240 = v119;

    uint64_t v120 = 2;
    uint64_t v239 = 2;
    uint64_t v121 = &byte_1008B6858;
    do
    {
      if (((*(unsigned int *)(v73 + 64) | ((unint64_t)*(unsigned __int16 *)(v73 + 68) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
      {
        char v122 = *v121;
        char v123 = Logger.logObject.getter();
        os_log_type_t v124 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v123, v124))
        {
          uint64_t v125 = swift_slowAlloc();
          uint64_t v257 = swift_slowAlloc();
          *(_DWORD *)uint64_t v125 = v237;
          LOBYTE(v261) = v122;
          uint64_t v126 = String.init<A>(describing:)();
          *(void *)(v125 + 4) = sub_1000C51B8(v126, v127, (uint64_t *)&v257);
          unint64_t v73 = v251;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v123, v124, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v125, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
      }
      LODWORD(v19) = *(_DWORD *)(v73 + 64);
      if (*(unsigned __int16 *)(v73 + 68) >> 14 == 2 && (*(_DWORD *)(v73 + 64) & 1) == 0)
      {
        if (qword_100907AE0 == -1)
        {
LABEL_146:
          sub_10008E2DC(v236, (uint64_t)qword_100920A70);
          uint64_t v196 = Logger.logObject.getter();
          os_log_type_t v197 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v196, v197))
          {
            uint64_t v198 = swift_slowAlloc();
            uint64_t v257 = swift_slowAlloc();
            *(_DWORD *)uint64_t v198 = v221;
            uint64_t v199 = sub_100662CC0(1);
            v261 = (void *)sub_1000C51B8(v199, v200, (uint64_t *)&v257);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v198 + 12) = 2082;
            uint64_t v201 = sub_100662CC0(v19);
            v261 = (void *)sub_1000C51B8(v201, v202, (uint64_t *)&v257);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v196, v197, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v198, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          NSString v203 = self;
          NSString v204 = String._bridgeToObjectiveC()();
          sub_100662CC0(1);
          NSString v205 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          sub_100662CC0(v19);
          NSString v206 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v203 unauthorizedErrorWithMissingEntitlement:v204 requestedAccessLevel:v205 currentAccesslevel:v206];

          swift_willThrow();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          id v207 = (uint64_t *)&v260;
          goto LABEL_149;
        }
LABEL_167:
        swift_once();
        goto LABEL_146;
      }
      ++v121;
      --v120;
    }
    while (v120);
    swift_retain_n();
    id v129 = v240;
    id v130 = v248;
    unint64_t v19 = v129;
    unint64_t v18 = v130;
    int v131 = Logger.logObject.getter();
    int v132 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v131, (os_log_type_t)v132))
    {
      LODWORD(v219) = v132;
      long long v240 = v131;
      uint64_t v133 = (void *)v19;
      uint64_t v134 = swift_slowAlloc();
      int v135 = swift_slowAlloc();
      uint64_t v238 = swift_slowAlloc();
      uint64_t v257 = v238;
      *(_DWORD *)uint64_t v134 = v220;
      v261 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v257);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v134 + 12) = 2082;
      sub_10010B4E8(v228, (uint64_t)v258);
      sub_10073F754((uint64_t)v258, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v136 = sub_100696CF4();
      unint64_t v138 = v137;
      sub_10073F754((uint64_t)v258, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      v261 = (void *)sub_1000C51B8(v136, v138, (uint64_t *)&v257);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v134 + 22) = 2114;
      v261 = v133;
      uint64_t v139 = v133;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      unint64_t v248 = (char *)v133;
      v135->uint64_t isa = (Class)v133;

      *(_WORD *)(v134 + 32) = 2112;
      unint64_t v140 = [(id)v18 objectID];
      v261 = v140;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      os_log_t v218 = v135;
      v135[1].uint64_t isa = (Class)v140;

      *(_WORD *)(v134 + 42) = 2082;
      uint64_t v141 = 2;
      v261 = _swiftEmptyArrayStorage;
      sub_1001DE058(0, 2, 0);
      v142 = v261;
      unint64_t v143 = v261[2];
      uint64_t v144 = 2 * v143;
      int v145 = &byte_1008B6858;
      do
      {
        if (*v145) {
          uint64_t v146 = 0x65746E49656D6974;
        }
        else {
          uint64_t v146 = 0x44497463656A626FLL;
        }
        if (*v145) {
          unint64_t v147 = 0xEC0000006C617672;
        }
        else {
          unint64_t v147 = 0xE800000000000000;
        }
        v261 = v142;
        unint64_t v148 = v142[3];
        unint64_t v149 = v143 + 1;
        if (v143 >= v148 >> 1)
        {
          sub_1001DE058(v148 > 1, v143 + 1, 1);
          v142 = v261;
        }
        v142[2] = v149;
        unint64_t v150 = &v142[v144];
        v150[4] = v146;
        v150[5] = v147;
        v144 += 2;
        ++v145;
        unint64_t v143 = v149;
        --v141;
      }
      while (v141);
      uint64_t v151 = Array.description.getter();
      unint64_t v153 = v152;
      swift_bridgeObjectRelease();
      v261 = (void *)sub_1000C51B8(v151, v153, (uint64_t *)&v257);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v134 + 52) = 1024;
      unint64_t v73 = v251;
      int v154 = *(unsigned __int8 *)(v251 + 104);
      swift_release();
      LODWORD(v261) = v154;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      unint64_t v155 = v240;
      _os_log_impl((void *)&_mh_execute_header, v240, (os_log_type_t)v219, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v134, 0x3Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v19 = (unint64_t)v248;
    }
    else
    {

      swift_release_n();
    }
    uint64_t v156 = 2;
    id v157 = v253;
    unint64_t v158 = &byte_1008B6858;
    do
    {
      if (*v158)
      {
        [v157 timeInterval];
        [v18 setTimeInterval:];
      }
      else
      {
        id v159 = [v157 remObjectID];
        id v160 = [v159 uuid];

        id v161 = v252;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        Class v162 = UUID._bridgeToObjectiveC()().super.isa;
        ((void (*)(char *, uint64_t))v249)(v161, v255);
        [(id)v18 setIdentifier:v162];

        id v157 = v253;
      }
      ++v158;
      --v156;
    }
    while (v156);
    id v163 = [(id)v18 changedValues];
    uint64_t v164 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    int v165 = v227;
    swift_beginAccess();
    id v166 = (id)v19;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v261 = (void *)*v165;
    void *v165 = 0x8000000000000000;
    sub_1002C4FAC(v164, v166, isUniquelyReferenced_nonNull_native);
    void *v165 = v261;

    swift_bridgeObjectRelease();
    swift_endAccess();
    int v168 = *(unsigned __int8 *)(v73 + 104);
    if (v239 && (v168 & 1) != 0)
    {
      uint64_t v84 = (id)v18;
      swift_bridgeObjectRelease();
      [v84 updateChangeCount];

      goto LABEL_41;
    }
    id v169 = v166;
    swift_retain_n();
    unint64_t v6 = v73;
    id v170 = v169;
    id v171 = (id)v18;
    swift_bridgeObjectRetain();
    char v172 = Logger.logObject.getter();
    unint64_t v18 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v172, (os_log_type_t)v18))
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      goto LABEL_42;
    }
    int v214 = v18;
    os_log_t v218 = v172;
    id v219 = v171;
    unint64_t v19 = swift_slowAlloc();
    unint64_t v18 = swift_slowAlloc();
    long long v215 = swift_slowAlloc();
    uint64_t v257 = v215;
    *(_DWORD *)unint64_t v19 = v217;
    v261 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v257);
    int64_t v249 = (char *)v164;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 12) = 1024;
    swift_release();
    LODWORD(v261) = v168;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v19 + 18) = 1024;
    LODWORD(v261) = 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 24) = 2114;
    v261 = v170;
    uint64_t v5 = (uint64_t)v170;
    uint64_t v173 = (uint64_t)v249;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unint64_t v213 = v18;
    *(void *)unint64_t v18 = v170;

    id v212 = (id)v5;
    long long v216 = (uint8_t *)v19;
    *(_WORD *)(v19 + 34) = 2082;
    uint64_t isa = *(void *)(v173 + 16);
    if (!isa) {
      goto LABEL_143;
    }
    v261 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1001DE058(0, isa, 0);
    uint64_t v174 = v261;
    uint64_t v175 = sub_10072617C(v173);
    a1 = v176;
    unint64_t v177 = 0;
    uint64_t v178 = (v173 + 64);
    char v179 = *(unsigned char *)(v173 + 32);
    uint64_t v238 = v176;
    uint64_t v211 = v173 + 88;
    uint64_t v239 = isa;
    long long v240 = (v173 + 64);
    while (2)
    {
      if (v175 < 0 || v175 >= 1 << v179) {
        goto LABEL_155;
      }
      unint64_t v19 = (unint64_t)v175 >> 6;
      uint64_t v5 = 1 << v175;
      if (((uint64_t)v178[(unint64_t)v175 >> 6].isa & (1 << v175)) == 0) {
        goto LABEL_156;
      }
      if (*(_DWORD *)(v173 + 36) != a1) {
        goto LABEL_157;
      }
      unint64_t v248 = v177;
      uint64_t v182 = *(void *)(v173 + 48) + 16 * v175;
      uint64_t isa = *(void *)(v182 + 8);
      int64_t v249 = *(char **)v182;
      v261 = v174;
      unint64_t v6 = v174[2];
      unint64_t v183 = v174[3];
      unint64_t v18 = v6 + 1;
      swift_bridgeObjectRetain();
      if (v6 >= v183 >> 1)
      {
        sub_1001DE058(v183 > 1, v6 + 1, 1);
        uint64_t v174 = v261;
      }
      v174[2] = v18;
      unint64_t v184 = &v174[2 * v6];
      v184[4] = v249;
      v184[5] = isa;
      char v179 = *(unsigned char *)(v173 + 32);
      unint64_t v180 = 1 << v179;
      if (v175 >= 1 << v179) {
        goto LABEL_158;
      }
      uint64_t v178 = v240;
      Class v185 = v240[v19].isa;
      if (((unint64_t)v185 & v5) == 0) {
        goto LABEL_159;
      }
      if (*(_DWORD *)(v173 + 36) != a1) {
        goto LABEL_160;
      }
      unint64_t v186 = (unint64_t)v185 & (-2 << (v175 & 0x3F));
      if (v186)
      {
        unint64_t v180 = __clz(__rbit64(v186)) | v175 & 0xFFFFFFFFFFFFFFC0;
        uint64_t isa = v239;
LABEL_119:
        unint64_t v181 = v248;
        goto LABEL_120;
      }
      unint64_t v187 = v19 + 1;
      unint64_t v188 = (v180 + 63) >> 6;
      uint64_t isa = v239;
      if (v19 + 1 >= v188) {
        goto LABEL_119;
      }
      unint64_t v189 = (unint64_t)v240[v187].isa;
      if (v189)
      {
LABEL_133:
        unint64_t v181 = v248;
LABEL_134:
        unint64_t v180 = __clz(__rbit64(v189)) + (v187 << 6);
        goto LABEL_120;
      }
      unint64_t v187 = v19 + 2;
      if (v19 + 2 >= v188) {
        goto LABEL_119;
      }
      unint64_t v189 = (unint64_t)v240[v187].isa;
      if (v189) {
        goto LABEL_133;
      }
      unint64_t v190 = v188 - 3;
      unint64_t v181 = v248;
      while (v190 != v19)
      {
        unint64_t v189 = *(void *)(v211 + 8 * v19++);
        if (v189)
        {
          unint64_t v187 = v19 + 2;
          goto LABEL_134;
        }
      }
LABEL_120:
      unint64_t v177 = v181 + 1;
      a1 = v238;
      uint64_t v175 = v180;
      if (v177 != (char *)isa) {
        continue;
      }
      break;
    }
    swift_bridgeObjectRelease();
LABEL_143:
    unint64_t v191 = v216;
    uint64_t v192 = Array.description.getter();
    unint64_t v18 = v193;
    swift_bridgeObjectRelease();
    v261 = (void *)sub_1000C51B8(v192, v18, (uint64_t *)&v257);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v194 = v218;
    _os_log_impl((void *)&_mh_execute_header, v218, (os_log_type_t)v214, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v191, 0x2Cu);
    sub_100094134((uint64_t *)&unk_10090A040);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v195 = v219;
LABEL_42:
    uint64_t v22 = v232;
    unint64_t v53 = v235;
    uint64_t v5 = (uint64_t)v247;
    if (v235 == v232) {
      goto LABEL_144;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v209 = self;
  uint64_t v210 = v248;
  [v209 noSuchObjectErrorWithObjectID:v248];
  swift_willThrow();

  id v208 = v253;
LABEL_150:
}

void sub_1006C35E0(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v256 = a2;
  uint64_t v7 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v7 - 8);
  uint64_t v253 = (uint64_t)&v215 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v215 - v10;
  uint64_t v257 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v257 - 8);
  __chkstk_darwin(v257);
  uint64_t v255 = (char *)&v215 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v254 = (char *)&v215 - v15;
  unint64_t v16 = type metadata accessor for Logger();
  os_log_t v248 = *(os_log_t *)(v16 - 8);
  __chkstk_darwin(v16);
  int64_t v249 = (char *)&v215 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v19 = (__objc2_class **)a3[2];
  uint64_t v18 = a3[3];
  id v259 = a3;
  id v250 = (id)a3[4];
  uint64_t v20 = qword_1009073A0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    goto LABEL_180;
  }
LABEL_2:
  uint64_t v21 = sub_10008E2DC(v16, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v262 = v21;
  uint64_t v22 = Logger.logObject.getter();
  LODWORD(v258) = static os_log_type_t.info.getter();
  BOOL v23 = os_log_type_enabled(v22, (os_log_type_t)v258);
  uint64_t v24 = a1 >> 62;
  unint64_t v263 = a1;
  unint64_t v251 = v11;
  unint64_t v260 = a1 >> 62;
  unint64_t v244 = v16;
  uint64_t v252 = (char *)v12;
  if (v23)
  {
    a1 = swift_slowAlloc();
    uint64_t v246 = swift_slowAlloc();
    uint64_t v264 = (void *)v246;
    *(_DWORD *)a1 = 136446978;
    v269 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v264);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(a1 + 12) = 2048;
    uint64_t v247 = (char *)v19;
    if (!v24)
    {
      uint64_t v25 = *(void *)((v263 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
    goto LABEL_184;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  while (1)
  {
    uint64_t v30 = v261;
    if (v24)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v12) {
      break;
    }
    uint64_t v264 = _swiftEmptyArrayStorage;
    uint64_t v22 = &v264;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v12 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = 0;
      unint64_t v16 = a1 & 0xC000000000000001;
      unint64_t v19 = off_1008AA3E0;
      while (v12 != v18)
      {
        if (v16) {
          id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v31 = *(id *)(a1 + 8 * v18 + 32);
        }
        id v32 = v31;
        sub_100694DE8([v32 remObjectID], (unint64_t *)&unk_100909AC0);
        if (v4)
        {

          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        ++v18;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v11 = (char *)v264[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        a1 = v263;
        if (v12 == v18)
        {
          id v33 = v264;
          uint64_t v24 = v260;
          uint64_t v30 = v261;
          goto LABEL_20;
        }
      }
      __break(1u);
LABEL_174:
      __break(1u);
LABEL_175:
      __break(1u);
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
LABEL_180:
      swift_once();
      goto LABEL_2;
    }
    __break(1u);
LABEL_183:
    __break(1u);
LABEL_184:
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    v269 = (void *)v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(a1 + 22) = 2082;
    sub_1000963CC(0, (unint64_t *)&unk_100909AC0);
    id v26 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v29 = v28;

    v269 = (void *)sub_1000C51B8(v27, v29, (uint64_t *)&v264);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(a1 + 32) = 2082;
    swift_bridgeObjectRetain();
    v269 = (void *)sub_1000C51B8((uint64_t)v247, v18, (uint64_t *)&v264);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v258, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)a1, 0x2Au);
    uint64_t v11 = (char *)v246;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a1 = v263;
    uint64_t v24 = v260;
  }
  id v33 = _swiftEmptyArrayStorage;
LABEL_20:
  uint64_t v34 = *(void *)(v30 + 96);
  if (v34 > 1)
  {
    if ((unint64_t)(v34 - 2) >= 3 && v34 != 4499 && v34 != 4599)
    {
LABEL_187:
      ((void (*)(char *, uint64_t, unint64_t))v248[2].isa)(v249, v262, v244);
      sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
      sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
      sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
      __break(1u);
      JUMPOUT(0x1006C6054);
    }
LABEL_27:
    id v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v258 = (uint64_t)v33;
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v264 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136315138;
      int64_t v249 = (char *)(v37 + 4);
      id v38 = [self cdEntityName];
      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v41 = v40;

      a1 = v263;
      v269 = (void *)sub_1000C51B8(v39, v41, (uint64_t *)&v264);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v33 = (void *)v258;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Performing fetch during upsert {CDType: %s}", v37, 0xCu);
      swift_arrayDestroy();
      uint64_t v24 = v260;
      swift_slowDealloc();
      uint64_t v30 = v261;
      swift_slowDealloc();
    }

    uint64_t v18 = (uint64_t)v259;
    unint64_t v42 = (char *)sub_100712FD8((uint64_t)v33, (uint64_t)v259);
    swift_bridgeObjectRelease();
    if (v4)
    {
      swift_bridgeObjectRelease();
      return;
    }
    int64_t v249 = v42;
    uint64_t v44 = a1 & 0xFFFFFFFFFFFFFF8;
    if (!v24) {
      goto LABEL_32;
    }
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v22)
    {
LABEL_165:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_39;
  }
  if (!v34) {
    goto LABEL_27;
  }
  if (v34 != 1) {
    goto LABEL_187;
  }
  swift_bridgeObjectRelease();
  uint64_t v45 = Logger.logObject.getter();
  os_log_type_t v46 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v45, v46))
  {
    os_log_type_t v47 = (uint8_t *)swift_slowAlloc();
    uint64_t v264 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v47 = 136315138;
    uint64_t v258 = (uint64_t)(v47 + 4);
    id v48 = [self cdEntityName];
    uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v51 = v50;

    uint64_t v52 = v49;
    a1 = v263;
    v269 = (void *)sub_1000C51B8(v52, v51, (uint64_t *)&v264);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v24 = v260;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "Skipping fetch during upsert {CDType: %s}", v47, 0xCu);
    swift_arrayDestroy();
    uint64_t v30 = v261;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v18 = (uint64_t)v259;
  int64_t v249 = (char *)sub_1002EED88((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v44 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v24) {
    goto LABEL_38;
  }
LABEL_32:
  uint64_t v22 = *(NSObject **)(v44 + 16);
  if (!v22) {
    goto LABEL_165;
  }
LABEL_39:
  unint64_t v53 = 0;
  uint64_t v233 = v30 + 24;
  uint64_t v236 = v18 + 48;
  unint64_t v232 = (void **)(v18 + 56);
  unint64_t v238 = a1 & 0xC000000000000001;
  uint64_t v231 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v230 = a1 + 32;
  uint64_t v242 = v252 + 8;
  uint64_t v239 = &v270;
  uint64_t v235 = v252 + 56;
  unint64_t v234 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v252 + 48);
  unint64_t v229 = (char *)&v269 + 4;
  *(void *)&long long v43 = 136446978;
  long long v228 = v43;
  *(void *)&long long v43 = 136446210;
  long long v245 = v43;
  *(void *)&long long v43 = 136447490;
  long long v225 = v43;
  unint64_t v241 = (unint64_t)"reminderIdentifier";
  *(void *)&long long v43 = 136447234;
  long long v223 = v43;
  *(void *)&long long v43 = 136446466;
  long long v226 = v43;
  unint64_t v240 = (unint64_t)"nfoChecksum";
  os_log_t v227 = (char *)&type metadata for Any + 8;
  long long v237 = v22;
  while (1)
  {
    if (v238)
    {
      id v54 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v55 = __OFADD__(v53, 1);
      id v56 = ((char *)&v53->isa + 1);
      if (v55) {
        goto LABEL_183;
      }
    }
    else
    {
      if ((unint64_t)v53 >= *(void *)(v231 + 16))
      {
        __break(1u);
LABEL_186:
        swift_once();
        goto LABEL_167;
      }
      id v54 = *(id *)(v230 + 8 * (void)v53);
      BOOL v55 = __OFADD__(v53, 1);
      id v56 = ((char *)&v53->isa + 1);
      if (v55) {
        goto LABEL_183;
      }
    }
    BOOL v57 = (char *)v54;
    id v58 = sub_100694DE8([v57 remObjectID], (unint64_t *)&unk_100909AC0);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    id v259 = v58;
    os_log_t v243 = v56;
    unint64_t v260 = 0;
    uint64_t v252 = v57;

    id v59 = [*(id *)(v256 + 16) uuid];
    long long v60 = v254;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v61 = UUID.uuidString.getter();
    uint64_t v63 = v62;
    uint64_t v64 = *(void (**)(char *, uint64_t))v242;
    uint64_t v65 = v257;
    (*(void (**)(char *, uint64_t))v242)(v60, v257);
    id v66 = [self localInternalAccountID];
    id v67 = [v66 uuid];

    id v68 = v255;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v69 = UUID.uuidString.getter();
    uint64_t v71 = v70;
    v64(v68, v65);
    unint64_t v72 = (void (*)(uint64_t, uint64_t))v64;
    if (v61 != v69) {
      goto LABEL_50;
    }
    if (v63 == v71)
    {
      swift_bridgeObjectRelease_n();
      id v73 = v259;
    }
    else
    {
LABEL_50:
      char v74 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v75 = v249;
      id v73 = v259;
      if ((v74 & 1) == 0)
      {
        uint64_t v18 = v261;
        goto LABEL_57;
      }
    }
    unint64_t v76 = v260;
    uint64_t v18 = v261;
    int v77 = 0x7FFFFFFF;
    switch(*(unsigned __int16 *)(v261 + 68) >> 14)
    {
      case 2:
        int v77 = *(_DWORD *)(v261 + 64);
        break;
      case 3:
        break;
      default:
        int v77 = 2147483519;
        break;
    }
    sub_100662770(2, v77);
    if (v76)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v260 = 0;
    unint64_t v75 = v249;
LABEL_57:
    v78._rawValue = &off_1008B46A8;
    int v79 = sub_100698748(v78, (unint64_t *)&unk_100909AC0);
    if (!*((void *)v75 + 2)) {
      goto LABEL_62;
    }
    id v80 = v73;
    unint64_t v81 = sub_10030703C(v80);
    if ((v82 & 1) == 0) {
      break;
    }
    id v83 = *(id *)(*((void *)v75 + 7) + 8 * v81);

    uint64_t v24 = (uint64_t)v80;
    uint64_t v84 = Logger.logObject.getter();
    os_log_type_t v85 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v84, v85))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v86 = (void *)swift_slowAlloc();
      uint64_t v258 = swift_slowAlloc();
      uint64_t v264 = (void *)v258;
      *(_DWORD *)uint64_t v18 = v226;
      v269 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v264);
      id v259 = v83;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v18 + 12) = 2114;
      v269 = (void *)v24;
      id v87 = (id)v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v86 = v24;

      _os_log_impl((void *)&_mh_execute_header, v84, v85, "[%{public}s] Skipping merge() and updateChangeCount() since this ingestable is immutable and is not a new insertion {objectID: %{public}@}", (uint8_t *)v18, 0x16u);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_105;
    }

LABEL_133:
    a1 = v263;
    unint64_t v53 = v243;
    uint64_t v22 = v237;
    uint64_t v4 = v260;
    if (v243 == v237) {
      goto LABEL_165;
    }
  }

LABEL_62:
  unint64_t v88 = 0xE800000000000000;
  unint64_t v89 = 0x44497463656A626FLL;
  switch((char)v79)
  {
    case 0:
      goto LABEL_68;
    case 1:
    case 3:
      goto LABEL_71;
    case 2:
      char v90 = &v267;
      goto LABEL_67;
    case 4:
      char v90 = &v266;
LABEL_67:
      unint64_t v88 = *((void *)v90 - 32) | 0x8000000000000000;
      unint64_t v89 = 0xD000000000000010;
LABEL_68:
      if (v89 == 0x44497463656A626FLL && v88 == 0xE800000000000000)
      {
LABEL_70:
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_71:
        char v91 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v91 & 1) == 0)
        {
          switch(v79)
          {
            case 0:
            case 2:
            case 3:
            case 4:
              char v191 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v191 & 1) == 0)
              {
                unint64_t v192 = 0xE800000000000000;
                unint64_t v193 = 0x44497463656A626FLL;
                switch(v79)
                {
                  case 0:
                    goto LABEL_143;
                  case 1:
                    unint64_t v192 = 0xE700000000000000;
                    unint64_t v193 = 0x72656767697274;
                    goto LABEL_143;
                  case 2:
                    os_log_t v194 = &v267;
                    goto LABEL_142;
                  case 3:
                    unint64_t v193 = 0x4449556D72616C61;
                    goto LABEL_143;
                  case 4:
                    os_log_t v194 = &v266;
LABEL_142:
                    unint64_t v192 = *((void *)v194 - 32) | 0x8000000000000000;
                    unint64_t v193 = 0xD000000000000010;
LABEL_143:
                    if (v193 == 0xD000000000000010 && (v241 | 0x8000000000000000) == v192) {
                      goto LABEL_70;
                    }
                    char v195 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v195 & 1) == 0)
                    {
                      unint64_t v196 = 0xE800000000000000;
                      unint64_t v197 = 0x44497463656A626FLL;
                      switch(v79)
                      {
                        case 0:
                          goto LABEL_152;
                        case 1:
                          unint64_t v196 = 0xE700000000000000;
                          unint64_t v197 = 0x72656767697274;
                          goto LABEL_152;
                        case 2:
                          uint64_t v198 = &v267;
                          goto LABEL_151;
                        case 3:
                          unint64_t v197 = 0x4449556D72616C61;
                          goto LABEL_152;
                        case 4:
                          uint64_t v198 = &v266;
LABEL_151:
                          unint64_t v196 = *((void *)v198 - 32) | 0x8000000000000000;
                          unint64_t v197 = 0xD000000000000010;
LABEL_152:
                          if (v197 == 0x4449556D72616C61 && v196 == 0xE800000000000000) {
                            goto LABEL_70;
                          }
                          char v199 = _stringCompareWithSmolCheck(_:_:expecting:)();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          if ((v199 & 1) == 0)
                          {
                            unint64_t v200 = 0xE800000000000000;
                            unint64_t v201 = 0x44497463656A626FLL;
                            switch((int)v240)
                            {
                              case 0:
                                goto LABEL_161;
                              case 1:
                                unint64_t v200 = 0xE700000000000000;
                                unint64_t v201 = 0x72656767697274;
                                goto LABEL_161;
                              case 2:
                                unint64_t v202 = &v267;
                                goto LABEL_160;
                              case 3:
                                unint64_t v201 = 0x4449556D72616C61;
                                goto LABEL_161;
                              case 4:
                                unint64_t v202 = &v266;
LABEL_160:
                                unint64_t v200 = *((void *)v202 - 32) | 0x8000000000000000;
                                unint64_t v201 = 0xD000000000000010;
LABEL_161:
                                if (v201 == 0xD000000000000010 && (v240 | 0x8000000000000000) == v200) {
                                  goto LABEL_70;
                                }
                                char v203 = _stringCompareWithSmolCheck(_:_:expecting:)();
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                if ((v203 & 1) == 0) {
                                  goto LABEL_164;
                                }
                                goto LABEL_72;
                              default:
                                goto LABEL_164;
                            }
                          }
                          break;
                        default:
                          goto LABEL_164;
                      }
                    }
                    break;
                  default:
                    goto LABEL_164;
                }
              }
              break;
            case 1:
              goto LABEL_70;
            default:
              goto LABEL_164;
          }
        }
      }
LABEL_72:
      id v92 = *(void **)(v18 + 88);
      sub_1000963CC(0, (unint64_t *)&unk_100909AC0);
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      id v94 = [ObjCClassFromMetadata entity];
      id v95 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v94 insertIntoManagedObjectContext:v92];
      id v96 = v250;
      [v92 assignObject:v95 toPersistentStore:v96];

      id v97 = v95;
      id v98 = [v73 uuid];
      uint64_t v99 = (uint64_t)v251;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v100 = v257;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))v235)(v99, 0, 1, v257);
      uint64_t v101 = v253;
      sub_1001248EC(v99, v253);
      int v102 = (*v234)(v101, 1, v100);
      Class isa = 0;
      if (v102 != 1)
      {
        uint64_t v104 = v253;
        Class isa = UUID._bridgeToObjectiveC()().super.isa;
        v72(v104, v257);
      }
      [v97 setIdentifier:isa];

      sub_1001260DC(v99);
      id v105 = v73;
      swift_retain_n();
      id v106 = v97;
      int v107 = v105;
      id v108 = v106;
      uint64_t v109 = v18;
      int v110 = Logger.logObject.getter();
      os_log_type_t v111 = static os_log_type_t.default.getter();
      int v112 = v111;
      BOOL v113 = os_log_type_enabled(v110, v111);
      id v259 = v108;
      if (v113)
      {
        uint64_t v114 = swift_slowAlloc();
        unint64_t v115 = (void *)swift_slowAlloc();
        uint64_t v258 = swift_slowAlloc();
        uint64_t v264 = (void *)v258;
        *(_DWORD *)uint64_t v114 = v228;
        v269 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v264);
        LODWORD(v248) = v112;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v114 + 12) = 2082;
        sub_10010B4E8(v233, (uint64_t)v268);
        sub_10073F754((uint64_t)v268, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
        uint64_t v116 = sub_100696CF4();
        unint64_t v118 = v117;
        sub_10073F754((uint64_t)v268, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
        v269 = (void *)sub_1000C51B8(v116, v118, (uint64_t *)&v264);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v114 + 22) = 2114;
        v269 = v107;
        char v119 = v107;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v115 = v107;

        *(_WORD *)(v114 + 32) = 2112;
        uint64_t v120 = [v259 objectID];
        v269 = v120;
        id v108 = v259;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v115[1] = v120;

        _os_log_impl((void *)&_mh_execute_header, v110, (os_log_type_t)v248, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v114, 0x2Au);
        sub_100094134((uint64_t *)&unk_10090A040);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      uint64_t v18 = v109;
      swift_beginAccess();
      uint64_t v24 = v107;
      sub_1001A6B7C((uint64_t)v108, v24);
      swift_endAccess();

      uint64_t v121 = 5;
      uint64_t v258 = 5;
      char v122 = &byte_1008B6880;
      break;
    default:
LABEL_164:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      [self noSuchObjectErrorWithObjectID:v73];
      swift_willThrow();

      return;
  }
  while (1)
  {
    char v124 = *v122++;
    char v123 = v124;
    if (((*(unsigned int *)(v18 + 64) | ((unint64_t)*(unsigned __int16 *)(v18 + 68) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
    {
      uint64_t v125 = Logger.logObject.getter();
      os_log_type_t v126 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v125, v126))
      {
        uint64_t v127 = swift_slowAlloc();
        uint64_t v264 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v127 = v245;
        LOBYTE(v269) = v123;
        uint64_t v128 = String.init<A>(describing:)();
        *(void *)(v127 + 4) = sub_1000C51B8(v128, v129, (uint64_t *)&v264);
        uint64_t v18 = v261;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v125, v126, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v127, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
    }
    LODWORD(v53) = *(_DWORD *)(v18 + 64);
    if (*(unsigned __int16 *)(v18 + 68) >> 14 == 2 && (*(_DWORD *)(v18 + 64) & 1) == 0) {
      break;
    }
    if (!--v121)
    {
      swift_retain_n();
      id v131 = (id)v24;
      id v132 = v259;
      uint64_t v133 = v131;
      id v134 = v132;
      int v135 = Logger.logObject.getter();
      int v136 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v135, (os_log_type_t)v136))
      {
        LODWORD(v246) = v136;
        os_log_t v248 = v135;
        uint64_t v137 = swift_slowAlloc();
        unint64_t v138 = (void *)swift_slowAlloc();
        uint64_t v247 = (char *)swift_slowAlloc();
        uint64_t v264 = v247;
        *(_DWORD *)uint64_t v137 = v225;
        v269 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v264);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v137 + 12) = 2082;
        sub_10010B4E8(v233, (uint64_t)v265);
        sub_10073F754((uint64_t)v265, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
        uint64_t v139 = sub_100696CF4();
        unint64_t v140 = v133;
        unint64_t v142 = v141;
        sub_10073F754((uint64_t)v265, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
        v269 = (void *)sub_1000C51B8(v139, v142, (uint64_t *)&v264);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v137 + 22) = 2114;
        v269 = v140;
        unint64_t v143 = v140;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        id v259 = v140;
        *unint64_t v138 = v140;

        *(_WORD *)(v137 + 32) = 2112;
        uint64_t v144 = [v134 objectID];
        v269 = v144;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        unint64_t v224 = v138;
        v138[1] = v144;

        *(_WORD *)(v137 + 42) = 2082;
        uint64_t v145 = 5;
        v269 = _swiftEmptyArrayStorage;
        sub_1001DE058(0, 5, 0);
        uint64_t v146 = v269;
        unint64_t v147 = &byte_1008B6880;
        do
        {
          int v148 = *v147++;
          unint64_t v149 = 0xE800000000000000;
          unint64_t v150 = 0x44497463656A626FLL;
          switch(v148)
          {
            case 1:
              unint64_t v149 = 0xE700000000000000;
              unint64_t v150 = 0x72656767697274;
              break;
            case 2:
              uint64_t v151 = &v267;
              goto LABEL_93;
            case 3:
              unint64_t v150 = 0x4449556D72616C61;
              break;
            case 4:
              uint64_t v151 = &v266;
LABEL_93:
              unint64_t v149 = *((void *)v151 - 32) | 0x8000000000000000;
              unint64_t v150 = 0xD000000000000010;
              break;
            default:
              break;
          }
          v269 = v146;
          unint64_t v153 = v146[2];
          unint64_t v152 = v146[3];
          if (v153 >= v152 >> 1)
          {
            sub_1001DE058(v152 > 1, v153 + 1, 1);
            uint64_t v146 = v269;
          }
          v146[2] = v153 + 1;
          int v154 = &v146[2 * v153];
          v154[4] = v150;
          v154[5] = v149;
          --v145;
        }
        while (v145);
        uint64_t v155 = Array.description.getter();
        unint64_t v157 = v156;
        swift_bridgeObjectRelease();
        v269 = (void *)sub_1000C51B8(v155, v157, (uint64_t *)&v264);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v137 + 52) = 1024;
        uint64_t v158 = v261;
        int v159 = *(unsigned __int8 *)(v261 + 104);
        swift_release();
        LODWORD(v269) = v159;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        os_log_t v160 = v248;
        _os_log_impl((void *)&_mh_execute_header, v248, (os_log_type_t)v246, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v137, 0x3Au);
        sub_100094134((uint64_t *)&unk_10090A040);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v18 = v158;
        swift_slowDealloc();

        uint64_t v24 = 1;
        uint64_t v133 = v259;
      }
      else
      {

        swift_release_n();
        uint64_t v24 = 1;
      }
      unint64_t v161 = v260;
      sub_10019ECDC(v252, v134, (uint64_t)&off_1008B6860, v18);
      if (!v161)
      {
        unint64_t v260 = 0;
        id v162 = [v134 changedValues];
        unint64_t v19 = (__objc2_class **)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v163 = v232;
        swift_beginAccess();
        uint64_t v164 = v133;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v269 = *v163;
        char *v163 = (void *)0x8000000000000000;
        sub_1002C4FAC((uint64_t)v19, v164, isUniquelyReferenced_nonNull_native);
        char *v163 = v269;

        swift_bridgeObjectRelease();
        swift_endAccess();
        uint64_t v4 = *(unsigned __int8 *)(v18 + 104);
        if (v258 && (v4 & 1) != 0)
        {
          uint64_t v84 = v134;
          swift_bridgeObjectRelease();
          [v84 updateChangeCount];

LABEL_105:
          goto LABEL_133;
        }
        id v166 = v164;
        swift_retain_n();
        uint64_t v12 = v166;
        id v167 = v134;
        swift_bridgeObjectRetain();
        int v168 = Logger.logObject.getter();
        int v169 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v168, (os_log_type_t)v169))
        {

          swift_bridgeObjectRelease_n();
          swift_release_n();
          goto LABEL_133;
        }
        uint64_t v222 = (uint64_t)v167;
        int v218 = v169;
        os_log_t v221 = v168;
        uint64_t v170 = swift_slowAlloc();
        unint64_t v224 = (void *)swift_slowAlloc();
        id v219 = (void *)swift_slowAlloc();
        uint64_t v264 = v219;
        *(_DWORD *)uint64_t v170 = v223;
        v269 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v264);
        unint64_t v16 = (unint64_t)v239;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v170 + 12) = 1024;
        swift_release();
        LODWORD(v269) = v4;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        *(_WORD *)(v170 + 18) = 1024;
        LODWORD(v269) = 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v170 + 24) = 2114;
        v269 = (void *)v12;
        uint64_t v18 = (uint64_t)(id)v12;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *unint64_t v224 = v12;

        long long v220 = (uint8_t *)v170;
        *(_WORD *)(v170 + 34) = 2082;
        uint64_t v11 = (char *)v19[2];
        if (!v11)
        {
          uint64_t v24 = v222;
LABEL_132:
          unint64_t v186 = v220;
          uint64_t v187 = Array.description.getter();
          unint64_t v189 = v188;
          swift_bridgeObjectRelease();
          v269 = (void *)sub_1000C51B8(v187, v189, (uint64_t *)&v264);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          os_log_t v190 = v221;
          _os_log_impl((void *)&_mh_execute_header, v221, (os_log_type_t)v218, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v186, 0x2Cu);
          sub_100094134((uint64_t *)&unk_10090A040);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          goto LABEL_133;
        }
        uint64_t v217 = v18;
        v269 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_1001DE058(0, (int64_t)v11, 0);
        id v171 = v269;
        uint64_t v18 = sub_10072617C((uint64_t)v19);
        a1 = v172;
        uint64_t v173 = 0;
        os_log_t v174 = (os_log_t)(v19 + 8);
        char v175 = *((unsigned char *)v19 + 32);
        uint64_t v246 = v172;
        long long v216 = v19 + 11;
        uint64_t v247 = v11;
        os_log_t v248 = (os_log_t)(v19 + 8);
        while (2)
        {
          if (v18 < 0 || v18 >= 1 << v175) {
            goto LABEL_174;
          }
          uint64_t v12 = (unint64_t)v18 >> 6;
          uint64_t v4 = 1 << v18;
          if (((uint64_t)v174[(unint64_t)v18 >> 6].isa & (1 << v18)) == 0) {
            goto LABEL_175;
          }
          if (*((_DWORD *)v19 + 9) != a1) {
            goto LABEL_176;
          }
          uint64_t v177 = (uint64_t)v19[6] + 16 * v18;
          uint64_t v178 = *(void **)v177;
          uint64_t v11 = *(char **)(v177 + 8);
          uint64_t v258 = v173;
          id v259 = v178;
          v269 = v171;
          unint64_t v16 = v171[2];
          unint64_t v179 = v171[3];
          swift_bridgeObjectRetain();
          if (v16 >= v179 >> 1)
          {
            sub_1001DE058(v179 > 1, v16 + 1, 1);
            id v171 = v269;
          }
          v171[2] = v16 + 1;
          unint64_t v180 = &v171[2 * v16];
          v180[4] = v259;
          v180[5] = v11;
          char v175 = *((unsigned char *)v19 + 32);
          unint64_t v176 = 1 << v175;
          if (v18 >= 1 << v175) {
            goto LABEL_177;
          }
          os_log_t v174 = v248;
          Class v181 = v248[v12].isa;
          if (((unint64_t)v181 & v4) == 0) {
            goto LABEL_178;
          }
          if (*((_DWORD *)v19 + 9) != a1) {
            goto LABEL_179;
          }
          unint64_t v182 = (unint64_t)v181 & (-2 << (v18 & 0x3F));
          if (v182)
          {
            unint64_t v176 = __clz(__rbit64(v182)) | v18 & 0xFFFFFFFFFFFFFFC0;
            uint64_t v11 = v247;
          }
          else
          {
            uint64_t v183 = v12 + 1;
            unint64_t v184 = (v176 + 63) >> 6;
            uint64_t v11 = v247;
            if (v12 + 1 < v184)
            {
              Class v185 = v248[v183].isa;
              if (v185) {
                goto LABEL_123;
              }
              uint64_t v183 = v12 + 2;
              if (v12 + 2 < v184)
              {
                Class v185 = v248[v183].isa;
                if (v185)
                {
LABEL_123:
                  unint64_t v176 = __clz(__rbit64((unint64_t)v185)) + (v183 << 6);
                }
                else
                {
                  while (v184 - 3 != v12)
                  {
                    Class v185 = (Class)v216[v12++];
                    if (v185)
                    {
                      uint64_t v183 = v12 + 2;
                      goto LABEL_123;
                    }
                  }
                }
              }
            }
          }
          uint64_t v173 = v258 + 1;
          a1 = v246;
          uint64_t v18 = v176;
          if ((char *)(v258 + 1) == v11)
          {
            swift_bridgeObjectRelease();
            uint64_t v24 = v222;
            uint64_t v18 = v217;
            goto LABEL_132;
          }
          continue;
        }
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
  }
  if (qword_100907AE0 != -1) {
    goto LABEL_186;
  }
LABEL_167:
  sub_10008E2DC(v244, (uint64_t)qword_100920A70);
  NSString v204 = Logger.logObject.getter();
  os_log_type_t v205 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v204, v205))
  {
    uint64_t v206 = swift_slowAlloc();
    uint64_t v264 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v206 = v226;
    uint64_t v207 = sub_100662CC0(1);
    v269 = (void *)sub_1000C51B8(v207, v208, (uint64_t *)&v264);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v206 + 12) = 2082;
    uint64_t v209 = sub_100662CC0((__int16)v53);
    v269 = (void *)sub_1000C51B8(v209, v210, (uint64_t *)&v264);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v204, v205, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v206, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v211 = self;
  NSString v212 = String._bridgeToObjectiveC()();
  sub_100662CC0(1);
  NSString v213 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100662CC0((__int16)v53);
  NSString v214 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v211 unauthorizedErrorWithMissingEntitlement:v212 requestedAccessLevel:v213 currentAccesslevel:v214];

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1006C6140(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  uint64_t v269 = a2;
  uint64_t v9 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v9 - 8);
  uint64_t v264 = (uint64_t)&v230 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v266 = (uint64_t)&v230 - v12;
  uint64_t v273 = type metadata accessor for UUID();
  unint64_t v272 = *(void *)(v273 - 8);
  __chkstk_darwin(v273);
  v268 = (char *)&v230 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  char v267 = (char *)&v230 - v15;
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v270 = *(const char **)(v16 - 8);
  __chkstk_darwin(v16);
  os_log_t v271 = (char *)&v230 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (int64_t *)a3[2];
  unint64_t v19 = a3[3];
  v274 = a3;
  id v263 = (id)a3[4];
  uint64_t v20 = qword_1009073A0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_10008E2DC(v16, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v276 = v21;
  uint64_t v22 = Logger.logObject.getter();
  int v23 = static os_log_type_t.info.getter();
  BOOL v24 = os_log_type_enabled(v22, (os_log_type_t)v23);
  unint64_t v25 = a1 >> 62;
  uint64_t v277 = v6;
  unint64_t v278 = a1;
  uint64_t v275 = a1 >> 62;
  uint64_t v260 = v16;
  if (!v24)
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  LODWORD(v262) = v23;
  v265 = v18;
  uint64_t v18 = (int64_t *)swift_slowAlloc();
  id v26 = (const char *)swift_slowAlloc();
  v279 = v26;
  *(_DWORD *)uint64_t v18 = 136446978;
  v283 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v279);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *((_WORD *)v18 + 6) = 2048;
  p_Class isa = v26;
  if (v25) {
    goto LABEL_171;
  }
  uint64_t v27 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    v283 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *((_WORD *)v18 + 11) = 2082;
    sub_1000963CC(0, &qword_100910230);
    id v28 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v31 = v30;

    v283 = sub_1000C51B8(v29, v31, (uint64_t *)&v279);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *((_WORD *)v18 + 16) = 2082;
    a1 = v278;
    swift_bridgeObjectRetain();
    v283 = sub_1000C51B8((uint64_t)v265, v19, (uint64_t *)&v279);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v262, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v25 = v275;
LABEL_8:
    if (v25)
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v32)
    {
      uint64_t v39 = (const char *)_swiftEmptyArrayStorage;
      goto LABEL_21;
    }
    v279 = (const char *)_swiftEmptyArrayStorage;
    uint64_t v22 = &v279;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v32 & 0x8000000000000000) == 0) {
      break;
    }
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
LABEL_167:
    __break(1u);
LABEL_168:
    __break(1u);
LABEL_169:
    __break(1u);
LABEL_170:
    __break(1u);
LABEL_171:
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  uint64_t v33 = 0;
  unint64_t v34 = a1 & 0xC000000000000001;
  id v35 = &qword_100910230;
  os_log_type_t v36 = off_1008AA410;
  do
  {
    if (v32 == v33)
    {
      __break(1u);
LABEL_162:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    if (v34) {
      id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v37 = *(id *)(v278 + 8 * v33 + 32);
    }
    id v38 = v37;
    sub_100694DE8([v38 remObjectID], &qword_100910230);
    if (v5)
    {

      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    ++v33;

    uint64_t v22 = &v279;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
  }
  while (v32 != v33);
  a1 = v278;
  uint64_t v39 = v279;
LABEL_21:
  uint64_t v40 = v277;
  uint64_t v41 = *(void *)(v277 + 96);
  if (v41 > 1)
  {
    if ((unint64_t)(v41 - 2) >= 3 && v41 != 4499 && v41 != 4599)
    {
LABEL_175:
      (*((void (**)(const char *, uint64_t, uint64_t))v270 + 2))(v271, v276, v260);
      sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
      sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
      sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
      __break(1u);
      JUMPOUT(0x1006C8810);
    }
LABEL_28:
    unint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      os_log_t v271 = v39;
      uint64_t v45 = (uint8_t *)v44;
      v279 = (const char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 136315138;
      uint64_t v270 = (const char *)(v45 + 4);
      id v46 = [self cdEntityName];
      uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v49 = v48;

      v283 = sub_1000C51B8(v47, v49, (uint64_t *)&v279);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Performing fetch during upsert {CDType: %s}", v45, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v39 = v271;
      uint64_t v40 = v277;
      swift_slowDealloc();
    }

    uint64_t v50 = (uint64_t)v274;
    uint64_t v51 = (uint64_t)sub_100713440((uint64_t)v39, (uint64_t)v274);
    swift_bridgeObjectRelease();
    if (v5)
    {
      swift_bridgeObjectRelease();
      return;
    }
    a1 = v278;
    if (!v275) {
      goto LABEL_33;
    }
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v53 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v53)
    {
LABEL_152:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_40;
  }
  if (!v41) {
    goto LABEL_28;
  }
  if (v41 != 1) {
    goto LABEL_175;
  }
  swift_bridgeObjectRelease();
  id v54 = Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v54, v55))
  {
    id v56 = (uint8_t *)swift_slowAlloc();
    v279 = (const char *)swift_slowAlloc();
    *(_DWORD *)id v56 = 136315138;
    os_log_t v271 = (const char *)(v56 + 4);
    id v57 = [self cdEntityName];
    uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v60 = v59;

    v283 = sub_1000C51B8(v58, v60, (uint64_t *)&v279);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a1 = v278;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "Skipping fetch during upsert {CDType: %s}", v56, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v40 = v277;
    swift_slowDealloc();
  }

  uint64_t v50 = (uint64_t)v274;
  uint64_t v51 = sub_1002EED94((uint64_t)_swiftEmptyArrayStorage);
  if (v275) {
    goto LABEL_39;
  }
LABEL_33:
  uint64_t v53 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v53) {
    goto LABEL_152;
  }
LABEL_40:
  unint64_t v61 = 0;
  uint64_t v245 = v40 + 24;
  uint64_t v250 = v50 + 48;
  unint64_t v244 = (NSObject **)(v50 + 56);
  unint64_t v62 = a1 & 0xC000000000000001;
  uint64_t v247 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v246 = a1 + 32;
  id v259 = (void **)(v272 + 8);
  uint64_t v253 = &v284;
  int64_t v249 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v272 + 56);
  os_log_t v248 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48);
  os_log_t v243 = (char *)&v283 + 4;
  *(void *)&long long v52 = 136446978;
  long long v241 = v52;
  *(void *)&long long v52 = 136446210;
  long long v257 = v52;
  *(void *)&long long v52 = 136447490;
  long long v239 = v52;
  unint64_t v272 = (unint64_t)"ookItemsIntent";
  os_log_t v271 = "ckAssigneeIdentifier";
  *(void *)&long long v52 = 136447234;
  long long v238 = v52;
  *(void *)&long long v52 = 136446466;
  long long v242 = v52;
  uint64_t v270 = "ckOriginatorIdentifier";
  unint64_t v240 = (char *)&type metadata for Any + 8;
  v274 = (void *)v51;
  uint64_t v252 = v53;
  unint64_t v251 = a1 & 0xC000000000000001;
  while (1)
  {
    if (v62)
    {
      id v63 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v64 = __OFADD__(v61, 1);
      unint64_t v65 = v61 + 1;
      if (v64) {
        break;
      }
      goto LABEL_47;
    }
    if (v61 >= *(void *)(v247 + 16)) {
      goto LABEL_173;
    }
    id v63 = *(id *)(v246 + 8 * v61);
    BOOL v64 = __OFADD__(v61, 1);
    unint64_t v65 = v61 + 1;
    if (v64) {
      break;
    }
LABEL_47:
    id v66 = v63;
    id v67 = sub_100694DE8([v66 remObjectID], &qword_100910230);
    if (v5)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    id v68 = v67;
    unint64_t v258 = v65;
    uint64_t v275 = 0;
    v265 = v66;

    id v69 = [*(id *)(v269 + 16) uuid];
    uint64_t v70 = v267;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v71 = UUID.uuidString.getter();
    uint64_t v73 = v72;
    char v74 = (__objc2_class **)*v259;
    uint64_t v75 = v273;
    ((void (*)(char *, uint64_t))*v259)(v70, v273);
    id v76 = [self localInternalAccountID];
    id v77 = [v76 uuid];

    Swift::OpaquePointer v78 = v268;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v79 = UUID.uuidString.getter();
    uint64_t v81 = v80;
    uint64_t v262 = v74;
    ((void (*)(char *, uint64_t))v74)(v78, v75);
    if (v71 == v79 && v73 == v81)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v82 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v82 & 1) == 0) {
        goto LABEL_57;
      }
    }
    int v83 = 0x7FFFFFFF;
    uint64_t v84 = v265;
    uint64_t v85 = v275;
    switch(*(unsigned __int16 *)(v277 + 68) >> 14)
    {
      case 2:
        int v83 = *(_DWORD *)(v277 + 64);
        break;
      case 3:
        break;
      default:
        int v83 = 2147483519;
        break;
    }
    sub_100662770(2, v83);
    if (v85)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    uint64_t v275 = 0;
LABEL_57:
    unsigned __int8 v86 = sub_100697FA0();
    if (!v274[2]) {
      goto LABEL_62;
    }
    id v87 = v68;
    uint64_t v88 = (uint64_t)v274;
    unint64_t v89 = sub_10030703C(v87);
    if (v90)
    {
      char v91 = (__objc2_class **)*(id *)(*(void *)(v88 + 56) + 8 * v89);

      id v92 = v87;
      id v93 = Logger.logObject.getter();
      os_log_type_t v94 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v93, v94))
      {
        uint64_t v95 = swift_slowAlloc();
        id v96 = (void *)swift_slowAlloc();
        p_Class isa = (void *)swift_slowAlloc();
        v279 = (const char *)p_isa;
        *(_DWORD *)uint64_t v95 = v242;
        v283 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v279);
        uint64_t v262 = v91;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v95 + 12) = 2114;
        v283 = v92;
        id v97 = v92;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v96 = v92;

        _os_log_impl((void *)&_mh_execute_header, v93, v94, "[%{public}s] Skipping merge() and updateChangeCount() since this ingestable is immutable and is not a new insertion {objectID: %{public}@}", (uint8_t *)v95, 0x16u);
        sub_100094134((uint64_t *)&unk_10090A040);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v5 = v275;
      unint64_t v61 = v258;
      unint64_t v62 = v251;
      LOWORD(a1) = v278;
      if (v258 == v252) {
        goto LABEL_152;
      }
    }
    else
    {

LABEL_62:
      int v98 = v86;
      uint64_t v99 = 0;
      while (2)
      {
        int v101 = v98;
        uint64_t v100 = (char *)&off_1008B6888 + v99++;
        unint64_t v102 = 0xE600000000000000;
        unint64_t v103 = 0x737574617473;
        switch(v100[32])
        {
          case 1:
            unint64_t v103 = 0x64656E6769737361;
            unint64_t v102 = 0xEC00000065746144;
            break;
          case 2:
            break;
          case 3:
            unint64_t v102 = v272 | 0x8000000000000000;
            unint64_t v103 = 0xD000000000000014;
            break;
          case 4:
            unint64_t v103 = 0xD000000000000016;
            uint64_t v104 = &v286;
            goto LABEL_69;
          case 5:
            unint64_t v103 = 0xD000000000000018;
            uint64_t v104 = &v285;
LABEL_69:
            unint64_t v102 = *(v104 - 32) | 0x8000000000000000;
            break;
          default:
            unint64_t v102 = 0xE800000000000000;
            unint64_t v103 = 0x44497463656A626FLL;
            break;
        }
        unint64_t v105 = 0xE600000000000000;
        unint64_t v106 = 0x737574617473;
        switch(v101)
        {
          case 0:
            unint64_t v105 = 0xE800000000000000;
            if (v103 != 0x44497463656A626FLL) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 1:
            unint64_t v105 = 0xEC00000065746144;
            if (v103 != 0x64656E6769737361) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 2:
            goto LABEL_77;
          case 3:
            unint64_t v105 = v272 | 0x8000000000000000;
            unint64_t v106 = 0xD000000000000014;
LABEL_77:
            if (v103 != v106) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 4:
            unint64_t v107 = 0xD000000000000016;
            id v108 = &v286;
            goto LABEL_80;
          case 5:
            unint64_t v107 = 0xD000000000000018;
            id v108 = &v285;
LABEL_80:
            unint64_t v105 = *(v108 - 32) | 0x8000000000000000;
            if (v103 != v107) {
              goto LABEL_82;
            }
LABEL_81:
            if (v102 != v105)
            {
LABEL_82:
              char v109 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v109) {
                goto LABEL_86;
              }
              if (v99 == 6)
              {
LABEL_153:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                [self noSuchObjectErrorWithObjectID:v68];
                swift_willThrow();

                uint64_t v217 = (id *)&v284;
                goto LABEL_158;
              }
              continue;
            }
            swift_bridgeObjectRelease_n();
LABEL_86:
            int v110 = *(void **)(v277 + 88);
            sub_1000963CC(0, &qword_100910230);
            ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
            id v112 = [ObjCClassFromMetadata entity];
            id v113 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v112 insertIntoManagedObjectContext:v110];
            id v114 = v263;
            [v110 assignObject:v113 toPersistentStore:v114];

            id v115 = v113;
            id v116 = [v68 uuid];
            uint64_t v117 = v266;
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v118 = v273;
            (*v249)(v117, 0, 1, v273);
            uint64_t v119 = v264;
            sub_1001248EC(v117, v264);
            Class isa = 0;
            if ((*v248)(v119, 1, v118) != 1)
            {
              uint64_t v121 = v264;
              Class isa = UUID._bridgeToObjectiveC()().super.isa;
              ((void (*)(uint64_t, uint64_t))v262)(v121, v273);
            }
            [v115 setIdentifier:isa v230];

            sub_1001260DC(v266);
            id v122 = v68;
            uint64_t v123 = v277;
            swift_retain_n();
            id v124 = v115;
            uint64_t v125 = v122;
            os_log_type_t v126 = (__objc2_class **)v124;
            uint64_t v127 = Logger.logObject.getter();
            os_log_type_t v128 = static os_log_type_t.default.getter();
            int v129 = v128;
            BOOL v130 = os_log_type_enabled(v127, v128);
            uint64_t v262 = v126;
            if (v130)
            {
              uint64_t v131 = swift_slowAlloc();
              id v132 = (void *)swift_slowAlloc();
              p_Class isa = (void *)swift_slowAlloc();
              v279 = (const char *)p_isa;
              *(_DWORD *)uint64_t v131 = v241;
              LODWORD(v256) = v129;
              v283 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v279);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v131 + 12) = 2082;
              sub_10010B4E8(v245, (uint64_t)v281);
              sub_10073F754((uint64_t)v281, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
              uint64_t v133 = sub_100696CF4();
              unint64_t v135 = v134;
              sub_10073F754((uint64_t)v281, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
              v283 = sub_1000C51B8(v133, v135, (uint64_t *)&v279);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v131 + 22) = 2114;
              v283 = v125;
              int v136 = v125;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              void *v132 = v125;

              os_log_type_t v126 = v262;
              *(_WORD *)(v131 + 32) = 2112;
              uint64_t v137 = [v126 objectID];
              v283 = v137;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              v132[1] = v137;

              _os_log_impl((void *)&_mh_execute_header, v127, (os_log_type_t)v256, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v131, 0x2Au);
              sub_100094134((uint64_t *)&unk_10090A040);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_release_n();
            }
            uint64_t v138 = v123;
            swift_beginAccess();
            uint64_t v139 = v125;
            sub_1001A6B7C((uint64_t)v126, (uint64_t)v139);
            swift_endAccess();
            p_Class isa = &v139->isa;

            uint64_t v140 = 6;
            uint64_t v256 = 6;
            unint64_t v141 = &byte_1008B68A8;
            while (2)
            {
              char v143 = *v141++;
              char v142 = v143;
              if (((*(unsigned int *)(v138 + 64) | ((unint64_t)*(unsigned __int16 *)(v138 + 68) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
              {
                uint64_t v144 = Logger.logObject.getter();
                os_log_type_t v145 = static os_log_type_t.error.getter();
                if (os_log_type_enabled(v144, v145))
                {
                  uint64_t v146 = swift_slowAlloc();
                  v279 = (const char *)swift_slowAlloc();
                  *(_DWORD *)uint64_t v146 = v257;
                  LOBYTE(v283) = v142;
                  uint64_t v147 = String.init<A>(describing:)();
                  *(void *)(v146 + 4) = sub_1000C51B8(v147, v148, (uint64_t *)&v279);
                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v144, v145, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v146, 0xCu);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }

                uint64_t v138 = v277;
              }
              LODWORD(a1) = *(_DWORD *)(v138 + 64);
              if (*(unsigned __int16 *)(v138 + 68) >> 14 == 2 && (*(_DWORD *)(v138 + 64) & 1) == 0)
              {
                if (qword_100907AE0 != -1) {
                  goto LABEL_174;
                }
                goto LABEL_155;
              }
              if (--v140) {
                continue;
              }
              break;
            }
            swift_retain_n();
            unint64_t v150 = p_isa;
            uint64_t v151 = v262;
            id v35 = v150;
            os_log_type_t v36 = v151;
            unint64_t v152 = Logger.logObject.getter();
            int v153 = static os_log_type_t.default.getter();
            BOOL v154 = os_log_type_enabled(v152, (os_log_type_t)v153);
            uint64_t v262 = v36;
            if (v154)
            {
              LODWORD(v236) = v153;
              os_log_t v254 = v152;
              uint64_t v155 = swift_slowAlloc();
              p_Class isa = (void *)swift_slowAlloc();
              long long v237 = (const char *)swift_slowAlloc();
              v279 = v237;
              *(_DWORD *)uint64_t v155 = v239;
              v283 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v279);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v155 + 12) = 2082;
              sub_10010B4E8(v245, (uint64_t)v280);
              sub_10073F754((uint64_t)v280, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
              uint64_t v156 = sub_100696CF4();
              unint64_t v158 = v157;
              sub_10073F754((uint64_t)v280, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
              v283 = sub_1000C51B8(v156, v158, (uint64_t *)&v279);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v155 + 22) = 2114;
              v283 = v35;
              int v159 = v35;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              uint64_t v255 = v35;
              os_log_t v160 = p_isa;
              *p_Class isa = v35;

              *(_WORD *)(v155 + 32) = 2112;
              unint64_t v161 = [v36 objectID];
              v283 = v161;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              v160[1] = v161;

              *(_WORD *)(v155 + 42) = 2082;
              uint64_t v162 = 6;
              v283 = _swiftEmptyArrayStorage;
              sub_1001DE058(0, 6, 0);
              id v163 = v283;
              uint64_t v164 = &byte_1008B68A8;
              do
              {
                int v165 = *v164++;
                unint64_t v166 = 0xE600000000000000;
                unint64_t v167 = 0x737574617473;
                switch(v165)
                {
                  case 1:
                    unint64_t v167 = 0x64656E6769737361;
                    unint64_t v166 = 0xEC00000065746144;
                    break;
                  case 2:
                    break;
                  case 3:
                    unint64_t v166 = v272 | 0x8000000000000000;
                    unint64_t v167 = 0xD000000000000014;
                    break;
                  case 4:
                    unint64_t v167 = 0xD000000000000016;
                    int v168 = &v286;
                    goto LABEL_109;
                  case 5:
                    unint64_t v167 = 0xD000000000000018;
                    int v168 = &v285;
LABEL_109:
                    unint64_t v166 = *(v168 - 32) | 0x8000000000000000;
                    break;
                  default:
                    unint64_t v166 = 0xE800000000000000;
                    unint64_t v167 = 0x44497463656A626FLL;
                    break;
                }
                v283 = v163;
                unint64_t v170 = (unint64_t)v163[2].isa;
                unint64_t v169 = (unint64_t)v163[3].isa;
                if (v170 >= v169 >> 1)
                {
                  sub_1001DE058(v169 > 1, v170 + 1, 1);
                  id v163 = v283;
                }
                v163[2].Class isa = (Class)(v170 + 1);
                id v171 = &v163[2 * v170];
                v171[4].Class isa = (Class)v167;
                v171[5].Class isa = (Class)v166;
                --v162;
              }
              while (v162);
              uint64_t v172 = Array.description.getter();
              unint64_t v174 = v173;
              swift_bridgeObjectRelease();
              v283 = sub_1000C51B8(v172, v174, (uint64_t *)&v279);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              *(_WORD *)(v155 + 52) = 1024;
              uint64_t v138 = v277;
              int v175 = *(unsigned __int8 *)(v277 + 104);
              swift_release();
              LODWORD(v283) = v175;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_release();
              os_log_t v176 = v254;
              _os_log_impl((void *)&_mh_execute_header, v254, (os_log_type_t)v236, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v155, 0x3Au);
              sub_100094134((uint64_t *)&unk_10090A040);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v177 = v275;
              id v35 = v255;
              os_log_type_t v36 = v262;
            }
            else
            {

              swift_release_n();
              uint64_t v177 = v275;
            }
            uint64_t v22 = v265;
            sub_1002A349C(v265, v36, (uint64_t)&off_1008B6888);
            unint64_t v19 = 1;
            if (v177) {
              goto LABEL_162;
            }
            uint64_t v275 = 0;
            id v178 = [v36 changedValues];
            uint64_t v179 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            unint64_t v180 = v244;
            swift_beginAccess();
            uint64_t v181 = v138;
            unint64_t v182 = v35;
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v283 = *v180;
            void *v180 = 0x8000000000000000;
            uint64_t v18 = (int64_t *)v179;
            sub_1002C4FAC(v179, v182, isUniquelyReferenced_nonNull_native);
            void *v180 = v283;

            swift_bridgeObjectRelease();
            swift_endAccess();
            int v184 = *(unsigned __int8 *)(v181 + 104);
            if (v256 && (v184 & 1) != 0)
            {
              Class v185 = v262;
              swift_bridgeObjectRelease();
              [v185 updateChangeCount];

              goto LABEL_147;
            }
            unint64_t v186 = v182;
            swift_retain_n();
            uint64_t v187 = v186;
            unint64_t v188 = v262;
            swift_bridgeObjectRetain();
            unint64_t v189 = Logger.logObject.getter();
            LODWORD(v237) = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v189, (os_log_type_t)v237))
            {
              os_log_t v234 = v189;
              uint64_t v235 = v188;
              uint64_t v190 = swift_slowAlloc();
              uint64_t v236 = (void *)swift_slowAlloc();
              unint64_t v232 = (const char *)swift_slowAlloc();
              v279 = v232;
              *(_DWORD *)uint64_t v190 = v238;
              v283 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v279);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v190 + 12) = 1024;
              swift_release();
              LODWORD(v283) = v184;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_release();
              *(_WORD *)(v190 + 18) = 1024;
              LODWORD(v283) = 1;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v190 + 24) = 2114;
              v283 = v187;
              uint64_t v5 = v187;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *uint64_t v236 = v187;

              id v231 = (id)v5;
              uint64_t v233 = (uint8_t *)v190;
              *(_WORD *)(v190 + 34) = 2082;
              int64_t v191 = v18[2];
              if (v191)
              {
                v283 = _swiftEmptyArrayStorage;
                swift_bridgeObjectRetain();
                sub_1001DE058(0, v191, 0);
                uint64_t v22 = v283;
                uint64_t v192 = sub_10072617C((uint64_t)v18);
                unsigned int v194 = v193;
                char v195 = 0;
                unint64_t v196 = v18 + 8;
                char v197 = *((unsigned char *)v18 + 32);
                os_log_t v254 = (os_log_t)v193;
                unint64_t v230 = v18 + 11;
                uint64_t v255 = (unint64_t *)v191;
                uint64_t v256 = (uint64_t)(v18 + 8);
                while (1)
                {
                  if (v192 < 0 || v192 >= 1 << v197) {
                    goto LABEL_165;
                  }
                  unint64_t v199 = (unint64_t)v192 >> 6;
                  uint64_t v5 = 1 << v192;
                  if ((*(void *)&v196[2 * ((unint64_t)v192 >> 6)] & (1 << v192)) == 0) {
                    goto LABEL_166;
                  }
                  if (*((_DWORD *)v18 + 9) != v194) {
                    goto LABEL_167;
                  }
                  p_Class isa = v195;
                  uint64_t v200 = v18[6] + 16 * v192;
                  unint64_t v201 = *(objc_class **)(v200 + 8);
                  uint64_t v262 = *(__objc2_class ***)v200;
                  v283 = v22;
                  unint64_t v202 = (unint64_t)v22[2].isa;
                  unint64_t v203 = (unint64_t)v22[3].isa;
                  swift_bridgeObjectRetain();
                  if (v202 >= v203 >> 1)
                  {
                    sub_1001DE058(v203 > 1, v202 + 1, 1);
                    uint64_t v22 = v283;
                  }
                  v22[2].Class isa = (Class)(v202 + 1);
                  NSString v204 = &v22[2 * v202];
                  v204[4].Class isa = (Class)v262;
                  v204[5].Class isa = v201;
                  char v197 = *((unsigned char *)v18 + 32);
                  unint64_t v19 = 1;
                  unint64_t v198 = 1 << v197;
                  if (v192 >= 1 << v197) {
                    goto LABEL_168;
                  }
                  unint64_t v196 = (_DWORD *)v256;
                  uint64_t v205 = *(void *)(v256 + 8 * v199);
                  if ((v205 & v5) == 0) {
                    goto LABEL_169;
                  }
                  if (*((_DWORD *)v18 + 9) != v194) {
                    goto LABEL_170;
                  }
                  unint64_t v206 = v205 & (-2 << (v192 & 0x3F));
                  if (v206)
                  {
                    unint64_t v198 = __clz(__rbit64(v206)) | v192 & 0xFFFFFFFFFFFFFFC0;
                    LOWORD(a1) = v278;
                    uint64_t v207 = v255;
                    goto LABEL_127;
                  }
                  unint64_t v208 = v199 + 1;
                  unint64_t v209 = (v198 + 63) >> 6;
                  uint64_t v207 = v255;
                  if (v199 + 1 < v209)
                  {
                    unint64_t v210 = *(void *)(v256 + 8 * v208);
                    if (!v210)
                    {
                      unint64_t v208 = v199 + 2;
                      if (v199 + 2 >= v209) {
                        goto LABEL_126;
                      }
                      unint64_t v210 = *(void *)(v256 + 8 * v208);
                      if (!v210)
                      {
                        while (v209 - 3 != v199)
                        {
                          unint64_t v210 = *(void *)&v230[2 * v199++];
                          if (v210)
                          {
                            unint64_t v208 = v199 + 2;
                            goto LABEL_125;
                          }
                        }
                        goto LABEL_126;
                      }
                    }
LABEL_125:
                    unint64_t v198 = __clz(__rbit64(v210)) + (v208 << 6);
                  }
LABEL_126:
                  LOWORD(a1) = v278;
LABEL_127:
                  char v195 = (char *)p_isa + 1;
                  unsigned int v194 = v254;
                  uint64_t v192 = v198;
                  if ((void *)((char *)p_isa + 1) == v207)
                  {
                    swift_bridgeObjectRelease();
                    goto LABEL_150;
                  }
                }
              }
              LOWORD(a1) = v278;
LABEL_150:
              uint64_t v211 = v233;
              uint64_t v212 = Array.description.getter();
              unint64_t v214 = v213;
              swift_bridgeObjectRelease();
              v283 = sub_1000C51B8(v212, v214, (uint64_t *)&v279);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              os_log_t v215 = v234;
              _os_log_impl((void *)&_mh_execute_header, v234, (os_log_type_t)v237, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v211, 0x2Cu);
              sub_100094134((uint64_t *)&unk_10090A040);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              long long v216 = v235;
            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_release_n();
LABEL_147:
              LOWORD(a1) = v278;
            }
            uint64_t v5 = v275;
            unint64_t v61 = v258;
            unint64_t v62 = v251;
            if (v258 == v252) {
              goto LABEL_152;
            }
            break;
          default:
            goto LABEL_153;
        }
        break;
      }
    }
  }
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  swift_once();
LABEL_155:
  sub_10008E2DC(v260, (uint64_t)qword_100920A70);
  int v218 = Logger.logObject.getter();
  os_log_type_t v219 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v218, v219))
  {
    uint64_t v220 = swift_slowAlloc();
    v279 = (const char *)swift_slowAlloc();
    *(_DWORD *)uint64_t v220 = v242;
    uint64_t v221 = sub_100662CC0(1);
    v283 = sub_1000C51B8(v221, v222, (uint64_t *)&v279);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v220 + 12) = 2082;
    uint64_t v223 = sub_100662CC0(a1);
    v283 = sub_1000C51B8(v223, v224, (uint64_t *)&v279);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v218, v219, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v220, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  long long v225 = v262;
  long long v226 = self;
  NSString v227 = String._bridgeToObjectiveC()();
  sub_100662CC0(1);
  NSString v228 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100662CC0(a1);
  NSString v229 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v226 unauthorizedErrorWithMissingEntitlement:v227 requestedAccessLevel:v228 currentAccesslevel:v229];

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v217 = (id *)&v282;
LABEL_158:
}

void sub_1006C8868(uint64_t a1, void *a2, void *a3)
{
  uint64_t v279 = a1;
  uint64_t v6 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v6 - 8);
  uint64_t v273 = (uint64_t)&v236 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v272 = (char *)&v236 - v9;
  uint64_t v276 = type metadata accessor for UUID();
  v274 = *(NSObject **)(v276 - 8);
  __chkstk_darwin(v276);
  uint64_t v11 = (char *)&v236 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v236 - v13;
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v269 = *(void (***)(void, void, void))(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v236 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = a3[3];
  id v277 = (id)a3[2];
  id v271 = (id)a3[4];
  uint64_t v280 = v3;
  uint64_t v19 = *(void *)(v3 + 72);
  uint64_t v275 = a2;
  v282[3] = v19;
  p_Class isa = a2;
  v282[2] = &p_isa;
  swift_bridgeObjectRetain();
  unint64_t v20 = v279;
  swift_bridgeObjectRetain();
  unint64_t v21 = v20;
  uint64_t v22 = v281;
  int v23 = sub_100692158((uint64_t (*)(id *))sub_1007427D0, v282, v21);
  if (v22) {
    goto LABEL_2;
  }
  unint64_t v268 = v18;
  unint64_t v278 = 0;
  uint64_t v262 = v17;
  uint64_t v264 = (uint64_t)a3;
  v281 = v23;
  uint64_t v24 = v280;
  uint64_t v263 = v19;
  char v267 = v14;
  uint64_t v270 = v11;
  uint64_t v265 = v15;
  if (qword_1009073A0 != -1) {
    goto LABEL_185;
  }
  while (1)
  {
    uint64_t v25 = sub_10008E2DC(v265, (uint64_t)qword_100916070);
    unint64_t v26 = (unint64_t)v281;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v279 = v25;
    p_p_Class isa = Logger.logObject.getter();
    int v28 = static os_log_type_t.info.getter();
    BOOL v29 = os_log_type_enabled(p_p_isa, (os_log_type_t)v28);
    unint64_t v30 = v26 >> 62;
    *(void *)&long long v266 = v26 >> 62;
    if (v29)
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      p_Class isa = &v32->isa;
      *(_DWORD *)uint64_t v31 = 136446978;
      uint64_t v287 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&p_isa);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v31 + 12) = 2048;
      LODWORD(v261) = v28;
      uint64_t v260 = v32;
      uint64_t v33 = (uint64_t)&v290;
      if (v30) {
        goto LABEL_194;
      }
      unint64_t v34 = v278;
      uint64_t v35 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_7:
      uint64_t v36 = (uint64_t)v277;
      swift_bridgeObjectRelease();
      uint64_t v287 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 2082;
      sub_1000963CC(0, (unint64_t *)&qword_100909AF8);
      id v37 = [(id)swift_getObjCClassFromMetadata() description];
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v40 = v39;

      uint64_t v287 = sub_1000C51B8(v38, v40, (uint64_t *)&p_isa);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      unint64_t v26 = (unint64_t)v281;
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 32) = 2082;
      unint64_t v41 = v268;
      swift_bridgeObjectRetain();
      uint64_t v287 = sub_1000C51B8(v36, v41, (uint64_t *)&p_isa);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, p_p_isa, (os_log_type_t)v261, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v31, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v42 = v280;
      unint64_t v30 = v266;
    }
    else
    {
      uint64_t v42 = v24;
      unint64_t v34 = v278;

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    if (v30)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v31 = (uint64_t)_swiftEmptyArrayStorage;
    if (!v24) {
      break;
    }
    p_Class isa = _swiftEmptyArrayStorage;
    p_p_Class isa = &p_isa;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v24 < 0) {
      goto LABEL_193;
    }
    uint64_t v43 = 0;
    unint64_t v44 = v26 & 0xC000000000000001;
    while (v24 != v43)
    {
      if (v44) {
        id v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v45 = *(id *)(v26 + 8 * v43 + 32);
      }
      id v46 = v45;
      sub_100694DE8([v46 remObjectID], (unint64_t *)&qword_100909AF8);
      if (v34)
      {

        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      ++v43;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      unint64_t v26 = (unint64_t)v281;
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v24 == v43)
      {
        uint64_t v31 = (uint64_t)p_isa;
        uint64_t v42 = v280;
        unint64_t v30 = v266;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_185:
    swift_once();
  }
LABEL_21:
  uint64_t v47 = *(void *)(v42 + 96);
  if (v47 <= 1)
  {
    if (v47)
    {
      if (v47 != 1) {
        goto LABEL_198;
      }
      swift_bridgeObjectRelease();
      BOOL v64 = Logger.logObject.getter();
      os_log_type_t v65 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v64, v65))
      {
        id v66 = (uint8_t *)swift_slowAlloc();
        p_Class isa = (void *)swift_slowAlloc();
        *(_DWORD *)id v66 = 136315138;
        unint64_t v278 = v66 + 4;
        id v67 = [self cdEntityName];
        uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v70 = v69;

        uint64_t v71 = v280;
        uint64_t v287 = sub_1000C51B8(v68, v70, (uint64_t *)&p_isa);
        uint64_t v42 = v71;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        unint64_t v26 = (unint64_t)v281;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v64, v65, "Skipping fetch during upsert {CDType: %s}", v66, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      id v63 = v275;
      uint64_t v58 = v270;
      uint64_t v59 = v264;
      unint64_t v30 = v266;
      unint64_t v268 = sub_1002EF6E8((uint64_t)_swiftEmptyArrayStorage);
      unint64_t v62 = v34;
      goto LABEL_36;
    }
  }
  else if ((unint64_t)(v47 - 2) >= 3 && v47 != 4499 && v47 != 4599)
  {
LABEL_198:
    ((void (**)(void *, uint64_t, uint64_t))v269)[2](v262, v279, v265);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
    __break(1u);
    JUMPOUT(0x1006CB09CLL);
  }
  unint64_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    unint64_t v278 = (void *)swift_slowAlloc();
    p_Class isa = v278;
    *(_DWORD *)uint64_t v50 = 136315138;
    id v277 = v50 + 4;
    id v51 = [self cdEntityName];
    uint64_t v52 = v31;
    uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v55 = v54;

    uint64_t v56 = v280;
    uint64_t v57 = v53;
    uint64_t v31 = v52;
    uint64_t v287 = sub_1000C51B8(v57, v55, (uint64_t *)&p_isa);
    unint64_t v26 = (unint64_t)v281;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unint64_t v30 = v266;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "Performing fetch during upsert {CDType: %s}", v50, 0xCu);
    swift_arrayDestroy();
    uint64_t v42 = v56;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v58 = v270;
  uint64_t v59 = v264;
  unint64_t v60 = sub_100714EB0(v31, v264);
  swift_bridgeObjectRelease();
  unint64_t v62 = v34;
  if (v34) {
    goto LABEL_2;
  }
  unint64_t v268 = (unint64_t)v60;
  id v63 = v275;
LABEL_36:
  uint64_t v72 = v267;
  if (v30)
  {
    swift_bridgeObjectRetain();
    uint64_t v73 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v73 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v73)
  {
LABEL_172:
    swift_bridgeObjectRelease();
LABEL_2:
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v74 = 0;
  uint64_t v254 = v42 + 24;
  uint64_t v253 = v59 + 48;
  long long v257 = (NSObject **)(v59 + 56);
  unint64_t v75 = v26 & 0xC000000000000001;
  uint64_t v250 = v26 & 0xFFFFFFFFFFFFFF8;
  int64_t v249 = (void *)(v26 + 32);
  uint64_t v260 = v274 + 1;
  uint64_t v252 = v274 + 7;
  unint64_t v251 = v274 + 6;
  id v259 = &v288;
  os_log_t v248 = (char *)&v287 + 4;
  *(void *)&long long v61 = 136446978;
  long long v246 = v61;
  *(void *)&long long v61 = 136446210;
  long long v266 = v61;
  *(void *)&long long v61 = 136447490;
  long long v247 = v61;
  *(void *)&long long v61 = 136447234;
  long long v244 = v61;
  uint64_t v245 = (char *)&type metadata for Any + 8;
  unint64_t v255 = v26 & 0xC000000000000001;
  uint64_t v256 = v73;
  while (1)
  {
    if (v75)
    {
      id v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v74 >= *(void *)(v250 + 16)) {
        goto LABEL_196;
      }
      id v76 = (id)v249[v74];
    }
    unint64_t v258 = v74 + 1;
    if (__OFADD__(v74, 1))
    {
      __break(1u);
LABEL_196:
      __break(1u);
      goto LABEL_197;
    }
    id v77 = v76;
    id v277 = sub_100694DE8([v77 remObjectID], (unint64_t *)&qword_100909AF8);
    if (v62)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v278 = 0;
    uint64_t v269 = (void (**)(void, void, void))v77;

    id v78 = [(id)v63[2] uuid];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v79 = UUID.uuidString.getter();
    uint64_t v81 = v80;
    Class isa = (void (*)(char *, uint64_t))v260->isa;
    int v83 = v72;
    uint64_t v84 = v276;
    ((void (*)(char *, uint64_t))v260->isa)(v83, v276);
    id v85 = [self localInternalAccountID];
    id v86 = [v85 uuid];

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v87 = UUID.uuidString.getter();
    uint64_t v89 = v88;
    isa(v58, v84);
    if (v79 != v87) {
      goto LABEL_50;
    }
    if (v81 == v89)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v90 = v263;
      unint64_t v91 = v268;
    }
    else
    {
LABEL_50:
      char v92 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v90 = v263;
      unint64_t v91 = v268;
      if ((v92 & 1) == 0) {
        goto LABEL_56;
      }
    }
    int v93 = 0x7FFFFFFF;
    os_log_type_t v94 = v278;
    switch(*(unsigned __int16 *)(v280 + 68) >> 14)
    {
      case 2:
        int v93 = *(_DWORD *)(v280 + 64);
        break;
      case 3:
        break;
      default:
        int v93 = 2147483519;
        break;
    }
    sub_100662770(2, v93);
    if (v94)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_177:

LABEL_178:
      uint64_t v233 = (id *)&v289;
      goto LABEL_180;
    }
    unint64_t v278 = 0;
LABEL_56:
    id v95 = [v269 remObjectID:v236];
    id v96 = v95;
    if (*(void *)(v90 + 16))
    {
      sub_100306FE8((uint64_t)v95);
      if (v97) {
        swift_bridgeObjectRetain();
      }
    }

    swift_bridgeObjectRelease();
    char v98 = sub_10069892C((uint64_t (*)(uint64_t, unint64_t))sub_100441534, (unint64_t *)&qword_100909AF8);
    if (!*(void *)(v91 + 16)) {
      goto LABEL_63;
    }
    id v99 = v277;
    unint64_t v100 = sub_10030703C(v99);
    if ((v101 & 1) == 0) {
      break;
    }
    unint64_t v102 = *(id *)(*(void *)(v91 + 56) + 8 * v100);
    uint64_t v103 = v280;
LABEL_109:
    v274 = v102;

    uint64_t v143 = 11;
    uint64_t v264 = 11;
    uint64_t v144 = &byte_1008B5740;
    do
    {
      char v146 = *v144++;
      char v145 = v146;
      if (((*(unsigned int *)(v103 + 64) | ((unint64_t)*(unsigned __int16 *)(v103 + 68) << 32)) & 0xC00000000004) == 0x800000000000)
      {
        uint64_t v147 = Logger.logObject.getter();
        os_log_type_t v148 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v147, v148))
        {
          uint64_t v149 = swift_slowAlloc();
          p_Class isa = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v149 = v266;
          LOBYTE(v287) = v145;
          uint64_t v150 = String.init<A>(describing:)();
          *(void *)(v149 + 4) = sub_1000C51B8(v150, v151, (uint64_t *)&p_isa);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v147, v148, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v149, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
      }
      LODWORD(v59) = *(_DWORD *)(v103 + 64);
      if (*(unsigned __int16 *)(v103 + 68) >> 14 == 2 && (*(_DWORD *)(v103 + 64) & 4) == 0)
      {
        uint64_t v73 = v265;
        if (qword_100907AE0 == -1)
        {
LABEL_174:
          sub_10008E2DC(v73, (uint64_t)qword_100920A70);
          unint64_t v222 = Logger.logObject.getter();
          os_log_type_t v223 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v222, v223))
          {
            uint64_t v224 = swift_slowAlloc();
            p_Class isa = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v224 = 136446466;
            uint64_t v225 = sub_100662CC0(4);
            uint64_t v287 = sub_1000C51B8(v225, v226, (uint64_t *)&p_isa);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v224 + 12) = 2082;
            uint64_t v227 = sub_100662CC0(v59);
            uint64_t v287 = sub_1000C51B8(v227, v228, (uint64_t *)&p_isa);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v222, v223, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v224, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          NSString v229 = self;
          NSString v230 = String._bridgeToObjectiveC()();
          sub_100662CC0(4);
          NSString v231 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          sub_100662CC0(v59);
          NSString v232 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v229 unauthorizedErrorWithMissingEntitlement:v230 requestedAccessLevel:v231 currentAccesslevel:v232];

          swift_willThrow();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          goto LABEL_177;
        }
LABEL_197:
        swift_once();
        goto LABEL_174;
      }
      --v143;
    }
    while (v143);
    swift_retain_n();
    id v153 = v277;
    BOOL v154 = v274;
    uint64_t v155 = v153;
    uint64_t v156 = v154;
    unint64_t v157 = Logger.logObject.getter();
    int v158 = static os_log_type_t.default.getter();
    BOOL v159 = os_log_type_enabled(v157, (os_log_type_t)v158);
    id v277 = v155;
    if (v159)
    {
      LODWORD(v261) = v158;
      v274 = v157;
      uint64_t v160 = swift_slowAlloc();
      unint64_t v161 = (void *)swift_slowAlloc();
      uint64_t v262 = (void *)swift_slowAlloc();
      p_Class isa = v262;
      *(_DWORD *)uint64_t v160 = v247;
      uint64_t v287 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&p_isa);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v160 + 12) = 2082;
      sub_10010B4E8(v254, (uint64_t)v284);
      sub_10073F754((uint64_t)v284, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v162 = sub_100696CF4();
      unint64_t v164 = v163;
      sub_10073F754((uint64_t)v284, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      uint64_t v287 = sub_1000C51B8(v162, v164, (uint64_t *)&p_isa);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v160 + 22) = 2114;
      uint64_t v287 = v155;
      int v165 = v155;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v161 = v155;

      *(_WORD *)(v160 + 32) = 2112;
      unint64_t v166 = [v156 objectID];
      uint64_t v287 = v166;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      os_log_t v243 = v161;
      v161[1] = v166;

      *(_WORD *)(v160 + 42) = 2082;
      uint64_t v167 = 11;
      uint64_t v287 = _swiftEmptyArrayStorage;
      sub_1001DE058(0, 11, 0);
      int v168 = v287;
      unint64_t v169 = &byte_1008B5740;
      do
      {
        int v170 = *v169++;
        unint64_t v171 = 0xE600000000000000;
        uint64_t v172 = 0x737574617473;
        switch(v170)
        {
          case 1:
            uint64_t v172 = 0x4E79616C70736964;
            uint64_t v173 = 6647137;
            goto LABEL_133;
          case 2:
            uint64_t v172 = 0x6D614E7473726966;
            unint64_t v171 = 0xE900000000000065;
            break;
          case 3:
            uint64_t v172 = 0x614E656C6464696DLL;
            unint64_t v171 = 0xEA0000000000656DLL;
            break;
          case 4:
            unint64_t v171 = 0xE800000000000000;
            uint64_t v172 = 0x656D614E7473616CLL;
            break;
          case 5:
            uint64_t v172 = 0x66657250656D616ELL;
            goto LABEL_130;
          case 6:
            uint64_t v172 = 0x66667553656D616ELL;
LABEL_130:
            unint64_t v171 = 0xEA00000000007869;
            break;
          case 7:
            unint64_t v171 = 0xE800000000000000;
            uint64_t v172 = 0x656D616E6B63696ELL;
            break;
          case 8:
            unint64_t v171 = 0xE700000000000000;
            uint64_t v172 = 0x73736572646461;
            break;
          case 9:
            break;
          case 10:
            uint64_t v172 = 0x654C737365636361;
            uint64_t v173 = 7103862;
LABEL_133:
            unint64_t v171 = v173 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            break;
          default:
            unint64_t v171 = 0xE800000000000000;
            uint64_t v172 = 0x44497463656A626FLL;
            break;
        }
        uint64_t v287 = v168;
        unint64_t v175 = (unint64_t)v168[2].isa;
        unint64_t v174 = (unint64_t)v168[3].isa;
        if (v175 >= v174 >> 1)
        {
          sub_1001DE058(v174 > 1, v175 + 1, 1);
          int v168 = v287;
        }
        v168[2].Class isa = (Class)(v175 + 1);
        os_log_t v176 = &v168[2 * v175];
        v176[4].Class isa = (Class)v172;
        v176[5].Class isa = (Class)v171;
        --v167;
      }
      while (v167);
      uint64_t v177 = v280;
      uint64_t v58 = v270;
      uint64_t v178 = Array.description.getter();
      unint64_t v180 = v179;
      swift_bridgeObjectRelease();
      uint64_t v287 = sub_1000C51B8(v178, v180, (uint64_t *)&p_isa);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v160 + 52) = 1024;
      int v181 = *(unsigned __int8 *)(v177 + 104);
      swift_release();
      LODWORD(v287) = v181;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      unint64_t v182 = v274;
      _os_log_impl((void *)&_mh_execute_header, v274, (os_log_type_t)v261, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v160, 0x3Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      id v183 = v269;
      uint64_t v103 = v177;
    }
    else
    {

      swift_release_n();
      id v183 = v269;
      uint64_t v58 = v270;
    }
    int v184 = v278;
    sub_100441CB4(v183, v156, (uint64_t)&off_1008B5720);
    if (v184)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_178;
    }
    unint64_t v278 = 0;
    id v185 = [v156 changedValues];
    uint64_t v186 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v187 = v257;
    swift_beginAccess();
    id v188 = v277;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v287 = *v187;
    *uint64_t v187 = 0x8000000000000000;
    uint64_t v59 = v186;
    sub_1002C4FAC(v186, v188, isUniquelyReferenced_nonNull_native);
    *uint64_t v187 = v287;

    swift_bridgeObjectRelease();
    swift_endAccess();
    int v190 = *(unsigned __int8 *)(v103 + 104);
    if (v264 && (v190 & 1) != 0)
    {
      int64_t v191 = v156;
      swift_bridgeObjectRelease();
      [v191 updateChangeCount];

      goto LABEL_167;
    }
    id v192 = v188;
    swift_retain_n();
    unsigned int v193 = v192;
    unsigned int v194 = v156;
    uint64_t v31 = v59;
    swift_bridgeObjectRetain();
    char v195 = Logger.logObject.getter();
    int v196 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v195, (os_log_type_t)v196))
    {
      int v238 = v196;
      os_log_t v241 = v195;
      long long v242 = v194;
      uint64_t v197 = swift_slowAlloc();
      os_log_t v243 = (void *)swift_slowAlloc();
      long long v239 = (void *)swift_slowAlloc();
      p_Class isa = v239;
      *(_DWORD *)uint64_t v197 = v244;
      uint64_t v287 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&p_isa);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v197 + 12) = 1024;
      swift_release();
      LODWORD(v287) = v190;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      *(_WORD *)(v197 + 18) = 1024;
      LODWORD(v287) = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v197 + 24) = 2114;
      uint64_t v287 = v193;
      unint64_t v198 = v193;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v243 = v193;

      long long v237 = v198;
      uint64_t v240 = v197;
      *(_WORD *)(v197 + 34) = 2082;
      int64_t v199 = *(void *)(v59 + 16);
      if (v199)
      {
        uint64_t v287 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        uint64_t v262 = (void *)v199;
        sub_1001DE058(0, v199, 0);
        p_p_Class isa = v287;
        uint64_t v200 = sub_10072617C(v59);
        uint64_t v201 = v59;
        unsigned int v203 = v202;
        NSString v204 = 0;
        uint64_t v205 = v59 + 64;
        uint64_t v33 = *(unsigned __int8 *)(v59 + 32);
        uint64_t v261 = v202;
        uint64_t v236 = v59 + 88;
        uint64_t v264 = v59 + 64;
        while (1)
        {
          if (v200 < 0 || (uint64_t v33 = 1 << v33, v200 >= v33))
          {
            __break(1u);
LABEL_188:
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
LABEL_194:
            unint64_t v34 = *(void **)(v33 - 256);
            swift_bridgeObjectRetain();
            uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            goto LABEL_7;
          }
          uint64_t v31 = (unint64_t)v200 >> 6;
          uint64_t v33 = *(void *)(v205 + 8 * ((unint64_t)v200 >> 6));
          if ((v33 & (1 << v200)) == 0) {
            goto LABEL_188;
          }
          uint64_t v33 = *(unsigned int *)(v201 + 36);
          if (v33 != v203) {
            goto LABEL_189;
          }
          v274 = v204;
          uint64_t v207 = *(void *)(v201 + 48) + 16 * v200;
          unint64_t v208 = *(objc_class **)(v207 + 8);
          id v277 = *(id *)v207;
          uint64_t v287 = p_p_isa;
          unint64_t v210 = (unint64_t)p_p_isa[2].isa;
          unint64_t v209 = (unint64_t)p_p_isa[3].isa;
          swift_bridgeObjectRetain();
          if (v210 >= v209 >> 1)
          {
            sub_1001DE058(v209 > 1, v210 + 1, 1);
            p_p_Class isa = v287;
          }
          p_p_isa[2].Class isa = (Class)(v210 + 1);
          uint64_t v211 = &p_p_isa[2 * v210];
          v211[4].Class isa = (Class)v277;
          v211[5].Class isa = v208;
          uint64_t v33 = *(unsigned __int8 *)(v201 + 32);
          unint64_t v206 = 1 << v33;
          if (v200 >= 1 << v33) {
            goto LABEL_190;
          }
          uint64_t v205 = v264;
          uint64_t v212 = *(void *)(v264 + 8 * v31);
          if ((v212 & (1 << v200)) == 0) {
            goto LABEL_191;
          }
          if (*(_DWORD *)(v201 + 36) != v203) {
            goto LABEL_192;
          }
          unint64_t v213 = v212 & (-2 << (v200 & 0x3F));
          if (v213)
          {
            unint64_t v206 = __clz(__rbit64(v213)) | v200 & 0xFFFFFFFFFFFFFFC0;
            uint64_t v58 = v270;
            uint64_t v72 = v267;
          }
          else
          {
            uint64_t v214 = v31 + 1;
            unint64_t v215 = (v206 + 63) >> 6;
            uint64_t v58 = v270;
            uint64_t v72 = v267;
            if (v31 + 1 < v215)
            {
              unint64_t v216 = *(void *)(v264 + 8 * v214);
              if (!v216)
              {
                uint64_t v214 = v31 + 2;
                if (v31 + 2 >= v215) {
                  goto LABEL_147;
                }
                unint64_t v216 = *(void *)(v264 + 8 * v214);
                if (!v216)
                {
                  while (v215 - 3 != v31)
                  {
                    unint64_t v216 = *(void *)(v236 + 8 * v31++);
                    if (v216)
                    {
                      uint64_t v214 = v31 + 2;
                      goto LABEL_160;
                    }
                  }
                  goto LABEL_147;
                }
              }
LABEL_160:
              unint64_t v206 = __clz(__rbit64(v216)) + (v214 << 6);
            }
          }
LABEL_147:
          NSString v204 = ((char *)&v274->isa + 1);
          unsigned int v203 = v261;
          uint64_t v200 = v206;
          if ((Class *)((char *)&v274->isa + 1) == v262)
          {
            swift_bridgeObjectRelease();
            goto LABEL_170;
          }
        }
      }
      uint64_t v72 = v267;
LABEL_170:
      uint64_t v59 = v240;
      uint64_t v217 = Array.description.getter();
      unint64_t v219 = v218;
      swift_bridgeObjectRelease();
      uint64_t v287 = sub_1000C51B8(v217, v219, (uint64_t *)&p_isa);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v220 = v241;
      _os_log_impl((void *)&_mh_execute_header, v241, (os_log_type_t)v238, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", (uint8_t *)v59, 0x2Cu);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v221 = v242;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
LABEL_167:
      uint64_t v72 = v267;
    }
    uint64_t v73 = v256;
    unint64_t v74 = v258;
    unint64_t v62 = v278;
    id v63 = v275;
    unint64_t v75 = v255;
    if (v258 == v256) {
      goto LABEL_172;
    }
  }

LABEL_63:
  uint64_t v104 = 11;
  unint64_t v105 = &byte_1008B5740;
  while (2)
  {
    int v106 = *v105++;
    unint64_t v107 = 0xE600000000000000;
    uint64_t v108 = 0x737574617473;
    switch(v106)
    {
      case 1:
        uint64_t v108 = 0x4E79616C70736964;
        uint64_t v109 = 6647137;
        goto LABEL_76;
      case 2:
        uint64_t v108 = 0x6D614E7473726966;
        unint64_t v107 = 0xE900000000000065;
        break;
      case 3:
        uint64_t v108 = 0x614E656C6464696DLL;
        unint64_t v107 = 0xEA0000000000656DLL;
        break;
      case 4:
        unint64_t v107 = 0xE800000000000000;
        uint64_t v108 = 0x656D614E7473616CLL;
        break;
      case 5:
        uint64_t v108 = 0x66657250656D616ELL;
        goto LABEL_73;
      case 6:
        uint64_t v108 = 0x66667553656D616ELL;
LABEL_73:
        unint64_t v107 = 0xEA00000000007869;
        break;
      case 7:
        unint64_t v107 = 0xE800000000000000;
        uint64_t v108 = 0x656D616E6B63696ELL;
        break;
      case 8:
        unint64_t v107 = 0xE700000000000000;
        uint64_t v108 = 0x73736572646461;
        break;
      case 9:
        break;
      case 10:
        uint64_t v108 = 0x654C737365636361;
        uint64_t v109 = 7103862;
LABEL_76:
        unint64_t v107 = v109 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
        break;
      default:
        unint64_t v107 = 0xE800000000000000;
        uint64_t v108 = 0x44497463656A626FLL;
        break;
    }
    unint64_t v110 = 0xE600000000000000;
    uint64_t v111 = 0x737574617473;
    switch(v98)
    {
      case 0:
        unint64_t v110 = 0xE800000000000000;
        if (v108 != 0x44497463656A626FLL) {
          goto LABEL_96;
        }
        goto LABEL_95;
      case 1:
        uint64_t v114 = 0x4E79616C70736964;
        uint64_t v115 = 6647137;
        goto LABEL_100;
      case 2:
        unint64_t v110 = 0xE900000000000065;
        if (v108 != 0x6D614E7473726966) {
          goto LABEL_96;
        }
        goto LABEL_95;
      case 3:
        uint64_t v112 = 0x614E656C6464696DLL;
        uint64_t v113 = 25965;
        goto LABEL_91;
      case 4:
        unint64_t v110 = 0xE800000000000000;
        if (v108 != 0x656D614E7473616CLL) {
          goto LABEL_96;
        }
        goto LABEL_95;
      case 5:
        uint64_t v112 = 0x66657250656D616ELL;
        goto LABEL_90;
      case 6:
        uint64_t v112 = 0x66667553656D616ELL;
LABEL_90:
        uint64_t v113 = 30825;
LABEL_91:
        unint64_t v110 = v113 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000;
        if (v108 != v112) {
          goto LABEL_96;
        }
        goto LABEL_95;
      case 7:
        unint64_t v110 = 0xE800000000000000;
        uint64_t v111 = 0x656D616E6B63696ELL;
        goto LABEL_94;
      case 8:
        unint64_t v110 = 0xE700000000000000;
        if (v108 != 0x73736572646461) {
          goto LABEL_96;
        }
        goto LABEL_95;
      case 9:
LABEL_94:
        if (v108 == v111) {
          goto LABEL_95;
        }
        goto LABEL_96;
      case 10:
        uint64_t v114 = 0x654C737365636361;
        uint64_t v115 = 7103862;
LABEL_100:
        unint64_t v110 = v115 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
        if (v108 != v114) {
          goto LABEL_96;
        }
LABEL_95:
        if (v107 == v110)
        {
          swift_bridgeObjectRelease_n();
LABEL_103:
          uint64_t v117 = *(void **)(v280 + 88);
          sub_1000963CC(0, (unint64_t *)&qword_100909AF8);
          ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
          id v119 = [ObjCClassFromMetadata entity];
          id v120 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v119 insertIntoManagedObjectContext:v117];
          id v121 = v271;
          id v122 = v120;
          [v117 assignObject:v122 toPersistentStore:v121];

          id v123 = v122;
          id v124 = [v277 uuid];
          uint64_t v125 = (uint64_t)v272;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v126 = v276;
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v252->isa)(v125, 0, 1, v276);
          uint64_t v127 = v273;
          sub_1001248EC(v125, v273);
          Class v128 = 0;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v251->isa)(v127, 1, v126) != 1)
          {
            Class v128 = UUID._bridgeToObjectiveC()().super.isa;
            isa((char *)v127, v126);
          }
          [v123 setIdentifier:v128];

          sub_1001260DC(v125);
          id v129 = v277;
          uint64_t v130 = v280;
          swift_retain_n();
          id v131 = v123;
          id v132 = v129;
          unint64_t v102 = v131;
          uint64_t v133 = Logger.logObject.getter();
          os_log_type_t v134 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v133, v134))
          {
            uint64_t v135 = swift_slowAlloc();
            int v136 = (void *)swift_slowAlloc();
            uint64_t v264 = swift_slowAlloc();
            p_Class isa = (void *)v264;
            *(_DWORD *)uint64_t v135 = v246;
            uint64_t v287 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&p_isa);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v135 + 12) = 2082;
            v274 = v102;
            sub_10010B4E8(v254, (uint64_t)v285);
            sub_10073F754((uint64_t)v285, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v137 = sub_100696CF4();
            unint64_t v139 = v138;
            sub_10073F754((uint64_t)v285, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            uint64_t v287 = sub_1000C51B8(v137, v139, (uint64_t *)&p_isa);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v135 + 22) = 2114;
            uint64_t v287 = v132;
            uint64_t v140 = v132;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            void *v136 = v132;

            unint64_t v102 = v274;
            *(_WORD *)(v135 + 32) = 2112;
            unint64_t v141 = [v102 objectID];
            uint64_t v287 = v141;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            v136[1] = v141;

            _os_log_impl((void *)&_mh_execute_header, v133, v134, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v135, 0x2Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            uint64_t v142 = v280;
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v103 = v142;
          }
          else
          {

            swift_release_n();
            uint64_t v103 = v130;
          }
          swift_beginAccess();
          sub_1001A6B7C((uint64_t)v102, (uint64_t)v132);
          swift_endAccess();
          goto LABEL_109;
        }
LABEL_96:
        char v116 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v116) {
          goto LABEL_103;
        }
        if (--v104) {
          continue;
        }
LABEL_179:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        os_log_t v234 = self;
        id v235 = v277;
        [v234 noSuchObjectErrorWithObjectID:v277];
        swift_willThrow();

        uint64_t v233 = (id *)&v286;
LABEL_180:

        return;
      default:
        goto LABEL_179;
    }
  }
}

void sub_1006CB130(uint64_t a1, void *a2, char *a3)
{
  uint64_t v273 = a1;
  uint64_t v6 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v6 - 8);
  uint64_t v267 = (uint64_t)&v228 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  long long v266 = (char *)&v228 - v9;
  uint64_t v271 = type metadata accessor for UUID();
  unint64_t v268 = *(char **)(v271 - 8);
  __chkstk_darwin(v271);
  uint64_t v11 = (char *)&v228 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v228 - v13;
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v264 = *(void (***)(void, void, void))(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v228 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = *((void *)a3 + 3);
  id v269 = (id)*((void *)a3 + 2);
  id v265 = (id)*((void *)a3 + 4);
  uint64_t v274 = v3;
  uint64_t v19 = *(void *)(v3 + 72);
  uint64_t v270 = a2;
  v276[3] = v19;
  id v277 = (uint8_t *)a2;
  v276[2] = &v277;
  swift_bridgeObjectRetain();
  unint64_t v20 = v273;
  swift_bridgeObjectRetain();
  unint64_t v21 = v20;
  uint64_t v22 = v275;
  int v23 = sub_100692158((uint64_t (*)(id *))sub_1007427EC, v276, v21);
  if (v22)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v263 = v18;
  unint64_t v272 = 0;
  *(void *)&long long v256 = v17;
  uint64_t v260 = a3;
  unint64_t v24 = (unint64_t)v23;
  uint64_t v258 = v19;
  uint64_t v261 = v14;
  id v259 = v11;
  uint64_t v262 = v15;
  if (qword_1009073A0 != -1) {
    goto LABEL_165;
  }
  while (1)
  {
    uint64_t v25 = sub_10008E2DC(v262, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v273 = v25;
    unint64_t v26 = Logger.logObject.getter();
    int v27 = static os_log_type_t.info.getter();
    BOOL v28 = os_log_type_enabled(v26, (os_log_type_t)v27);
    os_log_t v29 = (os_log_t)(v24 >> 62);
    uint64_t v275 = (void *)v24;
    uint64_t v30 = v274;
    if (v28)
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      id v277 = (uint8_t *)v31;
      *(_DWORD *)uint64_t v30 = 136446978;
      v281 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v277);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v30 + 12) = 2048;
      LODWORD(v255) = v27;
      os_log_t v254 = v31;
      uint64_t isa_low = (uint64_t)&v284;
      if (v29) {
        goto LABEL_174;
      }
      uint64_t v33 = v272;
      uint64_t v34 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_7:
      swift_bridgeObjectRelease();
      v281 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 22) = 2082;
      sub_1000963CC(0, (unint64_t *)&qword_100921E40);
      id v35 = [(id)swift_getObjCClassFromMetadata() description];
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v38 = v37;

      unint64_t v39 = v275;
      v281 = sub_1000C51B8(v36, v38, (uint64_t *)&v277);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      unint64_t v24 = (unint64_t)v39;
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 32) = 2082;
      unint64_t v40 = v263;
      swift_bridgeObjectRetain();
      v281 = sub_1000C51B8((uint64_t)v269, v40, (uint64_t *)&v277);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v255, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v30, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v30 = v274;
    }
    else
    {
      uint64_t v33 = v272;

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    if (v29)
    {
      swift_bridgeObjectRetain();
      uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v41 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v42 = (uint8_t *)_swiftEmptyArrayStorage;
    os_log_t v257 = v29;
    if (!v41) {
      break;
    }
    id v277 = (uint8_t *)_swiftEmptyArrayStorage;
    unint64_t v26 = &v277;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v41 < 0) {
      goto LABEL_173;
    }
    uint64_t v43 = 0;
    unint64_t v44 = v24 & 0xC000000000000001;
    while (v41 != v43)
    {
      if (v44) {
        id v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v45 = (id)v275[v43 + 4];
      }
      id v46 = v45;
      sub_100694DE8([v46 remObjectID], (unint64_t *)&qword_100921E40);
      if (v33)
      {

        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      ++v43;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      unint64_t v24 = *((void *)v277 + 2);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v41 == v43)
      {
        uint64_t v42 = v277;
        uint64_t v30 = v274;
        unint64_t v24 = (unint64_t)v275;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_165:
    swift_once();
  }
LABEL_21:
  uint64_t v47 = *(void *)(v30 + 96);
  if (v47 <= 1)
  {
    if (v47)
    {
      if (v47 != 1) {
        goto LABEL_178;
      }
      swift_bridgeObjectRelease();
      BOOL v64 = Logger.logObject.getter();
      os_log_type_t v65 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v64, v65))
      {
        id v66 = (uint8_t *)swift_slowAlloc();
        id v277 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)id v66 = 136315138;
        unint64_t v272 = v66 + 4;
        id v67 = [self cdEntityName];
        uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v70 = v69;

        uint64_t v71 = v275;
        v281 = sub_1000C51B8(v68, v70, (uint64_t *)&v277);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        unint64_t v24 = (unint64_t)v71;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v64, v65, "Skipping fetch during upsert {CDType: %s}", v66, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      uint64_t v57 = v261;
      uint64_t v58 = v260;
      id v63 = v268;
      unint64_t v263 = sub_1002EF6F4((uint64_t)_swiftEmptyArrayStorage);
      unint64_t v62 = v33;
      uint64_t v61 = v274;
      goto LABEL_37;
    }
  }
  else if ((unint64_t)(v47 - 2) >= 3 && v47 != 4499 && v47 != 4599)
  {
LABEL_178:
    v264[2](v256, v273, v262);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
    __break(1u);
    JUMPOUT(0x1006CD854);
  }
  unint64_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    id v51 = (uint8_t *)swift_slowAlloc();
    unint64_t v272 = v42;
    id v277 = v51;
    *(_DWORD *)uint64_t v50 = 136315138;
    id v269 = v50 + 4;
    id v52 = [self cdEntityName];
    uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v55 = v54;

    uint64_t v56 = v275;
    v281 = sub_1000C51B8(v53, v55, (uint64_t *)&v277);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v30 = v274;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "Performing fetch during upsert {CDType: %s}", v50, 0xCu);
    swift_arrayDestroy();
    uint64_t v42 = v272;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v56 = (void *)v24;
  }

  uint64_t v57 = v261;
  uint64_t v58 = v260;
  uint64_t v59 = sub_100715318((uint64_t)v42, (uint64_t)v260);
  swift_bridgeObjectRelease();
  uint64_t v61 = v30;
  unint64_t v62 = v33;
  if (v33) {
    goto LABEL_2;
  }
  unint64_t v263 = (unint64_t)v59;
  unint64_t v24 = (unint64_t)v56;
  id v63 = v268;
LABEL_37:
  if (v257)
  {
    swift_bridgeObjectRetain();
    uint64_t v72 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v72) {
      goto LABEL_152;
    }
  }
  else
  {
    uint64_t v72 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v72) {
      goto LABEL_152;
    }
  }
  unint64_t v73 = 0;
  uint64_t v246 = v61 + 24;
  uint64_t v245 = v58 + 48;
  int64_t v249 = (NSObject **)(v58 + 56);
  unint64_t v74 = v24 & 0xC000000000000001;
  uint64_t v242 = v24 & 0xFFFFFFFFFFFFFF8;
  os_log_t v241 = (void *)(v24 + 32);
  uint64_t v252 = (void (**)(char *, uint64_t))(v63 + 8);
  long long v244 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v63 + 56);
  os_log_t v243 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  unint64_t v251 = &v282;
  uint64_t v240 = (char *)&v281 + 4;
  *(void *)&long long v60 = 136446978;
  long long v238 = v60;
  uint64_t v260 = "shouldUpdateSectionsOrdering";
  *(void *)&long long v60 = 136446210;
  long long v256 = v60;
  *(void *)&long long v60 = 136447490;
  long long v239 = v60;
  *(void *)&long long v60 = 136447234;
  long long v236 = v60;
  os_log_t v257 = (os_log_t)"externalIdentifier";
  long long v237 = (char *)&type metadata for Any + 8;
  unint64_t v75 = v270;
  unint64_t v247 = v24 & 0xC000000000000001;
  uint64_t v248 = v72;
  while (1)
  {
    if (v74)
    {
      id v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v73 >= *(void *)(v242 + 16)) {
        goto LABEL_176;
      }
      id v76 = (id)v241[v73];
    }
    unint64_t v250 = v73 + 1;
    if (__OFADD__(v73, 1))
    {
      __break(1u);
LABEL_176:
      __break(1u);
LABEL_177:
      swift_once();
LABEL_155:
      sub_10008E2DC(v72, (uint64_t)qword_100920A70);
      uint64_t v214 = Logger.logObject.getter();
      os_log_type_t v215 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v214, v215))
      {
        uint64_t v216 = swift_slowAlloc();
        id v277 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v216 = 136446466;
        uint64_t v217 = sub_100662CC0(4);
        v281 = sub_1000C51B8(v217, v218, (uint64_t *)&v277);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v216 + 12) = 2082;
        uint64_t v219 = sub_100662CC0((__int16)v58);
        v281 = sub_1000C51B8(v219, v220, (uint64_t *)&v277);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v214, v215, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v216, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      uint64_t v224 = self;
      NSString v225 = String._bridgeToObjectiveC()();
      sub_100662CC0(4);
      NSString v226 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_100662CC0((__int16)v58);
      NSString v227 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v224 unauthorizedErrorWithMissingEntitlement:v225 requestedAccessLevel:v226 currentAccesslevel:v227];

      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_159;
    }
    id v77 = v76;
    id v269 = sub_100694DE8([v77 remObjectID], (unint64_t *)&qword_100921E40);
    if (v62)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v272 = 0;
    uint64_t v264 = (void (**)(void, void, void))v77;

    id v78 = [(id)v75[2] uuid];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v79 = UUID.uuidString.getter();
    uint64_t v80 = v57;
    uint64_t v81 = v79;
    uint64_t v83 = v82;
    uint64_t v84 = v259;
    id v85 = *v252;
    uint64_t v86 = v271;
    (*v252)(v80, v271);
    id v87 = [self localInternalAccountID];
    id v88 = [v87 uuid];

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v89 = UUID.uuidString.getter();
    uint64_t v91 = v90;
    v85(v84, v86);
    if (v81 == v89 && v83 == v91) {
      break;
    }
    char v92 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v92) {
      goto LABEL_52;
    }
    os_log_type_t v94 = v264;
LABEL_58:
    id v96 = [v94 remObjectID:v228];
    char v97 = v96;
    if (*(void *)(v258 + 16))
    {
      sub_100306FE8((uint64_t)v96);
      if (v98) {
        swift_bridgeObjectRetain();
      }
    }

    swift_bridgeObjectRelease();
    v99._rawValue = &off_1008B4CC0;
    char v100 = sub_100699678(v99, (unint64_t *)&qword_100921E40);
    if (*(void *)(v263 + 16))
    {
      id v101 = v269;
      unint64_t v102 = v263;
      unint64_t v103 = sub_10030703C(v101);
      if (v104)
      {
        unint64_t v105 = (char *)*(id *)(*(void *)(v102 + 56) + 8 * v103);
        uint64_t v106 = v274;
        goto LABEL_97;
      }
    }
    unint64_t v107 = (void *)v24;
    uint64_t v108 = 7;
    uint64_t v109 = &byte_1008B5798;
    while (2)
    {
      int v110 = *v109++;
      unint64_t v111 = 0xE800000000000000;
      unint64_t v112 = 0x44497463656A626FLL;
      switch(v110)
      {
        case 1:
          unint64_t v112 = 0x6972745364697575;
          unint64_t v111 = 0xEA0000000000676ELL;
          break;
        case 2:
          unint64_t v111 = 0xE700000000000000;
          unint64_t v112 = 0x4C525574736F68;
          break;
        case 3:
          unint64_t v111 = (unint64_t)v260 | 0x8000000000000000;
          unint64_t v112 = 0xD000000000000012;
          break;
        case 4:
          unint64_t v112 = 0xD000000000000017;
          unint64_t v111 = (unint64_t)v257 | 0x8000000000000000;
          break;
        case 5:
          unint64_t v112 = 0x6F54636E79536164;
          unint64_t v111 = 0xEB000000006E656BLL;
          break;
        case 6:
          unint64_t v112 = 0x654B687375506164;
          unint64_t v111 = 0xE900000000000079;
          break;
        default:
          break;
      }
      unint64_t v113 = 0xE800000000000000;
      uint64_t v114 = 0x44497463656A626FLL;
      switch(v100)
      {
        case 0:
          goto LABEL_83;
        case 1:
          unint64_t v113 = 0xEA0000000000676ELL;
          if (v112 != 0x6972745364697575) {
            goto LABEL_85;
          }
          goto LABEL_84;
        case 2:
          unint64_t v113 = 0xE700000000000000;
          if (v112 != 0x4C525574736F68) {
            goto LABEL_85;
          }
          goto LABEL_84;
        case 3:
          unint64_t v113 = (unint64_t)v260 | 0x8000000000000000;
          if (v112 != 0xD000000000000012) {
            goto LABEL_85;
          }
          goto LABEL_84;
        case 4:
          unint64_t v113 = (unint64_t)v257 | 0x8000000000000000;
          if (v112 != 0xD000000000000017) {
            goto LABEL_85;
          }
          goto LABEL_84;
        case 5:
          uint64_t v114 = 0x6F54636E79536164;
          unint64_t v113 = 0xEB000000006E656BLL;
LABEL_83:
          if (v112 == v114) {
            goto LABEL_84;
          }
          goto LABEL_85;
        case 6:
          unint64_t v113 = 0xE900000000000079;
          if (v112 != 0x654B687375506164) {
            goto LABEL_85;
          }
LABEL_84:
          if (v111 != v113)
          {
LABEL_85:
            char v115 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v115) {
              goto LABEL_91;
            }
            if (!--v108)
            {
LABEL_157:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v221 = self;
              id v222 = v269;
              [v221 noSuchObjectErrorWithObjectID:v269];
              swift_willThrow();

              os_log_type_t v223 = &v280;
              goto LABEL_160;
            }
            continue;
          }
          swift_bridgeObjectRelease_n();
LABEL_91:
          char v116 = *(void **)(v274 + 88);
          sub_1000963CC(0, (unint64_t *)&qword_100921E40);
          ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
          id v118 = [ObjCClassFromMetadata entity];
          id v119 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v118 insertIntoManagedObjectContext:v116];
          id v120 = v265;
          id v121 = v119;
          [v116 assignObject:v121 toPersistentStore:v120];

          id v122 = v121;
          id v123 = [v269 uuid];
          uint64_t v124 = (uint64_t)v266;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          (*v244)(v124, 0, 1, v86);
          uint64_t v125 = v86;
          uint64_t v126 = v267;
          sub_1001248EC(v124, v267);
          int v127 = (*v243)(v126, 1, v125);
          Class isa = 0;
          if (v127 != 1)
          {
            Class isa = UUID._bridgeToObjectiveC()().super.isa;
            v85((char *)v126, v271);
          }
          [v122 setIdentifier:isa];

          sub_1001260DC(v124);
          id v129 = v269;
          uint64_t v106 = v274;
          swift_retain_n();
          id v130 = v122;
          id v131 = v129;
          unint64_t v105 = (char *)v130;
          id v132 = Logger.logObject.getter();
          os_log_type_t v133 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v132, v133))
          {
            uint64_t v134 = swift_slowAlloc();
            uint64_t v135 = (void *)swift_slowAlloc();
            uint64_t v255 = swift_slowAlloc();
            id v277 = (uint8_t *)v255;
            *(_DWORD *)uint64_t v134 = v238;
            v281 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v277);
            unint64_t v268 = v105;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v134 + 12) = 2082;
            sub_10010B4E8(v246, (uint64_t)v279);
            sub_10073F754((uint64_t)v279, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v136 = sub_100696CF4();
            unint64_t v138 = v137;
            sub_10073F754((uint64_t)v279, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            v281 = sub_1000C51B8(v136, v138, (uint64_t *)&v277);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v134 + 22) = 2114;
            v281 = v131;
            unint64_t v139 = v131;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *uint64_t v135 = v131;

            *(_WORD *)(v134 + 32) = 2112;
            uint64_t v140 = [v268 objectID];
            v281 = v140;
            unint64_t v105 = v268;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            v135[1] = v140;
            uint64_t v106 = v274;

            _os_log_impl((void *)&_mh_execute_header, v132, v133, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v134, 0x2Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            unint64_t v24 = (unint64_t)v275;
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            unint64_t v24 = (unint64_t)v107;

            swift_release_n();
          }
          swift_beginAccess();
          sub_1001A6B7C((uint64_t)v105, (uint64_t)v131);
          swift_endAccess();
LABEL_97:
          unint64_t v268 = v105;

          uint64_t v141 = 7;
          uint64_t v255 = 7;
          uint64_t v142 = (void *)v24;
          uint64_t v143 = &byte_1008B5798;
          while (2)
          {
            char v145 = *v143++;
            char v144 = v145;
            if (((*(unsigned int *)(v106 + 64) | ((unint64_t)*(unsigned __int16 *)(v106 + 68) << 32)) & 0xC00000000004) == 0x800000000000)
            {
              char v146 = Logger.logObject.getter();
              os_log_type_t v147 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v146, v147))
              {
                uint64_t v148 = swift_slowAlloc();
                id v277 = (uint8_t *)swift_slowAlloc();
                *(_DWORD *)uint64_t v148 = v256;
                LOBYTE(v281) = v144;
                uint64_t v149 = String.init<A>(describing:)();
                *(void *)(v148 + 4) = sub_1000C51B8(v149, v150, (uint64_t *)&v277);
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v146, v147, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v148, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                uint64_t v106 = v274;
                swift_slowDealloc();
              }
            }
            LODWORD(v58) = *(_DWORD *)(v106 + 64);
            if (*(unsigned __int16 *)(v106 + 68) >> 14 == 2 && (*(_DWORD *)(v106 + 64) & 4) == 0)
            {
              uint64_t v72 = v262;
              if (qword_100907AE0 == -1) {
                goto LABEL_155;
              }
              goto LABEL_177;
            }
            if (--v141) {
              continue;
            }
            break;
          }
          swift_retain_n();
          id v152 = v269;
          id v153 = v268;
          uint64_t v58 = (char *)v152;
          BOOL v154 = v153;
          uint64_t v155 = Logger.logObject.getter();
          int v156 = static os_log_type_t.default.getter();
          unint64_t v24 = (unint64_t)v142;
          if (os_log_type_enabled(v155, (os_log_type_t)v156))
          {
            LODWORD(v235) = v156;
            os_log_t v254 = v155;
            uint64_t v157 = swift_slowAlloc();
            uint64_t v158 = swift_slowAlloc();
            id v269 = v154;
            BOOL v159 = (char *)v158;
            uint64_t v253 = swift_slowAlloc();
            id v277 = (uint8_t *)v253;
            *(_DWORD *)uint64_t v157 = v239;
            v281 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v277);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v157 + 12) = 2082;
            sub_10010B4E8(v246, (uint64_t)v278);
            sub_10073F754((uint64_t)v278, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v160 = sub_100696CF4();
            unint64_t v162 = v161;
            sub_10073F754((uint64_t)v278, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            v281 = sub_1000C51B8(v160, v162, (uint64_t *)&v277);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v157 + 22) = 2114;
            v281 = v58;
            unint64_t v163 = v58;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            unint64_t v268 = v58;
            *(void *)BOOL v159 = v58;

            *(_WORD *)(v157 + 32) = 2112;
            unint64_t v164 = [v269 objectID];
            v281 = v164;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            os_log_t v234 = v159;
            *((void *)v159 + 1) = v164;
            BOOL v154 = (char *)v269;

            *(_WORD *)(v157 + 42) = 2082;
            uint64_t v165 = 7;
            v281 = _swiftEmptyArrayStorage;
            sub_1001DE058(0, 7, 0);
            unint64_t v166 = v281;
            uint64_t v167 = &byte_1008B5798;
            do
            {
              int v168 = *v167++;
              unint64_t v169 = 0xE800000000000000;
              unint64_t v170 = 0x44497463656A626FLL;
              switch(v168)
              {
                case 1:
                  unint64_t v170 = 0x6972745364697575;
                  unint64_t v169 = 0xEA0000000000676ELL;
                  break;
                case 2:
                  unint64_t v169 = 0xE700000000000000;
                  unint64_t v170 = 0x4C525574736F68;
                  break;
                case 3:
                  unint64_t v169 = (unint64_t)v260 | 0x8000000000000000;
                  unint64_t v170 = 0xD000000000000012;
                  break;
                case 4:
                  unint64_t v170 = 0xD000000000000017;
                  unint64_t v169 = (unint64_t)v257 | 0x8000000000000000;
                  break;
                case 5:
                  unint64_t v170 = 0x6F54636E79536164;
                  unint64_t v169 = 0xEB000000006E656BLL;
                  break;
                case 6:
                  unint64_t v170 = 0x654B687375506164;
                  unint64_t v169 = 0xE900000000000079;
                  break;
                default:
                  break;
              }
              v281 = v166;
              unint64_t v172 = (unint64_t)v166[2].isa;
              unint64_t v171 = (unint64_t)v166[3].isa;
              if (v172 >= v171 >> 1)
              {
                sub_1001DE058(v171 > 1, v172 + 1, 1);
                unint64_t v166 = v281;
              }
              v166[2].Class isa = (Class)(v172 + 1);
              uint64_t v173 = &v166[2 * v172];
              v173[4].Class isa = (Class)v170;
              v173[5].Class isa = (Class)v169;
              --v165;
            }
            while (v165);
            unint64_t v24 = (unint64_t)v275;
            uint64_t v174 = Array.description.getter();
            unint64_t v176 = v175;
            swift_bridgeObjectRelease();
            v281 = sub_1000C51B8(v174, v176, (uint64_t *)&v277);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v157 + 52) = 1024;
            uint64_t v106 = v274;
            int v177 = *(unsigned __int8 *)(v274 + 104);
            swift_release();
            LODWORD(v281) = v177;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release();
            os_log_t v178 = v254;
            _os_log_impl((void *)&_mh_execute_header, v254, (os_log_type_t)v235, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v157, 0x3Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v58 = v268;
          }
          else
          {

            swift_release_n();
          }
          unint64_t v179 = v264;
          unint64_t v180 = v272;
          sub_1003F736C(v264, v154, (uint64_t)&off_1008B5778);
          if (v180)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            return;
          }
          unint64_t v272 = 0;
          id v181 = [v154 changedValues];
          uint64_t v182 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          id v183 = v249;
          swift_beginAccess();
          int v184 = v58;
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v281 = *v183;
          void *v183 = 0x8000000000000000;
          sub_1002C4FAC(v182, v184, isUniquelyReferenced_nonNull_native);
          void *v183 = v281;

          swift_bridgeObjectRelease();
          swift_endAccess();
          int v186 = *(unsigned __int8 *)(v106 + 104);
          if (v255 && (v186 & 1) != 0)
          {
            uint64_t v187 = v154;
            swift_bridgeObjectRelease();
            [v187 updateChangeCount];

            goto LABEL_151;
          }
          id v188 = v184;
          swift_retain_n();
          unint64_t v189 = v188;
          uint64_t v58 = v154;
          swift_bridgeObjectRetain();
          int v190 = Logger.logObject.getter();
          int v191 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v190, (os_log_type_t)v191))
          {

            swift_bridgeObjectRelease_n();
            swift_release_n();
            goto LABEL_151;
          }
          int v230 = v191;
          os_log_t v233 = v190;
          os_log_t v234 = v58;
          uint64_t v30 = swift_slowAlloc();
          id v235 = (void *)swift_slowAlloc();
          NSString v231 = (uint8_t *)swift_slowAlloc();
          id v277 = v231;
          *(_DWORD *)uint64_t v30 = v236;
          v281 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v277);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v30 + 12) = 1024;
          swift_release();
          LODWORD(v281) = v186;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release();
          *(_WORD *)(v30 + 18) = 1024;
          LODWORD(v281) = 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v30 + 24) = 2114;
          v281 = v189;
          id v192 = v189;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *id v235 = v189;

          NSString v229 = v192;
          NSString v232 = (uint8_t *)v30;
          *(_WORD *)(v30 + 34) = 2082;
          os_log_t v29 = *(os_log_t *)(v182 + 16);
          if (!v29) {
            goto LABEL_150;
          }
          v281 = _swiftEmptyArrayStorage;
          swift_bridgeObjectRetain();
          sub_1001DE058(0, (int64_t)v29, 0);
          unint64_t v26 = v281;
          uint64_t v193 = sub_10072617C(v182);
          int v195 = v194;
          int v196 = 0;
          uint64_t v197 = v182 + 64;
          uint64_t isa_low = *(unsigned __int8 *)(v182 + 32);
          uint64_t v253 = v194;
          uint64_t v228 = v182 + 88;
          os_log_t v254 = v29;
          uint64_t v255 = v182 + 64;
          while (2)
          {
            if (v193 < 0 || (uint64_t isa_low = 1 << isa_low, v193 >= isa_low))
            {
              __break(1u);
LABEL_168:
              __break(1u);
LABEL_169:
              __break(1u);
LABEL_170:
              __break(1u);
LABEL_171:
              __break(1u);
LABEL_172:
              __break(1u);
LABEL_173:
              __break(1u);
LABEL_174:
              uint64_t v33 = *(uint8_t **)(isa_low - 256);
              swift_bridgeObjectRetain();
              uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              goto LABEL_7;
            }
            uint64_t v30 = (unint64_t)v193 >> 6;
            uint64_t isa_low = *(void *)(v197 + 8 * ((unint64_t)v193 >> 6));
            if ((isa_low & (1 << v193)) == 0) {
              goto LABEL_168;
            }
            uint64_t isa_low = *(unsigned int *)(v182 + 36);
            if (isa_low != v195) {
              goto LABEL_169;
            }
            unint64_t v268 = v196;
            uint64_t v199 = *(void *)(v182 + 48) + 16 * v193;
            id v269 = *(id *)v199;
            os_log_t v29 = (os_log_t)v182;
            uint64_t v200 = *(objc_class **)(v199 + 8);
            v281 = v26;
            unint64_t v202 = (unint64_t)v26[2].isa;
            unint64_t v201 = (unint64_t)v26[3].isa;
            swift_bridgeObjectRetain();
            if (v202 >= v201 >> 1)
            {
              sub_1001DE058(v201 > 1, v202 + 1, 1);
              unint64_t v26 = v281;
            }
            v26[2].Class isa = (Class)(v202 + 1);
            unsigned int v203 = &v26[2 * v202];
            v203[4].Class isa = (Class)v269;
            v203[5].Class isa = v200;
            uint64_t isa_low = LOBYTE(v29[4].isa);
            unint64_t v198 = 1 << isa_low;
            if (v193 >= 1 << isa_low) {
              goto LABEL_170;
            }
            uint64_t v197 = v255;
            uint64_t v204 = *(void *)(v255 + 8 * v30);
            if ((v204 & (1 << v193)) == 0) {
              goto LABEL_171;
            }
            uint64_t v182 = (uint64_t)v29;
            if (HIDWORD(v29[4].isa) != v195) {
              goto LABEL_172;
            }
            unint64_t v205 = v204 & (-2 << (v193 & 0x3F));
            if (v205)
            {
              unint64_t v198 = __clz(__rbit64(v205)) | v193 & 0xFFFFFFFFFFFFFFC0;
              unint64_t v24 = (unint64_t)v275;
              os_log_t v29 = v254;
            }
            else
            {
              uint64_t v206 = v30 + 1;
              unint64_t v207 = (v198 + 63) >> 6;
              unint64_t v24 = (unint64_t)v275;
              os_log_t v29 = v254;
              if (v30 + 1 < v207)
              {
                unint64_t v208 = *(void *)(v255 + 8 * v206);
                if (v208) {
                  goto LABEL_142;
                }
                uint64_t v206 = v30 + 2;
                if (v30 + 2 < v207)
                {
                  unint64_t v208 = *(void *)(v255 + 8 * v206);
                  if (v208)
                  {
LABEL_142:
                    unint64_t v198 = __clz(__rbit64(v208)) + (v206 << 6);
                  }
                  else
                  {
                    while (v207 - 3 != v30)
                    {
                      unint64_t v208 = *(void *)(v228 + 8 * v30++);
                      if (v208)
                      {
                        uint64_t v206 = v30 + 2;
                        goto LABEL_142;
                      }
                    }
                  }
                }
              }
            }
            int v196 = v268 + 1;
            int v195 = v253;
            uint64_t v193 = v198;
            if (v268 + 1 != (char *)v29) {
              continue;
            }
            break;
          }
          swift_bridgeObjectRelease();
LABEL_150:
          unint64_t v209 = v232;
          uint64_t v210 = Array.description.getter();
          uint64_t v58 = v211;
          swift_bridgeObjectRelease();
          v281 = sub_1000C51B8(v210, (unint64_t)v58, (uint64_t *)&v277);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          os_log_t v212 = v233;
          _os_log_impl((void *)&_mh_execute_header, v233, (os_log_type_t)v230, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v209, 0x2Cu);
          sub_100094134((uint64_t *)&unk_10090A040);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          unint64_t v213 = v234;
LABEL_151:
          uint64_t v72 = v248;
          unint64_t v73 = v250;
          unint64_t v62 = v272;
          unint64_t v75 = v270;
          uint64_t v57 = v261;
          unint64_t v74 = v247;
          if (v250 == v248)
          {
LABEL_152:
            swift_bridgeObjectRelease();
            goto LABEL_2;
          }
          break;
        default:
          goto LABEL_157;
      }
      break;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_52:
  int v93 = 0x7FFFFFFF;
  os_log_type_t v94 = v264;
  id v95 = v272;
  switch(*(unsigned __int16 *)(v274 + 68) >> 14)
  {
    case 2:
      int v93 = *(_DWORD *)(v274 + 64);
      break;
    case 3:
      break;
    default:
      int v93 = 2147483519;
      break;
  }
  sub_100662770(2, v93);
  if (!v95)
  {
    unint64_t v272 = 0;
    uint64_t v86 = v271;
    goto LABEL_58;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_159:
  os_log_type_t v223 = &v283;
LABEL_160:
}

void sub_1006CD8B8(unint64_t a1, void *a2, void *a3)
{
  uint64_t v228 = a2;
  uint64_t v6 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v6 - 8);
  uint64_t v224 = &v192[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v230 = type metadata accessor for UUID();
  NSString v225 = *(char **)(v230 - 8);
  __chkstk_darwin(v230);
  uint64_t v9 = &v192[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v12 = &v192[-v11];
  uint64_t v13 = type metadata accessor for Logger();
  unint64_t v222 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = &v192[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = (const char *)a3[3];
  NSString v226 = (void *)a3[2];
  id v223 = (id)a3[4];
  uint64_t v229 = v3;
  uint64_t v17 = *(void *)(v3 + 72);
  v233[3] = v17;
  os_log_t v234 = v228;
  v233[2] = &v234;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v18 = v232;
  uint64_t v19 = sub_100692158((uint64_t (*)(id *))sub_100742808, v233, a1);
  NSString v231 = v18;
  if (v18) {
    goto LABEL_2;
  }
  uint64_t v221 = v16;
  NSString v232 = v19;
  *(void *)&long long v214 = v15;
  unint64_t v219 = (unint64_t)a3;
  uint64_t v20 = v230;
  uint64_t v216 = v17;
  unint64_t v218 = v12;
  uint64_t v217 = v9;
  uint64_t v220 = v13;
  if (qword_1009073A0 != -1) {
    goto LABEL_135;
  }
LABEL_4:
  uint64_t v21 = sub_10008E2DC(v220, (uint64_t)qword_100916070);
  unint64_t v22 = (unint64_t)v232;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v227 = v21;
  int v23 = Logger.logObject.getter();
  int v24 = static os_log_type_t.info.getter();
  BOOL v25 = os_log_type_enabled(v23, (os_log_type_t)v24);
  unint64_t v26 = (void *)(v22 >> 62);
  uint64_t v27 = v229;
  if (v25)
  {
    LODWORD(v213) = v24;
    BOOL v28 = (void *)swift_slowAlloc();
    os_log_t v29 = (void *)swift_slowAlloc();
    os_log_t v234 = v29;
    *(_DWORD *)BOOL v28 = 136446978;
    long long v238 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v234);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *((_WORD *)v28 + 6) = 2048;
    os_log_t v212 = (void (**)(unsigned char *, uint64_t))v29;
    if (!v26)
    {
      uint64_t v30 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_7;
    }
    goto LABEL_138;
  }
  uint64_t v36 = v20;

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v26)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    BOOL v28 = _swiftEmptyArrayStorage;
    os_log_type_t v215 = v26;
    if (!v20) {
      break;
    }
    os_log_t v234 = _swiftEmptyArrayStorage;
    int v23 = &v234;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v20 & 0x8000000000000000) == 0)
    {
      uint64_t v37 = 0;
      unint64_t v38 = v22 & 0xC000000000000001;
      unint64_t v39 = v231;
      while (v20 != v37)
      {
        if (v38) {
          id v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v40 = *(id *)(v22 + 8 * v37 + 32);
        }
        id v41 = v40;
        sub_100695DC4([v41 remObjectID], (void (*)(void))type metadata accessor for REMCDDueDateDeltaAlert, 0xD000000000000016, (void *)0x80000001007DC190);
        if (v39)
        {

          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        ++v37;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        unint64_t v22 = (unint64_t)v232;
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v20 == v37)
        {
          NSString v231 = 0;
          BOOL v28 = v234;
          uint64_t v27 = v229;
          uint64_t v36 = v230;
          goto LABEL_21;
        }
      }
      __break(1u);
LABEL_135:
      swift_once();
      goto LABEL_4;
    }
    __break(1u);
LABEL_138:
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    long long v238 = (void *)v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *((_WORD *)v28 + 11) = 2082;
    type metadata accessor for REMCDDueDateDeltaAlert();
    id v31 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v34 = v33;

    long long v238 = (void *)sub_1000C51B8(v32, v34, (uint64_t *)&v234);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unint64_t v22 = (unint64_t)v232;
    swift_bridgeObjectRelease();
    *((_WORD *)v28 + 16) = 2082;
    unint64_t v35 = (unint64_t)v221;
    swift_bridgeObjectRetain();
    long long v238 = (void *)sub_1000C51B8((uint64_t)v226, v35, (uint64_t *)&v234);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v213, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v28, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v27 = v229;
    uint64_t v36 = v230;
  }
LABEL_21:
  uint64_t v42 = *(void *)(v27 + 96);
  if (v42 > 1)
  {
    if ((unint64_t)(v42 - 2) >= 3 && v42 != 4499 && v42 != 4599)
    {
LABEL_142:
      (*(void (**)(void, uint64_t, uint64_t))(v222 + 16))(v214, v227, v220);
      sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
      sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
      sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
      __break(1u);
      JUMPOUT(0x1006CF9A0);
    }
    goto LABEL_28;
  }
  if (!v42)
  {
LABEL_28:
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v43, v44))
    {
      id v45 = (uint8_t *)swift_slowAlloc();
      NSString v226 = (void *)swift_slowAlloc();
      os_log_t v234 = v226;
      *(_DWORD *)id v45 = 136315138;
      unint64_t v222 = (unint64_t)(v45 + 4);
      id v46 = [(id)type metadata accessor for REMCDDueDateDeltaAlert() cdEntityName];
      uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v49 = v48;

      uint64_t v50 = v231;
      long long v238 = (void *)sub_1000C51B8(v47, v49, (uint64_t *)&v234);
      unint64_t v22 = (unint64_t)v232;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v27 = v229;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Performing fetch during upsert {CDType: %s}", v45, 0xCu);
      swift_arrayDestroy();
      uint64_t v36 = v230;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v50 = v231;
    }
    unint64_t v51 = v219;
    id v52 = sub_100715780((uint64_t)v28, v219);
    swift_bridgeObjectRelease();
    if (v50) {
      goto LABEL_2;
    }
    unint64_t v219 = (unint64_t)v52;
    unint64_t v54 = v218;
    goto LABEL_38;
  }
  if (v42 != 1) {
    goto LABEL_142;
  }
  swift_bridgeObjectRelease();
  unint64_t v55 = Logger.logObject.getter();
  os_log_type_t v56 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v55, v56))
  {
    uint64_t v57 = (uint8_t *)swift_slowAlloc();
    os_log_t v234 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v57 = 136315138;
    NSString v226 = v57 + 4;
    id v58 = [(id)type metadata accessor for REMCDDueDateDeltaAlert() cdEntityName];
    uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v61 = v60;

    uint64_t v50 = v231;
    long long v238 = (void *)sub_1000C51B8(v59, v61, (uint64_t *)&v234);
    unint64_t v22 = (unint64_t)v232;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v36 = v230;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v55, v56, "Skipping fetch during upsert {CDType: %s}", v57, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v54 = v218;
  }
  else
  {

    unint64_t v54 = v218;
    uint64_t v50 = v231;
  }
  unint64_t v51 = v219;
  unint64_t v219 = sub_1002EFD44((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v27 = v229;
LABEL_38:
  unint64_t v62 = v50;
  if (v215)
  {
    swift_bridgeObjectRetain();
    uint64_t v63 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v63 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v63)
  {
LABEL_124:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v64 = 0;
  uint64_t v205 = v27 + 24;
  unint64_t v204 = v51 + 48;
  unint64_t v207 = (void **)(v51 + 56);
  unint64_t v65 = v22 & 0xC000000000000001;
  uint64_t v202 = v22 & 0xFFFFFFFFFFFFFF8;
  unint64_t v201 = (void *)(v22 + 32);
  os_log_t v212 = (void (**)(unsigned char *, uint64_t))(v225 + 8);
  unsigned int v203 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v225 + 56);
  unint64_t v209 = &v239;
  uint64_t v200 = (char *)&v238 + 4;
  unint64_t v213 = (void *)0x80000001007DC190;
  *(void *)&long long v53 = 136446978;
  long long v198 = v53;
  NSString v225 = "ype";
  unint64_t v222 = (unint64_t)"reminderIdentifier";
  *(void *)&long long v53 = 136447490;
  long long v199 = v53;
  *(void *)&long long v53 = 136446210;
  long long v214 = v53;
  uint64_t v221 = "acknowledgedDate";
  uint64_t v197 = (char *)&type metadata for Any + 8;
  uint64_t v208 = v63;
  unint64_t v206 = v22 & 0xC000000000000001;
LABEL_43:
  if (v65)
  {
    id v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    BOOL v67 = __OFADD__(v64, 1);
    unint64_t v68 = v64 + 1;
    if (v67) {
      goto LABEL_139;
    }
  }
  else
  {
    if (v64 >= *(void *)(v202 + 16)) {
      goto LABEL_140;
    }
    id v66 = (id)v201[v64];
    BOOL v67 = __OFADD__(v64, 1);
    unint64_t v68 = v64 + 1;
    if (v67)
    {
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
      goto LABEL_141;
    }
  }
  id v69 = v66;
  id v70 = [v69 remObjectID];
  NSString v226 = sub_100695DC4(v70, (void (*)(void))type metadata accessor for REMCDDueDateDeltaAlert, 0xD000000000000016, v213);
  NSString v231 = v62;
  if (v62)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  unint64_t v211 = v68;
  os_log_type_t v215 = v69;

  id v71 = [(id)v228[2] uuid];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v72 = UUID.uuidString.getter();
  uint64_t v74 = v73;
  unint64_t v75 = *v212;
  (*v212)(v54, v36);
  id v76 = [self localInternalAccountID];
  id v77 = [v76 uuid];

  id v78 = v217;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v79 = UUID.uuidString.getter();
  uint64_t v81 = v80;
  v75(v78, v36);
  if (v72 == v79 && v74 == v81)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v82 = v231;
  }
  else
  {
    char v83 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v82 = v231;
    if ((v83 & 1) == 0)
    {
      uint64_t v85 = v216;
      goto LABEL_59;
    }
  }
  int v84 = 0x7FFFFFFF;
  uint64_t v85 = v216;
  switch(*(unsigned __int16 *)(v229 + 68) >> 14)
  {
    case 2:
      int v84 = *(_DWORD *)(v229 + 64);
      break;
    case 3:
      break;
    default:
      int v84 = 2147483519;
      break;
  }
  sub_100662770(2, v84);
  if (v82)
  {
LABEL_132:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_59:
  uint64_t v86 = sub_10072C8DC(v215, v85);
  if (v82) {
    goto LABEL_132;
  }
  uint64_t v87 = (uint64_t)v86;
  char v88 = sub_10069949C();
  uint64_t v89 = *(void *)(v219 + 16);
  NSString v231 = 0;
  if (v89)
  {
    uint64_t v90 = v226;
    unint64_t v91 = v219;
    unint64_t v92 = sub_10030703C(v90);
    if (v93)
    {
      os_log_type_t v94 = *(id *)(*(void *)(v91 + 56) + 8 * v92);
      uint64_t v95 = v229;
      goto LABEL_94;
    }
  }
  uint64_t v96 = *(void *)(v87 + 16);
  if (v96)
  {
    swift_bridgeObjectRetain();
    uint64_t v97 = 0;
    while (1)
    {
      uint64_t v98 = v87 + v97++;
      unint64_t v99 = 0xE800000000000000;
      unint64_t v100 = 0x44497463656A626FLL;
      switch(*(unsigned char *)(v98 + 32))
      {
        case 1:
          unint64_t v100 = 0xD000000000000012;
          id v101 = &v240;
          goto LABEL_72;
        case 2:
          unint64_t v100 = 0x4465746144657564;
          unint64_t v99 = 0xEC00000061746C65;
          break;
        case 3:
          unint64_t v100 = 0x6E6F697461657263;
          unint64_t v99 = 0xEC00000065746144;
          break;
        case 4:
          unint64_t v99 = v222 | 0x8000000000000000;
          unint64_t v100 = 0xD000000000000010;
          break;
        case 5:
          unint64_t v100 = 0xD00000000000001ALL;
          id v101 = &v237;
LABEL_72:
          unint64_t v99 = *(v101 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v102 = 0xE800000000000000;
      uint64_t v103 = 0x44497463656A626FLL;
      switch(v88)
      {
        case 0:
          goto LABEL_80;
        case 1:
          unint64_t v104 = 0xD000000000000012;
          unint64_t v105 = &v240;
          goto LABEL_83;
        case 2:
          unint64_t v102 = 0xEC00000061746C65;
          if (v100 != 0x4465746144657564) {
            goto LABEL_85;
          }
          goto LABEL_84;
        case 3:
          uint64_t v103 = 0x6E6F697461657263;
          unint64_t v102 = 0xEC00000065746144;
LABEL_80:
          if (v100 != v103) {
            goto LABEL_85;
          }
          goto LABEL_84;
        case 4:
          unint64_t v102 = v222 | 0x8000000000000000;
          if (v100 != 0xD000000000000010) {
            goto LABEL_85;
          }
          goto LABEL_84;
        case 5:
          unint64_t v104 = 0xD00000000000001ALL;
          unint64_t v105 = &v237;
LABEL_83:
          unint64_t v102 = *(v105 - 32) | 0x8000000000000000;
          if (v100 != v104) {
            goto LABEL_85;
          }
LABEL_84:
          if (v99 == v102)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            goto LABEL_90;
          }
LABEL_85:
          char v106 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v106)
          {
            swift_bridgeObjectRelease();
LABEL_90:
            unint64_t v107 = *(void **)(v229 + 88);
            type metadata accessor for REMCDDueDateDeltaAlert();
            ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
            id v109 = [ObjCClassFromMetadata entity];
            id v110 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v109 insertIntoManagedObjectContext:v107];
            id v111 = v223;
            id v112 = v110;
            [v107 assignObject:v112 toPersistentStore:v111];

            uint64_t v95 = v229;
            id v113 = v112;
            id v114 = v226;
            id v115 = [v226 uuid];
            uint64_t v116 = (uint64_t)v224;
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            (*v203)(v116, 0, 1, v230);
            REMCDDueDateDeltaAlert.ingestableObjectIdentifier.setter(v116);
            id v117 = v114;
            swift_retain_n();
            id v118 = v113;
            id v119 = v117;
            os_log_type_t v94 = v118;
            id v120 = Logger.logObject.getter();
            os_log_type_t v121 = static os_log_type_t.default.getter();
            int v122 = v121;
            if (os_log_type_enabled(v120, v121))
            {
              uint64_t v123 = swift_slowAlloc();
              LODWORD(v195) = v122;
              uint64_t v124 = v123;
              uint64_t v125 = (void *)swift_slowAlloc();
              int v196 = (void *)swift_slowAlloc();
              os_log_t v234 = v196;
              *(_DWORD *)uint64_t v124 = v198;
              long long v238 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v234);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v124 + 12) = 2082;
              sub_10010B4E8(v205, (uint64_t)v236);
              sub_10073F754((uint64_t)v236, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
              uint64_t v126 = sub_100696CF4();
              uint64_t v210 = v94;
              unint64_t v128 = v127;
              sub_10073F754((uint64_t)v236, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
              long long v238 = (void *)sub_1000C51B8(v126, v128, (uint64_t *)&v234);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v124 + 22) = 2114;
              long long v238 = v119;
              id v129 = v119;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *uint64_t v125 = v119;

              os_log_type_t v94 = v210;
              *(_WORD *)(v124 + 32) = 2112;
              id v130 = [v94 objectID];
              long long v238 = v130;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              v125[1] = v130;
              uint64_t v95 = v229;

              _os_log_impl((void *)&_mh_execute_header, v120, (os_log_type_t)v195, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v124, 0x2Au);
              sub_100094134((uint64_t *)&unk_10090A040);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_release_n();
            }
            swift_beginAccess();
            sub_1001A6B7C((uint64_t)v94, (uint64_t)v119);
            swift_endAccess();
LABEL_94:

            uint64_t v131 = *(void *)(v87 + 16);
            if (!v131) {
              goto LABEL_106;
            }
            uint64_t v210 = v94;
            swift_bridgeObjectRetain();
            uint64_t v132 = 0;
            while (2)
            {
              if (((*(unsigned int *)(v95 + 64) | ((unint64_t)*(unsigned __int16 *)(v95 + 68) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
              {
                char v133 = *(unsigned char *)(v87 + v132 + 32);
                uint64_t v134 = Logger.logObject.getter();
                os_log_type_t v135 = static os_log_type_t.error.getter();
                if (os_log_type_enabled(v134, v135))
                {
                  uint64_t v136 = swift_slowAlloc();
                  os_log_t v234 = (void *)swift_slowAlloc();
                  *(_DWORD *)uint64_t v136 = v214;
                  LOBYTE(v238) = v133;
                  uint64_t v137 = String.init<A>(describing:)();
                  *(void *)(v136 + 4) = sub_1000C51B8(v137, v138, (uint64_t *)&v234);
                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v134, v135, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v136, 0xCu);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  uint64_t v95 = v229;
                  swift_slowDealloc();
                }
              }
              LODWORD(v65) = *(_DWORD *)(v95 + 64);
              if (*(unsigned __int16 *)(v95 + 68) >> 14 != 2 || (*(_DWORD *)(v95 + 64) & 1) != 0)
              {
                if (v131 != ++v132) {
                  continue;
                }
                swift_bridgeObjectRelease();
                os_log_type_t v94 = v210;
LABEL_106:
                swift_retain_n();
                uint64_t v140 = v226;
                swift_bridgeObjectRetain_n();
                uint64_t v141 = v94;
                uint64_t v142 = v140;
                uint64_t v143 = v141;
                char v144 = Logger.logObject.getter();
                int v145 = static os_log_type_t.default.getter();
                BOOL v146 = os_log_type_enabled(v144, (os_log_type_t)v145);
                NSString v226 = v142;
                if (v146)
                {
                  int v193 = v145;
                  os_log_t v195 = v144;
                  os_log_type_t v147 = v143;
                  uint64_t v148 = swift_slowAlloc();
                  uint64_t v210 = (void *)swift_slowAlloc();
                  unsigned int v194 = (void *)swift_slowAlloc();
                  os_log_t v234 = v194;
                  *(_DWORD *)uint64_t v148 = v199;
                  long long v238 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v234);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  *(_WORD *)(v148 + 12) = 2082;
                  sub_10010B4E8(v205, (uint64_t)v235);
                  sub_10073F754((uint64_t)v235, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
                  uint64_t v149 = sub_100696CF4();
                  unint64_t v151 = v150;
                  sub_10073F754((uint64_t)v235, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
                  long long v238 = (void *)sub_1000C51B8(v149, v151, (uint64_t *)&v234);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v148 + 22) = 2114;
                  long long v238 = v142;
                  id v152 = v142;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  id v153 = v210;
                  *uint64_t v210 = v142;

                  *(_WORD *)(v148 + 32) = 2112;
                  BOOL v154 = [v147 objectID];
                  long long v238 = v154;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  v153[1] = v154;

                  int v196 = v147;
                  *(_WORD *)(v148 + 42) = 2082;
                  int64_t v155 = *(void *)(v87 + 16);
                  uint64_t v36 = v230;
                  if (v155)
                  {
                    long long v238 = _swiftEmptyArrayStorage;
                    sub_1001DE058(0, v155, 0);
                    uint64_t v156 = 0;
                    uint64_t v157 = v238;
                    do
                    {
                      unint64_t v158 = 0xE800000000000000;
                      unint64_t v159 = 0x44497463656A626FLL;
                      switch(*(unsigned char *)(v87 + v156 + 32))
                      {
                        case 1:
                          unint64_t v159 = 0xD000000000000012;
                          uint64_t v160 = &v240;
                          goto LABEL_115;
                        case 2:
                          unint64_t v159 = 0x4465746144657564;
                          unint64_t v158 = 0xEC00000061746C65;
                          break;
                        case 3:
                          unint64_t v159 = 0x6E6F697461657263;
                          unint64_t v158 = 0xEC00000065746144;
                          break;
                        case 4:
                          unint64_t v158 = v222 | 0x8000000000000000;
                          unint64_t v159 = 0xD000000000000010;
                          break;
                        case 5:
                          unint64_t v159 = 0xD00000000000001ALL;
                          uint64_t v160 = &v237;
LABEL_115:
                          unint64_t v158 = *(v160 - 32) | 0x8000000000000000;
                          break;
                        default:
                          break;
                      }
                      long long v238 = v157;
                      unint64_t v162 = v157[2];
                      unint64_t v161 = v157[3];
                      if (v162 >= v161 >> 1)
                      {
                        sub_1001DE058(v161 > 1, v162 + 1, 1);
                        uint64_t v157 = v238;
                      }
                      ++v156;
                      v157[2] = v162 + 1;
                      unint64_t v163 = &v157[2 * v162];
                      v163[4] = v159;
                      v163[5] = v158;
                      uint64_t v36 = v230;
                    }
                    while (v155 != v156);
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v165 = Array.description.getter();
                  unint64_t v167 = v166;
                  swift_bridgeObjectRelease();
                  long long v238 = (void *)sub_1000C51B8(v165, v167, (uint64_t *)&v234);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v148 + 52) = 1024;
                  int v168 = *(unsigned __int8 *)(v229 + 104);
                  swift_release();
                  LODWORD(v238) = v168;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_release();
                  os_log_t v169 = v195;
                  _os_log_impl((void *)&_mh_execute_header, v195, (os_log_type_t)v193, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v148, 0x3Au);
                  sub_100094134((uint64_t *)&unk_10090A040);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();

                  unint64_t v164 = v231;
                  uint64_t v143 = v196;
                }
                else
                {

                  swift_release_n();
                  swift_bridgeObjectRelease_n();
                  unint64_t v164 = v231;
                  uint64_t v36 = v230;
                }
                unint64_t v170 = v215;
                sub_100748294(v215, v143, v87);
                if (!v164)
                {
                  unint64_t v62 = 0;
                  id v171 = [v143 changedValues];
                  unint64_t v172 = v170;
                  uint64_t v173 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

                  uint64_t v174 = v207;
                  swift_beginAccess();
                  unint64_t v175 = v226;
                  swift_bridgeObjectRetain();
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  long long v238 = *v174;
                  *uint64_t v174 = (void *)0x8000000000000000;
                  sub_1002C4FAC(v173, v175, isUniquelyReferenced_nonNull_native);
                  *uint64_t v174 = v238;

                  swift_bridgeObjectRelease();
                  swift_endAccess();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  unint64_t v64 = v211;
                  unint64_t v54 = v218;
                  unint64_t v65 = v206;
                  if (v211 == v208) {
                    goto LABEL_124;
                  }
                  goto LABEL_43;
                }

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

LABEL_2:
                swift_bridgeObjectRelease();
                return;
              }
              break;
            }
            uint64_t v177 = v220;
            if (qword_100907AE0 == -1)
            {
LABEL_126:
              sub_10008E2DC(v177, (uint64_t)qword_100920A70);
              os_log_t v178 = Logger.logObject.getter();
              os_log_type_t v179 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v178, v179))
              {
                uint64_t v180 = swift_slowAlloc();
                os_log_t v234 = (void *)swift_slowAlloc();
                *(_DWORD *)uint64_t v180 = 136446466;
                uint64_t v181 = sub_100662CC0(1);
                long long v238 = (void *)sub_1000C51B8(v181, v182, (uint64_t *)&v234);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                *(_WORD *)(v180 + 12) = 2082;
                uint64_t v183 = sub_100662CC0(v65);
                long long v238 = (void *)sub_1000C51B8(v183, v184, (uint64_t *)&v234);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v178, v179, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v180, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }

              id v185 = v210;
              int v186 = self;
              NSString v187 = String._bridgeToObjectiveC()();
              sub_100662CC0(1);
              NSString v188 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              sub_100662CC0(v65);
              NSString v189 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              [v186 unauthorizedErrorWithMissingEntitlement:v187 requestedAccessLevel:v188 currentAccesslevel:v189];

              swift_willThrow();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease_n();
              return;
            }
LABEL_141:
            swift_once();
            uint64_t v177 = v220;
            goto LABEL_126;
          }
          if (v96 == v97)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            goto LABEL_129;
          }
          break;
        default:
          goto LABEL_130;
      }
    }
  }
LABEL_130:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_129:
  int v190 = self;
  id v191 = v226;
  [v190 noSuchObjectErrorWithObjectID:v226];
  swift_willThrow();
}

void sub_1006CF9F8(void *a1, void *a2, void *a3, uint64_t (*a4)(id *), void (*a5)(void), void (*a6)(void), uint64_t a7, void *a8, uint64_t (*a9)(void *), uint64_t (*a10)(id, uint64_t), void *a11, void (*a12)(void), uint64_t (*a13)(void), void (*a14)(id, char *, uint64_t), unint64_t a15, uint64_t a16)
{
  v293 = a8;
  v300 = a6;
  uint64_t v301 = a7;
  v294 = a5;
  uint64_t v297 = a4;
  uint64_t v296 = a2;
  v295 = a1;
  uint64_t v18 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v18 - 8);
  uint64_t v288 = (uint64_t)&v245 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v287 = (char *)&v245 - v21;
  uint64_t v290 = type metadata accessor for UUID();
  uint64_t v289 = *(char **)(v290 - 8);
  __chkstk_darwin(v290);
  int v23 = (char *)&v245 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  unint64_t v26 = (char *)&v245 - v25;
  uint64_t v27 = type metadata accessor for Logger();
  char v286 = *(char **)(v27 - 8);
  __chkstk_darwin(v27);
  os_log_t v29 = (char *)&v245 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = (void *)a3[3];
  uint64_t v291 = a3[2];
  id v31 = (void *)a3[4];
  uint64_t v299 = v16;
  uint64_t v32 = *(void *)(v16 + 72);
  v302[3] = v32;
  p_Class isa = v296;
  v302[2] = &p_isa;
  swift_bridgeObjectRetain();
  unint64_t v33 = (unint64_t)v295;
  swift_bridgeObjectRetain();
  unint64_t v34 = v33;
  unint64_t v35 = v298;
  uint64_t v36 = (uint64_t (*)(id *))sub_100692158(v297, v302, v34);
  v298 = v35;
  if (v35)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    return;
  }
  id v285 = v30;
  *(void *)&long long v278 = v29;
  uint64_t v281 = (uint64_t)a3;
  uint64_t v297 = v36;
  uint64_t v279 = v32;
  v295 = v31;
  uint64_t v283 = v26;
  uint64_t v280 = v23;
  uint64_t v284 = v27;
  if (qword_1009073A0 != -1) {
    goto LABEL_157;
  }
LABEL_4:
  uint64_t v37 = sub_10008E2DC(v284, (uint64_t)qword_100916070);
  unint64_t v38 = (unint64_t)v297;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v292 = v37;
  p_p_Class isa = Logger.logObject.getter();
  int v40 = static os_log_type_t.info.getter();
  BOOL v41 = os_log_type_enabled(p_p_isa, (os_log_type_t)v40);
  unint64_t v42 = v38 >> 62;
  uint64_t v43 = v293;
  int64_t v44 = (int64_t)v294;
  uint64_t v45 = (uint64_t)v298;
  unint64_t v282 = v38 >> 62;
  if (v41)
  {
    uint64_t v45 = swift_slowAlloc();
    id v46 = swift_slowAlloc();
    p_Class isa = &v46->isa;
    *(_DWORD *)uint64_t v45 = 136446978;
    v306 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&p_isa);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v45 + 12) = 2048;
    LODWORD(v277) = v40;
    uint64_t v276 = v46;
    if (!v42)
    {
      uint64_t v47 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_7;
    }
    goto LABEL_166;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v42)
    {
      swift_bridgeObjectRetain();
      uint64_t v53 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v53 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v53) {
      break;
    }
    int64_t v44 = v38;
    unint64_t v38 = v45;
    p_Class isa = _swiftEmptyArrayStorage;
    p_p_Class isa = &p_isa;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v53 & 0x8000000000000000) == 0)
    {
      uint64_t v54 = 0;
      while (v53 != v54)
      {
        if ((v44 & 0xC000000000000001) != 0) {
          id v55 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v55 = *(id *)(v44 + 8 * v54 + 32);
        }
        id v56 = v55;
        id v57 = [v56 remObjectID];
        sub_100695DC4(v57, v300, v301, v43);
        if (v38)
        {

          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        unint64_t v38 = 0;
        ++v54;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v53 == v54)
        {
          id v58 = p_isa;
          uint64_t v45 = 0;
          unint64_t v38 = v44;
          int64_t v44 = (int64_t)v294;
          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_157:
      swift_once();
      goto LABEL_4;
    }
LABEL_165:
    __break(1u);
LABEL_166:
    swift_bridgeObjectRetain();
    uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    v306 = v47;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 22) = 2082;
    ((void (*)(void))v44)(0);
    id v48 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v51 = v50;

    int64_t v44 = (int64_t)v294;
    v306 = sub_1000C51B8(v49, v51, (uint64_t *)&p_isa);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 32) = 2082;
    unint64_t v52 = (unint64_t)v285;
    swift_bridgeObjectRetain();
    v306 = sub_1000C51B8(v291, v52, (uint64_t *)&p_isa);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, p_p_isa, (os_log_type_t)v277, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v45, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v45 = (uint64_t)v298;
    uint64_t v43 = v293;
    unint64_t v42 = v282;
  }
  id v58 = _swiftEmptyArrayStorage;
LABEL_22:
  uint64_t v59 = *(void *)(v299 + 96);
  if (v59 > 1)
  {
    if ((unint64_t)(v59 - 2) >= 3 && v59 != 4499 && v59 != 4599)
    {
LABEL_170:
      (*((void (**)(void, uint64_t, uint64_t))v286 + 2))(v278, v292, v284);
      sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
      sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
      sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
      __break(1u);
      JUMPOUT(0x1006D2238);
    }
    goto LABEL_29;
  }
  if (!v59)
  {
LABEL_29:
    v298 = (uint64_t (*)(void))v58;
    uint64_t v291 = a16;
    unint64_t v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v60, v61))
    {
      unint64_t v62 = (uint8_t *)swift_slowAlloc();
      p_Class isa = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v62 = 136315138;
      char v286 = (char *)(v62 + 4);
      id v63 = [(id)((uint64_t (*)(void))v44)(0) cdEntityName];
      uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v66 = v65;

      v306 = sub_1000C51B8(v64, v66, (uint64_t *)&p_isa);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "Performing fetch during upsert {CDType: %s}", v62, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    BOOL v67 = v283;
    uint64_t v68 = v281;
    uint64_t v69 = ((uint64_t (*)(uint64_t (*)(void), uint64_t))v291)(v298, v281);
    swift_bridgeObjectRelease();
    if (v45) {
      goto LABEL_2;
    }
    uint64_t v281 = v69;
    uint64_t v72 = v300;
    uint64_t v71 = v301;
    unint64_t v38 = (unint64_t)v297;
    goto LABEL_37;
  }
  if (v59 != 1) {
    goto LABEL_170;
  }
  uint64_t v73 = a9;
  swift_bridgeObjectRelease();
  uint64_t v74 = Logger.logObject.getter();
  os_log_type_t v75 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v74, v75))
  {
    id v76 = (uint8_t *)swift_slowAlloc();
    id v77 = (void *)swift_slowAlloc();
    v298 = (uint64_t (*)(void))a9;
    p_Class isa = v77;
    *(_DWORD *)id v76 = 136315138;
    uint64_t v291 = (uint64_t)(v76 + 4);
    id v78 = [(id)((uint64_t (*)(void))v44)(0) cdEntityName];
    uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v81 = v80;

    unint64_t v38 = (unint64_t)v297;
    v306 = sub_1000C51B8(v79, v81, (uint64_t *)&p_isa);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v74, v75, "Skipping fetch during upsert {CDType: %s}", v76, 0xCu);
    swift_arrayDestroy();
    uint64_t v73 = (uint64_t (*)(void *))v298;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v72 = v300;
  uint64_t v71 = v301;
  BOOL v67 = v283;
  uint64_t v68 = v281;
  uint64_t v281 = v73(_swiftEmptyArrayStorage);
LABEL_37:
  if (v282)
  {
    swift_bridgeObjectRetain();
    uint64_t v82 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v82 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v82) {
    goto LABEL_145;
  }
  unint64_t v83 = 0;
  uint64_t v263 = v299 + 24;
  uint64_t v262 = v68 + 48;
  unint64_t v282 = a15;
  uint64_t v267 = a14;
  long long v266 = (NSObject **)(v68 + 56);
  unint64_t v84 = v38 & 0xC000000000000001;
  uint64_t v259 = v38 & 0xFFFFFFFFFFFFFF8;
  uint64_t v258 = (char *)(v38 + 32);
  unint64_t v268 = a13;
  uint64_t v271 = a12;
  uint64_t v274 = (void **)(v289 + 8);
  uint64_t v261 = v289 + 56;
  uint64_t v260 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v289 + 48);
  uint64_t v270 = a11;
  unint64_t v272 = a10;
  uint64_t v273 = &v307;
  os_log_t v257 = (char *)&v306 + 4;
  *(void *)&long long v70 = 136446978;
  long long v255 = v70;
  *(void *)&long long v70 = 136446210;
  long long v278 = v70;
  *(void *)&long long v70 = 136447490;
  long long v256 = v70;
  *(void *)&long long v70 = 136447234;
  long long v253 = v70;
  uint64_t v291 = (uint64_t)"daIsNotificationsCollection";
  os_log_t v254 = (char *)&type metadata for Any + 8;
  uint64_t v265 = v82;
  unint64_t v264 = v38 & 0xC000000000000001;
  while (1)
  {
    if (v84)
    {
      unint64_t v85 = v83;
      id v86 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v83 >= *(void *)(v259 + 16)) {
        goto LABEL_168;
      }
      unint64_t v85 = v83;
      id v86 = *(id *)&v258[8 * v83];
    }
    unint64_t v269 = v85 + 1;
    if (__OFADD__(v85, 1))
    {
      __break(1u);
LABEL_168:
      __break(1u);
      goto LABEL_169;
    }
    id v87 = v86;
    id v88 = [v87 remObjectID];
    uint64_t v289 = (char *)sub_100695DC4(v88, v72, v71, v293);
    if (v45)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    v298 = 0;

    id v285 = v87;
    id v89 = [v87 accountID];
    id v90 = [v89 uuid];

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v91 = UUID.uuidString.getter();
    unint64_t v92 = v67;
    uint64_t v93 = v91;
    uint64_t v95 = v94;
    uint64_t v96 = (char *)*v274;
    uint64_t v97 = v290;
    ((void (*)(char *, uint64_t))*v274)(v92, v290);
    id v98 = [self localInternalAccountID];
    id v99 = [v98 uuid];

    unint64_t v100 = v280;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v101 = UUID.uuidString.getter();
    uint64_t v103 = v102;
    char v286 = v96;
    ((void (*)(char *, uint64_t))v96)(v100, v97);
    if (v93 != v101) {
      goto LABEL_51;
    }
    if (v95 == v103)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_51:
      char v104 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v104 & 1) == 0)
      {
        uint64_t v106 = v279;
        uint64_t v45 = (uint64_t)v298;
        goto LABEL_57;
      }
    }
    int v105 = 0x7FFFFFFF;
    uint64_t v106 = v279;
    uint64_t v107 = (uint64_t)v298;
    switch(*(unsigned __int16 *)(v299 + 68) >> 14)
    {
      case 2:
        int v105 = *(_DWORD *)(v299 + 64);
        break;
      case 3:
        break;
      default:
        int v105 = 2147483519;
        break;
    }
    sub_100662770(2, v105);
    uint64_t v45 = v107;
    if (v107)
    {
LABEL_152:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
LABEL_57:
    uint64_t v108 = v272(v285, v106);
    if (v45) {
      goto LABEL_152;
    }
    uint64_t v109 = v108;
    v110._rawValue = v270;
    char v111 = sub_100699E00(v110, v271);
    uint64_t v112 = *(void *)(v281 + 16);
    v298 = 0;
    if (v112)
    {
      id v113 = v289;
      uint64_t v114 = v281;
      uint64_t v115 = v268();
      if (v116)
      {
        id v117 = (char *)*(id *)(*(void *)(v114 + 56) + 8 * v115);
        goto LABEL_87;
      }
    }
    uint64_t v118 = *(void *)(v109 + 16);
    if (!v118) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v119 = 0;
    while (2)
    {
      uint64_t v120 = v109 + v119++;
      unint64_t v121 = 0xE800000000000000;
      int v122 = (uint64_t (*)(id *))v38;
      unint64_t v123 = 0x44497463656A626FLL;
      switch(*(unsigned char *)(v120 + 32))
      {
        case 1:
          unint64_t v121 = v291 | 0x8000000000000000;
          unint64_t v123 = 0xD000000000000017;
          break;
        case 2:
          unint64_t v123 = 0x6E6F697461657263;
          unint64_t v121 = 0xEC00000065746144;
          break;
        case 3:
          unint64_t v123 = 0x4E79616C70736964;
          unint64_t v121 = 0xEB00000000656D61;
          break;
        default:
          break;
      }
      unint64_t v124 = 0xE800000000000000;
      uint64_t v125 = v295;
      uint64_t v126 = 0x44497463656A626FLL;
      switch(v111)
      {
        case 0:
          goto LABEL_72;
        case 1:
          unint64_t v124 = v291 | 0x8000000000000000;
          if (v123 != 0xD000000000000017) {
            goto LABEL_74;
          }
          goto LABEL_73;
        case 2:
          uint64_t v126 = 0x6E6F697461657263;
          unint64_t v124 = 0xEC00000065746144;
LABEL_72:
          if (v123 == v126) {
            goto LABEL_73;
          }
          goto LABEL_74;
        case 3:
          unint64_t v124 = 0xEB00000000656D61;
          if (v123 != 0x4E79616C70736964) {
            goto LABEL_74;
          }
LABEL_73:
          if (v121 == v124)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            goto LABEL_81;
          }
LABEL_74:
          char v127 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v127 & 1) == 0)
          {
            unint64_t v38 = (unint64_t)v122;
            if (v118 == v119)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              goto LABEL_151;
            }
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t v125 = v295;
LABEL_81:
          unint64_t v128 = *(void **)(v299 + 88);
          v294(0);
          ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
          id v130 = [ObjCClassFromMetadata entity];
          id v131 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v130 insertIntoManagedObjectContext:v128];
          id v132 = v125;
          id v133 = v131;
          [v128 assignObject:v133 toPersistentStore:v132];

          id v134 = v133;
          id v135 = [v289 uuid];
          uint64_t v136 = (uint64_t)v287;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v137 = v290;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))v261)(v136, 0, 1, v290);
          uint64_t v138 = v288;
          sub_1001248EC(v136, v288);
          Class isa = 0;
          if ((*v260)(v138, 1, v137) != 1)
          {
            Class isa = UUID._bridgeToObjectiveC()().super.isa;
            ((void (*)(uint64_t, uint64_t))v286)(v138, v137);
          }
          [v134 setIdentifier:isa v245];

          sub_1001260DC(v136);
          uint64_t v140 = v289;
          swift_retain_n();
          id v141 = v134;
          uint64_t v142 = v140;
          id v117 = (char *)v141;
          uint64_t v143 = Logger.logObject.getter();
          os_log_type_t v144 = static os_log_type_t.default.getter();
          int v145 = v144;
          unint64_t v38 = (unint64_t)v122;
          if (os_log_type_enabled(v143, v144))
          {
            uint64_t v146 = swift_slowAlloc();
            LODWORD(v276) = v145;
            uint64_t v147 = v146;
            uint64_t v275 = swift_slowAlloc();
            id v277 = (char *)swift_slowAlloc();
            p_Class isa = v277;
            *(_DWORD *)uint64_t v147 = v255;
            v306 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&p_isa);
            char v286 = v117;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v147 + 12) = 2082;
            sub_10010B4E8(v263, (uint64_t)v305);
            sub_10073F754((uint64_t)v305, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v148 = sub_100696CF4();
            unint64_t v150 = v149;
            sub_10073F754((uint64_t)v305, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            v306 = sub_1000C51B8(v148, v150, (uint64_t *)&p_isa);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v147 + 22) = 2114;
            v306 = v142;
            unint64_t v151 = v142;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            uint64_t v152 = v275;
            *(void *)uint64_t v275 = v142;

            *(_WORD *)(v147 + 32) = 2112;
            id v153 = [v286 objectID];
            v306 = v153;
            id v117 = v286;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(void *)(v152 + 8) = v153;

            _os_log_impl((void *)&_mh_execute_header, v143, (os_log_type_t)v276, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v147, 0x2Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_release_n();
          }
          uint64_t v45 = (uint64_t)v298;
          swift_beginAccess();
          sub_1001A6B7C((uint64_t)v117, (uint64_t)v142);
          swift_endAccess();
LABEL_87:

          BOOL v154 = *(char **)(v109 + 16);
          if (!v154) {
            goto LABEL_99;
          }
          char v286 = v117;
          swift_bridgeObjectRetain();
          uint64_t v155 = 0;
          while (2)
          {
            if (((*(unsigned int *)(v299 + 64) | ((unint64_t)*(unsigned __int16 *)(v299 + 68) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
            {
              char v156 = *(unsigned char *)(v109 + v155 + 32);
              uint64_t v157 = Logger.logObject.getter();
              os_log_type_t v158 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v157, v158))
              {
                uint64_t v159 = swift_slowAlloc();
                p_Class isa = (void *)swift_slowAlloc();
                *(_DWORD *)uint64_t v159 = v278;
                LOBYTE(v306) = v156;
                uint64_t v160 = String.init<A>(describing:)();
                *(void *)(v159 + 4) = sub_1000C51B8(v160, v161, (uint64_t *)&p_isa);
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v157, v158, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v159, 0xCu);
                swift_arrayDestroy();
                unint64_t v38 = (unint64_t)v297;
                swift_slowDealloc();
                swift_slowDealloc();
              }
            }
            LODWORD(v67) = *(_DWORD *)(v299 + 64);
            if (*(unsigned __int16 *)(v299 + 68) >> 14 == 2 && (*(_DWORD *)(v299 + 64) & 1) == 0)
            {
              uint64_t v230 = v284;
              if (qword_100907AE0 == -1)
              {
LABEL_148:
                sub_10008E2DC(v230, (uint64_t)qword_100920A70);
                NSString v231 = Logger.logObject.getter();
                os_log_type_t v232 = static os_log_type_t.error.getter();
                if (os_log_type_enabled(v231, v232))
                {
                  uint64_t v233 = swift_slowAlloc();
                  p_Class isa = (void *)swift_slowAlloc();
                  *(_DWORD *)uint64_t v233 = 136446466;
                  uint64_t v234 = sub_100662CC0(1);
                  v306 = sub_1000C51B8(v234, v235, (uint64_t *)&p_isa);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v233 + 12) = 2082;
                  uint64_t v236 = sub_100662CC0((__int16)v67);
                  v306 = sub_1000C51B8(v236, v237, (uint64_t *)&p_isa);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v231, v232, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v233, 0x16u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }

                id v238 = v286;
                uint64_t v239 = self;
                NSString v240 = String._bridgeToObjectiveC()();
                sub_100662CC0(1);
                NSString v241 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                sub_100662CC0((__int16)v67);
                NSString v242 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                [v239 unauthorizedErrorWithMissingEntitlement:v240 requestedAccessLevel:v241 currentAccesslevel:v242];

                swift_willThrow();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease_n();
                return;
              }
LABEL_169:
              swift_once();
              uint64_t v230 = v284;
              goto LABEL_148;
            }
            if (v154 != (char *)++v155) {
              continue;
            }
            break;
          }
          swift_bridgeObjectRelease();
          uint64_t v45 = (uint64_t)v298;
          id v117 = v286;
LABEL_99:
          swift_retain_n();
          unint64_t v163 = v289;
          swift_bridgeObjectRetain_n();
          unint64_t v164 = v117;
          uint64_t v165 = v163;
          unint64_t v166 = v164;
          unint64_t v167 = Logger.logObject.getter();
          int v168 = static os_log_type_t.default.getter();
          BOOL v169 = os_log_type_enabled(v167, (os_log_type_t)v168);
          uint64_t v289 = v165;
          if (v169)
          {
            uint64_t v276 = v167;
            int v252 = v168;
            id v277 = v154;
            uint64_t v170 = swift_slowAlloc();
            char v286 = v166;
            uint64_t v171 = v170;
            unint64_t v172 = (void *)swift_slowAlloc();
            uint64_t v275 = swift_slowAlloc();
            p_Class isa = (void *)v275;
            *(_DWORD *)uint64_t v171 = v256;
            v306 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&p_isa);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v171 + 12) = 2082;
            sub_10010B4E8(v263, (uint64_t)v304);
            sub_10073F754((uint64_t)v304, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v173 = sub_100696CF4();
            unint64_t v175 = v174;
            sub_10073F754((uint64_t)v304, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            v306 = sub_1000C51B8(v173, v175, (uint64_t *)&p_isa);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v171 + 22) = 2114;
            v306 = v165;
            unint64_t v176 = v165;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *unint64_t v172 = v165;

            *(_WORD *)(v171 + 32) = 2112;
            id v177 = v286;
            os_log_t v178 = [v286 objectID];
            v306 = v178;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            unint64_t v251 = v172;
            v172[1] = v178;

            *(_WORD *)(v171 + 42) = 2082;
            int64_t v179 = *(void *)(v109 + 16);
            if (v179)
            {
              v306 = _swiftEmptyArrayStorage;
              sub_1001DE058(0, v179, 0);
              uint64_t v180 = 0;
              uint64_t v181 = v306;
              do
              {
                unint64_t v182 = 0xE800000000000000;
                unint64_t v183 = 0x44497463656A626FLL;
                switch(*(unsigned char *)(v109 + v180 + 32))
                {
                  case 1:
                    unint64_t v182 = v291 | 0x8000000000000000;
                    unint64_t v183 = 0xD000000000000017;
                    break;
                  case 2:
                    unint64_t v183 = 0x6E6F697461657263;
                    unint64_t v182 = 0xEC00000065746144;
                    break;
                  case 3:
                    unint64_t v183 = 0x4E79616C70736964;
                    unint64_t v182 = 0xEB00000000656D61;
                    break;
                  default:
                    break;
                }
                v306 = v181;
                unint64_t v185 = (unint64_t)v181[2].isa;
                unint64_t v184 = (unint64_t)v181[3].isa;
                if (v185 >= v184 >> 1)
                {
                  sub_1001DE058(v184 > 1, v185 + 1, 1);
                  uint64_t v181 = v306;
                }
                ++v180;
                v181[2].Class isa = (Class)(v185 + 1);
                int v186 = &v181[2 * v185];
                v186[4].Class isa = (Class)v183;
                v186[5].Class isa = (Class)v182;
                unint64_t v38 = (unint64_t)v297;
              }
              while (v179 != v180);
            }
            swift_bridgeObjectRelease();
            NSString v187 = v276;
            uint64_t v188 = Array.description.getter();
            unint64_t v190 = v189;
            swift_bridgeObjectRelease();
            v306 = sub_1000C51B8(v188, v190, (uint64_t *)&p_isa);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(_WORD *)(v171 + 52) = 1024;
            int v191 = *(unsigned __int8 *)(v299 + 104);
            swift_release();
            LODWORD(v306) = v191;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, v187, (os_log_type_t)v252, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v171, 0x3Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v45 = (uint64_t)v298;
            BOOL v154 = v277;
            unint64_t v166 = v286;
          }
          else
          {

            swift_release_n();
            swift_bridgeObjectRelease_n();
          }
          id v192 = v285;
          v267(v285, v166, v109);
          if (v45)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            goto LABEL_2;
          }
          id v193 = [v166 changedValues];
          unsigned int v194 = (char *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          os_log_t v195 = v266;
          swift_beginAccess();
          int v196 = v289;
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v306 = *v195;
          *os_log_t v195 = 0x8000000000000000;
          uint64_t v289 = v194;
          sub_1002C4FAC((uint64_t)v194, v196, isUniquelyReferenced_nonNull_native);
          *os_log_t v195 = v306;

          swift_bridgeObjectRelease();
          swift_endAccess();
          int v198 = *(unsigned __int8 *)(v299 + 104);
          long long v199 = v166;
          swift_bridgeObjectRelease();
          if (v154 && (v198 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            [v199 updateChangeCount];

            goto LABEL_144;
          }
          uint64_t v200 = v196;
          swift_retain_n();
          unint64_t v201 = v200;
          uint64_t v202 = v289;
          swift_bridgeObjectRetain();
          unsigned int v203 = Logger.logObject.getter();
          int v252 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v203, (os_log_type_t)v252))
          {

            swift_bridgeObjectRelease_n();
            swift_release_n();
            goto LABEL_144;
          }
          os_log_t v249 = v203;
          unint64_t v250 = v199;
          uint64_t v204 = 0;
          uint64_t v45 = swift_slowAlloc();
          unint64_t v251 = (void *)swift_slowAlloc();
          unint64_t v247 = (void *)swift_slowAlloc();
          p_Class isa = v247;
          *(_DWORD *)uint64_t v45 = v253;
          v306 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&p_isa);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v45 + 12) = 1024;
          swift_release();
          LODWORD(v306) = v198;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release();
          *(_WORD *)(v45 + 18) = 1024;
          LODWORD(v306) = 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v45 + 24) = 2114;
          v306 = v201;
          uint64_t v205 = v201;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          void *v251 = v201;

          uint64_t v246 = v205;
          uint64_t v248 = (uint8_t *)v45;
          *(_WORD *)(v45 + 34) = 2082;
          int64_t v44 = *((void *)v202 + 2);
          if (!v44) {
            goto LABEL_143;
          }
          v306 = _swiftEmptyArrayStorage;
          swift_bridgeObjectRetain();
          sub_1001DE058(0, v44, 0);
          p_p_Class isa = v306;
          uint64_t v206 = sub_10072617C((uint64_t)v289);
          unint64_t v207 = v289;
          int v209 = v208;
          uint64_t v210 = 0;
          unint64_t v211 = v289 + 64;
          char v212 = v289[32];
          uint64_t v275 = v208;
          uint64_t v245 = v289 + 96;
          v298 = 0;
          uint64_t v276 = v44;
          id v277 = v289 + 64;
          while (2)
          {
            if (v206 < 0 || v206 >= 1 << v212)
            {
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
              goto LABEL_165;
            }
            unint64_t v214 = (unint64_t)v206 >> 6;
            if ((*(void *)&v211[8 * ((unint64_t)v206 >> 6)] & (1 << v206)) == 0) {
              goto LABEL_160;
            }
            if (*((_DWORD *)v207 + 9) != v209) {
              goto LABEL_161;
            }
            char v286 = v210;
            uint64_t v215 = *((void *)v207 + 6) + 16 * v206;
            uint64_t v45 = *(void *)(v215 + 8);
            uint64_t v289 = *(char **)v215;
            v306 = p_p_isa;
            unint64_t v217 = (unint64_t)p_p_isa[2].isa;
            unint64_t v216 = (unint64_t)p_p_isa[3].isa;
            int64_t v44 = v217 + 1;
            unint64_t v38 = (unint64_t)v207;
            swift_bridgeObjectRetain();
            if (v217 >= v216 >> 1)
            {
              sub_1001DE058(v216 > 1, v217 + 1, 1);
              p_p_Class isa = v306;
            }
            p_p_isa[2].Class isa = (Class)v44;
            unint64_t v218 = &p_p_isa[2 * v217];
            v218[4].Class isa = (Class)v289;
            v218[5].Class isa = (Class)v45;
            char v212 = *(unsigned char *)(v38 + 32);
            unint64_t v213 = 1 << v212;
            if (v206 >= 1 << v212) {
              goto LABEL_162;
            }
            unint64_t v211 = v277;
            uint64_t v219 = *(void *)&v277[8 * v214];
            if ((v219 & (1 << v206)) == 0) {
              goto LABEL_163;
            }
            unint64_t v207 = (char *)v38;
            if (*(_DWORD *)(v38 + 36) != v209) {
              goto LABEL_164;
            }
            unint64_t v220 = v219 & (-2 << (v206 & 0x3F));
            if (v220)
            {
              unint64_t v213 = __clz(__rbit64(v220)) | v206 & 0xFFFFFFFFFFFFFFC0;
              unint64_t v38 = (unint64_t)v297;
              uint64_t v204 = (uint64_t)v298;
              int64_t v44 = (int64_t)v276;
              goto LABEL_120;
            }
            unint64_t v221 = v214 + 1;
            unint64_t v222 = (v213 + 63) >> 6;
            unint64_t v38 = (unint64_t)v297;
            uint64_t v204 = (uint64_t)v298;
            int64_t v44 = (int64_t)v276;
            if (v214 + 1 < v222)
            {
              unint64_t v223 = *(void *)&v277[8 * v221];
              if (v223) {
                goto LABEL_133;
              }
              unint64_t v221 = v214 + 2;
              if (v214 + 2 < v222)
              {
                unint64_t v223 = *(void *)&v277[8 * v221];
                if (v223) {
                  goto LABEL_133;
                }
                unint64_t v221 = v214 + 3;
                if (v214 + 3 >= v222) {
                  goto LABEL_120;
                }
                unint64_t v223 = *(void *)&v277[8 * v221];
                if (v223)
                {
LABEL_133:
                  unint64_t v213 = __clz(__rbit64(v223)) + (v221 << 6);
                  goto LABEL_120;
                }
                while (v222 - 4 != v214)
                {
                  unint64_t v223 = *(void *)&v245[8 * v214++];
                  if (v223)
                  {
                    unint64_t v221 = v214 + 3;
                    goto LABEL_133;
                  }
                }
              }
            }
LABEL_120:
            uint64_t v210 = v286 + 1;
            int v209 = v275;
            uint64_t v206 = v213;
            if (v286 + 1 != (char *)v44) {
              continue;
            }
            break;
          }
          swift_bridgeObjectRelease();
LABEL_143:
          uint64_t v224 = v248;
          uint64_t v225 = Array.description.getter();
          unint64_t v227 = v226;
          swift_bridgeObjectRelease();
          v306 = sub_1000C51B8(v225, v227, (uint64_t *)&p_isa);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          os_log_t v228 = v249;
          _os_log_impl((void *)&_mh_execute_header, v249, (os_log_type_t)v252, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v224, 0x2Cu);
          sub_100094134((uint64_t *)&unk_10090A040);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v229 = v250;
          uint64_t v45 = v204;
LABEL_144:
          unint64_t v83 = v269;
          uint64_t v72 = v300;
          uint64_t v71 = v301;
          BOOL v67 = v283;
          unint64_t v84 = v264;
          if (v269 == v265)
          {
LABEL_145:
            swift_bridgeObjectRelease();
            goto LABEL_2;
          }
          break;
        default:
          goto LABEL_153;
      }
      break;
    }
  }
LABEL_153:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_151:
  os_log_t v243 = self;
  long long v244 = v289;
  [v243 noSuchObjectErrorWithObjectID:v289];
  swift_willThrow();
}

void sub_1006D2278(uint64_t a1, void *a2, int64_t *a3)
{
  uint64_t v273 = a1;
  uint64_t v6 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v6 - 8);
  uint64_t v267 = (uint64_t)&v228 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  long long v266 = (char *)&v228 - v9;
  uint64_t v271 = type metadata accessor for UUID();
  unint64_t v269 = *(void **)(v271 - 8);
  __chkstk_darwin(v271);
  uint64_t v11 = (char *)&v228 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v228 - v13;
  uint64_t v15 = type metadata accessor for Logger();
  unint64_t v264 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v228 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (void *)a3[3];
  uint64_t v270 = (int64_t *)a3[2];
  unint64_t v272 = (void *)a3[4];
  uint64_t v274 = v3;
  uint64_t v19 = *(void *)(v3 + 72);
  unint64_t v268 = a2;
  v276[3] = v19;
  id v277 = a2;
  v276[2] = &v277;
  swift_bridgeObjectRetain();
  unint64_t v20 = v273;
  swift_bridgeObjectRetain();
  unint64_t v21 = v20;
  uint64_t v22 = v275;
  int v23 = sub_100692158((uint64_t (*)(id *))sub_1007426F0, v276, v21);
  if (v22) {
    goto LABEL_2;
  }
  uint64_t v263 = v18;
  uint64_t v265 = 0;
  unint64_t v256 = (unint64_t)v17;
  *(void *)&long long v260 = a3;
  uint64_t v275 = v23;
  uint64_t v258 = v19;
  uint64_t v261 = (int64_t *)v14;
  uint64_t v259 = v11;
  uint64_t v262 = v15;
  if (qword_1009073A0 != -1) {
    goto LABEL_159;
  }
  while (1)
  {
    uint64_t v24 = sub_10008E2DC(v262, (uint64_t)qword_100916070);
    unint64_t v25 = (unint64_t)v275;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v273 = v24;
    unint64_t v26 = Logger.logObject.getter();
    int v27 = static os_log_type_t.info.getter();
    BOOL v28 = os_log_type_enabled(v26, (os_log_type_t)v27);
    unint64_t v29 = v25 >> 62;
    uint64_t v30 = v274;
    if (v28)
    {
      uint64_t v30 = swift_slowAlloc();
      id v31 = swift_slowAlloc();
      id v277 = (int64_t *)v31;
      *(_DWORD *)uint64_t v30 = 136446978;
      uint64_t v280 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v277);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v30 + 12) = 2048;
      LODWORD(v255) = v27;
      os_log_t v254 = v31;
      uint64_t v32 = (uint64_t)&v280;
      if (v29) {
        goto LABEL_168;
      }
      unint64_t v33 = v265;
      uint64_t v34 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_7:
      swift_bridgeObjectRelease();
      uint64_t v280 = v34;
      a3 = &v281;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 22) = 2082;
      type metadata accessor for REMCDListSection();
      id v35 = [(id)swift_getObjCClassFromMetadata() description];
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v38 = v37;

      uint64_t v280 = sub_1000C51B8(v36, v38, (uint64_t *)&v277);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      unint64_t v25 = (unint64_t)v275;
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 32) = 2082;
      unint64_t v39 = (unint64_t)v263;
      swift_bridgeObjectRetain();
      uint64_t v280 = sub_1000C51B8((uint64_t)v270, v39, (uint64_t *)&v277);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v255, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v30, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v30 = v274;
    }
    else
    {
      unint64_t v33 = v265;

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    if (v29)
    {
      swift_bridgeObjectRetain();
      uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v40 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    os_log_t v257 = (void *)v29;
    if (!v40) {
      break;
    }
    id v277 = _swiftEmptyArrayStorage;
    unint64_t v26 = &v277;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v40 < 0) {
      goto LABEL_167;
    }
    uint64_t v41 = 0;
    unint64_t v42 = v25 & 0xC000000000000001;
    while (v40 != v41)
    {
      if (v42) {
        id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v43 = *(id *)(v25 + 8 * v41 + 32);
      }
      id v44 = v43;
      unsigned __int16 v45 = (unsigned __int16)sub_100695DC4([v44 remObjectID], (void (*)(void))type metadata accessor for REMCDListSection, 0xD000000000000010, (void *)0x80000001007DC070);
      if (v33)
      {

        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      LOWORD(a3) = v45;
      ++v41;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      unint64_t v25 = (unint64_t)v275;
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v40 == v41)
      {
        id v46 = v277;
        uint64_t v30 = v274;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_159:
    swift_once();
  }
  id v46 = _swiftEmptyArrayStorage;
LABEL_22:
  uint64_t v47 = *(void *)(v30 + 96);
  if (v47 <= 1)
  {
    if (v47)
    {
      if (v47 != 1) {
        goto LABEL_172;
      }
      swift_bridgeObjectRelease();
      unint64_t v60 = Logger.logObject.getter();
      os_log_type_t v61 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v60, v61))
      {
        unint64_t v62 = (uint8_t *)swift_slowAlloc();
        id v63 = (int64_t *)swift_slowAlloc();
        LOWORD(a3) = (_WORD)v63;
        id v277 = v63;
        *(_DWORD *)unint64_t v62 = 136315138;
        uint64_t v270 = (int64_t *)(v62 + 4);
        id v64 = [(id)type metadata accessor for REMCDListSection() cdEntityName];
        uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v67 = v66;

        uint64_t v280 = sub_1000C51B8(v65, v67, (uint64_t *)&v277);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        unint64_t v25 = (unint64_t)v275;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v60, v61, "Skipping fetch during upsert {CDType: %s}", v62, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      uint64_t v55 = v271;
      uint64_t v59 = v261;
      unint64_t v256 = sub_1002EFD68((uint64_t)_swiftEmptyArrayStorage);
      id v57 = v33;
      uint64_t v30 = v274;
      goto LABEL_37;
    }
  }
  else if ((unint64_t)(v47 - 2) >= 3 && v47 != 4499 && v47 != 4599)
  {
LABEL_172:
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v264 + 16))(v256, v273, v262);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
    __break(1u);
    JUMPOUT(0x1006D4A38);
  }
  uint64_t v270 = v46;
  id v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v48, v49))
  {
    unint64_t v50 = (uint8_t *)swift_slowAlloc();
    id v277 = (int64_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v50 = 136315138;
    uint64_t v265 = v50 + 4;
    id v51 = [(id)type metadata accessor for REMCDListSection() cdEntityName];
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v54 = v53;

    uint64_t v280 = sub_1000C51B8(v52, v54, (uint64_t *)&v277);
    unint64_t v25 = (unint64_t)v275;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v30 = v274;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "Performing fetch during upsert {CDType: %s}", v50, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v55 = v271;
  a3 = v261;
  id v56 = sub_1007164B8((uint64_t)v270, v260);
  id v57 = v33;
  swift_bridgeObjectRelease();
  if (v33) {
    goto LABEL_2;
  }
  unint64_t v256 = (unint64_t)v56;
  uint64_t v59 = a3;
LABEL_37:
  uint64_t v68 = v57;
  if (v257)
  {
    swift_bridgeObjectRetain();
    uint64_t v69 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v69 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v69) {
    goto LABEL_149;
  }
  unint64_t v70 = 0;
  uint64_t v246 = v30 + 24;
  uint64_t v245 = v260 + 48;
  os_log_t v249 = (NSObject **)(v260 + 56);
  unint64_t v71 = v25 & 0xC000000000000001;
  uint64_t v242 = v25 & 0xFFFFFFFFFFFFFF8;
  NSString v241 = (void *)(v25 + 32);
  long long v253 = (void (**)(int64_t *, uint64_t))(v269 + 1);
  long long v244 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v269 + 7);
  os_log_t v243 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v269 + 6);
  unint64_t v251 = &v281;
  NSString v240 = (char *)&v280 + 4;
  int v252 = (void *)0x80000001007DC070;
  *(void *)&long long v58 = 136446978;
  long long v238 = v58;
  *(void *)&long long v58 = 136446210;
  long long v260 = v58;
  *(void *)&long long v58 = 136447490;
  long long v239 = v58;
  *(void *)&long long v58 = 136447234;
  long long v236 = v58;
  unint64_t v264 = (unint64_t)"daIsNotificationsCollection";
  unint64_t v237 = (char *)&type metadata for Any + 8;
  unint64_t v247 = v25 & 0xC000000000000001;
  uint64_t v248 = v69;
  while (1)
  {
    if (v71)
    {
      id v72 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v70 >= *(void *)(v242 + 16)) {
        goto LABEL_170;
      }
      id v72 = (id)v241[v70];
    }
    unint64_t v250 = v70 + 1;
    if (__OFADD__(v70, 1))
    {
      __break(1u);
LABEL_170:
      __break(1u);
LABEL_171:
      swift_once();
      uint64_t v213 = v262;
LABEL_151:
      sub_10008E2DC(v213, (uint64_t)qword_100920A70);
      unint64_t v214 = Logger.logObject.getter();
      os_log_type_t v215 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v214, v215))
      {
        uint64_t v216 = swift_slowAlloc();
        id v277 = (int64_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v216 = 136446466;
        uint64_t v217 = sub_100662CC0(1);
        uint64_t v280 = sub_1000C51B8(v217, v218, (uint64_t *)&v277);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v216 + 12) = 2082;
        uint64_t v219 = sub_100662CC0((__int16)a3);
        uint64_t v280 = sub_1000C51B8(v219, v220, (uint64_t *)&v277);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v214, v215, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v216, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      id v221 = v257;
      unint64_t v222 = self;
      NSString v223 = String._bridgeToObjectiveC()();
      sub_100662CC0(1);
      NSString v224 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_100662CC0((__int16)a3);
      NSString v225 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v222 unauthorizedErrorWithMissingEntitlement:v223 requestedAccessLevel:v224 currentAccesslevel:v225];

      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      return;
    }
    id v73 = v72;
    id v74 = [v73 remObjectID];
    uint64_t v270 = (int64_t *)sub_100695DC4(v74, (void (*)(void))type metadata accessor for REMCDListSection, 0xD000000000000010, v252);
    if (v68)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }

    uint64_t v263 = v73;
    id v75 = [v73 accountID];
    id v76 = [v75 uuid];

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v77 = UUID.uuidString.getter();
    id v78 = v59;
    uint64_t v79 = v77;
    uint64_t v81 = v80;
    uint64_t v82 = v259;
    unint64_t v83 = *v253;
    (*v253)(v78, v55);
    id v84 = [self localInternalAccountID];
    id v85 = [v84 uuid];

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v86 = UUID.uuidString.getter();
    uint64_t v88 = v87;
    unint64_t v269 = v83;
    v83((int64_t *)v82, v55);
    if (v79 != v86) {
      goto LABEL_51;
    }
    if (v81 == v88)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_51:
      char v89 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v89 & 1) == 0)
      {
        uint64_t v92 = v258;
        uint64_t v91 = v263;
        goto LABEL_57;
      }
    }
    int v90 = 0x7FFFFFFF;
    uint64_t v91 = v263;
    switch(*(unsigned __int16 *)(v274 + 68) >> 14)
    {
      case 2:
        int v90 = *(_DWORD *)(v274 + 64);
        break;
      case 3:
        break;
      default:
        int v90 = 2147483519;
        break;
    }
    sub_100662770(2, v90);
    uint64_t v92 = v258;
LABEL_57:
    uint64_t v93 = sub_10072FFE4(v91, v92, (uint64_t)&type metadata for REMListSectionStorageCDIngestor.ValueKey, (uint64_t (*)(void))sub_1006935C4, &qword_100921A58);
    uint64_t v265 = 0;
    uint64_t v94 = sub_10069985C();
    if (*(void *)(v256 + 16))
    {
      uint64_t v95 = v270;
      unint64_t v96 = v256;
      unint64_t v97 = sub_10030703C(v95);
      if (v98)
      {
        id v99 = *(id *)(*(void *)(v96 + 56) + 8 * v97);
        uint64_t v100 = v274;
        goto LABEL_89;
      }

      uint64_t v91 = v263;
    }
    uint64_t v101 = v93[2];
    if (!v101) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v102 = 0;
    while (2)
    {
      uint64_t v103 = (char *)v93 + v102++;
      uint64_t v91 = (void *)0xE800000000000000;
      unint64_t v104 = 0x44497463656A626FLL;
      switch(v103[32])
      {
        case 1:
          uint64_t v91 = (void *)(v264 | 0x8000000000000000);
          unint64_t v104 = 0xD000000000000017;
          break;
        case 2:
          unint64_t v104 = 0x6E6F697461657263;
          uint64_t v91 = (void *)0xEC00000065746144;
          break;
        case 3:
          unint64_t v104 = 0x4E79616C70736964;
          uint64_t v91 = (void *)0xEB00000000656D61;
          break;
        case 4:
          unint64_t v104 = 0x6163696E6F6E6163;
          uint64_t v91 = (void *)0xED0000656D614E6CLL;
          break;
        default:
          break;
      }
      unint64_t v105 = 0xE800000000000000;
      uint64_t v106 = v272;
      uint64_t v107 = 0x44497463656A626FLL;
      switch((char)v94)
      {
        case 0:
          goto LABEL_74;
        case 1:
          unint64_t v105 = v264 | 0x8000000000000000;
          if (v104 != 0xD000000000000017) {
            goto LABEL_76;
          }
          goto LABEL_75;
        case 2:
          uint64_t v107 = 0x6E6F697461657263;
          unint64_t v105 = 0xEC00000065746144;
LABEL_74:
          if (v104 == v107) {
            goto LABEL_75;
          }
          goto LABEL_76;
        case 3:
          unint64_t v105 = 0xEB00000000656D61;
          if (v104 != 0x4E79616C70736964) {
            goto LABEL_76;
          }
          goto LABEL_75;
        case 4:
          unint64_t v105 = 0xED0000656D614E6CLL;
          if (v104 != 0x6163696E6F6E6163) {
            goto LABEL_76;
          }
LABEL_75:
          if (v91 == (void *)v105)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            uint64_t v109 = v274;
            goto LABEL_83;
          }
LABEL_76:
          char v108 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v108 & 1) == 0)
          {
            if (v101 == v102)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              uint64_t v91 = v263;
              goto LABEL_154;
            }
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t v109 = v274;
          uint64_t v106 = v272;
LABEL_83:
          Swift::OpaquePointer v110 = *(void **)(v109 + 88);
          type metadata accessor for REMCDListSection();
          ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
          id v112 = [ObjCClassFromMetadata entity];
          id v113 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v112 insertIntoManagedObjectContext:v110];
          id v114 = v106;
          id v115 = v113;
          [v110 assignObject:v115 toPersistentStore:v114];

          id v116 = v115;
          id v117 = [v270 uuid];
          uint64_t v118 = (uint64_t)v266;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v119 = v271;
          (*v244)(v118, 0, 1, v271);
          uint64_t v120 = v267;
          sub_1001248EC(v118, v267);
          Class isa = 0;
          if ((*v243)(v120, 1, v119) != 1)
          {
            Class isa = UUID._bridgeToObjectiveC()().super.isa;
            ((void (*)(uint64_t, uint64_t))v269)(v120, v119);
          }
          [v116 setIdentifier:isa v228];

          sub_1001260DC(v118);
          int v122 = v270;
          uint64_t v100 = v274;
          swift_retain_n();
          id v123 = v116;
          unint64_t v124 = v122;
          id v99 = v123;
          uint64_t v125 = Logger.logObject.getter();
          os_log_type_t v126 = static os_log_type_t.default.getter();
          int v127 = v126;
          if (os_log_type_enabled(v125, v126))
          {
            uint64_t v128 = swift_slowAlloc();
            LODWORD(v255) = v127;
            uint64_t v129 = v128;
            uint64_t v130 = swift_slowAlloc();
            os_log_t v257 = v99;
            id v131 = (void *)v130;
            unint64_t v269 = (void *)swift_slowAlloc();
            id v277 = v269;
            *(_DWORD *)uint64_t v129 = v238;
            uint64_t v280 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v277);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v129 + 12) = 2082;
            sub_10010B4E8(v246, (uint64_t)v279);
            sub_10073F754((uint64_t)v279, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v132 = sub_100696CF4();
            unint64_t v134 = v133;
            sub_10073F754((uint64_t)v279, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            uint64_t v280 = sub_1000C51B8(v132, v134, (uint64_t *)&v277);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v129 + 22) = 2114;
            uint64_t v280 = v124;
            id v135 = v124;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *id v131 = v124;

            *(_WORD *)(v129 + 32) = 2112;
            uint64_t v136 = [v257 objectID];
            uint64_t v280 = v136;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            v131[1] = v136;
            uint64_t v100 = v274;

            _os_log_impl((void *)&_mh_execute_header, v125, (os_log_type_t)v255, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v129, 0x2Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            id v99 = v257;
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_release_n();
          }
          swift_beginAccess();
          sub_1001A6B7C((uint64_t)v99, (uint64_t)v124);
          swift_endAccess();
LABEL_89:

          unint64_t v269 = (void *)v93[2];
          if (!v269) {
            goto LABEL_101;
          }
          os_log_t v257 = v99;
          swift_bridgeObjectRetain();
          uint64_t v137 = 0;
          uint64_t v138 = v269;
          while (2)
          {
            if (((*(unsigned int *)(v100 + 64) | ((unint64_t)*(unsigned __int16 *)(v100 + 68) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
            {
              char v139 = *((unsigned char *)v93 + v137 + 32);
              uint64_t v140 = Logger.logObject.getter();
              os_log_type_t v141 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v140, v141))
              {
                uint64_t v142 = swift_slowAlloc();
                id v277 = (int64_t *)swift_slowAlloc();
                *(_DWORD *)uint64_t v142 = v260;
                LOBYTE(v280) = v139;
                uint64_t v143 = String.init<A>(describing:)();
                *(void *)(v142 + 4) = sub_1000C51B8(v143, v144, (uint64_t *)&v277);
                uint64_t v138 = v269;
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v140, v141, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v142, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                uint64_t v100 = v274;
                swift_slowDealloc();
              }
            }
            LODWORD(a3) = *(_DWORD *)(v100 + 64);
            if (*(unsigned __int16 *)(v100 + 68) >> 14 == 2 && (*(_DWORD *)(v100 + 64) & 1) == 0)
            {
              uint64_t v213 = v262;
              if (qword_100907AE0 == -1) {
                goto LABEL_151;
              }
              goto LABEL_171;
            }
            if (v138 != (void *)++v137) {
              continue;
            }
            break;
          }
          swift_bridgeObjectRelease();
          id v99 = v257;
LABEL_101:
          swift_retain_n();
          uint64_t v146 = v270;
          swift_bridgeObjectRetain_n();
          uint64_t v147 = v99;
          uint64_t v148 = v146;
          unint64_t v149 = v147;
          unint64_t v150 = Logger.logObject.getter();
          int v151 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v150, (os_log_type_t)v151))
          {
            LODWORD(v234) = v151;
            os_log_t v254 = v150;
            uint64_t v152 = swift_slowAlloc();
            uint64_t v270 = v149;
            uint64_t v153 = v152;
            os_log_t v257 = (void *)swift_slowAlloc();
            unint64_t v235 = (int64_t *)swift_slowAlloc();
            id v277 = v235;
            *(_DWORD *)uint64_t v153 = v239;
            uint64_t v280 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v277);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v153 + 12) = 2082;
            sub_10010B4E8(v246, (uint64_t)v278);
            sub_10073F754((uint64_t)v278, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v154 = sub_100696CF4();
            long long v255 = v148;
            unint64_t v156 = v155;
            sub_10073F754((uint64_t)v278, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            uint64_t v280 = sub_1000C51B8(v154, v156, (uint64_t *)&v277);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            uint64_t v157 = v255;
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v153 + 22) = 2114;
            uint64_t v280 = v157;
            os_log_type_t v158 = v157;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            uint64_t v159 = v257;
            void *v257 = v157;

            *(_WORD *)(v153 + 32) = 2112;
            uint64_t v160 = v270;
            unint64_t v161 = [v270 objectID];
            uint64_t v280 = v161;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            v159[1] = v161;

            *(_WORD *)(v153 + 42) = 2082;
            int64_t v162 = v93[2];
            if (v162)
            {
              uint64_t v280 = _swiftEmptyArrayStorage;
              sub_1001DE058(0, v162, 0);
              uint64_t v163 = 0;
              unint64_t v164 = v280;
              do
              {
                unint64_t v165 = 0xE800000000000000;
                unint64_t v166 = 0x44497463656A626FLL;
                switch(*((unsigned char *)v93 + v163 + 32))
                {
                  case 1:
                    unint64_t v165 = v264 | 0x8000000000000000;
                    unint64_t v166 = 0xD000000000000017;
                    break;
                  case 2:
                    unint64_t v166 = 0x6E6F697461657263;
                    unint64_t v165 = 0xEC00000065746144;
                    break;
                  case 3:
                    unint64_t v166 = 0x4E79616C70736964;
                    unint64_t v165 = 0xEB00000000656D61;
                    break;
                  case 4:
                    unint64_t v166 = 0x6163696E6F6E6163;
                    unint64_t v165 = 0xED0000656D614E6CLL;
                    break;
                  default:
                    break;
                }
                uint64_t v280 = v164;
                unint64_t v168 = (unint64_t)v164[2].isa;
                unint64_t v167 = (unint64_t)v164[3].isa;
                if (v168 >= v167 >> 1)
                {
                  sub_1001DE058(v167 > 1, v168 + 1, 1);
                  unint64_t v164 = v280;
                }
                ++v163;
                v164[2].Class isa = (Class)(v168 + 1);
                BOOL v169 = &v164[2 * v168];
                v169[4].Class isa = (Class)v166;
                v169[5].Class isa = (Class)v165;
              }
              while (v162 != v163);
              swift_bridgeObjectRelease();
              uint64_t v148 = (int64_t *)v255;
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v148 = (int64_t *)v157;
            }
            uint64_t v170 = Array.description.getter();
            unint64_t v172 = v171;
            swift_bridgeObjectRelease();
            uint64_t v280 = sub_1000C51B8(v170, v172, (uint64_t *)&v277);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(_WORD *)(v153 + 52) = 1024;
            uint64_t v100 = v274;
            int v173 = *(unsigned __int8 *)(v274 + 104);
            swift_release();
            LODWORD(v280) = v173;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release();
            os_log_t v174 = v254;
            _os_log_impl((void *)&_mh_execute_header, v254, (os_log_type_t)v234, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v153, 0x3Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            unint64_t v149 = v270;
          }
          else
          {

            swift_release_n();
            swift_bridgeObjectRelease_n();
          }
          unint64_t v175 = v265;
          sub_10035A528(v263, v149, (uint64_t)v93);
          if (v175)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

LABEL_2:
            swift_bridgeObjectRelease();
            return;
          }
          uint64_t v265 = 0;
          id v176 = [v149 changedValues];
          id v177 = (int64_t *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          os_log_t v178 = v148;
          int64_t v179 = v249;
          swift_beginAccess();
          uint64_t v180 = v178;
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v280 = *v179;
          *int64_t v179 = 0x8000000000000000;
          sub_1002C4FAC((uint64_t)v177, v180, isUniquelyReferenced_nonNull_native);
          *int64_t v179 = v280;

          swift_bridgeObjectRelease();
          swift_endAccess();
          int v182 = *(unsigned __int8 *)(v100 + 104);
          a3 = v149;
          swift_bridgeObjectRelease();
          if (v269 && (v182 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            [a3 updateChangeCount];

            goto LABEL_148;
          }
          unint64_t v183 = v180;
          swift_retain_n();
          unint64_t v184 = v183;
          uint64_t v270 = v177;
          swift_bridgeObjectRetain();
          unint64_t v185 = Logger.logObject.getter();
          int v186 = static os_log_type_t.default.getter();
          BOOL v187 = os_log_type_enabled(v185, (os_log_type_t)v186);
          uint64_t v30 = (uint64_t)v275;
          if (!v187)
          {

            swift_bridgeObjectRelease_n();
            swift_release_n();
            goto LABEL_148;
          }
          int v230 = v186;
          os_log_t v233 = v185;
          uint64_t v234 = a3;
          unint64_t v29 = swift_slowAlloc();
          unint64_t v235 = (int64_t *)swift_slowAlloc();
          NSString v231 = (int64_t *)swift_slowAlloc();
          id v277 = v231;
          *(_DWORD *)unint64_t v29 = v236;
          uint64_t v280 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v277);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v29 + 12) = 1024;
          swift_release();
          LODWORD(v280) = v182;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release();
          *(_WORD *)(v29 + 18) = 1024;
          LODWORD(v280) = 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v29 + 24) = 2114;
          uint64_t v280 = v184;
          uint64_t v188 = v184;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *unint64_t v235 = (int64_t)v184;

          uint64_t v229 = v188;
          os_log_type_t v232 = (uint8_t *)v29;
          *(_WORD *)(v29 + 34) = 2082;
          unint64_t v189 = v270;
          int64_t v190 = v270[2];
          if (!v190) {
            goto LABEL_147;
          }
          uint64_t v280 = _swiftEmptyArrayStorage;
          swift_bridgeObjectRetain();
          sub_1001DE058(0, v190, 0);
          unint64_t v26 = v280;
          uint64_t v191 = sub_10072617C((uint64_t)v189);
          unsigned int v193 = v192;
          unsigned int v194 = 0;
          os_log_t v195 = v189 + 8;
          uint64_t v32 = *((unsigned __int8 *)v189 + 32);
          os_log_t v254 = (os_log_t)v192;
          os_log_t v228 = (char *)(v189 + 12);
          long long v255 = v190;
          os_log_t v257 = v189 + 8;
          while (2)
          {
            if (v191 < 0 || (uint64_t v32 = 1 << v32, v191 >= v32))
            {
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
LABEL_167:
              __break(1u);
LABEL_168:
              unint64_t v33 = *(uint8_t **)(v32 - 256);
              swift_bridgeObjectRetain();
              uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              goto LABEL_7;
            }
            unint64_t v29 = (unint64_t)v191 >> 6;
            uint64_t v32 = v195[(unint64_t)v191 >> 6];
            if ((v32 & (1 << v191)) == 0) {
              goto LABEL_162;
            }
            uint64_t v32 = *((unsigned int *)v189 + 9);
            if (v32 != v193) {
              goto LABEL_163;
            }
            unint64_t v269 = v194;
            uint64_t v198 = v189[6] + 16 * v191;
            long long v199 = *(objc_class **)(v198 + 8);
            uint64_t v270 = *(int64_t **)v198;
            uint64_t v280 = v26;
            unint64_t v201 = (unint64_t)v26[2].isa;
            unint64_t v200 = (unint64_t)v26[3].isa;
            uint64_t v30 = v201 + 1;
            swift_bridgeObjectRetain();
            if (v201 >= v200 >> 1)
            {
              sub_1001DE058(v200 > 1, v201 + 1, 1);
              unint64_t v26 = v280;
            }
            v26[2].Class isa = (Class)v30;
            uint64_t v202 = &v26[2 * v201];
            v202[4].Class isa = (Class)v270;
            v202[5].Class isa = v199;
            uint64_t v32 = *((unsigned __int8 *)v189 + 32);
            unint64_t v196 = 1 << v32;
            if (v191 >= 1 << v32) {
              goto LABEL_164;
            }
            os_log_t v195 = v257;
            uint64_t v203 = v257[v29];
            if ((v203 & (1 << v191)) == 0) {
              goto LABEL_165;
            }
            if (*((_DWORD *)v189 + 9) != v193) {
              goto LABEL_166;
            }
            unint64_t v204 = v203 & (-2 << (v191 & 0x3F));
            if (v204)
            {
              unint64_t v196 = __clz(__rbit64(v204)) | v191 & 0xFFFFFFFFFFFFFFC0;
              uint64_t v30 = (uint64_t)v275;
              uint64_t v197 = v255;
              goto LABEL_124;
            }
            uint64_t v205 = (char *)(v29 + 1);
            unint64_t v206 = (v196 + 63) >> 6;
            uint64_t v30 = (uint64_t)v275;
            uint64_t v197 = v255;
            if (v29 + 1 < v206)
            {
              unint64_t v207 = v257[(void)v205];
              if (v207) {
                goto LABEL_137;
              }
              uint64_t v205 = (char *)(v29 + 2);
              if (v29 + 2 < v206)
              {
                unint64_t v207 = v257[(void)v205];
                if (v207) {
                  goto LABEL_137;
                }
                uint64_t v205 = (char *)(v29 + 3);
                if (v29 + 3 >= v206) {
                  goto LABEL_124;
                }
                unint64_t v207 = v257[(void)v205];
                if (v207)
                {
LABEL_137:
                  unint64_t v196 = __clz(__rbit64(v207)) + ((void)v205 << 6);
                  goto LABEL_124;
                }
                while (v206 - 4 != v29)
                {
                  unint64_t v207 = *(void *)&v228[8 * v29++];
                  if (v207)
                  {
                    uint64_t v205 = (char *)(v29 + 3);
                    goto LABEL_137;
                  }
                }
              }
            }
LABEL_124:
            unsigned int v194 = (void *)((char *)v269 + 1);
            unsigned int v193 = v254;
            uint64_t v191 = v196;
            if (((char *)v269 + 1) != v197) {
              continue;
            }
            break;
          }
          swift_bridgeObjectRelease();
LABEL_147:
          unsigned int v208 = v232;
          uint64_t v209 = Array.description.getter();
          a3 = v210;
          swift_bridgeObjectRelease();
          uint64_t v280 = sub_1000C51B8(v209, (unint64_t)a3, (uint64_t *)&v277);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          os_log_t v211 = v233;
          _os_log_impl((void *)&_mh_execute_header, v233, (os_log_type_t)v230, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v208, 0x2Cu);
          sub_100094134((uint64_t *)&unk_10090A040);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          char v212 = v234;
LABEL_148:
          uint64_t v55 = v271;
          unint64_t v70 = v250;
          uint64_t v68 = v265;
          uint64_t v59 = v261;
          unint64_t v71 = v247;
          if (v250 == v248)
          {
LABEL_149:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return;
          }
          break;
        default:
          goto LABEL_155;
      }
      break;
    }
  }
LABEL_155:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_154:
  unint64_t v226 = self;
  unint64_t v227 = v270;
  [v226 noSuchObjectErrorWithObjectID:v270];
  swift_willThrow();
}

void sub_1006D4A84(uint64_t a1, void *a2, void *a3)
{
  uint64_t v284 = a2;
  uint64_t v283 = a1;
  uint64_t v5 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v5 - 8);
  uint64_t v278 = (uint64_t)&v235 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v277 = (char *)&v235 - v8;
  uint64_t v280 = type metadata accessor for UUID();
  uint64_t v279 = *(void **)(v280 - 8);
  __chkstk_darwin(v280);
  uint64_t v10 = (char *)&v235 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v235 - v12;
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v276 = *(void (***)(void, void, void))(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = ((char *)&v235 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = a3[3];
  unint64_t v282 = (char *)a3[2];
  uint64_t v18 = (void *)a3[4];
  uint64_t v285 = v3;
  uint64_t v19 = *(void *)(v3 + 72);
  v287[3] = v19;
  uint64_t v288 = v284;
  v287[2] = &v288;
  swift_bridgeObjectRetain();
  unint64_t v20 = v283;
  swift_bridgeObjectRetain();
  unint64_t v21 = v20;
  id v22 = v286;
  int v23 = (char **)sub_100692158((uint64_t (*)(id *))sub_10074270C, v287, v21);
  id v286 = v22;
  if (v22) {
    goto LABEL_2;
  }
  *(void *)&long long v272 = v17;
  os_log_t v267 = v16;
  uint64_t v270 = a3;
  unint64_t v24 = (unint64_t)v23;
  uint64_t v269 = v19;
  id v268 = v18;
  uint64_t v271 = v13;
  uint64_t v275 = v10;
  uint64_t v273 = v14;
  if (qword_1009073A0 != -1) {
    goto LABEL_191;
  }
  while (1)
  {
    uint64_t v25 = sub_10008E2DC(v273, (uint64_t)qword_100916070);
    unint64_t v26 = v24;
    swift_bridgeObjectRetain_n();
    unint64_t v27 = v272;
    swift_bridgeObjectRetain();
    uint64_t v283 = v25;
    BOOL v28 = Logger.logObject.getter();
    int v29 = static os_log_type_t.info.getter();
    BOOL v30 = os_log_type_enabled(v28, (os_log_type_t)v29);
    unint64_t v31 = v24 >> 62;
    unint64_t v281 = v24;
    unint64_t v33 = (char *)v285;
    id v32 = v286;
    unint64_t v274 = v31;
    if (v30)
    {
      unint64_t v33 = (char *)swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      uint64_t v288 = v34;
      *(_DWORD *)unint64_t v33 = 136446978;
      v295 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v288);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *((_WORD *)v33 + 6) = 2048;
      LODWORD(v266) = v29;
      uint64_t v265 = (const char *)v34;
      if (v31) {
        goto LABEL_200;
      }
      uint64_t v35 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_7:
      swift_bridgeObjectRelease();
      v295 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *((_WORD *)v33 + 11) = 2082;
      type metadata accessor for REMCDTemplate();
      id v36 = [(id)swift_getObjCClassFromMetadata() description];
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v39 = v38;

      uint64_t v40 = v37;
      unint64_t v26 = v281;
      v295 = sub_1000C51B8(v40, v39, (uint64_t *)&v288);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *((_WORD *)v33 + 16) = 2082;
      swift_bridgeObjectRetain();
      v295 = sub_1000C51B8((uint64_t)v282, v27, (uint64_t *)&v288);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v266, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v33, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v33 = (char *)v285;
      unint64_t v31 = v274;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    if (v31)
    {
      swift_bridgeObjectRetain();
      uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v41 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v41) {
      break;
    }
    uint64_t v288 = _swiftEmptyArrayStorage;
    BOOL v28 = &v288;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v41 < 0) {
      goto LABEL_199;
    }
    uint64_t v42 = 0;
    unint64_t v24 = (unint64_t)&selRef_intersectsSet_;
    while (v41 != v42)
    {
      if ((v26 & 0xC000000000000001) != 0) {
        id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v43 = *(id *)(v26 + 8 * v42 + 32);
      }
      id v44 = v43;
      sub_100695DC4([v44 remObjectID], (void (*)(void))type metadata accessor for REMCDTemplate, 0x6D655444434D4552, (void *)0xED00006574616C70);
      if (v32)
      {

        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      ++v42;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v41 == v42)
      {
        unsigned __int16 v45 = v288;
        unint64_t v33 = (char *)v285;
        unint64_t v31 = v274;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_191:
    swift_once();
  }
  unsigned __int16 v45 = _swiftEmptyArrayStorage;
LABEL_22:
  uint64_t v46 = *((void *)v33 + 12);
  if (v46 <= 1)
  {
    if (v46)
    {
      if (v46 != 1) {
        goto LABEL_204;
      }
      swift_bridgeObjectRelease();
      unint64_t v60 = Logger.logObject.getter();
      os_log_type_t v61 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v60, v61))
      {
        unint64_t v62 = (uint8_t *)swift_slowAlloc();
        uint64_t v288 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v62 = 136315138;
        uint64_t v59 = v32;
        id v286 = v62 + 4;
        id v63 = [(id)type metadata accessor for REMCDTemplate() cdEntityName];
        uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v66 = v65;

        v295 = sub_1000C51B8(v64, v66, (uint64_t *)&v288);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        unint64_t v31 = v274;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v60, v61, "Skipping fetch during upsert {CDType: %s}", v62, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v59 = v32;
      }

      unint64_t v54 = v275;
      uint64_t v55 = v271;
      uint64_t v56 = (uint64_t)v270;
      unint64_t v57 = sub_1002EFD74((uint64_t)_swiftEmptyArrayStorage);
      unint64_t v33 = (char *)v285;
      goto LABEL_38;
    }
  }
  else if ((unint64_t)(v46 - 2) >= 3 && v46 != 4499 && v46 != 4599)
  {
LABEL_204:
    ((void (**)(os_log_t, uint64_t, uint64_t))v276)[2](v267, v283, v273);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
    __break(1u);
    JUMPOUT(0x1006D7440);
  }
  id v286 = v45;
  uint64_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v47, v48))
  {
    os_log_type_t v49 = (uint8_t *)swift_slowAlloc();
    uint64_t v288 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v49 = 136315138;
    unint64_t v282 = (char *)(v49 + 4);
    id v50 = [(id)type metadata accessor for REMCDTemplate() cdEntityName];
    uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v53 = v52;

    v295 = sub_1000C51B8(v51, v53, (uint64_t *)&v288);
    unint64_t v31 = v274;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unint64_t v33 = (char *)v285;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "Performing fetch during upsert {CDType: %s}", v49, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  unint64_t v54 = v275;
  uint64_t v55 = v271;
  uint64_t v56 = (uint64_t)v270;
  unint64_t v57 = (unint64_t)sub_100716920((uint64_t)v286, (uint64_t)v270);
  swift_bridgeObjectRelease();
  uint64_t v59 = v32;
  if (v32) {
    goto LABEL_2;
  }
LABEL_38:
  if (v31)
  {
    swift_bridgeObjectRetain();
    uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v67 = *(void *)((v281 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v67)
  {
LABEL_181:
    swift_bridgeObjectRelease();
LABEL_2:
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v68 = 0;
  long long v253 = v33 + 24;
  uint64_t v252 = v56 + 48;
  unint64_t v256 = (NSObject **)(v56 + 56);
  unint64_t v69 = v281 & 0xC000000000000001;
  uint64_t v249 = v281 & 0xFFFFFFFFFFFFFF8;
  unint64_t v248 = v281 + 32;
  uint64_t v259 = (void (**)(char *, uint64_t))(v279 + 1);
  unint64_t v251 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v279 + 7);
  unint64_t v250 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v279 + 6);
  uint64_t v258 = &v296;
  unint64_t v247 = (char *)&v295 + 4;
  *(void *)&long long v58 = 136446978;
  long long v245 = v58;
  uint64_t v265 = "daIsNotificationsCollection";
  unint64_t v264 = "DsToCategorizeAsGroceryItems";
  uint64_t v263 = "lendar";
  uint64_t v262 = "remindersICSDisplayOrderChanged";
  uint64_t v261 = "calDAVNotifications";
  *(void *)&long long v58 = 136446210;
  long long v272 = v58;
  *(void *)&long long v58 = 136447490;
  long long v246 = v58;
  *(void *)&long long v58 = 136447234;
  long long v243 = v58;
  long long v260 = "unsavedSectionIDsOrdering";
  long long v244 = (char *)&type metadata for Any + 8;
  unint64_t v254 = v281 & 0xC000000000000001;
  unint64_t v274 = v57;
  uint64_t v255 = v67;
  while (1)
  {
    if (v69)
    {
      id v70 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v68 >= *(void *)(v249 + 16)) {
        goto LABEL_202;
      }
      id v70 = *(id *)(v248 + 8 * v68);
    }
    unint64_t v257 = v68 + 1;
    if (__OFADD__(v68, 1))
    {
      __break(1u);
LABEL_202:
      __break(1u);
      goto LABEL_203;
    }
    id v71 = v70;
    unint64_t v282 = (char *)sub_100695DC4([v71 remObjectID], (void (*)(void))type metadata accessor for REMCDTemplate, 0x6D655444434D4552, (void *)0xED00006574616C70);
    id v286 = v59;
    if (v59)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }

    uint64_t v276 = (void (**)(void, void, void))v71;
    id v72 = [v71 accountID];
    id v73 = [v72 uuid];

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    id v74 = v55;
    uint64_t v75 = UUID.uuidString.getter();
    uint64_t v77 = v76;
    id v78 = *v259;
    uint64_t v79 = v280;
    (*v259)(v74, v280);
    id v80 = [self localInternalAccountID];
    id v81 = [v80 uuid];

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v82 = UUID.uuidString.getter();
    uint64_t v84 = v83;
    id v85 = v78;
    v78(v54, v79);
    if (v75 != v82) {
      goto LABEL_52;
    }
    if (v77 == v84)
    {
      swift_bridgeObjectRelease_n();
      id v32 = v286;
    }
    else
    {
LABEL_52:
      char v86 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v32 = v286;
      if ((v86 & 1) == 0)
      {
        uint64_t v88 = v269;
        goto LABEL_58;
      }
    }
    int v87 = 0x7FFFFFFF;
    switch(*(unsigned __int16 *)(v285 + 68) >> 14)
    {
      case 2:
        int v87 = *(_DWORD *)(v285 + 64);
        break;
      case 3:
        break;
      default:
        int v87 = 2147483519;
        break;
    }
    sub_100662770(2, v87);
    uint64_t v88 = v269;
    if (v32)
    {
LABEL_187:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
LABEL_58:
    char v89 = sub_10072FFE4(v276, v88, (uint64_t)&type metadata for REMTemplateStorageCDIngestor.ValueKey, (uint64_t (*)(void))sub_100692D4C, &qword_100921A98);
    if (v32) {
      goto LABEL_187;
    }
    int v90 = v89;
    char v91 = sub_100698EEC();
    uint64_t v92 = v285;
    if (*(void *)(v274 + 16))
    {
      uint64_t v93 = v282;
      unint64_t v94 = v274;
      unint64_t v95 = sub_10030703C(v93);
      if (v96)
      {
        id v97 = *(id *)(*(void *)(v94 + 56) + 8 * v95);
        goto LABEL_112;
      }
    }
    uint64_t v98 = v90[2];
    if (!v98) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v99 = 0;
    while (2)
    {
      uint64_t v100 = (char *)v90 + v99++;
      unint64_t v101 = 0xE800000000000000;
      unint64_t v102 = 0x44497463656A626FLL;
      switch(v100[32])
      {
        case 1:
          uint64_t v103 = &v293;
          goto LABEL_75;
        case 2:
          unint64_t v102 = 0x72756769666E6F63;
          unint64_t v101 = 0xED00006E6F697461;
          break;
        case 3:
          unint64_t v101 = 0xE400000000000000;
          unint64_t v102 = 1701667182;
          break;
        case 4:
          unint64_t v101 = 0xE500000000000000;
          unint64_t v102 = 0x726F6C6F63;
          break;
        case 5:
          unint64_t v102 = 0x626D456567646162;
          unint64_t v101 = 0xEB000000006D656CLL;
          break;
        case 6:
          uint64_t v103 = &v292;
LABEL_75:
          unint64_t v101 = *((void *)v103 - 32) | 0x8000000000000000;
          unint64_t v102 = 0xD000000000000017;
          break;
        case 7:
          unint64_t v102 = 0x53676E6974726F73;
          unint64_t v101 = 0xEC000000656C7974;
          break;
        case 8:
          unint64_t v102 = 0xD000000000000015;
          unint64_t v104 = v291;
          goto LABEL_78;
        case 9:
          unint64_t v102 = 0xD00000000000001CLL;
          unint64_t v104 = &v290;
          goto LABEL_78;
        case 10:
          unint64_t v102 = 0xD000000000000019;
          unint64_t v104 = &v289;
          goto LABEL_78;
        case 11:
          unint64_t v102 = 0xD000000000000027;
          unint64_t v104 = (char *)&v288;
LABEL_78:
          unint64_t v101 = *((void *)v104 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v105 = 0xE800000000000000;
      unint64_t v106 = 0x44497463656A626FLL;
      switch(v91)
      {
        case 0:
          goto LABEL_95;
        case 1:
          uint64_t v107 = &v293;
          goto LABEL_94;
        case 2:
          unint64_t v105 = 0xED00006E6F697461;
          if (v102 != 0x72756769666E6F63) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 3:
          unint64_t v105 = 0xE400000000000000;
          if (v102 != 1701667182) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 4:
          unint64_t v105 = 0xE500000000000000;
          if (v102 != 0x726F6C6F63) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 5:
          unint64_t v105 = 0xEB000000006D656CLL;
          if (v102 != 0x626D456567646162) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 6:
          uint64_t v107 = &v292;
LABEL_94:
          unint64_t v105 = *((void *)v107 - 32) | 0x8000000000000000;
          unint64_t v106 = 0xD000000000000017;
LABEL_95:
          if (v102 != v106) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 7:
          unint64_t v105 = 0xEC000000656C7974;
          if (v102 != 0x53676E6974726F73) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 8:
          unint64_t v108 = 0xD000000000000015;
          uint64_t v109 = v291;
          goto LABEL_99;
        case 9:
          unint64_t v108 = 0xD00000000000001CLL;
          uint64_t v109 = &v290;
          goto LABEL_99;
        case 10:
          unint64_t v108 = 0xD000000000000019;
          uint64_t v109 = &v289;
          goto LABEL_99;
        case 11:
          unint64_t v108 = 0xD000000000000027;
          uint64_t v109 = (char *)&v288;
LABEL_99:
          unint64_t v105 = *((void *)v109 - 32) | 0x8000000000000000;
          if (v102 != v108) {
            goto LABEL_101;
          }
LABEL_100:
          if (v101 == v105)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            goto LABEL_106;
          }
LABEL_101:
          char v110 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v110 & 1) == 0)
          {
            if (v98 == v99)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              goto LABEL_186;
            }
            continue;
          }
          swift_bridgeObjectRelease();
LABEL_106:
          char v111 = *(void **)(v285 + 88);
          type metadata accessor for REMCDTemplate();
          ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
          id v113 = [ObjCClassFromMetadata entity];
          id v114 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v113 insertIntoManagedObjectContext:v111];
          id v115 = v268;
          id v116 = v114;
          [v111 assignObject:v116 toPersistentStore:v115];

          id v117 = v116;
          id v118 = [v282 uuid];
          uint64_t v119 = (uint64_t)v277;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v120 = v280;
          (*v251)(v119, 0, 1, v280);
          uint64_t v121 = v278;
          sub_1001248EC(v119, v278);
          Class isa = 0;
          if ((*v250)(v121, 1, v120) != 1)
          {
            Class isa = UUID._bridgeToObjectiveC()().super.isa;
            v85((char *)v121, v120);
          }
          [v117 setIdentifier:isa v235];

          sub_1001260DC(v119);
          id v123 = v282;
          uint64_t v92 = v285;
          swift_retain_n();
          id v124 = v117;
          uint64_t v125 = v123;
          id v97 = v124;
          os_log_type_t v126 = Logger.logObject.getter();
          os_log_type_t v127 = static os_log_type_t.default.getter();
          int v128 = v127;
          if (os_log_type_enabled(v126, v127))
          {
            uint64_t v129 = swift_slowAlloc();
            LODWORD(v270) = v128;
            uint64_t v130 = v129;
            os_log_t v267 = (os_log_t)swift_slowAlloc();
            uint64_t v279 = (void *)swift_slowAlloc();
            uint64_t v288 = v279;
            *(_DWORD *)uint64_t v130 = v245;
            v295 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v288);
            id v286 = v97;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v130 + 12) = 2082;
            sub_10010B4E8((uint64_t)v253, (uint64_t)v294);
            sub_10073F754((uint64_t)v294, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v131 = sub_100696CF4();
            unint64_t v133 = v132;
            sub_10073F754((uint64_t)v294, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            v295 = sub_1000C51B8(v131, v133, (uint64_t *)&v288);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v130 + 22) = 2114;
            v295 = v125;
            unint64_t v134 = v125;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            os_log_t v135 = v267;
            v267->Class isa = (Class)v125;

            *(_WORD *)(v130 + 32) = 2112;
            uint64_t v136 = [v286 objectID];
            v295 = v136;
            id v97 = v286;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            v135[1].Class isa = (Class)v136;
            uint64_t v92 = v285;

            _os_log_impl((void *)&_mh_execute_header, v126, (os_log_type_t)v270, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v130, 0x2Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_release_n();
          }
          swift_beginAccess();
          sub_1001A6B7C((uint64_t)v97, (uint64_t)v125);
          swift_endAccess();
LABEL_112:

          uint64_t v137 = v90[2];
          if (!v137) {
            goto LABEL_124;
          }
          id v286 = v97;
          swift_bridgeObjectRetain();
          uint64_t v138 = 0;
          while (2)
          {
            if (((*(unsigned int *)(v92 + 64) | ((unint64_t)*(unsigned __int16 *)(v92 + 68) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
            {
              char v139 = v90;
              uint64_t v140 = v137;
              os_log_type_t v141 = v139;
              char v142 = *((unsigned char *)v139 + v138 + 32);
              uint64_t v143 = Logger.logObject.getter();
              os_log_type_t v144 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v143, v144))
              {
                uint64_t v145 = swift_slowAlloc();
                uint64_t v288 = (void *)swift_slowAlloc();
                *(_DWORD *)uint64_t v145 = v272;
                LOBYTE(v295) = v142;
                uint64_t v146 = String.init<A>(describing:)();
                *(void *)(v145 + 4) = sub_1000C51B8(v146, v147, (uint64_t *)&v288);
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v143, v144, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v145, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                uint64_t v92 = v285;
                swift_slowDealloc();
              }

              uint64_t v137 = v140;
              int v90 = v141;
            }
            LODWORD(v59) = *(_DWORD *)(v92 + 64);
            if (*(unsigned __int16 *)(v92 + 68) >> 14 == 2 && (*(_DWORD *)(v92 + 64) & 1) == 0)
            {
              uint64_t v220 = v273;
              if (qword_100907AE0 == -1)
              {
LABEL_183:
                sub_10008E2DC(v220, (uint64_t)qword_100920A70);
                id v221 = Logger.logObject.getter();
                os_log_type_t v222 = static os_log_type_t.error.getter();
                if (os_log_type_enabled(v221, v222))
                {
                  uint64_t v223 = swift_slowAlloc();
                  uint64_t v288 = (void *)swift_slowAlloc();
                  *(_DWORD *)uint64_t v223 = 136446466;
                  uint64_t v224 = sub_100662CC0(1);
                  v295 = sub_1000C51B8(v224, v225, (uint64_t *)&v288);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v223 + 12) = 2082;
                  uint64_t v226 = sub_100662CC0((__int16)v59);
                  v295 = sub_1000C51B8(v226, v227, (uint64_t *)&v288);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v221, v222, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v223, 0x16u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }

                id v228 = v286;
                uint64_t v229 = self;
                NSString v230 = String._bridgeToObjectiveC()();
                sub_100662CC0(1);
                NSString v231 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                sub_100662CC0((__int16)v59);
                NSString v232 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                [v229 unauthorizedErrorWithMissingEntitlement:v230 requestedAccessLevel:v231 currentAccesslevel:v232];

                swift_willThrow();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease_n();
                return;
              }
LABEL_203:
              swift_once();
              uint64_t v220 = v273;
              goto LABEL_183;
            }
            if (v137 != ++v138) {
              continue;
            }
            break;
          }
          swift_bridgeObjectRelease();
          id v97 = v286;
LABEL_124:
          swift_retain_n();
          unint64_t v149 = v282;
          swift_bridgeObjectRetain_n();
          id v150 = v97;
          int v151 = v149;
          id v152 = v150;
          uint64_t v153 = Logger.logObject.getter();
          int v154 = static os_log_type_t.default.getter();
          BOOL v155 = os_log_type_enabled(v153, (os_log_type_t)v154);
          unint64_t v282 = (char *)v151;
          if (v155)
          {
            LODWORD(v241) = v154;
            os_log_t v267 = v153;
            uint64_t v270 = (void *)v137;
            uint64_t v156 = swift_slowAlloc();
            uint64_t v279 = (void *)swift_slowAlloc();
            uint64_t v242 = (void *)swift_slowAlloc();
            uint64_t v288 = v242;
            *(_DWORD *)uint64_t v156 = v246;
            v295 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v288);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            id v286 = v152;
            *(_WORD *)(v156 + 12) = 2082;
            sub_10010B4E8((uint64_t)v253, (uint64_t)v291);
            sub_10073F754((uint64_t)v291, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v157 = sub_100696CF4();
            unint64_t v159 = v158;
            sub_10073F754((uint64_t)v291, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            v295 = sub_1000C51B8(v157, v159, (uint64_t *)&v288);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v156 + 22) = 2114;
            v295 = v151;
            uint64_t v160 = v151;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            unint64_t v161 = v279;
            void *v279 = v151;

            *(_WORD *)(v156 + 32) = 2112;
            id v162 = v286;
            uint64_t v163 = [v286 objectID];
            v295 = v163;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            v161[1] = v163;

            uint64_t v266 = v156;
            *(_WORD *)(v156 + 42) = 2082;
            int64_t v164 = v90[2];
            if (v164)
            {
              v295 = _swiftEmptyArrayStorage;
              sub_1001DE058(0, v164, 0);
              uint64_t v165 = 0;
              unint64_t v166 = v295;
              do
              {
                unint64_t v167 = 0xE800000000000000;
                id v168 = v32;
                unint64_t v169 = 0x44497463656A626FLL;
                switch(*((unsigned char *)v90 + v165 + 32))
                {
                  case 1:
                    uint64_t v170 = &v293;
                    goto LABEL_137;
                  case 2:
                    unint64_t v169 = 0x72756769666E6F63;
                    unint64_t v167 = 0xED00006E6F697461;
                    break;
                  case 3:
                    unint64_t v167 = 0xE400000000000000;
                    unint64_t v169 = 1701667182;
                    break;
                  case 4:
                    unint64_t v167 = 0xE500000000000000;
                    unint64_t v169 = 0x726F6C6F63;
                    break;
                  case 5:
                    unint64_t v169 = 0x626D456567646162;
                    unint64_t v167 = 0xEB000000006D656CLL;
                    break;
                  case 6:
                    uint64_t v170 = &v292;
LABEL_137:
                    unint64_t v167 = *((void *)v170 - 32) | 0x8000000000000000;
                    unint64_t v169 = 0xD000000000000017;
                    break;
                  case 7:
                    unint64_t v169 = 0x53676E6974726F73;
                    unint64_t v167 = 0xEC000000656C7974;
                    break;
                  case 8:
                    unint64_t v169 = 0xD000000000000015;
                    unint64_t v171 = v291;
                    goto LABEL_140;
                  case 9:
                    unint64_t v169 = 0xD00000000000001CLL;
                    unint64_t v171 = &v290;
                    goto LABEL_140;
                  case 0xA:
                    unint64_t v169 = 0xD000000000000019;
                    unint64_t v171 = &v289;
                    goto LABEL_140;
                  case 0xB:
                    unint64_t v169 = 0xD000000000000027;
                    unint64_t v171 = (char *)&v288;
LABEL_140:
                    unint64_t v167 = *((void *)v171 - 32) | 0x8000000000000000;
                    break;
                  default:
                    break;
                }
                v295 = v166;
                unint64_t v173 = (unint64_t)v166[2].isa;
                unint64_t v172 = (unint64_t)v166[3].isa;
                if (v173 >= v172 >> 1)
                {
                  sub_1001DE058(v172 > 1, v173 + 1, 1);
                  unint64_t v166 = v295;
                }
                ++v165;
                v166[2].Class isa = (Class)(v173 + 1);
                os_log_t v174 = &v166[2 * v173];
                v174[4].Class isa = (Class)v169;
                v174[5].Class isa = (Class)v167;
                id v32 = v168;
              }
              while (v164 != v165);
            }
            swift_bridgeObjectRelease();
            uint64_t v175 = v266;
            uint64_t v176 = Array.description.getter();
            unint64_t v178 = v177;
            swift_bridgeObjectRelease();
            v295 = sub_1000C51B8(v176, v178, (uint64_t *)&v288);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(_WORD *)(v175 + 52) = 1024;
            uint64_t v92 = v285;
            int v179 = *(unsigned __int8 *)(v285 + 104);
            swift_release();
            LODWORD(v295) = v179;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release();
            os_log_t v180 = v267;
            _os_log_impl((void *)&_mh_execute_header, v267, (os_log_type_t)v241, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v175, 0x3Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v137 = (uint64_t)v270;
            id v152 = v286;
          }
          else
          {

            swift_release_n();
            swift_bridgeObjectRelease_n();
          }
          sub_10015C1A8((char *)v276, v152, (unsigned __int8 *)v90, v92);
          id v181 = [v152 changedValues];
          int v182 = (char *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          unint64_t v183 = v256;
          swift_beginAccess();
          unint64_t v184 = v282;
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v295 = *v183;
          int64_t *v183 = 0x8000000000000000;
          unint64_t v282 = v182;
          sub_1002C4FAC((uint64_t)v182, v184, isUniquelyReferenced_nonNull_native);
          int64_t *v183 = v295;

          swift_bridgeObjectRelease();
          swift_endAccess();
          int v186 = *(unsigned __int8 *)(v92 + 104);
          id v187 = v152;
          swift_bridgeObjectRelease();
          if (v137 && (v186 & 1) != 0)
          {
            uint64_t v59 = 0;
            swift_bridgeObjectRelease();
            [v187 updateChangeCount];

            goto LABEL_176;
          }
          uint64_t v242 = v187;
          uint64_t v188 = v184;
          swift_retain_n();
          unint64_t v189 = v188;
          swift_bridgeObjectRetain();
          int64_t v190 = Logger.logObject.getter();
          int v191 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v190, (os_log_type_t)v191))
          {
            int v237 = v191;
            os_log_t v240 = v190;
            uint64_t v192 = swift_slowAlloc();
            NSString v241 = (void *)swift_slowAlloc();
            long long v238 = (void *)swift_slowAlloc();
            uint64_t v288 = v238;
            *(_DWORD *)uint64_t v192 = v243;
            v295 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v288);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v192 + 12) = 1024;
            swift_release();
            LODWORD(v295) = v186;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release();
            *(_WORD *)(v192 + 18) = 1024;
            unint64_t v33 = v282;
            LODWORD(v295) = 0;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v192 + 24) = 2114;
            v295 = v189;
            unint64_t v27 = v189;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *NSString v241 = v189;

            id v236 = (id)v27;
            long long v239 = (uint8_t *)v192;
            *(_WORD *)(v192 + 34) = 2082;
            unsigned int v193 = *((void *)v33 + 2);
            unint64_t v54 = v275;
            if (v193)
            {
              v295 = _swiftEmptyArrayStorage;
              swift_bridgeObjectRetain();
              sub_1001DE058(0, (int64_t)v193, 0);
              BOOL v28 = v295;
              uint64_t v194 = sub_10072617C((uint64_t)v33);
              int v196 = v195;
              uint64_t v197 = 0;
              uint64_t v198 = (uint64_t)(v33 + 64);
              char v199 = v33[32];
              uint64_t v266 = v195;
              unint64_t v235 = v33 + 96;
              id v286 = 0;
              os_log_t v267 = v193;
              uint64_t v270 = v33 + 64;
              while (1)
              {
                if (v194 < 0 || v194 >= 1 << v199)
                {
                  __break(1u);
LABEL_194:
                  __break(1u);
LABEL_195:
                  __break(1u);
LABEL_196:
                  __break(1u);
LABEL_197:
                  __break(1u);
LABEL_198:
                  __break(1u);
LABEL_199:
                  __break(1u);
LABEL_200:
                  swift_bridgeObjectRetain();
                  uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
                  swift_bridgeObjectRelease();
                  goto LABEL_7;
                }
                unint64_t v27 = (unint64_t)v194 >> 6;
                if ((*(void *)(v198 + 8 * ((unint64_t)v194 >> 6)) & (1 << v194)) == 0) {
                  goto LABEL_194;
                }
                if (*((_DWORD *)v33 + 9) != v196) {
                  goto LABEL_195;
                }
                uint64_t v279 = v197;
                uint64_t v202 = *((void *)v33 + 6) + 16 * v194;
                uint64_t v203 = *(objc_class **)(v202 + 8);
                unint64_t v282 = *(char **)v202;
                v295 = v28;
                unint64_t v205 = (unint64_t)v28[2].isa;
                unint64_t v204 = (unint64_t)v28[3].isa;
                id v32 = (id)(v205 + 1);
                swift_bridgeObjectRetain();
                if (v205 >= v204 >> 1)
                {
                  sub_1001DE058(v204 > 1, v205 + 1, 1);
                  BOOL v28 = v295;
                }
                v28[2].Class isa = (Class)v32;
                unint64_t v206 = &v28[2 * v205];
                v206[4].Class isa = (Class)v282;
                v206[5].Class isa = v203;
                char v199 = v33[32];
                unint64_t v200 = 1 << v199;
                if (v194 >= 1 << v199) {
                  goto LABEL_196;
                }
                uint64_t v198 = (uint64_t)v270;
                uint64_t v207 = v270[v27];
                if ((v207 & (1 << v194)) == 0) {
                  goto LABEL_197;
                }
                if (*((_DWORD *)v33 + 9) != v196) {
                  goto LABEL_198;
                }
                unint64_t v208 = v207 & (-2 << (v194 & 0x3F));
                if (v208)
                {
                  unint64_t v200 = __clz(__rbit64(v208)) | v194 & 0xFFFFFFFFFFFFFFC0;
                  id v32 = v286;
                  unint64_t v54 = v275;
                  os_log_t v201 = v267;
                }
                else
                {
                  unint64_t v209 = v27 + 1;
                  unint64_t v210 = (v200 + 63) >> 6;
                  id v32 = v286;
                  unint64_t v54 = v275;
                  os_log_t v201 = v267;
                  if (v27 + 1 < v210)
                  {
                    unint64_t v211 = v270[v209];
                    if (!v211)
                    {
                      unint64_t v209 = v27 + 2;
                      if (v27 + 2 >= v210) {
                        goto LABEL_154;
                      }
                      unint64_t v211 = v270[v209];
                      if (!v211)
                      {
                        unint64_t v209 = v27 + 3;
                        if (v27 + 3 >= v210) {
                          goto LABEL_154;
                        }
                        unint64_t v211 = v270[v209];
                        if (!v211)
                        {
                          while (v210 - 4 != v27)
                          {
                            unint64_t v211 = *(void *)&v235[8 * v27++];
                            if (v211)
                            {
                              unint64_t v209 = v27 + 3;
                              goto LABEL_167;
                            }
                          }
                          goto LABEL_154;
                        }
                      }
                    }
LABEL_167:
                    unint64_t v200 = __clz(__rbit64(v211)) + (v209 << 6);
                  }
                }
LABEL_154:
                uint64_t v197 = (void *)((char *)v279 + 1);
                int v196 = v266;
                uint64_t v194 = v200;
                if ((os_log_t)((char *)v279 + 1) == v201)
                {
                  uint64_t v59 = v32;
                  swift_bridgeObjectRelease();
                  goto LABEL_179;
                }
              }
            }
            uint64_t v59 = 0;
LABEL_179:
            unint64_t v214 = v239;
            uint64_t v215 = Array.description.getter();
            unint64_t v217 = v216;
            swift_bridgeObjectRelease();
            v295 = sub_1000C51B8(v215, v217, (uint64_t *)&v288);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            os_log_t v218 = v240;
            _os_log_impl((void *)&_mh_execute_header, v240, (os_log_type_t)v237, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v214, 0x2Cu);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            id v219 = v242;
            uint64_t v213 = v255;
          }
          else
          {
            uint64_t v59 = 0;

            swift_bridgeObjectRelease_n();
            id v212 = v242;

            swift_release_n();
LABEL_176:
            uint64_t v213 = v255;
            unint64_t v54 = v275;
          }
          unint64_t v68 = v257;
          uint64_t v55 = v271;
          unint64_t v69 = v254;
          if (v257 == v213) {
            goto LABEL_181;
          }
          break;
        default:
          goto LABEL_189;
      }
      break;
    }
  }
LABEL_189:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_186:
  os_log_t v233 = self;
  uint64_t v234 = v282;
  [v233 noSuchObjectErrorWithObjectID:v282];
  swift_willThrow();
}

void sub_1006D74E0(char *a1, void *a2, void *a3)
{
  uint64_t v285 = a1;
  uint64_t v6 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v6 - 8);
  uint64_t v279 = (uint64_t)&v237 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v278 = (char *)&v237 - v9;
  uint64_t v284 = type metadata accessor for UUID();
  unint64_t v281 = *(char **)(v284 - 8);
  __chkstk_darwin(v284);
  uint64_t v11 = (char *)&v237 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v237 - v13;
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v275 = *(void (***)(void, void, void))(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = ((char *)&v237 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v18 = a3[3];
  id v282 = (id)a3[2];
  id v277 = (id)a3[4];
  uint64_t v286 = v3;
  uint64_t v19 = *(void *)(v3 + 72);
  uint64_t v280 = a2;
  v288[3] = v19;
  char v289 = a2;
  v288[2] = &v289;
  swift_bridgeObjectRetain();
  unint64_t v20 = (unint64_t)v285;
  swift_bridgeObjectRetain();
  unint64_t v21 = v20;
  unint64_t v22 = v287;
  int v23 = sub_100692158((uint64_t (*)(id *))sub_100742744, v288, v21);
  if (v22) {
    goto LABEL_186;
  }
  unint64_t v274 = v18;
  id v268 = v17;
  uint64_t v276 = 0;
  *(void *)&long long v271 = a3;
  unint64_t v24 = (unint64_t)v23;
  uint64_t v269 = v19;
  long long v272 = v14;
  uint64_t v285 = v11;
  uint64_t v273 = v15;
  if (qword_1009073A0 != -1) {
    goto LABEL_196;
  }
  while (1)
  {
    uint64_t v25 = sub_10008E2DC(v273, (uint64_t)qword_100916070);
    unint64_t v26 = v24;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v283 = v25;
    unint64_t v27 = Logger.logObject.getter();
    int v28 = static os_log_type_t.info.getter();
    BOOL v29 = os_log_type_enabled(v27, (os_log_type_t)v28);
    unint64_t v30 = v24 >> 62;
    unint64_t v287 = v24;
    uint64_t v31 = v286;
    if (v29)
    {
      uint64_t v31 = swift_slowAlloc();
      id v32 = (void *)swift_slowAlloc();
      char v289 = v32;
      *(_DWORD *)uint64_t v31 = 136446978;
      uint64_t v297 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v289);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v31 + 12) = 2048;
      LODWORD(v267) = v28;
      uint64_t v266 = (const char *)v32;
      uint64_t v33 = (uint64_t)&v296;
      if (v30) {
        goto LABEL_205;
      }
      uint64_t v34 = v276;
      uint64_t v35 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_6:
      swift_bridgeObjectRelease();
      uint64_t v297 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 2082;
      sub_1000963CC(0, (unint64_t *)&unk_100910210);
      id v36 = [(id)swift_getObjCClassFromMetadata() description];
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v39 = v38;

      uint64_t v297 = sub_1000C51B8(v37, v39, (uint64_t *)&v289);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      unint64_t v26 = v287;
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 32) = 2082;
      unint64_t v40 = v274;
      swift_bridgeObjectRetain();
      uint64_t v297 = sub_1000C51B8((uint64_t)v282, v40, (uint64_t *)&v289);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v267, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v31, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v31 = v286;
    }
    else
    {
      uint64_t v34 = v276;

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    if (v30)
    {
      swift_bridgeObjectRetain();
      unint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v24 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v270 = (void *)v30;
    if (!v24) {
      break;
    }
    char v289 = _swiftEmptyArrayStorage;
    unint64_t v27 = &v289;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v24 & 0x8000000000000000) != 0) {
      goto LABEL_204;
    }
    uint64_t v41 = 0;
    unint64_t v42 = v26 & 0xC000000000000001;
    while (v24 != v41)
    {
      if (v42) {
        id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v43 = *(id *)(v26 + 8 * v41 + 32);
      }
      id v44 = v43;
      sub_100694DE8([v44 remObjectID], (unint64_t *)&unk_100910210);
      if (v34)
      {

        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      ++v41;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      unint64_t v26 = v287;
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v24 == v41)
      {
        unsigned __int16 v45 = v289;
        uint64_t v31 = v286;
        unint64_t v30 = (unint64_t)v270;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_196:
    swift_once();
  }
  unsigned __int16 v45 = _swiftEmptyArrayStorage;
LABEL_21:
  uint64_t v46 = *(void *)(v31 + 96);
  if (v46 <= 1)
  {
    if (v46)
    {
      if (v46 != 1) {
        goto LABEL_209;
      }
      swift_bridgeObjectRelease();
      unint64_t v62 = Logger.logObject.getter();
      os_log_type_t v63 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v62, v63))
      {
        uint64_t v64 = (uint8_t *)swift_slowAlloc();
        char v289 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v64 = 136315138;
        id v282 = v64 + 4;
        id v65 = [self cdEntityName];
        uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v68 = v67;

        uint64_t v297 = sub_1000C51B8(v66, v68, (uint64_t *)&v289);
        unint64_t v30 = (unint64_t)v270;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        unint64_t v26 = v287;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v62, v63, "Skipping fetch during upsert {CDType: %s}", v64, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      unint64_t v54 = v285;
      uint64_t v55 = v272;
      uint64_t v56 = v271;
      unint64_t v274 = sub_1002EFD80((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v59 = v34;
      uint64_t v31 = v286;
      uint64_t v60 = v26 & 0xFFFFFFFFFFFFFF8;
      if (!v30) {
        goto LABEL_32;
      }
LABEL_37:
      swift_bridgeObjectRetain();
      uint64_t v61 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      goto LABEL_38;
    }
  }
  else if ((unint64_t)(v46 - 2) >= 3 && v46 != 4499 && v46 != 4599)
  {
LABEL_209:
    ((void (**)(NSObject *, uint64_t, uint64_t))v275)[2](v268, v283, v273);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
    __break(1u);
    JUMPOUT(0x1006D9F88);
  }
  id v282 = v45;
  uint64_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v47, v48))
  {
    os_log_type_t v49 = (uint8_t *)swift_slowAlloc();
    char v289 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v49 = 136315138;
    uint64_t v276 = v49 + 4;
    id v50 = [self cdEntityName];
    uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v53 = v52;

    uint64_t v297 = sub_1000C51B8(v51, v53, (uint64_t *)&v289);
    unint64_t v26 = v287;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v31 = v286;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "Performing fetch during upsert {CDType: %s}", v49, 0xCu);
    swift_arrayDestroy();
    unint64_t v30 = (unint64_t)v270;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  unint64_t v54 = v285;
  uint64_t v55 = v272;
  uint64_t v56 = v271;
  unint64_t v57 = sub_100716D88((uint64_t)v282, v271);
  swift_bridgeObjectRelease();
  uint64_t v59 = v34;
  if (v34)
  {
LABEL_186:
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v274 = (unint64_t)v57;
  uint64_t v60 = v26 & 0xFFFFFFFFFFFFFF8;
  if (v30) {
    goto LABEL_37;
  }
LABEL_32:
  uint64_t v61 = *(void *)(v60 + 16);
LABEL_38:
  if (!v61) {
    goto LABEL_185;
  }
  unint64_t v69 = 0;
  uint64_t v255 = v31 + 24;
  uint64_t v254 = v56 + 48;
  uint64_t v258 = (NSObject **)(v56 + 56);
  unint64_t v70 = v26 & 0xC000000000000001;
  uint64_t v251 = v26 & 0xFFFFFFFFFFFFFF8;
  unint64_t v250 = v26 + 32;
  uint64_t v261 = (void **)(v281 + 8);
  long long v253 = v281 + 56;
  uint64_t v252 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v281 + 48);
  long long v260 = &v298;
  uint64_t v249 = (char *)&v297 + 4;
  *(void *)&long long v58 = 136446978;
  long long v247 = v58;
  uint64_t v266 = "daIsNotificationsCollection";
  uint64_t v265 = "DsToCategorizeAsGroceryItems";
  unint64_t v264 = "remindersICSDisplayOrderChanged";
  uint64_t v263 = "calDAVNotifications";
  *(void *)&long long v58 = 136446210;
  long long v271 = v58;
  *(void *)&long long v58 = 136447490;
  long long v248 = v58;
  *(void *)&long long v58 = 136447234;
  long long v245 = v58;
  uint64_t v262 = "unsavedSectionIDsOrdering";
  long long v246 = (char *)&type metadata for Any + 8;
  unint64_t v256 = v26 & 0xC000000000000001;
  uint64_t v257 = v61;
  while (1)
  {
    if (v70)
    {
      id v71 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v69 >= *(void *)(v251 + 16)) {
        goto LABEL_207;
      }
      id v71 = *(id *)(v250 + 8 * v69);
    }
    unint64_t v259 = v69 + 1;
    if (__OFADD__(v69, 1))
    {
      __break(1u);
LABEL_207:
      __break(1u);
LABEL_208:
      swift_once();
      uint64_t v222 = v273;
LABEL_188:
      sub_10008E2DC(v222, (uint64_t)qword_100920A70);
      uint64_t v223 = Logger.logObject.getter();
      os_log_type_t v224 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v223, v224))
      {
        uint64_t v225 = swift_slowAlloc();
        char v289 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v225 = 136446466;
        uint64_t v226 = sub_100662CC0(1);
        uint64_t v297 = sub_1000C51B8(v226, v227, (uint64_t *)&v289);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v225 + 12) = 2082;
        uint64_t v228 = sub_100662CC0((__int16)v59);
        uint64_t v297 = sub_1000C51B8(v228, v229, (uint64_t *)&v289);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v223, v224, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v225, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      NSString v230 = v275;
      NSString v231 = self;
      NSString v232 = String._bridgeToObjectiveC()();
      sub_100662CC0(1);
      NSString v233 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_100662CC0((__int16)v59);
      NSString v234 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v231 unauthorizedErrorWithMissingEntitlement:v232 requestedAccessLevel:v233 currentAccesslevel:v234];

      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      return;
    }
    id v72 = v71;
    id v282 = sub_100694DE8([v72 remObjectID], (unint64_t *)&unk_100910210);
    if (v59)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }

    uint64_t v275 = (void (**)(void, void, void))v72;
    id v73 = [v72 accountID];
    id v74 = [v73 uuid];

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v75 = UUID.uuidString.getter();
    uint64_t v76 = v55;
    uint64_t v77 = v75;
    uint64_t v79 = v78;
    id v80 = (char *)*v261;
    uint64_t v81 = v284;
    ((void (*)(char *, uint64_t))*v261)(v76, v284);
    id v82 = [self localInternalAccountID];
    id v83 = [v82 uuid];

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v84 = UUID.uuidString.getter();
    uint64_t v86 = v85;
    unint64_t v281 = v80;
    ((void (*)(char *, uint64_t))v80)(v54, v81);
    if (v77 != v84) {
      goto LABEL_49;
    }
    if (v79 == v86)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_49:
      char v87 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v87 & 1) == 0)
      {
        uint64_t v89 = v269;
        goto LABEL_55;
      }
    }
    int v88 = 0x7FFFFFFF;
    switch(*(unsigned __int16 *)(v286 + 68) >> 14)
    {
      case 2:
        int v88 = *(_DWORD *)(v286 + 64);
        break;
      case 3:
        break;
      default:
        int v88 = 2147483519;
        break;
    }
    sub_100662770(2, v88);
    uint64_t v89 = v269;
LABEL_55:
    int v90 = sub_10072FFE4(v275, v89, (uint64_t)&type metadata for REMSmartListStorageCDIngestor.ValueKey, (uint64_t (*)(void))sub_100692F68, &qword_100921B40);
    char v91 = sub_1006992B0();
    uint64_t v92 = *(void *)(v274 + 16);
    uint64_t v93 = v286;
    uint64_t v276 = 0;
    if (v92)
    {
      id v94 = v282;
      unint64_t v95 = v274;
      unint64_t v96 = sub_10030703C(v94);
      if (v97)
      {
        uint64_t v98 = (char *)*(id *)(*(void *)(v95 + 56) + 8 * v96);
        goto LABEL_115;
      }
    }
    uint64_t v99 = v90[2];
    if (!v99) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v100 = 0;
    uint64_t v101 = v284;
    while (2)
    {
      unint64_t v102 = (char *)v90 + v100++;
      unint64_t v103 = 0xE800000000000000;
      unint64_t v104 = 0x44497463656A626FLL;
      switch(v102[32])
      {
        case 1:
          unint64_t v105 = &v294;
          goto LABEL_76;
        case 2:
          unint64_t v104 = 0x73694C7472616D73;
          unint64_t v103 = 0xED00006570795474;
          break;
        case 3:
          unint64_t v104 = 0x53676E6974726F73;
          unint64_t v103 = 0xEC000000656C7974;
          break;
        case 4:
          unint64_t v103 = 0xEA00000000006574;
          unint64_t v104 = 0x614464656E6E6970;
          break;
        case 5:
          unint64_t v104 = 0x724F6C61756E616DLL;
          unint64_t v103 = 0xEE00676E69726564;
          break;
        case 6:
          unint64_t v103 = 0xE400000000000000;
          unint64_t v104 = 1701667182;
          break;
        case 7:
          unint64_t v103 = 0xE500000000000000;
          unint64_t v104 = 0x726F6C6F63;
          break;
        case 8:
          unint64_t v104 = 0x626D456567646162;
          unint64_t v103 = 0xEB000000006D656CLL;
          break;
        case 9:
          unint64_t v104 = 0x61447265746C6966;
          unint64_t v103 = 0xEA00000000006174;
          break;
        case 10:
          unint64_t v105 = &v293;
LABEL_76:
          unint64_t v103 = *((void *)v105 - 32) | 0x8000000000000000;
          unint64_t v104 = 0xD000000000000017;
          break;
        case 11:
          unint64_t v104 = 0xD00000000000001CLL;
          unint64_t v106 = v292;
          goto LABEL_72;
        case 12:
          unint64_t v104 = 0xD000000000000019;
          unint64_t v106 = &v291;
          goto LABEL_72;
        case 13:
          unint64_t v104 = 0xD000000000000027;
          unint64_t v106 = &v290;
LABEL_72:
          unint64_t v103 = *((void *)v106 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v107 = 0xE800000000000000;
      uint64_t v108 = 0x44497463656A626FLL;
      switch(v91)
      {
        case 0:
          goto LABEL_99;
        case 1:
          uint64_t v109 = &v294;
          goto LABEL_105;
        case 2:
          unint64_t v107 = 0xED00006570795474;
          if (v104 != 0x73694C7472616D73) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 3:
          unint64_t v107 = 0xEC000000656C7974;
          if (v104 != 0x53676E6974726F73) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 4:
          unint64_t v107 = 0xEA00000000006574;
          if (v104 != 0x614464656E6E6970) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 5:
          unint64_t v107 = 0xEE00676E69726564;
          if (v104 != 0x724F6C61756E616DLL) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 6:
          unint64_t v107 = 0xE400000000000000;
          if (v104 != 1701667182) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 7:
          unint64_t v107 = 0xE500000000000000;
          if (v104 != 0x726F6C6F63) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 8:
          uint64_t v108 = 0x626D456567646162;
          unint64_t v107 = 0xEB000000006D656CLL;
LABEL_99:
          if (v104 == v108) {
            goto LABEL_100;
          }
          goto LABEL_101;
        case 9:
          unint64_t v107 = 0xEA00000000006174;
          if (v104 != 0x61447265746C6966) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 10:
          uint64_t v109 = &v293;
LABEL_105:
          unint64_t v107 = *((void *)v109 - 32) | 0x8000000000000000;
          if (v104 != 0xD000000000000017) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 11:
          unint64_t v110 = 0xD00000000000001CLL;
          char v111 = v292;
          goto LABEL_94;
        case 12:
          unint64_t v110 = 0xD000000000000019;
          char v111 = &v291;
          goto LABEL_94;
        case 13:
          unint64_t v110 = 0xD000000000000027;
          char v111 = &v290;
LABEL_94:
          unint64_t v107 = *((void *)v111 - 32) | 0x8000000000000000;
          if (v104 != v110) {
            goto LABEL_101;
          }
LABEL_100:
          if (v103 == v107)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            goto LABEL_109;
          }
LABEL_101:
          char v112 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v112 & 1) == 0)
          {
            if (v99 == v100)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              goto LABEL_191;
            }
            continue;
          }
          swift_bridgeObjectRelease();
LABEL_109:
          id v113 = *(void **)(v286 + 88);
          sub_1000963CC(0, (unint64_t *)&unk_100910210);
          ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
          id v115 = [ObjCClassFromMetadata entity];
          id v116 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v115 insertIntoManagedObjectContext:v113];
          id v117 = v277;
          id v118 = v116;
          [v113 assignObject:v118 toPersistentStore:v117];

          id v119 = v118;
          id v120 = [v282 uuid];
          uint64_t v121 = (uint64_t)v278;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          (*(void (**)(uint64_t, void, uint64_t, uint64_t))v253)(v121, 0, 1, v101);
          uint64_t v122 = v101;
          uint64_t v123 = v279;
          sub_1001248EC(v121, v279);
          int v124 = (*v252)(v123, 1, v122);
          Class isa = 0;
          if (v124 != 1)
          {
            Class isa = UUID._bridgeToObjectiveC()().super.isa;
            ((void (*)(uint64_t, uint64_t))v281)(v123, v284);
          }
          [v119 setIdentifier:isa v237];

          sub_1001260DC(v121);
          id v126 = v282;
          uint64_t v93 = v286;
          swift_retain_n();
          id v127 = v119;
          int v128 = v126;
          uint64_t v98 = (char *)v127;
          uint64_t v129 = Logger.logObject.getter();
          os_log_type_t v130 = static os_log_type_t.default.getter();
          int v131 = v130;
          if (os_log_type_enabled(v129, v130))
          {
            uint64_t v132 = swift_slowAlloc();
            LODWORD(v268) = v131;
            uint64_t v133 = v132;
            uint64_t v134 = swift_slowAlloc();
            unint64_t v281 = v98;
            os_log_t v135 = (void *)v134;
            uint64_t v270 = (void *)swift_slowAlloc();
            char v289 = v270;
            *(_DWORD *)uint64_t v133 = v247;
            uint64_t v297 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v289);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v133 + 12) = 2082;
            sub_10010B4E8(v255, (uint64_t)v295);
            sub_10073F754((uint64_t)v295, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v136 = sub_100696CF4();
            unint64_t v138 = v137;
            sub_10073F754((uint64_t)v295, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            uint64_t v297 = sub_1000C51B8(v136, v138, (uint64_t *)&v289);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v133 + 22) = 2114;
            uint64_t v297 = v128;
            char v139 = v128;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *os_log_t v135 = v128;

            *(_WORD *)(v133 + 32) = 2112;
            uint64_t v140 = [v281 objectID];
            uint64_t v297 = v140;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            v135[1] = v140;
            uint64_t v93 = v286;

            _os_log_impl((void *)&_mh_execute_header, v129, (os_log_type_t)v268, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v133, 0x2Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            uint64_t v98 = v281;
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_release_n();
          }
          unint64_t v54 = v285;
          swift_beginAccess();
          sub_1001A6B7C((uint64_t)v98, (uint64_t)v128);
          swift_endAccess();
LABEL_115:

          os_log_type_t v141 = (void *)v90[2];
          if (!v141) {
            goto LABEL_127;
          }
          unint64_t v281 = v98;
          swift_bridgeObjectRetain();
          uint64_t v142 = 0;
          while (2)
          {
            if (((*(unsigned int *)(v93 + 64) | ((unint64_t)*(unsigned __int16 *)(v93 + 68) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
            {
              char v143 = *((unsigned char *)v90 + v142 + 32);
              os_log_type_t v144 = Logger.logObject.getter();
              os_log_type_t v145 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v144, v145))
              {
                uint64_t v146 = swift_slowAlloc();
                char v289 = (void *)swift_slowAlloc();
                *(_DWORD *)uint64_t v146 = v271;
                LOBYTE(v297) = v143;
                uint64_t v147 = String.init<A>(describing:)();
                *(void *)(v146 + 4) = sub_1000C51B8(v147, v148, (uint64_t *)&v289);
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v144, v145, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v146, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                uint64_t v93 = v286;
                swift_slowDealloc();
              }
            }
            LODWORD(v59) = *(_DWORD *)(v93 + 64);
            if (*(unsigned __int16 *)(v93 + 68) >> 14 == 2 && (*(_DWORD *)(v93 + 64) & 1) == 0)
            {
              uint64_t v222 = v273;
              if (qword_100907AE0 == -1) {
                goto LABEL_188;
              }
              goto LABEL_208;
            }
            if (v141 != (void *)++v142) {
              continue;
            }
            break;
          }
          swift_bridgeObjectRelease();
          uint64_t v98 = v281;
LABEL_127:
          swift_retain_n();
          id v150 = v282;
          swift_bridgeObjectRetain_n();
          int v151 = v98;
          id v152 = v150;
          uint64_t v153 = v151;
          int v154 = Logger.logObject.getter();
          int v155 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v154, (os_log_type_t)v155))
          {
            LODWORD(v243) = v155;
            os_log_t v267 = v154;
            uint64_t v270 = v141;
            uint64_t v156 = swift_slowAlloc();
            id v282 = v153;
            uint64_t v157 = v156;
            unint64_t v281 = (char *)swift_slowAlloc();
            long long v244 = (void *)swift_slowAlloc();
            char v289 = v244;
            *(_DWORD *)uint64_t v157 = v248;
            uint64_t v297 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v289);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v157 + 12) = 2082;
            sub_10010B4E8(v255, (uint64_t)v292);
            sub_10073F754((uint64_t)v292, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v158 = sub_100696CF4();
            unint64_t v160 = v159;
            sub_10073F754((uint64_t)v292, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            uint64_t v297 = sub_1000C51B8(v158, v160, (uint64_t *)&v289);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v157 + 22) = 2114;
            uint64_t v297 = v152;
            unint64_t v161 = v152;
            id v162 = v152;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            id v268 = v152;
            uint64_t v163 = v281;
            *(void *)unint64_t v281 = v161;

            *(_WORD *)(v157 + 32) = 2112;
            id v164 = v282;
            uint64_t v165 = [v282 objectID];
            uint64_t v297 = v165;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *((void *)v163 + 1) = v165;

            *(_WORD *)(v157 + 42) = 2082;
            int64_t v166 = v90[2];
            if (v166)
            {
              uint64_t v297 = _swiftEmptyArrayStorage;
              sub_1001DE058(0, v166, 0);
              uint64_t v167 = 0;
              id v168 = v297;
              do
              {
                unint64_t v169 = 0xE800000000000000;
                unint64_t v170 = 0x44497463656A626FLL;
                switch(*((unsigned char *)v90 + v167 + 32))
                {
                  case 1:
                    unint64_t v171 = &v294;
                    goto LABEL_145;
                  case 2:
                    unint64_t v170 = 0x73694C7472616D73;
                    unint64_t v169 = 0xED00006570795474;
                    break;
                  case 3:
                    unint64_t v170 = 0x53676E6974726F73;
                    unint64_t v169 = 0xEC000000656C7974;
                    break;
                  case 4:
                    unint64_t v169 = 0xEA00000000006574;
                    unint64_t v170 = 0x614464656E6E6970;
                    break;
                  case 5:
                    unint64_t v170 = 0x724F6C61756E616DLL;
                    unint64_t v169 = 0xEE00676E69726564;
                    break;
                  case 6:
                    unint64_t v169 = 0xE400000000000000;
                    unint64_t v170 = 1701667182;
                    break;
                  case 7:
                    unint64_t v169 = 0xE500000000000000;
                    unint64_t v170 = 0x726F6C6F63;
                    break;
                  case 8:
                    unint64_t v170 = 0x626D456567646162;
                    unint64_t v169 = 0xEB000000006D656CLL;
                    break;
                  case 9:
                    unint64_t v170 = 0x61447265746C6966;
                    unint64_t v169 = 0xEA00000000006174;
                    break;
                  case 0xA:
                    unint64_t v171 = &v293;
LABEL_145:
                    unint64_t v169 = *((void *)v171 - 32) | 0x8000000000000000;
                    unint64_t v170 = 0xD000000000000017;
                    break;
                  case 0xB:
                    unint64_t v170 = 0xD00000000000001CLL;
                    unint64_t v172 = v292;
                    goto LABEL_141;
                  case 0xC:
                    unint64_t v170 = 0xD000000000000019;
                    unint64_t v172 = &v291;
                    goto LABEL_141;
                  case 0xD:
                    unint64_t v170 = 0xD000000000000027;
                    unint64_t v172 = &v290;
LABEL_141:
                    unint64_t v169 = *((void *)v172 - 32) | 0x8000000000000000;
                    break;
                  default:
                    break;
                }
                uint64_t v297 = v168;
                unint64_t v174 = (unint64_t)v168[2].isa;
                unint64_t v173 = (unint64_t)v168[3].isa;
                if (v174 >= v173 >> 1)
                {
                  sub_1001DE058(v173 > 1, v174 + 1, 1);
                  id v168 = v297;
                }
                ++v167;
                v168[2].Class isa = (Class)(v174 + 1);
                uint64_t v175 = &v168[2 * v174];
                v175[4].Class isa = (Class)v170;
                v175[5].Class isa = (Class)v169;
                unint64_t v54 = v285;
              }
              while (v166 != v167);
            }
            swift_bridgeObjectRelease();
            uint64_t v176 = Array.description.getter();
            unint64_t v178 = v177;
            swift_bridgeObjectRelease();
            uint64_t v297 = sub_1000C51B8(v176, v178, (uint64_t *)&v289);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(_WORD *)(v157 + 52) = 1024;
            uint64_t v93 = v286;
            int v179 = *(unsigned __int8 *)(v286 + 104);
            swift_release();
            LODWORD(v297) = v179;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release();
            os_log_t v180 = v267;
            _os_log_impl((void *)&_mh_execute_header, v267, (os_log_type_t)v243, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v157, 0x3Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            os_log_type_t v141 = v270;
            uint64_t v153 = (char *)v282;
            id v152 = v268;
          }
          else
          {

            swift_release_n();
            swift_bridgeObjectRelease_n();
          }
          id v181 = v276;
          sub_1001B60DC(v275, v153, (uint64_t)v90, v93);
          if (v181)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            goto LABEL_186;
          }
          uint64_t v276 = 0;
          id v182 = [v153 changedValues];
          unint64_t v183 = v152;
          unint64_t v184 = (void *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          unint64_t v185 = v258;
          swift_beginAccess();
          int v186 = v183;
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v297 = *v185;
          *unint64_t v185 = 0x8000000000000000;
          id v282 = v184;
          sub_1002C4FAC((uint64_t)v184, v186, isUniquelyReferenced_nonNull_native);
          *unint64_t v185 = v297;

          swift_bridgeObjectRelease();
          swift_endAccess();
          int v188 = *(unsigned __int8 *)(v93 + 104);
          unint64_t v189 = v153;
          swift_bridgeObjectRelease();
          if (v141 && (v188 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            [v189 updateChangeCount];

            goto LABEL_184;
          }
          long long v244 = v189;
          int64_t v190 = v186;
          swift_retain_n();
          int v191 = v190;
          swift_bridgeObjectRetain();
          uint64_t v192 = Logger.logObject.getter();
          int v193 = static os_log_type_t.default.getter();
          BOOL v194 = os_log_type_enabled(v192, (os_log_type_t)v193);
          uint64_t v31 = v287;
          if (!v194)
          {

            swift_bridgeObjectRelease_n();
            id v215 = v244;

            swift_release_n();
            goto LABEL_184;
          }
          int v239 = v193;
          os_log_t v242 = v192;
          unint64_t v30 = swift_slowAlloc();
          long long v243 = (void *)swift_slowAlloc();
          os_log_t v240 = (void *)swift_slowAlloc();
          char v289 = v240;
          *(_DWORD *)unint64_t v30 = v245;
          uint64_t v297 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v289);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v30 + 12) = 1024;
          swift_release();
          LODWORD(v297) = v188;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release();
          *(_WORD *)(v30 + 18) = 1024;
          LODWORD(v297) = 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v30 + 24) = 2114;
          uint64_t v297 = v191;
          unsigned int v195 = v191;
          int v196 = v282;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          void *v243 = v191;

          long long v238 = v195;
          NSString v241 = (uint8_t *)v30;
          *(_WORD *)(v30 + 34) = 2082;
          int64_t v197 = v196[2];
          if (!v197) {
            goto LABEL_183;
          }
          uint64_t v297 = _swiftEmptyArrayStorage;
          swift_bridgeObjectRetain();
          sub_1001DE058(0, v197, 0);
          unint64_t v27 = v297;
          uint64_t v198 = sub_10072617C((uint64_t)v196);
          unsigned int v200 = v199;
          os_log_t v201 = 0;
          uint64_t v202 = (char *)(v196 + 8);
          uint64_t v33 = *((unsigned __int8 *)v196 + 32);
          os_log_t v267 = (os_log_t)v199;
          int v237 = (char *)(v196 + 12);
          id v268 = v197;
          uint64_t v270 = v196 + 8;
          while (2)
          {
            if (v198 < 0 || (uint64_t v33 = 1 << v33, v198 >= v33))
            {
              __break(1u);
LABEL_199:
              __break(1u);
LABEL_200:
              __break(1u);
LABEL_201:
              __break(1u);
LABEL_202:
              __break(1u);
LABEL_203:
              __break(1u);
LABEL_204:
              __break(1u);
LABEL_205:
              uint64_t v34 = *(uint8_t **)(v33 - 256);
              swift_bridgeObjectRetain();
              uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              goto LABEL_6;
            }
            unint64_t v30 = (unint64_t)v198 >> 6;
            uint64_t v33 = *(void *)&v202[8 * ((unint64_t)v198 >> 6)];
            if ((v33 & (1 << v198)) == 0) {
              goto LABEL_199;
            }
            uint64_t v33 = *((unsigned int *)v196 + 9);
            if (v33 != v200) {
              goto LABEL_200;
            }
            unint64_t v281 = v201;
            uint64_t v205 = v196[6] + 16 * v198;
            unint64_t v206 = *(objc_class **)(v205 + 8);
            id v282 = *(id *)v205;
            uint64_t v297 = v27;
            unint64_t v208 = (unint64_t)v27[2].isa;
            unint64_t v207 = (unint64_t)v27[3].isa;
            uint64_t v31 = v208 + 1;
            swift_bridgeObjectRetain();
            if (v208 >= v207 >> 1)
            {
              sub_1001DE058(v207 > 1, v208 + 1, 1);
              unint64_t v27 = v297;
            }
            v27[2].Class isa = (Class)v31;
            unint64_t v209 = &v27[2 * v208];
            v209[4].Class isa = (Class)v282;
            v209[5].Class isa = v206;
            uint64_t v33 = *((unsigned __int8 *)v196 + 32);
            unint64_t v203 = 1 << v33;
            if (v198 >= 1 << v33) {
              goto LABEL_201;
            }
            uint64_t v202 = (char *)v270;
            uint64_t v210 = v270[v30];
            if ((v210 & (1 << v198)) == 0) {
              goto LABEL_202;
            }
            if (*((_DWORD *)v196 + 9) != v200) {
              goto LABEL_203;
            }
            unint64_t v211 = v210 & (-2 << (v198 & 0x3F));
            if (v211)
            {
              unint64_t v203 = __clz(__rbit64(v211)) | v198 & 0xFFFFFFFFFFFFFFC0;
              uint64_t v31 = v287;
              unint64_t v54 = v285;
              unint64_t v204 = (char *)v268;
              goto LABEL_160;
            }
            unint64_t v212 = v30 + 1;
            unint64_t v213 = (v203 + 63) >> 6;
            uint64_t v31 = v287;
            unint64_t v54 = v285;
            unint64_t v204 = (char *)v268;
            if (v30 + 1 < v213)
            {
              unint64_t v214 = v270[v212];
              if (v214) {
                goto LABEL_173;
              }
              unint64_t v212 = v30 + 2;
              if (v30 + 2 < v213)
              {
                unint64_t v214 = v270[v212];
                if (v214) {
                  goto LABEL_173;
                }
                unint64_t v212 = v30 + 3;
                if (v30 + 3 >= v213) {
                  goto LABEL_160;
                }
                unint64_t v214 = v270[v212];
                if (v214)
                {
LABEL_173:
                  unint64_t v203 = __clz(__rbit64(v214)) + (v212 << 6);
                  goto LABEL_160;
                }
                while (v213 - 4 != v30)
                {
                  unint64_t v214 = *(void *)&v237[8 * v30++];
                  if (v214)
                  {
                    unint64_t v212 = v30 + 3;
                    goto LABEL_173;
                  }
                }
              }
            }
LABEL_160:
            os_log_t v201 = v281 + 1;
            unsigned int v200 = v267;
            uint64_t v198 = v203;
            if (v281 + 1 != v204) {
              continue;
            }
            break;
          }
          swift_bridgeObjectRelease();
LABEL_183:
          unint64_t v216 = v241;
          uint64_t v217 = Array.description.getter();
          unint64_t v219 = v218;
          swift_bridgeObjectRelease();
          uint64_t v297 = sub_1000C51B8(v217, v219, (uint64_t *)&v289);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          os_log_t v220 = v242;
          _os_log_impl((void *)&_mh_execute_header, v242, (os_log_type_t)v239, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v216, 0x2Cu);
          sub_100094134((uint64_t *)&unk_10090A040);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          id v221 = v244;
LABEL_184:
          unint64_t v69 = v259;
          uint64_t v59 = v276;
          uint64_t v55 = v272;
          unint64_t v70 = v256;
          if (v259 == v257)
          {
LABEL_185:
            swift_bridgeObjectRelease();
            goto LABEL_186;
          }
          break;
        default:
          goto LABEL_192;
      }
      break;
    }
  }
LABEL_192:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_191:
  unint64_t v235 = self;
  id v236 = v282;
  [v235 noSuchObjectErrorWithObjectID:v282];
  swift_willThrow();
}

void sub_1006DA040(uint64_t a1, char *a2, void *a3)
{
  uint64_t v295 = a1;
  uint64_t v6 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v6 - 8);
  uint64_t v291 = (uint64_t)&v242 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  char v290 = (char *)&v242 - v9;
  uint64_t v294 = type metadata accessor for UUID();
  char v292 = *(char **)(v294 - 8);
  __chkstk_darwin(v294);
  uint64_t v11 = (char *)&v242 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v242 - v13;
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v288 = *(char **)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v242 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = (void *)a3[3];
  uint64_t v293 = a3[2];
  id v289 = (id)a3[4];
  uint64_t v296 = v3;
  uint64_t v19 = *(void *)(v3 + 72);
  uint64_t v301 = v19;
  v302 = a2;
  v300 = &v302;
  swift_bridgeObjectRetain();
  unint64_t v20 = v295;
  swift_bridgeObjectRetain();
  unint64_t v21 = v20;
  unint64_t v22 = v297;
  int v23 = sub_100692158((uint64_t (*)(id *))sub_100742760, &v298, v21);
  if (v22) {
    goto LABEL_2;
  }
  uint64_t v280 = a2;
  unint64_t v287 = v18;
  uint64_t v279 = v17;
  unint64_t v283 = (unint64_t)a3;
  unint64_t v24 = (unint64_t)v23;
  uint64_t v281 = v19;
  uint64_t v284 = v14;
  uint64_t v285 = v11;
  uint64_t v286 = v15;
  int64_t v25 = 0;
  if (qword_1009073A0 != -1) {
    goto LABEL_229;
  }
  while (1)
  {
    uint64_t v26 = sub_10008E2DC(v286, (uint64_t)qword_100916070);
    unint64_t v27 = v24;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v295 = v26;
    int v28 = Logger.logObject.getter();
    int v29 = static os_log_type_t.info.getter();
    BOOL v30 = os_log_type_enabled(v28, (os_log_type_t)v29);
    unint64_t v31 = v24 >> 62;
    unint64_t v297 = v24;
    uint64_t v32 = v296;
    if (v30)
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = (char *)swift_slowAlloc();
      v302 = v33;
      *(_DWORD *)uint64_t v32 = 136446978;
      v305 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v302);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v32 + 12) = 2048;
      LODWORD(v278) = v29;
      uint64_t v277 = (uint64_t)v33;
      if (v31) {
        goto LABEL_238;
      }
      uint64_t v34 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_7:
      swift_bridgeObjectRelease();
      v305 = v34;
      uint64_t v14 = (char *)&v306;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 22) = 2082;
      type metadata accessor for REMCDSavedReminder();
      id v35 = [(id)swift_getObjCClassFromMetadata() description];
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v38 = v37;

      uint64_t v39 = v36;
      unint64_t v27 = v297;
      v305 = sub_1000C51B8(v39, v38, (uint64_t *)&v302);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 32) = 2082;
      unint64_t v40 = (unint64_t)v287;
      swift_bridgeObjectRetain();
      v305 = sub_1000C51B8(v293, v40, (uint64_t *)&v302);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v278, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v32, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v32 = v296;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    if (v31)
    {
      swift_bridgeObjectRetain();
      unint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v24 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    *(void *)&long long v282 = v31;
    if (!v24) {
      break;
    }
    v302 = (char *)_swiftEmptyArrayStorage;
    int v28 = &v302;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v24 & 0x8000000000000000) != 0) {
      goto LABEL_237;
    }
    uint64_t v41 = 0;
    unint64_t v42 = v27 & 0xC000000000000001;
    while (v24 != v41)
    {
      if (v42) {
        id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v43 = *(id *)(v27 + 8 * v41 + 32);
      }
      id v44 = v43;
      unsigned __int16 v45 = (unsigned __int16)sub_100695DC4([v44 remObjectID], (void (*)(void))type metadata accessor for REMCDSavedReminder, 0xD000000000000012, (void *)0x80000001007CC3C0);
      if (v25)
      {

        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      LOWORD(v14) = v45;
      ++v41;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      unint64_t v27 = v297;
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v24 == v41)
      {
        uint64_t v46 = v302;
        uint64_t v32 = v296;
        unint64_t v31 = v282;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_229:
    swift_once();
  }
  uint64_t v46 = (char *)_swiftEmptyArrayStorage;
LABEL_22:
  uint64_t v47 = *(void *)(v32 + 96);
  if (v47 <= 1)
  {
    if (v47)
    {
      if (v47 != 1) {
        goto LABEL_242;
      }
      swift_bridgeObjectRelease();
      os_log_type_t v63 = Logger.logObject.getter();
      os_log_type_t v64 = static os_log_type_t.debug.getter();
      BOOL v65 = os_log_type_enabled(v63, v64);
      uint64_t v293 = v25;
      if (v65)
      {
        uint64_t v66 = (uint8_t *)swift_slowAlloc();
        unint64_t v67 = (char *)swift_slowAlloc();
        LOWORD(v14) = (_WORD)v67;
        v302 = v67;
        *(_DWORD *)uint64_t v66 = 136315138;
        uint64_t v288 = (char *)(v66 + 4);
        id v68 = [(id)type metadata accessor for REMCDSavedReminder() cdEntityName];
        uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v71 = v70;

        v305 = sub_1000C51B8(v69, v71, (uint64_t *)&v302);
        unint64_t v31 = v282;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        unint64_t v27 = v297;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v63, v64, "Skipping fetch during upsert {CDType: %s}", v66, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      uint64_t v55 = v284;
      unint64_t v60 = v283;
      unint64_t v283 = sub_1002EFD8C((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v32 = v296;
      uint64_t v61 = v27 & 0xFFFFFFFFFFFFFF8;
      if (!v31) {
        goto LABEL_34;
      }
LABEL_39:
      swift_bridgeObjectRetain();
      uint64_t v62 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      goto LABEL_40;
    }
  }
  else if ((unint64_t)(v47 - 2) >= 3 && v47 != 4499 && v47 != 4599)
  {
LABEL_242:
    (*((void (**)(char *, uint64_t, uint64_t))v288 + 2))(v279, v295, v286);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
    __break(1u);
    JUMPOUT(0x1006DCD38);
  }
  uint64_t v288 = v46;
  os_log_type_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v48, v49))
  {
    id v50 = (uint8_t *)swift_slowAlloc();
    v302 = (char *)swift_slowAlloc();
    *(_DWORD *)id v50 = 136315138;
    unint64_t v287 = v50 + 4;
    id v51 = [(id)type metadata accessor for REMCDSavedReminder() cdEntityName];
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v54 = v53;

    v305 = sub_1000C51B8(v52, v54, (uint64_t *)&v302);
    unint64_t v27 = v297;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v32 = v296;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "Performing fetch during upsert {CDType: %s}", v50, 0xCu);
    swift_arrayDestroy();
    uint64_t v14 = (char *)v282;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v14 = (char *)v31;
  }

  uint64_t v55 = v284;
  uint64_t v56 = v25;
  unint64_t v57 = v283;
  long long v58 = sub_1007171F0((uint64_t)v288, v283);
  swift_bridgeObjectRelease();
  uint64_t v293 = v56;
  if (v56) {
    goto LABEL_2;
  }
  unint64_t v60 = v57;
  unint64_t v283 = (unint64_t)v58;
  uint64_t v61 = v27 & 0xFFFFFFFFFFFFFF8;
  if (v14) {
    goto LABEL_39;
  }
LABEL_34:
  uint64_t v62 = *(void *)(v61 + 16);
LABEL_40:
  if (!v62)
  {
LABEL_218:
    swift_bridgeObjectRelease();
LABEL_2:
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v72 = 0;
  uint64_t v260 = v32 + 24;
  unint64_t v259 = v60 + 48;
  uint64_t v263 = (NSObject **)(v60 + 56);
  unint64_t v73 = v27 & 0xC000000000000001;
  uint64_t v256 = v27 & 0xFFFFFFFFFFFFFF8;
  unint64_t v255 = v27 + 32;
  uint64_t v276 = (void **)(v292 + 8);
  uint64_t v258 = v292 + 56;
  uint64_t v257 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v292 + 48);
  uint64_t v275 = &v306;
  uint64_t v254 = (char *)&v305 + 4;
  unint64_t v274 = (void *)0x80000001007CC3C0;
  *(void *)&long long v59 = 136446978;
  long long v252 = v59;
  long long v272 = "debugSyncDisabled";
  long long v271 = "daIsNotificationsCollection";
  uint64_t v270 = "daCalendarItemUniqueIdentifier";
  uint64_t v269 = "lastModifiedDate";
  id v268 = "startDateComponents";
  os_log_t v267 = "dueDateComponents";
  uint64_t v266 = "attachments";
  uint64_t v265 = "dueDateDeltaAlertsData";
  *(void *)&long long v59 = 136446210;
  long long v282 = v59;
  *(void *)&long long v59 = 136447490;
  long long v253 = v59;
  *(void *)&long long v59 = 136447234;
  long long v250 = v59;
  unint64_t v264 = "dueDateDeltaAlertsToUpsert";
  uint64_t v251 = (char *)&type metadata for Any + 8;
  unint64_t v261 = v27 & 0xC000000000000001;
  id v74 = v285;
  uint64_t v262 = v62;
  while (1)
  {
    if (v73)
    {
      id v75 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v72 >= *(void *)(v256 + 16)) {
        goto LABEL_240;
      }
      id v75 = *(id *)(v255 + 8 * v72);
    }
    unint64_t v273 = v72 + 1;
    if (__OFADD__(v72, 1)) {
      break;
    }
    id v76 = v75;
    id v77 = [v76 remObjectID];
    uint64_t v78 = v293;
    char v292 = (char *)sub_100695DC4(v77, (void (*)(void))type metadata accessor for REMCDSavedReminder, 0xD000000000000012, v274);
    if (v78)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }

    unint64_t v287 = v76;
    id v79 = [v76 accountID];
    id v80 = [v79 uuid];

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v81 = UUID.uuidString.getter();
    id v82 = v55;
    uint64_t v83 = v81;
    uint64_t v85 = v84;
    uint64_t v86 = (char *)*v276;
    uint64_t v87 = v294;
    ((void (*)(char *, uint64_t))*v276)(v82, v294);
    id v88 = [self localInternalAccountID];
    id v89 = [v88 uuid];

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v90 = UUID.uuidString.getter();
    uint64_t v92 = v91;
    uint64_t v288 = v86;
    ((void (*)(char *, uint64_t))v86)(v74, v87);
    if (v83 == v90 && v85 == v92)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v93 = v281;
      unint64_t v94 = v283;
    }
    else
    {
      char v95 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v93 = v281;
      unint64_t v94 = v283;
      if ((v95 & 1) == 0) {
        goto LABEL_57;
      }
    }
    int v96 = 0x7FFFFFFF;
    switch(*(unsigned __int16 *)(v296 + 68) >> 14)
    {
      case 2:
        int v96 = *(_DWORD *)(v296 + 64);
        break;
      case 3:
        break;
      default:
        int v96 = 2147483519;
        break;
    }
    sub_100662770(2, v96);
LABEL_57:
    char v97 = sub_10072FFE4(v287, v93, (uint64_t)&type metadata for REMSavedReminderStorageCDIngestor.ValueKey, (uint64_t (*)(void))sub_1006937E0, &qword_100921B88);
    char v98 = sub_100699C24();
    uint64_t v99 = *(void *)(v94 + 16);
    uint64_t v100 = v296;
    uint64_t v293 = 0;
    if (v99)
    {
      uint64_t v101 = v292;
      unint64_t v102 = sub_10030703C(v101);
      if (v103)
      {
        unint64_t v104 = (char *)*(id *)(*(void *)(v94 + 56) + 8 * v102);
        goto LABEL_138;
      }
    }
    uint64_t v105 = v97[2];
    if (!v105)
    {
LABEL_225:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_224;
    }
    swift_bridgeObjectRetain();
    uint64_t v106 = 0;
    uint64_t v107 = v294;
    while (2)
    {
      uint64_t v108 = (char *)v97 + v106++;
      unint64_t v109 = 0xE600000000000000;
      uint64_t v110 = 0x7961446C6C61;
      switch(v108[32])
      {
        case 1:
          uint64_t v110 = 0xD000000000000010;
          id v113 = (uint64_t *)&v302;
          goto LABEL_87;
        case 2:
          uint64_t v110 = 0xD000000000000017;
          id v113 = &v301;
          goto LABEL_87;
        case 3:
          char v112 = (unint64_t *)&v300;
          goto LABEL_79;
        case 4:
          uint64_t v111 = 0x44656C746974;
          goto LABEL_77;
        case 5:
          unint64_t v109 = 0xE800000000000000;
          uint64_t v110 = 0x797469726F697270;
          break;
        case 6:
          unint64_t v109 = 0xE700000000000000;
          uint64_t v110 = 0x64656767616C66;
          break;
        case 7:
          uint64_t v110 = 0x6E6F697461657263;
          unint64_t v109 = 0xEC00000065746144;
          break;
        case 8:
          uint64_t v110 = 0x6E65727275636572;
          unint64_t v109 = 0xEF73656C75526563;
          break;
        case 9:
          uint64_t v110 = 0xD000000000000013;
          id v113 = (uint64_t *)&v299;
          goto LABEL_87;
        case 10:
          char v112 = (unint64_t *)&v298;
          goto LABEL_79;
        case 11:
          unint64_t v109 = 0xE800000000000000;
          uint64_t v110 = 0x656E6F5A656D6974;
          break;
        case 12:
          break;
        case 13:
          char v112 = &v297;
LABEL_79:
          unint64_t v109 = *(v112 - 32) | 0x8000000000000000;
          uint64_t v110 = 0xD000000000000011;
          break;
        case 14:
          uint64_t v111 = 0x447365746F6ELL;
LABEL_77:
          uint64_t v110 = v111 & 0xFFFFFFFFFFFFLL | 0x636F000000000000;
          unint64_t v109 = 0xED0000746E656D75;
          break;
        case 15:
          uint64_t v110 = 0x656D686361747461;
          unint64_t v109 = 0xEB0000000073746ELL;
          break;
        case 16:
          uint64_t v110 = 0x736D72616C61;
          break;
        case 17:
          uint64_t v110 = 0xD000000000000016;
          id v113 = &v296;
          goto LABEL_87;
        case 18:
          uint64_t v110 = 0xD00000000000001ALL;
          id v113 = &v295;
          goto LABEL_87;
        case 19:
          uint64_t v110 = 0xD000000000000024;
          id v113 = &v294;
LABEL_87:
          unint64_t v109 = *(v113 - 32) | 0x8000000000000000;
          break;
        case 20:
          unint64_t v109 = 0xE800000000000000;
          uint64_t v110 = 0x7367617468736168;
          break;
        case 21:
          uint64_t v110 = 0x48746361746E6F63;
          unint64_t v109 = 0xEE0073656C646E61;
          break;
        default:
          unint64_t v109 = 0xE800000000000000;
          uint64_t v110 = 0x44497463656A626FLL;
          break;
      }
      unint64_t v114 = 0xE600000000000000;
      uint64_t v115 = 0x7961446C6C61;
      switch(v98)
      {
        case 0:
          unint64_t v114 = 0xE800000000000000;
          if (v110 != 0x44497463656A626FLL) {
            goto LABEL_127;
          }
          goto LABEL_126;
        case 1:
          unint64_t v118 = 0xD000000000000010;
          id v119 = (uint64_t *)&v302;
          goto LABEL_125;
        case 2:
          unint64_t v118 = 0xD000000000000017;
          id v119 = &v301;
          goto LABEL_125;
        case 3:
          id v117 = (unint64_t *)&v300;
          goto LABEL_111;
        case 4:
          uint64_t v116 = 0x44656C746974;
          goto LABEL_108;
        case 5:
          unint64_t v114 = 0xE800000000000000;
          if (v110 != 0x797469726F697270) {
            goto LABEL_127;
          }
          goto LABEL_126;
        case 6:
          unint64_t v114 = 0xE700000000000000;
          if (v110 != 0x64656767616C66) {
            goto LABEL_127;
          }
          goto LABEL_126;
        case 7:
          uint64_t v115 = 0x6E6F697461657263;
          unint64_t v114 = 0xEC00000065746144;
          goto LABEL_120;
        case 8:
          unint64_t v114 = 0xEF73656C75526563;
          if (v110 != 0x6E65727275636572) {
            goto LABEL_127;
          }
          goto LABEL_126;
        case 9:
          unint64_t v118 = 0xD000000000000013;
          id v119 = (uint64_t *)&v299;
          goto LABEL_125;
        case 10:
          id v117 = (unint64_t *)&v298;
          goto LABEL_111;
        case 11:
          unint64_t v114 = 0xE800000000000000;
          if (v110 != 0x656E6F5A656D6974) {
            goto LABEL_127;
          }
          goto LABEL_126;
        case 12:
LABEL_120:
          if (v110 != v115) {
            goto LABEL_127;
          }
          goto LABEL_126;
        case 13:
          id v117 = &v297;
LABEL_111:
          unint64_t v114 = *(v117 - 32) | 0x8000000000000000;
          if (v110 != 0xD000000000000011) {
            goto LABEL_127;
          }
          goto LABEL_126;
        case 14:
          uint64_t v116 = 0x447365746F6ELL;
LABEL_108:
          unint64_t v114 = 0xED0000746E656D75;
          if (v110 != (v116 & 0xFFFFFFFFFFFFLL | 0x636F000000000000)) {
            goto LABEL_127;
          }
          goto LABEL_126;
        case 15:
          unint64_t v114 = 0xEB0000000073746ELL;
          if (v110 != 0x656D686361747461) {
            goto LABEL_127;
          }
          goto LABEL_126;
        case 16:
          if (v110 != 0x736D72616C61) {
            goto LABEL_127;
          }
          goto LABEL_126;
        case 17:
          unint64_t v118 = 0xD000000000000016;
          id v119 = &v296;
          goto LABEL_125;
        case 18:
          unint64_t v118 = 0xD00000000000001ALL;
          id v119 = &v295;
          goto LABEL_125;
        case 19:
          unint64_t v118 = 0xD000000000000024;
          id v119 = &v294;
LABEL_125:
          unint64_t v114 = *(v119 - 32) | 0x8000000000000000;
          if (v110 == v118) {
            goto LABEL_126;
          }
          goto LABEL_127;
        case 20:
          unint64_t v114 = 0xE800000000000000;
          if (v110 != 0x7367617468736168) {
            goto LABEL_127;
          }
          goto LABEL_126;
        case 21:
          unint64_t v114 = 0xEE0073656C646E61;
          if (v110 != 0x48746361746E6F63) {
            goto LABEL_127;
          }
LABEL_126:
          if (v109 == v114)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            goto LABEL_132;
          }
LABEL_127:
          char v120 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v120 & 1) == 0)
          {
            if (v105 == v106)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
LABEL_224:
              os_log_t v240 = self;
              NSString v241 = v292;
              [v240 noSuchObjectErrorWithObjectID:v292];
              swift_willThrow();

              return;
            }
            continue;
          }
          swift_bridgeObjectRelease();
LABEL_132:
          uint64_t v121 = *(void **)(v296 + 88);
          type metadata accessor for REMCDSavedReminder();
          ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
          id v123 = [ObjCClassFromMetadata entity];
          id v124 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v123 insertIntoManagedObjectContext:v121];
          id v125 = v289;
          id v126 = v124;
          [v121 assignObject:v126 toPersistentStore:v125];

          id v127 = v126;
          id v128 = [v292 uuid];
          uint64_t v129 = (uint64_t)v290;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          (*(void (**)(uint64_t, void, uint64_t, uint64_t))v258)(v129, 0, 1, v107);
          uint64_t v130 = v107;
          uint64_t v131 = v291;
          sub_1001248EC(v129, v291);
          int v132 = (*v257)(v131, 1, v130);
          Class isa = 0;
          if (v132 != 1)
          {
            Class isa = UUID._bridgeToObjectiveC()().super.isa;
            ((void (*)(uint64_t, uint64_t))v288)(v131, v294);
          }
          [v127 setIdentifier:isa v242];

          sub_1001260DC(v129);
          uint64_t v134 = v292;
          uint64_t v100 = v296;
          swift_retain_n();
          id v135 = v127;
          uint64_t v136 = v134;
          unint64_t v104 = (char *)v135;
          unint64_t v137 = Logger.logObject.getter();
          os_log_type_t v138 = static os_log_type_t.default.getter();
          int v139 = v138;
          if (os_log_type_enabled(v137, v138))
          {
            uint64_t v140 = swift_slowAlloc();
            LODWORD(v278) = v139;
            uint64_t v141 = v140;
            uint64_t v142 = swift_slowAlloc();
            uint64_t v288 = v104;
            char v143 = (void *)v142;
            uint64_t v279 = (char *)swift_slowAlloc();
            v302 = v279;
            *(_DWORD *)uint64_t v141 = v252;
            v305 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v302);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v141 + 12) = 2082;
            sub_10010B4E8(v260, (uint64_t)v304);
            sub_10073F754((uint64_t)v304, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v144 = sub_100696CF4();
            unint64_t v146 = v145;
            sub_10073F754((uint64_t)v304, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            v305 = sub_1000C51B8(v144, v146, (uint64_t *)&v302);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v141 + 22) = 2114;
            v305 = v136;
            uint64_t v147 = v136;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *char v143 = v136;

            *(_WORD *)(v141 + 32) = 2112;
            unint64_t v148 = [v288 objectID];
            v305 = v148;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            v143[1] = v148;
            uint64_t v100 = v296;

            _os_log_impl((void *)&_mh_execute_header, v137, (os_log_type_t)v278, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v141, 0x2Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            unint64_t v104 = v288;
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_release_n();
          }
          swift_beginAccess();
          sub_1001A6B7C((uint64_t)v104, (uint64_t)v136);
          swift_endAccess();
LABEL_138:

          uint64_t v149 = v97[2];
          if (!v149) {
            goto LABEL_150;
          }
          uint64_t v288 = v104;
          swift_bridgeObjectRetain();
          uint64_t v150 = 0;
          while (2)
          {
            if (((*(unsigned int *)(v100 + 64) | ((unint64_t)*(unsigned __int16 *)(v100 + 68) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
            {
              char v151 = *((unsigned char *)v97 + v150 + 32);
              id v152 = Logger.logObject.getter();
              os_log_type_t v153 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v152, v153))
              {
                uint64_t v154 = swift_slowAlloc();
                v302 = (char *)swift_slowAlloc();
                *(_DWORD *)uint64_t v154 = v282;
                LOBYTE(v305) = v151;
                uint64_t v155 = String.init<A>(describing:)();
                *(void *)(v154 + 4) = sub_1000C51B8(v155, v156, (uint64_t *)&v302);
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v152, v153, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v154, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                uint64_t v100 = v296;
                swift_slowDealloc();
              }
            }
            LODWORD(v14) = *(_DWORD *)(v100 + 64);
            if (*(unsigned __int16 *)(v100 + 68) >> 14 == 2 && (*(_DWORD *)(v100 + 64) & 1) == 0)
            {
              uint64_t v228 = v286;
              if (qword_100907AE0 == -1) {
                goto LABEL_221;
              }
              goto LABEL_241;
            }
            if (v149 != ++v150) {
              continue;
            }
            break;
          }
          swift_bridgeObjectRelease();
          unint64_t v104 = v288;
LABEL_150:
          swift_retain_n();
          uint64_t v158 = v292;
          swift_bridgeObjectRetain_n();
          unint64_t v159 = v104;
          unint64_t v160 = v158;
          unint64_t v161 = v159;
          id v162 = Logger.logObject.getter();
          int v163 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v162, (os_log_type_t)v163))
          {
            uint64_t v278 = v162;
            LODWORD(v248) = v163;
            id v164 = v160;
            uint64_t v165 = swift_slowAlloc();
            uint64_t v288 = (char *)swift_slowAlloc();
            uint64_t v249 = (char *)swift_slowAlloc();
            v302 = v249;
            *(_DWORD *)uint64_t v165 = v253;
            v305 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v302);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v165 + 12) = 2082;
            sub_10010B4E8(v260, (uint64_t)v303);
            sub_10073F754((uint64_t)v303, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v166 = sub_100696CF4();
            char v292 = v161;
            unint64_t v168 = v167;
            sub_10073F754((uint64_t)v303, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            v305 = sub_1000C51B8(v166, v168, (uint64_t *)&v302);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            unint64_t v169 = v292;
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v165 + 22) = 2114;
            v305 = v164;
            unint64_t v170 = v164;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            uint64_t v279 = (char *)v164;
            unint64_t v171 = v288;
            *(void *)uint64_t v288 = v164;

            *(_WORD *)(v165 + 32) = 2112;
            unint64_t v172 = [v169 objectID];
            v305 = v172;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *((void *)v171 + 1) = v172;

            uint64_t v277 = v165;
            *(_WORD *)(v165 + 42) = 2082;
            int64_t v173 = v97[2];
            if (v173)
            {
              v305 = _swiftEmptyArrayStorage;
              sub_1001DE058(0, v173, 0);
              uint64_t v174 = 0;
              uint64_t v175 = v305;
              do
              {
                unint64_t v176 = 0xE600000000000000;
                uint64_t v177 = 0x7961446C6C61;
                switch(*((unsigned char *)v97 + v174 + 32))
                {
                  case 1:
                    uint64_t v177 = 0xD000000000000010;
                    os_log_t v180 = (uint64_t *)&v302;
                    goto LABEL_177;
                  case 2:
                    uint64_t v177 = 0xD000000000000017;
                    os_log_t v180 = &v301;
                    goto LABEL_177;
                  case 3:
                    int v179 = (unint64_t *)&v300;
                    goto LABEL_172;
                  case 4:
                    uint64_t v178 = 0x44656C746974;
                    goto LABEL_167;
                  case 5:
                    unint64_t v176 = 0xE800000000000000;
                    uint64_t v177 = 0x797469726F697270;
                    break;
                  case 6:
                    unint64_t v176 = 0xE700000000000000;
                    uint64_t v177 = 0x64656767616C66;
                    break;
                  case 7:
                    uint64_t v177 = 0x6E6F697461657263;
                    unint64_t v176 = 0xEC00000065746144;
                    break;
                  case 8:
                    uint64_t v177 = 0x6E65727275636572;
                    unint64_t v176 = 0xEF73656C75526563;
                    break;
                  case 9:
                    uint64_t v177 = 0xD000000000000013;
                    os_log_t v180 = (uint64_t *)&v299;
                    goto LABEL_177;
                  case 0xA:
                    int v179 = (unint64_t *)&v298;
                    goto LABEL_172;
                  case 0xB:
                    unint64_t v176 = 0xE800000000000000;
                    uint64_t v177 = 0x656E6F5A656D6974;
                    break;
                  case 0xC:
                    break;
                  case 0xD:
                    int v179 = &v297;
LABEL_172:
                    unint64_t v176 = *(v179 - 32) | 0x8000000000000000;
                    uint64_t v177 = 0xD000000000000011;
                    break;
                  case 0xE:
                    uint64_t v178 = 0x447365746F6ELL;
LABEL_167:
                    uint64_t v177 = v178 & 0xFFFFFFFFFFFFLL | 0x636F000000000000;
                    unint64_t v176 = 0xED0000746E656D75;
                    break;
                  case 0xF:
                    uint64_t v177 = 0x656D686361747461;
                    unint64_t v176 = 0xEB0000000073746ELL;
                    break;
                  case 0x10:
                    uint64_t v177 = 0x736D72616C61;
                    break;
                  case 0x11:
                    uint64_t v177 = 0xD000000000000016;
                    os_log_t v180 = &v296;
                    goto LABEL_177;
                  case 0x12:
                    uint64_t v177 = 0xD00000000000001ALL;
                    os_log_t v180 = &v295;
                    goto LABEL_177;
                  case 0x13:
                    uint64_t v177 = 0xD000000000000024;
                    os_log_t v180 = &v294;
LABEL_177:
                    unint64_t v176 = *(v180 - 32) | 0x8000000000000000;
                    break;
                  case 0x14:
                    unint64_t v176 = 0xE800000000000000;
                    uint64_t v177 = 0x7367617468736168;
                    break;
                  case 0x15:
                    uint64_t v177 = 0x48746361746E6F63;
                    unint64_t v176 = 0xEE0073656C646E61;
                    break;
                  default:
                    unint64_t v176 = 0xE800000000000000;
                    uint64_t v177 = 0x44497463656A626FLL;
                    break;
                }
                v305 = v175;
                unint64_t v182 = (unint64_t)v175[2].isa;
                unint64_t v181 = (unint64_t)v175[3].isa;
                if (v182 >= v181 >> 1)
                {
                  sub_1001DE058(v181 > 1, v182 + 1, 1);
                  uint64_t v175 = v305;
                }
                ++v174;
                v175[2].Class isa = (Class)(v182 + 1);
                unint64_t v183 = &v175[2 * v182];
                v183[4].Class isa = (Class)v177;
                v183[5].Class isa = (Class)v176;
              }
              while (v173 != v174);
            }
            swift_bridgeObjectRelease();
            unint64_t v184 = v278;
            uint64_t v185 = v277;
            uint64_t v186 = Array.description.getter();
            unint64_t v188 = v187;
            swift_bridgeObjectRelease();
            v305 = sub_1000C51B8(v186, v188, (uint64_t *)&v302);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(_WORD *)(v185 + 52) = 1024;
            uint64_t v100 = v296;
            int v189 = *(unsigned __int8 *)(v296 + 104);
            swift_release();
            LODWORD(v305) = v189;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, v184, (os_log_type_t)v248, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v185, 0x3Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            unint64_t v160 = v279;
            unint64_t v161 = v292;
          }
          else
          {

            swift_release_n();
            swift_bridgeObjectRelease_n();
          }
          uint64_t v190 = v293;
          sub_1004FA5F8(v287, (uint64_t *)v161, (uint64_t)v97, 0, (const char *)v100);
          if (v190)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            return;
          }
          uint64_t v293 = 0;
          id v191 = [v161 changedValues];
          uint64_t v192 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          int v193 = v161;
          BOOL v194 = v263;
          swift_beginAccess();
          unsigned int v195 = v160;
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v305 = *v194;
          *BOOL v194 = 0x8000000000000000;
          sub_1002C4FAC(v192, v195, isUniquelyReferenced_nonNull_native);
          *BOOL v194 = v305;

          swift_bridgeObjectRelease();
          swift_endAccess();
          int v197 = *(unsigned __int8 *)(v100 + 104);
          uint64_t v14 = v193;
          swift_bridgeObjectRelease();
          if (v149 && (v197 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            [v14 updateChangeCount];

            id v74 = v285;
            goto LABEL_217;
          }
          uint64_t v198 = v195;
          swift_retain_n();
          unsigned int v199 = v198;
          uint64_t v200 = v192;
          swift_bridgeObjectRetain();
          os_log_t v201 = Logger.logObject.getter();
          int v202 = static os_log_type_t.default.getter();
          BOOL v203 = os_log_type_enabled(v201, (os_log_type_t)v202);
          uint64_t v32 = v297;
          if (v203)
          {
            int v244 = v202;
            os_log_t v247 = v201;
            id v248 = v14;
            unint64_t v31 = swift_slowAlloc();
            uint64_t v249 = (char *)swift_slowAlloc();
            long long v245 = (char *)swift_slowAlloc();
            v302 = v245;
            *(_DWORD *)unint64_t v31 = v250;
            v305 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v302);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v31 + 12) = 1024;
            swift_release();
            LODWORD(v305) = v197;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release();
            *(_WORD *)(v31 + 18) = 1024;
            LODWORD(v305) = 0;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v31 + 24) = 2114;
            v305 = v199;
            unint64_t v204 = v199;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(void *)uint64_t v249 = v199;

            long long v243 = v204;
            long long v246 = (uint8_t *)v31;
            *(_WORD *)(v31 + 34) = 2082;
            int64_t v25 = *(void *)(v200 + 16);
            uint64_t v14 = (char *)v200;
            if (v25)
            {
              v305 = _swiftEmptyArrayStorage;
              swift_bridgeObjectRetain();
              sub_1001DE058(0, v25, 0);
              int v28 = v305;
              uint64_t v205 = sub_10072617C(v200);
              int v207 = v206;
              unint64_t v208 = 0;
              unint64_t v209 = (char *)(v200 + 64);
              char v210 = *(unsigned char *)(v200 + 32);
              uint64_t v277 = v206;
              uint64_t v242 = v200 + 96;
              uint64_t v278 = v25;
              uint64_t v279 = (char *)(v200 + 64);
              while (1)
              {
                if (v205 < 0 || v205 >= 1 << v210)
                {
                  __break(1u);
LABEL_232:
                  __break(1u);
LABEL_233:
                  __break(1u);
LABEL_234:
                  __break(1u);
LABEL_235:
                  __break(1u);
LABEL_236:
                  __break(1u);
LABEL_237:
                  __break(1u);
LABEL_238:
                  swift_bridgeObjectRetain();
                  uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
                  swift_bridgeObjectRelease();
                  goto LABEL_7;
                }
                unint64_t v31 = (unint64_t)v205 >> 6;
                int64_t v25 = 1 << v205;
                if ((*(void *)&v209[8 * ((unint64_t)v205 >> 6)] & (1 << v205)) == 0) {
                  goto LABEL_232;
                }
                if (*((_DWORD *)v14 + 9) != v207) {
                  goto LABEL_233;
                }
                uint64_t v288 = v208;
                uint64_t v212 = *((void *)v14 + 6) + 16 * v205;
                unint64_t v213 = *(objc_class **)(v212 + 8);
                char v292 = *(char **)v212;
                v305 = v28;
                unint64_t v215 = (unint64_t)v28[2].isa;
                unint64_t v214 = (unint64_t)v28[3].isa;
                uint64_t v32 = v215 + 1;
                swift_bridgeObjectRetain();
                if (v215 >= v214 >> 1)
                {
                  sub_1001DE058(v214 > 1, v215 + 1, 1);
                  int v28 = v305;
                }
                v28[2].Class isa = (Class)v32;
                unint64_t v216 = &v28[2 * v215];
                v216[4].Class isa = (Class)v292;
                v216[5].Class isa = v213;
                char v210 = v14[32];
                unint64_t v211 = 1 << v210;
                if (v205 >= 1 << v210) {
                  goto LABEL_234;
                }
                unint64_t v209 = v279;
                uint64_t v217 = *(void *)&v279[8 * v31];
                if ((v217 & v25) == 0) {
                  goto LABEL_235;
                }
                if (*((_DWORD *)v14 + 9) != v207) {
                  goto LABEL_236;
                }
                unint64_t v218 = v217 & (-2 << (v205 & 0x3F));
                if (v218)
                {
                  unint64_t v211 = __clz(__rbit64(v218)) | v205 & 0xFFFFFFFFFFFFFFC0;
                  uint64_t v32 = v297;
                  id v74 = v285;
                  int64_t v25 = (int64_t)v278;
                }
                else
                {
                  unint64_t v219 = v31 + 1;
                  unint64_t v220 = (v211 + 63) >> 6;
                  uint64_t v32 = v297;
                  id v74 = v285;
                  int64_t v25 = (int64_t)v278;
                  if (v31 + 1 < v220)
                  {
                    unint64_t v221 = *(void *)&v279[8 * v219];
                    if (!v221)
                    {
                      unint64_t v219 = v31 + 2;
                      if (v31 + 2 >= v220) {
                        goto LABEL_192;
                      }
                      unint64_t v221 = *(void *)&v279[8 * v219];
                      if (!v221)
                      {
                        unint64_t v219 = v31 + 3;
                        if (v31 + 3 >= v220) {
                          goto LABEL_192;
                        }
                        unint64_t v221 = *(void *)&v279[8 * v219];
                        if (!v221)
                        {
                          while (v220 - 4 != v31)
                          {
                            unint64_t v221 = *(void *)(v242 + 8 * v31++);
                            if (v221)
                            {
                              unint64_t v219 = v31 + 3;
                              goto LABEL_205;
                            }
                          }
                          goto LABEL_192;
                        }
                      }
                    }
LABEL_205:
                    unint64_t v211 = __clz(__rbit64(v221)) + (v219 << 6);
                  }
                }
LABEL_192:
                unint64_t v208 = v288 + 1;
                int v207 = v277;
                uint64_t v205 = v211;
                if (v288 + 1 == (char *)v25)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_216;
                }
              }
            }
            id v74 = v285;
LABEL_216:
            uint64_t v222 = v246;
            uint64_t v223 = Array.description.getter();
            unint64_t v225 = v224;
            swift_bridgeObjectRelease();
            v305 = sub_1000C51B8(v223, v225, (uint64_t *)&v302);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            os_log_t v226 = v247;
            _os_log_impl((void *)&_mh_execute_header, v247, (os_log_type_t)v244, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v222, 0x2Cu);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            id v227 = v248;
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_release_n();
            id v74 = v285;
          }
LABEL_217:
          unint64_t v72 = v273;
          uint64_t v55 = v284;
          unint64_t v73 = v261;
          if (v273 == v262) {
            goto LABEL_218;
          }
          break;
        default:
          goto LABEL_225;
      }
      break;
    }
  }
  __break(1u);
LABEL_240:
  __break(1u);
LABEL_241:
  swift_once();
  uint64_t v228 = v286;
LABEL_221:
  sub_10008E2DC(v228, (uint64_t)qword_100920A70);
  unint64_t v229 = Logger.logObject.getter();
  os_log_type_t v230 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v229, v230))
  {
    uint64_t v231 = swift_slowAlloc();
    v302 = (char *)swift_slowAlloc();
    *(_DWORD *)uint64_t v231 = 136446466;
    uint64_t v232 = sub_100662CC0(1);
    v305 = sub_1000C51B8(v232, v233, (uint64_t *)&v302);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v231 + 12) = 2082;
    uint64_t v234 = sub_100662CC0((__int16)v14);
    v305 = sub_1000C51B8(v234, v235, (uint64_t *)&v302);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v229, v230, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v231, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v236 = self;
  NSString v237 = String._bridgeToObjectiveC()();
  sub_100662CC0(1);
  NSString v238 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100662CC0((__int16)v14);
  NSString v239 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v236 unauthorizedErrorWithMissingEntitlement:v237 requestedAccessLevel:v238 currentAccesslevel:v239];

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
}

void sub_1006DCE50(void *a1, uint8_t *a2, NSObject *a3)
{
  long long v272 = a2;
  unint64_t v273 = (unint64_t)a1;
  uint64_t v5 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v5 - 8);
  uint64_t v268 = (uint64_t)&v231 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  os_log_t v267 = (char *)&v231 - v8;
  uint64_t v270 = type metadata accessor for UUID();
  uint64_t v269 = *(char **)(v270 - 8);
  __chkstk_darwin(v270);
  uint64_t v10 = (char *)&v231 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v231 - v12;
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v266 = *(void (***)(void, void, void))(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = ((char *)&v231 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  Class isa = a3[3].isa;
  long long v271 = (uint8_t *)a3[2].isa;
  Class v18 = a3[4].isa;
  uint64_t v274 = v3;
  uint64_t v19 = *(void *)(v3 + 72);
  v276[3] = v19;
  uint64_t v277 = v272;
  v276[2] = &v277;
  swift_bridgeObjectRetain();
  unint64_t v20 = v273;
  swift_bridgeObjectRetain();
  unint64_t v21 = v20;
  uint64_t v22 = (uint64_t)v275;
  int v23 = sub_100692158((uint64_t (*)(id *))sub_10074277C, v276, v21);
  uint64_t v275 = (uint8_t *)v22;
  if (v22) {
    goto LABEL_2;
  }
  unint64_t v264 = (unint64_t)isa;
  os_log_t v257 = v16;
  os_log_t v260 = a3;
  unint64_t v273 = (unint64_t)v23;
  uint64_t v259 = v19;
  Class v258 = v18;
  unint64_t v261 = v13;
  uint64_t v265 = v10;
  uint64_t v262 = v14;
  if (qword_1009073A0 != -1) {
    goto LABEL_147;
  }
  while (1)
  {
    uint64_t v24 = sub_10008E2DC(v262, (uint64_t)qword_100916070);
    unint64_t v25 = v273;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    long long v272 = (uint8_t *)v24;
    uint64_t v26 = Logger.logObject.getter();
    LOWORD(v27) = static os_log_type_t.info.getter();
    BOOL v28 = os_log_type_enabled(v26, (os_log_type_t)v27);
    unint64_t v29 = v25 >> 62;
    uint64_t v31 = v274;
    uint64_t v30 = (uint64_t)v275;
    *(void *)&long long v263 = v25 >> 62;
    if (v28)
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v277 = v32;
      *(_DWORD *)uint64_t v31 = 136446978;
      uint64_t v280 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v277);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v31 + 12) = 2048;
      uint64_t v256 = (uint64_t)v32;
      if (v29) {
        goto LABEL_156;
      }
      uint64_t v33 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_7:
      swift_bridgeObjectRelease();
      uint64_t v280 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 2082;
      sub_1000963CC(0, (unint64_t *)&qword_10090B040);
      id v34 = [(id)swift_getObjCClassFromMetadata() description];
      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v37 = v36;

      uint64_t v280 = sub_1000C51B8(v35, v37, (uint64_t *)&v277);
      unint64_t v25 = v273;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 32) = 2082;
      unint64_t v38 = v264;
      swift_bridgeObjectRetain();
      uint64_t v280 = sub_1000C51B8((uint64_t)v271, v38, (uint64_t *)&v277);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v27, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v31, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v31 = v274;
      uint64_t v30 = (uint64_t)v275;
      unint64_t v29 = v263;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    if (v29)
    {
      swift_bridgeObjectRetain();
      uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v39 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v39) {
      break;
    }
    uint64_t v277 = (uint8_t *)_swiftEmptyArrayStorage;
    uint64_t v26 = &v277;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v39 < 0) {
      goto LABEL_155;
    }
    uint64_t v40 = 0;
    while (v39 != v40)
    {
      if ((v25 & 0xC000000000000001) != 0) {
        id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v41 = *(id *)(v25 + 8 * v40 + 32);
      }
      id v42 = v41;
      unsigned __int16 v43 = (unsigned __int16)sub_100693E40([v42 remObjectID]);
      if (v30)
      {

        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      LOWORD(v27) = v43;
      ++v40;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v39 == v40)
      {
        id v44 = v277;
        uint64_t v31 = v274;
        unint64_t v29 = v263;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_147:
    swift_once();
  }
  id v44 = (uint8_t *)_swiftEmptyArrayStorage;
LABEL_22:
  uint64_t v45 = *(void *)(v31 + 96);
  if (v45 <= 1)
  {
    if (v45)
    {
      if (v45 != 1) {
        goto LABEL_160;
      }
      swift_bridgeObjectRelease();
      uint64_t v62 = Logger.logObject.getter();
      os_log_type_t v63 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v62, v63))
      {
        os_log_type_t v64 = (uint8_t *)swift_slowAlloc();
        BOOL v65 = (uint8_t *)swift_slowAlloc();
        LOWORD(v27) = (_WORD)v65;
        uint64_t v277 = v65;
        *(_DWORD *)os_log_type_t v64 = 136315138;
        uint64_t v275 = v64 + 4;
        id v66 = [self cdEntityName];
        uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v69 = v68;

        uint64_t v70 = v67;
        uint64_t v53 = v30;
        uint64_t v71 = v274;
        uint64_t v280 = sub_1000C51B8(v70, v69, (uint64_t *)&v277);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v31 = v71;
        unint64_t v29 = v263;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v62, v63, "Skipping fetch during upsert {CDType: %s}", v64, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v53 = v30;
      }

      uint64_t v56 = v265;
      unint64_t v57 = v261;
      os_log_t v58 = v260;
      unint64_t v264 = sub_1002EFD98((uint64_t)_swiftEmptyArrayStorage);
      if (!v29) {
        goto LABEL_34;
      }
LABEL_40:
      swift_bridgeObjectRetain();
      uint64_t v61 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
  }
  else if ((unint64_t)(v45 - 2) >= 3 && v45 != 4499 && v45 != 4599)
  {
LABEL_160:
    ((void (**)(os_log_t, uint8_t *, uint64_t))v266)[2](v257, v272, v262);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
    __break(1u);
    JUMPOUT(0x1006DF398);
  }
  uint64_t v275 = v44;
  uint64_t v46 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v46, v47))
  {
    os_log_type_t v48 = (uint8_t *)swift_slowAlloc();
    uint64_t v277 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v48 = 136315138;
    long long v271 = v48 + 4;
    id v49 = [self cdEntityName];
    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v52 = v51;

    uint64_t v53 = v30;
    uint64_t v54 = v274;
    uint64_t v55 = v50;
    unint64_t v29 = v263;
    uint64_t v280 = sub_1000C51B8(v55, v52, (uint64_t *)&v277);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "Performing fetch during upsert {CDType: %s}", v48, 0xCu);
    swift_arrayDestroy();
    uint64_t v31 = v54;
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v56 = v265;
    unint64_t v57 = v261;
  }
  else
  {

    uint64_t v56 = v265;
    unint64_t v57 = v261;
    uint64_t v53 = v30;
  }
  os_log_t v58 = v260;
  LOWORD(v27) = (_WORD)v275;
  long long v59 = sub_100717658((uint64_t)v275, (uint64_t)v260);
  swift_bridgeObjectRelease();
  if (v53) {
    goto LABEL_2;
  }
  unint64_t v264 = (unint64_t)v59;
  if (v29) {
    goto LABEL_40;
  }
LABEL_34:
  uint64_t v61 = *(void *)((v273 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_41:
  if (!v61)
  {
LABEL_136:
    swift_bridgeObjectRelease();
LABEL_2:
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v72 = 0;
  uint64_t v249 = v31 + 24;
  os_log_t v248 = v58 + 6;
  os_log_t v252 = v58 + 7;
  unint64_t v73 = v273 & 0xC000000000000001;
  uint64_t v245 = v273 & 0xFFFFFFFFFFFFFF8;
  int v244 = (void *)(v273 + 32);
  uint64_t v254 = v269 + 8;
  os_log_t v247 = v269 + 56;
  long long v246 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v269 + 48);
  unint64_t v255 = &v281;
  long long v243 = (char *)&v280 + 4;
  *(void *)&long long v60 = 136446978;
  long long v241 = v60;
  *(void *)&long long v60 = 136446210;
  long long v263 = v60;
  *(void *)&long long v60 = 136447490;
  long long v242 = v60;
  *(void *)&long long v60 = 136447234;
  long long v239 = v60;
  os_log_t v240 = (char *)&type metadata for Any + 8;
  unint64_t v250 = v273 & 0xC000000000000001;
  uint64_t v251 = v61;
  while (1)
  {
    if (v73)
    {
      id v74 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v72 >= *(void *)(v245 + 16)) {
        goto LABEL_158;
      }
      id v74 = (id)v244[v72];
    }
    uint64_t v75 = v53;
    unint64_t v253 = v72 + 1;
    if (__OFADD__(v72, 1)) {
      break;
    }
    id v76 = v56;
    id v77 = v74;
    uint64_t v269 = (char *)sub_100693E40([v77 remObjectID]);
    if (v75)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }

    uint64_t v266 = (void (**)(void, void, void))v77;
    id v78 = [v77 accountID];
    id v79 = [v78 uuid];

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v80 = UUID.uuidString.getter();
    uint64_t v81 = v57;
    uint64_t v82 = v80;
    uint64_t v84 = v83;
    uint64_t v85 = *(void (**)(char *, uint64_t))v254;
    uint64_t v86 = v270;
    (*(void (**)(char *, uint64_t))v254)(v81, v270);
    id v87 = [self localInternalAccountID];
    id v88 = [v87 uuid];

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v89 = UUID.uuidString.getter();
    uint64_t v91 = v90;
    v85(v76, v86);
    if (v82 == v89 && v84 == v91)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v92 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v92 & 1) == 0)
      {
        uint64_t v94 = v259;
        goto LABEL_58;
      }
    }
    int v93 = 0x7FFFFFFF;
    uint64_t v94 = v259;
    switch(*(unsigned __int16 *)(v274 + 68) >> 14)
    {
      case 2:
        int v93 = *(_DWORD *)(v274 + 64);
        break;
      case 3:
        break;
      default:
        int v93 = 2147483519;
        break;
    }
    sub_100662770(2, v93);
LABEL_58:
    char v95 = sub_10072FFE4(v266, v94, (uint64_t)&type metadata for REMReminderStorageCDIngestor.ValueKey, (uint64_t (*)(void))sub_100692920, &qword_100921BF8);
    char v96 = sub_100698B20();
    uint64_t v97 = *(void *)(v264 + 16);
    uint64_t v275 = 0;
    if (v97)
    {
      char v98 = v269;
      unint64_t v99 = v264;
      unint64_t v100 = sub_10030703C(v98);
      if (v101)
      {
        os_log_t v102 = (os_log_t)*(id *)(*(void *)(v99 + 56) + 8 * v100);
        uint64_t v31 = v274;
        goto LABEL_80;
      }
    }
    if (v96 == 38 || (uint64_t v103 = v95[2]) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_142:
      unint64_t v229 = self;
      os_log_type_t v230 = v269;
      [v229 noSuchObjectErrorWithObjectID:v269];
      swift_willThrow();

      return;
    }
    swift_bridgeObjectRetain();
    uint64_t v104 = 0;
    while (1)
    {
      uint64_t v105 = sub_10024776C(*((unsigned char *)v95 + v104 + 32));
      uint64_t v107 = v106;
      if (v105 == sub_10024776C(v96) && v107 == v108)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_74;
      }
      char v110 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v110) {
        break;
      }
      if (v103 == ++v104)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_142;
      }
    }
    swift_bridgeObjectRelease();
LABEL_74:
    uint64_t v111 = *(void **)(v274 + 88);
    sub_1000963CC(0, (unint64_t *)&qword_10090B040);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    id v113 = [ObjCClassFromMetadata entity];
    id v114 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v113 insertIntoManagedObjectContext:v111];
    uint64_t v115 = v258;
    id v116 = v114;
    [v111 assignObject:v116 toPersistentStore:v115];

    id v117 = v116;
    id v118 = [v269 uuid];
    uint64_t v119 = (uint64_t)v267;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v120 = v270;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))v247)(v119, 0, 1, v270);
    uint64_t v121 = v268;
    sub_1001248EC(v119, v268);
    Class v122 = 0;
    if ((*v246)(v121, 1, v120) != 1)
    {
      Class v122 = UUID._bridgeToObjectiveC()().super.isa;
      v85((char *)v121, v120);
    }
    [v117 setIdentifier:v122 v231];

    sub_1001260DC(v119);
    id v123 = v269;
    uint64_t v31 = v274;
    swift_retain_n();
    id v124 = v117;
    id v125 = v123;
    os_log_t v102 = (os_log_t)v124;
    id v126 = Logger.logObject.getter();
    os_log_type_t v127 = static os_log_type_t.default.getter();
    int v128 = v127;
    if (os_log_type_enabled(v126, v127))
    {
      uint64_t v129 = swift_slowAlloc();
      os_log_t v260 = v126;
      uint64_t v130 = v129;
      uint64_t v131 = (void *)swift_slowAlloc();
      long long v271 = (uint8_t *)swift_slowAlloc();
      uint64_t v277 = v271;
      *(_DWORD *)uint64_t v130 = v241;
      LODWORD(v257) = v128;
      uint64_t v280 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v277);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v130 + 12) = 2082;
      sub_10010B4E8(v249, (uint64_t)v279);
      sub_10073F754((uint64_t)v279, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v132 = sub_100696CF4();
      unint64_t v134 = v133;
      sub_10073F754((uint64_t)v279, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      uint64_t v280 = sub_1000C51B8(v132, v134, (uint64_t *)&v277);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v130 + 22) = 2114;
      uint64_t v280 = v125;
      id v135 = v125;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v131 = v125;

      *(_WORD *)(v130 + 32) = 2112;
      uint64_t v136 = [v102 objectID];
      uint64_t v280 = v136;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v131[1] = v136;

      os_log_t v137 = v260;
      _os_log_impl((void *)&_mh_execute_header, v260, (os_log_type_t)v257, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v130, 0x2Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      uint64_t v31 = v274;
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v75 = (uint64_t)v275;
    id v76 = v265;
    swift_beginAccess();
    sub_1001A6B7C((uint64_t)v102, (uint64_t)v125);
    swift_endAccess();
LABEL_80:

    uint64_t v138 = v95[2];
    long long v271 = (uint8_t *)v138;
    if (!v138) {
      goto LABEL_92;
    }
    os_log_t v260 = v102;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v138; ++i)
    {
      if (((*(unsigned int *)(v31 + 64) | ((unint64_t)*(unsigned __int16 *)(v31 + 68) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
      {
        char v140 = *((unsigned char *)v95 + i + 32);
        uint64_t v141 = Logger.logObject.getter();
        os_log_type_t v142 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v141, v142))
        {
          uint64_t v143 = swift_slowAlloc();
          uint64_t v277 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v143 = v263;
          LOBYTE(v280) = v140;
          uint64_t v144 = String.init<A>(describing:)();
          *(void *)(v143 + 4) = sub_1000C51B8(v144, v145, (uint64_t *)&v277);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v141, v142, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v143, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        uint64_t v31 = v274;
        uint64_t v138 = (uint64_t)v271;
      }
      LODWORD(v27) = *(_DWORD *)(v31 + 64);
      if (*(unsigned __int16 *)(v31 + 68) >> 14 == 2 && (*(_DWORD *)(v31 + 64) & 1) == 0)
      {
        uint64_t v216 = v262;
        if (qword_100907AE0 == -1) {
          goto LABEL_139;
        }
        goto LABEL_159;
      }
    }
    swift_bridgeObjectRelease();
    os_log_t v102 = v260;
LABEL_92:
    swift_retain_n();
    uint64_t v147 = v269;
    swift_bridgeObjectRetain_n();
    unint64_t v148 = v102;
    uint64_t v149 = v147;
    uint64_t v150 = v148;
    char v151 = Logger.logObject.getter();
    int v152 = static os_log_type_t.default.getter();
    BOOL v153 = os_log_type_enabled(v151, (os_log_type_t)v152);
    uint64_t v269 = v149;
    if (v153)
    {
      int v238 = v152;
      os_log_t v257 = v151;
      uint64_t v154 = swift_slowAlloc();
      os_log_t v260 = (os_log_t)swift_slowAlloc();
      uint64_t v256 = swift_slowAlloc();
      uint64_t v277 = (uint8_t *)v256;
      *(_DWORD *)uint64_t v154 = v242;
      uint64_t v280 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v277);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v154 + 12) = 2082;
      sub_10010B4E8(v249, (uint64_t)v278);
      sub_10073F754((uint64_t)v278, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v155 = sub_100696CF4();
      unint64_t v157 = v156;
      sub_10073F754((uint64_t)v278, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      uint64_t v280 = sub_1000C51B8(v155, v157, (uint64_t *)&v277);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v154 + 22) = 2114;
      uint64_t v280 = v149;
      uint64_t v158 = v149;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      unint64_t v159 = v150;
      os_log_t v160 = v260;
      v260->Class isa = (Class)v149;

      *(_WORD *)(v154 + 32) = 2112;
      unint64_t v161 = [v159 objectID];
      uint64_t v280 = v161;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      os_log_t v162 = v160;
      uint64_t v150 = v159;
      v162[1].Class isa = (Class)v161;

      *(_WORD *)(v154 + 42) = 2082;
      int64_t v163 = v95[2];
      if (v163)
      {
        NSString v237 = v159;
        uint64_t v280 = _swiftEmptyArrayStorage;
        sub_1001DE058(0, v163, 0);
        uint64_t v164 = 0;
        uint64_t v165 = v280;
        do
        {
          uint64_t v166 = sub_10024776C(*((unsigned char *)v95 + v164 + 32));
          unint64_t v168 = v167;
          uint64_t v280 = v165;
          unint64_t v170 = (unint64_t)v165[2].isa;
          unint64_t v169 = (unint64_t)v165[3].isa;
          if (v170 >= v169 >> 1)
          {
            sub_1001DE058(v169 > 1, v170 + 1, 1);
            uint64_t v165 = v280;
          }
          ++v164;
          v165[2].Class isa = (Class)(v170 + 1);
          unint64_t v171 = &v165[2 * v170];
          v171[4].Class isa = (Class)v166;
          v171[5].Class isa = v168;
        }
        while (v163 != v164);
        swift_bridgeObjectRelease();
        uint64_t v31 = v274;
        uint64_t v150 = v237;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v172 = Array.description.getter();
      unint64_t v174 = v173;
      swift_bridgeObjectRelease();
      uint64_t v280 = sub_1000C51B8(v172, v174, (uint64_t *)&v277);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_WORD *)(v154 + 52) = 1024;
      int v175 = *(unsigned __int8 *)(v31 + 104);
      swift_release();
      LODWORD(v280) = v175;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      os_log_t v176 = v257;
      _os_log_impl((void *)&_mh_execute_header, v257, (os_log_type_t)v238, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v154, 0x3Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v75 = (uint64_t)v275;
      id v76 = v265;
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v177 = v266;
    sub_100253E00(v266, v150, (uint64_t)v95, v31);
    if (v75)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      return;
    }
    id v178 = [v150 changedValues];
    int v179 = v150;
    uint64_t v180 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v181 = (NSObject **)v252;
    swift_beginAccess();
    unint64_t v182 = v269;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v280 = *v181;
    *unint64_t v181 = 0x8000000000000000;
    sub_1002C4FAC(v180, v182, isUniquelyReferenced_nonNull_native);
    *unint64_t v181 = v280;

    swift_bridgeObjectRelease();
    swift_endAccess();
    int v184 = *(unsigned __int8 *)(v31 + 104);
    unint64_t v27 = v179;
    swift_bridgeObjectRelease();
    if (v271 && (v184 & 1) != 0)
    {
      uint64_t v56 = v76;
      uint64_t v53 = 0;
      swift_bridgeObjectRelease();
      [(id)v27 updateChangeCount];

      goto LABEL_135;
    }
    uint64_t v185 = v182;
    swift_retain_n();
    uint64_t v186 = v185;
    swift_bridgeObjectRetain();
    unint64_t v187 = Logger.logObject.getter();
    int v238 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v187, (os_log_type_t)v238))
    {
      os_log_t v235 = v187;
      id v236 = (id)v27;
      uint64_t v188 = swift_slowAlloc();
      NSString v237 = swift_slowAlloc();
      unint64_t v233 = (uint8_t *)swift_slowAlloc();
      uint64_t v277 = v233;
      *(_DWORD *)uint64_t v188 = v239;
      uint64_t v280 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v277);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v188 + 12) = 1024;
      swift_release();
      LODWORD(v280) = v184;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      *(_WORD *)(v188 + 18) = 1024;
      LODWORD(v280) = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v188 + 24) = 2114;
      long long v271 = (uint8_t *)(v188 + 26);
      uint64_t v280 = v186;
      int v189 = v186;
      uint64_t v190 = v186;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v237->Class isa = (Class)v189;

      uint64_t v232 = v190;
      uint64_t v234 = (uint8_t *)v188;
      *(_WORD *)(v188 + 34) = 2082;
      unint64_t v27 = *(void *)(v180 + 16);
      if (v27)
      {
        uint64_t v280 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_1001DE058(0, v27, 0);
        uint64_t v26 = v280;
        uint64_t v191 = sub_10072617C(v180);
        int v193 = v192;
        BOOL v194 = 0;
        os_log_t v195 = (os_log_t)(v180 + 64);
        char v196 = *(unsigned char *)(v180 + 32);
        uint64_t v256 = v192;
        uint64_t v231 = v180 + 96;
        uint64_t v275 = 0;
        os_log_t v257 = (os_log_t)v27;
        os_log_t v260 = (os_log_t)(v180 + 64);
        while (1)
        {
          if (v191 < 0 || v191 >= 1 << v196)
          {
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            swift_bridgeObjectRetain();
            uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            goto LABEL_7;
          }
          unint64_t v27 = (unint64_t)v191 >> 6;
          if (((uint64_t)v195[(unint64_t)v191 >> 6].isa & (1 << v191)) == 0) {
            goto LABEL_150;
          }
          if (*(_DWORD *)(v180 + 36) != v193) {
            goto LABEL_151;
          }
          uint64_t v269 = v194;
          uint64_t v200 = (uint64_t *)(*(void *)(v180 + 48) + 16 * v191);
          long long v271 = (uint8_t *)*v200;
          uint64_t v201 = v180;
          uint64_t v202 = v200[1];
          uint64_t v280 = v26;
          unint64_t v204 = (unint64_t)v26[2].isa;
          unint64_t v203 = (unint64_t)v26[3].isa;
          uint64_t v31 = v204 + 1;
          swift_bridgeObjectRetain();
          if (v204 >= v203 >> 1)
          {
            sub_1001DE058(v203 > 1, v204 + 1, 1);
            uint64_t v26 = v280;
          }
          v26[2].Class isa = (Class)v31;
          uint64_t v205 = &v26[2 * v204];
          v205[4].Class isa = (Class)v271;
          v205[5].Class isa = (Class)v202;
          char v196 = *(unsigned char *)(v201 + 32);
          unint64_t v197 = 1 << v196;
          if (v191 >= 1 << v196) {
            goto LABEL_152;
          }
          os_log_t v195 = v260;
          Class v206 = v260[v27].isa;
          if (((unint64_t)v206 & (1 << v191)) == 0) {
            goto LABEL_153;
          }
          uint64_t v180 = v201;
          if (*(_DWORD *)(v201 + 36) != v193) {
            goto LABEL_154;
          }
          unint64_t v207 = (unint64_t)v206 & (-2 << (v191 & 0x3F));
          if (v207)
          {
            unint64_t v197 = __clz(__rbit64(v207)) | v191 & 0xFFFFFFFFFFFFFFC0;
            uint64_t v198 = (uint64_t)v275;
            unsigned int v199 = v265;
          }
          else
          {
            unint64_t v208 = v27 + 1;
            unint64_t v209 = (v197 + 63) >> 6;
            uint64_t v198 = (uint64_t)v275;
            unsigned int v199 = v265;
            if (v27 + 1 < v209)
            {
              Class v210 = v260[v208].isa;
              if (!v210)
              {
                unint64_t v208 = v27 + 2;
                if (v27 + 2 >= v209) {
                  goto LABEL_110;
                }
                Class v210 = v260[v208].isa;
                if (!v210)
                {
                  unint64_t v208 = v27 + 3;
                  if (v27 + 3 >= v209) {
                    goto LABEL_110;
                  }
                  Class v210 = v260[v208].isa;
                  if (!v210)
                  {
                    while (v209 - 4 != v27)
                    {
                      Class v210 = *(Class *)(v231 + 8 * v27++);
                      if (v210)
                      {
                        unint64_t v208 = v27 + 3;
                        goto LABEL_123;
                      }
                    }
                    goto LABEL_110;
                  }
                }
              }
LABEL_123:
              unint64_t v197 = __clz(__rbit64((unint64_t)v210)) + (v208 << 6);
            }
          }
LABEL_110:
          BOOL v194 = v269 + 1;
          int v193 = v256;
          uint64_t v191 = v197;
          LOWORD(v27) = (_WORD)v257;
          if (v269 + 1 == (char *)v257)
          {
            uint64_t v56 = v199;
            uint64_t v53 = v198;
            swift_bridgeObjectRelease();
            goto LABEL_134;
          }
        }
      }
      uint64_t v56 = v76;
      uint64_t v53 = 0;
LABEL_134:
      unint64_t v211 = v234;
      uint64_t v212 = Array.description.getter();
      unint64_t v27 = v213;
      swift_bridgeObjectRelease();
      uint64_t v280 = sub_1000C51B8(v212, v27, (uint64_t *)&v277);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v214 = v235;
      _os_log_impl((void *)&_mh_execute_header, v235, (os_log_type_t)v238, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v211, 0x2Cu);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      id v215 = v236;
    }
    else
    {
      uint64_t v56 = v76;
      uint64_t v53 = 0;

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
LABEL_135:
    unint64_t v72 = v253;
    unint64_t v57 = v261;
    unint64_t v73 = v250;
    if (v253 == v251) {
      goto LABEL_136;
    }
  }
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  swift_once();
  uint64_t v216 = v262;
LABEL_139:
  sub_10008E2DC(v216, (uint64_t)qword_100920A70);
  uint64_t v217 = Logger.logObject.getter();
  os_log_type_t v218 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v217, v218))
  {
    uint64_t v219 = swift_slowAlloc();
    uint64_t v277 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v219 = 136446466;
    uint64_t v220 = sub_100662CC0(1);
    uint64_t v280 = sub_1000C51B8(v220, v221, (uint64_t *)&v277);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v219 + 12) = 2082;
    uint64_t v222 = sub_100662CC0(v27);
    uint64_t v280 = sub_1000C51B8(v222, v223, (uint64_t *)&v277);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v217, v218, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v219, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  os_log_t v224 = v260;
  unint64_t v225 = self;
  NSString v226 = String._bridgeToObjectiveC()();
  sub_100662CC0(1);
  NSString v227 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100662CC0(v27);
  NSString v228 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v225 unauthorizedErrorWithMissingEntitlement:v226 requestedAccessLevel:v227 currentAccesslevel:v228];

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
}

void sub_1006DF3A8(unint64_t a1, void *a2, NSObject *a3)
{
  uint64_t v265 = a2;
  uint64_t v6 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v6 - 8);
  uint64_t v260 = (uint64_t)&v219 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = ((char *)&v219 - v9);
  uint64_t v11 = type metadata accessor for UUID();
  unint64_t v261 = *(NSObject **)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v219 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v219 - v15;
  Class isa = a3[3].isa;
  uint64_t v262 = a3[2].isa;
  Class v259 = a3[4].isa;
  uint64_t v263 = v3;
  uint64_t v18 = *(void *)(v3 + 72);
  v266[3] = v18;
  p_Class isa = v265;
  v266[2] = &p_isa;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = (void *)v264;
  unint64_t v20 = sub_100692158((uint64_t (*)(id *))sub_100742798, v266, a1);
  unint64_t v21 = v19;
  if (v19) {
    goto LABEL_25;
  }
  Class v258 = isa;
  os_log_t v256 = a3;
  uint64_t v22 = v20;
  uint64_t v252 = v18;
  os_log_t v257 = v16;
  unint64_t v253 = v13;
  uint64_t v254 = v11;
  uint64_t v251 = v10;
  if (qword_1009073A0 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  uint64_t v24 = sub_10008E2DC(v23, (uint64_t)qword_100916070);
  unint64_t v25 = (unint64_t)v22;
  swift_bridgeObjectRetain_n();
  uint64_t v26 = v258;
  swift_bridgeObjectRetain();
  uint64_t v264 = v24;
  p_p_Class isa = Logger.logObject.getter();
  int v28 = static os_log_type_t.info.getter();
  BOOL v29 = os_log_type_enabled(p_p_isa, (os_log_type_t)v28);
  os_log_t v30 = (os_log_t)(v25 >> 62);
  uint64_t v250 = v23;
  if (!v29)
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_9;
  }
  uint64_t v31 = swift_slowAlloc();
  uint64_t v32 = swift_slowAlloc();
  p_Class isa = &v32->isa;
  *(_DWORD *)uint64_t v31 = 136446978;
  uint64_t v270 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&p_isa);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *(_WORD *)(v31 + 12) = 2048;
  LODWORD(v249) = v28;
  os_log_t v248 = v32;
  if (v30) {
    goto LABEL_146;
  }
  uint64_t v33 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    uint64_t v270 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 22) = 2082;
    unint64_t v247 = v31 + 24;
    sub_1000963CC(0, (unint64_t *)&qword_100909AD0);
    uint64_t v10 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v36 = v35;

    uint64_t v270 = sub_1000C51B8(v34, v36, (uint64_t *)&p_isa);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 32) = 2082;
    unint64_t v37 = (unint64_t)v258;
    swift_bridgeObjectRetain();
    uint64_t v270 = sub_1000C51B8((uint64_t)v262, v37, (uint64_t *)&p_isa);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, p_p_isa, (os_log_type_t)v249, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v31, 0x2Au);
    uint64_t v26 = v248;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

LABEL_9:
    if (v30)
    {
      swift_bridgeObjectRetain();
      uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v38 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v31 = (uint64_t)_swiftEmptyArrayStorage;
    os_log_t v255 = v30;
    if (!v38) {
      break;
    }
    p_Class isa = _swiftEmptyArrayStorage;
    p_p_Class isa = &p_isa;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v38 & 0x8000000000000000) == 0)
    {
      uint64_t v39 = 0;
      unint64_t v40 = v25;
      unint64_t v41 = v25 & 0xC000000000000001;
      while (v38 != v39)
      {
        if (v41) {
          id v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v42 = *(id *)(v40 + 8 * v39 + 32);
        }
        id v43 = v42;
        id v44 = sub_100694DE8([v43 remObjectID], (unint64_t *)&qword_100909AD0);
        if (v21)
        {

          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        uint64_t v10 = v44;
        ++v39;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v26 = p_isa[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v38 == v39)
        {
          uint64_t v31 = (uint64_t)p_isa;
          unint64_t v25 = v40;
          os_log_t v30 = v255;
          goto LABEL_21;
        }
      }
      __break(1u);
LABEL_137:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_25:
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    swift_bridgeObjectRetain();
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
LABEL_21:
  uint64_t v45 = Logger.logObject.getter();
  os_log_type_t v46 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = swift_slowAlloc();
    uint64_t v262 = (void *)v31;
    os_log_type_t v48 = (uint8_t *)v47;
    Class v258 = swift_slowAlloc();
    p_Class isa = &v258->isa;
    *(_DWORD *)os_log_type_t v48 = 136315138;
    uint64_t v249 = (v48 + 4);
    id v49 = [self cdEntityName];
    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v52 = v51;

    uint64_t v270 = sub_1000C51B8(v50, v52, (uint64_t *)&p_isa);
    os_log_t v30 = v255;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "Performing fetch during upsert {CDType: %s}", v48, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v31 = (uint64_t)v262;
    swift_slowDealloc();
  }

  uint64_t v53 = v263;
  uint64_t v54 = v257;
  os_log_t v55 = v256;
  uint64_t v56 = sub_100717AC0(v31, (uint64_t)v256);
  if (v21) {
    goto LABEL_24;
  }
  os_log_t v248 = v56;
  swift_bridgeObjectRelease();
  if (v30)
  {
    swift_bridgeObjectRetain();
    uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v58 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v58)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  unint64_t v247 = 0;
  uint64_t v237 = v53 + 24;
  os_log_t v236 = v55 + 6;
  os_log_t v240 = v55 + 7;
  unint64_t v59 = v25 & 0xC000000000000001;
  uint64_t v233 = v25 & 0xFFFFFFFFFFFFFF8;
  unint64_t v232 = v25 + 32;
  long long v243 = (void **)&v261[1].isa;
  os_log_t v235 = v261 + 7;
  uint64_t v234 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))&v261[6];
  long long v241 = &v271;
  uint64_t v231 = (char *)&v270 + 4;
  *(void *)&long long v57 = 136446978;
  long long v229 = v57;
  *(void *)&long long v57 = 136446210;
  long long v246 = v57;
  *(void *)&long long v57 = 136447490;
  long long v230 = v57;
  *(void *)&long long v57 = 136447234;
  long long v227 = v57;
  NSString v228 = (char *)&type metadata for Any + 8;
  unint64_t v238 = v25 & 0xC000000000000001;
  unint64_t v242 = v25;
  uint64_t v239 = v58;
  while (1)
  {
    if (v59)
    {
      unint64_t v60 = v247;
      id v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v62 = __OFADD__(v60, 1);
      unint64_t v63 = v60 + 1;
      if (v62) {
        break;
      }
      goto LABEL_38;
    }
    unint64_t v64 = v247;
    if (v247 >= *(void *)(v233 + 16)) {
      goto LABEL_148;
    }
    id v61 = *(id *)(v232 + 8 * v247);
    BOOL v62 = __OFADD__(v64, 1);
    unint64_t v63 = v64 + 1;
    if (v62) {
      break;
    }
LABEL_38:
    BOOL v65 = v61;
    id v66 = sub_100694DE8([v65 remObjectID], (unint64_t *)&qword_100909AD0);
    if (v21)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v261 = v66;
    unint64_t v247 = v63;
    uint64_t v262 = 0;

    uint64_t v249 = v65;
    id v67 = [v65 accountID];
    id v68 = [v67 uuid];

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v69 = UUID.uuidString.getter();
    uint64_t v70 = v54;
    uint64_t v72 = v71;
    unint64_t v73 = *v243;
    uint64_t v74 = v254;
    ((void (*)(char *, uint64_t))*v243)(v70, v254);
    id v75 = [self localInternalAccountID];
    id v76 = [v75 uuid];

    id v77 = v253;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v78 = UUID.uuidString.getter();
    uint64_t v80 = v79;
    Class v258 = v73;
    ((void (*)(char *, uint64_t))v73)(v77, v74);
    if (v69 == v78 && v72 == v80)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v81 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v81 & 1) == 0)
      {
        uint64_t v86 = (uint64_t)v262;
        uint64_t v84 = v252;
        uint64_t v85 = v261;
        goto LABEL_48;
      }
    }
    int v82 = 0x7FFFFFFF;
    uint64_t v83 = (uint64_t)v262;
    uint64_t v84 = v252;
    uint64_t v85 = v261;
    switch(*(unsigned __int16 *)(v263 + 68) >> 14)
    {
      case 2:
        int v82 = *(_DWORD *)(v263 + 64);
        break;
      case 3:
        break;
      default:
        int v82 = 2147483519;
        break;
    }
    sub_100662770(2, v82);
    uint64_t v86 = v83;
    if (v83)
    {
LABEL_135:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_132;
    }
LABEL_48:
    id v87 = sub_10072FFE4(v249, v84, (uint64_t)&type metadata for REMListStorageCDIngestor.ValueKey, (uint64_t (*)(void))sub_100692520, &qword_100921DA8);
    if (v86) {
      goto LABEL_135;
    }
    uint64_t v88 = (uint64_t)v87;
    char v89 = sub_10069818C();
    Class v90 = v248[2].isa;
    uint64_t v262 = 0;
    if (!v90) {
      goto LABEL_53;
    }
    uint64_t v91 = v85;
    char v92 = v248;
    unint64_t v93 = sub_10030703C(v91);
    if ((v94 & 1) == 0)
    {

LABEL_53:
      if (v89 != 39)
      {
        uint64_t v96 = *(void *)(v88 + 16);
        if (v96)
        {
          swift_bridgeObjectRetain();
          uint64_t v97 = 0;
          uint64_t v98 = v254;
          while (1)
          {
            uint64_t v99 = sub_1005D91F8(*(unsigned char *)(v88 + v97 + 32));
            uint64_t v101 = v100;
            if (v99 == sub_1005D91F8(v89) && v101 == v102)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              goto LABEL_65;
            }
            char v104 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v104) {
              break;
            }
            if (v96 == ++v97)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              goto LABEL_131;
            }
          }
          swift_bridgeObjectRelease();
LABEL_65:
          uint64_t v105 = *(void **)(v263 + 88);
          sub_1000963CC(0, (unint64_t *)&qword_100909AD0);
          ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
          id v107 = [ObjCClassFromMetadata entity];
          id v108 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v107 insertIntoManagedObjectContext:v105];
          unint64_t v109 = v259;
          id v110 = v108;
          [v105 assignObject:v110 toPersistentStore:v109];

          id v111 = v110;
          id v112 = [v85 uuid];
          uint64_t v113 = (uint64_t)v251;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          ((void (*)(uint64_t, void, uint64_t, uint64_t))v235->isa)(v113, 0, 1, v98);
          uint64_t v114 = v260;
          sub_1001248EC(v113, v260);
          Class v115 = 0;
          if ((*v234)(v114, 1, v98) != 1)
          {
            Class v115 = UUID._bridgeToObjectiveC()().super.isa;
            ((void (*)(uint64_t, uint64_t))v258)(v114, v98);
          }
          [v111 setIdentifier:v115 v219];

          sub_1001260DC(v113);
          id v116 = v85;
          uint64_t v117 = v263;
          swift_retain_n();
          id v118 = v111;
          uint64_t v119 = v116;
          uint64_t v120 = v118;
          uint64_t v121 = Logger.logObject.getter();
          os_log_type_t v122 = static os_log_type_t.default.getter();
          int v123 = v122;
          if (os_log_type_enabled(v121, v122))
          {
            uint64_t v124 = swift_slowAlloc();
            uint64_t v245 = swift_slowAlloc();
            Class v258 = swift_slowAlloc();
            p_Class isa = &v258->isa;
            *(_DWORD *)uint64_t v124 = v229;
            os_log_t v256 = v121;
            uint64_t v270 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&p_isa);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v124 + 12) = 2082;
            sub_10010B4E8(v237, (uint64_t)v269);
            sub_10073F754((uint64_t)v269, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            LODWORD(v255) = v123;
            uint64_t v125 = sub_100696CF4();
            unint64_t v127 = v126;
            sub_10073F754((uint64_t)v269, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            uint64_t v270 = sub_1000C51B8(v125, v127, (uint64_t *)&p_isa);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v124 + 22) = 2114;
            uint64_t v270 = v119;
            int v128 = v119;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            uint64_t v129 = v245;
            *(void *)uint64_t v245 = v119;

            *(_WORD *)(v124 + 32) = 2112;
            uint64_t v130 = [v120 objectID];
            uint64_t v270 = v130;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(void *)(v129 + 8) = v130;

            os_log_t v131 = v256;
            _os_log_impl((void *)&_mh_execute_header, v256, (os_log_type_t)v255, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v124, 0x2Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v95 = v263;
          }
          else
          {

            swift_release_n();
            uint64_t v95 = v117;
          }
          swift_beginAccess();
          uint64_t v132 = v119;
          Class v258 = v120;
          sub_1001A6B7C((uint64_t)v120, (uint64_t)v132);
          swift_endAccess();
          uint64_t v85 = v261;
          goto LABEL_71;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_131:
      [self noSuchObjectErrorWithObjectID:v85];
      swift_willThrow();
LABEL_132:

      return;
    }
    Class v258 = *((id *)v92[7].isa + v93);
    uint64_t v95 = v263;
LABEL_71:

    unint64_t v133 = *(NSObject **)(v88 + 16);
    if (!v133) {
      goto LABEL_83;
    }
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v133; uint64_t i = ((char *)i + 1))
    {
      if (((*(unsigned int *)(v95 + 64) | ((unint64_t)*(unsigned __int16 *)(v95 + 68) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
      {
        char v135 = *((unsigned char *)&i[4].isa + v88);
        uint64_t v136 = Logger.logObject.getter();
        os_log_type_t v137 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v136, v137))
        {
          uint64_t v138 = swift_slowAlloc();
          p_Class isa = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v138 = v246;
          LOBYTE(v270) = v135;
          uint64_t v139 = String.init<A>(describing:)();
          *(void *)(v138 + 4) = sub_1000C51B8(v139, v140, (uint64_t *)&p_isa);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v136, v137, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v138, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v95 = v263;
          swift_slowDealloc();
        }
      }
      LODWORD(v30) = *(_DWORD *)(v95 + 64);
      if (*(unsigned __int16 *)(v95 + 68) >> 14 == 2 && (*(_DWORD *)(v95 + 64) & 1) == 0)
      {
        if (qword_100907AE0 != -1) {
          goto LABEL_149;
        }
        goto LABEL_128;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v85 = v261;
LABEL_83:
    swift_retain_n();
    os_log_type_t v142 = v85;
    swift_bridgeObjectRetain_n();
    uint64_t v143 = v258;
    uint64_t v144 = v142;
    uint64_t v10 = v143;
    unint64_t v145 = Logger.logObject.getter();
    int v146 = static os_log_type_t.default.getter();
    BOOL v147 = os_log_type_enabled(v145, (os_log_type_t)v146);
    unint64_t v261 = v144;
    if (v147)
    {
      LODWORD(v244) = v146;
      os_log_t v255 = v145;
      os_log_t v256 = v133;
      uint64_t v148 = swift_slowAlloc();
      Class v258 = swift_slowAlloc();
      uint64_t v245 = swift_slowAlloc();
      p_Class isa = (void *)v245;
      *(_DWORD *)uint64_t v148 = v230;
      uint64_t v270 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&p_isa);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v148 + 12) = 2082;
      sub_10010B4E8(v237, (uint64_t)v268);
      sub_10073F754((uint64_t)v268, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v149 = sub_100696CF4();
      unint64_t v151 = v150;
      sub_10073F754((uint64_t)v268, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      uint64_t v270 = sub_1000C51B8(v149, v151, (uint64_t *)&p_isa);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v148 + 22) = 2114;
      uint64_t v270 = v144;
      int v152 = v144;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      BOOL v153 = v258;
      v258->Class isa = (Class)v144;

      *(_WORD *)(v148 + 32) = 2112;
      uint64_t v154 = [v10 objectID];
      uint64_t v270 = v154;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v153[1].Class isa = (Class)v154;

      *(_WORD *)(v148 + 42) = 2082;
      int64_t v155 = *(void *)(v88 + 16);
      if (v155)
      {
        NSString v226 = v10;
        uint64_t v270 = _swiftEmptyArrayStorage;
        sub_1001DE058(0, v155, 0);
        uint64_t v156 = 0;
        unint64_t v157 = v270;
        do
        {
          uint64_t v158 = sub_1005D91F8(*(unsigned char *)(v88 + v156 + 32));
          os_log_t v160 = v159;
          uint64_t v270 = v157;
          unint64_t v162 = (unint64_t)v157[2].isa;
          unint64_t v161 = (unint64_t)v157[3].isa;
          if (v162 >= v161 >> 1)
          {
            sub_1001DE058(v161 > 1, v162 + 1, 1);
            unint64_t v157 = v270;
          }
          ++v156;
          v157[2].Class isa = (Class)(v162 + 1);
          int64_t v163 = &v157[2 * v162];
          v163[4].Class isa = (Class)v158;
          v163[5].Class isa = v160;
        }
        while (v155 != v156);
        swift_bridgeObjectRelease();
        uint64_t v10 = v226;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v164 = Array.description.getter();
      unint64_t v166 = v165;
      swift_bridgeObjectRelease();
      uint64_t v270 = sub_1000C51B8(v164, v166, (uint64_t *)&p_isa);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_WORD *)(v148 + 52) = 1024;
      uint64_t v95 = v263;
      int v167 = *(unsigned __int8 *)(v263 + 104);
      swift_release();
      LODWORD(v270) = v167;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      os_log_t v168 = v255;
      _os_log_impl((void *)&_mh_execute_header, v255, (os_log_type_t)v244, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v148, 0x3Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v133 = v256;
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v26 = v249;
    uint64_t v169 = (uint64_t)v262;
    sub_1005DA3D0(v249, v10, v88, v95);
    if (v169) {
      goto LABEL_137;
    }
    uint64_t v262 = 0;
    id v170 = [v10 changedValues];
    os_log_t v30 = (os_log_t)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v171 = (NSObject **)v240;
    swift_beginAccess();
    uint64_t v172 = v261;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v270 = *v171;
    *unint64_t v171 = 0x8000000000000000;
    sub_1002C4FAC((uint64_t)v30, v172, isUniquelyReferenced_nonNull_native);
    *unint64_t v171 = v270;

    swift_bridgeObjectRelease();
    swift_endAccess();
    int v174 = *(unsigned __int8 *)(v95 + 104);
    int v175 = v10;
    swift_bridgeObjectRelease();
    if (v133 && (v174 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      [v175 updateChangeCount];

      goto LABEL_125;
    }
    NSString v226 = v175;
    os_log_t v176 = v172;
    swift_retain_n();
    uint64_t v31 = v95;
    uint64_t v177 = v176;
    uint64_t v178 = (uint64_t)v30;
    swift_bridgeObjectRetain();
    int v179 = Logger.logObject.getter();
    int v180 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v179, (os_log_type_t)v180))
    {
      int v222 = v180;
      os_log_t v225 = v179;
      os_log_t v30 = (os_log_t)swift_slowAlloc();
      unint64_t v21 = (void *)swift_slowAlloc();
      unint64_t v223 = (void *)swift_slowAlloc();
      p_Class isa = v223;
      LODWORD(v30->isa) = v227;
      uint64_t v270 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&p_isa);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      WORD2(v30[1].isa) = 1024;
      swift_release();
      LODWORD(v270) = v174;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      WORD1(v30[2].isa) = 1024;
      LODWORD(v270) = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      LOWORD(v30[3].isa) = 2114;
      uint64_t v270 = v177;
      unint64_t v181 = v177;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      unint64_t v221 = v21;
      *unint64_t v21 = v177;

      uint64_t v220 = v181;
      os_log_t v224 = (uint8_t *)v30;
      WORD1(v30[4].isa) = 2082;
      int64_t v182 = *(void *)(v178 + 16);
      if (v182)
      {
        uint64_t v270 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_1001DE058(0, v182, 0);
        p_p_Class isa = v270;
        uint64_t v184 = sub_10072617C(v178);
        uint64_t v185 = v178;
        uint64_t v186 = 0;
        os_log_t v30 = (os_log_t)(v178 + 64);
        char v187 = *(unsigned char *)(v178 + 32);
        int v244 = v183;
        uint64_t v219 = v178 + 96;
        unint64_t v25 = v242;
        uint64_t v245 = v178;
        while (1)
        {
          if (v184 < 0 || v184 >= 1 << v187) {
            goto LABEL_140;
          }
          uint64_t v31 = (unint64_t)v184 >> 6;
          if (((uint64_t)v30[(unint64_t)v184 >> 6].isa & (1 << v184)) == 0) {
            goto LABEL_141;
          }
          os_log_t v255 = v186;
          int v189 = *(_DWORD *)(v185 + 36);
          os_log_t v256 = v183;
          if (v189 != v183) {
            goto LABEL_142;
          }
          uint64_t v190 = v182;
          unint64_t v21 = (void *)v25;
          uint64_t v191 = *(void *)(v185 + 48) + 16 * v184;
          unsigned int v192 = *(objc_class **)(v191 + 8);
          Class v258 = *(NSObject **)v191;
          uint64_t v270 = p_p_isa;
          unint64_t v25 = (unint64_t)p_p_isa[2].isa;
          unint64_t v193 = (unint64_t)p_p_isa[3].isa;
          unint64_t v261 = (v25 + 1);
          swift_bridgeObjectRetain();
          if (v25 >= v193 >> 1)
          {
            sub_1001DE058(v193 > 1, (int64_t)v261, 1);
            p_p_Class isa = v270;
          }
          p_p_isa[2].Class isa = (Class)v261;
          BOOL v194 = &p_p_isa[2 * v25];
          v194[4].Class isa = (Class)v258;
          v194[5].Class isa = v192;
          uint64_t v185 = v245;
          char v187 = *(unsigned char *)(v245 + 32);
          unint64_t v188 = 1 << v187;
          if (v184 >= 1 << v187) {
            goto LABEL_143;
          }
          Class v195 = v30[v31].isa;
          if (((unint64_t)v195 & (1 << v184)) == 0) {
            goto LABEL_144;
          }
          if (*(_DWORD *)(v245 + 36) != v256) {
            goto LABEL_145;
          }
          unint64_t v25 = (unint64_t)v21;
          int64_t v182 = (int64_t)v190;
          unint64_t v196 = (unint64_t)v195 & (-2 << (v184 & 0x3F));
          if (v196)
          {
            unint64_t v188 = __clz(__rbit64(v196)) | v184 & 0xFFFFFFFFFFFFFFC0;
          }
          else
          {
            uint64_t v197 = v31 + 1;
            unint64_t v198 = (v188 + 63) >> 6;
            if (v31 + 1 < v198)
            {
              unint64_t v199 = (unint64_t)v30[v197].isa;
              if (!v199)
              {
                uint64_t v197 = v31 + 2;
                if (v31 + 2 >= v198) {
                  goto LABEL_101;
                }
                unint64_t v199 = (unint64_t)v30[v197].isa;
                if (!v199)
                {
                  uint64_t v197 = v31 + 3;
                  if (v31 + 3 >= v198) {
                    goto LABEL_101;
                  }
                  unint64_t v199 = (unint64_t)v30[v197].isa;
                  if (!v199)
                  {
                    while (v198 - 4 != v31)
                    {
                      unint64_t v199 = *(void *)(v219 + 8 * v31++);
                      if (v199)
                      {
                        uint64_t v197 = v31 + 3;
                        goto LABEL_114;
                      }
                    }
                    goto LABEL_101;
                  }
                }
              }
LABEL_114:
              unint64_t v188 = __clz(__rbit64(v199)) + (v197 << 6);
            }
          }
LABEL_101:
          uint64_t v186 = ((char *)&v255->isa + 1);
          unint64_t v183 = v244;
          uint64_t v184 = v188;
          if (((char *)&v255->isa + 1) == v190)
          {
            swift_bridgeObjectRelease();
            break;
          }
        }
      }
      uint64_t v201 = v224;
      uint64_t v202 = Array.description.getter();
      unint64_t v204 = v203;
      swift_bridgeObjectRelease();
      uint64_t v270 = sub_1000C51B8(v202, v204, (uint64_t *)&p_isa);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v205 = v225;
      _os_log_impl((void *)&_mh_execute_header, v225, (os_log_type_t)v222, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v201, 0x2Cu);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      Class v206 = v226;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v200 = v226;

      swift_release_n();
    }
LABEL_125:
    unint64_t v21 = v262;
    uint64_t v54 = v257;
    unint64_t v59 = v238;
    if (v247 == v239) {
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  swift_once();
LABEL_128:
  sub_10008E2DC(v250, (uint64_t)qword_100920A70);
  unint64_t v207 = Logger.logObject.getter();
  os_log_type_t v208 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v207, v208))
  {
    uint64_t v209 = swift_slowAlloc();
    p_Class isa = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v209 = 136446466;
    uint64_t v210 = sub_100662CC0(1);
    uint64_t v270 = sub_1000C51B8(v210, v211, (uint64_t *)&p_isa);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v209 + 12) = 2082;
    uint64_t v212 = sub_100662CC0((__int16)v30);
    uint64_t v270 = sub_1000C51B8(v212, v213, (uint64_t *)&p_isa);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v207, v208, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v209, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  os_log_t v214 = v261;
  id v215 = self;
  NSString v216 = String._bridgeToObjectiveC()();
  sub_100662CC0(1);
  NSString v217 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100662CC0((__int16)v30);
  NSString v218 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v215 unauthorizedErrorWithMissingEntitlement:v216 requestedAccessLevel:v217 currentAccesslevel:v218];

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
}

void sub_1006E163C(unint64_t a1, NSObject *a2, void *a3)
{
  uint64_t v260 = a2;
  uint64_t v6 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v6 - 8);
  uint64_t v257 = (uint64_t)&v218 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v218 - v9;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v258 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v218 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v218 - v15;
  uint64_t v17 = (void *)a3[3];
  Class v259 = a3[2];
  id v256 = (id)a3[4];
  unint64_t v261 = v3;
  Class isa = v3[9].isa;
  v263[3] = isa;
  uint64_t v264 = v260;
  v263[2] = &v264;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = v262;
  unint64_t v20 = sub_100692158((uint64_t (*)(id *))sub_1007427B4, v263, a1);
  if (v19) {
    goto LABEL_25;
  }
  uint64_t v249 = v10;
  uint64_t v262 = v17;
  unint64_t v253 = a3;
  unint64_t v21 = (unint64_t)v20;
  uint64_t v22 = v261;
  uint64_t v251 = (uint64_t)isa;
  uint64_t v254 = v16;
  os_log_t v255 = v13;
  uint64_t v252 = v11;
  uint64_t v23 = 0;
  if (qword_1009073A0 != -1) {
    swift_once();
  }
  uint64_t v248 = type metadata accessor for Logger();
  uint64_t v24 = sub_10008E2DC(v248, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  unint64_t v25 = v262;
  swift_bridgeObjectRetain();
  uint64_t v260 = v24;
  uint64_t v26 = Logger.logObject.getter();
  int v27 = static os_log_type_t.info.getter();
  unint64_t v28 = v21 >> 62;
  if (!os_log_type_enabled(v26, (os_log_type_t)v27))
  {
    uint64_t v36 = (uint64_t)v22;

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_9;
  }
  uint64_t v11 = swift_slowAlloc();
  BOOL v29 = swift_slowAlloc();
  uint64_t v264 = v29;
  *(_DWORD *)uint64_t v11 = 136446978;
  os_log_t v267 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v264);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *(_WORD *)(v11 + 12) = 2048;
  LODWORD(v247) = v27;
  long long v246 = v29;
  if (v28) {
    goto LABEL_181;
  }
  uint64_t v30 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    os_log_t v267 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 22) = 2082;
    *(void *)&long long v245 = v11 + 24;
    sub_1000963CC(0, &qword_10090ABC0);
    id v31 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v34 = v33;

    os_log_t v267 = sub_1000C51B8(v32, v34, (uint64_t *)&v264);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 32) = 2082;
    unint64_t v35 = (unint64_t)v262;
    swift_bridgeObjectRetain();
    os_log_t v267 = sub_1000C51B8((uint64_t)v259, v35, (uint64_t *)&v264);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v247, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v11, 0x2Au);
    unint64_t v25 = v246;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v36 = (uint64_t)v261;
LABEL_9:
    if (v28)
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v38 = _swiftEmptyArrayStorage;
    uint64_t v262 = (void *)v21;
    uint64_t v250 = v28;
    if (!v37) {
      break;
    }
    uint64_t v264 = _swiftEmptyArrayStorage;
    uint64_t v26 = &v264;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v37 & 0x8000000000000000) == 0)
    {
      uint64_t v39 = 0;
      unint64_t v40 = v21 & 0xC000000000000001;
      unint64_t v41 = &qword_10090ABC0;
      while (v37 != v39)
      {
        if (v40) {
          id v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v42 = *((id *)v262 + v39 + 4);
        }
        id v43 = v42;
        sub_100694DE8([v43 remObjectID], &qword_10090ABC0);
        if (v23)
        {

          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        uint64_t v23 = 0;
        ++v39;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        unint64_t v25 = v264[2].isa;
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v37 == v39)
        {
          uint64_t v38 = v264;
          uint64_t v36 = (uint64_t)v261;
          unint64_t v21 = (unint64_t)v262;
          goto LABEL_21;
        }
      }
      __break(1u);
LABEL_172:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_25:
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
LABEL_175:
    __break(1u);
LABEL_176:
    __break(1u);
LABEL_177:
    __break(1u);
LABEL_178:
    __break(1u);
LABEL_179:
    __break(1u);
LABEL_180:
    __break(1u);
LABEL_181:
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
LABEL_21:
  id v44 = Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = swift_slowAlloc();
    Class v259 = v38;
    uint64_t v47 = (uint8_t *)v46;
    unint64_t v247 = swift_slowAlloc();
    uint64_t v264 = v247;
    *(_DWORD *)uint64_t v47 = 136315138;
    long long v246 = (v47 + 4);
    id v48 = [self cdEntityName];
    uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v50 = v21;
    unint64_t v52 = v51;

    os_log_t v267 = sub_1000C51B8(v49, v52, (uint64_t *)&v264);
    uint64_t v36 = (uint64_t)v261;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unint64_t v21 = v50;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "Performing fetch during upsert {CDType: %s}", v47, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v38 = v259;
    swift_slowDealloc();
  }

  unint64_t v28 = (unint64_t)v255;
  uint64_t v53 = v254;
  uint64_t v54 = v253;
  os_log_t v55 = sub_100714A48((uint64_t)v38, (uint64_t)v253);
  uint64_t v56 = v23;
  if (v23) {
    goto LABEL_24;
  }
  long long v246 = v55;
  swift_bridgeObjectRelease();
  if (v250)
  {
    swift_bridgeObjectRetain();
    uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v58 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v58)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  unint64_t v59 = 0;
  uint64_t v236 = v36 + 24;
  os_log_t v235 = v54 + 6;
  uint64_t v239 = (NSObject **)(v54 + 7);
  unint64_t v60 = v21 & 0xC000000000000001;
  uint64_t v232 = v21 & 0xFFFFFFFFFFFFFF8;
  unint64_t v231 = v21 + 32;
  long long v241 = (void (**)(char *, uint64_t))(v258 + 8);
  uint64_t v234 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v258 + 56);
  uint64_t v233 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v258 + 48);
  unint64_t v242 = &v268;
  long long v230 = (char *)&v267 + 4;
  *(void *)&long long v57 = 136446978;
  long long v228 = v57;
  *(void *)&long long v57 = 136446210;
  long long v245 = v57;
  *(void *)&long long v57 = 136447490;
  long long v229 = v57;
  *(void *)&long long v57 = 136447234;
  long long v226 = v57;
  long long v227 = (char *)&type metadata for Any + 8;
  unint64_t v237 = v21 & 0xC000000000000001;
  uint64_t v238 = v58;
  while (1)
  {
    if (v60)
    {
      id v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v59 >= *(void *)(v232 + 16)) {
        goto LABEL_183;
      }
      id v61 = *(id *)(v231 + 8 * v59);
    }
    unint64_t v240 = v59 + 1;
    if (__OFADD__(v59, 1))
    {
      __break(1u);
LABEL_183:
      __break(1u);
      goto LABEL_184;
    }
    BOOL v62 = v61;
    unint64_t v63 = sub_100694DE8([v62 remObjectID], &qword_10090ABC0);
    if (v56)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v253 = v63;
    uint64_t v258 = 0;

    unint64_t v247 = v62;
    id v64 = [v62 objectID];
    unint64_t v65 = v28;
    id v66 = [v64 uuid];

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v67 = UUID.uuidString.getter();
    id v68 = v53;
    uint64_t v70 = v69;
    uint64_t v71 = *v241;
    uint64_t v72 = v252;
    (*v241)(v68, v252);
    id v73 = [self localInternalAccountID];
    id v74 = [v73 uuid];

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v75 = UUID.uuidString.getter();
    uint64_t v77 = v76;
    unint64_t v78 = v65;
    uint64_t v79 = v71;
    v71((char *)v78, v72);
    if (v67 != v75) {
      goto LABEL_41;
    }
    if (v70 == v77)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_41:
      char v80 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v80 & 1) == 0)
      {
        uint64_t v85 = v258;
        uint64_t v83 = v251;
        uint64_t v84 = v253;
        goto LABEL_47;
      }
    }
    int v81 = 0x7FFFFFFF;
    uint64_t v82 = v258;
    uint64_t v83 = v251;
    uint64_t v84 = v253;
    switch(*(unsigned __int16 *)(v36 + 68) >> 14)
    {
      case 2:
        int v81 = *(_DWORD *)(v36 + 64);
        break;
      case 3:
        break;
      default:
        int v81 = 2147483519;
        break;
    }
    sub_100662770(2, v81);
    uint64_t v85 = v82;
    if (v82)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
LABEL_47:
    uint64_t v86 = v247;
    id v87 = sub_10072FFE4(v247, v83, (uint64_t)&type metadata for REMAccountStorageCDIngestor.ValueKey, (uint64_t (*)(void))sub_100692720, &qword_100921DD8);
    if (v85)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_166;
    }
    uint64_t v88 = (uint64_t)v87;
    char v89 = sub_10069855C();
    Class v90 = v246[2].isa;
    uint64_t v258 = 0;
    if (!v90) {
      goto LABEL_52;
    }
    uint64_t v91 = v84;
    char v92 = v246;
    unint64_t v93 = sub_10030703C(v91);
    if ((v94 & 1) == 0)
    {

      uint64_t v86 = v247;
LABEL_52:
      if (v89 != 26)
      {
        uint64_t v95 = *(void *)(v88 + 16);
        if (v95)
        {
          swift_bridgeObjectRetain();
          uint64_t v96 = 0;
          while (1)
          {
            unint64_t v97 = sub_10028826C(*(unsigned char *)(v88 + v96 + 32));
            uint64_t v99 = v98;
            BOOL v101 = v97 == sub_10028826C(v89) && v99 == v100;
            if (v101)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              goto LABEL_64;
            }
            char v102 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v102) {
              break;
            }
            if (v95 == ++v96)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              uint64_t v86 = v247;
              goto LABEL_165;
            }
          }
          swift_bridgeObjectRelease();
LABEL_64:
          uint64_t v36 = (uint64_t)v261;
          Class v103 = v261[11].isa;
          sub_1000963CC(0, &qword_10090ABC0);
          ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
          id v105 = [ObjCClassFromMetadata entity];
          id v106 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v105 insertIntoManagedObjectContext:v103];
          id v107 = v256;
          id v108 = v106;
          [(objc_class *)v103 assignObject:v108 toPersistentStore:v107];

          id v109 = v108;
          id v110 = [v84 uuid];
          uint64_t v111 = (uint64_t)v249;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v112 = v252;
          (*v234)(v111, 0, 1, v252);
          uint64_t v113 = v257;
          sub_1001248EC(v111, v257);
          int v114 = (*v233)(v113, 1, v112);
          Class v115 = 0;
          if (v114 != 1)
          {
            uint64_t v116 = v257;
            Class v115 = UUID._bridgeToObjectiveC()().super.isa;
            v79((char *)v116, v112);
          }
          [v109 setIdentifier:v115, v218];

          sub_1001260DC(v111);
          uint64_t v117 = v84;
          swift_retain_n();
          id v118 = v109;
          uint64_t v119 = v117;
          uint64_t v120 = v118;
          uint64_t v121 = Logger.logObject.getter();
          os_log_type_t v122 = static os_log_type_t.default.getter();
          int v123 = v122;
          if (os_log_type_enabled(v121, v122))
          {
            uint64_t v124 = swift_slowAlloc();
            uint64_t v125 = (void *)swift_slowAlloc();
            Class v259 = swift_slowAlloc();
            uint64_t v264 = v259;
            *(_DWORD *)uint64_t v124 = v228;
            uint64_t v250 = v121;
            os_log_t v267 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v264);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v124 + 12) = 2082;
            sub_10010B4E8(v236, (uint64_t)v266);
            sub_10073F754((uint64_t)v266, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            LODWORD(v244) = v123;
            uint64_t v126 = sub_100696CF4();
            unint64_t v128 = v127;
            sub_10073F754((uint64_t)v266, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            os_log_t v267 = sub_1000C51B8(v126, v128, (uint64_t *)&v264);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v124 + 22) = 2114;
            os_log_t v267 = v119;
            uint64_t v129 = v119;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *uint64_t v125 = v119;

            uint64_t v84 = v253;
            *(_WORD *)(v124 + 32) = 2112;
            uint64_t v130 = [v120 objectID];
            os_log_t v267 = v130;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            v125[1] = v130;

            os_log_t v131 = v250;
            _os_log_impl((void *)&_mh_execute_header, v250, (os_log_type_t)v244, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v124, 0x2Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            uint64_t v36 = (uint64_t)v261;
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_release_n();
          }
          swift_beginAccess();
          uint64_t v132 = v119;
          uint64_t v250 = v120;
          sub_1001A6B7C((uint64_t)v120, (uint64_t)v132);
          swift_endAccess();
          goto LABEL_70;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_165:
      [self noSuchObjectErrorWithObjectID:v84];
      swift_willThrow();
LABEL_166:

      return;
    }
    uint64_t v250 = *((id *)v92[7].isa + v93);
LABEL_70:

    Class v259 = *(NSObject **)(v88 + 16);
    if (!v259) {
      goto LABEL_87;
    }
    swift_bridgeObjectRetain();
    unint64_t v133 = 0;
LABEL_72:
    uint64_t v134 = *((char *)&v133[4].isa + v88);
    LODWORD(v38) = dword_100796BDC[v134];
    if (*(unsigned __int16 *)(v36 + 68) >> 14 == 2 && (v38 & *(_DWORD *)(v36 + 64)) == 0)
    {
      uint64_t v136 = Logger.logObject.getter();
      os_log_type_t v137 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v136, v137))
      {
        uint64_t v138 = swift_slowAlloc();
        uint64_t v264 = swift_slowAlloc();
        *(_DWORD *)uint64_t v138 = v245;
        LOBYTE(v267) = v134;
        uint64_t v139 = String.init<A>(describing:)();
        *(void *)(v138 + 4) = sub_1000C51B8(v139, v140, (uint64_t *)&v264);
        uint64_t v36 = (uint64_t)v261;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v136, v137, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v138, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
    }
    unint64_t v133 = ((char *)v133 + 1);
    LODWORD(v21) = 0x7FFFFFFF;
    switch(*(unsigned __int16 *)(v36 + 68) >> 14)
    {
      case 2:
        LODWORD(v21) = *(_DWORD *)(v36 + 64);
        if ((v21 & v38) == 0) {
          goto LABEL_161;
        }
        goto LABEL_85;
      case 3:
        break;
      default:
        LODWORD(v21) = 2147483519;
        break;
    }
    if ((v21 & v38) == 0) {
      break;
    }
LABEL_85:
    if (v259 != v133) {
      goto LABEL_72;
    }
    swift_bridgeObjectRelease();
    uint64_t v84 = v253;
LABEL_87:
    swift_retain_n();
    uint64_t v141 = v84;
    swift_bridgeObjectRetain_n();
    os_log_type_t v142 = v250;
    uint64_t v37 = v141;
    unint64_t v41 = v142;
    uint64_t v143 = Logger.logObject.getter();
    int v144 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v143, (os_log_type_t)v144))
    {
      LODWORD(v223) = v144;
      os_log_t v244 = v143;
      uint64_t v145 = swift_slowAlloc();
      unint64_t v253 = (void *)swift_slowAlloc();
      os_log_t v224 = swift_slowAlloc();
      uint64_t v264 = v224;
      *(_DWORD *)uint64_t v145 = v229;
      os_log_t v267 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v264);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v145 + 12) = 2082;
      sub_10010B4E8(v236, (uint64_t)v265);
      sub_10073F754((uint64_t)v265, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v146 = sub_100696CF4();
      BOOL v147 = v41;
      uint64_t v148 = v37;
      unint64_t v150 = v149;
      sub_10073F754((uint64_t)v265, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      os_log_t v267 = sub_1000C51B8(v146, v150, (uint64_t *)&v264);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v145 + 22) = 2114;
      os_log_t v267 = v148;
      unint64_t v151 = v148;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v250 = v148;
      int v152 = v253;
      *unint64_t v253 = v148;

      *(_WORD *)(v145 + 32) = 2112;
      BOOL v153 = [v147 objectID];
      os_log_t v267 = v153;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v152[1] = v153;

      os_log_t v225 = v147;
      uint64_t v243 = v145;
      *(_WORD *)(v145 + 42) = 2082;
      int64_t v154 = *(void *)(v88 + 16);
      if (v154)
      {
        os_log_t v267 = _swiftEmptyArrayStorage;
        sub_1001DE058(0, v154, 0);
        uint64_t v155 = 0;
        uint64_t v156 = v267;
        do
        {
          unint64_t v157 = 0xE800000000000000;
          unint64_t v158 = 0x44497463656A626FLL;
          switch(*(unsigned char *)(v88 + v155 + 32))
          {
            case 1:
              unint64_t v157 = 0xE400000000000000;
              unint64_t v158 = 1701869940;
              break;
            case 2:
              unint64_t v157 = 0xE400000000000000;
              unint64_t v158 = 1701667182;
              break;
            case 3:
              unint64_t v158 = 0xD000000000000018;
              unint64_t v159 = "listIDsMergeableOrdering";
              goto LABEL_117;
            case 4:
              unint64_t v158 = 0xD00000000000001CLL;
              unint64_t v159 = "listIDsMergeableOrderingData";
              goto LABEL_117;
            case 5:
              os_log_t v160 = "pinnedListsManualOrdering";
              goto LABEL_113;
            case 6:
              unint64_t v158 = 0xD000000000000017;
              unint64_t v159 = "templatesManualOrdering";
              goto LABEL_117;
            case 7:
              unint64_t v158 = 0xD00000000000001ALL;
              unint64_t v159 = "listsDADisplayOrderChanged";
              goto LABEL_117;
            case 8:
              unint64_t v158 = 0xD000000000000010;
              unint64_t v159 = "markedForRemoval";
              goto LABEL_117;
            case 9:
              goto LABEL_100;
            case 0xA:
              unint64_t v157 = 0xEC000000746C6153;
LABEL_100:
              unint64_t v158 = 0x44496E6F73726570;
              break;
            case 0xB:
              unint64_t v158 = 0xD000000000000012;
              unint64_t v159 = "didChooseToMigrate";
              goto LABEL_117;
            case 0xC:
              os_log_t v160 = "didChooseToMigrateLocally";
              goto LABEL_113;
            case 0xD:
              unint64_t v158 = 0xD000000000000012;
              unint64_t v159 = "didFinishMigration";
              goto LABEL_117;
            case 0xE:
              unint64_t v158 = 0xD00000000000001DLL;
              unint64_t v159 = "persistenceCloudSchemaVersion";
              goto LABEL_117;
            case 0xF:
              unint64_t v158 = 0x6576697463616E69;
              break;
            case 0x10:
              unint64_t v158 = 0xD000000000000012;
              unint64_t v159 = "externalIdentifier";
              goto LABEL_117;
            case 0x11:
              unint64_t v158 = 0xD000000000000017;
              unint64_t v159 = "externalModificationTag";
              goto LABEL_117;
            case 0x12:
              unint64_t v157 = 0xEB000000006E656BLL;
              unint64_t v158 = 0x6F54636E79536164;
              break;
            case 0x13:
              unint64_t v157 = 0xE900000000000079;
              unint64_t v158 = 0x654B687375506164;
              break;
            case 0x14:
              unint64_t v158 = 0xD00000000000001CLL;
              unint64_t v159 = "daConstraintsDescriptionPath";
              goto LABEL_117;
            case 0x15:
              unint64_t v158 = 0xD00000000000001FLL;
              unint64_t v159 = "daAllowsCalendarAddDeleteModify";
              goto LABEL_117;
            case 0x16:
              os_log_t v160 = "daSupportsSharedCalendars";
LABEL_113:
              unint64_t v157 = (unint64_t)(v160 - 32) | 0x8000000000000000;
              unint64_t v158 = 0xD000000000000019;
              break;
            case 0x17:
              unint64_t v157 = 0xED00006465746172;
              unint64_t v158 = 0x67694D7361576164;
              break;
            case 0x18:
              unint64_t v158 = 0xD000000000000017;
              unint64_t v159 = "minimumSupportedVersion";
              goto LABEL_117;
            case 0x19:
              unint64_t v158 = 0xD000000000000011;
              unint64_t v159 = "debugSyncDisabled";
LABEL_117:
              unint64_t v157 = (unint64_t)(v159 - 32) | 0x8000000000000000;
              break;
            default:
              break;
          }
          os_log_t v267 = v156;
          unint64_t v162 = (unint64_t)v156[2].isa;
          unint64_t v161 = (unint64_t)v156[3].isa;
          if (v162 >= v161 >> 1)
          {
            sub_1001DE058(v161 > 1, v162 + 1, 1);
            uint64_t v156 = v267;
          }
          ++v155;
          v156[2].Class isa = (Class)(v162 + 1);
          int64_t v163 = &v156[2 * v162];
          v163[4].Class isa = (Class)v158;
          v163[5].Class isa = (Class)v157;
        }
        while (v154 != v155);
        swift_bridgeObjectRelease();
        uint64_t v36 = (uint64_t)v261;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v164 = v243;
      uint64_t v165 = Array.description.getter();
      unint64_t v167 = v166;
      swift_bridgeObjectRelease();
      os_log_t v267 = sub_1000C51B8(v165, v167, (uint64_t *)&v264);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_WORD *)(v164 + 52) = 1024;
      int v168 = *(unsigned __int8 *)(v36 + 104);
      swift_release();
      LODWORD(v267) = v168;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      os_log_t v169 = v244;
      _os_log_impl((void *)&_mh_execute_header, v244, (os_log_type_t)v223, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v164, 0x3Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v37 = (uint64_t)v250;
      unint64_t v41 = v225;
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    unint64_t v25 = v247;
    uint64_t v170 = v258;
    sub_10028BC64(v247, v41, v88, v36);
    if (v170) {
      goto LABEL_172;
    }
    uint64_t v258 = 0;
    id v171 = [v41 changedValues];
    uint64_t v38 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v172 = v239;
    swift_beginAccess();
    id v173 = (id)v37;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    os_log_t v267 = *v172;
    *uint64_t v172 = 0x8000000000000000;
    uint64_t v11 = (uint64_t)v38;
    sub_1002C4FAC((uint64_t)v38, v173, isUniquelyReferenced_nonNull_native);
    *uint64_t v172 = v267;

    swift_bridgeObjectRelease();
    swift_endAccess();
    int v175 = *(unsigned __int8 *)(v36 + 104);
    os_log_t v176 = v41;
    swift_bridgeObjectRelease();
    if (v259 && (v175 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      [v176 updateChangeCount];

      LOWORD(v21) = (_WORD)v262;
      goto LABEL_155;
    }
    os_log_t v225 = v176;
    id v177 = v173;
    swift_retain_n();
    uint64_t v178 = v177;
    swift_bridgeObjectRetain();
    int v179 = Logger.logObject.getter();
    int v180 = static os_log_type_t.default.getter();
    BOOL v181 = os_log_type_enabled(v179, (os_log_type_t)v180);
    unint64_t v21 = (unint64_t)v262;
    if (v181)
    {
      int v220 = v180;
      os_log_t v223 = v179;
      unint64_t v28 = swift_slowAlloc();
      os_log_t v224 = swift_slowAlloc();
      unint64_t v221 = swift_slowAlloc();
      uint64_t v264 = v221;
      *(_DWORD *)unint64_t v28 = v226;
      os_log_t v267 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v264);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v28 + 12) = 1024;
      swift_release();
      LODWORD(v267) = v175;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      *(_WORD *)(v28 + 18) = 1024;
      LODWORD(v267) = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v28 + 24) = 2114;
      os_log_t v267 = v178;
      uint64_t v23 = v178;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v224->Class isa = (Class)v178;

      id v219 = (id)v23;
      int v222 = (uint8_t *)v28;
      *(_WORD *)(v28 + 34) = 2082;
      int64_t v182 = (int64_t)v38[2].isa;
      if (v182)
      {
        os_log_t v267 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_1001DE058(0, v182, 0);
        uint64_t v26 = v267;
        uint64_t v184 = sub_10072617C((uint64_t)v38);
        os_log_t v185 = v38;
        uint64_t v186 = 0;
        char v187 = v38 + 8;
        char v188 = (char)v38[4].isa;
        uint64_t v243 = v183;
        NSString v218 = v38 + 12;
        os_log_t v244 = v38;
        while (1)
        {
          if (v184 < 0 || v184 >= 1 << v188) {
            goto LABEL_175;
          }
          unint64_t v190 = (unint64_t)v184 >> 6;
          uint64_t v23 = 1 << v184;
          if (((uint64_t)v187[(unint64_t)v184 >> 6].isa & (1 << v184)) == 0) {
            goto LABEL_176;
          }
          uint64_t v250 = v186;
          if (HIDWORD(v185[4].isa) != v183) {
            goto LABEL_177;
          }
          uint64_t v11 = v182;
          unint64_t v21 = v183;
          uint64_t v191 = (uint64_t)v185[6].isa + 16 * v184;
          unsigned int v192 = *(objc_class **)(v191 + 8);
          unint64_t v253 = *(void **)v191;
          os_log_t v267 = v26;
          unint64_t v28 = (unint64_t)v26[2].isa;
          unint64_t v193 = (unint64_t)v26[3].isa;
          Class v259 = (v28 + 1);
          swift_bridgeObjectRetain();
          if (v28 >= v193 >> 1)
          {
            sub_1001DE058(v193 > 1, (int64_t)v259, 1);
            uint64_t v26 = v267;
          }
          v26[2].Class isa = (Class)v259;
          BOOL v194 = &v26[2 * v28];
          v194[4].Class isa = (Class)v253;
          v194[5].Class isa = v192;
          os_log_t v185 = v244;
          char v188 = (char)v244[4].isa;
          unint64_t v189 = 1 << v188;
          if (v184 >= 1 << v188) {
            goto LABEL_178;
          }
          Class v195 = v187[v190].isa;
          BOOL v101 = ((unint64_t)v195 & v23) == 0;
          uint64_t v23 = (uint64_t)v262;
          unint64_t v28 = (unint64_t)v255;
          if (v101) {
            goto LABEL_179;
          }
          if (HIDWORD(v244[4].isa) != v21) {
            goto LABEL_180;
          }
          int64_t v182 = v11;
          unint64_t v196 = (unint64_t)v195 & (-2 << (v184 & 0x3F));
          if (v196)
          {
            unint64_t v189 = __clz(__rbit64(v196)) | v184 & 0xFFFFFFFFFFFFFFC0;
          }
          else
          {
            unint64_t v197 = v190 + 1;
            unint64_t v198 = (v189 + 63) >> 6;
            if (v190 + 1 < v198)
            {
              unint64_t v199 = (unint64_t)v187[v197].isa;
              if (!v199)
              {
                unint64_t v197 = v190 + 2;
                if (v190 + 2 >= v198) {
                  goto LABEL_133;
                }
                unint64_t v199 = (unint64_t)v187[v197].isa;
                if (!v199)
                {
                  unint64_t v197 = v190 + 3;
                  if (v190 + 3 >= v198) {
                    goto LABEL_133;
                  }
                  unint64_t v199 = (unint64_t)v187[v197].isa;
                  if (!v199)
                  {
                    while (v198 - 4 != v190)
                    {
                      unint64_t v199 = (unint64_t)v218[v190++].isa;
                      if (v199)
                      {
                        unint64_t v197 = v190 + 3;
                        goto LABEL_146;
                      }
                    }
                    goto LABEL_133;
                  }
                }
              }
LABEL_146:
              unint64_t v189 = __clz(__rbit64(v199)) + (v197 << 6);
            }
          }
LABEL_133:
          uint64_t v186 = ((char *)&v250->isa + 1);
          unint64_t v183 = v243;
          uint64_t v184 = v189;
          if ((Class *)((char *)&v250->isa + 1) == (Class *)v11)
          {
            LOWORD(v38) = (_WORD)v244;
            swift_bridgeObjectRelease();
            uint64_t v36 = (uint64_t)v261;
            goto LABEL_158;
          }
        }
      }
      LOWORD(v23) = v21;
      unint64_t v28 = (unint64_t)v255;
LABEL_158:
      uint64_t v201 = v222;
      uint64_t v202 = Array.description.getter();
      unint64_t v21 = v203;
      swift_bridgeObjectRelease();
      os_log_t v267 = sub_1000C51B8(v202, v21, (uint64_t *)&v264);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v204 = v223;
      _os_log_impl((void *)&_mh_execute_header, v223, (os_log_type_t)v220, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v201, 0x2Cu);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      os_log_t v205 = v225;
      LOWORD(v21) = v23;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v200 = v225;

      swift_release_n();
LABEL_155:
      unint64_t v28 = (unint64_t)v255;
    }
    unint64_t v59 = v240;
    uint64_t v56 = v258;
    unint64_t v60 = v237;
    uint64_t v53 = v254;
    if (v240 == v238) {
      goto LABEL_24;
    }
  }
LABEL_161:
  if (qword_100907AE0 != -1) {
LABEL_184:
  }
    swift_once();
  sub_10008E2DC(v248, (uint64_t)qword_100920A70);
  Class v206 = Logger.logObject.getter();
  os_log_type_t v207 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v206, v207))
  {
    uint64_t v208 = swift_slowAlloc();
    unint64_t v261 = swift_slowAlloc();
    uint64_t v264 = v261;
    *(_DWORD *)uint64_t v208 = 136446466;
    uint64_t v209 = sub_100662CC0((__int16)v38);
    os_log_t v267 = sub_1000C51B8(v209, v210, (uint64_t *)&v264);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v208 + 12) = 2082;
    uint64_t v211 = sub_100662CC0(v21);
    os_log_t v267 = sub_1000C51B8(v211, v212, (uint64_t *)&v264);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v206, v207, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v208, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  unint64_t v213 = v253;
  os_log_t v214 = self;
  NSString v215 = String._bridgeToObjectiveC()();
  sub_100662CC0((__int16)v38);
  NSString v216 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100662CC0(v21);
  NSString v217 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v214 unauthorizedErrorWithMissingEntitlement:v215 requestedAccessLevel:v216 currentAccesslevel:v217];

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
}

void sub_1006E3B90(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = v3;
  uint64_t v219 = a2;
  uint64_t v8 = *(void *)(a3 + 16);
  unint64_t v9 = *(void *)(a3 + 24);
  uint64_t v208 = &v219;
  unint64_t v209 = v5;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1003B4248((void (*)(__n128 *__return_ptr, id *))sub_100740D24, (uint64_t)v207, a1);
  if (v4) {
    goto LABEL_2;
  }
  uint64_t v11 = v10;
  unint64_t v195 = a1;
  if (qword_1009073A0 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10008E2DC(v12, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  uint64_t v15 = v14;
  uint64_t v192 = a3;
  unint64_t v194 = v5;
  unint64_t v199 = v11;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v201 = v8;
    uint64_t v16 = swift_slowAlloc();
    Class v206 = (void *)swift_slowAlloc();
    v210[0] = v206;
    *(_DWORD *)uint64_t v16 = 136446978;
    os_log_type_t typeb = v15;
    unint64_t v211 = sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)v210);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2048;
    unint64_t v211 = v11[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 22) = 2082;
    uint64_t v15 = v16 + 24;
    type metadata accessor for REMCDSavedAttachment();
    id v17 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;

    unint64_t v211 = sub_1000C51B8(v18, v20, (uint64_t *)v210);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 32) = 2082;
    swift_bridgeObjectRetain();
    unint64_t v211 = sub_1000C51B8(v201, v9, (uint64_t *)v210);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, typeb, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v16, 0x2Au);
    unint64_t v5 = (unint64_t)v206;
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v11 = v199;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  uint64_t v202 = v11[2];
  if (!v202)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v215 = (uint64_t)&_swiftEmptySetSingleton;
  uint64_t v200 = v11 + 4;
  swift_bridgeObjectRetain();
  for (unint64_t i = 0; i != v202; ++i)
  {
    if (i >= v11[2])
    {
      __break(1u);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_145:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_2;
    }
    uint64_t v22 = (id *)&v200[2 * i];
    unint64_t v23 = (unint64_t)v22[1];
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      *(void *)type = i;
      unint64_t v25 = v23 + 32;
      uint64_t v26 = *v22;
      swift_bridgeObjectRetain();
      unint64_t v27 = 0;
      while (1)
      {
        if (v27 >= *(void *)(v23 + 16))
        {
          __break(1u);

          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_2;
        }
        char v28 = *(unsigned char *)(v25 + v27);
        sub_100094134((uint64_t *)&unk_10090AF20);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_10077A530;
        if (v28) {
          id v30 = [v26 reminderID];
        }
        else {
          id v30 = [v26 accountID];
        }
        *(void *)(v29 + 32) = v30;
        v210[0] = (id)v29;
        uint64_t v13 = v210;
        uint64_t v31 = specialized Array._endMutation()();
        unint64_t v5 = (unint64_t)v210[0];
        if ((unint64_t)v210[0] >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
          uint64_t v31 = swift_bridgeObjectRelease();
          if (v32)
          {
LABEL_22:
            if (v32 < 1)
            {
              __break(1u);
LABEL_62:
              uint64_t v62 = v31;
              swift_bridgeObjectRelease();
              unint64_t v63 = sub_100710C98(v15, v32);
              if (v25)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_2;
              }
              uint64_t v186 = v63;
              swift_bridgeObjectRelease();
              uint64_t v176 = v23 + 24;
              char v187 = (uint64_t *)(v32 + 48);
              swift_beginAccess();
              unint64_t v64 = 0;
              unint64_t v175 = (unint64_t)"mutateRelationshipOrdering";
              uint64_t v193 = v62;
              while (2)
              {
                if (v64 >= v26[2]) {
                  goto LABEL_158;
                }
                unint64_t v188 = v64;
                unint64_t v65 = (id *)&v200[2 * v64];
                id v66 = v65[1];
                id v40 = *v65;
                *(void *)typea = v66;
                swift_bridgeObjectRetain();
                uint64_t v39 = sub_100695DC4([v40 remObjectID], (void (*)(void))type metadata accessor for REMCDSavedAttachment, 0xD000000000000014, (void *)0x80000001007DC170);

                uint64_t v67 = *v187;
                if ((*v187 & 0xC000000000000001) != 0)
                {
                  id v68 = v39;
                  swift_bridgeObjectRetain();
                  uint64_t v69 = __CocoaDictionary.lookup(_:)();
                  if (v69)
                  {
                    os_log_t v214 = (void *)v69;
                    sub_1000963CC(0, (unint64_t *)&qword_100909B00);
                    swift_unknownObjectRetain();
                    swift_dynamicCast();
                    id v70 = (id)v211;
                    swift_unknownObjectRelease();

                    swift_bridgeObjectRelease();
                    uint64_t v26 = v199;
                    goto LABEL_72;
                  }
LABEL_88:

                  swift_bridgeObjectRelease();
                  goto LABEL_89;
                }
                if (!*(void *)(v67 + 16)) {
                  goto LABEL_89;
                }
                id v68 = v39;
                swift_bridgeObjectRetain();
                unint64_t v71 = sub_100306FE8((uint64_t)v68);
                if ((v72 & 1) == 0) {
                  goto LABEL_88;
                }
                id v70 = *(id *)(*(void *)(v67 + 56) + 8 * v71);

                swift_bridgeObjectRelease();
LABEL_72:

                if (v70)
                {
                  unint64_t v183 = v40;
                  if (!v186[2]) {
                    goto LABEL_147;
                  }
                  id v73 = v39;
                  unint64_t v74 = sub_10030703C(v73);
                  if ((v75 & 1) == 0)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();

                    goto LABEL_149;
                  }
                  id v185 = *(id *)(v186[7] + 8 * v74);

                  uint64_t v76 = *(void *)typea;
                  swift_bridgeObjectRetain_n();
                  id v77 = v73;
                  swift_retain_n();
                  id v78 = v77;
                  uint64_t v79 = Logger.logObject.getter();
                  os_log_type_t v80 = static os_log_type_t.default.getter();
                  int64_t v182 = v78;
                  if (os_log_type_enabled(v79, v80))
                  {
                    os_log_type_t v179 = v80;
                    log = v79;
                    uint64_t v81 = swift_slowAlloc();
                    unint64_t v197 = (void *)swift_slowAlloc();
                    unint64_t v211 = swift_slowAlloc();
                    *(_DWORD *)uint64_t v81 = 136446978;
                    os_log_t v214 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v211);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    *(_WORD *)(v81 + 12) = 2082;
                    sub_10010B4E8(v176, (uint64_t)v218);
                    sub_10073F754((uint64_t)v218, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
                    uint64_t v82 = sub_100696CF4();
                    unint64_t v84 = v83;
                    sub_10073F754((uint64_t)v218, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
                    os_log_t v214 = (void *)sub_1000C51B8(v82, v84, (uint64_t *)&v211);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v81 + 22) = 2114;
                    os_log_t v214 = v78;
                    id v85 = v78;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    *unint64_t v197 = v78;

                    *(_WORD *)(v81 + 32) = 2082;
                    uint64_t v76 = *(void *)typea;
                    int64_t v86 = *(void *)(*(void *)typea + 16);
                    if (v86)
                    {
                      os_log_t v214 = _swiftEmptyArrayStorage;
                      sub_1001DE058(0, v86, 0);
                      uint64_t v87 = *(void *)typea;
                      uint64_t v88 = 0;
                      char v89 = v214;
                      uint64_t v90 = v214[2];
                      uint64_t v91 = 2 * v90;
                      do
                      {
                        unint64_t v92 = v90 + v88;
                        if (*(unsigned char *)(v87 + v88 + 32)) {
                          uint64_t v93 = 0x7265646E696D6572;
                        }
                        else {
                          uint64_t v93 = 0x49746E756F636361;
                        }
                        if (*(unsigned char *)(v87 + v88 + 32)) {
                          unint64_t v94 = 0xEA00000000004449;
                        }
                        else {
                          unint64_t v94 = 0xE900000000000044;
                        }
                        os_log_t v214 = v89;
                        unint64_t v95 = v89[3];
                        unint64_t v96 = v92 + 1;
                        if (v92 >= v95 >> 1)
                        {
                          sub_1001DE058(v95 > 1, v92 + 1, 1);
                          uint64_t v87 = *(void *)typea;
                          char v89 = v214;
                        }
                        ++v88;
                        v89[2] = v96;
                        unint64_t v97 = &v89[v91];
                        v97[4] = v93;
                        v97[5] = v94;
                        v91 += 2;
                      }
                      while (v86 != v88);
                      uint64_t v76 = v87;
                      swift_bridgeObjectRelease();
                      uint64_t v26 = v199;
                      id v40 = v183;
                      uint64_t v62 = v193;
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                    }
                    uint64_t v103 = Array.description.getter();
                    unint64_t v105 = v104;
                    swift_bridgeObjectRelease();
                    os_log_t v214 = (void *)sub_1000C51B8(v103, v105, (uint64_t *)&v211);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    _os_log_impl((void *)&_mh_execute_header, log, v179, "[%{public}s] UPDATE RELATIONSHIPS {author: %{public}s, objectID: %{public}@, changedRelationshipKeys: %{public}s}", (uint8_t *)v81, 0x2Au);
                    sub_100094134((uint64_t *)&unk_10090A040);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();

                    unint64_t v23 = v194;
                  }
                  else
                  {

                    swift_release_n();
                    swift_bridgeObjectRelease_n();
                  }
                  uint64_t v106 = v76;
                  uint64_t v177 = *(void *)(v76 + 16);
                  if (v177)
                  {
                    unint64_t v107 = 0;
                    uint64_t v108 = v76 + 32;
                    uint64_t v174 = v76 + 32;
                    while (v107 < *(void *)(v106 + 16))
                    {
                      char v109 = *(unsigned char *)(v108 + v107);
                      sub_100094134((uint64_t *)&unk_10090AF20);
                      uint64_t v110 = swift_allocObject();
                      *(_OWORD *)(v110 + 16) = xmmword_10077A530;
                      char v180 = v109;
                      if (v109) {
                        id v111 = [v40 reminderID];
                      }
                      else {
                        id v111 = [v40 accountID];
                      }
                      *(void *)(v110 + 32) = v111;
                      unint64_t v211 = v110;
                      specialized Array._endMutation()();
                      unint64_t v112 = v211;
                      if (v211 >> 62)
                      {
                        swift_bridgeObjectRetain();
                        uint64_t v113 = _CocoaArrayWrapper.endIndex.getter();
                        swift_bridgeObjectRelease();
                        unint64_t v178 = v107;
                        if (v113)
                        {
LABEL_106:
                          unint64_t v198 = v112 & 0xC000000000000001;
                          uint64_t v114 = 4;
                          Swift::Int v115 = (Swift::Int)_swiftEmptyDictionarySingleton;
                          uint64_t v189 = v113;
                          os_log_t loga = (os_log_t)v112;
                          while (1)
                          {
                            if (v198) {
                              id v118 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                            }
                            else {
                              id v118 = *(id *)(v112 + 8 * v114);
                            }
                            uint64_t v119 = v118;
                            uint64_t v120 = v114 - 3;
                            if (__OFADD__(v114 - 4, 1)) {
                              goto LABEL_155;
                            }
                            sub_1000963CC(0, (unint64_t *)&unk_10090AF40);
                            id v121 = v119;
                            os_log_type_t v122 = v121;
                            if (!*(void *)(v62 + 16)) {
                              break;
                            }
                            id v123 = v121;
                            unint64_t v124 = sub_10030703C(v123);
                            if ((v125 & 1) == 0)
                            {
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();

                              goto LABEL_141;
                            }
                            id v126 = *(id *)(*(void *)(v62 + 56) + 8 * v124);

                            if ((v115 & 0xC000000000000001) != 0)
                            {
                              if (v115 < 0) {
                                uint64_t v127 = v115;
                              }
                              else {
                                uint64_t v127 = v115 & 0xFFFFFFFFFFFFFF8;
                              }
                              id v128 = v126;
                              uint64_t v129 = __CocoaDictionary.count.getter();
                              if (__OFADD__(v129, 1)) {
                                goto LABEL_157;
                              }
                              Swift::Int v115 = sub_1001A7A10(v127, v129 + 1);
                            }
                            else
                            {
                              id v130 = v126;
                            }
                            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                            unint64_t v211 = v115;
                            unint64_t v133 = sub_100306FE8((uint64_t)v123);
                            uint64_t v134 = *(void *)(v115 + 16);
                            BOOL v135 = (v132 & 1) == 0;
                            uint64_t v136 = v134 + v135;
                            if (__OFADD__(v134, v135)) {
                              goto LABEL_156;
                            }
                            char v137 = v132;
                            if (*(void *)(v115 + 24) >= v136)
                            {
                              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                                sub_100319990();
                              }
                            }
                            else
                            {
                              sub_100310B54(v136, isUniquelyReferenced_nonNull_native);
                              unint64_t v138 = sub_100306FE8((uint64_t)v123);
                              if ((v137 & 1) != (v139 & 1)) {
                                goto LABEL_162;
                              }
                              unint64_t v133 = v138;
                            }
                            uint64_t v62 = v193;
                            Swift::Int v115 = v211;
                            if (v137)
                            {
                              uint64_t v116 = *(void *)(v211 + 56);

                              *(void *)(v116 + 8 * v133) = v126;
                            }
                            else
                            {
                              *(void *)(v211 + 8 * (v133 >> 6) + 64) |= 1 << v133;
                              uint64_t v140 = 8 * v133;
                              *(void *)(*(void *)(v115 + 48) + v140) = v123;
                              *(void *)(*(void *)(v115 + 56) + v140) = v126;
                              uint64_t v141 = *(void *)(v115 + 16);
                              BOOL v142 = __OFADD__(v141, 1);
                              uint64_t v143 = v141 + 1;
                              if (v142) {
                                goto LABEL_159;
                              }
                              *(void *)(v115 + 16) = v143;
                              id v144 = v123;
                            }
                            unint64_t v112 = (unint64_t)loga;

                            swift_bridgeObjectRelease();
                            ++v114;
                            BOOL v117 = v120 == v189;
                            unint64_t v23 = v194;
                            uint64_t v26 = v199;
                            if (v117) {
                              goto LABEL_133;
                            }
                          }
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
LABEL_141:
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_retain_n();
                          id v147 = v122;
                          uint64_t v148 = Logger.logObject.getter();
                          os_log_type_t v149 = static os_log_type_t.error.getter();
                          if (os_log_type_enabled(v148, v149))
                          {
                            uint64_t v150 = swift_slowAlloc();
                            unint64_t v211 = swift_slowAlloc();
                            *(_DWORD *)uint64_t v150 = 136446978;
                            os_log_t v214 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v211);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();
                            *(_WORD *)(v150 + 12) = 2082;
                            sub_10010B4E8(v176, (uint64_t)v217);
                            sub_10073F754((uint64_t)v217, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
                            uint64_t v151 = sub_100696CF4();
                            unint64_t v153 = v152;
                            sub_10073F754((uint64_t)v217, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
                            os_log_t v214 = (void *)sub_1000C51B8(v151, v153, (uint64_t *)&v211);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();
                            swift_release_n();
                            swift_bridgeObjectRelease();
                            *(_WORD *)(v150 + 22) = 2080;
                            id v154 = [v147 description];
                            uint64_t v155 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                            unint64_t v157 = v156;

                            os_log_t v214 = (void *)sub_1000C51B8(v155, v157, (uint64_t *)&v211);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();

                            swift_bridgeObjectRelease();
                            *(_WORD *)(v150 + 32) = 2080;
                            id v158 = [v147 description];
                            uint64_t v159 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                            unint64_t v161 = v160;

                            os_log_t v214 = (void *)sub_1000C51B8(v159, v161, (uint64_t *)&v211);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();

                            swift_bridgeObjectRelease();
                            _os_log_impl((void *)&_mh_execute_header, v148, v149, "[%{public}s] Tried to establish realtionship with non-existent target object -- bail {author: %{public}s, cdObjectID: %s, relationshipObjectID: %s}", (uint8_t *)v150, 0x2Au);
                            swift_arrayDestroy();
                            swift_slowDealloc();
                            swift_slowDealloc();
                          }
                          else
                          {

                            swift_release_n();
                          }
                          [self noSuchObjectErrorWithObjectID:v147];
                          swift_willThrow();

                          return;
                        }
                      }
                      else
                      {
                        uint64_t v113 = *(void *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x10);
                        unint64_t v178 = v107;
                        if (v113) {
                          goto LABEL_106;
                        }
                      }
                      Swift::Int v115 = (Swift::Int)_swiftEmptyDictionarySingleton;
LABEL_133:
                      swift_bridgeObjectRelease();
                      uint64_t v145 = sub_100420CF8(v115);
                      swift_bridgeObjectRelease();
                      id v40 = v183;
                      sub_1001B4658(v183, v185, v180, v145);
                      unint64_t v107 = v178 + 1;
                      swift_bridgeObjectRelease();
                      uint64_t v106 = *(void *)typea;
                      uint64_t v108 = v174;
                      if (v178 + 1 == v177) {
                        goto LABEL_134;
                      }
                    }
                    goto LABEL_160;
                  }
LABEL_134:
                  swift_bridgeObjectRelease();
                  if (*(unsigned char *)(v23 + 104))
                  {
                    id v146 = v185;
                    [v146 updateChangeCount];
                  }
                  else
                  {
                  }
                }
                else
                {
LABEL_89:
                  swift_bridgeObjectRelease();
                  id v98 = v39;
                  uint64_t v99 = Logger.logObject.getter();
                  os_log_type_t v100 = static os_log_type_t.info.getter();
                  if (os_log_type_enabled(v99, v100))
                  {
                    uint64_t v101 = swift_slowAlloc();
                    char v102 = (void *)swift_slowAlloc();
                    unint64_t v211 = swift_slowAlloc();
                    *(_DWORD *)uint64_t v101 = 136446466;
                    *(void *)(v101 + 4) = sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v211);
                    *(_WORD *)(v101 + 12) = 2114;
                    *(void *)(v101 + 14) = v98;
                    *char v102 = v98;

                    _os_log_impl((void *)&_mh_execute_header, v99, v100, "[%{public}s] Skipping establishRelationships() since this ingestable is immutable and is not a new insertion {objectID: %{public}@}", (uint8_t *)v101, 0x16u);
                    sub_100094134((uint64_t *)&unk_10090A040);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();
                  }
                  else
                  {
                  }
                  uint64_t v26 = v199;
                }
                unint64_t v64 = v188 + 1;
                if (v188 + 1 == v202)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_145;
                }
                continue;
              }
            }
            if ((v5 & 0xC000000000000001) != 0)
            {
              uint64_t v15 = 0;
              do
              {
                unint64_t v33 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                ++v15;
                uint64_t v13 = &v215;
                sub_10031DE54(v210, v33);
              }
              while (v32 != v15);
            }
            else
            {
              uint64_t v15 = 0;
              do
              {
                unint64_t v34 = *(void **)(v5 + 8 * v15++ + 32);
                uint64_t v13 = &v215;
                sub_10031DE54(v210, v34);
              }
              while (v32 != v15);
            }
          }
        }
        else
        {
          uint64_t v32 = *(void *)(((unint64_t)v210[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v32) {
            goto LABEL_22;
          }
        }
        swift_bridgeObjectRelease();
        if (++v27 == v24)
        {

          swift_bridgeObjectRelease();
          uint64_t v11 = v199;
          unint64_t i = *(void *)type;
          break;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v35 = v195;
  if (v195 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v36 = *(void *)((v195 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v37 = _swiftEmptyArrayStorage;
  if (!v36)
  {
LABEL_43:
    unint64_t v196 = v37;
    uint64_t v43 = v215;
    unint64_t v44 = v215 & 0xC000000000000001;
    if ((v215 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v45 = __CocoaSet.count.getter();
      if (v45)
      {
        uint64_t v46 = v45;
        os_log_t v214 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        unint64_t v211 = __CocoaSet.startIndex.getter();
        uint64_t v212 = v47;
        unsigned __int8 v213 = 1;
        if ((v46 & 0x8000000000000000) == 0) {
          goto LABEL_53;
        }
        __break(1u);
        goto LABEL_2;
      }
    }
    else
    {
      uint64_t v46 = *(void *)(v215 + 16);
      swift_bridgeObjectRetain();
      if (v46)
      {
        os_log_t v214 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        unint64_t v211 = sub_1003CA790(v43);
        uint64_t v212 = v48;
        unsigned __int8 v213 = v49 & 1;
        do
        {
LABEL_53:
          while (1)
          {
            uint64_t v56 = v211;
            uint64_t v55 = v212;
            uint64_t v57 = v213;
            sub_1003C9F34(v211, v212, v213, v43);
            unint64_t v59 = v58;
            sub_1000963CC(0, (unint64_t *)&unk_10090AF40);

            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            if (v44) {
              break;
            }
            uint64_t v50 = sub_1003C9E34(v56, v55, v57, v43);
            uint64_t v52 = v51;
            char v54 = v53;
            sub_1000E4EA4(v56, v55, v57);
            unint64_t v211 = v50;
            uint64_t v212 = v52;
            unsigned __int8 v213 = v54 & 1;
            if (!--v46) {
              goto LABEL_58;
            }
          }
          if ((v57 & 1) == 0) {
            goto LABEL_161;
          }
          if (__CocoaSet.Index.handleBitPattern.getter()) {
            swift_isUniquelyReferenced_nonNull_native();
          }
          sub_100094134(&qword_100916988);
          unint64_t v60 = (void (*)(id *, void))Set.Index._asCocoa.modify();
          __CocoaSet.formIndex(after:isUnique:)();
          v60(v210, 0);
          --v46;
        }
        while (v46);
LABEL_58:
        sub_1000E4EA4(v211, v212, v213);
        id v61 = v214;
        swift_bridgeObjectRelease();
        goto LABEL_60;
      }
    }
    swift_bridgeObjectRelease();
    id v61 = _swiftEmptyArrayStorage;
LABEL_60:
    uint64_t v32 = v192;
    unint64_t v23 = v194;
    uint64_t v31 = (uint64_t)sub_100711100((uint64_t)v61, v192);
    unint64_t v25 = 0;
    uint64_t v15 = (uint64_t)v196;
    uint64_t v26 = v199;
    goto LABEL_62;
  }
  v210[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  if (v36 < 0)
  {
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    uint64_t v38 = 0;
    uint64_t v39 = (void *)0xD000000000000014;
    id v40 = (id)0x80000001007DC170;
    while (v36 != v38)
    {
      if ((v195 & 0xC000000000000001) != 0) {
        id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v41 = *(id *)(v35 + 8 * v38 + 32);
      }
      id v42 = v41;
      sub_100695DC4([v42 remObjectID], (void (*)(void))type metadata accessor for REMCDSavedAttachment, 0xD000000000000014, (void *)0x80000001007DC170);
      ++v38;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      unint64_t v35 = v195;
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v36 == v38)
      {
        uint64_t v37 = v210[0];
        goto LABEL_43;
      }
    }
    __break(1u);
    __break(1u);
LABEL_147:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_149:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v162 = v39;
    swift_retain_n();
    id v163 = v162;
    uint64_t v164 = Logger.logObject.getter();
    os_log_type_t v165 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v164, v165))
    {
      uint64_t v166 = swift_slowAlloc();
      unint64_t v211 = swift_slowAlloc();
      *(_DWORD *)uint64_t v166 = 136446722;
      os_log_t v214 = (void *)sub_1000C51B8(0xD000000000000016, v175 | 0x8000000000000000, (uint64_t *)&v211);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v166 + 12) = 2082;
      sub_10010B4E8(v176, (uint64_t)v216);
      sub_10073F754((uint64_t)v216, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v167 = sub_100696CF4();
      unint64_t v169 = v168;
      sub_10073F754((uint64_t)v216, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      os_log_t v214 = (void *)sub_1000C51B8(v167, v169, (uint64_t *)&v211);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v166 + 22) = 2080;
      id v170 = [v163 description];
      uint64_t v171 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v173 = v172;

      id v40 = v183;
      os_log_t v214 = (void *)sub_1000C51B8(v171, v173, (uint64_t *)&v211);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v164, v165, "[%{public}s] Tried to establish relationship with non-existing object -- skipping {author: %{public}s, cdObjectID: %s}", (uint8_t *)v166, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    [self noSuchObjectErrorWithObjectID:v163];
    swift_willThrow();
  }
}

void sub_1006E5774(unint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v5 = v3;
  int v222 = a2;
  uint64_t v8 = *(void *)(a3 + 16);
  unint64_t v9 = *(void *)(a3 + 24);
  unint64_t v211 = &v222;
  unint64_t v212 = v5;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1003B4274((void (*)(__n128 *__return_ptr, id *))sub_1007416BC, (uint64_t)v210, a1);
  if (v4) {
    goto LABEL_2;
  }
  uint64_t v11 = v10;
  unint64_t v196 = a1;
  if (qword_1009073A0 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10008E2DC(v12, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  uint64_t v15 = v14;
  os_log_t log = (os_log_t)a3;
  unint64_t v195 = v5;
  unint64_t v198 = v11;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v201 = v8;
    uint64_t v16 = swift_slowAlloc();
    unint64_t v209 = (void *)swift_slowAlloc();
    v213[0] = v209;
    *(_DWORD *)uint64_t v16 = 136446978;
    os_log_type_t typeb = v15;
    os_log_t v214 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)v213);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2048;
    os_log_t v214 = (void *)v11[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 22) = 2082;
    uint64_t v15 = v16 + 24;
    sub_1000963CC(0, (unint64_t *)&qword_10090DC20);
    id v17 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;

    os_log_t v214 = (void *)sub_1000C51B8(v18, v20, (uint64_t *)v213);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 32) = 2082;
    swift_bridgeObjectRetain();
    os_log_t v214 = (void *)sub_1000C51B8(v201, v9, (uint64_t *)v213);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, typeb, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v16, 0x2Au);
    unint64_t v5 = (unint64_t)v209;
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v11 = v198;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  uint64_t v200 = v11[2];
  if (!v200)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v218 = (uint64_t)&_swiftEmptySetSingleton;
  unint64_t v199 = v11 + 4;
  swift_bridgeObjectRetain();
  for (unint64_t i = 0; i != v200; ++i)
  {
    if (i >= v11[2])
    {
      __break(1u);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_145:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_2;
    }
    uint64_t v22 = (id *)&v199[2 * i];
    unint64_t v23 = (unint64_t)v22[1];
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      *(void *)type = i;
      unint64_t v25 = v222;
      unint64_t v26 = v23 + 32;
      id v202 = *v22;
      swift_bridgeObjectRetain();
      unint64_t v27 = 0;
      while (1)
      {
        if (v27 >= *(void *)(v23 + 16))
        {
          __break(1u);

          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_2;
        }
        char v28 = *(unsigned char *)(v26 + v27);
        sub_100094134((uint64_t *)&unk_10090AF20);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_10077A530;
        if (v28) {
          id v30 = (void *)v25[3];
        }
        else {
          id v30 = (void *)v25[2];
        }
        *(void *)(v29 + 32) = v30;
        v213[0] = (id)v29;
        uint64_t v13 = v213;
        specialized Array._endMutation()();
        unint64_t v5 = (unint64_t)v213[0];
        uint64_t v31 = v30;
        if (v5 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
          uint64_t v31 = (void *)swift_bridgeObjectRelease();
          if (v32)
          {
LABEL_22:
            if (v32 < 1)
            {
              __break(1u);
LABEL_62:
              uint64_t v62 = v31;
              swift_bridgeObjectRelease();
              unint64_t v63 = sub_100711568(v15, v32);
              if (v26)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_2;
              }
              unint64_t v188 = v63;
              swift_bridgeObjectRelease();
              uint64_t v178 = v23 + 24;
              uint64_t v189 = (uint64_t *)(v32 + 48);
              swift_beginAccess();
              unint64_t v64 = 0;
              unint64_t v177 = (unint64_t)"mutateRelationshipOrdering";
              unint64_t v197 = v62;
              while (2)
              {
                if (v64 >= v25[2]) {
                  goto LABEL_158;
                }
                unint64_t v65 = (id *)&v199[2 * v64];
                id v66 = v65[1];
                id v40 = (__objc2_class **)*v65;
                *(void *)typea = v66;
                swift_bridgeObjectRetain();
                uint64_t v39 = (uint64_t *)sub_100694DE8([v40 remObjectID], (unint64_t *)&qword_10090DC20);
                unint64_t v190 = v64;

                uint64_t v67 = *v189;
                if ((*v189 & 0xC000000000000001) != 0)
                {
                  id v68 = v39;
                  swift_bridgeObjectRetain();
                  uint64_t v69 = __CocoaDictionary.lookup(_:)();
                  if (v69)
                  {
                    NSString v217 = (void *)v69;
                    sub_1000963CC(0, (unint64_t *)&qword_100909B00);
                    swift_unknownObjectRetain();
                    swift_dynamicCast();
                    id v70 = v214;
                    swift_unknownObjectRelease();

                    swift_bridgeObjectRelease();
                    unint64_t v25 = v198;
                    goto LABEL_72;
                  }
LABEL_88:

                  swift_bridgeObjectRelease();
                  goto LABEL_89;
                }
                if (!*(void *)(v67 + 16)) {
                  goto LABEL_89;
                }
                id v68 = v39;
                swift_bridgeObjectRetain();
                unint64_t v71 = sub_100306FE8((uint64_t)v68);
                if ((v72 & 1) == 0) {
                  goto LABEL_88;
                }
                id v70 = *(id *)(*(void *)(v67 + 56) + 8 * v71);

                swift_bridgeObjectRelease();
LABEL_72:

                if (v70)
                {
                  id v185 = v40;
                  if (!v188[2]) {
                    goto LABEL_147;
                  }
                  id v73 = v39;
                  unint64_t v74 = sub_10030703C(v73);
                  if ((v75 & 1) == 0)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();

                    goto LABEL_149;
                  }
                  id v187 = *(id *)(v188[7] + 8 * v74);

                  uint64_t v76 = *(void *)typea;
                  swift_bridgeObjectRetain_n();
                  id v77 = v73;
                  swift_retain_n();
                  id v78 = v77;
                  uint64_t v79 = Logger.logObject.getter();
                  os_log_type_t v80 = static os_log_type_t.default.getter();
                  uint64_t v184 = v78;
                  if (os_log_type_enabled(v79, v80))
                  {
                    os_log_type_t v181 = v80;
                    os_log_t loga = v79;
                    uint64_t v81 = swift_slowAlloc();
                    os_log_t v204 = (void *)swift_slowAlloc();
                    os_log_t v214 = (void *)swift_slowAlloc();
                    *(_DWORD *)uint64_t v81 = 136446978;
                    NSString v217 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v214);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    *(_WORD *)(v81 + 12) = 2082;
                    sub_10010B4E8(v178, (uint64_t)v221);
                    sub_10073F754((uint64_t)v221, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
                    uint64_t v82 = sub_100696CF4();
                    unint64_t v84 = v83;
                    sub_10073F754((uint64_t)v221, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
                    NSString v217 = (void *)sub_1000C51B8(v82, v84, (uint64_t *)&v214);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v81 + 22) = 2114;
                    NSString v217 = v78;
                    id v85 = v78;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    void *v204 = v78;

                    *(_WORD *)(v81 + 32) = 2082;
                    uint64_t v76 = *(void *)typea;
                    int64_t v86 = *(void *)(*(void *)typea + 16);
                    if (v86)
                    {
                      NSString v217 = _swiftEmptyArrayStorage;
                      sub_1001DE058(0, v86, 0);
                      uint64_t v87 = *(void *)typea;
                      uint64_t v88 = 0;
                      char v89 = v217;
                      uint64_t v90 = v217[2];
                      uint64_t v91 = 2 * v90;
                      do
                      {
                        unint64_t v92 = v90 + v88;
                        if (*(unsigned char *)(v87 + v88 + 32)) {
                          uint64_t v93 = 0x7265646E696D6572;
                        }
                        else {
                          uint64_t v93 = 0x49746E756F636361;
                        }
                        if (*(unsigned char *)(v87 + v88 + 32)) {
                          unint64_t v94 = 0xEA00000000004449;
                        }
                        else {
                          unint64_t v94 = 0xE900000000000044;
                        }
                        NSString v217 = v89;
                        unint64_t v95 = v89[3];
                        unint64_t v96 = v92 + 1;
                        if (v92 >= v95 >> 1)
                        {
                          sub_1001DE058(v95 > 1, v92 + 1, 1);
                          uint64_t v87 = *(void *)typea;
                          char v89 = v217;
                        }
                        ++v88;
                        v89[2] = v96;
                        unint64_t v97 = &v89[v91];
                        v97[4] = v93;
                        v97[5] = v94;
                        v91 += 2;
                      }
                      while (v86 != v88);
                      uint64_t v76 = v87;
                      swift_bridgeObjectRelease();
                      uint64_t v62 = v197;
                      unint64_t v25 = v198;
                      id v40 = v185;
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                    }
                    uint64_t v103 = Array.description.getter();
                    unint64_t v105 = v104;
                    swift_bridgeObjectRelease();
                    NSString v217 = (void *)sub_1000C51B8(v103, v105, (uint64_t *)&v214);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    _os_log_impl((void *)&_mh_execute_header, loga, v181, "[%{public}s] UPDATE RELATIONSHIPS {author: %{public}s, objectID: %{public}@, changedRelationshipKeys: %{public}s}", (uint8_t *)v81, 0x2Au);
                    sub_100094134((uint64_t *)&unk_10090A040);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();

                    unint64_t v23 = v195;
                  }
                  else
                  {

                    swift_release_n();
                    swift_bridgeObjectRelease_n();
                  }
                  uint64_t v106 = v76;
                  uint64_t v179 = *(void *)(v76 + 16);
                  if (v179)
                  {
                    unint64_t v107 = 0;
                    uint64_t v108 = v76 + 32;
                    uint64_t v176 = v76 + 32;
                    while (v107 < *(void *)(v106 + 16))
                    {
                      unint64_t v180 = v107;
                      char v109 = *(unsigned char *)(v108 + v107);
                      uint64_t v110 = v222;
                      sub_100094134((uint64_t *)&unk_10090AF20);
                      uint64_t v111 = swift_allocObject();
                      *(_OWORD *)(v111 + 16) = xmmword_10077A530;
                      char v182 = v109;
                      if (v109) {
                        unint64_t v112 = (void *)v110[3];
                      }
                      else {
                        unint64_t v112 = (void *)v110[2];
                      }
                      *(void *)(v111 + 32) = v112;
                      os_log_t v214 = (void *)v111;
                      specialized Array._endMutation()();
                      unint64_t v113 = (unint64_t)v214;
                      id v114 = v112;
                      if (v113 >> 62)
                      {
                        swift_bridgeObjectRetain();
                        uint64_t v115 = _CocoaArrayWrapper.endIndex.getter();
                        swift_bridgeObjectRelease();
                        if (v115)
                        {
LABEL_106:
                          unint64_t v205 = v113 & 0xC000000000000001;
                          uint64_t v116 = 4;
                          Swift::Int v117 = (Swift::Int)_swiftEmptyDictionarySingleton;
                          os_log_t logb = (os_log_t)v113;
                          uint64_t v191 = v115;
                          while (1)
                          {
                            if (v205) {
                              id v120 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                            }
                            else {
                              id v120 = *(id *)(v113 + 8 * v116);
                            }
                            id v121 = v120;
                            uint64_t v122 = v116 - 3;
                            if (__OFADD__(v116 - 4, 1)) {
                              goto LABEL_155;
                            }
                            sub_1000963CC(0, (unint64_t *)&unk_10090AF40);
                            id v123 = v121;
                            unint64_t v124 = v123;
                            if (!v62[2]) {
                              break;
                            }
                            id v125 = v123;
                            unint64_t v126 = sub_10030703C(v125);
                            if ((v127 & 1) == 0)
                            {
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();

                              goto LABEL_141;
                            }
                            id v128 = *(id *)(v62[7] + 8 * v126);

                            if ((v117 & 0xC000000000000001) != 0)
                            {
                              if (v117 < 0) {
                                uint64_t v129 = v117;
                              }
                              else {
                                uint64_t v129 = v117 & 0xFFFFFFFFFFFFFF8;
                              }
                              id v130 = v128;
                              uint64_t v131 = __CocoaDictionary.count.getter();
                              if (__OFADD__(v131, 1)) {
                                goto LABEL_157;
                              }
                              Swift::Int v117 = sub_1001A7A10(v129, v131 + 1);
                            }
                            else
                            {
                              id v132 = v128;
                            }
                            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                            os_log_t v214 = (void *)v117;
                            unint64_t v135 = sub_100306FE8((uint64_t)v125);
                            uint64_t v136 = *(void *)(v117 + 16);
                            BOOL v137 = (v134 & 1) == 0;
                            uint64_t v138 = v136 + v137;
                            if (__OFADD__(v136, v137)) {
                              goto LABEL_156;
                            }
                            char v139 = v134;
                            if (*(void *)(v117 + 24) >= v138)
                            {
                              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                                sub_100319990();
                              }
                            }
                            else
                            {
                              sub_100310B54(v138, isUniquelyReferenced_nonNull_native);
                              unint64_t v140 = sub_100306FE8((uint64_t)v125);
                              if ((v139 & 1) != (v141 & 1)) {
                                goto LABEL_162;
                              }
                              unint64_t v135 = v140;
                            }
                            uint64_t v62 = v197;
                            Swift::Int v117 = (Swift::Int)v214;
                            if (v139)
                            {
                              uint64_t v118 = v214[7];

                              *(void *)(v118 + 8 * v135) = v128;
                            }
                            else
                            {
                              v214[(v135 >> 6) + 8] |= 1 << v135;
                              uint64_t v142 = 8 * v135;
                              *(void *)(*(void *)(v117 + 48) + v142) = v125;
                              *(void *)(*(void *)(v117 + 56) + v142) = v128;
                              uint64_t v143 = *(void *)(v117 + 16);
                              BOOL v144 = __OFADD__(v143, 1);
                              uint64_t v145 = v143 + 1;
                              if (v144) {
                                goto LABEL_159;
                              }
                              *(void *)(v117 + 16) = v145;
                              id v146 = v125;
                            }
                            unint64_t v113 = (unint64_t)logb;

                            swift_bridgeObjectRelease();
                            ++v116;
                            BOOL v119 = v122 == v191;
                            unint64_t v23 = v195;
                            unint64_t v25 = v198;
                            if (v119) {
                              goto LABEL_133;
                            }
                          }
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
LABEL_141:
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_retain_n();
                          id v149 = v124;
                          uint64_t v150 = Logger.logObject.getter();
                          os_log_type_t v151 = static os_log_type_t.error.getter();
                          if (os_log_type_enabled(v150, v151))
                          {
                            uint64_t v152 = swift_slowAlloc();
                            os_log_t v214 = (void *)swift_slowAlloc();
                            *(_DWORD *)uint64_t v152 = 136446978;
                            NSString v217 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v214);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();
                            *(_WORD *)(v152 + 12) = 2082;
                            sub_10010B4E8(v178, (uint64_t)v220);
                            sub_10073F754((uint64_t)v220, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
                            uint64_t v153 = sub_100696CF4();
                            unint64_t v155 = v154;
                            sub_10073F754((uint64_t)v220, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
                            NSString v217 = (void *)sub_1000C51B8(v153, v155, (uint64_t *)&v214);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();
                            swift_release_n();
                            swift_bridgeObjectRelease();
                            *(_WORD *)(v152 + 22) = 2080;
                            id v156 = [v149 description];
                            uint64_t v157 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                            unint64_t v159 = v158;

                            NSString v217 = (void *)sub_1000C51B8(v157, v159, (uint64_t *)&v214);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();

                            swift_bridgeObjectRelease();
                            *(_WORD *)(v152 + 32) = 2080;
                            id v160 = [v149 description];
                            uint64_t v161 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                            unint64_t v163 = v162;

                            NSString v217 = (void *)sub_1000C51B8(v161, v163, (uint64_t *)&v214);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();

                            swift_bridgeObjectRelease();
                            _os_log_impl((void *)&_mh_execute_header, v150, v151, "[%{public}s] Tried to establish realtionship with non-existent target object -- bail {author: %{public}s, cdObjectID: %s, relationshipObjectID: %s}", (uint8_t *)v152, 0x2Au);
                            swift_arrayDestroy();
                            swift_slowDealloc();
                            swift_slowDealloc();
                          }
                          else
                          {

                            swift_release_n();
                          }
                          [self noSuchObjectErrorWithObjectID:v149];
                          swift_willThrow();

                          return;
                        }
                      }
                      else
                      {
                        uint64_t v115 = *(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10);
                        if (v115) {
                          goto LABEL_106;
                        }
                      }
                      Swift::Int v117 = (Swift::Int)_swiftEmptyDictionarySingleton;
LABEL_133:
                      swift_bridgeObjectRelease();
                      uint64_t v147 = sub_100420CF8(v117);
                      swift_bridgeObjectRelease();
                      sub_10034F058(v187, v182, v147);
                      unint64_t v107 = v180 + 1;
                      swift_bridgeObjectRelease();
                      id v40 = v185;
                      uint64_t v106 = *(void *)typea;
                      uint64_t v108 = v176;
                      if (v180 + 1 == v179) {
                        goto LABEL_134;
                      }
                    }
                    goto LABEL_160;
                  }
LABEL_134:
                  swift_bridgeObjectRelease();
                  if (*(unsigned char *)(v23 + 104))
                  {
                    id v148 = v187;
                    [v148 updateChangeCount];
                  }
                  else
                  {
                  }
                }
                else
                {
LABEL_89:
                  swift_bridgeObjectRelease();
                  id v98 = v39;
                  uint64_t v99 = Logger.logObject.getter();
                  os_log_type_t v100 = static os_log_type_t.info.getter();
                  if (os_log_type_enabled(v99, v100))
                  {
                    uint64_t v101 = swift_slowAlloc();
                    char v102 = (void *)swift_slowAlloc();
                    os_log_t v214 = (void *)swift_slowAlloc();
                    *(_DWORD *)uint64_t v101 = 136446466;
                    *(void *)(v101 + 4) = sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v214);
                    *(_WORD *)(v101 + 12) = 2114;
                    *(void *)(v101 + 14) = v98;
                    *char v102 = v98;

                    _os_log_impl((void *)&_mh_execute_header, v99, v100, "[%{public}s] Skipping establishRelationships() since this ingestable is immutable and is not a new insertion {objectID: %{public}@}", (uint8_t *)v101, 0x16u);
                    sub_100094134((uint64_t *)&unk_10090A040);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();
                  }
                  else
                  {
                  }
                  unint64_t v25 = v198;
                }
                unint64_t v64 = v190 + 1;
                if (v190 + 1 == v200)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_145;
                }
                continue;
              }
            }
            if ((v5 & 0xC000000000000001) != 0)
            {
              uint64_t v15 = 0;
              do
              {
                unint64_t v33 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                ++v15;
                uint64_t v13 = &v218;
                sub_10031DE54(v213, v33);
              }
              while (v32 != v15);
            }
            else
            {
              uint64_t v15 = 0;
              do
              {
                unint64_t v34 = *(void **)(v5 + 8 * v15++ + 32);
                uint64_t v13 = &v218;
                sub_10031DE54(v213, v34);
              }
              while (v32 != v15);
            }
          }
        }
        else
        {
          uint64_t v32 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v32) {
            goto LABEL_22;
          }
        }
        swift_bridgeObjectRelease();
        if (++v27 == v24)
        {

          swift_bridgeObjectRelease();
          uint64_t v11 = v198;
          unint64_t i = *(void *)type;
          break;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v35 = v196;
  if (v196 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v36 = *(void *)((v196 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v37 = _swiftEmptyArrayStorage;
  if (!v36)
  {
LABEL_43:
    unint64_t v203 = v37;
    uint64_t v43 = v218;
    unint64_t v44 = v218 & 0xC000000000000001;
    if ((v218 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v45 = __CocoaSet.count.getter();
      if (v45)
      {
        uint64_t v46 = v45;
        NSString v217 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        os_log_t v214 = (void *)__CocoaSet.startIndex.getter();
        uint64_t v215 = v47;
        unsigned __int8 v216 = 1;
        if ((v46 & 0x8000000000000000) == 0) {
          goto LABEL_53;
        }
        __break(1u);
        goto LABEL_2;
      }
    }
    else
    {
      uint64_t v46 = *(void *)(v218 + 16);
      swift_bridgeObjectRetain();
      if (v46)
      {
        NSString v217 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        os_log_t v214 = (void *)sub_1003CA790(v43);
        uint64_t v215 = v48;
        unsigned __int8 v216 = v49 & 1;
        do
        {
LABEL_53:
          while (1)
          {
            uint64_t v56 = (uint64_t)v214;
            uint64_t v55 = v215;
            uint64_t v57 = v216;
            sub_1003C9F34((uint64_t)v214, v215, v216, v43);
            unint64_t v59 = v58;
            sub_1000963CC(0, (unint64_t *)&unk_10090AF40);

            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            if (v44) {
              break;
            }
            uint64_t v50 = sub_1003C9E34(v56, v55, v57, v43);
            uint64_t v52 = v51;
            char v54 = v53;
            sub_1000E4EA4(v56, v55, v57);
            os_log_t v214 = (void *)v50;
            uint64_t v215 = v52;
            unsigned __int8 v216 = v54 & 1;
            if (!--v46) {
              goto LABEL_58;
            }
          }
          if ((v57 & 1) == 0) {
            goto LABEL_161;
          }
          if (__CocoaSet.Index.handleBitPattern.getter()) {
            swift_isUniquelyReferenced_nonNull_native();
          }
          sub_100094134(&qword_100916988);
          unint64_t v60 = (void (*)(id *, void))Set.Index._asCocoa.modify();
          __CocoaSet.formIndex(after:isUnique:)();
          v60(v213, 0);
          --v46;
        }
        while (v46);
LABEL_58:
        sub_1000E4EA4((uint64_t)v214, v215, v216);
        id v61 = v217;
        swift_bridgeObjectRelease();
        goto LABEL_60;
      }
    }
    swift_bridgeObjectRelease();
    id v61 = _swiftEmptyArrayStorage;
LABEL_60:
    uint64_t v32 = (uint64_t)log;
    unint64_t v23 = v195;
    uint64_t v31 = sub_100711100((uint64_t)v61, (uint64_t)log);
    unint64_t v26 = 0;
    unint64_t v25 = v198;
    uint64_t v15 = (uint64_t)v203;
    goto LABEL_62;
  }
  v213[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  if (v36 < 0)
  {
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    uint64_t v38 = 0;
    uint64_t v39 = &qword_10090DC20;
    id v40 = off_1008AA448;
    while (v36 != v38)
    {
      if ((v196 & 0xC000000000000001) != 0) {
        id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v41 = *(id *)(v35 + 8 * v38 + 32);
      }
      id v42 = v41;
      sub_100694DE8([v42 remObjectID], (unint64_t *)&qword_10090DC20);
      ++v38;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      unint64_t v35 = v196;
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v36 == v38)
      {
        uint64_t v37 = v213[0];
        goto LABEL_43;
      }
    }
    __break(1u);
    __break(1u);
LABEL_147:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_149:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v164 = v39;
    swift_retain_n();
    os_log_type_t v165 = v164;
    uint64_t v166 = Logger.logObject.getter();
    os_log_type_t v167 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v166, v167))
    {
      uint64_t v168 = swift_slowAlloc();
      os_log_t v214 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v168 = 136446722;
      NSString v217 = (void *)sub_1000C51B8(0xD000000000000016, v177 | 0x8000000000000000, (uint64_t *)&v214);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v168 + 12) = 2082;
      sub_10010B4E8(v178, (uint64_t)v219);
      sub_10073F754((uint64_t)v219, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v169 = sub_100696CF4();
      unint64_t v171 = v170;
      sub_10073F754((uint64_t)v219, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      NSString v217 = (void *)sub_1000C51B8(v169, v171, (uint64_t *)&v214);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v168 + 22) = 2080;
      id v172 = [v165 description];
      uint64_t v173 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v175 = v174;

      id v40 = v185;
      NSString v217 = (void *)sub_1000C51B8(v173, v175, (uint64_t *)&v214);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v166, v167, "[%{public}s] Tried to establish relationship with non-existing object -- skipping {author: %{public}s, cdObjectID: %s}", (uint8_t *)v168, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    [self noSuchObjectErrorWithObjectID:v165];
    swift_willThrow();
  }
}

void sub_1006E72F0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v192 = a2;
  uint64_t v8 = *(void *)(a3 + 16);
  unint64_t v9 = *(void *)(a3 + 24);
  char v182 = &v192;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1003B42A0((void (*)(__n128 *__return_ptr, id *))sub_1007408B8, (uint64_t)v181, a1);
  if (v4) {
    goto LABEL_2;
  }
  uint64_t v11 = v10;
  if (qword_1009073A0 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10008E2DC(v12, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  uint64_t v171 = a3;
  uint64_t v172 = v5;
  unint64_t v174 = a1;
  unint64_t v177 = v11;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v179 = v8;
    uint64_t v15 = swift_slowAlloc();
    v183[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136446978;
    uint64_t v184 = sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, v183);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2048;
    uint64_t v184 = v11[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2082;
    id v173 = (id)(v15 + 24);
    type metadata accessor for REMCDManualSortHint();
    id v16 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v19 = v18;

    uint64_t v184 = sub_1000C51B8(v17, v19, v183);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 32) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v184 = sub_1000C51B8(v179, v9, v183);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  uint64_t v180 = v11[2];
  if (!v180) {
    goto LABEL_2;
  }
  uint64_t v188 = (uint64_t)&_swiftEmptySetSingleton;
  *(void *)type = v11 + 4;
  swift_bridgeObjectRetain();
  unint64_t v20 = 0;
  unint64_t v21 = (uint64_t *)&unk_10090AF20;
  do
  {
    if (v20 >= v11[2]) {
      goto LABEL_102;
    }
    uint64_t v22 = *(void *)type + 16 * v20;
    uint64_t v23 = *(void *)(*(void *)(v22 + 8) + 16);
    if (v23)
    {
      uint64_t v24 = v192;
      id v25 = *(id *)v22;
      swift_bridgeObjectRetain();
      do
      {
        sub_100094134((uint64_t *)&unk_10090AF20);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10077A530;
        unint64_t v27 = *(void **)(v24 + 16);
        *(void *)(inited + 32) = v27;
        v183[0] = inited;
        specialized Array._endMutation()();
        sub_10031DE54(v183, v27);
        char v28 = (void *)v183[0];
        swift_bridgeObjectRelease();

        --v23;
      }
      while (v23);

      swift_bridgeObjectRelease();
      uint64_t v11 = v177;
    }
    ++v20;
  }
  while (v20 != v180);
  swift_bridgeObjectRelease();
  uint64_t v29 = (id *)v174;
  if (v174 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = *(void *)((v174 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v30)
  {
    v183[0] = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v30 < 0)
    {
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      return;
    }
    uint64_t v31 = 0;
    while (v30 != v31)
    {
      if ((v174 & 0xC000000000000001) != 0) {
        id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v32 = v29[v31 + 4];
      }
      id v33 = v32;
      sub_100695DC4([v33 remObjectID], (void (*)(void))type metadata accessor for REMCDManualSortHint, 0xD000000000000013, (void *)0x80000001007DC150);
      ++v31;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      uint64_t v29 = (id *)v174;
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v30 == v31)
      {
        unint64_t v34 = (void *)v183[0];
        goto LABEL_29;
      }
    }
    __break(1u);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_2;
  }
  unint64_t v34 = _swiftEmptyArrayStorage;
LABEL_29:
  uint64_t v35 = v188;
  unint64_t v175 = v188 & 0xC000000000000001;
  if ((v188 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = __CocoaSet.count.getter();
    if (v36)
    {
      uint64_t v37 = v36;
      id v187 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v184 = __CocoaSet.startIndex.getter();
      uint64_t v185 = v38;
      unsigned __int8 v186 = 1;
      if (v37 < 0)
      {
        __break(1u);

        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_2;
      }
      goto LABEL_35;
    }
  }
  else
  {
    uint64_t v37 = *(void *)(v188 + 16);
    swift_bridgeObjectRetain();
    if (v37)
    {
      id v187 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v184 = sub_1003CA790(v35);
      uint64_t v185 = v39;
      unsigned __int8 v186 = v40 & 1;
LABEL_35:
      uint64_t v41 = v35 & 0xFFFFFFFFFFFFFF8;
      if (v35 < 0) {
        uint64_t v41 = v35;
      }
      id v173 = (id)v41;
      do
      {
        while (1)
        {
          uint64_t v47 = v184;
          uint64_t v48 = v185;
          uint64_t v49 = v186;
          sub_1003C9F34(v184, v185, v186, v35);
          uint64_t v51 = v50;
          sub_1000963CC(0, (unint64_t *)&unk_10090AF40);

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          if (v175) {
            break;
          }
          uint64_t v42 = sub_1003C9E34(v47, v48, v49, v35);
          uint64_t v44 = v43;
          char v46 = v45;
          sub_1000E4EA4(v47, v48, v49);
          uint64_t v184 = v42;
          uint64_t v185 = v44;
          unsigned __int8 v186 = v46 & 1;
          if (!--v37) {
            goto LABEL_44;
          }
        }
        if ((v49 & 1) == 0) {
          goto LABEL_125;
        }
        if (__CocoaSet.Index.handleBitPattern.getter()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_100094134(&qword_100916988);
        uint64_t v52 = (void (*)(uint64_t *, void))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v52(v183, 0);
        --v37;
      }
      while (v37);
LABEL_44:
      uint64_t v53 = (uint64_t)v34;
      sub_1000E4EA4(v184, v185, v186);
      char v54 = v187;
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
  }
  uint64_t v53 = (uint64_t)v34;
  swift_bridgeObjectRelease();
  char v54 = _swiftEmptyArrayStorage;
LABEL_46:
  uint64_t v55 = v172;
  uint64_t v56 = sub_100711100((uint64_t)v54, v171);
  swift_bridgeObjectRelease();
  os_log_type_t v167 = sub_1007119D0(v53, v171);
  swift_bridgeObjectRelease();
  unint64_t v21 = (uint64_t *)(v171 + 48);
  swift_beginAccess();
  if (!v177[2])
  {
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
LABEL_103:
    swift_bridgeObjectRelease();
LABEL_2:
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v57 = 0;
  uint64_t v164 = v172 + 24;
  uint64_t v58 = (void *)((unint64_t)_swiftEmptyDictionarySingleton & 0xFFFFFFFFFFFFFF8);
  if ((uint64_t)_swiftEmptyDictionarySingleton < 0) {
    uint64_t v58 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v168 = (uint64_t)v58;
  unint64_t v59 = &selRef_intersectsSet_;
  while (1)
  {
    uint64_t v60 = *(void *)type + 16 * v57;
    uint64_t v61 = *(void *)(v60 + 8);
    id v62 = *(id *)v60;
    swift_bridgeObjectRetain();
    unint64_t v63 = sub_100695DC4([v62 v59[446]], (void (*)(void))type metadata accessor for REMCDManualSortHint, 0xD000000000000013, (void *)0x80000001007DC150);
    unint64_t v165 = v57;

    uint64_t v64 = *v21;
    uint64_t v169 = v62;
    uint64_t v176 = v61;
    if ((*v21 & 0xC000000000000001) != 0)
    {
      id v65 = v63;
      swift_bridgeObjectRetain();
      uint64_t v66 = __CocoaDictionary.lookup(_:)();
      if (v66)
      {
        id v187 = (void *)v66;
        sub_1000963CC(0, (unint64_t *)&qword_100909B00);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v67 = (id)v184;
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
        id v67 = 0;
      }
    }
    else
    {
      if (*(void *)(v64 + 16))
      {
        id v68 = v63;
        swift_bridgeObjectRetain();
        unint64_t v69 = sub_100306FE8((uint64_t)v68);
        if (v70)
        {
          id v67 = *(id *)(*(void *)(v64 + 56) + 8 * v69);

          swift_bridgeObjectRelease();
          goto LABEL_59;
        }

        swift_bridgeObjectRelease();
      }
      id v67 = 0;
    }
LABEL_59:

    if (!v167[2])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_113;
    }
    id v71 = v63;
    unint64_t v72 = sub_10030703C(v71);
    if ((v73 & 1) == 0) {
      break;
    }
    id v173 = *(id *)(v167[7] + 8 * v72);

    swift_bridgeObjectRetain_n();
    id v74 = v71;
    swift_retain_n();
    id v75 = v74;
    uint64_t v76 = Logger.logObject.getter();
    os_log_type_t v77 = static os_log_type_t.default.getter();
    uint64_t v166 = v75;
    if (os_log_type_enabled(v76, v77))
    {
      os_log_type_t v163 = v77;
      uint64_t v78 = swift_slowAlloc();
      unint64_t v162 = (void *)swift_slowAlloc();
      uint64_t v184 = swift_slowAlloc();
      *(_DWORD *)uint64_t v78 = 136446978;
      id v187 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, &v184);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v78 + 12) = 2082;
      sub_10010B4E8(v164, (uint64_t)v191);
      sub_10073F754((uint64_t)v191, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v79 = sub_100696CF4();
      unint64_t v81 = v80;
      sub_10073F754((uint64_t)v191, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      id v187 = (void *)sub_1000C51B8(v79, v81, &v184);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v82 = v61;
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v78 + 22) = 2114;
      id v187 = v75;
      id v83 = v75;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v162 = v75;

      *(_WORD *)(v78 + 32) = 2082;
      int64_t v84 = *(void *)(v61 + 16);
      if (v84)
      {
        id v187 = _swiftEmptyArrayStorage;
        sub_1001DE058(0, v84, 0);
        id v85 = v187;
        unint64_t v86 = v187[2];
        uint64_t v87 = 2 * v86;
        uint64_t v88 = v76;
        do
        {
          id v187 = v85;
          unint64_t v89 = v85[3];
          unint64_t v90 = v86 + 1;
          if (v86 >= v89 >> 1)
          {
            sub_1001DE058(v89 > 1, v86 + 1, 1);
            id v85 = v187;
          }
          v85[2] = v90;
          uint64_t v91 = &v85[v87];
          v91[4] = 0x49746E756F636361;
          v91[5] = 0xE900000000000044;
          v87 += 2;
          unint64_t v86 = v90;
          --v84;
        }
        while (v84);
        uint64_t v82 = v61;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v88 = v76;
      }
      uint64_t v92 = Array.description.getter();
      unint64_t v94 = v93;
      swift_bridgeObjectRelease();
      id v187 = (void *)sub_1000C51B8(v92, v94, &v184);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v88, v163, "[%{public}s] UPDATE RELATIONSHIPS {author: %{public}s, objectID: %{public}@, changedRelationshipKeys: %{public}s}", (uint8_t *)v78, 0x2Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v55 = v172;
      id v62 = v169;
      id v75 = v166;
      uint64_t v61 = v82;
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v170 = *(void *)(v61 + 16);
    if (v170)
    {
      unint64_t v95 = 0;
      while (1)
      {
        if (v95 >= *(void *)(v61 + 16)) {
          goto LABEL_120;
        }
        uint64_t v96 = v192;
        sub_100094134((uint64_t *)&unk_10090AF20);
        uint64_t v97 = swift_initStackObject();
        *(_OWORD *)(v97 + 16) = xmmword_10077A530;
        id v98 = *(void **)(v96 + 16);
        *(void *)(v97 + 32) = v98;
        uint64_t v184 = v97;
        specialized Array._endMutation()();
        uint64_t v99 = v184;
        unint64_t v100 = v184 & 0xC000000000000001;
        id v101 = v98;
        if (v100)
        {
          id v102 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_124;
          }
          id v102 = *(id *)(v99 + 32);
        }
        uint64_t v103 = v102;
        sub_1000963CC(0, (unint64_t *)&unk_10090AF40);
        id v104 = v103;
        unint64_t v105 = v104;
        if (!v56[2]) {
          break;
        }
        id v106 = v104;
        unint64_t v107 = sub_10030703C(v106);
        if ((v108 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          goto LABEL_106;
        }
        id v109 = *(id *)(v56[7] + 8 * v107);

        id v110 = v109;
        uint64_t v111 = _swiftEmptyDictionarySingleton;
        if (((unint64_t)_swiftEmptyDictionarySingleton & 0xC000000000000001) != 0)
        {
          uint64_t v112 = __CocoaDictionary.count.getter();
          if (__OFADD__(v112, 1)) {
            goto LABEL_122;
          }
          uint64_t v111 = (void *)sub_1001A7A10(v168, v112 + 1);
        }
        unint64_t v113 = v56;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v184 = (uint64_t)v111;
        unint64_t v116 = sub_100306FE8((uint64_t)v106);
        uint64_t v117 = v111[2];
        BOOL v118 = (v115 & 1) == 0;
        uint64_t v119 = v117 + v118;
        if (__OFADD__(v117, v118)) {
          goto LABEL_121;
        }
        char v120 = v115;
        if (v111[3] >= v119)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_100319990();
          }
        }
        else
        {
          sub_100310B54(v119, isUniquelyReferenced_nonNull_native);
          unint64_t v121 = sub_100306FE8((uint64_t)v106);
          if ((v120 & 1) != (v122 & 1)) {
            goto LABEL_126;
          }
          unint64_t v116 = v121;
        }
        uint64_t v56 = v113;
        id v123 = (void *)v184;
        if (v120)
        {
          uint64_t v124 = *(void *)(v184 + 56);

          *(void *)(v124 + 8 * v116) = v110;
        }
        else
        {
          *(void *)(v184 + 8 * (v116 >> 6) + 64) |= 1 << v116;
          *(void *)(v123[6] + 8 * v116) = v106;
          *(void *)(v123[7] + 8 * v116) = v110;
          uint64_t v125 = v123[2];
          BOOL v126 = __OFADD__(v125, 1);
          uint64_t v127 = v125 + 1;
          if (v126) {
            goto LABEL_123;
          }
          v123[2] = v127;
          id v128 = v106;
        }
        uint64_t v61 = v176;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v129 = sub_100420CF8((unint64_t)v123);
        swift_bridgeObjectRelease();
        sub_100472358(*(void **)(v192 + 16), v129);
        uint64_t v131 = v130;
        ++v95;
        [v173 setAccount:v130];
        swift_bridgeObjectRelease();

        if (v170 == v95)
        {
          swift_bridgeObjectRelease();
          uint64_t v55 = v172;
          id v62 = v169;
          id v75 = v166;
          goto LABEL_96;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_106:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_retain_n();
      id v135 = v105;
      uint64_t v136 = Logger.logObject.getter();
      os_log_type_t v137 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v136, v137))
      {
        uint64_t v138 = swift_slowAlloc();
        uint64_t v184 = swift_slowAlloc();
        *(_DWORD *)uint64_t v138 = 136446978;
        id v187 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, &v184);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v138 + 12) = 2082;
        sub_10010B4E8(v164, (uint64_t)v190);
        sub_10073F754((uint64_t)v190, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
        uint64_t v139 = sub_100696CF4();
        unint64_t v141 = v140;
        sub_10073F754((uint64_t)v190, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
        id v187 = (void *)sub_1000C51B8(v139, v141, &v184);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v138 + 22) = 2080;
        id v142 = [v135 description];
        uint64_t v143 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v145 = v144;

        id v187 = (void *)sub_1000C51B8(v143, v145, &v184);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v138 + 32) = 2080;
        id v146 = [v135 description];
        uint64_t v147 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v149 = v148;

        id v187 = (void *)sub_1000C51B8(v147, v149, &v184);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v136, v137, "[%{public}s] Tried to establish realtionship with non-existent target object -- bail {author: %{public}s, cdObjectID: %s, relationshipObjectID: %s}", (uint8_t *)v138, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      [self noSuchObjectErrorWithObjectID:v135];
      swift_willThrow();

      return;
    }
    swift_bridgeObjectRelease();
LABEL_96:
    unint64_t v57 = v165 + 1;
    if (*(unsigned char *)(v55 + 104))
    {
      id v132 = v75;
      id v133 = v173;
      [v133 updateChangeCount];

      unint64_t v57 = v165 + 1;
      BOOL v134 = v165 + 1 == v180;
    }
    else
    {

      BOOL v134 = v57 == v180;
    }
    unint64_t v21 = (uint64_t *)(v171 + 48);
    unint64_t v59 = &selRef_intersectsSet_;
    if (v134)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_103;
    }
    if (v57 >= v177[2]) {
      goto LABEL_101;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_113:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v150 = v63;
  swift_retain_n();
  id v151 = v150;
  uint64_t v152 = Logger.logObject.getter();
  os_log_type_t v153 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v152, v153))
  {
    uint64_t v154 = swift_slowAlloc();
    uint64_t v184 = swift_slowAlloc();
    *(_DWORD *)uint64_t v154 = 136446722;
    id v187 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, &v184);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v154 + 12) = 2082;
    sub_10010B4E8(v164, (uint64_t)v189);
    sub_10073F754((uint64_t)v189, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
    uint64_t v155 = sub_100696CF4();
    unint64_t v157 = v156;
    sub_10073F754((uint64_t)v189, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
    id v187 = (void *)sub_1000C51B8(v155, v157, &v184);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v154 + 22) = 2080;
    id v158 = [v151 description];
    uint64_t v159 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v161 = v160;

    id v187 = (void *)sub_1000C51B8(v159, v161, &v184);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v152, v153, "[%{public}s] Tried to establish relationship with non-existing object -- skipping {author: %{public}s, cdObjectID: %s}", (uint8_t *)v154, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  [self noSuchObjectErrorWithObjectID:v151];
  swift_willThrow();
}

void sub_1006E8C14(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, char *, unint64_t), unint64_t *a6, uint64_t a7, void *a8, uint64_t (*a9)(void), void (*a10)(id, void, uint64_t, unint64_t *, uint64_t))
{
  id v16 = v10;
  uint64_t v233 = a2;
  uint64_t v20 = *(void *)(a3 + 16);
  unint64_t v19 = *(void *)(a3 + 24);
  int v222 = &v233;
  os_log_t v223 = v16;
  swift_bridgeObjectRetain();
  uint64_t v21 = a5(a4, v221, a1);
  if (v11) {
    goto LABEL_2;
  }
  uint64_t v220 = v20;
  unint64_t v207 = a1;
  unint64_t v209 = a6;
  uint64_t v202 = a3;
  uint64_t v210 = v21;
  if (qword_1009073A0 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_10008E2DC(v22, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.info.getter();
  unint64_t v205 = (unint64_t)v16;
  uint64_t v206 = a7;
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    v224[0] = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136446978;
    os_log_t v225 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)v224);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 12) = 2048;
    os_log_t v225 = *(void **)(v210 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 2082;
    id v16 = (char *)(v25 + 24);
    sub_1000963CC(0, v209);
    id v26 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v29 = v28;

    os_log_t v225 = (void *)sub_1000C51B8(v27, v29, (uint64_t *)v224);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 32) = 2082;
    swift_bridgeObjectRetain();
    os_log_t v225 = (void *)sub_1000C51B8(v220, v19, (uint64_t *)v224);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v25, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  uint64_t v30 = a8;
  uint64_t v212 = *(void *)(v210 + 16);
  if (!v212)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v229 = (uint64_t)&_swiftEmptySetSingleton;
  uint64_t v211 = v210 + 32;
  uint64_t v31 = swift_bridgeObjectRetain();
  for (unint64_t i = 0; i != v212; ++i)
  {
    if (i >= *(void *)(v31 + 16))
    {
      __break(1u);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
LABEL_144:
      swift_bridgeObjectRelease();
      goto LABEL_2;
    }
    uint64_t v33 = v211 + 16 * i;
    uint64_t v34 = *(void *)(v33 + 8);
    uint64_t v35 = *(void *)(v34 + 16);
    if (v35)
    {
      unint64_t v218 = i;
      uint64_t v30 = v233;
      uint64_t v36 = v34 + 32;
      id type = *(id *)v33;
      swift_bridgeObjectRetain();
      unint64_t v37 = 0;
      while (1)
      {
        if (v37 >= *(void *)(v34 + 16)) {
          goto LABEL_47;
        }
        char v38 = *(unsigned char *)(v36 + v37);
        sub_100094134((uint64_t *)&unk_10090AF20);
        uint64_t v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = xmmword_10077A530;
        if (v38) {
          char v40 = (void *)v30[3];
        }
        else {
          char v40 = (void *)v30[2];
        }
        *(void *)(v39 + 32) = v40;
        v224[0] = (id)v39;
        uint64_t v23 = v224;
        specialized Array._endMutation()();
        unint64_t v41 = (unint64_t)v224[0];
        uint64_t v42 = v40;
        if (v41 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
          uint64_t v42 = (void *)swift_bridgeObjectRelease();
          if (v43)
          {
LABEL_22:
            if (v43 < 1)
            {
              __break(1u);
LABEL_61:
              id v71 = v42;
              swift_bridgeObjectRelease();
              uint64_t v72 = ((uint64_t (*)(id, uint64_t))v30)(type, v35);
              if (v36)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_2;
              }
              uint64_t v73 = v72;
              swift_bridgeObjectRelease();
              uint64_t v190 = v41 + 24;
              uint64_t v200 = (uint64_t *)(v35 + 48);
              swift_beginAccess();
              unint64_t v74 = 0;
              unint64_t v189 = (unint64_t)"mutateRelationshipOrdering";
              uint64_t v196 = v73;
              uint64_t v76 = v209;
              uint64_t v75 = v210;
              uint64_t v219 = v71;
              while (2)
              {
                if (v74 >= *(void *)(v75 + 16)) {
                  goto LABEL_157;
                }
                unint64_t v201 = v74;
                uint64_t v79 = v211 + 16 * v74;
                uint64_t v80 = *(void *)(v79 + 8);
                id v16 = (char *)*(id *)v79;
                *(void *)typea = v80;
                swift_bridgeObjectRetain();
                uint64_t v46 = (uint64_t)sub_100694DE8([v16 remObjectID], v76);

                uint64_t v81 = *v200;
                if ((*v200 & 0xC000000000000001) != 0)
                {
                  id v82 = (id)v46;
                  swift_bridgeObjectRetain();
                  uint64_t v83 = __CocoaDictionary.lookup(_:)();
                  if (v83)
                  {
                    long long v228 = (void *)v83;
                    sub_1000963CC(0, (unint64_t *)&qword_100909B00);
                    swift_unknownObjectRetain();
                    swift_dynamicCast();
                    id v84 = v225;
                    swift_unknownObjectRelease();
                    goto LABEL_73;
                  }
LABEL_89:

                  swift_bridgeObjectRelease();
                  goto LABEL_90;
                }
                if (!*(void *)(v81 + 16)) {
                  goto LABEL_90;
                }
                id v82 = (id)v46;
                swift_bridgeObjectRetain();
                unint64_t v85 = sub_100306FE8((uint64_t)v82);
                if ((v86 & 1) == 0) {
                  goto LABEL_89;
                }
                id v84 = *(id *)(*(void *)(v81 + 56) + 8 * v85);
LABEL_73:

                swift_bridgeObjectRelease();
                if (v84)
                {
                  unint64_t v199 = v16;
                  if (!*(void *)(v73 + 16)) {
                    goto LABEL_146;
                  }
                  id v87 = (id)v46;
                  uint64_t v88 = a9();
                  if ((v89 & 1) == 0)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();

                    goto LABEL_148;
                  }
                  id v198 = *(id *)(*(void *)(v73 + 56) + 8 * v88);

                  uint64_t v90 = *(void *)typea;
                  swift_bridgeObjectRetain_n();
                  id v91 = v87;
                  swift_retain_n();
                  id v92 = v91;
                  unint64_t v93 = Logger.logObject.getter();
                  os_log_type_t v94 = static os_log_type_t.default.getter();
                  unint64_t v195 = v92;
                  if (os_log_type_enabled(v93, v94))
                  {
                    os_log_type_t v203 = v94;
                    os_log_t loga = v93;
                    uint64_t v95 = swift_slowAlloc();
                    uint64_t v96 = (void *)swift_slowAlloc();
                    os_log_t v225 = (void *)swift_slowAlloc();
                    *(_DWORD *)uint64_t v95 = 136446978;
                    long long v228 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v225);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    *(_WORD *)(v95 + 12) = 2082;
                    sub_10010B4E8(v190, (uint64_t)v232);
                    sub_10073F754((uint64_t)v232, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
                    uint64_t v97 = sub_100696CF4();
                    unint64_t v99 = v98;
                    sub_10073F754((uint64_t)v232, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
                    long long v228 = (void *)sub_1000C51B8(v97, v99, (uint64_t *)&v225);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v95 + 22) = 2114;
                    long long v228 = v92;
                    id v100 = v92;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    *uint64_t v96 = v92;

                    *(_WORD *)(v95 + 32) = 2082;
                    int64_t v101 = *(void *)(*(void *)typea + 16);
                    if (v101)
                    {
                      long long v228 = _swiftEmptyArrayStorage;
                      sub_1001DE058(0, v101, 0);
                      uint64_t v102 = *(void *)typea;
                      uint64_t v103 = 0;
                      id v104 = v228;
                      uint64_t v105 = v228[2];
                      uint64_t v106 = 2 * v105;
                      do
                      {
                        unint64_t v107 = v105 + v103;
                        if (*(unsigned char *)(v102 + v103 + 32)) {
                          uint64_t v108 = 0x44496D72616C61;
                        }
                        else {
                          uint64_t v108 = 0x49746E756F636361;
                        }
                        if (*(unsigned char *)(v102 + v103 + 32)) {
                          unint64_t v109 = 0xE700000000000000;
                        }
                        else {
                          unint64_t v109 = 0xE900000000000044;
                        }
                        long long v228 = v104;
                        unint64_t v110 = v104[3];
                        unint64_t v111 = v107 + 1;
                        if (v107 >= v110 >> 1)
                        {
                          sub_1001DE058(v110 > 1, v107 + 1, 1);
                          uint64_t v102 = *(void *)typea;
                          id v104 = v228;
                        }
                        ++v103;
                        v104[2] = v111;
                        uint64_t v112 = &v104[v106];
                        v112[4] = v108;
                        v112[5] = v109;
                        v106 += 2;
                      }
                      while (v101 != v103);
                      uint64_t v90 = v102;
                      swift_bridgeObjectRelease();
                      unint64_t v41 = v205;
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                    }
                    uint64_t v116 = Array.description.getter();
                    unint64_t v118 = v117;
                    swift_bridgeObjectRelease();
                    long long v228 = (void *)sub_1000C51B8(v116, v118, (uint64_t *)&v225);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    _os_log_impl((void *)&_mh_execute_header, loga, v203, "[%{public}s] UPDATE RELATIONSHIPS {author: %{public}s, objectID: %{public}@, changedRelationshipKeys: %{public}s}", (uint8_t *)v95, 0x2Au);
                    sub_100094134((uint64_t *)&unk_10090A040);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();

                    id v16 = v199;
                    uint64_t v73 = v196;
                  }
                  else
                  {

                    swift_release_n();
                    swift_bridgeObjectRelease_n();
                  }
                  uint64_t v191 = *(void *)(v90 + 16);
                  if (v191)
                  {
                    unint64_t v119 = 0;
                    uint64_t v120 = v90 + 32;
                    uint64_t v188 = v90 + 32;
                    while (v119 < *(void *)(v90 + 16))
                    {
                      unint64_t v192 = v119;
                      unsigned int v121 = *(unsigned __int8 *)(v120 + v119);
                      char v122 = v233;
                      sub_100094134((uint64_t *)&unk_10090AF20);
                      uint64_t v123 = swift_allocObject();
                      *(_OWORD *)(v123 + 16) = xmmword_10077A530;
                      uint64_t v124 = v219;
                      unsigned int v193 = v121;
                      if (v121) {
                        uint64_t v125 = (void *)v122[3];
                      }
                      else {
                        uint64_t v125 = (void *)v122[2];
                      }
                      *(void *)(v123 + 32) = v125;
                      os_log_t v225 = (void *)v123;
                      specialized Array._endMutation()();
                      unint64_t v126 = (unint64_t)v225;
                      id v127 = v125;
                      if (v126 >> 62)
                      {
                        swift_bridgeObjectRetain();
                        uint64_t v128 = _CocoaArrayWrapper.endIndex.getter();
                        swift_bridgeObjectRelease();
                        if (v128)
                        {
LABEL_103:
                          os_log_t logb = (os_log_t)(v126 & 0xC000000000000001);
                          uint64_t v129 = 4;
                          Swift::Int v130 = (Swift::Int)_swiftEmptyDictionarySingleton;
                          unint64_t v208 = v126;
                          uint64_t v204 = v128;
                          while (1)
                          {
                            if (logb) {
                              id v132 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                            }
                            else {
                              id v132 = *(id *)(v126 + 8 * v129);
                            }
                            id v133 = v132;
                            uint64_t v134 = v129 - 3;
                            if (__OFADD__(v129 - 4, 1)) {
                              goto LABEL_154;
                            }
                            sub_1000963CC(0, (unint64_t *)&unk_10090AF40);
                            id v135 = v133;
                            uint64_t v136 = v135;
                            if (!v124[2]) {
                              break;
                            }
                            id v137 = v135;
                            unint64_t v138 = sub_10030703C(v137);
                            if ((v139 & 1) == 0)
                            {
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();

                              goto LABEL_139;
                            }
                            id v140 = *(id *)(v124[7] + 8 * v138);

                            if ((v130 & 0xC000000000000001) != 0)
                            {
                              if (v130 < 0) {
                                uint64_t v141 = v130;
                              }
                              else {
                                uint64_t v141 = v130 & 0xFFFFFFFFFFFFFF8;
                              }
                              id v142 = v140;
                              uint64_t v143 = __CocoaDictionary.count.getter();
                              if (__OFADD__(v143, 1)) {
                                goto LABEL_156;
                              }
                              Swift::Int v130 = sub_1001A7A10(v141, v143 + 1);
                            }
                            else
                            {
                              id v144 = v140;
                            }
                            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                            os_log_t v225 = (void *)v130;
                            unint64_t v147 = sub_100306FE8((uint64_t)v137);
                            uint64_t v148 = *(void *)(v130 + 16);
                            BOOL v149 = (v146 & 1) == 0;
                            uint64_t v150 = v148 + v149;
                            if (__OFADD__(v148, v149)) {
                              goto LABEL_155;
                            }
                            char v151 = v146;
                            if (*(void *)(v130 + 24) >= v150)
                            {
                              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                                sub_100319990();
                              }
                            }
                            else
                            {
                              sub_100310B54(v150, isUniquelyReferenced_nonNull_native);
                              unint64_t v152 = sub_100306FE8((uint64_t)v137);
                              if ((v151 & 1) != (v153 & 1)) {
                                goto LABEL_161;
                              }
                              unint64_t v147 = v152;
                            }
                            uint64_t v124 = v219;
                            Swift::Int v130 = (Swift::Int)v225;
                            if (v151)
                            {
                              uint64_t v131 = v225[7];

                              *(void *)(v131 + 8 * v147) = v140;
                            }
                            else
                            {
                              v225[(v147 >> 6) + 8] |= 1 << v147;
                              uint64_t v154 = 8 * v147;
                              *(void *)(*(void *)(v130 + 48) + v154) = v137;
                              *(void *)(*(void *)(v130 + 56) + v154) = v140;
                              uint64_t v155 = *(void *)(v130 + 16);
                              BOOL v156 = __OFADD__(v155, 1);
                              uint64_t v157 = v155 + 1;
                              if (v156) {
                                goto LABEL_158;
                              }
                              *(void *)(v130 + 16) = v157;
                              id v158 = v137;
                            }
                            unint64_t v41 = v205;
                            unint64_t v126 = v208;

                            swift_bridgeObjectRelease();
                            ++v129;
                            if (v134 == v204) {
                              goto LABEL_130;
                            }
                          }
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
LABEL_139:
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_retain_n();
                          id v161 = v136;
                          unint64_t v162 = Logger.logObject.getter();
                          os_log_type_t v163 = static os_log_type_t.error.getter();
                          if (os_log_type_enabled(v162, v163))
                          {
                            uint64_t v164 = swift_slowAlloc();
                            os_log_t v225 = (void *)swift_slowAlloc();
                            *(_DWORD *)uint64_t v164 = 136446978;
                            long long v228 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v225);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();
                            *(_WORD *)(v164 + 12) = 2082;
                            sub_10010B4E8(v190, (uint64_t)v231);
                            sub_10073F754((uint64_t)v231, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
                            uint64_t v165 = sub_100696CF4();
                            unint64_t v167 = v166;
                            sub_10073F754((uint64_t)v231, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
                            long long v228 = (void *)sub_1000C51B8(v165, v167, (uint64_t *)&v225);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();
                            swift_release_n();
                            swift_bridgeObjectRelease();
                            *(_WORD *)(v164 + 22) = 2080;
                            id v168 = [v161 description];
                            uint64_t v169 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                            unint64_t v171 = v170;

                            long long v228 = (void *)sub_1000C51B8(v169, v171, (uint64_t *)&v225);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();

                            swift_bridgeObjectRelease();
                            *(_WORD *)(v164 + 32) = 2080;
                            id v172 = [v161 description];
                            uint64_t v173 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                            unint64_t v175 = v174;

                            long long v228 = (void *)sub_1000C51B8(v173, v175, (uint64_t *)&v225);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();

                            swift_bridgeObjectRelease();
                            _os_log_impl((void *)&_mh_execute_header, v162, v163, "[%{public}s] Tried to establish realtionship with non-existent target object -- bail {author: %{public}s, cdObjectID: %s, relationshipObjectID: %s}", (uint8_t *)v164, 0x2Au);
                            swift_arrayDestroy();
                            swift_slowDealloc();
                            swift_slowDealloc();
                          }
                          else
                          {

                            swift_release_n();
                          }
                          [self noSuchObjectErrorWithObjectID:v161];
                          swift_willThrow();

                          return;
                        }
                      }
                      else
                      {
                        uint64_t v128 = *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10);
                        if (v128) {
                          goto LABEL_103;
                        }
                      }
                      Swift::Int v130 = (Swift::Int)_swiftEmptyDictionarySingleton;
LABEL_130:
                      swift_bridgeObjectRelease();
                      uint64_t v159 = sub_100420CF8(v130);
                      swift_bridgeObjectRelease();
                      a10(v198, v193, v159, v209, v206);
                      unint64_t v119 = v192 + 1;
                      swift_bridgeObjectRelease();
                      id v16 = v199;
                      uint64_t v73 = v196;
                      uint64_t v90 = *(void *)typea;
                      uint64_t v120 = v188;
                      if (v192 + 1 == v191) {
                        goto LABEL_131;
                      }
                    }
                    goto LABEL_159;
                  }
LABEL_131:
                  swift_bridgeObjectRelease();
                  if (*(unsigned char *)(v41 + 104))
                  {
                    id v160 = v198;
                    [v160 updateChangeCount];
                  }
                  else
                  {
                  }
LABEL_135:
                }
                else
                {
LABEL_90:
                  swift_bridgeObjectRelease();
                  id v113 = (id)v46;
                  id v114 = Logger.logObject.getter();
                  os_log_type_t v115 = static os_log_type_t.info.getter();
                  if (!os_log_type_enabled(v114, v115))
                  {

                    goto LABEL_135;
                  }
                  uint64_t v77 = swift_slowAlloc();
                  uint64_t v78 = (void *)swift_slowAlloc();
                  os_log_t v225 = (void *)swift_slowAlloc();
                  *(_DWORD *)uint64_t v77 = 136446466;
                  *(void *)(v77 + 4) = sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v225);
                  *(_WORD *)(v77 + 12) = 2114;
                  *(void *)(v77 + 14) = v113;
                  *uint64_t v78 = v113;

                  _os_log_impl((void *)&_mh_execute_header, v114, v115, "[%{public}s] Skipping establishRelationships() since this ingestable is immutable and is not a new insertion {objectID: %{public}@}", (uint8_t *)v77, 0x16u);
                  sub_100094134((uint64_t *)&unk_10090A040);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                uint64_t v76 = v209;
                uint64_t v75 = v210;
                unint64_t v74 = v201 + 1;
                if (v201 + 1 == v212)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_144;
                }
                continue;
              }
            }
            if ((v41 & 0xC000000000000001) != 0)
            {
              id v16 = 0;
              do
              {
                uint64_t v44 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                ++v16;
                uint64_t v23 = &v229;
                sub_10031DE54(v224, v44);
              }
              while ((char *)v43 != v16);
            }
            else
            {
              id v16 = 0;
              do
              {
                char v45 = *(void **)(v41 + 8 * (void)v16++ + 32);
                uint64_t v23 = &v229;
                sub_10031DE54(v224, v45);
              }
              while ((char *)v43 != v16);
            }
          }
        }
        else
        {
          uint64_t v43 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v43) {
            goto LABEL_22;
          }
        }
        swift_bridgeObjectRelease();
        if (++v37 == v35)
        {

          swift_bridgeObjectRelease();
          uint64_t v31 = v210;
          uint64_t v30 = a8;
          unint64_t i = v218;
          break;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  if (v207 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v46 = *(void *)((v207 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v47 = _swiftEmptyArrayStorage;
  if (!v46)
  {
LABEL_43:
    id type = v47;
    uint64_t v52 = v229;
    unint64_t v53 = v229 & 0xC000000000000001;
    if ((v229 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v54 = __CocoaSet.count.getter();
      if (v54)
      {
        uint64_t v55 = v54;
        long long v228 = _swiftEmptyArrayStorage;
        uint64_t v23 = &v228;
        specialized ContiguousArray.reserveCapacity(_:)();
        os_log_t v225 = (void *)__CocoaSet.startIndex.getter();
        uint64_t v226 = v56;
        unsigned __int8 v227 = 1;
        if ((v55 & 0x8000000000000000) == 0) {
          goto LABEL_52;
        }
        __break(1u);
LABEL_47:
        __break(1u);

        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_2;
      }
    }
    else
    {
      uint64_t v55 = *(void *)(v229 + 16);
      swift_bridgeObjectRetain();
      if (v55)
      {
        long long v228 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        os_log_t v225 = (void *)sub_1003CA790(v52);
        uint64_t v226 = v57;
        unsigned __int8 v227 = v58 & 1;
        do
        {
LABEL_52:
          while (1)
          {
            uint64_t v65 = (uint64_t)v225;
            uint64_t v64 = v226;
            uint64_t v66 = v227;
            sub_1003C9F34((uint64_t)v225, v226, v227, v52);
            id v68 = v67;
            sub_1000963CC(0, (unint64_t *)&unk_10090AF40);

            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            if (v53) {
              break;
            }
            uint64_t v59 = sub_1003C9E34(v65, v64, v66, v52);
            uint64_t v61 = v60;
            char v63 = v62;
            sub_1000E4EA4(v65, v64, v66);
            os_log_t v225 = (void *)v59;
            uint64_t v226 = v61;
            unsigned __int8 v227 = v63 & 1;
            uint64_t v30 = a8;
            if (!--v55) {
              goto LABEL_57;
            }
          }
          if ((v66 & 1) == 0) {
            goto LABEL_160;
          }
          if (__CocoaSet.Index.handleBitPattern.getter()) {
            swift_isUniquelyReferenced_nonNull_native();
          }
          uint64_t v30 = a8;
          sub_100094134(&qword_100916988);
          unint64_t v69 = (void (*)(void, void))Set.Index._asCocoa.modify();
          __CocoaSet.formIndex(after:isUnique:)();
          v69(v224, 0);
          --v55;
        }
        while (v55);
LABEL_57:
        sub_1000E4EA4((uint64_t)v225, v226, v227);
        char v70 = v228;
        swift_bridgeObjectRelease();
        goto LABEL_59;
      }
    }
    swift_bridgeObjectRelease();
    char v70 = _swiftEmptyArrayStorage;
LABEL_59:
    uint64_t v35 = v202;
    unint64_t v41 = v205;
    uint64_t v42 = sub_100711100((uint64_t)v70, v202);
    uint64_t v36 = 0;
    goto LABEL_61;
  }
  v224[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  if (v46 < 0)
  {
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    uint64_t v48 = 0;
    unint64_t v49 = v207;
    while (v46 != v48)
    {
      if ((v207 & 0xC000000000000001) != 0) {
        id v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v50 = *(id *)(v49 + 8 * v48 + 32);
      }
      id v51 = v50;
      sub_100694DE8([v51 remObjectID], v209);
      ++v48;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      unint64_t v49 = v207;
      if (v46 == v48)
      {
        uint64_t v47 = v224[0];
        uint64_t v30 = a8;
        goto LABEL_43;
      }
    }
    __break(1u);
    __break(1u);
LABEL_146:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_148:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v176 = (id)v46;
    swift_retain_n();
    id v177 = v176;
    uint64_t v178 = Logger.logObject.getter();
    os_log_type_t v179 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v178, v179))
    {
      uint64_t v180 = swift_slowAlloc();
      os_log_t v225 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v180 = 136446722;
      long long v228 = (void *)sub_1000C51B8(0xD000000000000016, v189 | 0x8000000000000000, (uint64_t *)&v225);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v180 + 12) = 2082;
      sub_10010B4E8(v190, (uint64_t)v230);
      sub_10073F754((uint64_t)v230, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v181 = sub_100696CF4();
      unint64_t v183 = v182;
      sub_10073F754((uint64_t)v230, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      long long v228 = (void *)sub_1000C51B8(v181, v183, (uint64_t *)&v225);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v180 + 22) = 2080;
      id v184 = [v177 description];
      uint64_t v185 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v187 = v186;

      id v16 = v199;
      long long v228 = (void *)sub_1000C51B8(v185, v187, (uint64_t *)&v225);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v178, v179, "[%{public}s] Tried to establish relationship with non-existing object -- skipping {author: %{public}s, cdObjectID: %s}", (uint8_t *)v180, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    [self noSuchObjectErrorWithObjectID:v177];
    swift_willThrow();
  }
}

void sub_1006EA7A0(unint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v5 = v3;
  int v222 = a2;
  uint64_t v8 = *(void *)(a3 + 16);
  unint64_t v9 = *(void *)(a3 + 24);
  uint64_t v211 = &v222;
  unint64_t v212 = v5;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1003B458C((void (*)(__n128 *__return_ptr, id *))sub_100740FD8, (uint64_t)v210, a1);
  if (v4) {
    goto LABEL_2;
  }
  uint64_t v11 = v10;
  unint64_t v196 = a1;
  if (qword_1009073A0 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10008E2DC(v12, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  uint64_t v15 = v14;
  os_log_t log = (os_log_t)a3;
  unint64_t v195 = v5;
  id v198 = v11;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v201 = v8;
    uint64_t v16 = swift_slowAlloc();
    unint64_t v209 = (void *)swift_slowAlloc();
    v213[0] = v209;
    *(_DWORD *)uint64_t v16 = 136446978;
    os_log_type_t typeb = v15;
    os_log_t v214 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)v213);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2048;
    os_log_t v214 = (void *)v11[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 22) = 2082;
    uint64_t v15 = v16 + 24;
    sub_1000963CC(0, (unint64_t *)&unk_100909AC0);
    id v17 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;

    os_log_t v214 = (void *)sub_1000C51B8(v18, v20, (uint64_t *)v213);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 32) = 2082;
    swift_bridgeObjectRetain();
    os_log_t v214 = (void *)sub_1000C51B8(v201, v9, (uint64_t *)v213);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, typeb, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v16, 0x2Au);
    unint64_t v5 = (unint64_t)v209;
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v11 = v198;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  uint64_t v200 = v11[2];
  if (!v200)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v218 = (uint64_t)&_swiftEmptySetSingleton;
  unint64_t v199 = v11 + 4;
  swift_bridgeObjectRetain();
  for (unint64_t i = 0; i != v200; ++i)
  {
    if (i >= v11[2])
    {
      __break(1u);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_145:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_2;
    }
    uint64_t v22 = (id *)&v199[2 * i];
    unint64_t v23 = (unint64_t)v22[1];
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      *(void *)id type = i;
      uint64_t v25 = v222;
      unint64_t v26 = v23 + 32;
      id v202 = *v22;
      swift_bridgeObjectRetain();
      unint64_t v27 = 0;
      while (1)
      {
        if (v27 >= *(void *)(v23 + 16))
        {
          __break(1u);

          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_2;
        }
        char v28 = *(unsigned char *)(v26 + v27);
        sub_100094134((uint64_t *)&unk_10090AF20);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_10077A530;
        if (v28) {
          uint64_t v30 = (void *)v25[3];
        }
        else {
          uint64_t v30 = (void *)v25[2];
        }
        *(void *)(v29 + 32) = v30;
        v213[0] = (id)v29;
        uint64_t v13 = v213;
        specialized Array._endMutation()();
        unint64_t v5 = (unint64_t)v213[0];
        uint64_t v31 = v30;
        if (v5 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
          uint64_t v31 = (void *)swift_bridgeObjectRelease();
          if (v32)
          {
LABEL_22:
            if (v32 < 1)
            {
              __break(1u);
LABEL_62:
              char v62 = v31;
              swift_bridgeObjectRelease();
              char v63 = sub_100712FD8(v15, v32);
              if (v26)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_2;
              }
              uint64_t v188 = v63;
              swift_bridgeObjectRelease();
              uint64_t v178 = v23 + 24;
              unint64_t v189 = (uint64_t *)(v32 + 48);
              swift_beginAccess();
              unint64_t v64 = 0;
              unint64_t v177 = (unint64_t)"mutateRelationshipOrdering";
              unint64_t v197 = v62;
              while (2)
              {
                if (v64 >= v25[2]) {
                  goto LABEL_158;
                }
                uint64_t v65 = (id *)&v199[2 * v64];
                id v66 = v65[1];
                char v40 = (__objc2_class **)*v65;
                *(void *)typea = v66;
                swift_bridgeObjectRetain();
                uint64_t v39 = sub_100694DE8([v40 remObjectID], (unint64_t *)&unk_100909AC0);
                unint64_t v190 = v64;

                uint64_t v67 = *v189;
                if ((*v189 & 0xC000000000000001) != 0)
                {
                  id v68 = v39;
                  swift_bridgeObjectRetain();
                  uint64_t v69 = __CocoaDictionary.lookup(_:)();
                  if (v69)
                  {
                    NSString v217 = (void *)v69;
                    sub_1000963CC(0, (unint64_t *)&qword_100909B00);
                    swift_unknownObjectRetain();
                    swift_dynamicCast();
                    id v70 = v214;
                    swift_unknownObjectRelease();

                    swift_bridgeObjectRelease();
                    uint64_t v25 = v198;
                    goto LABEL_72;
                  }
LABEL_88:

                  swift_bridgeObjectRelease();
                  goto LABEL_89;
                }
                if (!*(void *)(v67 + 16)) {
                  goto LABEL_89;
                }
                id v68 = v39;
                swift_bridgeObjectRetain();
                unint64_t v71 = sub_100306FE8((uint64_t)v68);
                if ((v72 & 1) == 0) {
                  goto LABEL_88;
                }
                id v70 = *(id *)(*(void *)(v67 + 56) + 8 * v71);

                swift_bridgeObjectRelease();
LABEL_72:

                if (v70)
                {
                  uint64_t v185 = v40;
                  if (!v188[2]) {
                    goto LABEL_147;
                  }
                  id v73 = v39;
                  unint64_t v74 = sub_10030703C(v73);
                  if ((v75 & 1) == 0)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();

                    goto LABEL_149;
                  }
                  id v187 = *(id *)(v188[7] + 8 * v74);

                  uint64_t v76 = *(void *)typea;
                  swift_bridgeObjectRetain_n();
                  id v77 = v73;
                  swift_retain_n();
                  id v78 = v77;
                  uint64_t v79 = Logger.logObject.getter();
                  os_log_type_t v80 = static os_log_type_t.default.getter();
                  id v184 = v78;
                  if (os_log_type_enabled(v79, v80))
                  {
                    os_log_type_t v181 = v80;
                    os_log_t loga = v79;
                    uint64_t v81 = swift_slowAlloc();
                    uint64_t v204 = (void *)swift_slowAlloc();
                    os_log_t v214 = (void *)swift_slowAlloc();
                    *(_DWORD *)uint64_t v81 = 136446978;
                    NSString v217 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v214);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    *(_WORD *)(v81 + 12) = 2082;
                    sub_10010B4E8(v178, (uint64_t)v221);
                    sub_10073F754((uint64_t)v221, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
                    uint64_t v82 = sub_100696CF4();
                    unint64_t v84 = v83;
                    sub_10073F754((uint64_t)v221, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
                    NSString v217 = (void *)sub_1000C51B8(v82, v84, (uint64_t *)&v214);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v81 + 22) = 2114;
                    NSString v217 = v78;
                    id v85 = v78;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    void *v204 = v78;

                    *(_WORD *)(v81 + 32) = 2082;
                    uint64_t v76 = *(void *)typea;
                    int64_t v86 = *(void *)(*(void *)typea + 16);
                    if (v86)
                    {
                      NSString v217 = _swiftEmptyArrayStorage;
                      sub_1001DE058(0, v86, 0);
                      uint64_t v87 = *(void *)typea;
                      uint64_t v88 = 0;
                      char v89 = v217;
                      uint64_t v90 = v217[2];
                      uint64_t v91 = 2 * v90;
                      do
                      {
                        unint64_t v92 = v90 + v88;
                        if (*(unsigned char *)(v87 + v88 + 32)) {
                          uint64_t v93 = 0x7265646E696D6572;
                        }
                        else {
                          uint64_t v93 = 0x49746E756F636361;
                        }
                        if (*(unsigned char *)(v87 + v88 + 32)) {
                          unint64_t v94 = 0xEA00000000004449;
                        }
                        else {
                          unint64_t v94 = 0xE900000000000044;
                        }
                        NSString v217 = v89;
                        unint64_t v95 = v89[3];
                        unint64_t v96 = v92 + 1;
                        if (v92 >= v95 >> 1)
                        {
                          sub_1001DE058(v95 > 1, v92 + 1, 1);
                          uint64_t v87 = *(void *)typea;
                          char v89 = v217;
                        }
                        ++v88;
                        v89[2] = v96;
                        uint64_t v97 = &v89[v91];
                        v97[4] = v93;
                        v97[5] = v94;
                        v91 += 2;
                      }
                      while (v86 != v88);
                      uint64_t v76 = v87;
                      swift_bridgeObjectRelease();
                      char v62 = v197;
                      uint64_t v25 = v198;
                      char v40 = v185;
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                    }
                    uint64_t v103 = Array.description.getter();
                    unint64_t v105 = v104;
                    swift_bridgeObjectRelease();
                    NSString v217 = (void *)sub_1000C51B8(v103, v105, (uint64_t *)&v214);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    _os_log_impl((void *)&_mh_execute_header, loga, v181, "[%{public}s] UPDATE RELATIONSHIPS {author: %{public}s, objectID: %{public}@, changedRelationshipKeys: %{public}s}", (uint8_t *)v81, 0x2Au);
                    sub_100094134((uint64_t *)&unk_10090A040);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();

                    unint64_t v23 = v195;
                  }
                  else
                  {

                    swift_release_n();
                    swift_bridgeObjectRelease_n();
                  }
                  uint64_t v106 = v76;
                  uint64_t v179 = *(void *)(v76 + 16);
                  if (v179)
                  {
                    unint64_t v107 = 0;
                    uint64_t v108 = v76 + 32;
                    uint64_t v176 = v76 + 32;
                    while (v107 < *(void *)(v106 + 16))
                    {
                      unint64_t v180 = v107;
                      char v109 = *(unsigned char *)(v108 + v107);
                      unint64_t v110 = v222;
                      sub_100094134((uint64_t *)&unk_10090AF20);
                      uint64_t v111 = swift_allocObject();
                      *(_OWORD *)(v111 + 16) = xmmword_10077A530;
                      char v182 = v109;
                      if (v109) {
                        uint64_t v112 = (void *)v110[3];
                      }
                      else {
                        uint64_t v112 = (void *)v110[2];
                      }
                      *(void *)(v111 + 32) = v112;
                      os_log_t v214 = (void *)v111;
                      specialized Array._endMutation()();
                      unint64_t v113 = (unint64_t)v214;
                      id v114 = v112;
                      if (v113 >> 62)
                      {
                        swift_bridgeObjectRetain();
                        uint64_t v115 = _CocoaArrayWrapper.endIndex.getter();
                        swift_bridgeObjectRelease();
                        if (v115)
                        {
LABEL_106:
                          unint64_t v205 = v113 & 0xC000000000000001;
                          uint64_t v116 = 4;
                          Swift::Int v117 = (Swift::Int)_swiftEmptyDictionarySingleton;
                          os_log_t logb = (os_log_t)v113;
                          uint64_t v191 = v115;
                          while (1)
                          {
                            if (v205) {
                              id v120 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                            }
                            else {
                              id v120 = *(id *)(v113 + 8 * v116);
                            }
                            unsigned int v121 = v120;
                            uint64_t v122 = v116 - 3;
                            if (__OFADD__(v116 - 4, 1)) {
                              goto LABEL_155;
                            }
                            sub_1000963CC(0, (unint64_t *)&unk_10090AF40);
                            id v123 = v121;
                            uint64_t v124 = v123;
                            if (!v62[2]) {
                              break;
                            }
                            id v125 = v123;
                            unint64_t v126 = sub_10030703C(v125);
                            if ((v127 & 1) == 0)
                            {
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();

                              goto LABEL_141;
                            }
                            id v128 = *(id *)(v62[7] + 8 * v126);

                            if ((v117 & 0xC000000000000001) != 0)
                            {
                              if (v117 < 0) {
                                uint64_t v129 = v117;
                              }
                              else {
                                uint64_t v129 = v117 & 0xFFFFFFFFFFFFFF8;
                              }
                              id v130 = v128;
                              uint64_t v131 = __CocoaDictionary.count.getter();
                              if (__OFADD__(v131, 1)) {
                                goto LABEL_157;
                              }
                              Swift::Int v117 = sub_1001A7A10(v129, v131 + 1);
                            }
                            else
                            {
                              id v132 = v128;
                            }
                            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                            os_log_t v214 = (void *)v117;
                            unint64_t v135 = sub_100306FE8((uint64_t)v125);
                            uint64_t v136 = *(void *)(v117 + 16);
                            BOOL v137 = (v134 & 1) == 0;
                            uint64_t v138 = v136 + v137;
                            if (__OFADD__(v136, v137)) {
                              goto LABEL_156;
                            }
                            char v139 = v134;
                            if (*(void *)(v117 + 24) >= v138)
                            {
                              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                                sub_100319990();
                              }
                            }
                            else
                            {
                              sub_100310B54(v138, isUniquelyReferenced_nonNull_native);
                              unint64_t v140 = sub_100306FE8((uint64_t)v125);
                              if ((v139 & 1) != (v141 & 1)) {
                                goto LABEL_162;
                              }
                              unint64_t v135 = v140;
                            }
                            char v62 = v197;
                            Swift::Int v117 = (Swift::Int)v214;
                            if (v139)
                            {
                              uint64_t v118 = v214[7];

                              *(void *)(v118 + 8 * v135) = v128;
                            }
                            else
                            {
                              v214[(v135 >> 6) + 8] |= 1 << v135;
                              uint64_t v142 = 8 * v135;
                              *(void *)(*(void *)(v117 + 48) + v142) = v125;
                              *(void *)(*(void *)(v117 + 56) + v142) = v128;
                              uint64_t v143 = *(void *)(v117 + 16);
                              BOOL v144 = __OFADD__(v143, 1);
                              uint64_t v145 = v143 + 1;
                              if (v144) {
                                goto LABEL_159;
                              }
                              *(void *)(v117 + 16) = v145;
                              id v146 = v125;
                            }
                            unint64_t v113 = (unint64_t)logb;

                            swift_bridgeObjectRelease();
                            ++v116;
                            BOOL v119 = v122 == v191;
                            unint64_t v23 = v195;
                            uint64_t v25 = v198;
                            if (v119) {
                              goto LABEL_133;
                            }
                          }
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
LABEL_141:
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_retain_n();
                          id v149 = v124;
                          uint64_t v150 = Logger.logObject.getter();
                          os_log_type_t v151 = static os_log_type_t.error.getter();
                          if (os_log_type_enabled(v150, v151))
                          {
                            uint64_t v152 = swift_slowAlloc();
                            os_log_t v214 = (void *)swift_slowAlloc();
                            *(_DWORD *)uint64_t v152 = 136446978;
                            NSString v217 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v214);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();
                            *(_WORD *)(v152 + 12) = 2082;
                            sub_10010B4E8(v178, (uint64_t)v220);
                            sub_10073F754((uint64_t)v220, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
                            uint64_t v153 = sub_100696CF4();
                            unint64_t v155 = v154;
                            sub_10073F754((uint64_t)v220, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
                            NSString v217 = (void *)sub_1000C51B8(v153, v155, (uint64_t *)&v214);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();
                            swift_release_n();
                            swift_bridgeObjectRelease();
                            *(_WORD *)(v152 + 22) = 2080;
                            id v156 = [v149 description];
                            uint64_t v157 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                            unint64_t v159 = v158;

                            NSString v217 = (void *)sub_1000C51B8(v157, v159, (uint64_t *)&v214);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();

                            swift_bridgeObjectRelease();
                            *(_WORD *)(v152 + 32) = 2080;
                            id v160 = [v149 description];
                            uint64_t v161 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                            unint64_t v163 = v162;

                            NSString v217 = (void *)sub_1000C51B8(v161, v163, (uint64_t *)&v214);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();

                            swift_bridgeObjectRelease();
                            _os_log_impl((void *)&_mh_execute_header, v150, v151, "[%{public}s] Tried to establish realtionship with non-existent target object -- bail {author: %{public}s, cdObjectID: %s, relationshipObjectID: %s}", (uint8_t *)v152, 0x2Au);
                            swift_arrayDestroy();
                            swift_slowDealloc();
                            swift_slowDealloc();
                          }
                          else
                          {

                            swift_release_n();
                          }
                          [self noSuchObjectErrorWithObjectID:v149];
                          swift_willThrow();

                          return;
                        }
                      }
                      else
                      {
                        uint64_t v115 = *(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10);
                        if (v115) {
                          goto LABEL_106;
                        }
                      }
                      Swift::Int v117 = (Swift::Int)_swiftEmptyDictionarySingleton;
LABEL_133:
                      swift_bridgeObjectRelease();
                      uint64_t v147 = sub_100420CF8(v117);
                      swift_bridgeObjectRelease();
                      sub_10019F84C(v187, v182, v147);
                      unint64_t v107 = v180 + 1;
                      swift_bridgeObjectRelease();
                      char v40 = v185;
                      uint64_t v106 = *(void *)typea;
                      uint64_t v108 = v176;
                      if (v180 + 1 == v179) {
                        goto LABEL_134;
                      }
                    }
                    goto LABEL_160;
                  }
LABEL_134:
                  swift_bridgeObjectRelease();
                  if (*(unsigned char *)(v23 + 104))
                  {
                    id v148 = v187;
                    [v148 updateChangeCount];
                  }
                  else
                  {
                  }
                }
                else
                {
LABEL_89:
                  swift_bridgeObjectRelease();
                  id v98 = v39;
                  unint64_t v99 = Logger.logObject.getter();
                  os_log_type_t v100 = static os_log_type_t.info.getter();
                  if (os_log_type_enabled(v99, v100))
                  {
                    uint64_t v101 = swift_slowAlloc();
                    uint64_t v102 = (void *)swift_slowAlloc();
                    os_log_t v214 = (void *)swift_slowAlloc();
                    *(_DWORD *)uint64_t v101 = 136446466;
                    *(void *)(v101 + 4) = sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v214);
                    *(_WORD *)(v101 + 12) = 2114;
                    *(void *)(v101 + 14) = v98;
                    *uint64_t v102 = v98;

                    _os_log_impl((void *)&_mh_execute_header, v99, v100, "[%{public}s] Skipping establishRelationships() since this ingestable is immutable and is not a new insertion {objectID: %{public}@}", (uint8_t *)v101, 0x16u);
                    sub_100094134((uint64_t *)&unk_10090A040);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();
                  }
                  else
                  {
                  }
                  uint64_t v25 = v198;
                }
                unint64_t v64 = v190 + 1;
                if (v190 + 1 == v200)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_145;
                }
                continue;
              }
            }
            if ((v5 & 0xC000000000000001) != 0)
            {
              uint64_t v15 = 0;
              do
              {
                uint64_t v33 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                ++v15;
                uint64_t v13 = &v218;
                sub_10031DE54(v213, v33);
              }
              while (v32 != v15);
            }
            else
            {
              uint64_t v15 = 0;
              do
              {
                uint64_t v34 = *(void **)(v5 + 8 * v15++ + 32);
                uint64_t v13 = &v218;
                sub_10031DE54(v213, v34);
              }
              while (v32 != v15);
            }
          }
        }
        else
        {
          uint64_t v32 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v32) {
            goto LABEL_22;
          }
        }
        swift_bridgeObjectRelease();
        if (++v27 == v24)
        {

          swift_bridgeObjectRelease();
          uint64_t v11 = v198;
          unint64_t i = *(void *)type;
          break;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v35 = v196;
  if (v196 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v36 = *(void *)((v196 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v37 = _swiftEmptyArrayStorage;
  if (!v36)
  {
LABEL_43:
    os_log_type_t v203 = v37;
    uint64_t v43 = v218;
    unint64_t v44 = v218 & 0xC000000000000001;
    if ((v218 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v45 = __CocoaSet.count.getter();
      if (v45)
      {
        uint64_t v46 = v45;
        NSString v217 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        os_log_t v214 = (void *)__CocoaSet.startIndex.getter();
        uint64_t v215 = v47;
        unsigned __int8 v216 = 1;
        if ((v46 & 0x8000000000000000) == 0) {
          goto LABEL_53;
        }
        __break(1u);
        goto LABEL_2;
      }
    }
    else
    {
      uint64_t v46 = *(void *)(v218 + 16);
      swift_bridgeObjectRetain();
      if (v46)
      {
        NSString v217 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        os_log_t v214 = (void *)sub_1003CA790(v43);
        uint64_t v215 = v48;
        unsigned __int8 v216 = v49 & 1;
        do
        {
LABEL_53:
          while (1)
          {
            uint64_t v56 = (uint64_t)v214;
            uint64_t v55 = v215;
            uint64_t v57 = v216;
            sub_1003C9F34((uint64_t)v214, v215, v216, v43);
            uint64_t v59 = v58;
            sub_1000963CC(0, (unint64_t *)&unk_10090AF40);

            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            if (v44) {
              break;
            }
            uint64_t v50 = sub_1003C9E34(v56, v55, v57, v43);
            uint64_t v52 = v51;
            char v54 = v53;
            sub_1000E4EA4(v56, v55, v57);
            os_log_t v214 = (void *)v50;
            uint64_t v215 = v52;
            unsigned __int8 v216 = v54 & 1;
            if (!--v46) {
              goto LABEL_58;
            }
          }
          if ((v57 & 1) == 0) {
            goto LABEL_161;
          }
          if (__CocoaSet.Index.handleBitPattern.getter()) {
            swift_isUniquelyReferenced_nonNull_native();
          }
          sub_100094134(&qword_100916988);
          uint64_t v60 = (void (*)(id *, void))Set.Index._asCocoa.modify();
          __CocoaSet.formIndex(after:isUnique:)();
          v60(v213, 0);
          --v46;
        }
        while (v46);
LABEL_58:
        sub_1000E4EA4((uint64_t)v214, v215, v216);
        uint64_t v61 = v217;
        swift_bridgeObjectRelease();
        goto LABEL_60;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v61 = _swiftEmptyArrayStorage;
LABEL_60:
    uint64_t v32 = (uint64_t)log;
    unint64_t v23 = v195;
    uint64_t v31 = sub_100711100((uint64_t)v61, (uint64_t)log);
    unint64_t v26 = 0;
    uint64_t v25 = v198;
    uint64_t v15 = (uint64_t)v203;
    goto LABEL_62;
  }
  v213[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  if (v36 < 0)
  {
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    uint64_t v38 = 0;
    uint64_t v39 = &unk_100909AC0;
    char v40 = off_1008AA3E0;
    while (v36 != v38)
    {
      if ((v196 & 0xC000000000000001) != 0) {
        id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v41 = *(id *)(v35 + 8 * v38 + 32);
      }
      id v42 = v41;
      sub_100694DE8([v42 remObjectID], (unint64_t *)&unk_100909AC0);
      ++v38;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      unint64_t v35 = v196;
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v36 == v38)
      {
        unint64_t v37 = v213[0];
        goto LABEL_43;
      }
    }
    __break(1u);
    __break(1u);
LABEL_147:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_149:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v164 = v39;
    swift_retain_n();
    id v165 = v164;
    unint64_t v166 = Logger.logObject.getter();
    os_log_type_t v167 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v166, v167))
    {
      uint64_t v168 = swift_slowAlloc();
      os_log_t v214 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v168 = 136446722;
      NSString v217 = (void *)sub_1000C51B8(0xD000000000000016, v177 | 0x8000000000000000, (uint64_t *)&v214);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v168 + 12) = 2082;
      sub_10010B4E8(v178, (uint64_t)v219);
      sub_10073F754((uint64_t)v219, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v169 = sub_100696CF4();
      unint64_t v171 = v170;
      sub_10073F754((uint64_t)v219, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      NSString v217 = (void *)sub_1000C51B8(v169, v171, (uint64_t *)&v214);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v168 + 22) = 2080;
      id v172 = [v165 description];
      uint64_t v173 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v175 = v174;

      char v40 = v185;
      NSString v217 = (void *)sub_1000C51B8(v173, v175, (uint64_t *)&v214);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v166, v167, "[%{public}s] Tried to establish relationship with non-existing object -- skipping {author: %{public}s, cdObjectID: %s}", (uint8_t *)v168, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    [self noSuchObjectErrorWithObjectID:v165];
    swift_willThrow();
  }
}

void sub_1006EC31C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)v3;
  uint64_t v217 = a2;
  uint64_t v9 = *(void *)(a3 + 16);
  unint64_t v10 = *(void *)(a3 + 24);
  uint64_t v206 = &v217;
  unint64_t v207 = v6;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1003B45B8((void (*)(__n128 *__return_ptr, id *))sub_100741140, (uint64_t)&v205, a1);
  if (v4) {
    goto LABEL_2;
  }
  unint64_t v191 = a1;
  unsigned int v193 = v11;
  uint64_t v188 = a3;
  if (qword_1009073A0 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10008E2DC(v12, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  unint64_t v190 = v6;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    os_log_t logb = (void *)swift_slowAlloc();
    v208[0] = logb;
    *(_DWORD *)uint64_t v15 = 136446978;
    unint64_t v209 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)v208);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2048;
    unint64_t v209 = (void *)v193[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2082;
    uint64_t v5 = v15 + 24;
    sub_1000963CC(0, &qword_100910230);
    os_log_type_t typeb = v14;
    id v16 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v19 = v18;

    unint64_t v209 = (void *)sub_1000C51B8(v17, v19, (uint64_t *)v208);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 32) = 2082;
    swift_bridgeObjectRetain();
    unint64_t v209 = (void *)sub_1000C51B8(v9, v10, (uint64_t *)v208);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, typeb, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v15, 0x2Au);
    unint64_t v6 = (unint64_t)logb;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  uint64_t v195 = v193[2];
  if (!v195) {
    goto LABEL_2;
  }
  uint64_t v213 = (uint64_t)&_swiftEmptySetSingleton;
  unint64_t v194 = v193 + 4;
  uint64_t v20 = swift_bridgeObjectRetain();
  unint64_t v21 = 0;
LABEL_12:
  if (v21 >= *(void *)(v20 + 16))
  {
    __break(1u);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_146;
  }
  uint64_t v22 = (id *)&v194[2 * v21];
  unint64_t v23 = v22[1];
  uint64_t v24 = v23[2];
  if (!v24) {
    goto LABEL_11;
  }
  *(void *)id type = v21;
  uint64_t v199 = v217;
  uint64_t v25 = v23 + 4;
  id v26 = *v22;
  swift_bridgeObjectRetain();
  unint64_t v27 = 0;
  while (2)
  {
    if (v27 >= v23[2]) {
      goto LABEL_52;
    }
    unint64_t v28 = v27++;
    switch(*((unsigned char *)v25 + v28))
    {
      case 1:
        sub_100094134((uint64_t *)&unk_10090AF20);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_10077A530;
        uint64_t v30 = *(void **)(v199 + 24);
        goto LABEL_24;
      case 2:
        sub_100094134((uint64_t *)&unk_10090AF20);
        uint64_t v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = xmmword_10077A530;
        id v32 = [v26 assigneeID];
        goto LABEL_22;
      case 3:
        id v33 = [v26 isOriginatorNullified];
        unint64_t v6 = (unint64_t)_swiftEmptyArrayStorage;
        if (v33) {
          goto LABEL_25;
        }
        sub_100094134((uint64_t *)&unk_10090AF20);
        uint64_t v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = xmmword_10077A530;
        id v32 = [v26 originatorID];
LABEL_22:
        *(void *)(v31 + 32) = v32;
        v208[0] = (id)v31;
        uint64_t v13 = v208;
        id v33 = (id)specialized Array._endMutation()();
        unint64_t v6 = (unint64_t)v208[0];
LABEL_25:
        if (v6 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
          id v33 = (id)swift_bridgeObjectRelease();
          if (!v34) {
            goto LABEL_15;
          }
        }
        else
        {
          uint64_t v34 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v34) {
            goto LABEL_15;
          }
        }
        if (v34 >= 1)
        {
          if ((v6 & 0xC000000000000001) != 0)
          {
            uint64_t v5 = 0;
            do
            {
              unint64_t v35 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              ++v5;
              uint64_t v13 = &v213;
              sub_10031DE54(v208, v35);
            }
            while (v34 != v5);
          }
          else
          {
            uint64_t v5 = 0;
            do
            {
              uint64_t v36 = *(void **)(v6 + 8 * v5++ + 32);
              uint64_t v13 = &v213;
              sub_10031DE54(v208, v36);
            }
            while (v34 != v5);
          }
LABEL_15:
          swift_bridgeObjectRelease();
          if (v27 != v24) {
            continue;
          }

          swift_bridgeObjectRelease();
          uint64_t v20 = (uint64_t)v193;
          unint64_t v21 = *(void *)type;
LABEL_11:
          if (++v21 == v195)
          {
            swift_bridgeObjectRelease();
            if (v191 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v37 = *(void *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            uint64_t v38 = _swiftEmptyArrayStorage;
            if (v37)
            {
              v208[0] = _swiftEmptyArrayStorage;
              specialized ContiguousArray.reserveCapacity(_:)();
              if (v37 < 0)
              {
                __break(1u);
LABEL_156:
                __break(1u);
LABEL_157:
                __break(1u);
LABEL_158:
                __break(1u);
LABEL_159:
                __break(1u);
LABEL_160:
                __break(1u);
LABEL_161:
                __break(1u);
LABEL_162:
                __break(1u);
LABEL_163:
                sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
                KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
                __break(1u);
                JUMPOUT(0x1006EDF74);
              }
              uint64_t v39 = 0;
              unint64_t v40 = v191;
              do
              {
                if ((void *)v37 == v39)
                {
                  __break(1u);
                  __break(1u);
LABEL_148:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
LABEL_150:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  id v161 = v39;
                  swift_retain_n();
                  id v162 = v161;
                  unint64_t v163 = Logger.logObject.getter();
                  os_log_type_t v164 = static os_log_type_t.error.getter();
                  if (os_log_type_enabled(v163, v164))
                  {
                    uint64_t v165 = swift_slowAlloc();
                    unint64_t v209 = (void *)swift_slowAlloc();
                    *(_DWORD *)uint64_t v165 = 136446722;
                    unint64_t v212 = (void *)sub_1000C51B8(0xD000000000000016, v174 | 0x8000000000000000, (uint64_t *)&v209);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    *(_WORD *)(v165 + 12) = 2082;
                    sub_10010B4E8(v175, (uint64_t)v214);
                    sub_10073F754((uint64_t)v214, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
                    uint64_t v166 = sub_100696CF4();
                    unint64_t v168 = v167;
                    sub_10073F754((uint64_t)v214, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
                    unint64_t v212 = (void *)sub_1000C51B8(v166, v168, (uint64_t *)&v209);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v165 + 22) = 2080;
                    id v169 = [v162 description];
                    uint64_t v170 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                    unint64_t v172 = v171;

                    unint64_t v212 = (void *)sub_1000C51B8(v170, v172, (uint64_t *)&v209);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();

                    swift_bridgeObjectRelease();
                    _os_log_impl((void *)&_mh_execute_header, v163, v164, "[%{public}s] Tried to establish relationship with non-existing object -- skipping {author: %{public}s, cdObjectID: %s}", (uint8_t *)v165, 0x20u);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();
                  }
                  else
                  {

                    swift_release_n();
                  }
                  [self noSuchObjectErrorWithObjectID:v162];
                  swift_willThrow();

                  return;
                }
                if ((v191 & 0xC000000000000001) != 0) {
                  id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v41 = *(id *)(v40 + 8 * (void)v39 + 32);
                }
                id v42 = v41;
                sub_100694DE8([v42 remObjectID], &qword_100910230);
                uint64_t v39 = (char *)v39 + 1;

                specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized ContiguousArray._endMutation()();
                unint64_t v40 = v191;
              }
              while ((void *)v37 != v39);
              uint64_t v38 = v208[0];
            }
            uint64_t v200 = v38;
            uint64_t v43 = v213;
            unint64_t v44 = v213 & 0xC000000000000001;
            if ((v213 & 0xC000000000000001) != 0)
            {
              swift_bridgeObjectRetain();
              uint64_t v45 = __CocoaSet.count.getter();
              if (v45)
              {
                uint64_t v46 = v45;
                unint64_t v212 = _swiftEmptyArrayStorage;
                uint64_t v13 = &v212;
                specialized ContiguousArray.reserveCapacity(_:)();
                unint64_t v209 = (void *)__CocoaSet.startIndex.getter();
                uint64_t v210 = v47;
                unsigned __int8 v211 = 1;
                if ((v46 & 0x8000000000000000) == 0) {
                  goto LABEL_57;
                }
                __break(1u);
LABEL_52:
                __break(1u);

                swift_bridgeObjectRelease();
                swift_release();
LABEL_2:
                swift_bridgeObjectRelease();
                return;
              }
            }
            else
            {
              uint64_t v46 = *(void *)(v213 + 16);
              swift_bridgeObjectRetain();
              if (v46)
              {
                unint64_t v212 = _swiftEmptyArrayStorage;
                specialized ContiguousArray.reserveCapacity(_:)();
                unint64_t v209 = (void *)sub_1003CA790(v43);
                uint64_t v210 = v48;
                unsigned __int8 v211 = v49 & 1;
                do
                {
LABEL_57:
                  while (1)
                  {
                    uint64_t v56 = (uint64_t)v209;
                    uint64_t v55 = v210;
                    uint64_t v57 = v211;
                    sub_1003C9F34((uint64_t)v209, v210, v211, v43);
                    uint64_t v59 = v58;
                    sub_1000963CC(0, (unint64_t *)&unk_10090AF40);

                    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                    specialized ContiguousArray._endMutation()();
                    if (v44) {
                      break;
                    }
                    uint64_t v50 = sub_1003C9E34(v56, v55, v57, v43);
                    uint64_t v52 = v51;
                    char v54 = v53;
                    sub_1000E4EA4(v56, v55, v57);
                    unint64_t v209 = (void *)v50;
                    uint64_t v210 = v52;
                    unsigned __int8 v211 = v54 & 1;
                    if (!--v46) {
                      goto LABEL_62;
                    }
                  }
                  if ((v57 & 1) == 0) {
                    goto LABEL_162;
                  }
                  if (__CocoaSet.Index.handleBitPattern.getter()) {
                    swift_isUniquelyReferenced_nonNull_native();
                  }
                  sub_100094134(&qword_100916988);
                  uint64_t v60 = (void (*)(void, void))Set.Index._asCocoa.modify();
                  __CocoaSet.formIndex(after:isUnique:)();
                  v60(v208, 0);
                  --v46;
                }
                while (v46);
LABEL_62:
                sub_1000E4EA4((uint64_t)v209, v210, v211);
                uint64_t v61 = v212;
                swift_bridgeObjectRelease();
                goto LABEL_64;
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v61 = _swiftEmptyArrayStorage;
LABEL_64:
            uint64_t v24 = v188;
            uint64_t v5 = v190;
            id v33 = sub_100711100((uint64_t)v61, v188);
            uint64_t v25 = 0;
            uint64_t v34 = (uint64_t)v193;
            unint64_t v27 = (unint64_t)v200;
            goto LABEL_66;
          }
          goto LABEL_12;
        }
        __break(1u);
LABEL_66:
        id v62 = v33;
        swift_bridgeObjectRelease();
        char v63 = sub_100713440(v27, v24);
        if (v25)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_2;
        }
        id v184 = v63;
        swift_bridgeObjectRelease();
        uint64_t v175 = v5 + 24;
        unint64_t v186 = (uint64_t *)(v24 + 48);
        swift_beginAccess();
        unint64_t v64 = 0;
        unint64_t v174 = (unint64_t)"mutateRelationshipOrdering";
        *(void *)typea = v62;
        while (2)
        {
          if (v64 >= *(void *)(v34 + 16)) {
            goto LABEL_159;
          }
          uint64_t v65 = (id *)&v194[2 * v64];
          id v66 = (int64_t *)v65[1];
          id v67 = *v65;
          uint64_t v201 = v66;
          swift_bridgeObjectRetain();
          uint64_t v39 = sub_100694DE8([v67 remObjectID], &qword_100910230);
          unint64_t v187 = v64;

          uint64_t v68 = *v186;
          if ((*v186 & 0xC000000000000001) != 0)
          {
            id v69 = v39;
            swift_bridgeObjectRetain();
            uint64_t v70 = __CocoaDictionary.lookup(_:)();
            if (v70)
            {
              unint64_t v212 = (void *)v70;
              sub_1000963CC(0, (unint64_t *)&qword_100909B00);
              swift_unknownObjectRetain();
              swift_dynamicCast();
              id v71 = v209;
              swift_unknownObjectRelease();

              swift_bridgeObjectRelease();
              uint64_t v5 = v190;
              goto LABEL_76;
            }

            swift_bridgeObjectRelease();
            uint64_t v5 = v190;
            goto LABEL_94;
          }
          if (!*(void *)(v68 + 16)) {
            goto LABEL_94;
          }
          id v72 = v39;
          swift_bridgeObjectRetain();
          unint64_t v73 = sub_100306FE8((uint64_t)v72);
          if ((v74 & 1) == 0)
          {

            swift_bridgeObjectRelease();
            goto LABEL_94;
          }
          id v71 = *(id *)(*(void *)(v68 + 56) + 8 * v73);

          swift_bridgeObjectRelease();
LABEL_76:

          if (!v71)
          {
LABEL_94:
            swift_bridgeObjectRelease();
            id v99 = v39;
            os_log_type_t v100 = Logger.logObject.getter();
            os_log_type_t v101 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v100, v101))
            {
              uint64_t v102 = swift_slowAlloc();
              uint64_t v103 = v67;
              unint64_t v104 = (void *)swift_slowAlloc();
              unint64_t v209 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v102 = 136446466;
              *(void *)(v102 + 4) = sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v209);
              *(_WORD *)(v102 + 12) = 2114;
              *(void *)(v102 + 14) = v99;
              *unint64_t v104 = v99;

              _os_log_impl((void *)&_mh_execute_header, v100, v101, "[%{public}s] Skipping establishRelationships() since this ingestable is immutable and is not a new insertion {objectID: %{public}@}", (uint8_t *)v102, 0x16u);
              sub_100094134((uint64_t *)&unk_10090A040);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_arrayDestroy();
              uint64_t v5 = v190;
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            uint64_t v34 = (uint64_t)v193;
            goto LABEL_98;
          }
          uint64_t v185 = v67;
          if (!v184[2]) {
            goto LABEL_148;
          }
          id v75 = v39;
          unint64_t v76 = sub_10030703C(v75);
          if ((v77 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            goto LABEL_150;
          }
          id v183 = *(id *)(v184[7] + 8 * v76);

          id v78 = v201;
          swift_bridgeObjectRetain_n();
          id v79 = v75;
          swift_retain_n();
          id v80 = v79;
          uint64_t v81 = Logger.logObject.getter();
          os_log_type_t v82 = static os_log_type_t.default.getter();
          os_log_type_t v181 = v80;
          if (os_log_type_enabled(v81, v82))
          {
            os_log_type_t v178 = v82;
            os_log_t log = v81;
            uint64_t v83 = swift_slowAlloc();
            unint64_t v84 = (void *)swift_slowAlloc();
            unint64_t v209 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v83 = 136446978;
            unint64_t v212 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v209);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v83 + 12) = 2082;
            sub_10010B4E8(v175, (uint64_t)v216);
            sub_10073F754((uint64_t)v216, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v85 = sub_100696CF4();
            unint64_t v87 = v86;
            sub_10073F754((uint64_t)v216, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            unint64_t v212 = (void *)sub_1000C51B8(v85, v87, (uint64_t *)&v209);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v83 + 22) = 2114;
            unint64_t v212 = v80;
            id v88 = v80;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *unint64_t v84 = v80;

            *(_WORD *)(v83 + 32) = 2082;
            int64_t v89 = v201[2];
            if (v89)
            {
              unint64_t v212 = _swiftEmptyArrayStorage;
              sub_1001DE058(0, v89, 0);
              uint64_t v90 = v201;
              uint64_t v91 = 0;
              unint64_t v92 = v212;
              os_log_type_t v93 = v178;
              do
              {
                unint64_t v94 = 0xE900000000000044;
                uint64_t v95 = 0x49746E756F636361;
                switch(*((unsigned char *)v90 + v91 + 32))
                {
                  case 1:
                    uint64_t v95 = 0x7265646E696D6572;
                    goto LABEL_85;
                  case 2:
                    uint64_t v95 = 0x65656E6769737361;
LABEL_85:
                    unint64_t v94 = 0xEA00000000004449;
                    break;
                  case 3:
                    unint64_t v94 = 0xEC0000004449726FLL;
                    uint64_t v95 = 0x74616E696769726FLL;
                    break;
                  default:
                    break;
                }
                unint64_t v212 = v92;
                unint64_t v97 = v92[2];
                unint64_t v96 = v92[3];
                if (v97 >= v96 >> 1)
                {
                  sub_1001DE058(v96 > 1, v97 + 1, 1);
                  uint64_t v90 = v201;
                  unint64_t v92 = v212;
                }
                ++v91;
                v92[2] = v97 + 1;
                id v98 = &v92[2 * v97];
                v98[4] = v95;
                v98[5] = v94;
              }
              while (v89 != v91);
              id v78 = v90;
              swift_bridgeObjectRelease();
              uint64_t v5 = v190;
            }
            else
            {
              swift_bridgeObjectRelease();
              os_log_type_t v93 = v178;
            }
            uint64_t v105 = Array.description.getter();
            unint64_t v107 = v106;
            swift_bridgeObjectRelease();
            unint64_t v212 = (void *)sub_1000C51B8(v105, v107, (uint64_t *)&v209);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, log, v93, "[%{public}s] UPDATE RELATIONSHIPS {author: %{public}s, objectID: %{public}@, changedRelationshipKeys: %{public}s}", (uint8_t *)v83, 0x2Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            id v67 = v185;
          }
          else
          {

            swift_release_n();
            swift_bridgeObjectRelease_n();
          }
          uint64_t v34 = (uint64_t)v193;
          uint64_t v108 = *(void *)typea;
          uint64_t v176 = v78[2];
          if (!v176)
          {
LABEL_135:
            swift_bridgeObjectRelease();
            if (*(unsigned char *)(v5 + 104))
            {
              id v145 = v183;
              [v145 updateChangeCount];
            }
            else
            {
            }
LABEL_98:
            unint64_t v64 = v187 + 1;
            if (v187 + 1 != v195) {
              continue;
            }
            swift_bridgeObjectRelease();
LABEL_146:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_2;
          }
          break;
        }
        unint64_t v109 = 0;
        unint64_t v110 = v78 + 4;
        uint64_t v173 = v78 + 4;
        while (1)
        {
          if (v109 >= v78[2]) {
            goto LABEL_161;
          }
          unint64_t v177 = v109;
          char v179 = *((unsigned char *)v110 + v109);
          unint64_t v111 = (unint64_t)sub_1002A3A00(v67, v179);
          unint64_t v112 = v111;
          if (!(v111 >> 62))
          {
            uint64_t v113 = *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v113) {
              break;
            }
            goto LABEL_133;
          }
          swift_bridgeObjectRetain();
          uint64_t v113 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v113) {
            break;
          }
LABEL_133:
          Swift::Int v115 = (Swift::Int)_swiftEmptyDictionarySingleton;
LABEL_134:
          swift_bridgeObjectRelease();
          uint64_t v144 = sub_100420CF8(v115);
          swift_bridgeObjectRelease();
          id v67 = v185;
          sub_1002A3B8C(v185, v183, v179, v144);
          unint64_t v109 = v177 + 1;
          swift_bridgeObjectRelease();
          uint64_t v5 = v190;
          id v78 = v201;
          unint64_t v110 = v173;
          if (v177 + 1 == v176) {
            goto LABEL_135;
          }
        }
        unint64_t v192 = v112 & 0xC000000000000001;
        uint64_t v114 = 4;
        Swift::Int v115 = (Swift::Int)_swiftEmptyDictionarySingleton;
        unint64_t v189 = v112;
        while (1)
        {
          if (v192) {
            id v117 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v117 = *(id *)(v112 + 8 * v114);
          }
          uint64_t v118 = v117;
          if (__OFADD__(v114 - 4, 1)) {
            goto LABEL_156;
          }
          sub_1000963CC(0, (unint64_t *)&unk_10090AF40);
          id v119 = v118;
          id v120 = v119;
          if (!*(void *)(v108 + 16))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_142;
          }
          uint64_t loga = v114 - 3;
          uint64_t v121 = v113;
          id v122 = v119;
          unint64_t v123 = sub_10030703C(v122);
          if ((v124 & 1) == 0) {
            break;
          }
          id v125 = *(id *)(*(void *)(v108 + 56) + 8 * v123);

          if ((v115 & 0xC000000000000001) != 0)
          {
            if (v115 < 0) {
              uint64_t v126 = v115;
            }
            else {
              uint64_t v126 = v115 & 0xFFFFFFFFFFFFFF8;
            }
            id v127 = v125;
            uint64_t v128 = __CocoaDictionary.count.getter();
            if (__OFADD__(v128, 1)) {
              goto LABEL_158;
            }
            Swift::Int v115 = sub_1001A7A10(v126, v128 + 1);
          }
          else
          {
            id v129 = v125;
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v209 = (void *)v115;
          unint64_t v132 = sub_100306FE8((uint64_t)v122);
          uint64_t v133 = *(void *)(v115 + 16);
          BOOL v134 = (v131 & 1) == 0;
          uint64_t v135 = v133 + v134;
          if (__OFADD__(v133, v134)) {
            goto LABEL_157;
          }
          char v136 = v131;
          if (*(void *)(v115 + 24) >= v135)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_100319990();
            }
          }
          else
          {
            sub_100310B54(v135, isUniquelyReferenced_nonNull_native);
            unint64_t v137 = sub_100306FE8((uint64_t)v122);
            if ((v136 & 1) != (v138 & 1)) {
              goto LABEL_163;
            }
            unint64_t v132 = v137;
          }
          unint64_t v112 = v189;
          Swift::Int v115 = (Swift::Int)v209;
          if (v136)
          {
            uint64_t v116 = v209[7];

            *(void *)(v116 + 8 * v132) = v125;
          }
          else
          {
            v209[(v132 >> 6) + 8] |= 1 << v132;
            uint64_t v139 = 8 * v132;
            *(void *)(*(void *)(v115 + 48) + v139) = v122;
            *(void *)(*(void *)(v115 + 56) + v139) = v125;
            uint64_t v140 = *(void *)(v115 + 16);
            BOOL v141 = __OFADD__(v140, 1);
            uint64_t v142 = v140 + 1;
            if (v141) {
              goto LABEL_160;
            }
            *(void *)(v115 + 16) = v142;
            id v143 = v122;
          }
          uint64_t v34 = (uint64_t)v193;
          uint64_t v108 = *(void *)typea;

          swift_bridgeObjectRelease();
          ++v114;
          uint64_t v113 = v121;
          if (loga == v121) {
            goto LABEL_134;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

LABEL_142:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_retain_n();
        id v146 = v120;
        uint64_t v147 = Logger.logObject.getter();
        os_log_type_t v148 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v147, v148))
        {
          uint64_t v149 = swift_slowAlloc();
          unint64_t v209 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v149 = 136446978;
          unint64_t v212 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v209);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v149 + 12) = 2082;
          sub_10010B4E8(v175, (uint64_t)v215);
          sub_10073F754((uint64_t)v215, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
          uint64_t v150 = sub_100696CF4();
          unint64_t v152 = v151;
          sub_10073F754((uint64_t)v215, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
          unint64_t v212 = (void *)sub_1000C51B8(v150, v152, (uint64_t *)&v209);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v149 + 22) = 2080;
          id v153 = [v146 description];
          uint64_t v154 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v156 = v155;

          unint64_t v212 = (void *)sub_1000C51B8(v154, v156, (uint64_t *)&v209);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v149 + 32) = 2080;
          id v157 = [v146 description];
          uint64_t v158 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v160 = v159;

          unint64_t v212 = (void *)sub_1000C51B8(v158, v160, (uint64_t *)&v209);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v147, v148, "[%{public}s] Tried to establish realtionship with non-existent target object -- bail {author: %{public}s, cdObjectID: %s, relationshipObjectID: %s}", (uint8_t *)v149, 0x2Au);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        [self noSuchObjectErrorWithObjectID:v146];
        swift_willThrow();

        return;
      default:
        sub_100094134((uint64_t *)&unk_10090AF20);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_10077A530;
        uint64_t v30 = *(void **)(v199 + 16);
LABEL_24:
        *(void *)(v29 + 32) = v30;
        v208[0] = (id)v29;
        uint64_t v13 = v208;
        specialized Array._endMutation()();
        unint64_t v6 = (unint64_t)v208[0];
        id v33 = v30;
        goto LABEL_25;
    }
  }
}

void sub_1006EDF94(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, char *, unint64_t), unint64_t *a6, uint64_t a7, void *a8, uint64_t (*a9)(void), void (*a10)(void *, id, void, uint64_t))
{
  uint64_t v15 = v10;
  uint64_t v229 = a2;
  uint64_t v19 = *(void *)(a3 + 16);
  unint64_t v18 = *(void *)(a3 + 24);
  uint64_t v218 = &v229;
  uint64_t v219 = v15;
  swift_bridgeObjectRetain();
  uint64_t v20 = a5(a4, v217, a1);
  if (v11) {
    goto LABEL_2;
  }
  uint64_t v216 = v19;
  unint64_t v204 = a1;
  uint64_t v206 = a6;
  uint64_t v201 = a3;
  uint64_t v207 = v20;
  if (qword_1009073A0 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  sub_10008E2DC(v21, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.info.getter();
  uint64_t v203 = v15;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    v220[0] = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446978;
    unint64_t v221 = sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)v220);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 12) = 2048;
    unint64_t v221 = *(void *)(v207 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 22) = 2082;
    uint64_t v15 = v24 + 24;
    sub_1000963CC(0, v206);
    id v25 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v27 = v26;

    unint64_t v221 = sub_1000C51B8(v19, v27, (uint64_t *)v220);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 32) = 2082;
    swift_bridgeObjectRetain();
    unint64_t v221 = sub_1000C51B8(v216, v18, (uint64_t *)v220);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v24, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  id v28 = a8;
  *(void *)id type = *(void *)(v207 + 16);
  if (!*(void *)type)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v225 = (uint64_t)&_swiftEmptySetSingleton;
  uint64_t v208 = v207 + 32;
  uint64_t v29 = swift_bridgeObjectRetain();
  os_log_t v30 = 0;
  do
  {
    if ((unint64_t)v30 >= *(void *)(v29 + 16))
    {
      __break(1u);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
LABEL_145:
      swift_bridgeObjectRelease();
      goto LABEL_2;
    }
    uint64_t v31 = v208 + 16 * (void)v30;
    uint64_t v32 = *(void *)(v31 + 8);
    uint64_t v33 = *(void *)(v32 + 16);
    if (v33)
    {
      os_log_t log = v30;
      uint64_t v34 = v32 + 32;
      id v28 = *(id *)v31;
      swift_bridgeObjectRetain();
      unint64_t v35 = 0;
      while (1)
      {
        if (v35 >= *(void *)(v32 + 16)) {
          goto LABEL_47;
        }
        char v36 = *(unsigned char *)(v34 + v35);
        sub_100094134((uint64_t *)&unk_10090AF20);
        uint64_t v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = xmmword_10077A530;
        if (v36) {
          id v38 = [v28 reminderID];
        }
        else {
          id v38 = [v28 accountID];
        }
        *(void *)(v37 + 32) = v38;
        v220[0] = (id)v37;
        uint64_t v22 = v220;
        uint64_t v39 = specialized Array._endMutation()();
        uint64_t v19 = (uint64_t)v220[0];
        if ((unint64_t)v220[0] >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
          uint64_t v39 = swift_bridgeObjectRelease();
          if (v40)
          {
LABEL_22:
            if (v40 < 1)
            {
              __break(1u);
LABEL_61:
              uint64_t v67 = v39;
              swift_bridgeObjectRelease();
              uint64_t v68 = ((uint64_t (*)(void *, uint64_t))v28)(v198, v33);
              if (v34)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_2;
              }
              uint64_t v69 = v68;
              swift_bridgeObjectRelease();
              uint64_t v70 = (void *)(v33 + 48);
              uint64_t v186 = v19 + 24;
              swift_beginAccess();
              unint64_t v71 = 0;
              unint64_t v185 = (unint64_t)"mutateRelationshipOrdering";
              uint64_t v193 = v69;
              unint64_t v73 = v206;
              uint64_t v72 = v207;
              unint64_t v190 = v70;
              uint64_t v211 = v67;
              while (2)
              {
                if (v71 >= *(void *)(v72 + 16)) {
                  goto LABEL_158;
                }
                unint64_t v197 = v71;
                uint64_t v74 = v208 + 16 * v71;
                uint64_t v75 = *(void *)(v74 + 8);
                uint64_t v15 = (uint64_t)*(id *)v74;
                uint64_t v205 = v75;
                swift_bridgeObjectRetain();
                uint64_t v43 = (uint64_t)sub_100694DE8([(id)v15 remObjectID], v73);

                uint64_t v76 = *v70;
                if ((*v70 & 0xC000000000000001) != 0)
                {
                  id v77 = (id)v43;
                  swift_bridgeObjectRetain();
                  uint64_t v78 = __CocoaDictionary.lookup(_:)();
                  if (v78)
                  {
                    os_log_t v224 = (void *)v78;
                    sub_1000963CC(0, (unint64_t *)&qword_100909B00);
                    swift_unknownObjectRetain();
                    swift_dynamicCast();
                    id v79 = (id)v221;
                    swift_unknownObjectRelease();
                    goto LABEL_71;
                  }
LABEL_87:

                  swift_bridgeObjectRelease();
                  goto LABEL_88;
                }
                if (!*(void *)(v76 + 16)) {
                  goto LABEL_88;
                }
                id v77 = (id)v43;
                swift_bridgeObjectRetain();
                unint64_t v80 = sub_100306FE8((uint64_t)v77);
                if ((v81 & 1) == 0) {
                  goto LABEL_87;
                }
                id v79 = *(id *)(*(void *)(v76 + 56) + 8 * v80);
LABEL_71:

                swift_bridgeObjectRelease();
                if (v79)
                {
                  unint64_t v196 = (void *)v15;
                  if (!*(void *)(v69 + 16)) {
                    goto LABEL_147;
                  }
                  id v82 = (id)v43;
                  uint64_t v83 = a9();
                  if ((v84 & 1) == 0)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();

                    goto LABEL_149;
                  }
                  uint64_t v85 = v70;
                  id v195 = *(id *)(*(void *)(v69 + 56) + 8 * v83);

                  uint64_t v86 = v205;
                  swift_bridgeObjectRetain_n();
                  id v87 = v82;
                  swift_retain_n();
                  id v88 = v87;
                  int64_t v89 = Logger.logObject.getter();
                  os_log_type_t v90 = static os_log_type_t.default.getter();
                  unint64_t v192 = v88;
                  if (os_log_type_enabled(v89, v90))
                  {
                    os_log_type_t v199 = v90;
                    os_log_t logb = v89;
                    uint64_t v91 = swift_slowAlloc();
                    unint64_t v92 = (void *)swift_slowAlloc();
                    unint64_t v221 = swift_slowAlloc();
                    *(_DWORD *)uint64_t v91 = 136446978;
                    os_log_t v224 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v221);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    *(_WORD *)(v91 + 12) = 2082;
                    sub_10010B4E8(v186, (uint64_t)v228);
                    sub_10073F754((uint64_t)v228, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
                    uint64_t v93 = sub_100696CF4();
                    unint64_t v95 = v94;
                    sub_10073F754((uint64_t)v228, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
                    os_log_t v224 = (void *)sub_1000C51B8(v93, v95, (uint64_t *)&v221);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v91 + 22) = 2114;
                    os_log_t v224 = v88;
                    id v96 = v88;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    *unint64_t v92 = v88;

                    *(_WORD *)(v91 + 32) = 2082;
                    int64_t v97 = *(void *)(v205 + 16);
                    if (v97)
                    {
                      os_log_t v224 = _swiftEmptyArrayStorage;
                      sub_1001DE058(0, v97, 0);
                      uint64_t v98 = v205;
                      uint64_t v99 = 0;
                      os_log_type_t v100 = v224;
                      uint64_t v101 = v224[2];
                      uint64_t v102 = 2 * v101;
                      do
                      {
                        unint64_t v103 = v101 + v99;
                        if (*(unsigned char *)(v98 + v99 + 32)) {
                          uint64_t v104 = 0x7265646E696D6572;
                        }
                        else {
                          uint64_t v104 = 0x49746E756F636361;
                        }
                        if (*(unsigned char *)(v98 + v99 + 32)) {
                          unint64_t v105 = 0xEA00000000004449;
                        }
                        else {
                          unint64_t v105 = 0xE900000000000044;
                        }
                        os_log_t v224 = v100;
                        unint64_t v106 = v100[3];
                        unint64_t v107 = v103 + 1;
                        if (v103 >= v106 >> 1)
                        {
                          sub_1001DE058(v106 > 1, v103 + 1, 1);
                          uint64_t v98 = v205;
                          os_log_type_t v100 = v224;
                        }
                        ++v99;
                        v100[2] = v107;
                        uint64_t v108 = &v100[v102];
                        v108[4] = v104;
                        v108[5] = v105;
                        v102 += 2;
                      }
                      while (v97 != v99);
                      uint64_t v86 = v98;
                      swift_bridgeObjectRelease();
                      uint64_t v19 = v203;
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                    }
                    uint64_t v114 = Array.description.getter();
                    unint64_t v116 = v115;
                    swift_bridgeObjectRelease();
                    os_log_t v224 = (void *)sub_1000C51B8(v114, v116, (uint64_t *)&v221);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    _os_log_impl((void *)&_mh_execute_header, logb, v199, "[%{public}s] UPDATE RELATIONSHIPS {author: %{public}s, objectID: %{public}@, changedRelationshipKeys: %{public}s}", (uint8_t *)v91, 0x2Au);
                    sub_100094134((uint64_t *)&unk_10090A040);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();

                    uint64_t v15 = (uint64_t)v196;
                    uint64_t v69 = v193;
                    uint64_t v85 = v190;
                  }
                  else
                  {

                    swift_release_n();
                    swift_bridgeObjectRelease_n();
                  }
                  uint64_t v117 = v86;
                  uint64_t v187 = *(void *)(v86 + 16);
                  if (v187)
                  {
                    unint64_t v118 = 0;
                    uint64_t v119 = v86 + 32;
                    uint64_t v184 = v86 + 32;
                    while (v118 < *(void *)(v117 + 16))
                    {
                      unint64_t v188 = v118;
                      unsigned int v120 = *(unsigned __int8 *)(v119 + v118);
                      sub_100094134((uint64_t *)&unk_10090AF20);
                      uint64_t v121 = swift_allocObject();
                      *(_OWORD *)(v121 + 16) = xmmword_10077A530;
                      unsigned int v189 = v120;
                      if (v120) {
                        id v122 = [(id)v15 reminderID];
                      }
                      else {
                        id v122 = [(id)v15 accountID];
                      }
                      *(void *)(v121 + 32) = v122;
                      unint64_t v221 = v121;
                      specialized Array._endMutation()();
                      unint64_t v123 = v221;
                      uint64_t v124 = v211;
                      if (v221 >> 62)
                      {
                        swift_bridgeObjectRetain();
                        uint64_t v125 = _CocoaArrayWrapper.endIndex.getter();
                        swift_bridgeObjectRelease();
                        if (v125)
                        {
LABEL_105:
                          unint64_t v202 = v123 & 0xC000000000000001;
                          uint64_t v126 = 4;
                          Swift::Int v127 = (Swift::Int)_swiftEmptyDictionarySingleton;
                          unint64_t v200 = v123;
                          while (1)
                          {
                            if (v202) {
                              id v130 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                            }
                            else {
                              id v130 = *(id *)(v123 + 8 * v126);
                            }
                            char v131 = v130;
                            if (__OFADD__(v126 - 4, 1)) {
                              goto LABEL_155;
                            }
                            sub_1000963CC(0, (unint64_t *)&unk_10090AF40);
                            id v132 = v131;
                            uint64_t v133 = v132;
                            if (!*(void *)(v124 + 16)) {
                              break;
                            }
                            id v134 = v132;
                            unint64_t v135 = sub_10030703C(v134);
                            if ((v136 & 1) == 0)
                            {
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();

                              goto LABEL_141;
                            }
                            id v137 = *(id *)(*(void *)(v124 + 56) + 8 * v135);

                            os_log_t logc = (os_log_t)(v126 - 3);
                            if ((v127 & 0xC000000000000001) != 0)
                            {
                              if (v127 >= 0) {
                                v127 &= 0xFFFFFFFFFFFFFF8uLL;
                              }
                              id v138 = v137;
                              uint64_t v139 = __CocoaDictionary.count.getter();
                              if (__OFADD__(v139, 1)) {
                                goto LABEL_157;
                              }
                              Swift::Int v127 = sub_1001A7A10(v127, v139 + 1);
                            }
                            else
                            {
                              id v140 = v137;
                            }
                            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                            unint64_t v221 = v127;
                            unint64_t v143 = sub_100306FE8((uint64_t)v134);
                            uint64_t v144 = *(void *)(v127 + 16);
                            BOOL v145 = (v142 & 1) == 0;
                            uint64_t v146 = v144 + v145;
                            if (__OFADD__(v144, v145)) {
                              goto LABEL_156;
                            }
                            char v147 = v142;
                            if (*(void *)(v127 + 24) >= v146)
                            {
                              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                                sub_100319990();
                              }
                            }
                            else
                            {
                              sub_100310B54(v146, isUniquelyReferenced_nonNull_native);
                              unint64_t v148 = sub_100306FE8((uint64_t)v134);
                              if ((v147 & 1) != (v149 & 1)) {
                                goto LABEL_162;
                              }
                              unint64_t v143 = v148;
                            }
                            uint64_t v124 = v211;
                            unint64_t v123 = v200;
                            Swift::Int v127 = v221;
                            if (v147)
                            {
                              uint64_t v128 = *(void *)(v221 + 56);
                              uint64_t v129 = 8 * v143;

                              *(void *)(v128 + v129) = v137;
                            }
                            else
                            {
                              *(void *)(v221 + 8 * (v143 >> 6) + 64) |= 1 << v143;
                              uint64_t v150 = 8 * v143;
                              *(void *)(*(void *)(v127 + 48) + v150) = v134;
                              *(void *)(*(void *)(v127 + 56) + v150) = v137;
                              uint64_t v151 = *(void *)(v127 + 16);
                              BOOL v152 = __OFADD__(v151, 1);
                              uint64_t v153 = v151 + 1;
                              if (v152) {
                                goto LABEL_159;
                              }
                              *(void *)(v127 + 16) = v153;
                              id v154 = v134;
                            }

                            swift_bridgeObjectRelease();
                            ++v126;
                            uint64_t v19 = v203;
                            if (logc == (os_log_t)v125) {
                              goto LABEL_131;
                            }
                          }
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
LABEL_141:
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_retain_n();
                          id v157 = v133;
                          uint64_t v158 = Logger.logObject.getter();
                          os_log_type_t v159 = static os_log_type_t.error.getter();
                          if (os_log_type_enabled(v158, v159))
                          {
                            uint64_t v160 = swift_slowAlloc();
                            unint64_t v221 = swift_slowAlloc();
                            *(_DWORD *)uint64_t v160 = 136446978;
                            os_log_t v224 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v221);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();
                            *(_WORD *)(v160 + 12) = 2082;
                            sub_10010B4E8(v186, (uint64_t)v227);
                            sub_10073F754((uint64_t)v227, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
                            uint64_t v161 = sub_100696CF4();
                            unint64_t v163 = v162;
                            sub_10073F754((uint64_t)v227, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
                            os_log_t v224 = (void *)sub_1000C51B8(v161, v163, (uint64_t *)&v221);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();
                            swift_release_n();
                            swift_bridgeObjectRelease();
                            *(_WORD *)(v160 + 22) = 2080;
                            id v164 = [v157 description];
                            uint64_t v165 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                            unint64_t v167 = v166;

                            os_log_t v224 = (void *)sub_1000C51B8(v165, v167, (uint64_t *)&v221);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();

                            swift_bridgeObjectRelease();
                            *(_WORD *)(v160 + 32) = 2080;
                            id v168 = [v157 description];
                            uint64_t v169 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                            unint64_t v171 = v170;

                            os_log_t v224 = (void *)sub_1000C51B8(v169, v171, (uint64_t *)&v221);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();

                            swift_bridgeObjectRelease();
                            _os_log_impl((void *)&_mh_execute_header, v158, v159, "[%{public}s] Tried to establish realtionship with non-existent target object -- bail {author: %{public}s, cdObjectID: %s, relationshipObjectID: %s}", (uint8_t *)v160, 0x2Au);
                            swift_arrayDestroy();
                            swift_slowDealloc();
                            swift_slowDealloc();
                          }
                          else
                          {

                            swift_release_n();
                          }
                          [self noSuchObjectErrorWithObjectID:v157];
                          swift_willThrow();

                          return;
                        }
                      }
                      else
                      {
                        uint64_t v125 = *(void *)((v221 & 0xFFFFFFFFFFFFFF8) + 0x10);
                        if (v125) {
                          goto LABEL_105;
                        }
                      }
                      Swift::Int v127 = (Swift::Int)_swiftEmptyDictionarySingleton;
LABEL_131:
                      swift_bridgeObjectRelease();
                      uint64_t v155 = sub_100420CF8(v127);
                      swift_bridgeObjectRelease();
                      uint64_t v15 = (uint64_t)v196;
                      a10(v196, v195, v189, v155);
                      unint64_t v118 = v188 + 1;
                      swift_bridgeObjectRelease();
                      uint64_t v69 = v193;
                      uint64_t v70 = v190;
                      uint64_t v117 = v205;
                      uint64_t v119 = v184;
                      if (v188 + 1 == v187)
                      {
                        swift_bridgeObjectRelease();
                        goto LABEL_134;
                      }
                    }
                    goto LABEL_160;
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v70 = v85;
LABEL_134:
                  if (*(unsigned char *)(v19 + 104))
                  {
                    id v156 = v195;
                    [v156 updateChangeCount];
                  }
                  else
                  {
                  }
                }
                else
                {
LABEL_88:
                  swift_bridgeObjectRelease();
                  id v109 = (id)v43;
                  unint64_t v110 = Logger.logObject.getter();
                  os_log_type_t v111 = static os_log_type_t.info.getter();
                  if (os_log_type_enabled(v110, v111))
                  {
                    uint64_t v112 = swift_slowAlloc();
                    uint64_t v113 = (void *)swift_slowAlloc();
                    unint64_t v221 = swift_slowAlloc();
                    *(_DWORD *)uint64_t v112 = 136446466;
                    *(void *)(v112 + 4) = sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v221);
                    *(_WORD *)(v112 + 12) = 2114;
                    *(void *)(v112 + 14) = v109;
                    *uint64_t v113 = v109;

                    _os_log_impl((void *)&_mh_execute_header, v110, v111, "[%{public}s] Skipping establishRelationships() since this ingestable is immutable and is not a new insertion {objectID: %{public}@}", (uint8_t *)v112, 0x16u);
                    sub_100094134((uint64_t *)&unk_10090A040);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();
                  }
                  else
                  {
                  }
                  uint64_t v19 = v203;
                }
                unint64_t v73 = v206;
                uint64_t v72 = v207;
                unint64_t v71 = v197 + 1;
                if (v197 + 1 == *(void *)type)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_145;
                }
                continue;
              }
            }
            if ((v19 & 0xC000000000000001) != 0)
            {
              uint64_t v15 = 0;
              do
              {
                id v41 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                ++v15;
                uint64_t v22 = &v225;
                sub_10031DE54(v220, v41);
              }
              while (v40 != v15);
            }
            else
            {
              uint64_t v15 = 0;
              do
              {
                id v42 = *(void **)(v19 + 8 * v15++ + 32);
                uint64_t v22 = &v225;
                sub_10031DE54(v220, v42);
              }
              while (v40 != v15);
            }
          }
        }
        else
        {
          uint64_t v40 = *(void *)(((unint64_t)v220[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v40) {
            goto LABEL_22;
          }
        }
        swift_bridgeObjectRelease();
        if (++v35 == v33)
        {

          swift_bridgeObjectRelease();
          uint64_t v29 = v207;
          id v28 = a8;
          os_log_t v30 = log;
          break;
        }
      }
    }
    os_log_t v30 = (os_log_t)((char *)v30 + 1);
  }
  while (v30 != *(os_log_t *)type);
  swift_bridgeObjectRelease();
  if (v204 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v43 = *(void *)((v204 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v44 = _swiftEmptyArrayStorage;
  if (!v43)
  {
LABEL_43:
    id v198 = v44;
    uint64_t v49 = v225;
    os_log_t loga = (os_log_t)(v225 & 0xC000000000000001);
    if ((v225 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v50 = __CocoaSet.count.getter();
      if (v50)
      {
        uint64_t v51 = v50;
        os_log_t v224 = _swiftEmptyArrayStorage;
        uint64_t v22 = &v224;
        specialized ContiguousArray.reserveCapacity(_:)();
        unint64_t v221 = __CocoaSet.startIndex.getter();
        uint64_t v222 = v52;
        unsigned __int8 v223 = 1;
        if ((v51 & 0x8000000000000000) == 0) {
          goto LABEL_52;
        }
        __break(1u);
LABEL_47:
        __break(1u);

        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_2;
      }
    }
    else
    {
      uint64_t v51 = *(void *)(v225 + 16);
      swift_bridgeObjectRetain();
      if (v51)
      {
        os_log_t v224 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        unint64_t v221 = sub_1003CA790(v49);
        uint64_t v222 = v53;
        unsigned __int8 v223 = v54 & 1;
        do
        {
LABEL_52:
          while (1)
          {
            uint64_t v61 = v221;
            uint64_t v60 = v222;
            uint64_t v62 = v223;
            sub_1003C9F34(v221, v222, v223, v49);
            unint64_t v64 = v63;
            sub_1000963CC(0, (unint64_t *)&unk_10090AF40);

            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            if (loga) {
              break;
            }
            uint64_t v55 = sub_1003C9E34(v61, v60, v62, v49);
            uint64_t v57 = v56;
            char v59 = v58;
            sub_1000E4EA4(v61, v60, v62);
            unint64_t v221 = v55;
            uint64_t v222 = v57;
            unsigned __int8 v223 = v59 & 1;
            id v28 = a8;
            if (!--v51) {
              goto LABEL_57;
            }
          }
          if ((v62 & 1) == 0) {
            goto LABEL_161;
          }
          if (__CocoaSet.Index.handleBitPattern.getter()) {
            swift_isUniquelyReferenced_nonNull_native();
          }
          id v28 = a8;
          sub_100094134(&qword_100916988);
          uint64_t v65 = (void (*)(id *, void))Set.Index._asCocoa.modify();
          __CocoaSet.formIndex(after:isUnique:)();
          v65(v220, 0);
          --v51;
        }
        while (v51);
LABEL_57:
        sub_1000E4EA4(v221, v222, v223);
        id v66 = v224;
        swift_bridgeObjectRelease();
        goto LABEL_59;
      }
    }
    swift_bridgeObjectRelease();
    id v66 = _swiftEmptyArrayStorage;
LABEL_59:
    uint64_t v33 = v201;
    uint64_t v19 = v203;
    uint64_t v39 = (uint64_t)sub_100711100((uint64_t)v66, v201);
    uint64_t v34 = 0;
    goto LABEL_61;
  }
  v220[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  if (v43 < 0)
  {
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    uint64_t v45 = 0;
    unint64_t v46 = v204;
    while (v43 != v45)
    {
      if ((v204 & 0xC000000000000001) != 0) {
        id v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v47 = *(id *)(v46 + 8 * v45 + 32);
      }
      id v48 = v47;
      sub_100694DE8([v48 remObjectID], v206);
      ++v45;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      unint64_t v46 = v204;
      if (v43 == v45)
      {
        unint64_t v44 = v220[0];
        id v28 = a8;
        goto LABEL_43;
      }
    }
    __break(1u);
    __break(1u);
LABEL_147:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_149:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v172 = (id)v43;
    swift_retain_n();
    id v173 = v172;
    unint64_t v174 = Logger.logObject.getter();
    os_log_type_t v175 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v174, v175))
    {
      uint64_t v176 = swift_slowAlloc();
      unint64_t v221 = swift_slowAlloc();
      *(_DWORD *)uint64_t v176 = 136446722;
      os_log_t v224 = (void *)sub_1000C51B8(0xD000000000000016, v185 | 0x8000000000000000, (uint64_t *)&v221);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v176 + 12) = 2082;
      sub_10010B4E8(v186, (uint64_t)v226);
      sub_10073F754((uint64_t)v226, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v177 = sub_100696CF4();
      unint64_t v179 = v178;
      sub_10073F754((uint64_t)v226, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      os_log_t v224 = (void *)sub_1000C51B8(v177, v179, (uint64_t *)&v221);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v176 + 22) = 2080;
      id v180 = [v173 description];
      uint64_t v181 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v183 = v182;

      uint64_t v15 = (uint64_t)v196;
      os_log_t v224 = (void *)sub_1000C51B8(v181, v183, (uint64_t *)&v221);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v174, v175, "[%{public}s] Tried to establish relationship with non-existing object -- skipping {author: %{public}s, cdObjectID: %s}", (uint8_t *)v176, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    [self noSuchObjectErrorWithObjectID:v173];
    swift_willThrow();
  }
}

void sub_1006EFB6C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = v3;
  uint64_t v212 = a2;
  uint64_t v8 = *(void *)(a3 + 16);
  unint64_t v9 = *(void *)(a3 + 24);
  uint64_t v201 = &v212;
  unint64_t v202 = v5;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1003B498C((void (*)(__n128 *__return_ptr, id *))sub_100741D1C, (uint64_t)&v200, a1);
  if (v4) {
    goto LABEL_2;
  }
  uint64_t v11 = v10;
  unint64_t v188 = a1;
  if (qword_1009073A0 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10008E2DC(v12, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  uint64_t v184 = a3;
  unint64_t v187 = v5;
  unint64_t v190 = v11;
  if (os_log_type_enabled(v13, v14))
  {
    os_log_type_t type = v14;
    uint64_t v15 = swift_slowAlloc();
    os_log_t logc = (os_log_t)swift_slowAlloc();
    v203[0] = logc;
    *(_DWORD *)uint64_t v15 = 136446978;
    unint64_t v204 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)v203);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2048;
    unint64_t v204 = (void *)v11[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2082;
    sub_1000963CC(0, (unint64_t *)&qword_100909AF8);
    id v16 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v19 = v18;

    unint64_t v204 = (void *)sub_1000C51B8(v17, v19, (uint64_t *)v203);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 32) = 2082;
    swift_bridgeObjectRetain();
    unint64_t v204 = (void *)sub_1000C51B8(v8, v9, (uint64_t *)v203);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, type, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v15, 0x2Au);
    unint64_t v5 = (unint64_t)logc;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  unint64_t v192 = v11[2];
  if (!v192) {
    goto LABEL_2;
  }
  uint64_t v208 = (uint64_t)&_swiftEmptySetSingleton;
  unint64_t v191 = v11 + 4;
  swift_bridgeObjectRetain();
  os_log_t v20 = 0;
  while (1)
  {
    if ((unint64_t)v20 >= v11[2])
    {
      __break(1u);
LABEL_145:
      __break(1u);
      __break(1u);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_2:
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v21 = (id *)&v191[2 * (void)v20];
    unint64_t v22 = (unint64_t)v21[1];
    uint64_t v23 = *(void *)(v22 + 16);
    if (v23) {
      break;
    }
LABEL_11:
    os_log_t v20 = (os_log_t)((char *)v20 + 1);
    if (v20 == v192)
    {
      swift_bridgeObjectRelease();
      if (v188 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v5 = *(void *)((v188 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      char v36 = _swiftEmptyArrayStorage;
      if (v5)
      {
        v203[0] = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        if ((v5 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
          goto LABEL_159;
        }
        uint64_t v37 = 0;
        do
        {
          if (v5 == v37) {
            goto LABEL_145;
          }
          if ((v188 & 0xC000000000000001) != 0) {
            id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v38 = *(id *)(v188 + 8 * v37 + 32);
          }
          id v39 = v38;
          sub_100694DE8([v39 remObjectID], (unint64_t *)&qword_100909AF8);
          ++v37;

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        while (v5 != v37);
        char v36 = v203[0];
      }
      uint64_t v193 = v36;
      uint64_t v40 = v208;
      unint64_t v41 = v208 & 0xC000000000000001;
      if ((v208 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v42 = __CocoaSet.count.getter();
        if (v42)
        {
          uint64_t v43 = v42;
          uint64_t v207 = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)();
          unint64_t v204 = (void *)__CocoaSet.startIndex.getter();
          uint64_t v205 = v44;
          unsigned __int8 v206 = 1;
          if ((v43 & 0x8000000000000000) == 0) {
            goto LABEL_53;
          }
          __break(1u);
          goto LABEL_2;
        }
      }
      else
      {
        uint64_t v43 = *(void *)(v208 + 16);
        swift_bridgeObjectRetain();
        if (v43)
        {
          uint64_t v207 = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)();
          unint64_t v204 = (void *)sub_1003CA790(v40);
          uint64_t v205 = v45;
          unsigned __int8 v206 = v46 & 1;
          do
          {
LABEL_53:
            while (1)
            {
              uint64_t v53 = (uint64_t)v204;
              uint64_t v52 = v205;
              uint64_t v54 = v206;
              sub_1003C9F34((uint64_t)v204, v205, v206, v40);
              uint64_t v56 = v55;
              sub_1000963CC(0, (unint64_t *)&unk_10090AF40);

              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
              if (v41) {
                break;
              }
              uint64_t v47 = sub_1003C9E34(v53, v52, v54, v40);
              uint64_t v49 = v48;
              char v51 = v50;
              sub_1000E4EA4(v53, v52, v54);
              unint64_t v204 = (void *)v47;
              uint64_t v205 = v49;
              unsigned __int8 v206 = v51 & 1;
              if (!--v43) {
                goto LABEL_58;
              }
            }
            if ((v54 & 1) == 0) {
              goto LABEL_160;
            }
            if (__CocoaSet.Index.handleBitPattern.getter()) {
              swift_isUniquelyReferenced_nonNull_native();
            }
            sub_100094134(&qword_100916988);
            uint64_t v57 = (void (*)(void, void))Set.Index._asCocoa.modify();
            __CocoaSet.formIndex(after:isUnique:)();
            v57(v203, 0);
            --v43;
          }
          while (v43);
LABEL_58:
          sub_1000E4EA4((uint64_t)v204, v205, v206);
          char v58 = v207;
          swift_bridgeObjectRelease();
          goto LABEL_60;
        }
      }
      swift_bridgeObjectRelease();
      char v58 = _swiftEmptyArrayStorage;
LABEL_60:
      uint64_t v31 = v184;
      unint64_t v22 = v187;
      os_log_t v30 = sub_100711100((uint64_t)v58, v184);
      unint64_t v25 = 0;
      goto LABEL_62;
    }
  }
  os_log_t log = v20;
  uint64_t v24 = v212;
  unint64_t v25 = v22 + 32;
  uint64_t v193 = *v21;
  swift_bridgeObjectRetain();
  unint64_t v26 = 0;
  while (1)
  {
    if (v26 >= *(void *)(v22 + 16))
    {
      __break(1u);

      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_2;
    }
    char v27 = *(unsigned char *)(v25 + v26);
    sub_100094134((uint64_t *)&unk_10090AF20);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_10077A530;
    uint64_t v29 = (v27 & 1) != 0 ? *(void **)(v24 + 24) : *(void **)(v24 + 16);
    *(void *)(v28 + 32) = v29;
    v203[0] = (id)v28;
    uint64_t v13 = v203;
    specialized Array._endMutation()();
    unint64_t v5 = (unint64_t)v203[0];
    os_log_t v30 = v29;
    if (v5 >> 62) {
      break;
    }
    uint64_t v31 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v31) {
      goto LABEL_22;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    if (++v26 == v23)
    {

      swift_bridgeObjectRelease();
      uint64_t v11 = v190;
      os_log_t v20 = log;
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
  os_log_t v30 = (void *)swift_bridgeObjectRelease();
  if (!v31) {
    goto LABEL_15;
  }
LABEL_22:
  if (v31 >= 1)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      uint64_t v32 = 0;
      do
      {
        uint64_t v33 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        ++v32;
        uint64_t v13 = &v208;
        sub_10031DE54(v203, v33);
      }
      while (v31 != v32);
    }
    else
    {
      uint64_t v34 = 0;
      do
      {
        unint64_t v35 = *(void **)(v5 + 8 * v34++ + 32);
        uint64_t v13 = &v208;
        sub_10031DE54(v203, v35);
      }
      while (v31 != v34);
    }
    goto LABEL_15;
  }
  __break(1u);
LABEL_62:
  char v59 = v30;
  swift_bridgeObjectRelease();
  uint64_t v60 = v193;
  uint64_t v61 = sub_100714EB0((uint64_t)v193, v31);
  if (v25)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_2;
  }
  uint64_t v62 = v61;
  swift_bridgeObjectRelease();
  uint64_t v176 = (uint64_t *)(v31 + 48);
  swift_beginAccess();
  char v63 = v190;
  if (!v190[2])
  {
LABEL_136:
    __break(1u);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
LABEL_137:
    swift_bridgeObjectRelease();
    goto LABEL_2;
  }
  unint64_t v64 = 0;
  uint64_t v173 = v22 + 24;
  uint64_t v65 = &selRef_intersectsSet_;
  unsigned int v189 = v59;
  id v180 = v62;
  while (2)
  {
    unint64_t v174 = v64;
    id v66 = (id *)&v191[2 * v64];
    uint64_t v67 = (int64_t *)v66[1];
    id v68 = *v66;
    unint64_t v183 = v67;
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_100694DE8([v68 v65[446]], (unint64_t *)&qword_100909AF8);

    uint64_t v70 = *v176;
    unint64_t v179 = v68;
    if ((*v176 & 0xC000000000000001) != 0)
    {
      id v71 = v69;
      swift_bridgeObjectRetain();
      uint64_t v72 = __CocoaDictionary.lookup(_:)();
      if (v72)
      {
        uint64_t v207 = (void *)v72;
        sub_1000963CC(0, (unint64_t *)&qword_100909B00);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v73 = v204;
        swift_unknownObjectRelease();
        goto LABEL_72;
      }
LABEL_73:

      swift_bridgeObjectRelease();
LABEL_74:
      id v73 = 0;
    }
    else
    {
      if (!*(void *)(v70 + 16)) {
        goto LABEL_74;
      }
      id v71 = v69;
      swift_bridgeObjectRetain();
      unint64_t v74 = sub_100306FE8((uint64_t)v71);
      if ((v75 & 1) == 0) {
        goto LABEL_73;
      }
      id v73 = *(id *)(*(void *)(v70 + 56) + 8 * v74);
LABEL_72:

      swift_bridgeObjectRelease();
    }

    if (!v62[2])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_148:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v160 = v69;
      swift_retain_n();
      id v161 = v160;
      unint64_t v162 = Logger.logObject.getter();
      os_log_type_t v163 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v162, v163))
      {
        uint64_t v164 = swift_slowAlloc();
        unint64_t v204 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v164 = 136446722;
        uint64_t v207 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v204);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v164 + 12) = 2082;
        sub_10010B4E8(v173, (uint64_t)v209);
        sub_10073F754((uint64_t)v209, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
        uint64_t v165 = sub_100696CF4();
        unint64_t v167 = v166;
        sub_10073F754((uint64_t)v209, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
        uint64_t v207 = (void *)sub_1000C51B8(v165, v167, (uint64_t *)&v204);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v164 + 22) = 2080;
        id v168 = [v161 description];
        uint64_t v169 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v171 = v170;

        uint64_t v207 = (void *)sub_1000C51B8(v169, v171, (uint64_t *)&v204);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v162, v163, "[%{public}s] Tried to establish relationship with non-existing object -- skipping {author: %{public}s, cdObjectID: %s}", (uint8_t *)v164, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      [self noSuchObjectErrorWithObjectID:v161];
      swift_willThrow();

      return;
    }
    id v76 = v69;
    unint64_t v77 = sub_10030703C(v76);
    if ((v78 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_148;
    }
    id v182 = *(id *)(v62[7] + 8 * v77);

    id v79 = v183;
    swift_bridgeObjectRetain_n();
    id v80 = v76;
    swift_retain_n();
    id v81 = v80;
    uint64_t v60 = Logger.logObject.getter();
    os_log_type_t v82 = static os_log_type_t.default.getter();
    uint64_t v181 = v81;
    if (os_log_type_enabled(v60, v82))
    {
      os_log_type_t v185 = v82;
      os_log_t loga = v60;
      uint64_t v83 = swift_slowAlloc();
      char v84 = (void *)swift_slowAlloc();
      unint64_t v204 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v83 = 136446978;
      uint64_t v207 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v204);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v83 + 12) = 2082;
      sub_10010B4E8(v173, (uint64_t)v211);
      sub_10073F754((uint64_t)v211, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v85 = sub_100696CF4();
      unint64_t v87 = v86;
      sub_10073F754((uint64_t)v211, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      uint64_t v207 = (void *)sub_1000C51B8(v85, v87, (uint64_t *)&v204);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v83 + 22) = 2114;
      uint64_t v207 = v81;
      id v88 = v81;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *char v84 = v81;

      *(_WORD *)(v83 + 32) = 2082;
      int64_t v89 = v183[2];
      if (v89)
      {
        uint64_t v207 = _swiftEmptyArrayStorage;
        sub_1001DE058(0, v89, 0);
        os_log_type_t v90 = v183;
        uint64_t v91 = 0;
        unint64_t v92 = v207;
        uint64_t v93 = v207[2];
        uint64_t v94 = 2 * v93;
        do
        {
          unint64_t v95 = v93 + v91;
          if (*((unsigned char *)v90 + v91 + 32)) {
            uint64_t v96 = 0x44497473696CLL;
          }
          else {
            uint64_t v96 = 0x49746E756F636361;
          }
          if (*((unsigned char *)v90 + v91 + 32)) {
            unint64_t v97 = 0xE600000000000000;
          }
          else {
            unint64_t v97 = 0xE900000000000044;
          }
          uint64_t v207 = v92;
          unint64_t v98 = v92[3];
          unint64_t v99 = v95 + 1;
          if (v95 >= v98 >> 1)
          {
            sub_1001DE058(v98 > 1, v95 + 1, 1);
            os_log_type_t v90 = v183;
            unint64_t v92 = v207;
          }
          ++v91;
          v92[2] = v99;
          os_log_type_t v100 = &v92[v94];
          v100[4] = v96;
          v100[5] = v97;
          v94 += 2;
        }
        while (v89 != v91);
        id v79 = v90;
        swift_bridgeObjectRelease();
        char v59 = v189;
        id v81 = v181;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v101 = Array.description.getter();
      unint64_t v103 = v102;
      swift_bridgeObjectRelease();
      uint64_t v207 = (void *)sub_1000C51B8(v101, v103, (uint64_t *)&v204);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v60 = loga;
      _os_log_impl((void *)&_mh_execute_header, loga, v185, "[%{public}s] UPDATE RELATIONSHIPS {author: %{public}s, objectID: %{public}@, changedRelationshipKeys: %{public}s}", (uint8_t *)v83, 0x2Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v22 = v187;
      char v63 = v190;
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v104 = v79;
    uint64_t v175 = v79[2];
    if (!v175)
    {
      swift_bridgeObjectRelease();
      uint64_t v62 = v180;
LABEL_131:
      if (*(unsigned char *)(v22 + 104))
      {
        uint64_t v60 = v182;
        [v60 updateChangeCount];
      }
      else
      {
      }
      unint64_t v64 = v174 + 1;
      if ((v174 + 1) == v192)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_137;
      }
      uint64_t v65 = &selRef_intersectsSet_;
      if (v64 >= v63[2]) {
        goto LABEL_136;
      }
      continue;
    }
    break;
  }
  unint64_t v105 = 0;
  unint64_t v106 = (uint64_t)(v79 + 4);
  id v172 = (uint64_t)(v79 + 4);
  while (v105 < v104[2])
  {
    unint64_t v177 = v105;
    char v107 = *(unsigned char *)(v106 + v105);
    uint64_t v108 = v212;
    sub_100094134((uint64_t *)&unk_10090AF20);
    uint64_t v109 = swift_allocObject();
    *(_OWORD *)(v109 + 16) = xmmword_10077A530;
    char v178 = v107;
    if (v107) {
      unint64_t v110 = *(void **)(v108 + 24);
    }
    else {
      unint64_t v110 = *(void **)(v108 + 16);
    }
    *(void *)(v109 + 32) = v110;
    unint64_t v204 = (void *)v109;
    specialized Array._endMutation()();
    unint64_t v111 = (unint64_t)v204;
    id v112 = v110;
    if (v111 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v113 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v113)
      {
LABEL_101:
        unint64_t v194 = v111 & 0xC000000000000001;
        uint64_t v114 = 4;
        Swift::Int v115 = (Swift::Int)_swiftEmptyDictionarySingleton;
        unint64_t v186 = v111;
        while (1)
        {
          if (v194) {
            id v118 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v118 = *(id *)(v111 + 8 * v114);
          }
          uint64_t v119 = v118;
          if (__OFADD__(v114 - 4, 1)) {
            goto LABEL_155;
          }
          sub_1000963CC(0, (unint64_t *)&unk_10090AF40);
          id v120 = v119;
          uint64_t v121 = v120;
          if (!v59[2]) {
            break;
          }
          os_log_t logb = (os_log_t)(v114 - 3);
          id v122 = v113;
          id v123 = v120;
          unint64_t v124 = sub_10030703C(v123);
          if ((v125 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            goto LABEL_140;
          }
          id v126 = *(id *)(v59[7] + 8 * v124);

          if ((v115 & 0xC000000000000001) != 0)
          {
            if (v115 < 0) {
              uint64_t v127 = v115;
            }
            else {
              uint64_t v127 = v115 & 0xFFFFFFFFFFFFFF8;
            }
            id v128 = v126;
            uint64_t v129 = __CocoaDictionary.count.getter();
            if (__OFADD__(v129, 1)) {
              goto LABEL_157;
            }
            Swift::Int v115 = sub_1001A7A10(v127, v129 + 1);
          }
          else
          {
            id v130 = v126;
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v204 = (void *)v115;
          unint64_t v133 = sub_100306FE8((uint64_t)v123);
          uint64_t v134 = *(void *)(v115 + 16);
          BOOL v135 = (v132 & 1) == 0;
          uint64_t v136 = v134 + v135;
          if (__OFADD__(v134, v135)) {
            goto LABEL_156;
          }
          char v137 = v132;
          if (*(void *)(v115 + 24) >= v136)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_100319990();
            }
          }
          else
          {
            sub_100310B54(v136, isUniquelyReferenced_nonNull_native);
            unint64_t v138 = sub_100306FE8((uint64_t)v123);
            if ((v137 & 1) != (v139 & 1)) {
              goto LABEL_161;
            }
            unint64_t v133 = v138;
          }
          unint64_t v22 = v187;
          Swift::Int v115 = (Swift::Int)v204;
          if (v137)
          {
            uint64_t v116 = v204[7];

            *(void *)(v116 + 8 * v133) = v126;
          }
          else
          {
            v204[(v133 >> 6) + 8] |= 1 << v133;
            uint64_t v140 = 8 * v133;
            *(void *)(*(void *)(v115 + 48) + v140) = v123;
            *(void *)(*(void *)(v115 + 56) + v140) = v126;
            uint64_t v141 = *(void *)(v115 + 16);
            BOOL v142 = __OFADD__(v141, 1);
            uint64_t v143 = v141 + 1;
            if (v142) {
              goto LABEL_158;
            }
            *(void *)(v115 + 16) = v143;
            id v144 = v123;
          }
          char v59 = v189;
          unint64_t v111 = v186;

          swift_bridgeObjectRelease();
          ++v114;
          uint64_t v113 = (uint64_t)v122;
          BOOL v117 = logb == v122;
          char v63 = v190;
          if (v117) {
            goto LABEL_128;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_140:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_retain_n();
        id v145 = v121;
        uint64_t v146 = Logger.logObject.getter();
        os_log_type_t v147 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v146, v147))
        {
          uint64_t v148 = swift_slowAlloc();
          unint64_t v204 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v148 = 136446978;
          uint64_t v207 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v204);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v148 + 12) = 2082;
          sub_10010B4E8(v173, (uint64_t)v210);
          sub_10073F754((uint64_t)v210, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
          uint64_t v149 = sub_100696CF4();
          unint64_t v151 = v150;
          sub_10073F754((uint64_t)v210, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
          uint64_t v207 = (void *)sub_1000C51B8(v149, v151, (uint64_t *)&v204);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v148 + 22) = 2080;
          id v152 = [v145 description];
          uint64_t v153 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v155 = v154;

          uint64_t v207 = (void *)sub_1000C51B8(v153, v155, (uint64_t *)&v204);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v148 + 32) = 2080;
          id v156 = [v145 description];
          uint64_t v157 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v159 = v158;

          uint64_t v207 = (void *)sub_1000C51B8(v157, v159, (uint64_t *)&v204);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v146, v147, "[%{public}s] Tried to establish realtionship with non-existent target object -- bail {author: %{public}s, cdObjectID: %s, relationshipObjectID: %s}", (uint8_t *)v148, 0x2Au);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        [self noSuchObjectErrorWithObjectID:v145];
        swift_willThrow();

        return;
      }
    }
    else
    {
      uint64_t v113 = *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v113) {
        goto LABEL_101;
      }
    }
    Swift::Int v115 = (Swift::Int)_swiftEmptyDictionarySingleton;
LABEL_128:
    swift_bridgeObjectRelease();
    uint64_t v60 = sub_100420CF8(v115);
    swift_bridgeObjectRelease();
    sub_100442048(v182, v178, (uint64_t)v60);
    unint64_t v105 = v177 + 1;
    swift_bridgeObjectRelease();
    uint64_t v62 = v180;
    id v81 = v181;
    uint64_t v104 = v183;
    unint64_t v106 = v172;
    if (v177 + 1 == v175)
    {
      swift_bridgeObjectRelease();
      goto LABEL_131;
    }
  }
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void sub_1006F15A8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = v3;
  uint64_t v215 = a2;
  uint64_t v8 = *(void *)(a3 + 16);
  unint64_t v9 = *(void *)(a3 + 24);
  unint64_t v204 = &v215;
  unint64_t v205 = v5;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1003B49B8((void (*)(__n128 *__return_ptr, id *))sub_100741EC8, (uint64_t)&v203, a1);
  if (v4) {
    goto LABEL_2;
  }
  uint64_t v11 = v10;
  unint64_t log = a1;
  if (qword_1009073A0 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10008E2DC(v12, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  uint64_t v187 = a3;
  unint64_t v189 = v5;
  uint64_t v193 = v11;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v196 = v8;
    uint64_t v15 = swift_slowAlloc();
    unint64_t v202 = (void *)swift_slowAlloc();
    v206[0] = v202;
    *(_DWORD *)uint64_t v15 = 136446978;
    uint64_t v207 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)v206);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2048;
    uint64_t v207 = (void *)v11[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2082;
    sub_1000963CC(0, (unint64_t *)&qword_100921E40);
    id v16 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v19 = v18;

    uint64_t v207 = (void *)sub_1000C51B8(v17, v19, (uint64_t *)v206);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 32) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v207 = (void *)sub_1000C51B8(v196, v9, (uint64_t *)v206);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v15, 0x2Au);
    unint64_t v5 = (unint64_t)v202;
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v11 = v193;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  uint64_t v195 = v11[2];
  if (!v195) {
    goto LABEL_2;
  }
  uint64_t v211 = (uint64_t)&_swiftEmptySetSingleton;
  unint64_t v194 = v11 + 4;
  swift_bridgeObjectRetain();
  unint64_t v20 = 0;
  while (1)
  {
    if (v20 >= v11[2])
    {
      __break(1u);
LABEL_149:
      __break(1u);
      __break(1u);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_2:
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v21 = (id *)&v194[2 * v20];
    unint64_t v22 = v21[1];
    unint64_t v23 = v22[2];
    if (v23) {
      break;
    }
LABEL_11:
    if (++v20 == v195)
    {
      swift_bridgeObjectRelease();
      unint64_t v36 = log;
      if (log >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v5 = *(void *)((log & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v37 = _swiftEmptyArrayStorage;
      if (v5)
      {
        v206[0] = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        if ((v5 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
          goto LABEL_163;
        }
        uint64_t v38 = 0;
        while (v5 != v38)
        {
          if ((log & 0xC000000000000001) != 0) {
            id v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v39 = *(id *)(v36 + 8 * v38 + 32);
          }
          id v40 = v39;
          sub_100694DE8([v40 remObjectID], (unint64_t *)&qword_100921E40);
          ++v38;

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          unint64_t v36 = log;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          if (v5 == v38)
          {
            uint64_t v37 = v206[0];
            goto LABEL_43;
          }
        }
        goto LABEL_149;
      }
LABEL_43:
      id v197 = v37;
      uint64_t v41 = v211;
      unint64_t v42 = v211 & 0xC000000000000001;
      if ((v211 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v43 = __CocoaSet.count.getter();
        if (v43)
        {
          uint64_t v44 = v43;
          uint64_t v210 = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)();
          uint64_t v207 = (void *)__CocoaSet.startIndex.getter();
          uint64_t v208 = v45;
          unsigned __int8 v209 = 1;
          if ((v44 & 0x8000000000000000) == 0) {
            goto LABEL_53;
          }
          __break(1u);
          goto LABEL_2;
        }
LABEL_59:
        swift_bridgeObjectRelease();
        char v59 = _swiftEmptyArrayStorage;
      }
      else
      {
        uint64_t v44 = *(void *)(v211 + 16);
        swift_bridgeObjectRetain();
        if (!v44) {
          goto LABEL_59;
        }
        uint64_t v210 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        uint64_t v207 = (void *)sub_1003CA790(v41);
        uint64_t v208 = v46;
        unsigned __int8 v209 = v47 & 1;
        do
        {
LABEL_53:
          while (1)
          {
            uint64_t v54 = (uint64_t)v207;
            uint64_t v53 = v208;
            uint64_t v55 = v209;
            sub_1003C9F34((uint64_t)v207, v208, v209, v41);
            uint64_t v57 = v56;
            sub_1000963CC(0, (unint64_t *)&unk_10090AF40);

            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            if (v42) {
              break;
            }
            uint64_t v48 = sub_1003C9E34(v54, v53, v55, v41);
            uint64_t v50 = v49;
            char v52 = v51;
            sub_1000E4EA4(v54, v53, v55);
            uint64_t v207 = (void *)v48;
            uint64_t v208 = v50;
            unsigned __int8 v209 = v52 & 1;
            if (!--v44) {
              goto LABEL_58;
            }
          }
          if ((v55 & 1) == 0) {
            goto LABEL_165;
          }
          if (__CocoaSet.Index.handleBitPattern.getter()) {
            swift_isUniquelyReferenced_nonNull_native();
          }
          sub_100094134(&qword_100916988);
          char v58 = (void (*)(void, void))Set.Index._asCocoa.modify();
          __CocoaSet.formIndex(after:isUnique:)();
          v58(v206, 0);
          --v44;
        }
        while (v44);
LABEL_58:
        sub_1000E4EA4((uint64_t)v207, v208, v209);
        char v59 = v210;
        swift_bridgeObjectRelease();
      }
      uint64_t v31 = v187;
      unint64_t v23 = v189;
      os_log_t v30 = sub_100711100((uint64_t)v59, v187);
      unint64_t v25 = 0;
      uint64_t v24 = v193;
      goto LABEL_62;
    }
  }
  *(void *)os_log_type_t type = v20;
  uint64_t v24 = (void *)v215;
  unint64_t v25 = v22 + 4;
  id v197 = *v21;
  swift_bridgeObjectRetain();
  unint64_t v26 = 0;
  while (1)
  {
    if (v26 >= v22[2])
    {
      __break(1u);

      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_2;
    }
    char v27 = *((unsigned char *)v25 + v26);
    sub_100094134((uint64_t *)&unk_10090AF20);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_10077A530;
    uint64_t v29 = (void *)((v27 & 1) != 0 ? v24[3] : v24[2]);
    *(void *)(v28 + 32) = v29;
    v206[0] = (id)v28;
    uint64_t v13 = v206;
    specialized Array._endMutation()();
    unint64_t v5 = (unint64_t)v206[0];
    os_log_t v30 = v29;
    if (v5 >> 62) {
      break;
    }
    uint64_t v31 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v31) {
      goto LABEL_22;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    if (++v26 == v23)
    {

      swift_bridgeObjectRelease();
      uint64_t v11 = v193;
      unint64_t v20 = *(void *)type;
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
  os_log_t v30 = (void *)swift_bridgeObjectRelease();
  if (!v31) {
    goto LABEL_15;
  }
LABEL_22:
  if (v31 >= 1)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      uint64_t v32 = 0;
      do
      {
        uint64_t v33 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        ++v32;
        uint64_t v13 = &v211;
        sub_10031DE54(v206, v33);
      }
      while (v31 != v32);
    }
    else
    {
      uint64_t v34 = 0;
      do
      {
        unint64_t v35 = *(void **)(v5 + 8 * v34++ + 32);
        uint64_t v13 = &v211;
        sub_10031DE54(v206, v35);
      }
      while (v31 != v34);
    }
    goto LABEL_15;
  }
  __break(1u);
LABEL_62:
  uint64_t v60 = v30;
  swift_bridgeObjectRelease();
  uint64_t v61 = sub_100715318((uint64_t)v197, v31);
  if (v25)
  {
LABEL_63:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_2;
  }
  uint64_t v62 = v61;
  swift_bridgeObjectRelease();
  char v178 = (uint64_t *)(v31 + 48);
  swift_beginAccess();
  if (v24[2])
  {
    unint64_t v63 = 0;
    uint64_t v175 = v23 + 24;
    unint64_t v64 = &selRef_intersectsSet_;
    id v198 = v60;
    unint64_t v183 = v62;
    while (1)
    {
      unint64_t v176 = v63;
      uint64_t v65 = (id *)&v194[2 * v63];
      id v66 = (int64_t *)v65[1];
      id v67 = *v65;
      unint64_t v186 = v66;
      swift_bridgeObjectRetain();
      id v68 = sub_100694DE8([v67 v64[446]], (unint64_t *)&qword_100921E40);

      uint64_t v69 = *v178;
      id v182 = v67;
      if ((*v178 & 0xC000000000000001) != 0)
      {
        id v70 = v68;
        swift_bridgeObjectRetain();
        uint64_t v71 = __CocoaDictionary.lookup(_:)();
        if (v71)
        {
          uint64_t v210 = (void *)v71;
          sub_1000963CC(0, (unint64_t *)&qword_100909B00);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v72 = v207;
          swift_unknownObjectRelease();

          swift_bridgeObjectRelease();
        }
        else
        {

          swift_bridgeObjectRelease();
          id v72 = 0;
        }
        uint64_t v24 = v193;
      }
      else if (*(void *)(v69 + 16))
      {
        id v73 = v68;
        swift_bridgeObjectRetain();
        unint64_t v74 = sub_100306FE8((uint64_t)v73);
        if (v75)
        {
          id v72 = *(id *)(*(void *)(v69 + 56) + 8 * v74);

          swift_bridgeObjectRelease();
        }
        else
        {

          swift_bridgeObjectRelease();
          id v72 = 0;
        }
      }
      else
      {
        id v72 = 0;
      }

      if (!v62[2])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_152;
      }
      id v76 = v68;
      unint64_t v77 = sub_10030703C(v76);
      if ((v78 & 1) == 0) {
        break;
      }
      id v185 = *(id *)(v62[7] + 8 * v77);

      id v79 = v186;
      swift_bridgeObjectRetain_n();
      id v80 = v76;
      swift_retain_n();
      id v81 = v80;
      os_log_type_t v82 = Logger.logObject.getter();
      os_log_type_t v83 = static os_log_type_t.default.getter();
      uint64_t v184 = v81;
      if (os_log_type_enabled(v82, v83))
      {
        os_log_type_t v180 = v83;
        os_log_t loga = v82;
        uint64_t v84 = swift_slowAlloc();
        os_log_type_t typeb = (void *)swift_slowAlloc();
        uint64_t v207 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v84 = 136446978;
        uint64_t v210 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v207);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v84 + 12) = 2082;
        sub_10010B4E8(v175, (uint64_t)v214);
        sub_10073F754((uint64_t)v214, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
        uint64_t v85 = sub_100696CF4();
        unint64_t v87 = v86;
        sub_10073F754((uint64_t)v214, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
        uint64_t v210 = (void *)sub_1000C51B8(v85, v87, (uint64_t *)&v207);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v84 + 22) = 2114;
        uint64_t v210 = v81;
        id v88 = v81;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *os_log_type_t typeb = v81;

        *(_WORD *)(v84 + 32) = 2082;
        int64_t v89 = v186[2];
        if (v89)
        {
          uint64_t v210 = _swiftEmptyArrayStorage;
          sub_1001DE058(0, v89, 0);
          os_log_type_t v90 = v186;
          uint64_t v91 = 0;
          unint64_t v92 = v210;
          uint64_t v93 = v210[2];
          uint64_t v94 = 2 * v93;
          do
          {
            unint64_t v95 = v93 + v91;
            if (*((unsigned char *)v90 + v91 + 32)) {
              uint64_t v96 = 0x44497473696CLL;
            }
            else {
              uint64_t v96 = 0x49746E756F636361;
            }
            if (*((unsigned char *)v90 + v91 + 32)) {
              unint64_t v97 = 0xE600000000000000;
            }
            else {
              unint64_t v97 = 0xE900000000000044;
            }
            uint64_t v210 = v92;
            unint64_t v98 = v92[3];
            unint64_t v99 = v95 + 1;
            if (v95 >= v98 >> 1)
            {
              sub_1001DE058(v98 > 1, v95 + 1, 1);
              os_log_type_t v90 = v186;
              unint64_t v92 = v210;
            }
            ++v91;
            v92[2] = v99;
            os_log_type_t v100 = &v92[v94];
            v100[4] = v96;
            v100[5] = v97;
            v94 += 2;
          }
          while (v89 != v91);
          id v79 = v90;
          swift_bridgeObjectRelease();
          uint64_t v24 = v193;
          uint64_t v60 = v198;
          id v81 = v184;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v101 = Array.description.getter();
        unint64_t v103 = v102;
        swift_bridgeObjectRelease();
        uint64_t v210 = (void *)sub_1000C51B8(v101, v103, (uint64_t *)&v207);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, loga, v180, "[%{public}s] UPDATE RELATIONSHIPS {author: %{public}s, objectID: %{public}@, changedRelationshipKeys: %{public}s}", (uint8_t *)v84, 0x2Au);
        sub_100094134((uint64_t *)&unk_10090A040);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        unint64_t v23 = v189;
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
      uint64_t v177 = v79[2];
      if (v177)
      {
        unint64_t v104 = 0;
        unint64_t v105 = v79 + 4;
        unint64_t v174 = v79 + 4;
        while (1)
        {
          char v106 = *((unsigned char *)v105 + v104);
          uint64_t v107 = v215;
          sub_100094134((uint64_t *)&unk_10090AF20);
          uint64_t v108 = swift_allocObject();
          *(_OWORD *)(v108 + 16) = xmmword_10077A530;
          char v179 = v106;
          uint64_t v109 = (v106 & 1) != 0 ? *(void **)(v107 + 24) : *(void **)(v107 + 16);
          *(void *)(v108 + 32) = v109;
          uint64_t v207 = (void *)v108;
          specialized Array._endMutation()();
          unint64_t v110 = (unint64_t)v207;
          id v111 = v109;
          if (v110 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v112 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            unint64_t v181 = v104;
            if (v112)
            {
LABEL_99:
              unint64_t typea = v110 & 0xC000000000000001;
              uint64_t v113 = 4;
              Swift::Int v114 = (Swift::Int)_swiftEmptyDictionarySingleton;
              os_log_t logb = (os_log_t)v110;
              uint64_t v188 = v112;
              while (1)
              {
                if (typea) {
                  id v116 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v116 = *(id *)(v110 + 8 * v113);
                }
                BOOL v117 = v116;
                uint64_t v118 = v113 - 3;
                if (__OFADD__(v113 - 4, 1)) {
                  goto LABEL_159;
                }
                sub_1000963CC(0, (unint64_t *)&unk_10090AF40);
                id v119 = v117;
                id v120 = v119;
                if (!v60[2]) {
                  break;
                }
                id v121 = v119;
                unint64_t v122 = sub_10030703C(v121);
                if ((v123 & 1) == 0)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  goto LABEL_144;
                }
                id v124 = *(id *)(v60[7] + 8 * v122);

                if ((v114 & 0xC000000000000001) != 0)
                {
                  if (v114 < 0) {
                    uint64_t v125 = v114;
                  }
                  else {
                    uint64_t v125 = v114 & 0xFFFFFFFFFFFFFF8;
                  }
                  id v126 = v124;
                  uint64_t v127 = __CocoaDictionary.count.getter();
                  if (__OFADD__(v127, 1)) {
                    goto LABEL_161;
                  }
                  Swift::Int v114 = sub_1001A7A10(v125, v127 + 1);
                }
                else
                {
                  id v128 = v124;
                }
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v207 = (void *)v114;
                unint64_t v131 = sub_100306FE8((uint64_t)v121);
                uint64_t v132 = *(void *)(v114 + 16);
                BOOL v133 = (v130 & 1) == 0;
                uint64_t v134 = v132 + v133;
                if (__OFADD__(v132, v133)) {
                  goto LABEL_160;
                }
                char v135 = v130;
                if (*(void *)(v114 + 24) >= v134)
                {
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                    sub_100319990();
                  }
                }
                else
                {
                  sub_100310B54(v134, isUniquelyReferenced_nonNull_native);
                  unint64_t v136 = sub_100306FE8((uint64_t)v121);
                  if ((v135 & 1) != (v137 & 1)) {
                    goto LABEL_166;
                  }
                  unint64_t v131 = v136;
                }
                unint64_t v23 = v189;
                Swift::Int v114 = (Swift::Int)v207;
                if (v135)
                {
                  uint64_t v115 = v207[7];

                  *(void *)(v115 + 8 * v131) = v124;
                }
                else
                {
                  v207[(v131 >> 6) + 8] |= 1 << v131;
                  *(void *)(*(void *)(v114 + 48) + 8 * v131) = v121;
                  *(void *)(*(void *)(v114 + 56) + 8 * v131) = v124;
                  uint64_t v138 = *(void *)(v114 + 16);
                  BOOL v139 = __OFADD__(v138, 1);
                  uint64_t v140 = v138 + 1;
                  if (v139) {
                    goto LABEL_162;
                  }
                  *(void *)(v114 + 16) = v140;
                  id v141 = v121;
                }
                uint64_t v60 = v198;
                unint64_t v110 = (unint64_t)logb;

                swift_bridgeObjectRelease();
                ++v113;
                uint64_t v24 = v193;
                if (v118 == v188) {
                  goto LABEL_126;
                }
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_144:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_retain_n();
              id v147 = v120;
              uint64_t v148 = Logger.logObject.getter();
              os_log_type_t v149 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v148, v149))
              {
                uint64_t v150 = swift_slowAlloc();
                uint64_t v207 = (void *)swift_slowAlloc();
                *(_DWORD *)uint64_t v150 = 136446978;
                uint64_t v210 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v207);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                *(_WORD *)(v150 + 12) = 2082;
                sub_10010B4E8(v175, (uint64_t)v213);
                sub_10073F754((uint64_t)v213, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
                uint64_t v151 = sub_100696CF4();
                unint64_t v153 = v152;
                sub_10073F754((uint64_t)v213, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
                uint64_t v210 = (void *)sub_1000C51B8(v151, v153, (uint64_t *)&v207);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_release_n();
                swift_bridgeObjectRelease();
                *(_WORD *)(v150 + 22) = 2080;
                id v154 = [v147 description];
                uint64_t v155 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                unint64_t v157 = v156;

                uint64_t v210 = (void *)sub_1000C51B8(v155, v157, (uint64_t *)&v207);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();

                swift_bridgeObjectRelease();
                *(_WORD *)(v150 + 32) = 2080;
                id v158 = [v147 description];
                uint64_t v159 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                unint64_t v161 = v160;

                uint64_t v210 = (void *)sub_1000C51B8(v159, v161, (uint64_t *)&v207);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();

                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v148, v149, "[%{public}s] Tried to establish realtionship with non-existent target object -- bail {author: %{public}s, cdObjectID: %s, relationshipObjectID: %s}", (uint8_t *)v150, 0x2Au);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {

                swift_release_n();
              }
              [self noSuchObjectErrorWithObjectID:v147];
              swift_willThrow();

              return;
            }
          }
          else
          {
            uint64_t v112 = *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10);
            unint64_t v181 = v104;
            if (v112) {
              goto LABEL_99;
            }
          }
          Swift::Int v114 = (Swift::Int)_swiftEmptyDictionarySingleton;
LABEL_126:
          unint64_t v104 = v181 + 1;
          swift_bridgeObjectRelease();
          uint64_t v142 = sub_100420CF8(v114);
          swift_bridgeObjectRelease();
          if (v179)
          {
            sub_10047A1C4(1, *(void **)(v215 + 24), v142);
            uint64_t v62 = v183;
            id v81 = v184;
            id v144 = v143;
            [v185 setOwner:v143];
          }
          else
          {
            sub_10047A194(0, *(void **)(v215 + 16), v142);
            uint64_t v62 = v183;
            id v81 = v184;
            id v144 = v145;
            [v185 setAccount:v145];
          }
          swift_bridgeObjectRelease();

          if (v104 == v177) {
            break;
          }
          unint64_t v105 = v174;
          if (v104 >= v186[2]) {
            goto LABEL_164;
          }
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v62 = v183;
      }
      if (*(unsigned char *)(v23 + 104))
      {
        id v146 = v185;
        [v146 updateChangeCount];
      }
      else
      {
      }
      unint64_t v63 = v176 + 1;
      if (v176 + 1 == v195) {
        goto LABEL_63;
      }
      unint64_t v64 = &selRef_intersectsSet_;
      if (v63 >= v24[2]) {
        goto LABEL_163;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

LABEL_152:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v162 = v68;
    swift_retain_n();
    id v163 = v162;
    uint64_t v164 = Logger.logObject.getter();
    os_log_type_t v165 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v164, v165))
    {
      uint64_t v166 = swift_slowAlloc();
      uint64_t v207 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v166 = 136446722;
      uint64_t v210 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v207);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v166 + 12) = 2082;
      sub_10010B4E8(v175, (uint64_t)v212);
      sub_10073F754((uint64_t)v212, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v167 = sub_100696CF4();
      unint64_t v169 = v168;
      sub_10073F754((uint64_t)v212, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      uint64_t v210 = (void *)sub_1000C51B8(v167, v169, (uint64_t *)&v207);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v166 + 22) = 2080;
      id v170 = [v163 description];
      uint64_t v171 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v173 = v172;

      uint64_t v210 = (void *)sub_1000C51B8(v171, v173, (uint64_t *)&v207);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v164, v165, "[%{public}s] Tried to establish relationship with non-existing object -- skipping {author: %{public}s, cdObjectID: %s}", (uint8_t *)v166, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    [self noSuchObjectErrorWithObjectID:v163];
    swift_willThrow();

    return;
  }
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void sub_1006F3068(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v196 = a2;
  uint64_t v8 = *(void *)(a3 + 16);
  unint64_t v9 = *(void *)(a3 + 24);
  id v185 = &v196;
  uint64_t v186 = v5;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1003B5014((void (*)(__n128 *__return_ptr, id *))sub_100742600, (uint64_t)&v184, a1);
  if (v4) {
    goto LABEL_2;
  }
  uint64_t v11 = v10;
  uint64_t v171 = a3;
  if (qword_1009073A0 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10008E2DC(v12, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  uint64_t v173 = v5;
  unint64_t v176 = a1;
  if (os_log_type_enabled(v13, v14))
  {
    os_log_type_t type = v14;
    uint64_t v15 = swift_slowAlloc();
    v187[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136446978;
    uint64_t v180 = v8;
    uint64_t v188 = sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, v187);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2048;
    uint64_t v188 = v11[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2082;
    type metadata accessor for REMCDDueDateDeltaAlert();
    id v16 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v19 = v18;

    uint64_t v188 = sub_1000C51B8(v17, v19, v187);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 32) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v188 = sub_1000C51B8(v180, v9, v187);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, type, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  uint64_t v182 = v11[2];
  if (!v182) {
    goto LABEL_2;
  }
  uint64_t v192 = (uint64_t)&_swiftEmptySetSingleton;
  unint64_t v181 = v11 + 4;
  swift_bridgeObjectRetain();
  unint64_t v20 = 0;
  char v179 = v11;
  do
  {
    if (v20 >= v11[2])
    {
      __break(1u);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_98:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_2;
    }
    uint64_t v21 = (id *)&v181[2 * v20];
    uint64_t v22 = *((void *)v21[1] + 2);
    if (v22)
    {
      uint64_t v23 = v196;
      id v24 = *v21;
      swift_bridgeObjectRetain();
      do
      {
        sub_100094134((uint64_t *)&unk_10090AF20);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10077A530;
        unint64_t v26 = *(void **)(v23 + 16);
        *(void *)(inited + 32) = v26;
        v187[0] = inited;
        specialized Array._endMutation()();
        sub_10031DE54(v187, v26);
        char v27 = (void *)v187[0];
        swift_bridgeObjectRelease();

        --v22;
      }
      while (v22);

      swift_bridgeObjectRelease();
      uint64_t v11 = v179;
    }
    ++v20;
  }
  while (v20 != v182);
  swift_bridgeObjectRelease();
  if (v176 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = *(void *)((v176 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v28)
  {
    uint64_t v32 = _swiftEmptyArrayStorage;
LABEL_29:
    uint64_t v33 = v192;
    unint64_t v177 = v192 & 0xC000000000000001;
    if ((v192 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v34 = __CocoaSet.count.getter();
      if (v34)
      {
        uint64_t v35 = v34;
        unint64_t v191 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        uint64_t v188 = __CocoaSet.startIndex.getter();
        uint64_t v189 = v36;
        unsigned __int8 v190 = 1;
        if ((v35 & 0x8000000000000000) == 0) {
          goto LABEL_37;
        }
        __break(1u);

        swift_release();
        swift_bridgeObjectRelease();
LABEL_2:
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      uint64_t v35 = *(void *)(v192 + 16);
      swift_bridgeObjectRetain();
      if (v35)
      {
        unint64_t v191 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        uint64_t v188 = sub_1003CA790(v33);
        uint64_t v189 = v37;
        unsigned __int8 v190 = v38 & 1;
        do
        {
LABEL_37:
          while (1)
          {
            uint64_t v44 = v188;
            uint64_t v45 = v189;
            uint64_t v46 = v190;
            sub_1003C9F34(v188, v189, v190, v33);
            uint64_t v48 = v47;
            sub_1000963CC(0, (unint64_t *)&unk_10090AF40);

            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            if (v177) {
              break;
            }
            uint64_t v39 = sub_1003C9E34(v44, v45, v46, v33);
            uint64_t v41 = v40;
            char v43 = v42;
            sub_1000E4EA4(v44, v45, v46);
            uint64_t v188 = v39;
            uint64_t v189 = v41;
            unsigned __int8 v190 = v43 & 1;
            if (!--v35) {
              goto LABEL_42;
            }
          }
          if ((v46 & 1) == 0) {
            goto LABEL_119;
          }
          if (__CocoaSet.Index.handleBitPattern.getter()) {
            swift_isUniquelyReferenced_nonNull_native();
          }
          sub_100094134(&qword_100916988);
          uint64_t v49 = (void (*)(void, void))Set.Index._asCocoa.modify();
          __CocoaSet.formIndex(after:isUnique:)();
          v49(v187, 0);
          --v35;
        }
        while (v35);
LABEL_42:
        uint64_t v50 = (uint64_t)v32;
        sub_1000E4EA4(v188, v189, v190);
        char v51 = v191;
        swift_bridgeObjectRelease();
        goto LABEL_44;
      }
    }
    uint64_t v50 = (uint64_t)v32;
    swift_bridgeObjectRelease();
    char v51 = _swiftEmptyArrayStorage;
LABEL_44:
    char v52 = v179;
    uint64_t v53 = sub_100711100((uint64_t)v51, v171);
    swift_bridgeObjectRelease();
    uint64_t v54 = sub_100715780(v50, v171);
    swift_bridgeObjectRelease();
    uint64_t v55 = (uint64_t *)(v171 + 48);
    uint64_t v163 = v173 + 24;
    swift_beginAccess();
    unint64_t v56 = 0;
    uint64_t v57 = (void *)((unint64_t)_swiftEmptyDictionarySingleton & 0xFFFFFFFFFFFFFF8);
    if ((uint64_t)_swiftEmptyDictionarySingleton < 0) {
      uint64_t v57 = _swiftEmptyDictionarySingleton;
    }
    uint64_t v168 = (uint64_t)v57;
    char v58 = &selRef_intersectsSet_;
    uint64_t v167 = v54;
    id v162 = (uint64_t *)(v171 + 48);
    while (1)
    {
      if (v56 >= v52[2]) {
        goto LABEL_118;
      }
      unint64_t v164 = v56;
      char v59 = (id *)&v181[2 * v56];
      uint64_t v60 = (int64_t *)v59[1];
      id v61 = *v59;
      char v178 = v60;
      swift_bridgeObjectRetain();
      uint64_t v62 = sub_100695DC4([v61 v58[446]], (void (*)(void))type metadata accessor for REMCDDueDateDeltaAlert, 0xD000000000000016, (void *)0x80000001007DC190);

      uint64_t v63 = *v55;
      id v170 = v61;
      if ((v63 & 0xC000000000000001) != 0) {
        break;
      }
      if (!*(void *)(v63 + 16))
      {
        id v66 = 0;
LABEL_56:
        uint64_t v69 = v178;
        goto LABEL_57;
      }
      id v67 = v62;
      swift_bridgeObjectRetain();
      unint64_t v68 = sub_100306FE8((uint64_t)v67);
      uint64_t v69 = v60;
      if (v70)
      {
        id v66 = *(id *)(*(void *)(v63 + 56) + 8 * v68);

        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
        id v66 = 0;
      }
LABEL_57:

      if (!v54[2])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_108:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v148 = v62;
        swift_retain_n();
        id v149 = v148;
        uint64_t v150 = Logger.logObject.getter();
        os_log_type_t v151 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v150, v151))
        {
          uint64_t v152 = swift_slowAlloc();
          uint64_t v188 = swift_slowAlloc();
          *(_DWORD *)uint64_t v152 = 136446722;
          unint64_t v191 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, &v188);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v152 + 12) = 2082;
          sub_10010B4E8(v163, (uint64_t)v193);
          sub_10073F754((uint64_t)v193, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
          uint64_t v153 = sub_100696CF4();
          unint64_t v155 = v154;
          sub_10073F754((uint64_t)v193, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
          unint64_t v191 = (void *)sub_1000C51B8(v153, v155, &v188);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v152 + 22) = 2080;
          id v156 = [v149 description];
          uint64_t v157 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v159 = v158;

          unint64_t v191 = (void *)sub_1000C51B8(v157, v159, &v188);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v150, v151, "[%{public}s] Tried to establish relationship with non-existing object -- skipping {author: %{public}s, cdObjectID: %s}", (uint8_t *)v152, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        [self noSuchObjectErrorWithObjectID:v149];
        swift_willThrow();

        return;
      }
      id v71 = v62;
      unint64_t v72 = sub_10030703C(v71);
      if ((v73 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_108;
      }
      id v175 = *(id *)(v54[7] + 8 * v72);

      swift_bridgeObjectRetain_n();
      id v74 = v71;
      swift_retain_n();
      id v75 = v74;
      id v76 = Logger.logObject.getter();
      os_log_type_t v77 = static os_log_type_t.default.getter();
      uint64_t v166 = v75;
      if (os_log_type_enabled(v76, v77))
      {
        unint64_t v160 = v76;
        os_log_type_t v161 = v77;
        uint64_t v78 = swift_slowAlloc();
        id v79 = (void *)swift_slowAlloc();
        uint64_t v188 = swift_slowAlloc();
        *(_DWORD *)uint64_t v78 = 136446978;
        unint64_t v191 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, &v188);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v78 + 12) = 2082;
        sub_10010B4E8(v163, (uint64_t)v195);
        sub_10073F754((uint64_t)v195, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
        uint64_t v80 = sub_100696CF4();
        unint64_t v82 = v81;
        sub_10073F754((uint64_t)v195, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
        unint64_t v191 = (void *)sub_1000C51B8(v80, v82, &v188);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v78 + 22) = 2114;
        unint64_t v191 = v75;
        id v83 = v75;
        uint64_t v69 = v178;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v79 = v75;

        *(_WORD *)(v78 + 32) = 2082;
        int64_t v84 = v178[2];
        if (v84)
        {
          unint64_t v191 = _swiftEmptyArrayStorage;
          sub_1001DE058(0, v84, 0);
          uint64_t v85 = v191;
          unint64_t v86 = v191[2];
          uint64_t v87 = 2 * v86;
          id v88 = v160;
          do
          {
            unint64_t v191 = v85;
            unint64_t v89 = v85[3];
            unint64_t v90 = v86 + 1;
            if (v86 >= v89 >> 1)
            {
              sub_1001DE058(v89 > 1, v86 + 1, 1);
              uint64_t v85 = v191;
            }
            v85[2] = v90;
            uint64_t v91 = &v85[v87];
            v91[4] = 0x49746E756F636361;
            v91[5] = 0xE900000000000044;
            v87 += 2;
            unint64_t v86 = v90;
            --v84;
          }
          while (v84);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          id v88 = v160;
        }
        uint64_t v92 = Array.description.getter();
        unint64_t v94 = v93;
        swift_bridgeObjectRelease();
        unint64_t v191 = (void *)sub_1000C51B8(v92, v94, &v188);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v88, v161, "[%{public}s] UPDATE RELATIONSHIPS {author: %{public}s, objectID: %{public}@, changedRelationshipKeys: %{public}s}", (uint8_t *)v78, 0x2Au);
        sub_100094134((uint64_t *)&unk_10090A040);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        id v61 = v170;
        uint64_t v54 = v167;
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
      char v52 = v179;
      uint64_t v172 = v69[2];
      if (v172)
      {
        unint64_t v95 = 0;
        while (1)
        {
          if (v95 >= v69[2]) {
            goto LABEL_114;
          }
          uint64_t v96 = v196;
          sub_100094134((uint64_t *)&unk_10090AF20);
          uint64_t v97 = swift_initStackObject();
          *(_OWORD *)(v97 + 16) = xmmword_10077A530;
          unint64_t v98 = *(void **)(v96 + 16);
          *(void *)(v97 + 32) = v98;
          uint64_t v188 = v97;
          specialized Array._endMutation()();
          uint64_t v99 = v188;
          unint64_t v100 = v188 & 0xC000000000000001;
          id v101 = v98;
          id v102 = v100 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v99 + 32);
          unint64_t v103 = v102;
          sub_1000963CC(0, (unint64_t *)&unk_10090AF40);
          id v104 = v103;
          unint64_t v105 = v104;
          if (!v53[2]) {
            break;
          }
          id v106 = v104;
          unint64_t v107 = sub_10030703C(v106);
          if ((v108 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            goto LABEL_101;
          }
          id v109 = *(id *)(v53[7] + 8 * v107);

          id v110 = v109;
          id v111 = _swiftEmptyDictionarySingleton;
          if (((unint64_t)_swiftEmptyDictionarySingleton & 0xC000000000000001) != 0)
          {
            uint64_t v112 = __CocoaDictionary.count.getter();
            if (__OFADD__(v112, 1)) {
              goto LABEL_116;
            }
            id v111 = (void *)sub_1001A7A10(v168, v112 + 1);
          }
          uint64_t v113 = v53;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v188 = (uint64_t)v111;
          unint64_t v116 = sub_100306FE8((uint64_t)v106);
          uint64_t v117 = v111[2];
          BOOL v118 = (v115 & 1) == 0;
          uint64_t v119 = v117 + v118;
          if (__OFADD__(v117, v118)) {
            goto LABEL_115;
          }
          char v120 = v115;
          if (v111[3] >= v119)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_100319990();
            }
          }
          else
          {
            sub_100310B54(v119, isUniquelyReferenced_nonNull_native);
            unint64_t v121 = sub_100306FE8((uint64_t)v106);
            if ((v120 & 1) != (v122 & 1)) {
              goto LABEL_120;
            }
            unint64_t v116 = v121;
          }
          uint64_t v53 = v113;
          char v123 = (void *)v188;
          if (v120)
          {
            uint64_t v124 = *(void *)(v188 + 56);

            *(void *)(v124 + 8 * v116) = v110;
          }
          else
          {
            *(void *)(v188 + 8 * (v116 >> 6) + 64) |= 1 << v116;
            uint64_t v125 = 8 * v116;
            *(void *)(v123[6] + v125) = v106;
            *(void *)(v123[7] + v125) = v110;
            uint64_t v126 = v123[2];
            BOOL v127 = __OFADD__(v126, 1);
            uint64_t v128 = v126 + 1;
            if (v127) {
              goto LABEL_117;
            }
            v123[2] = v128;
            id v129 = v106;
          }
          uint64_t v69 = v178;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v130 = sub_100420CF8((unint64_t)v123);
          swift_bridgeObjectRelease();
          sub_1004799C4(*(void **)(v196 + 16), v130);
          uint64_t v132 = v131;
          ++v95;
          [v175 setAccount:v131];
          swift_bridgeObjectRelease();

          char v52 = v179;
          if (v172 == v95)
          {

            swift_bridgeObjectRelease();
            uint64_t v54 = v167;
            goto LABEL_95;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_101:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_retain_n();
        id v133 = v105;
        uint64_t v134 = Logger.logObject.getter();
        os_log_type_t v135 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v134, v135))
        {
          uint64_t v136 = swift_slowAlloc();
          uint64_t v188 = swift_slowAlloc();
          *(_DWORD *)uint64_t v136 = 136446978;
          unint64_t v191 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, &v188);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v136 + 12) = 2082;
          sub_10010B4E8(v163, (uint64_t)v194);
          sub_10073F754((uint64_t)v194, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
          uint64_t v137 = sub_100696CF4();
          unint64_t v139 = v138;
          sub_10073F754((uint64_t)v194, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
          unint64_t v191 = (void *)sub_1000C51B8(v137, v139, &v188);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v136 + 22) = 2080;
          id v140 = [v133 description];
          uint64_t v141 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v143 = v142;

          unint64_t v191 = (void *)sub_1000C51B8(v141, v143, &v188);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v136 + 32) = 2080;
          id v144 = [v133 description];
          uint64_t v145 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v147 = v146;

          unint64_t v191 = (void *)sub_1000C51B8(v145, v147, &v188);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v134, v135, "[%{public}s] Tried to establish realtionship with non-existent target object -- bail {author: %{public}s, cdObjectID: %s, relationshipObjectID: %s}", (uint8_t *)v136, 0x2Au);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        [self noSuchObjectErrorWithObjectID:v133];
        swift_willThrow();

        return;
      }

      swift_bridgeObjectRelease();
LABEL_95:
      unint64_t v56 = v164 + 1;

      uint64_t v55 = v162;
      char v58 = &selRef_intersectsSet_;
      if (v164 + 1 == v182)
      {
        swift_bridgeObjectRelease();
        goto LABEL_98;
      }
    }
    id v64 = v62;
    swift_bridgeObjectRetain();
    uint64_t v65 = __CocoaDictionary.lookup(_:)();
    if (v65)
    {
      unint64_t v191 = (void *)v65;
      sub_1000963CC(0, (unint64_t *)&qword_100909B00);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v66 = (id)v188;
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease();
      id v66 = 0;
    }
    uint64_t v54 = v167;
    goto LABEL_56;
  }
  v187[0] = (uint64_t)_swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v28 & 0x8000000000000000) == 0)
  {
    uint64_t v29 = 0;
    while (v28 != v29)
    {
      if ((v176 & 0xC000000000000001) != 0) {
        id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v30 = *(id *)(v176 + 8 * v29 + 32);
      }
      id v31 = v30;
      sub_100695DC4([v31 remObjectID], (void (*)(void))type metadata accessor for REMCDDueDateDeltaAlert, 0xD000000000000016, (void *)0x80000001007DC190);
      ++v29;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v28 == v29)
      {
        uint64_t v32 = (void *)v187[0];
        goto LABEL_29;
      }
    }
    __break(1u);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_2;
  }
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void sub_1006F493C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, char *, NSObject *), void (*a6)(void), void (*a7)(void), uint64_t a8, void *a9, uint64_t (*a10)(void *, uint64_t *), uint64_t (*a11)(void), uint64_t (*a12)(id, void), void (*a13)(void *, id, void, uint64_t))
{
  uint64_t v19 = v13;
  uint64_t v224 = a2;
  uint64_t v23 = *(void *)(a3 + 16);
  unint64_t v22 = *(void *)(a3 + 24);
  uint64_t v213 = &v224;
  uint64_t v214 = v19;
  swift_bridgeObjectRetain();
  uint64_t v24 = a5(a4, v212, a1);
  if (v14) {
    goto LABEL_2;
  }
  uint64_t v209 = v23;
  id v198 = a7;
  os_log_t log = a1;
  uint64_t v195 = a3;
  uint64_t v203 = v24;
  if (qword_1009073A0 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_10008E2DC(v25, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.info.getter();
  uint64_t v28 = (uint64_t *)v27;
  uint64_t v197 = v19;
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v29 = swift_slowAlloc();
    v215[0] = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136446978;
    os_log_type_t typea = v28;
    uint64_t v216 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)v215);
    unint64_t v30 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v29 + 12) = 2048;
    uint64_t v216 = *(void **)(v203 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 22) = 2082;
    a6(0);
    id v31 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v34 = v33;

    uint64_t v216 = (void *)sub_1000C51B8(v32, v34, (uint64_t *)v215);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 32) = 2082;
    uint64_t v28 = (uint64_t *)(v29 + 34);
    swift_bridgeObjectRetain();
    uint64_t v216 = (void *)sub_1000C51B8(v209, v30, (uint64_t *)v215);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v26, typea, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v29, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  *(void *)os_log_type_t type = *(void *)(v203 + 16);
  if (!*(void *)type) {
    goto LABEL_2;
  }
  uint64_t v220 = (uint64_t)&_swiftEmptySetSingleton;
  uint64_t v204 = v203 + 32;
  uint64_t v35 = swift_bridgeObjectRetain();
  unint64_t v36 = 0;
  while (1)
  {
    if (v36 >= *(void *)(v35 + 16))
    {
      __break(1u);
LABEL_147:
      __break(1u);
      __break(1u);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_2:
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v37 = v204 + 16 * v36;
    uint64_t v38 = *(void *)(v37 + 8);
    uint64_t v39 = *(uint64_t **)(v38 + 16);
    if (v39) {
      break;
    }
LABEL_11:
    if (++v36 == *(void *)type)
    {
      swift_bridgeObjectRelease();
      if ((unint64_t)log >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v52 = *(void *)(((unint64_t)log & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v53 = _swiftEmptyArrayStorage;
      if (v52)
      {
        v215[0] = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        if (v52 < 0)
        {
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          return;
        }
        uint64_t v54 = 0;
        os_log_t v55 = log;
        do
        {
          if (v52 == v54) {
            goto LABEL_147;
          }
          if (((unint64_t)log & 0xC000000000000001) != 0) {
            unint64_t v56 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            unint64_t v56 = v55[v54 + 4].isa;
          }
          uint64_t v57 = v56;
          sub_100695DC4([(objc_class *)v57 remObjectID], v198, a8, a9);
          ++v54;

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          uint64_t v28 = (uint64_t *)*((void *)v215[0] + 2);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          os_log_t v55 = log;
        }
        while (v52 != v54);
        uint64_t v53 = v215[0];
      }
      uint64_t v207 = v53;
      uint64_t v58 = v220;
      if ((v220 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v59 = __CocoaSet.count.getter();
        if (v59)
        {
          uint64_t v60 = v59;
          uint64_t v219 = _swiftEmptyArrayStorage;
          unint64_t v26 = &v219;
          specialized ContiguousArray.reserveCapacity(_:)();
          uint64_t v216 = (void *)__CocoaSet.startIndex.getter();
          uint64_t v217 = v61;
          unsigned __int8 v218 = 1;
          if ((v60 & 0x8000000000000000) == 0) {
            goto LABEL_55;
          }
          __break(1u);
LABEL_50:
          __break(1u);

          swift_release();
          goto LABEL_66;
        }
      }
      else
      {
        uint64_t v60 = *(void *)(v220 + 16);
        swift_bridgeObjectRetain();
        if (v60)
        {
          uint64_t v219 = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)();
          uint64_t v216 = (void *)sub_1003CA790(v58);
          uint64_t v217 = v62;
          unsigned __int8 v218 = v63 & 1;
          do
          {
LABEL_55:
            while (1)
            {
              uint64_t v70 = (uint64_t)v216;
              uint64_t v69 = v217;
              uint64_t v71 = v218;
              sub_1003C9F34((uint64_t)v216, v217, v218, v58);
              char v73 = v72;
              sub_1000963CC(0, (unint64_t *)&unk_10090AF40);

              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
              if ((v58 & 0xC000000000000001) != 0) {
                break;
              }
              uint64_t v64 = sub_1003C9E34(v70, v69, v71, v58);
              uint64_t v66 = v65;
              char v68 = v67;
              sub_1000E4EA4(v70, v69, v71);
              uint64_t v216 = (void *)v64;
              uint64_t v217 = v66;
              unsigned __int8 v218 = v68 & 1;
              if (!--v60) {
                goto LABEL_60;
              }
            }
            if ((v71 & 1) == 0) {
              goto LABEL_162;
            }
            if (__CocoaSet.Index.handleBitPattern.getter()) {
              swift_isUniquelyReferenced_nonNull_native();
            }
            sub_100094134(&qword_100916988);
            id v74 = (void (*)(id *, void))Set.Index._asCocoa.modify();
            __CocoaSet.formIndex(after:isUnique:)();
            v74(v215, 0);
            --v60;
          }
          while (v60);
LABEL_60:
          sub_1000E4EA4((uint64_t)v216, v217, v218);
          id v75 = v219;
          swift_bridgeObjectRelease();
          goto LABEL_62;
        }
      }
      swift_bridgeObjectRelease();
      id v75 = _swiftEmptyArrayStorage;
LABEL_62:
      uint64_t v28 = (uint64_t *)v195;
      uint64_t v46 = v197;
      uint64_t v45 = (uint64_t)sub_100711100((uint64_t)v75, v195);
      uint64_t v39 = 0;
      uint64_t v38 = v203;
      goto LABEL_64;
    }
  }
  uint64_t v207 = (void *)v36;
  id v40 = *(id *)v37;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  while (1)
  {
    if ((unint64_t)v28 >= *(void *)(v38 + 16)) {
      goto LABEL_50;
    }
    if (*((unsigned char *)v28 + v38 + 32)) {
      break;
    }
    sub_100094134((uint64_t *)&unk_10090AF20);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_10077A530;
    *(void *)(v47 + 32) = [v40 accountID];
    v215[0] = (id)v47;
    unint64_t v26 = v215;
    uint64_t v45 = specialized Array._endMutation()();
    unint64_t v43 = (unint64_t)v215[0];
    if (!((unint64_t)v215[0] >> 62)) {
      goto LABEL_26;
    }
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v45 = swift_bridgeObjectRelease();
    if (v46) {
      goto LABEL_27;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v28 = (uint64_t *)((char *)v28 + 1);
    if (v28 == v39)
    {

      swift_bridgeObjectRelease();
      uint64_t v35 = v203;
      unint64_t v36 = (unint64_t)v207;
      goto LABEL_11;
    }
  }
  id v41 = [v40 parentID];
  char v42 = v41;
  unint64_t v43 = (unint64_t)_swiftEmptyArrayStorage;
  v215[0] = _swiftEmptyArrayStorage;
  if (v41)
  {
    id v44 = v41;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)v215[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v215[0] & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    unint64_t v26 = v215;
    specialized Array._endMutation()();
    unint64_t v43 = (unint64_t)v215[0];
  }

  if (v43 >> 62) {
    goto LABEL_23;
  }
LABEL_26:
  uint64_t v46 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v46) {
    goto LABEL_15;
  }
LABEL_27:
  if (v46 >= 1)
  {
    if ((v43 & 0xC000000000000001) != 0)
    {
      uint64_t v48 = 0;
      do
      {
        uint64_t v49 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        ++v48;
        unint64_t v26 = &v220;
        sub_10031DE54(v215, v49);
      }
      while (v46 != v48);
    }
    else
    {
      uint64_t v50 = 0;
      do
      {
        char v51 = *(void **)(v43 + 8 * v50++ + 32);
        unint64_t v26 = &v220;
        sub_10031DE54(v215, v51);
      }
      while (v46 != v50);
    }
    goto LABEL_15;
  }
  __break(1u);
LABEL_64:
  uint64_t v76 = v45;
  swift_bridgeObjectRelease();
  id v77 = v207;
  uint64_t v78 = a10(v207, v28);
  if (v39)
  {
LABEL_65:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_66;
  }
  uint64_t v191 = v78;
  swift_bridgeObjectRelease();
  uint64_t v186 = v28 + 6;
  swift_beginAccess();
  id v79 = v198;
  if (!*(void *)(v38 + 16))
  {
LABEL_139:
    __break(1u);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
LABEL_66:
    swift_bridgeObjectRelease();
    goto LABEL_2;
  }
  unint64_t v80 = 0;
  uint64_t v183 = v46 + 24;
  unint64_t v81 = &selRef_intersectsSet_;
  uint64_t v208 = v76;
  while (2)
  {
    unint64_t v184 = v80;
    uint64_t v82 = v204 + 16 * v80;
    uint64_t v83 = *(void *)(v82 + 8);
    id v84 = *(id *)v82;
    uint64_t v194 = v83;
    swift_bridgeObjectRetain();
    uint64_t v85 = sub_100695DC4([v84 v81[446]], v79, a8, a9);

    uint64_t v86 = *v186;
    uint64_t v193 = v84;
    if ((*v186 & 0xC000000000000001) != 0)
    {
      id v87 = v85;
      swift_bridgeObjectRetain();
      uint64_t v88 = __CocoaDictionary.lookup(_:)();
      if (v88)
      {
        uint64_t v219 = (void *)v88;
        sub_1000963CC(0, (unint64_t *)&qword_100909B00);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v89 = v216;
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
        id v89 = 0;
      }
      uint64_t v38 = v203;
    }
    else
    {
      if (*(void *)(v86 + 16))
      {
        id v90 = v85;
        swift_bridgeObjectRetain();
        unint64_t v91 = sub_100306FE8((uint64_t)v90);
        if (v92)
        {
          id v89 = *(id *)(*(void *)(v86 + 56) + 8 * v91);

          swift_bridgeObjectRelease();
          goto LABEL_79;
        }

        swift_bridgeObjectRelease();
      }
      id v89 = 0;
    }
LABEL_79:

    if (!*(void *)(v191 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_150;
    }
    id v77 = v85;
    uint64_t v93 = a11();
    if (v94)
    {
      id v192 = *(id *)(*(void *)(v191 + 56) + 8 * v93);

      uint64_t v95 = v194;
      swift_bridgeObjectRetain_n();
      id v96 = v77;
      swift_retain_n();
      id v97 = v96;
      unint64_t v98 = Logger.logObject.getter();
      os_log_type_t v99 = static os_log_type_t.default.getter();
      unsigned __int8 v190 = v97;
      if (os_log_type_enabled(v98, v99))
      {
        os_log_type_t v188 = v99;
        os_log_t loga = v98;
        uint64_t v100 = swift_slowAlloc();
        uint64_t v210 = (void *)swift_slowAlloc();
        uint64_t v216 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v100 = 136446978;
        uint64_t v219 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v216);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v100 + 12) = 2082;
        sub_10010B4E8(v183, (uint64_t)v223);
        sub_10073F754((uint64_t)v223, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
        uint64_t v101 = sub_100696CF4();
        unint64_t v103 = v102;
        sub_10073F754((uint64_t)v223, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
        uint64_t v219 = (void *)sub_1000C51B8(v101, v103, (uint64_t *)&v216);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v100 + 22) = 2114;
        uint64_t v219 = v97;
        id v104 = v97;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v210 = v97;

        *(_WORD *)(v100 + 32) = 2082;
        int64_t v105 = *(void *)(v194 + 16);
        if (v105)
        {
          uint64_t v219 = _swiftEmptyArrayStorage;
          sub_1001DE058(0, v105, 0);
          uint64_t v106 = v194;
          uint64_t v107 = 0;
          char v108 = v219;
          uint64_t v109 = v219[2];
          uint64_t v110 = 2 * v109;
          do
          {
            unint64_t v111 = v109 + v107;
            if (*(unsigned char *)(v106 + v107 + 32)) {
              uint64_t v112 = 0x4449746E65726170;
            }
            else {
              uint64_t v112 = 0x49746E756F636361;
            }
            if (*(unsigned char *)(v106 + v107 + 32)) {
              unint64_t v113 = 0xE800000000000000;
            }
            else {
              unint64_t v113 = 0xE900000000000044;
            }
            uint64_t v219 = v108;
            unint64_t v114 = v108[3];
            unint64_t v115 = v111 + 1;
            if (v111 >= v114 >> 1)
            {
              sub_1001DE058(v114 > 1, v111 + 1, 1);
              uint64_t v106 = v194;
              char v108 = v219;
            }
            ++v107;
            v108[2] = v115;
            unint64_t v116 = &v108[v110];
            v116[4] = v112;
            v116[5] = v113;
            v110 += 2;
          }
          while (v105 != v107);
          uint64_t v95 = v106;
          swift_bridgeObjectRelease();
          uint64_t v38 = v203;
          uint64_t v76 = v208;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v38 = v203;
        }
        id v77 = (id)Array.description.getter();
        unint64_t v118 = v117;
        swift_bridgeObjectRelease();
        uint64_t v219 = (void *)sub_1000C51B8((uint64_t)v77, v118, (uint64_t *)&v216);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, loga, v188, "[%{public}s] UPDATE RELATIONSHIPS {author: %{public}s, objectID: %{public}@, changedRelationshipKeys: %{public}s}", (uint8_t *)v100, 0x2Au);
        sub_100094134((uint64_t *)&unk_10090A040);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v46 = v197;
        id v84 = v193;
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
      uint64_t v185 = *(void *)(v95 + 16);
      if (v185)
      {
        unint64_t v119 = 0;
        uint64_t v120 = v95 + 32;
        uint64_t v182 = v95 + 32;
        while (1)
        {
          if (v119 >= *(void *)(v95 + 16)) {
            goto LABEL_161;
          }
          unsigned int v121 = *(unsigned __int8 *)(v120 + v119);
          unint64_t v122 = a12(v84, *(unsigned __int8 *)(v120 + v119));
          unint64_t v123 = v122;
          if (v122 >> 62)
          {
            swift_bridgeObjectRetain();
            id v77 = (id)_CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            id v77 = *(id *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          unint64_t v187 = v119;
          unsigned int v189 = v121;
          if (v77) {
            break;
          }
          Swift::Int v125 = (Swift::Int)_swiftEmptyDictionarySingleton;
LABEL_131:
          swift_bridgeObjectRelease();
          uint64_t v153 = sub_100420CF8(v125);
          swift_bridgeObjectRelease();
          id v84 = v193;
          a13(v193, v192, v189, v153);
          unint64_t v119 = v187 + 1;
          swift_bridgeObjectRelease();
          uint64_t v38 = v203;
          uint64_t v95 = v194;
          uint64_t v120 = v182;
          if (v187 + 1 == v185) {
            goto LABEL_134;
          }
        }
        unint64_t v211 = v123 & 0xC000000000000001;
        uint64_t v124 = 4;
        Swift::Int v125 = (Swift::Int)_swiftEmptyDictionarySingleton;
        id v196 = v77;
        os_log_t logb = (os_log_t)v123;
        while (2)
        {
          if (v211) {
            id v127 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v127 = *(id *)(v123 + 8 * v124);
          }
          uint64_t v128 = v127;
          uint64_t v129 = v124 - 3;
          if (__OFADD__(v124 - 4, 1)) {
            goto LABEL_157;
          }
          sub_1000963CC(0, (unint64_t *)&unk_10090AF40);
          id v130 = v128;
          unint64_t v131 = v130;
          if (!*(void *)(v76 + 16))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_142:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_retain_n();
            id v155 = v131;
            id v156 = Logger.logObject.getter();
            os_log_type_t v157 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v156, v157))
            {
              uint64_t v158 = swift_slowAlloc();
              uint64_t v216 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v158 = 136446978;
              uint64_t v219 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v216);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v158 + 12) = 2082;
              sub_10010B4E8(v183, (uint64_t)v222);
              sub_10073F754((uint64_t)v222, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
              uint64_t v159 = sub_100696CF4();
              unint64_t v161 = v160;
              sub_10073F754((uint64_t)v222, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
              uint64_t v219 = (void *)sub_1000C51B8(v159, v161, (uint64_t *)&v216);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v158 + 22) = 2080;
              id v162 = [v155 description];
              uint64_t v163 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v165 = v164;

              uint64_t v219 = (void *)sub_1000C51B8(v163, v165, (uint64_t *)&v216);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              *(_WORD *)(v158 + 32) = 2080;
              id v166 = [v155 description];
              uint64_t v167 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v169 = v168;

              uint64_t v219 = (void *)sub_1000C51B8(v167, v169, (uint64_t *)&v216);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v156, v157, "[%{public}s] Tried to establish realtionship with non-existent target object -- bail {author: %{public}s, cdObjectID: %s, relationshipObjectID: %s}", (uint8_t *)v158, 0x2Au);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_release_n();
            }
            [self noSuchObjectErrorWithObjectID:v155];
            swift_willThrow();

            return;
          }
          id v132 = v130;
          unint64_t v133 = sub_10030703C(v132);
          if ((v134 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            goto LABEL_142;
          }
          id v77 = *(id *)(*(void *)(v76 + 56) + 8 * v133);

          if ((v125 & 0xC000000000000001) != 0)
          {
            if (v125 < 0) {
              uint64_t v135 = v125;
            }
            else {
              uint64_t v135 = v125 & 0xFFFFFFFFFFFFFF8;
            }
            id v136 = v77;
            uint64_t v137 = __CocoaDictionary.count.getter();
            if (__OFADD__(v137, 1)) {
              goto LABEL_159;
            }
            Swift::Int v125 = sub_1001A7A10(v135, v137 + 1);
          }
          else
          {
            id v138 = v77;
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v216 = (void *)v125;
          unint64_t v141 = sub_100306FE8((uint64_t)v132);
          uint64_t v142 = *(void *)(v125 + 16);
          BOOL v143 = (v140 & 1) == 0;
          uint64_t v144 = v142 + v143;
          if (__OFADD__(v142, v143)) {
            goto LABEL_158;
          }
          char v145 = v140;
          if (*(void *)(v125 + 24) >= v144)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              Swift::Int v125 = (Swift::Int)v216;
              if ((v140 & 1) == 0) {
                goto LABEL_126;
              }
            }
            else
            {
              sub_100319990();
              Swift::Int v125 = (Swift::Int)v216;
              if ((v145 & 1) == 0) {
                goto LABEL_126;
              }
            }
          }
          else
          {
            sub_100310B54(v144, isUniquelyReferenced_nonNull_native);
            unint64_t v146 = sub_100306FE8((uint64_t)v132);
            if ((v145 & 1) != (v147 & 1)) {
              goto LABEL_163;
            }
            unint64_t v141 = v146;
            Swift::Int v125 = (Swift::Int)v216;
            if ((v145 & 1) == 0)
            {
LABEL_126:
              *(void *)(v125 + 8 * (v141 >> 6) + 64) |= 1 << v141;
              uint64_t v148 = 8 * v141;
              *(void *)(*(void *)(v125 + 48) + v148) = v132;
              *(void *)(*(void *)(v125 + 56) + v148) = v77;
              uint64_t v149 = *(void *)(v125 + 16);
              BOOL v150 = __OFADD__(v149, 1);
              uint64_t v151 = v149 + 1;
              if (v150) {
                goto LABEL_160;
              }
              *(void *)(v125 + 16) = v151;
              id v152 = v132;
              goto LABEL_105;
            }
          }
          uint64_t v126 = *(void *)(v125 + 56);

          *(void *)(v126 + 8 * v141) = v77;
LABEL_105:
          uint64_t v46 = v197;
          uint64_t v76 = v208;

          swift_bridgeObjectRelease();
          ++v124;
          unint64_t v123 = (unint64_t)logb;
          if ((id)v129 == v196) {
            goto LABEL_131;
          }
          continue;
        }
      }
LABEL_134:
      swift_bridgeObjectRelease();
      if (*(unsigned char *)(v46 + 104) == 1)
      {
        id v154 = v192;
        [v154 updateChangeCount];
      }
      else
      {
      }
      id v79 = v198;
      unint64_t v80 = v184 + 1;
      if (v184 + 1 == *(void *)type) {
        goto LABEL_65;
      }
      unint64_t v81 = &selRef_intersectsSet_;
      if (v80 >= *(void *)(v38 + 16)) {
        goto LABEL_139;
      }
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_150:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v170 = v85;
  swift_retain_n();
  id v171 = v170;
  uint64_t v172 = Logger.logObject.getter();
  os_log_type_t v173 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v172, v173))
  {
    uint64_t v174 = swift_slowAlloc();
    uint64_t v216 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v174 = 136446722;
    uint64_t v219 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v216);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v174 + 12) = 2082;
    sub_10010B4E8(v183, (uint64_t)v221);
    sub_10073F754((uint64_t)v221, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
    uint64_t v175 = sub_100696CF4();
    unint64_t v177 = v176;
    sub_10073F754((uint64_t)v221, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
    uint64_t v219 = (void *)sub_1000C51B8(v175, v177, (uint64_t *)&v216);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v174 + 22) = 2080;
    id v178 = [v171 description];
    uint64_t v179 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v181 = v180;

    uint64_t v219 = (void *)sub_1000C51B8(v179, v181, (uint64_t *)&v216);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v172, v173, "[%{public}s] Tried to establish relationship with non-existing object -- skipping {author: %{public}s, cdObjectID: %s}", (uint8_t *)v174, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  [self noSuchObjectErrorWithObjectID:v171];
  swift_willThrow();
}

void sub_1006F6428(unint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v5 = (unint64_t)a3;
  uint64_t v207 = a2;
  uint64_t v8 = a3[2];
  unint64_t v7 = a3[3];
  uint64_t v197 = &v207;
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_1003B57F0((void (*)(__n128 *__return_ptr, id *))sub_100740704, (uint64_t)&v196, a1);
  unint64_t v192 = v4;
  if (v4) {
    goto LABEL_2;
  }
  uint64_t v10 = v9;
  uint64_t v182 = v3;
  unint64_t v183 = a1;
  if (qword_1009073A0 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10008E2DC(v11, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  uint64_t v185 = v10;
  uint64_t v180 = v5;
  if (os_log_type_enabled((os_log_t)v12, v13))
  {
    os_log_type_t typea = v13;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v202 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136446978;
    id v198 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, &v202);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 12) = 2048;
    id v198 = (void *)v10[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 22) = 2082;
    type metadata accessor for REMCDTemplate();
    id v15 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v18 = v17;

    id v198 = (void *)sub_1000C51B8(v16, v18, &v202);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v10 = v185;
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 32) = 2082;
    unint64_t v5 = v14 + 34;
    swift_bridgeObjectRetain();
    id v198 = (void *)sub_1000C51B8(v8, v7, &v202);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v12, typea, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v14, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  unint64_t v187 = v10[2];
  if (!v187) {
    goto LABEL_2;
  }
  uint64_t v203 = (uint64_t)&_swiftEmptySetSingleton;
  uint64_t v186 = v10 + 4;
  swift_bridgeObjectRetain();
  os_log_t v19 = 0;
  while (1)
  {
    if ((unint64_t)v19 >= v10[2])
    {
      __break(1u);
LABEL_162:
      __break(1u);
      __break(1u);
LABEL_163:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_2:
      swift_bridgeObjectRelease();
      return;
    }
    unint64_t v20 = (id *)&v186[2 * (void)v19];
    uint64_t v21 = v20[1];
    uint64_t v22 = v21[2];
    if (v22) {
      break;
    }
LABEL_11:
    os_log_t v19 = (os_log_t)((char *)v19 + 1);
    if (v19 == v187)
    {
      swift_bridgeObjectRelease();
      unint64_t v39 = v183;
      if (v183 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v40 = *(void *)((v183 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      id v41 = _swiftEmptyArrayStorage;
      if (v40)
      {
        uint64_t v202 = (uint64_t)_swiftEmptyArrayStorage;
        uint64_t v12 = (uint64_t)&v202;
        specialized ContiguousArray.reserveCapacity(_:)();
        if (v40 < 0)
        {
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
          goto LABEL_177;
        }
        uint64_t v42 = 0;
        do
        {
          if (v40 == v42) {
            goto LABEL_162;
          }
          if ((v183 & 0xC000000000000001) != 0) {
            id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v43 = *(id *)(v39 + 8 * v42 + 32);
          }
          id v44 = v43;
          sub_100695DC4([v44 remObjectID], (void (*)(void))type metadata accessor for REMCDTemplate, 0x6D655444434D4552, (void *)0xED00006574616C70);
          ++v42;

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          uint64_t v12 = (uint64_t)&v202;
          specialized ContiguousArray._endMutation()();
          unint64_t v39 = v183;
        }
        while (v40 != v42);
        id v41 = v202;
      }
      os_log_t loga = v41;
      uint64_t v45 = v203;
      if ((v203 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v46 = __CocoaSet.count.getter();
        if (v46)
        {
          uint64_t v47 = v46;
          uint64_t v201 = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)();
          id v198 = (void *)__CocoaSet.startIndex.getter();
          uint64_t v199 = v48;
          unsigned __int8 v200 = 1;
          if ((v47 & 0x8000000000000000) == 0) {
            goto LABEL_69;
          }
          __break(1u);
          goto LABEL_2;
        }
      }
      else
      {
        uint64_t v47 = *(void *)(v203 + 16);
        swift_bridgeObjectRetain();
        if (v47)
        {
          uint64_t v201 = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)();
          id v198 = (void *)sub_1003CA790(v45);
          uint64_t v199 = v49;
          unsigned __int8 v200 = v50 & 1;
          do
          {
LABEL_69:
            while (1)
            {
              uint64_t v57 = (uint64_t)v198;
              uint64_t v56 = v199;
              uint64_t v58 = v200;
              sub_1003C9F34((uint64_t)v198, v199, v200, v45);
              uint64_t v60 = v59;
              sub_1000963CC(0, (unint64_t *)&unk_10090AF40);

              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
              if ((v45 & 0xC000000000000001) != 0) {
                break;
              }
              uint64_t v51 = sub_1003C9E34(v57, v56, v58, v45);
              uint64_t v53 = v52;
              char v55 = v54;
              sub_1000E4EA4(v57, v56, v58);
              id v198 = (void *)v51;
              uint64_t v199 = v53;
              unsigned __int8 v200 = v55 & 1;
              if (!--v47) {
                goto LABEL_74;
              }
            }
            if ((v58 & 1) == 0) {
              goto LABEL_179;
            }
            if (__CocoaSet.Index.handleBitPattern.getter()) {
              swift_isUniquelyReferenced_nonNull_native();
            }
            sub_100094134(&qword_100916988);
            uint64_t v61 = (void (*)(void, void))Set.Index._asCocoa.modify();
            __CocoaSet.formIndex(after:isUnique:)();
            v61(&v202, 0);
            --v47;
          }
          while (v47);
LABEL_74:
          sub_1000E4EA4((uint64_t)v198, v199, v200);
          uint64_t v62 = v201;
          swift_bridgeObjectRelease();
          goto LABEL_76;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v62 = _swiftEmptyArrayStorage;
LABEL_76:
      unint64_t v28 = v180;
      uint64_t v24 = v182;
      uint64_t v30 = (uint64_t)sub_100711100((uint64_t)v62, v180);
      unint64_t v5 = 0;
      uint64_t v23 = v185;
      uint64_t v36 = (uint64_t)loga;
LABEL_78:
      uint64_t v22 = v30;
      swift_bridgeObjectRelease();
      uint64_t v35 = (uint64_t)sub_100716920(v36, v28);
      unint64_t v192 = v5;
      if (!v5) {
        goto LABEL_81;
      }
LABEL_79:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_154;
    }
  }
  os_log_t log = v19;
  uint64_t v23 = v21 + 4;
  uint64_t v24 = *v20;
  swift_bridgeObjectRetain();
  unint64_t v25 = 0;
  while (1)
  {
    if (v25 >= v21[2])
    {
      __break(1u);

      swift_release();
LABEL_154:
      swift_bridgeObjectRelease();
      goto LABEL_2;
    }
    if (!*((unsigned char *)v23 + v25))
    {
      sub_100094134((uint64_t *)&unk_10090AF20);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_10077A530;
      *(void *)(v31 + 32) = [v24 accountID];
      uint64_t v202 = v31;
      uint64_t v12 = (uint64_t)&v202;
      uint64_t v30 = specialized Array._endMutation()();
      unint64_t v28 = v202;
      goto LABEL_36;
    }
    if (*((unsigned char *)v23 + v25) != 1) {
      break;
    }
    id v26 = [v24 parentAccountID];
    os_log_type_t v27 = v26;
    unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v202 = (uint64_t)_swiftEmptyArrayStorage;
    if (v26)
    {
      id v29 = v26;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      unint64_t v5 = *(void *)((v202 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v5 >= *(void *)((v202 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t v12 = (uint64_t)&v202;
      specialized Array._endMutation()();
      unint64_t v28 = v202;
    }

LABEL_36:
    if (v28 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v30 = swift_bridgeObjectRelease();
      if (v36)
      {
LABEL_38:
        if (v36 < 1)
        {
          __break(1u);
          goto LABEL_78;
        }
        if ((v28 & 0xC000000000000001) != 0)
        {
          unint64_t v5 = 0;
          do
          {
            uint64_t v37 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            ++v5;
            uint64_t v12 = (uint64_t)&v203;
            sub_10031DE54(&v202, v37);
          }
          while (v36 != v5);
        }
        else
        {
          unint64_t v5 = 0;
          do
          {
            uint64_t v38 = *(void **)(v28 + 8 * v5++ + 32);
            uint64_t v12 = (uint64_t)&v203;
            sub_10031DE54(&v202, v38);
          }
          while (v36 != v5);
        }
      }
    }
    else
    {
      uint64_t v36 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v36) {
        goto LABEL_38;
      }
    }
    swift_bridgeObjectRelease();
    if (++v25 == v22)
    {

      swift_bridgeObjectRelease();
      uint64_t v10 = v185;
      os_log_t v19 = log;
      goto LABEL_11;
    }
  }
  unint64_t v5 = (unint64_t)[v24 sectionIDsToUndelete];
  sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
  sub_1001207D4();
  uint64_t v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v12 & 0xC000000000000001) != 0)
  {
    uint64_t v32 = __CocoaSet.count.getter();
    if (!v32) {
      goto LABEL_32;
    }
  }
  else
  {
    uint64_t v32 = *(void *)(v12 + 16);
    if (!v32)
    {
LABEL_32:
      uint64_t v30 = swift_bridgeObjectRelease();
      unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
      goto LABEL_36;
    }
  }
  if (v32 < 1)
  {
    unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    sub_100094134((uint64_t *)&unk_10090AF20);
    unint64_t v28 = swift_allocObject();
    int64_t v33 = j__malloc_size((const void *)v28);
    uint64_t v34 = v33 - 32;
    if (v33 < 32) {
      uint64_t v34 = v33 - 25;
    }
    *(void *)(v28 + 16) = v32;
    *(void *)(v28 + 24) = (2 * (v34 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = (unint64_t)sub_10020C094(&v202, (void *)(v28 + 32), v32, v12);
  uint64_t v35 = sub_1000C1AF8();
  if (v5 == v32)
  {
    uint64_t v30 = swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  __break(1u);
LABEL_81:
  uint64_t v175 = v35;
  swift_bridgeObjectRelease();
  id v171 = (uint64_t *)(v28 + 48);
  swift_beginAccess();
  if (!v23[2]) {
    goto LABEL_178;
  }
  uint64_t v63 = 0;
  uint64_t v168 = (uint64_t)(v24 + 24);
  uint64_t v64 = &selRef_intersectsSet_;
  uint64_t v184 = v22;
  while (2)
  {
    uint64_t v169 = v63;
    uint64_t v65 = (id *)&v186[2 * v63];
    uint64_t v66 = v65[1];
    uint64_t v12 = (uint64_t)*v65;
    unint64_t v177 = v66;
    swift_bridgeObjectRetain();
    char v67 = sub_100695DC4([(id)v12 v64[446]], (void (*)(void))type metadata accessor for REMCDTemplate, 0x6D655444434D4552, (void *)0xED00006574616C70);
    if (v192) {
      goto LABEL_163;
    }
    char v68 = v67;
    id v178 = (id)v12;

    uint64_t v69 = *v171;
    if ((*v171 & 0xC000000000000001) != 0)
    {
      id v70 = v68;
      swift_bridgeObjectRetain();
      uint64_t v71 = __CocoaDictionary.lookup(_:)();
      if (v71)
      {
        uint64_t v201 = (void *)v71;
        sub_1000963CC(0, (unint64_t *)&qword_100909B00);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v72 = v198;
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
        id v72 = 0;
      }
      uint64_t v24 = v182;
    }
    else if (*(void *)(v69 + 16))
    {
      id v73 = v68;
      swift_bridgeObjectRetain();
      unint64_t v74 = sub_100306FE8((uint64_t)v73);
      if (v75)
      {
        id v72 = *(id *)(*(void *)(v69 + 56) + 8 * v74);

        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
        id v72 = 0;
      }
    }
    else
    {
      id v72 = 0;
    }

    if (!*(void *)(v175 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_166:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v155 = v68;
      swift_retain_n();
      id v156 = v155;
      os_log_type_t v157 = Logger.logObject.getter();
      os_log_type_t v158 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v157, v158))
      {
        uint64_t v159 = swift_slowAlloc();
        id v198 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v159 = 136446722;
        uint64_t v201 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v198);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v159 + 12) = 2082;
        sub_10010B4E8(v168, (uint64_t)v204);
        sub_10073F754((uint64_t)v204, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
        uint64_t v160 = sub_100696CF4();
        unint64_t v162 = v161;
        sub_10073F754((uint64_t)v204, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
        uint64_t v201 = (void *)sub_1000C51B8(v160, v162, (uint64_t *)&v198);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v159 + 22) = 2080;
        id v163 = [v156 description];
        uint64_t v164 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v166 = v165;

        uint64_t v201 = (void *)sub_1000C51B8(v164, v166, (uint64_t *)&v198);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v157, v158, "[%{public}s] Tried to establish relationship with non-existing object -- skipping {author: %{public}s, cdObjectID: %s}", (uint8_t *)v159, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      [self noSuchObjectErrorWithObjectID:v156];
      swift_willThrow();

      return;
    }
    id v76 = v68;
    unint64_t v77 = sub_10030703C(v76);
    uint64_t v78 = v185;
    if ((v79 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_166;
    }
    id v176 = *(id *)(*(void *)(v175 + 56) + 8 * v77);

    unint64_t v80 = v66;
    swift_bridgeObjectRetain_n();
    id v81 = v76;
    swift_retain_n();
    id v82 = v81;
    uint64_t v83 = Logger.logObject.getter();
    os_log_type_t v84 = static os_log_type_t.default.getter();
    uint64_t v174 = v82;
    if (os_log_type_enabled(v83, v84))
    {
      os_log_t logb = v83;
      uint64_t v85 = swift_slowAlloc();
      os_log_type_t typeb = (void *)swift_slowAlloc();
      id v198 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v85 = 136446978;
      uint64_t v201 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v198);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v85 + 12) = 2082;
      sub_10010B4E8(v168, (uint64_t)v206);
      sub_10073F754((uint64_t)v206, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v86 = sub_100696CF4();
      unint64_t v88 = v87;
      sub_10073F754((uint64_t)v206, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      uint64_t v201 = (void *)sub_1000C51B8(v86, v88, (uint64_t *)&v198);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v85 + 22) = 2114;
      uint64_t v201 = v82;
      id v89 = v82;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *os_log_type_t typeb = v82;

      *(_WORD *)(v85 + 32) = 2082;
      int64_t v90 = v177[2];
      if (v90)
      {
        uint64_t v201 = _swiftEmptyArrayStorage;
        sub_1001DE058(0, v90, 0);
        unint64_t v80 = v177;
        uint64_t v91 = 0;
        char v92 = v201;
        do
        {
          unint64_t v93 = 0xD000000000000014;
          if (v80[v91 + 32] == 1)
          {
            unint64_t v93 = 0x6341746E65726170;
            unint64_t v94 = 0xEF4449746E756F63;
          }
          else
          {
            unint64_t v94 = 0x80000001007C6240;
          }
          if (v80[v91 + 32]) {
            uint64_t v95 = v93;
          }
          else {
            uint64_t v95 = 0x49746E756F636361;
          }
          if (v80[v91 + 32]) {
            unint64_t v96 = v94;
          }
          else {
            unint64_t v96 = 0xE900000000000044;
          }
          uint64_t v201 = v92;
          unint64_t v98 = v92[2];
          unint64_t v97 = v92[3];
          if (v98 >= v97 >> 1)
          {
            sub_1001DE058(v97 > 1, v98 + 1, 1);
            unint64_t v80 = v177;
            char v92 = v201;
          }
          ++v91;
          v92[2] = v98 + 1;
          os_log_type_t v99 = &v92[2 * v98];
          v99[4] = v95;
          v99[5] = v96;
        }
        while (v90 != v91);
        swift_bridgeObjectRelease();
        uint64_t v24 = v182;
        uint64_t v22 = v184;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v100 = Array.description.getter();
      unint64_t v102 = v101;
      swift_bridgeObjectRelease();
      uint64_t v201 = (void *)sub_1000C51B8(v100, v102, (uint64_t *)&v198);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, logb, v84, "[%{public}s] UPDATE RELATIONSHIPS {author: %{public}s, objectID: %{public}@, changedRelationshipKeys: %{public}s}", (uint8_t *)v85, 0x2Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v78 = v185;
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v170 = *((void *)v80 + 2);
    if (!v170)
    {
LABEL_146:
      swift_bridgeObjectRelease();
      id v138 = (v169 + 1);
      if (v24[104] == 1)
      {
        id v139 = v176;
        [v139 updateChangeCount];
      }
      else
      {
      }
      uint64_t v63 = v169 + 1;
      uint64_t v64 = &selRef_intersectsSet_;
      if (v138 == v187) {
        goto LABEL_79;
      }
      if ((unint64_t)v138 >= v78[2]) {
        goto LABEL_178;
      }
      continue;
    }
    break;
  }
  unint64_t v103 = 0;
  id v104 = v80 + 32;
  uint64_t v167 = v80 + 32;
  while (v103 < *((void *)v80 + 2))
  {
    char v173 = v104[v103];
    unint64_t v105 = (unint64_t)sub_100168868(v178, v173);
    unint64_t v106 = v105;
    if (v105 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v107 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      unint64_t v172 = v103;
      if (v107)
      {
LABEL_118:
        os_log_t logc = (os_log_t)(v106 & 0xC000000000000001);
        uint64_t v108 = 4;
        Swift::Int v109 = (Swift::Int)_swiftEmptyDictionarySingleton;
        unint64_t v179 = v106;
        uint64_t v181 = v107;
        while (1)
        {
          if (logc) {
            id v111 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v111 = *(id *)(v106 + 8 * v108);
          }
          uint64_t v112 = v111;
          if (__OFADD__(v108 - 4, 1)) {
            goto LABEL_173;
          }
          sub_1000963CC(0, (unint64_t *)&unk_10090AF40);
          id v113 = v112;
          unint64_t v114 = v113;
          if (!*(void *)(v22 + 16)) {
            break;
          }
          id v115 = v113;
          unint64_t v116 = sub_10030703C(v115);
          if ((v117 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            goto LABEL_157;
          }
          id v118 = *(id *)(*(void *)(v22 + 56) + 8 * v116);

          uint64_t type = v108 - 3;
          if ((v109 & 0xC000000000000001) != 0)
          {
            if (v109 < 0) {
              uint64_t v119 = v109;
            }
            else {
              uint64_t v119 = v109 & 0xFFFFFFFFFFFFFF8;
            }
            id v120 = v118;
            uint64_t v121 = __CocoaDictionary.count.getter();
            if (__OFADD__(v121, 1)) {
              goto LABEL_175;
            }
            Swift::Int v109 = sub_1001A7A10(v119, v121 + 1);
          }
          else
          {
            id v122 = v118;
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          id v198 = (void *)v109;
          unint64_t v125 = sub_100306FE8((uint64_t)v115);
          uint64_t v126 = *(void *)(v109 + 16);
          BOOL v127 = (v124 & 1) == 0;
          uint64_t v128 = v126 + v127;
          if (__OFADD__(v126, v127)) {
            goto LABEL_174;
          }
          char v129 = v124;
          if (*(void *)(v109 + 24) >= v128)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_100319990();
            }
          }
          else
          {
            sub_100310B54(v128, isUniquelyReferenced_nonNull_native);
            unint64_t v130 = sub_100306FE8((uint64_t)v115);
            if ((v129 & 1) != (v131 & 1)) {
              goto LABEL_180;
            }
            unint64_t v125 = v130;
          }
          Swift::Int v109 = (Swift::Int)v198;
          if (v129)
          {
            uint64_t v110 = v198[7];

            *(void *)(v110 + 8 * v125) = v118;
          }
          else
          {
            v198[(v125 >> 6) + 8] |= 1 << v125;
            uint64_t v132 = 8 * v125;
            *(void *)(*(void *)(v109 + 48) + v132) = v115;
            *(void *)(*(void *)(v109 + 56) + v132) = v118;
            uint64_t v133 = *(void *)(v109 + 16);
            BOOL v134 = __OFADD__(v133, 1);
            uint64_t v135 = v133 + 1;
            if (v134) {
              goto LABEL_176;
            }
            *(void *)(v109 + 16) = v135;
            id v136 = v115;
          }
          uint64_t v22 = v184;
          unint64_t v106 = v179;

          swift_bridgeObjectRelease();
          ++v108;
          uint64_t v78 = v185;
          if (type == v181) {
            goto LABEL_145;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_157:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_retain_n();
        id v140 = v114;
        unint64_t v141 = Logger.logObject.getter();
        os_log_type_t v142 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v141, v142))
        {
          uint64_t v143 = swift_slowAlloc();
          id v198 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v143 = 136446978;
          uint64_t v201 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v198);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v143 + 12) = 2082;
          sub_10010B4E8(v168, (uint64_t)v205);
          sub_10073F754((uint64_t)v205, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
          uint64_t v144 = sub_100696CF4();
          unint64_t v146 = v145;
          sub_10073F754((uint64_t)v205, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
          uint64_t v201 = (void *)sub_1000C51B8(v144, v146, (uint64_t *)&v198);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v143 + 22) = 2080;
          id v147 = [v140 description];
          uint64_t v148 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v150 = v149;

          uint64_t v201 = (void *)sub_1000C51B8(v148, v150, (uint64_t *)&v198);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v143 + 32) = 2080;
          id v151 = [v140 description];
          uint64_t v152 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v154 = v153;

          uint64_t v201 = (void *)sub_1000C51B8(v152, v154, (uint64_t *)&v198);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v141, v142, "[%{public}s] Tried to establish realtionship with non-existent target object -- bail {author: %{public}s, cdObjectID: %s, relationshipObjectID: %s}", (uint8_t *)v143, 0x2Au);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        [self noSuchObjectErrorWithObjectID:v140];
        swift_willThrow();

        return;
      }
    }
    else
    {
      uint64_t v107 = *(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t v172 = v103;
      if (v107) {
        goto LABEL_118;
      }
    }
    Swift::Int v109 = (Swift::Int)_swiftEmptyDictionarySingleton;
LABEL_145:
    swift_bridgeObjectRelease();
    uint64_t v137 = sub_100420CF8(v109);
    swift_bridgeObjectRelease();
    sub_10016913C(v178, v176, v173, v137);
    unint64_t v103 = v172 + 1;
    swift_bridgeObjectRelease();
    uint64_t v24 = v182;
    unint64_t v80 = v177;
    id v104 = v167;
    if (v172 + 1 == v170) {
      goto LABEL_146;
    }
  }
LABEL_177:
  __break(1u);
LABEL_178:
  __break(1u);
LABEL_179:
  __break(1u);
LABEL_180:
  sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void sub_1006F8094(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v5 = v3;
  unint64_t v6 = a3;
  uint64_t v219 = a2;
  unint64_t v9 = *(__objc2_class ***)(a3 + 16);
  unint64_t v8 = *(void *)(a3 + 24);
  uint64_t v208 = &v219;
  unint64_t v209 = v5;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1003B581C((void (*)(__n128 *__return_ptr, id *))sub_100740A60, (uint64_t)&v207, a1);
  if (v4) {
    goto LABEL_2;
  }
  unint64_t v192 = a1;
  uint64_t v194 = v10;
  if (qword_1009073A0 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10008E2DC(v11, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  os_log_t log = v12;
  uint64_t v189 = v6;
  unint64_t v191 = v5;
  if (os_log_type_enabled((os_log_t)v12, v13))
  {
    unint64_t v6 = swift_slowAlloc();
    uint64_t v201 = swift_slowAlloc();
    unint64_t v214 = (unint64_t)v201;
    *(_DWORD *)unint64_t v6 = 136446978;
    uint64_t v210 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v214);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2048;
    uint64_t v210 = (void *)v194[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 22) = 2082;
    sub_1000963CC(0, (unint64_t *)&unk_100910210);
    id v14 = [(id)swift_getObjCClassFromMetadata() description];
    os_log_type_t typec = v13;
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = (uint64_t)v9;
    unint64_t v9 = v17;

    uint64_t v210 = (void *)sub_1000C51B8(v15, (unint64_t)v9, (uint64_t *)&v214);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 32) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v210 = (void *)sub_1000C51B8(v16, v8, (uint64_t *)&v214);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, typec, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v6, 0x2Au);
    uint64_t v12 = (uint64_t)v201;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  uint64_t v196 = v194[2];
  if (!v196) {
    goto LABEL_2;
  }
  uint64_t v215 = (uint64_t)&_swiftEmptySetSingleton;
  uint64_t v195 = v194 + 4;
  uint64_t v18 = swift_bridgeObjectRetain();
  unint64_t v19 = 0;
LABEL_12:
  if (v19 >= *(void *)(v18 + 16))
  {
    __break(1u);
LABEL_172:
    __break(1u);
    __break(1u);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_2;
  }
  unint64_t v20 = (id *)&v195[2 * v19];
  unint64_t v9 = (__objc2_class **)v20[1];
  uint64_t v21 = v9[2];
  if (!v21) {
    goto LABEL_11;
  }
  *(void *)uint64_t type = v19;
  uint64_t v22 = (uint64_t *)*v20;
  swift_bridgeObjectRetain();
  unint64_t v23 = 0;
  while (2)
  {
    if (v23 >= (unint64_t)v9[2]) {
      goto LABEL_80;
    }
    unint64_t v24 = v23++;
    switch(*((unsigned char *)v9 + v24 + 32))
    {
      case 1:
        uint64_t v12 = (uint64_t)[v22 smartListType];
        unint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v37 = v36;
        if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v37 == v38)
        {

          swift_bridgeObjectRelease_n();
        }
        else
        {
          unint64_t v6 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v40 = &selRef_accountID;
          if ((v6 & 1) == 0) {
            goto LABEL_41;
          }
        }
        uint64_t v12 = (uint64_t)[v22 parentAccountID];

        uint64_t v40 = &selRef_parentAccountID;
        if (v12)
        {
LABEL_41:
          id v41 = [v22 *v40];
          goto LABEL_42;
        }
        unint64_t v27 = (unint64_t)_swiftEmptyArrayStorage;
        unint64_t v214 = (unint64_t)_swiftEmptyArrayStorage;

        goto LABEL_53;
      case 2:
        uint64_t v12 = (uint64_t)[v22 smartListType];
        unint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v29 = v28;
        if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v29 == v30)
        {

          swift_bridgeObjectRelease_n();
        }
        else
        {
          unint64_t v6 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v6 & 1) == 0)
          {
            unint64_t v27 = (unint64_t)_swiftEmptyArrayStorage;

            goto LABEL_53;
          }
        }
        id v41 = [v22 parentListID];
LABEL_42:
        id v42 = v41;
        unint64_t v27 = (unint64_t)_swiftEmptyArrayStorage;
        unint64_t v214 = (unint64_t)_swiftEmptyArrayStorage;
        if (v42)
        {
          id v43 = v42;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          unint64_t v6 = *(void *)((v214 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v6 >= *(void *)((v214 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          uint64_t v12 = (uint64_t)&v214;
          specialized Array._endMutation()();
          unint64_t v27 = v214;
        }
        else
        {
        }
        goto LABEL_53;
      case 3:
        id v32 = [v22 sectionIDsToUndelete];
        sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
        sub_1001207D4();
        uint64_t v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        if ((v12 & 0xC000000000000001) != 0)
        {
          uint64_t v33 = __CocoaSet.count.getter();
          if (!v33) {
            goto LABEL_48;
          }
        }
        else
        {
          uint64_t v33 = *(void *)(v12 + 16);
          if (!v33)
          {
LABEL_48:
            uint64_t v26 = swift_bridgeObjectRelease();
            unint64_t v27 = (unint64_t)_swiftEmptyArrayStorage;
            goto LABEL_53;
          }
        }
        if (v33 < 1)
        {
          unint64_t v27 = (unint64_t)_swiftEmptyArrayStorage;
        }
        else
        {
          sub_100094134((uint64_t *)&unk_10090AF20);
          unint64_t v27 = swift_allocObject();
          int64_t v34 = j__malloc_size((const void *)v27);
          uint64_t v35 = v34 - 32;
          if (v34 < 32) {
            uint64_t v35 = v34 - 25;
          }
          *(void *)(v27 + 16) = v33;
          *(void *)(v27 + 24) = (2 * (v35 >> 3)) | 1;
        }
        swift_bridgeObjectRetain();
        unint64_t v6 = (unint64_t)sub_10020C094(&v214, (void *)(v27 + 32), v33, v12);
        sub_1000C1AF8();
        if (v6 != v33)
        {
          __break(1u);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          goto LABEL_164;
        }
        uint64_t v26 = swift_bridgeObjectRelease();
LABEL_53:
        if (v27 >> 62)
        {
          uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
          uint64_t v44 = v26;
          if (!v26) {
            goto LABEL_15;
          }
        }
        else
        {
          uint64_t v44 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v44) {
            goto LABEL_15;
          }
        }
        if (v44 >= 1)
        {
          if ((v27 & 0xC000000000000001) != 0)
          {
            unint64_t v6 = 0;
            do
            {
              uint64_t v45 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              ++v6;
              uint64_t v12 = (uint64_t)&v215;
              sub_10031DE54(&v214, v45);
            }
            while (v44 != v6);
          }
          else
          {
            unint64_t v6 = 0;
            do
            {
              uint64_t v46 = *(void **)(v27 + 8 * v6++ + 32);
              uint64_t v12 = (uint64_t)&v215;
              sub_10031DE54(&v214, v46);
            }
            while (v44 != v6);
          }
LABEL_15:
          swift_bridgeObjectRelease();
          if ((__objc2_class *)v23 != v21) {
            continue;
          }

          swift_bridgeObjectRelease();
          uint64_t v18 = (uint64_t)v194;
          unint64_t v19 = *(void *)type;
LABEL_11:
          if (++v19 == v196)
          {
            swift_bridgeObjectRelease();
            if (v192 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v47 = *(void *)((v192 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            uint64_t v48 = (__objc2_class **)_swiftEmptyArrayStorage;
            if (!v47) {
              goto LABEL_76;
            }
            unint64_t v214 = (unint64_t)_swiftEmptyArrayStorage;
            specialized ContiguousArray.reserveCapacity(_:)();
            if ((v47 & 0x8000000000000000) == 0)
            {
              uint64_t v49 = 0;
              unint64_t v50 = v192;
              unint64_t v9 = off_1008AA4A0;
              do
              {
                if (v47 == v49) {
                  goto LABEL_172;
                }
                if ((v192 & 0xC000000000000001) != 0) {
                  id v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v51 = *(id *)(v50 + 8 * v49 + 32);
                }
                id v52 = v51;
                sub_100694DE8([v52 remObjectID], (unint64_t *)&unk_100910210);
                ++v49;

                specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized ContiguousArray._endMutation()();
                unint64_t v50 = v192;
              }
              while (v47 != v49);
              uint64_t v48 = (__objc2_class **)v214;
LABEL_76:
              uint64_t v202 = v48;
              uint64_t v53 = v215;
              if ((v215 & 0xC000000000000001) != 0)
              {
                swift_bridgeObjectRetain();
                uint64_t v54 = __CocoaSet.count.getter();
                if (v54)
                {
                  uint64_t v55 = v54;
                  uint64_t v213 = _swiftEmptyArrayStorage;
                  uint64_t v12 = (uint64_t)&v213;
                  specialized ContiguousArray.reserveCapacity(_:)();
                  uint64_t v210 = (void *)__CocoaSet.startIndex.getter();
                  uint64_t v211 = v56;
                  unsigned __int8 v212 = 1;
                  if ((v55 & 0x8000000000000000) == 0) {
                    goto LABEL_85;
                  }
                  __break(1u);
LABEL_80:
                  __break(1u);

                  swift_release();
LABEL_164:
                  swift_bridgeObjectRelease();
LABEL_2:
                  swift_bridgeObjectRelease();
                  return;
                }
              }
              else
              {
                uint64_t v55 = *(void *)(v215 + 16);
                swift_bridgeObjectRetain();
                if (v55)
                {
                  uint64_t v213 = _swiftEmptyArrayStorage;
                  specialized ContiguousArray.reserveCapacity(_:)();
                  uint64_t v210 = (void *)sub_1003CA790(v53);
                  uint64_t v211 = v57;
                  unsigned __int8 v212 = v58 & 1;
                  do
                  {
LABEL_85:
                    while (1)
                    {
                      uint64_t v65 = (uint64_t)v210;
                      uint64_t v64 = v211;
                      uint64_t v66 = v212;
                      sub_1003C9F34((uint64_t)v210, v211, v212, v53);
                      char v68 = v67;
                      sub_1000963CC(0, (unint64_t *)&unk_10090AF40);

                      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                      specialized ContiguousArray._endMutation()();
                      if ((v53 & 0xC000000000000001) != 0) {
                        break;
                      }
                      uint64_t v59 = sub_1003C9E34(v65, v64, v66, v53);
                      uint64_t v61 = v60;
                      char v63 = v62;
                      sub_1000E4EA4(v65, v64, v66);
                      uint64_t v210 = (void *)v59;
                      uint64_t v211 = v61;
                      unsigned __int8 v212 = v63 & 1;
                      if (!--v55) {
                        goto LABEL_90;
                      }
                    }
                    if ((v66 & 1) == 0) {
                      goto LABEL_188;
                    }
                    if (__CocoaSet.Index.handleBitPattern.getter()) {
                      swift_isUniquelyReferenced_nonNull_native();
                    }
                    sub_100094134(&qword_100916988);
                    uint64_t v69 = (void (*)(void, void))Set.Index._asCocoa.modify();
                    __CocoaSet.formIndex(after:isUnique:)();
                    v69(&v214, 0);
                    --v55;
                  }
                  while (v55);
LABEL_90:
                  sub_1000E4EA4((uint64_t)v210, v211, v212);
                  id v70 = v213;
                  swift_bridgeObjectRelease();
                  goto LABEL_92;
                }
              }
              swift_bridgeObjectRelease();
              id v70 = _swiftEmptyArrayStorage;
LABEL_92:
              uint64_t v22 = (uint64_t *)v189;
              unint64_t v6 = v191;
              uint64_t v26 = (uint64_t)sub_100711100((uint64_t)v70, v189);
              uint64_t v44 = 0;
              unint64_t v9 = v202;
              goto LABEL_94;
            }
            __break(1u);
LABEL_182:
            __break(1u);
LABEL_183:
            __break(1u);
LABEL_184:
            __break(1u);
LABEL_185:
            __break(1u);
LABEL_186:
            __break(1u);
LABEL_187:
            __break(1u);
LABEL_188:
            __break(1u);
LABEL_189:
            sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
            KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
            __break(1u);
            JUMPOUT(0x1006F9E58);
          }
          goto LABEL_12;
        }
        __break(1u);
LABEL_94:
        uint64_t v71 = v26;
        swift_bridgeObjectRelease();
        id v72 = sub_100716D88((uint64_t)v9, (uint64_t)v22);
        if (v44)
        {
LABEL_95:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_164;
        }
        uint64_t v184 = v72;
        swift_bridgeObjectRelease();
        unint64_t v179 = v22 + 6;
        swift_beginAccess();
        if (!v194[2]) {
          goto LABEL_187;
        }
        uint64_t v73 = 0;
        uint64_t v176 = v6 + 24;
        unint64_t v74 = &selRef_intersectsSet_;
        uint64_t v203 = v71;
        while (2)
        {
          uint64_t v177 = v73;
          char v75 = (id *)&v195[2 * v73];
          id v76 = (int64_t *)v75[1];
          id v77 = *v75;
          unsigned __int8 v190 = v76;
          swift_bridgeObjectRetain();
          uint64_t v78 = sub_100694DE8([v77 v74[446]], (unint64_t *)&unk_100910210);

          uint64_t v79 = *v179;
          if ((*v179 & 0xC000000000000001) != 0)
          {
            id v80 = v78;
            swift_bridgeObjectRetain();
            uint64_t v81 = __CocoaDictionary.lookup(_:)();
            if (v81)
            {
              uint64_t v213 = (void *)v81;
              sub_1000963CC(0, (unint64_t *)&qword_100909B00);
              swift_unknownObjectRetain();
              swift_dynamicCast();
              id v82 = v210;
              swift_unknownObjectRelease();

              swift_bridgeObjectRelease();
            }
            else
            {

              swift_bridgeObjectRelease();
              id v82 = 0;
            }
            unint64_t v6 = v191;
          }
          else if (*(void *)(v79 + 16))
          {
            id v83 = v78;
            swift_bridgeObjectRetain();
            unint64_t v84 = sub_100306FE8((uint64_t)v83);
            if (v85)
            {
              id v82 = *(id *)(*(void *)(v79 + 56) + 8 * v84);

              swift_bridgeObjectRelease();
            }
            else
            {

              swift_bridgeObjectRelease();
              id v82 = 0;
            }
          }
          else
          {
            id v82 = 0;
          }

          os_log_type_t v188 = v77;
          if (!v184[2])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_175:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            id v163 = v78;
            swift_retain_n();
            id v164 = v163;
            unint64_t v165 = Logger.logObject.getter();
            os_log_type_t v166 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v165, v166))
            {
              uint64_t v167 = swift_slowAlloc();
              uint64_t v210 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v167 = 136446722;
              uint64_t v213 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v210);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v167 + 12) = 2082;
              sub_10010B4E8(v176, (uint64_t)v216);
              sub_10073F754((uint64_t)v216, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
              uint64_t v168 = sub_100696CF4();
              unint64_t v170 = v169;
              sub_10073F754((uint64_t)v216, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
              uint64_t v213 = (void *)sub_1000C51B8(v168, v170, (uint64_t *)&v210);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v167 + 22) = 2080;
              id v171 = [v164 description];
              uint64_t v172 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v174 = v173;

              uint64_t v213 = (void *)sub_1000C51B8(v172, v174, (uint64_t *)&v210);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v165, v166, "[%{public}s] Tried to establish relationship with non-existing object -- skipping {author: %{public}s, cdObjectID: %s}", (uint8_t *)v167, 0x20u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_release_n();
            }
            [self noSuchObjectErrorWithObjectID:v164];
            swift_willThrow();

            return;
          }
          id v86 = v78;
          unint64_t v87 = sub_10030703C(v86);
          if ((v88 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            goto LABEL_175;
          }
          uint64_t v186 = *(id *)(v184[7] + 8 * v87);

          id v89 = v190;
          swift_bridgeObjectRetain_n();
          id v90 = v86;
          swift_retain_n();
          id v91 = v90;
          char v92 = Logger.logObject.getter();
          os_log_type_t v93 = static os_log_type_t.default.getter();
          unint64_t v183 = v91;
          if (os_log_type_enabled(v92, v93))
          {
            os_log_type_t typea = v92;
            uint64_t v94 = swift_slowAlloc();
            os_log_t logb = (os_log_t)swift_slowAlloc();
            uint64_t v210 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v94 = 136446978;
            uint64_t v213 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v210);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v94 + 12) = 2082;
            sub_10010B4E8(v176, (uint64_t)v218);
            sub_10073F754((uint64_t)v218, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v95 = sub_100696CF4();
            unint64_t v97 = v96;
            sub_10073F754((uint64_t)v218, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            uint64_t v213 = (void *)sub_1000C51B8(v95, v97, (uint64_t *)&v210);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v94 + 22) = 2114;
            uint64_t v213 = v91;
            id v98 = v91;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            logb->Class isa = (Class)v91;

            *(_WORD *)(v94 + 32) = 2082;
            int64_t v99 = v190[2];
            if (v99)
            {
              uint64_t v213 = _swiftEmptyArrayStorage;
              sub_1001DE058(0, v99, 0);
              id v89 = v190;
              uint64_t v100 = 0;
              unint64_t v101 = v213;
              do
              {
                unint64_t v102 = 0xE900000000000044;
                unint64_t v103 = 0x49746E756F636361;
                switch(*((unsigned char *)v89 + v100 + 32))
                {
                  case 1:
                    unint64_t v102 = 0xEF4449746E756F63;
                    unint64_t v103 = 0x6341746E65726170;
                    break;
                  case 2:
                    unint64_t v102 = 0xEC00000044497473;
                    unint64_t v103 = 0x694C746E65726170;
                    break;
                  case 3:
                    unint64_t v103 = 0xD000000000000014;
                    unint64_t v102 = 0x80000001007C6240;
                    break;
                  default:
                    break;
                }
                uint64_t v213 = v101;
                unint64_t v105 = v101[2];
                unint64_t v104 = v101[3];
                if (v105 >= v104 >> 1)
                {
                  sub_1001DE058(v104 > 1, v105 + 1, 1);
                  id v89 = v190;
                  unint64_t v101 = v213;
                }
                ++v100;
                v101[2] = v105 + 1;
                unint64_t v106 = &v101[2 * v105];
                v106[4] = v103;
                v106[5] = v102;
              }
              while (v99 != v100);
              swift_bridgeObjectRelease();
              uint64_t v71 = v203;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            uint64_t v107 = Array.description.getter();
            unint64_t v109 = v108;
            swift_bridgeObjectRelease();
            uint64_t v213 = (void *)sub_1000C51B8(v107, v109, (uint64_t *)&v210);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, typea, v93, "[%{public}s] UPDATE RELATIONSHIPS {author: %{public}s, objectID: %{public}@, changedRelationshipKeys: %{public}s}", (uint8_t *)v94, 0x2Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            unint64_t v6 = v191;
            id v77 = v188;
          }
          else
          {

            swift_release_n();
            swift_bridgeObjectRelease_n();
          }
          uint64_t v178 = v89[2];
          if (!v178)
          {
LABEL_155:
            swift_bridgeObjectRelease();
            unint64_t v146 = v177 + 1;
            if (*(unsigned char *)(v6 + 104) == 1)
            {
              id v147 = v186;
              [v147 updateChangeCount];
            }
            else
            {
            }
            uint64_t v73 = v177 + 1;
            if (v146 == v196) {
              goto LABEL_95;
            }
            unint64_t v74 = &selRef_intersectsSet_;
            if (v146 >= v194[2]) {
              goto LABEL_187;
            }
            continue;
          }
          break;
        }
        unint64_t v110 = 0;
        id v111 = v89 + 4;
        uint64_t v175 = v89 + 4;
        while (2)
        {
          if (v110 >= v89[2]) {
            goto LABEL_186;
          }
          unint64_t v180 = v110;
          char v181 = v111[v110];
          unint64_t v112 = (unint64_t)sub_1001B9250(v77, v181);
          unint64_t v113 = v112;
          if (!(v112 >> 62))
          {
            uint64_t v114 = *(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v114) {
              goto LABEL_127;
            }
LABEL_153:
            Swift::Int v116 = (Swift::Int)_swiftEmptyDictionarySingleton;
LABEL_154:
            swift_bridgeObjectRelease();
            uint64_t v145 = sub_100420CF8(v116);
            swift_bridgeObjectRelease();
            id v77 = v188;
            sub_1001B9520(v188, v186, v181, v145);
            swift_bridgeObjectRelease();
            unint64_t v110 = v180 + 1;
            id v89 = v190;
            unint64_t v6 = v191;
            id v111 = v175;
            if (v180 + 1 == v178) {
              goto LABEL_155;
            }
            continue;
          }
          break;
        }
        swift_bridgeObjectRetain();
        uint64_t v114 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v114) {
          goto LABEL_153;
        }
LABEL_127:
        os_log_t loga = (os_log_t)(v113 & 0xC000000000000001);
        uint64_t v115 = 4;
        Swift::Int v116 = (Swift::Int)_swiftEmptyDictionarySingleton;
        *(void *)os_log_type_t typeb = v113;
        uint64_t v193 = v114;
        while (1)
        {
          if (loga) {
            id v118 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v118 = *(id *)(v113 + 8 * v115);
          }
          uint64_t v119 = v118;
          uint64_t v120 = v115 - 3;
          if (__OFADD__(v115 - 4, 1)) {
            goto LABEL_182;
          }
          sub_1000963CC(0, (unint64_t *)&unk_10090AF40);
          id v121 = v119;
          id v122 = v121;
          if (!*(void *)(v71 + 16))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_167;
          }
          id v123 = v121;
          unint64_t v124 = sub_10030703C(v123);
          if ((v125 & 1) == 0) {
            break;
          }
          id v126 = *(id *)(*(void *)(v71 + 56) + 8 * v124);

          if ((v116 & 0xC000000000000001) != 0)
          {
            if (v116 < 0) {
              uint64_t v127 = v116;
            }
            else {
              uint64_t v127 = v116 & 0xFFFFFFFFFFFFFF8;
            }
            id v128 = v126;
            uint64_t v129 = __CocoaDictionary.count.getter();
            if (__OFADD__(v129, 1)) {
              goto LABEL_184;
            }
            Swift::Int v116 = sub_1001A7A10(v127, v129 + 1);
          }
          else
          {
            id v130 = v126;
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v210 = (void *)v116;
          unint64_t v133 = sub_100306FE8((uint64_t)v123);
          uint64_t v134 = *(void *)(v116 + 16);
          BOOL v135 = (v132 & 1) == 0;
          uint64_t v136 = v134 + v135;
          if (__OFADD__(v134, v135)) {
            goto LABEL_183;
          }
          char v137 = v132;
          if (*(void *)(v116 + 24) >= v136)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_100319990();
            }
          }
          else
          {
            sub_100310B54(v136, isUniquelyReferenced_nonNull_native);
            unint64_t v138 = sub_100306FE8((uint64_t)v123);
            if ((v137 & 1) != (v139 & 1)) {
              goto LABEL_189;
            }
            unint64_t v133 = v138;
          }
          uint64_t v71 = v203;
          Swift::Int v116 = (Swift::Int)v210;
          if (v137)
          {
            uint64_t v117 = v210[7];

            *(void *)(v117 + 8 * v133) = v126;
          }
          else
          {
            v210[(v133 >> 6) + 8] |= 1 << v133;
            uint64_t v140 = 8 * v133;
            *(void *)(*(void *)(v116 + 48) + v140) = v123;
            *(void *)(*(void *)(v116 + 56) + v140) = v126;
            uint64_t v141 = *(void *)(v116 + 16);
            BOOL v142 = __OFADD__(v141, 1);
            uint64_t v143 = v141 + 1;
            if (v142) {
              goto LABEL_185;
            }
            *(void *)(v116 + 16) = v143;
            id v144 = v123;
          }
          unint64_t v113 = *(void *)typeb;

          swift_bridgeObjectRelease();
          ++v115;
          if (v120 == v193) {
            goto LABEL_154;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

LABEL_167:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_retain_n();
        id v148 = v122;
        unint64_t v149 = Logger.logObject.getter();
        os_log_type_t v150 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v149, v150))
        {
          uint64_t v151 = swift_slowAlloc();
          uint64_t v210 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v151 = 136446978;
          uint64_t v213 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v210);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v151 + 12) = 2082;
          sub_10010B4E8(v176, (uint64_t)v217);
          sub_10073F754((uint64_t)v217, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
          uint64_t v152 = sub_100696CF4();
          unint64_t v154 = v153;
          sub_10073F754((uint64_t)v217, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
          uint64_t v213 = (void *)sub_1000C51B8(v152, v154, (uint64_t *)&v210);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v151 + 22) = 2080;
          id v155 = [v148 description];
          uint64_t v156 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v158 = v157;

          uint64_t v213 = (void *)sub_1000C51B8(v156, v158, (uint64_t *)&v210);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v151 + 32) = 2080;
          id v159 = [v148 description];
          uint64_t v160 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v162 = v161;

          uint64_t v213 = (void *)sub_1000C51B8(v160, v162, (uint64_t *)&v210);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v149, v150, "[%{public}s] Tried to establish realtionship with non-existent target object -- bail {author: %{public}s, cdObjectID: %s, relationshipObjectID: %s}", (uint8_t *)v151, 0x2Au);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        [self noSuchObjectErrorWithObjectID:v148];
        swift_willThrow();

        return;
      default:
        sub_100094134((uint64_t *)&unk_10090AF20);
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_10077A530;
        *(void *)(v25 + 32) = [v22 accountID];
        unint64_t v214 = v25;
        uint64_t v12 = (uint64_t)&v214;
        uint64_t v26 = specialized Array._endMutation()();
        unint64_t v27 = v214;
        goto LABEL_53;
    }
  }
}

void sub_1006F9E78(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = v3;
  uint64_t v206 = a2;
  uint64_t v8 = *(void *)(a3 + 16);
  unint64_t v9 = *(void *)(a3 + 24);
  uint64_t v195 = &v206;
  uint64_t v196 = v5;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1003B5848((void (*)(__n128 *__return_ptr, id *))sub_100740BE0, (uint64_t)&v194, a1);
  if (v4) {
    goto LABEL_2;
  }
  uint64_t v11 = v10;
  unint64_t log = a1;
  uint64_t v180 = a3;
  if (qword_1009073A0 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10008E2DC(v12, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_log_type_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  uint64_t v182 = v5;
  uint64_t v186 = v11;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    v197[0] = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136446978;
    id v198 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)v197);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2048;
    id v198 = (void *)v11[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2082;
    type metadata accessor for REMCDSavedReminder();
    id v16 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v19 = v18;

    uint64_t v20 = v17;
    uint64_t v11 = v186;
    id v198 = (void *)sub_1000C51B8(v20, v19, (uint64_t *)v197);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 32) = 2082;
    unint64_t v5 = (char *)(v15 + 34);
    swift_bridgeObjectRetain();
    id v198 = (void *)sub_1000C51B8(v8, v9, (uint64_t *)v197);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  uint64_t v188 = v11[2];
  if (!v188) {
    goto LABEL_2;
  }
  uint64_t v202 = (uint64_t)&_swiftEmptySetSingleton;
  unint64_t v187 = v11 + 4;
  swift_bridgeObjectRetain();
  unint64_t v21 = 0;
LABEL_12:
  if (v21 >= v11[2])
  {
    __break(1u);
LABEL_144:
    __break(1u);
    __break(1u);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_2;
  }
  uint64_t v22 = (id *)&v187[2 * v21];
  unint64_t v23 = (char *)v22[1];
  unint64_t v24 = (char *)*((void *)v23 + 2);
  if (!v24) {
    goto LABEL_11;
  }
  unint64_t v189 = v21;
  uint64_t v11 = v23 + 32;
  id v25 = *v22;
  swift_bridgeObjectRetain();
  unint64_t v5 = 0;
  while (1)
  {
    if ((unint64_t)v5 >= *((void *)v23 + 2))
    {
      __break(1u);

      swift_release();
      goto LABEL_67;
    }
    if (v5[(void)v11])
    {
      id v26 = [v25 listID];
      unint64_t v27 = v26;
      unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
      v197[0] = _swiftEmptyArrayStorage;
      if (v26)
      {
        id v29 = v26;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)v197[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v197[0] & 0xFFFFFFFFFFFFFF8)
                                                                                                + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        os_log_type_t v13 = v197;
        specialized Array._endMutation()();
        unint64_t v28 = (unint64_t)v197[0];
      }

      if (!(v28 >> 62))
      {
LABEL_26:
        uint64_t v31 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v31) {
          goto LABEL_15;
        }
        goto LABEL_27;
      }
    }
    else
    {
      sub_100094134((uint64_t *)&unk_10090AF20);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_10077A530;
      *(void *)(v32 + 32) = [v25 accountID];
      v197[0] = (id)v32;
      os_log_type_t v13 = v197;
      uint64_t v30 = specialized Array._endMutation()();
      unint64_t v28 = (unint64_t)v197[0];
      if (!((unint64_t)v197[0] >> 62)) {
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v30 = swift_bridgeObjectRelease();
    if (!v31) {
      goto LABEL_15;
    }
LABEL_27:
    if (v31 < 1) {
      break;
    }
    if ((v28 & 0xC000000000000001) != 0)
    {
      uint64_t v33 = 0;
      do
      {
        int64_t v34 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        ++v33;
        os_log_type_t v13 = &v202;
        sub_10031DE54(v197, v34);
      }
      while (v31 != v33);
    }
    else
    {
      uint64_t v35 = 0;
      do
      {
        uint64_t v36 = *(void **)(v28 + 8 * v35++ + 32);
        os_log_type_t v13 = &v202;
        sub_10031DE54(v197, v36);
      }
      while (v31 != v35);
    }
LABEL_15:
    swift_bridgeObjectRelease();
    if (++v5 == v24)
    {

      swift_bridgeObjectRelease();
      uint64_t v11 = v186;
      unint64_t v21 = v189;
LABEL_11:
      if (++v21 == v188)
      {
        swift_bridgeObjectRelease();
        if (log >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v37 = *(void *)((log & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v38 = _swiftEmptyArrayStorage;
        if (v37)
        {
          v197[0] = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)();
          if (v37 < 0)
          {
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
            goto LABEL_158;
          }
          uint64_t v39 = 0;
          unint64_t v40 = log;
          do
          {
            if (v37 == v39) {
              goto LABEL_144;
            }
            if ((log & 0xC000000000000001) != 0) {
              id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v41 = *(id *)(v40 + 8 * v39 + 32);
            }
            id v42 = v41;
            sub_100695DC4([v42 remObjectID], (void (*)(void))type metadata accessor for REMCDSavedReminder, 0xD000000000000012, (void *)0x80000001007CC3C0);
            ++v39;

            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            unint64_t v5 = (char *)*((void *)v197[0] + 2);
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            unint64_t v40 = log;
          }
          while (v37 != v39);
          uint64_t v38 = v197[0];
          uint64_t v11 = v186;
        }
        unsigned __int8 v190 = v38;
        uint64_t v43 = v202;
        unint64_t v44 = v202 & 0xC000000000000001;
        if ((v202 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v45 = __CocoaSet.count.getter();
          if (v45)
          {
            uint64_t v46 = v45;
            uint64_t v201 = _swiftEmptyArrayStorage;
            specialized ContiguousArray.reserveCapacity(_:)();
            id v198 = (void *)__CocoaSet.startIndex.getter();
            uint64_t v199 = v47;
            unsigned __int8 v200 = 1;
            if ((v46 & 0x8000000000000000) == 0) {
              goto LABEL_56;
            }
            __break(1u);
            goto LABEL_2;
          }
        }
        else
        {
          uint64_t v46 = *(void *)(v202 + 16);
          swift_bridgeObjectRetain();
          if (v46)
          {
            uint64_t v201 = _swiftEmptyArrayStorage;
            specialized ContiguousArray.reserveCapacity(_:)();
            id v198 = (void *)sub_1003CA790(v43);
            uint64_t v199 = v48;
            unsigned __int8 v200 = v49 & 1;
            do
            {
LABEL_56:
              while (1)
              {
                uint64_t v56 = (uint64_t)v198;
                uint64_t v55 = v199;
                uint64_t v57 = v200;
                sub_1003C9F34((uint64_t)v198, v199, v200, v43);
                uint64_t v59 = v58;
                sub_1000963CC(0, (unint64_t *)&unk_10090AF40);

                specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized ContiguousArray._endMutation()();
                if (v44) {
                  break;
                }
                uint64_t v50 = sub_1003C9E34(v56, v55, v57, v43);
                uint64_t v52 = v51;
                char v54 = v53;
                sub_1000E4EA4(v56, v55, v57);
                id v198 = (void *)v50;
                uint64_t v199 = v52;
                unsigned __int8 v200 = v54 & 1;
                uint64_t v11 = v186;
                if (!--v46) {
                  goto LABEL_61;
                }
              }
              if ((v57 & 1) == 0) {
                goto LABEL_159;
              }
              if (__CocoaSet.Index.handleBitPattern.getter()) {
                swift_isUniquelyReferenced_nonNull_native();
              }
              uint64_t v11 = v186;
              sub_100094134(&qword_100916988);
              uint64_t v60 = (void (*)(void, void))Set.Index._asCocoa.modify();
              __CocoaSet.formIndex(after:isUnique:)();
              v60(v197, 0);
              --v46;
            }
            while (v46);
LABEL_61:
            sub_1000E4EA4((uint64_t)v198, v199, v200);
            unint64_t v28 = (unint64_t)v201;
            swift_bridgeObjectRelease();
            goto LABEL_63;
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_63:
        uint64_t v31 = v180;
        unint64_t v24 = v182;
        uint64_t v30 = (uint64_t)sub_100711100(v28, v180);
        unint64_t v5 = 0;
        id v25 = v190;
        goto LABEL_65;
      }
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_65:
  uint64_t v61 = v30;
  swift_bridgeObjectRelease();
  char v62 = sub_1007171F0((uint64_t)v25, v31);
  if (v5)
  {
LABEL_66:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_67;
  }
  uint64_t v175 = v62;
  swift_bridgeObjectRelease();
  id v171 = (uint64_t *)(v31 + 48);
  swift_beginAccess();
  if (!v11[2])
  {
LABEL_136:
    __break(1u);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
LABEL_67:
    swift_bridgeObjectRelease();
LABEL_2:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v63 = 0;
  uint64_t v168 = (uint64_t)(v24 + 24);
  unint64_t v28 = (unint64_t)&selRef_intersectsSet_;
  uint64_t v193 = v61;
  while (1)
  {
    uint64_t v169 = v63;
    uint64_t v64 = (id *)&v187[2 * v63];
    uint64_t v65 = (int64_t *)v64[1];
    id v66 = *v64;
    unint64_t v179 = v65;
    swift_bridgeObjectRetain();
    char v67 = sub_100695DC4([v66 *(SEL *)(v28 + 3568)], (void (*)(void))type metadata accessor for REMCDSavedReminder, 0xD000000000000012, (void *)0x80000001007CC3C0);

    uint64_t v68 = *v171;
    uint64_t v178 = v66;
    if ((*v171 & 0xC000000000000001) != 0)
    {
      id v69 = v67;
      swift_bridgeObjectRetain();
      uint64_t v70 = __CocoaDictionary.lookup(_:)();
      if (v70)
      {
        uint64_t v201 = (void *)v70;
        sub_1000963CC(0, (unint64_t *)&qword_100909B00);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v71 = v198;
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
        id v71 = 0;
      }
      uint64_t v61 = v193;
    }
    else
    {
      if (*(void *)(v68 + 16))
      {
        id v72 = v67;
        swift_bridgeObjectRetain();
        unint64_t v73 = sub_100306FE8((uint64_t)v72);
        if (v74)
        {
          id v71 = *(id *)(*(void *)(v68 + 56) + 8 * v73);

          swift_bridgeObjectRelease();
          goto LABEL_80;
        }

        swift_bridgeObjectRelease();
      }
      id v71 = 0;
    }
LABEL_80:

    if (!v175[2])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_147:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v155 = v67;
      swift_retain_n();
      id v156 = v155;
      unint64_t v157 = Logger.logObject.getter();
      os_log_type_t v158 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v157, v158))
      {
        uint64_t v159 = swift_slowAlloc();
        id v198 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v159 = 136446722;
        uint64_t v201 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v198);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v159 + 12) = 2082;
        sub_10010B4E8(v168, (uint64_t)v203);
        sub_10073F754((uint64_t)v203, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
        uint64_t v160 = sub_100696CF4();
        unint64_t v162 = v161;
        sub_10073F754((uint64_t)v203, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
        uint64_t v201 = (void *)sub_1000C51B8(v160, v162, (uint64_t *)&v198);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v159 + 22) = 2080;
        id v163 = [v156 description];
        uint64_t v164 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v166 = v165;

        uint64_t v201 = (void *)sub_1000C51B8(v164, v166, (uint64_t *)&v198);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v157, v158, "[%{public}s] Tried to establish relationship with non-existing object -- skipping {author: %{public}s, cdObjectID: %s}", (uint8_t *)v159, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      [self noSuchObjectErrorWithObjectID:v156];
      swift_willThrow();

      return;
    }
    id v75 = v67;
    unint64_t v76 = sub_10030703C(v75);
    if ((v77 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_147;
    }
    id v176 = *(id *)(v175[7] + 8 * v76);

    uint64_t v78 = v179;
    swift_bridgeObjectRetain_n();
    id v79 = v75;
    swift_retain_n();
    id v80 = v79;
    uint64_t v81 = Logger.logObject.getter();
    os_log_type_t v82 = static os_log_type_t.default.getter();
    uint64_t v177 = v80;
    if (os_log_type_enabled(v81, v82))
    {
      os_log_type_t v173 = v82;
      os_log_t loga = v81;
      uint64_t v83 = swift_slowAlloc();
      unint64_t v191 = (void *)swift_slowAlloc();
      id v198 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v83 = 136446978;
      uint64_t v201 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v198);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v83 + 12) = 2082;
      sub_10010B4E8(v168, (uint64_t)v205);
      sub_10073F754((uint64_t)v205, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v84 = sub_100696CF4();
      unint64_t v86 = v85;
      sub_10073F754((uint64_t)v205, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      uint64_t v201 = (void *)sub_1000C51B8(v84, v86, (uint64_t *)&v198);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v83 + 22) = 2114;
      uint64_t v201 = v80;
      id v87 = v80;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v191 = v80;

      *(_WORD *)(v83 + 32) = 2082;
      int64_t v88 = v179[2];
      if (v88)
      {
        uint64_t v201 = _swiftEmptyArrayStorage;
        sub_1001DE058(0, v88, 0);
        id v89 = v179;
        uint64_t v90 = 0;
        id v91 = v201;
        uint64_t v92 = v201[2];
        uint64_t v93 = 2 * v92;
        do
        {
          unint64_t v94 = v92 + v90;
          if (*((unsigned char *)v89 + v90 + 32)) {
            uint64_t v95 = 0x44497473696CLL;
          }
          else {
            uint64_t v95 = 0x49746E756F636361;
          }
          if (*((unsigned char *)v89 + v90 + 32)) {
            unint64_t v96 = 0xE600000000000000;
          }
          else {
            unint64_t v96 = 0xE900000000000044;
          }
          uint64_t v201 = v91;
          unint64_t v97 = v91[3];
          unint64_t v98 = v94 + 1;
          if (v94 >= v97 >> 1)
          {
            sub_1001DE058(v97 > 1, v94 + 1, 1);
            id v89 = v179;
            id v91 = v201;
          }
          ++v90;
          v91[2] = v98;
          int64_t v99 = &v91[v93];
          v99[4] = v95;
          v99[5] = v96;
          v93 += 2;
        }
        while (v88 != v90);
        uint64_t v78 = v89;
        swift_bridgeObjectRelease();
        unint64_t v24 = v182;
        uint64_t v11 = v186;
        uint64_t v61 = v193;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v100 = Array.description.getter();
      unint64_t v102 = v101;
      swift_bridgeObjectRelease();
      uint64_t v201 = (void *)sub_1000C51B8(v100, v102, (uint64_t *)&v198);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, loga, v173, "[%{public}s] UPDATE RELATIONSHIPS {author: %{public}s, objectID: %{public}@, changedRelationshipKeys: %{public}s}", (uint8_t *)v83, 0x2Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      id v80 = v177;
      id v66 = v178;
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v170 = v78[2];
    if (v170) {
      break;
    }
LABEL_131:
    swift_bridgeObjectRelease();
    if (v24[104] == 1)
    {
      id v139 = v176;
      [v139 updateChangeCount];
    }
    else
    {
    }
    uint64_t v63 = v169 + 1;
    if (v169 + 1 == v188) {
      goto LABEL_66;
    }
    unint64_t v28 = 0x1008F8000;
    if ((unint64_t)(v169 + 1) >= v11[2]) {
      goto LABEL_136;
    }
  }
  unint64_t v103 = 0;
  unint64_t v104 = v78 + 4;
  uint64_t v167 = v78 + 4;
  while (v103 < v78[2])
  {
    char v174 = *((unsigned char *)v104 + v103);
    unint64_t v105 = (unint64_t)sub_1004FE600(v66, v174);
    unint64_t v106 = v105;
    if (v105 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v107 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      unint64_t v172 = v103;
      if (v107)
      {
LABEL_103:
        unint64_t v192 = v106 & 0xC000000000000001;
        uint64_t v108 = 4;
        Swift::Int v109 = (Swift::Int)_swiftEmptyDictionarySingleton;
        os_log_t logb = (os_log_t)v106;
        uint64_t v181 = v107;
        while (1)
        {
          if (v192) {
            id v111 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v111 = (objc_class *)*(id *)(v106 + 8 * v108);
          }
          unint64_t v112 = v111;
          uint64_t v113 = v108 - 3;
          if (__OFADD__(v108 - 4, 1)) {
            goto LABEL_154;
          }
          sub_1000963CC(0, (unint64_t *)&unk_10090AF40);
          uint64_t v114 = v112;
          uint64_t v115 = v114;
          if (!*(void *)(v61 + 16)) {
            break;
          }
          Swift::Int v116 = v114;
          unint64_t v117 = sub_10030703C(v116);
          if ((v118 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            goto LABEL_139;
          }
          id v119 = *(id *)(*(void *)(v61 + 56) + 8 * v117);

          if ((v109 & 0xC000000000000001) != 0)
          {
            if (v109 < 0) {
              uint64_t v120 = v109;
            }
            else {
              uint64_t v120 = v109 & 0xFFFFFFFFFFFFFF8;
            }
            id v121 = v119;
            uint64_t v122 = __CocoaDictionary.count.getter();
            if (__OFADD__(v122, 1)) {
              goto LABEL_156;
            }
            Swift::Int v109 = sub_1001A7A10(v120, v122 + 1);
          }
          else
          {
            id v123 = v119;
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          id v198 = (void *)v109;
          unint64_t v126 = sub_100306FE8((uint64_t)v116);
          uint64_t v127 = *(void *)(v109 + 16);
          BOOL v128 = (v125 & 1) == 0;
          uint64_t v129 = v127 + v128;
          if (__OFADD__(v127, v128)) {
            goto LABEL_155;
          }
          char v130 = v125;
          if (*(void *)(v109 + 24) >= v129)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_100319990();
            }
          }
          else
          {
            sub_100310B54(v129, isUniquelyReferenced_nonNull_native);
            unint64_t v131 = sub_100306FE8((uint64_t)v116);
            if ((v130 & 1) != (v132 & 1)) {
              goto LABEL_160;
            }
            unint64_t v126 = v131;
          }
          uint64_t v61 = v193;
          Swift::Int v109 = (Swift::Int)v198;
          if (v130)
          {
            uint64_t v110 = v198[7];

            *(void *)(v110 + 8 * v126) = v119;
          }
          else
          {
            v198[(v126 >> 6) + 8] |= 1 << v126;
            uint64_t v133 = 8 * v126;
            *(void *)(*(void *)(v109 + 48) + v133) = v116;
            *(void *)(*(void *)(v109 + 56) + v133) = v119;
            uint64_t v134 = *(void *)(v109 + 16);
            BOOL v135 = __OFADD__(v134, 1);
            uint64_t v136 = v134 + 1;
            if (v135) {
              goto LABEL_157;
            }
            *(void *)(v109 + 16) = v136;
            char v137 = v116;
          }
          unint64_t v106 = (unint64_t)logb;
          uint64_t v11 = v186;

          swift_bridgeObjectRelease();
          ++v108;
          unint64_t v24 = v182;
          if (v113 == v181) {
            goto LABEL_130;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_139:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_retain_n();
        uint64_t v140 = v115;
        uint64_t v141 = Logger.logObject.getter();
        os_log_type_t v142 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v141, v142))
        {
          uint64_t v143 = swift_slowAlloc();
          id v198 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v143 = 136446978;
          uint64_t v201 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v198);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v143 + 12) = 2082;
          sub_10010B4E8(v168, (uint64_t)v204);
          sub_10073F754((uint64_t)v204, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
          uint64_t v144 = sub_100696CF4();
          unint64_t v146 = v145;
          sub_10073F754((uint64_t)v204, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
          uint64_t v201 = (void *)sub_1000C51B8(v144, v146, (uint64_t *)&v198);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v143 + 22) = 2080;
          id v147 = [(objc_class *)v140 description];
          uint64_t v148 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v150 = v149;

          uint64_t v201 = (void *)sub_1000C51B8(v148, v150, (uint64_t *)&v198);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v143 + 32) = 2080;
          id v151 = [(objc_class *)v140 description];
          uint64_t v152 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v154 = v153;

          uint64_t v201 = (void *)sub_1000C51B8(v152, v154, (uint64_t *)&v198);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v141, v142, "[%{public}s] Tried to establish realtionship with non-existent target object -- bail {author: %{public}s, cdObjectID: %s, relationshipObjectID: %s}", (uint8_t *)v143, 0x2Au);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        [self noSuchObjectErrorWithObjectID:v140];
        swift_willThrow();

        return;
      }
    }
    else
    {
      uint64_t v107 = *(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t v172 = v103;
      if (v107) {
        goto LABEL_103;
      }
    }
    Swift::Int v109 = (Swift::Int)_swiftEmptyDictionarySingleton;
LABEL_130:
    swift_bridgeObjectRelease();
    uint64_t v138 = sub_100420CF8(v109);
    swift_bridgeObjectRelease();
    id v66 = v178;
    sub_1004FE71C(v178, v176, v174, v138);
    unint64_t v103 = v172 + 1;
    swift_bridgeObjectRelease();
    id v80 = v177;
    uint64_t v78 = v179;
    unint64_t v104 = v167;
    if (v172 + 1 == v170) {
      goto LABEL_131;
    }
  }
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void sub_1006FB970(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v220 = a2;
  unint64_t v9 = *(void *)(a3 + 16);
  unint64_t v8 = *(void *)(a3 + 24);
  unint64_t v209 = &v220;
  uint64_t v210 = v5;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1003B5874((void (*)(__n128 *__return_ptr, id *))sub_100740E78, (uint64_t)&v208, a1);
  if (v4) {
    goto LABEL_2;
  }
  uint64_t v11 = v10;
  unint64_t log = a1;
  if (qword_1009073A0 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10008E2DC(v12, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  uint64_t v193 = a3;
  uint64_t v195 = v5;
  uint64_t v199 = v11;
  if (os_log_type_enabled((os_log_t)v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v211 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136446978;
    unsigned __int8 v212 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, &v211);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2048;
    unsigned __int8 v212 = (void *)v11[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2082;
    sub_1000963CC(0, (unint64_t *)&qword_10090B040);
    id v16 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    os_log_type_t typec = v14;
    unint64_t v19 = v18;

    uint64_t v20 = v17;
    uint64_t v11 = v199;
    unsigned __int8 v212 = (void *)sub_1000C51B8(v20, v19, &v211);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 32) = 2082;
    swift_bridgeObjectRetain();
    unsigned __int8 v212 = (void *)sub_1000C51B8(v9, v8, &v211);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v13, typec, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  uint64_t v201 = v11[2];
  if (!v201) {
    goto LABEL_2;
  }
  uint64_t v216 = (uint64_t)&_swiftEmptySetSingleton;
  unsigned __int8 v200 = v11 + 4;
  swift_bridgeObjectRetain();
  unint64_t v21 = 0;
  uint64_t v22 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v21 >= v11[2])
    {
      __break(1u);
LABEL_173:
      __break(1u);
      __break(1u);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_2;
    }
    unint64_t v23 = (id *)&v200[2 * v21];
    unint64_t v24 = (char *)v23[1];
    id v25 = (char *)*((void *)v24 + 2);
    if (v25) {
      break;
    }
LABEL_11:
    if (++v21 == v201)
    {
      swift_bridgeObjectRelease();
      if (log >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v50 = *(void *)((log & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v51 = _swiftEmptyArrayStorage;
      if (!v50) {
        goto LABEL_73;
      }
      uint64_t v211 = (uint64_t)_swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      if ((v50 & 0x8000000000000000) == 0)
      {
        unint64_t v9 = 0;
        unint64_t v52 = log;
        do
        {
          if (v50 == v9) {
            goto LABEL_173;
          }
          if ((log & 0xC000000000000001) != 0) {
            id v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v53 = *(id *)(v52 + 8 * v9 + 32);
          }
          id v54 = v53;
          sub_100693E40([v54 remObjectID]);
          ++v9;

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          unint64_t v52 = log;
        }
        while (v50 != v9);
        uint64_t v51 = (void *)v211;
LABEL_73:
        *(void *)os_log_type_t typea = v51;
        uint64_t v55 = v216;
        if ((v216 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v56 = __CocoaSet.count.getter();
          if (v56)
          {
            uint64_t v57 = v56;
            uint64_t v215 = _swiftEmptyArrayStorage;
            specialized ContiguousArray.reserveCapacity(_:)();
            unsigned __int8 v212 = (void *)__CocoaSet.startIndex.getter();
            uint64_t v213 = v58;
            unsigned __int8 v214 = 1;
            if ((v57 & 0x8000000000000000) == 0) {
              goto LABEL_83;
            }
            __break(1u);
            goto LABEL_2;
          }
LABEL_89:
          swift_bridgeObjectRelease();
          id v72 = _swiftEmptyArrayStorage;
        }
        else
        {
          uint64_t v57 = *(void *)(v216 + 16);
          swift_bridgeObjectRetain();
          if (!v57) {
            goto LABEL_89;
          }
          uint64_t v215 = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)();
          unsigned __int8 v212 = (void *)sub_1003CA790(v55);
          uint64_t v213 = v59;
          unsigned __int8 v214 = v60 & 1;
          do
          {
LABEL_83:
            while (1)
            {
              uint64_t v67 = (uint64_t)v212;
              uint64_t v66 = v213;
              uint64_t v68 = v214;
              sub_1003C9F34((uint64_t)v212, v213, v214, v55);
              uint64_t v70 = v69;
              sub_1000963CC(0, (unint64_t *)&unk_10090AF40);

              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
              if ((v55 & 0xC000000000000001) != 0) {
                break;
              }
              uint64_t v61 = sub_1003C9E34(v67, v66, v68, v55);
              uint64_t v63 = v62;
              char v65 = v64;
              sub_1000E4EA4(v67, v66, v68);
              unsigned __int8 v212 = (void *)v61;
              uint64_t v213 = v63;
              unsigned __int8 v214 = v65 & 1;
              uint64_t v11 = v199;
              if (!--v57) {
                goto LABEL_88;
              }
            }
            if ((v68 & 1) == 0) {
              goto LABEL_189;
            }
            uint64_t v11 = v199;
            if (__CocoaSet.Index.handleBitPattern.getter()) {
              swift_isUniquelyReferenced_nonNull_native();
            }
            sub_100094134(&qword_100916988);
            id v71 = (void (*)(void, void))Set.Index._asCocoa.modify();
            __CocoaSet.formIndex(after:isUnique:)();
            v71(&v211, 0);
            --v57;
          }
          while (v57);
LABEL_88:
          sub_1000E4EA4((uint64_t)v212, v213, v214);
          id v72 = v215;
          swift_bridgeObjectRelease();
        }
        unint64_t v9 = v193;
        uint64_t v45 = v195;
        uint64_t v27 = (uint64_t)sub_100711100((uint64_t)v72, v193);
        uint64_t v22 = 0;
        id v25 = *(char **)typea;
        goto LABEL_92;
      }
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      JUMPOUT(0x1006FD718);
    }
  }
  *(void *)uint64_t type = v21;
  uint64_t v11 = v24 + 32;
  id v26 = *v23;
  uint64_t v27 = swift_bridgeObjectRetain();
  unint64_t v28 = 0;
  while (2)
  {
    if ((unint64_t)v28 >= *((void *)v24 + 2))
    {
      __break(1u);

      swift_release();
      goto LABEL_165;
    }
    id v29 = v28++;
    unint64_t v9 = (unint64_t)_swiftEmptyArrayStorage;
    switch(v29[(void)v11])
    {
      case 1:
        id v33 = [v26 listID];
        goto LABEL_23;
      case 2:
        id v33 = [v26 parentReminderID];
LABEL_23:
        id v34 = v33;
        uint64_t v35 = v34;
        uint64_t v211 = (uint64_t)_swiftEmptyArrayStorage;
        if (v34)
        {
          id v36 = v34;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          uint64_t v13 = (uint64_t)&v211;
          specialized Array._endMutation()();
          unint64_t v9 = v211;
          uint64_t v22 = _swiftEmptyArrayStorage;
        }
        else
        {
          unint64_t v9 = (unint64_t)_swiftEmptyArrayStorage;
        }
        goto LABEL_49;
      case 3:
        id v31 = [v26 subtaskIDsToUndelete];
        sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
        sub_1001207D4();
        uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        if ((v13 & 0xC000000000000001) != 0) {
          uint64_t v32 = __CocoaSet.count.getter();
        }
        else {
          uint64_t v32 = *(void *)(v13 + 16);
        }
        uint64_t v22 = _swiftEmptyArrayStorage;
        if (!v32) {
          goto LABEL_42;
        }
        if (v32 < 1)
        {
          unint64_t v9 = (unint64_t)_swiftEmptyArrayStorage;
        }
        else
        {
          sub_100094134((uint64_t *)&unk_10090AF20);
          unint64_t v9 = swift_allocObject();
          int64_t v39 = j__malloc_size((const void *)v9);
          uint64_t v40 = v39 - 32;
          if (v39 < 32) {
            uint64_t v40 = v39 - 25;
          }
          *(void *)(v9 + 16) = v32;
          *(void *)(v9 + 24) = (2 * (v40 >> 3)) | 1;
        }
        swift_bridgeObjectRetain();
        uint64_t v43 = sub_10020C094(&v211, (void *)(v9 + 32), v32, v13);
        sub_1000C1AF8();
        if (v43 == (void *)v32) {
          goto LABEL_48;
        }
        __break(1u);
        goto LABEL_164;
      case 4:
        id v37 = [v26 hashtagIDsToUndelete];
        sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
        sub_1001207D4();
        uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        if ((v13 & 0xC000000000000001) != 0) {
          uint64_t v38 = __CocoaSet.count.getter();
        }
        else {
          uint64_t v38 = *(void *)(v13 + 16);
        }
        uint64_t v22 = _swiftEmptyArrayStorage;
        if (v38)
        {
          if (v38 < 1)
          {
            unint64_t v9 = (unint64_t)_swiftEmptyArrayStorage;
          }
          else
          {
            sub_100094134((uint64_t *)&unk_10090AF20);
            unint64_t v9 = swift_allocObject();
            int64_t v41 = j__malloc_size((const void *)v9);
            uint64_t v42 = v41 - 32;
            if (v41 < 32) {
              uint64_t v42 = v41 - 25;
            }
            *(void *)(v9 + 16) = v38;
            *(void *)(v9 + 24) = (2 * (v42 >> 3)) | 1;
          }
          swift_bridgeObjectRetain();
          unint64_t v44 = sub_10020C094(&v211, (void *)(v9 + 32), v38, v13);
          sub_1000C1AF8();
          if (v44 != (void *)v38)
          {
LABEL_164:
            __break(1u);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
LABEL_165:
            swift_bridgeObjectRelease();
LABEL_2:
            swift_bridgeObjectRelease();
            return;
          }
LABEL_48:
          uint64_t v27 = swift_bridgeObjectRelease();
          uint64_t v22 = _swiftEmptyArrayStorage;
        }
        else
        {
LABEL_42:
          uint64_t v27 = swift_bridgeObjectRelease();
          unint64_t v9 = (unint64_t)_swiftEmptyArrayStorage;
        }
LABEL_49:
        if (!(v9 >> 62))
        {
          uint64_t v45 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v45) {
            goto LABEL_51;
          }
LABEL_15:
          uint64_t v27 = swift_bridgeObjectRelease();
          if (v28 == v25) {
            goto LABEL_10;
          }
          continue;
        }
        swift_bridgeObjectRetain();
        uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v27 = swift_bridgeObjectRelease();
        if (!v45) {
          goto LABEL_15;
        }
LABEL_51:
        if (v45 >= 1)
        {
          if ((v9 & 0xC000000000000001) != 0)
          {
            uint64_t v46 = 0;
            do
            {
              uint64_t v47 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              ++v46;
              uint64_t v13 = (uint64_t)&v216;
              sub_10031DE54(&v211, v47);
            }
            while (v45 != v46);
          }
          else
          {
            uint64_t v48 = 0;
            do
            {
              char v49 = *(void **)(v9 + 8 * v48++ + 32);
              uint64_t v13 = (uint64_t)&v216;
              sub_10031DE54(&v211, v49);
            }
            while (v45 != v48);
          }
          uint64_t v27 = swift_bridgeObjectRelease();
          uint64_t v22 = _swiftEmptyArrayStorage;
          if (v28 == v25)
          {
LABEL_10:

            swift_bridgeObjectRelease();
            uint64_t v11 = v199;
            unint64_t v21 = *(void *)type;
            goto LABEL_11;
          }
          continue;
        }
        __break(1u);
LABEL_92:
        uint64_t v207 = v27;
        swift_bridgeObjectRelease();
        unint64_t v73 = sub_100717658((uint64_t)v25, v9);
        if (v22)
        {
LABEL_93:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_165;
        }
        uint64_t v185 = v73;
        swift_bridgeObjectRelease();
        char v74 = (uint64_t *)(v9 + 48);
        swift_beginAccess();
        if (!v11[2]) {
          goto LABEL_188;
        }
        uint64_t v75 = 0;
        uint64_t v178 = v45 + 24;
        unint64_t v76 = &selRef_intersectsSet_;
        id v176 = (uint64_t *)(v9 + 48);
        while (2)
        {
          uint64_t v179 = v75;
          char v77 = (id *)&v200[2 * v75];
          uint64_t v78 = (int64_t *)v77[1];
          id v79 = *v77;
          uint64_t v188 = v78;
          swift_bridgeObjectRetain();
          id v80 = sub_100693E40([v79 v76[446]]);

          uint64_t v81 = *v74;
          id v190 = v79;
          if ((v81 & 0xC000000000000001) != 0)
          {
            id v82 = v80;
            swift_bridgeObjectRetain();
            uint64_t v83 = __CocoaDictionary.lookup(_:)();
            if (v83)
            {
              uint64_t v215 = (void *)v83;
              sub_1000963CC(0, (unint64_t *)&qword_100909B00);
              swift_unknownObjectRetain();
              swift_dynamicCast();
              id v84 = v212;
              swift_unknownObjectRelease();

              swift_bridgeObjectRelease();
            }
            else
            {

              swift_bridgeObjectRelease();
              id v84 = 0;
            }
            id v79 = v190;
          }
          else if (*(void *)(v81 + 16))
          {
            id v85 = v80;
            swift_bridgeObjectRetain();
            unint64_t v86 = sub_100306FE8((uint64_t)v85);
            if (v87)
            {
              id v84 = *(id *)(*(void *)(v81 + 56) + 8 * v86);

              swift_bridgeObjectRelease();
            }
            else
            {

              swift_bridgeObjectRelease();
              id v84 = 0;
            }
            id v79 = v190;
          }
          else
          {
            id v84 = 0;
          }

          if (!v185[2])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_176:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            id v164 = v80;
            swift_retain_n();
            id v165 = v164;
            unint64_t v166 = Logger.logObject.getter();
            os_log_type_t v167 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v166, v167))
            {
              uint64_t v168 = swift_slowAlloc();
              unsigned __int8 v212 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v168 = 136446722;
              uint64_t v215 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v212);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v168 + 12) = 2082;
              sub_10010B4E8(v178, (uint64_t)v217);
              sub_10073F754((uint64_t)v217, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
              uint64_t v169 = sub_100696CF4();
              unint64_t v171 = v170;
              sub_10073F754((uint64_t)v217, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
              uint64_t v215 = (void *)sub_1000C51B8(v169, v171, (uint64_t *)&v212);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v168 + 22) = 2080;
              id v172 = [v165 description];
              uint64_t v173 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v175 = v174;

              uint64_t v215 = (void *)sub_1000C51B8(v173, v175, (uint64_t *)&v212);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v166, v167, "[%{public}s] Tried to establish relationship with non-existing object -- skipping {author: %{public}s, cdObjectID: %s}", (uint8_t *)v168, 0x20u);
              swift_arrayDestroy();
              swift_slowDealloc();
              id v79 = v190;
              swift_slowDealloc();
            }
            else
            {

              swift_release_n();
            }
            [self noSuchObjectErrorWithObjectID:v165];
            swift_willThrow();

            return;
          }
          id v88 = v80;
          unint64_t v89 = sub_10030703C(v88);
          if ((v90 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            id v79 = v190;
            goto LABEL_176;
          }
          id v187 = *(id *)(v185[7] + 8 * v89);

          id v91 = v188;
          swift_bridgeObjectRetain_n();
          id v92 = v88;
          swift_retain_n();
          id v93 = v92;
          unint64_t v94 = Logger.logObject.getter();
          os_log_type_t v95 = static os_log_type_t.default.getter();
          uint64_t v184 = v93;
          if (os_log_type_enabled(v94, v95))
          {
            os_log_type_t v191 = v95;
            os_log_t loga = v94;
            uint64_t v96 = swift_slowAlloc();
            typed = (void *)swift_slowAlloc();
            unsigned __int8 v212 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v96 = 136446978;
            uint64_t v215 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v212);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v96 + 12) = 2082;
            sub_10010B4E8(v178, (uint64_t)v219);
            sub_10073F754((uint64_t)v219, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v97 = sub_100696CF4();
            unint64_t v99 = v98;
            sub_10073F754((uint64_t)v219, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            uint64_t v215 = (void *)sub_1000C51B8(v97, v99, (uint64_t *)&v212);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v96 + 22) = 2114;
            uint64_t v215 = v93;
            id v100 = v93;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            void *typed = v93;

            *(_WORD *)(v96 + 32) = 2082;
            int64_t v101 = v188[2];
            if (v101)
            {
              uint64_t v215 = _swiftEmptyArrayStorage;
              sub_1001DE058(0, v101, 0);
              id v91 = v188;
              uint64_t v102 = 0;
              unint64_t v103 = v215;
              do
              {
                unint64_t v104 = 0xE900000000000044;
                unint64_t v105 = 0x49746E756F636361;
                switch(*((unsigned char *)v91 + v102 + 32))
                {
                  case 1:
                    unint64_t v104 = 0xE600000000000000;
                    unint64_t v105 = 0x44497473696CLL;
                    break;
                  case 2:
                    unint64_t v105 = 0xD000000000000010;
                    unint64_t v104 = 0x80000001007C67E0;
                    break;
                  case 3:
                    unint64_t v105 = 0xD000000000000014;
                    unint64_t v104 = 0x80000001007C6800;
                    break;
                  case 4:
                    unint64_t v105 = 0xD000000000000014;
                    unint64_t v104 = 0x80000001007C6820;
                    break;
                  case 5:
                    unint64_t v105 = 0xD00000000000001FLL;
                    unint64_t v104 = 0x80000001007C6840;
                    break;
                  default:
                    break;
                }
                uint64_t v215 = v103;
                unint64_t v107 = v103[2];
                unint64_t v106 = v103[3];
                if (v107 >= v106 >> 1)
                {
                  sub_1001DE058(v106 > 1, v107 + 1, 1);
                  id v91 = v188;
                  unint64_t v103 = v215;
                }
                ++v102;
                v103[2] = v107 + 1;
                uint64_t v108 = &v103[2 * v107];
                v108[4] = v105;
                v108[5] = v104;
              }
              while (v101 != v102);
              swift_bridgeObjectRelease();
              uint64_t v11 = v199;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            uint64_t v109 = Array.description.getter();
            unint64_t v111 = v110;
            swift_bridgeObjectRelease();
            uint64_t v215 = (void *)sub_1000C51B8(v109, v111, (uint64_t *)&v212);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, loga, v191, "[%{public}s] UPDATE RELATIONSHIPS {author: %{public}s, objectID: %{public}@, changedRelationshipKeys: %{public}s}", (uint8_t *)v96, 0x2Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v45 = v195;
          }
          else
          {

            swift_release_n();
            swift_bridgeObjectRelease_n();
          }
          unint64_t v112 = v190;
          uint64_t v180 = v91[2];
          if (!v180)
          {
LABEL_156:
            swift_bridgeObjectRelease();
            unint64_t v147 = v179 + 1;
            if (*(unsigned char *)(v45 + 104) == 1)
            {
              id v148 = v187;
              [v148 updateChangeCount];
            }
            else
            {
            }
            uint64_t v75 = v179 + 1;
            unint64_t v76 = &selRef_intersectsSet_;
            if (v147 == v201) {
              goto LABEL_93;
            }
            char v74 = v176;
            if (v147 >= v11[2]) {
              goto LABEL_188;
            }
            continue;
          }
          break;
        }
        unint64_t v113 = 0;
        uint64_t v114 = v91 + 4;
        uint64_t v177 = v91 + 4;
        while (2)
        {
          if (v113 >= v91[2]) {
            goto LABEL_187;
          }
          char v182 = v114[v113];
          unint64_t v115 = (unint64_t)sub_100256648(v112, v182);
          unint64_t v116 = v115;
          if (!(v115 >> 62))
          {
            uint64_t v117 = *(void *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x10);
            unint64_t v181 = v113;
            if (v117) {
              goto LABEL_128;
            }
LABEL_154:
            Swift::Int v119 = (Swift::Int)_swiftEmptyDictionarySingleton;
LABEL_155:
            swift_bridgeObjectRelease();
            uint64_t v146 = sub_100420CF8(v119);
            swift_bridgeObjectRelease();
            unint64_t v112 = v190;
            sub_100256874(v190, v187, v182, v146);
            unint64_t v113 = v181 + 1;
            swift_bridgeObjectRelease();
            id v91 = v188;
            uint64_t v114 = v177;
            if (v181 + 1 == v180) {
              goto LABEL_156;
            }
            continue;
          }
          break;
        }
        swift_bridgeObjectRetain();
        uint64_t v117 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        unint64_t v181 = v113;
        if (!v117) {
          goto LABEL_154;
        }
LABEL_128:
        os_log_t logb = (os_log_t)(v116 & 0xC000000000000001);
        uint64_t v118 = 4;
        Swift::Int v119 = (Swift::Int)_swiftEmptyDictionarySingleton;
        unint64_t v194 = v116;
        uint64_t v192 = v117;
        while (1)
        {
          if (logb) {
            id v121 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v121 = *(id *)(v116 + 8 * v118);
          }
          uint64_t v122 = v121;
          if (__OFADD__(v118 - 4, 1)) {
            goto LABEL_183;
          }
          sub_1000963CC(0, (unint64_t *)&unk_10090AF40);
          id v123 = v122;
          unint64_t v124 = v123;
          if (!*(void *)(v207 + 16))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_168;
          }
          *(void *)os_log_type_t typeb = v118 - 3;
          id v125 = v123;
          unint64_t v126 = sub_10030703C(v125);
          if ((v127 & 1) == 0) {
            break;
          }
          id v128 = *(id *)(*(void *)(v207 + 56) + 8 * v126);

          if ((v119 & 0xC000000000000001) != 0)
          {
            if (v119 < 0) {
              uint64_t v129 = v119;
            }
            else {
              uint64_t v129 = v119 & 0xFFFFFFFFFFFFFF8;
            }
            id v130 = v128;
            uint64_t v131 = __CocoaDictionary.count.getter();
            if (__OFADD__(v131, 1)) {
              goto LABEL_185;
            }
            Swift::Int v119 = sub_1001A7A10(v129, v131 + 1);
          }
          else
          {
            id v132 = v128;
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unsigned __int8 v212 = (void *)v119;
          unint64_t v135 = sub_100306FE8((uint64_t)v125);
          uint64_t v136 = *(void *)(v119 + 16);
          BOOL v137 = (v134 & 1) == 0;
          uint64_t v138 = v136 + v137;
          if (__OFADD__(v136, v137)) {
            goto LABEL_184;
          }
          char v139 = v134;
          if (*(void *)(v119 + 24) >= v138)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_100319990();
            }
          }
          else
          {
            sub_100310B54(v138, isUniquelyReferenced_nonNull_native);
            unint64_t v140 = sub_100306FE8((uint64_t)v125);
            if ((v139 & 1) != (v141 & 1)) {
              goto LABEL_190;
            }
            unint64_t v135 = v140;
          }
          unint64_t v116 = v194;
          Swift::Int v119 = (Swift::Int)v212;
          if (v139)
          {
            uint64_t v120 = v212[7];

            *(void *)(v120 + 8 * v135) = v128;
          }
          else
          {
            v212[(v135 >> 6) + 8] |= 1 << v135;
            *(void *)(*(void *)(v119 + 48) + 8 * v135) = v125;
            *(void *)(*(void *)(v119 + 56) + 8 * v135) = v128;
            uint64_t v142 = *(void *)(v119 + 16);
            BOOL v143 = __OFADD__(v142, 1);
            uint64_t v144 = v142 + 1;
            if (v143) {
              goto LABEL_186;
            }
            *(void *)(v119 + 16) = v144;
            id v145 = v125;
          }
          uint64_t v45 = v195;
          uint64_t v11 = v199;

          swift_bridgeObjectRelease();
          ++v118;
          if (*(void *)typeb == v192) {
            goto LABEL_155;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

LABEL_168:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_retain_n();
        id v149 = v124;
        unint64_t v150 = Logger.logObject.getter();
        os_log_type_t v151 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v150, v151))
        {
          uint64_t v152 = swift_slowAlloc();
          unsigned __int8 v212 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v152 = 136446978;
          uint64_t v215 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v212);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v152 + 12) = 2082;
          sub_10010B4E8(v178, (uint64_t)v218);
          sub_10073F754((uint64_t)v218, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
          uint64_t v153 = sub_100696CF4();
          unint64_t v155 = v154;
          sub_10073F754((uint64_t)v218, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
          uint64_t v215 = (void *)sub_1000C51B8(v153, v155, (uint64_t *)&v212);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v152 + 22) = 2080;
          id v156 = [v149 description];
          uint64_t v157 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v159 = v158;

          uint64_t v215 = (void *)sub_1000C51B8(v157, v159, (uint64_t *)&v212);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v152 + 32) = 2080;
          id v160 = [v149 description];
          uint64_t v161 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v163 = v162;

          uint64_t v215 = (void *)sub_1000C51B8(v161, v163, (uint64_t *)&v212);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v150, v151, "[%{public}s] Tried to establish realtionship with non-existent target object -- bail {author: %{public}s, cdObjectID: %s, relationshipObjectID: %s}", (uint8_t *)v152, 0x2Au);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        [self noSuchObjectErrorWithObjectID:v149];
        swift_willThrow();

        return;
      case 5:
        goto LABEL_49;
      default:
        sub_100094134((uint64_t *)&unk_10090AF20);
        uint64_t v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = xmmword_10077A530;
        *(void *)(v30 + 32) = [v26 accountID];
        uint64_t v211 = v30;
        uint64_t v13 = (uint64_t)&v211;
        uint64_t v27 = specialized Array._endMutation()();
        unint64_t v9 = v211;
        goto LABEL_49;
    }
  }
}

void sub_1006FD748(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)v3;
  uint64_t v217 = a2;
  uint64_t v9 = *(void *)(a3 + 16);
  unint64_t v8 = *(void *)(a3 + 24);
  uint64_t v206 = &v217;
  unint64_t v207 = v5;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1003B58A0((void (*)(__n128 *__return_ptr, id *))sub_1007419C8, (uint64_t)v205, a1);
  if (v4) {
    goto LABEL_2;
  }
  uint64_t v11 = v10;
  unint64_t v193 = a1;
  if (qword_1009073A0 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10008E2DC(v12, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  uint64_t v190 = a3;
  uint64_t v192 = (void *)v5;
  uint64_t v195 = v11;
  if (os_log_type_enabled((os_log_t)v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v212 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136446978;
    uint64_t v208 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, &v212);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2048;
    uint64_t v208 = (void *)v11[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2082;
    sub_1000963CC(0, (unint64_t *)&qword_100909AD0);
    os_log_type_t typed = v14;
    id v16 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v19 = v18;

    uint64_t v208 = (void *)sub_1000C51B8(v17, v19, &v212);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v11 = v195;
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 32) = 2082;
    unint64_t v5 = v15 + 34;
    swift_bridgeObjectRetain();
    uint64_t v208 = (void *)sub_1000C51B8(v9, v8, &v212);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v13, typed, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  uint64_t v197 = v11[2];
  if (!v197) {
    goto LABEL_2;
  }
  uint64_t v213 = (uint64_t)&_swiftEmptySetSingleton;
  uint64_t v196 = v11 + 4;
  swift_bridgeObjectRetain();
  unint64_t v20 = 0;
LABEL_12:
  if (v20 >= v11[2])
  {
    __break(1u);
LABEL_196:
    __break(1u);
    __break(1u);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_2;
  }
  unint64_t v21 = (id *)&v196[2 * v20];
  uint64_t v22 = v21[1];
  uint64_t v23 = v22[2];
  if (!v23) {
    goto LABEL_11;
  }
  *(void *)uint64_t type = v20;
  uint64_t v11 = *v21;
  swift_bridgeObjectRetain();
  unint64_t v24 = 0;
  while (2)
  {
    if (v24 >= v22[2])
    {
      __break(1u);

      swift_release();
      goto LABEL_188;
    }
    uint64_t v25 = v24++;
    switch(*((unsigned char *)v22 + v25 + 32))
    {
      case 1:
        unint64_t v5 = (unint64_t)[v11 childListIDsToUndelete];
        sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
        sub_1001207D4();
        uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        if ((v13 & 0xC000000000000001) != 0)
        {
          uint64_t v34 = __CocoaSet.count.getter();
          if (!v34) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v34 = *(void *)(v13 + 16);
          if (!v34)
          {
LABEL_58:
            uint64_t v27 = swift_bridgeObjectRelease();
            unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
            goto LABEL_71;
          }
        }
        if (v34 < 1)
        {
          unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
        }
        else
        {
          sub_100094134((uint64_t *)&unk_10090AF20);
          unint64_t v28 = swift_allocObject();
          int64_t v39 = j__malloc_size((const void *)v28);
          uint64_t v40 = v39 - 32;
          if (v39 < 32) {
            uint64_t v40 = v39 - 25;
          }
          *(void *)(v28 + 16) = v34;
          *(void *)(v28 + 24) = (2 * (v40 >> 3)) | 1;
        }
        swift_bridgeObjectRetain();
        unint64_t v5 = (unint64_t)sub_10020C094(&v212, (void *)(v28 + 32), v34, v13);
        sub_1000C1AF8();
        if (v5 != v34)
        {
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
LABEL_188:
          swift_bridgeObjectRelease();
LABEL_2:
          swift_bridgeObjectRelease();
          return;
        }
LABEL_70:
        uint64_t v27 = swift_bridgeObjectRelease();
LABEL_71:
        if (v28 >> 62)
        {
          uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
          uint64_t v45 = v27;
          if (!v27) {
            goto LABEL_15;
          }
        }
        else
        {
          uint64_t v45 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v45) {
            goto LABEL_15;
          }
        }
        if (v45 >= 1)
        {
          if ((v28 & 0xC000000000000001) != 0)
          {
            unint64_t v5 = 0;
            do
            {
              uint64_t v46 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              ++v5;
              uint64_t v13 = (uint64_t)&v213;
              sub_10031DE54(&v212, v46);
            }
            while (v45 != v5);
          }
          else
          {
            unint64_t v5 = 0;
            do
            {
              uint64_t v47 = *(void **)(v28 + 8 * v5++ + 32);
              uint64_t v13 = (uint64_t)&v213;
              sub_10031DE54(&v212, v47);
            }
            while (v45 != v5);
          }
LABEL_15:
          swift_bridgeObjectRelease();
          if (v24 != v23) {
            continue;
          }

          swift_bridgeObjectRelease();
          uint64_t v11 = v195;
          unint64_t v20 = *(void *)type;
LABEL_11:
          if (++v20 == v197)
          {
            swift_bridgeObjectRelease();
            if (v193 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v48 = *(void *)((v193 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            char v49 = _swiftEmptyArrayStorage;
            if (!v48) {
              goto LABEL_94;
            }
            uint64_t v212 = (uint64_t)_swiftEmptyArrayStorage;
            uint64_t v13 = (uint64_t)&v212;
            specialized ContiguousArray.reserveCapacity(_:)();
            if ((v48 & 0x8000000000000000) == 0)
            {
              uint64_t v50 = 0;
              unint64_t v51 = v193;
              do
              {
                if (v48 == v50) {
                  goto LABEL_196;
                }
                if ((v193 & 0xC000000000000001) != 0) {
                  id v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v52 = *(id *)(v51 + 8 * v50 + 32);
                }
                id v53 = v52;
                sub_100694DE8([v53 remObjectID], (unint64_t *)&qword_100909AD0);
                ++v50;

                specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                uint64_t v13 = (uint64_t)&v212;
                specialized ContiguousArray._endMutation()();
                unint64_t v51 = v193;
              }
              while (v48 != v50);
              char v49 = (void *)v212;
              uint64_t v11 = v195;
LABEL_94:
              *(void *)os_log_type_t typea = v49;
              uint64_t v54 = v213;
              if ((v213 & 0xC000000000000001) != 0)
              {
                swift_bridgeObjectRetain();
                uint64_t v55 = __CocoaSet.count.getter();
                if (v55)
                {
                  uint64_t v56 = v55;
                  uint64_t v211 = _swiftEmptyArrayStorage;
                  specialized ContiguousArray.reserveCapacity(_:)();
                  uint64_t v208 = (void *)__CocoaSet.startIndex.getter();
                  uint64_t v209 = v57;
                  unsigned __int8 v210 = 1;
                  if ((v56 & 0x8000000000000000) == 0) {
                    goto LABEL_104;
                  }
                  __break(1u);
                  goto LABEL_2;
                }
              }
              else
              {
                uint64_t v56 = *(void *)(v213 + 16);
                swift_bridgeObjectRetain();
                if (v56)
                {
                  uint64_t v211 = _swiftEmptyArrayStorage;
                  specialized ContiguousArray.reserveCapacity(_:)();
                  uint64_t v208 = (void *)sub_1003CA790(v54);
                  uint64_t v209 = v58;
                  unsigned __int8 v210 = v59 & 1;
                  do
                  {
LABEL_104:
                    while (1)
                    {
                      uint64_t v66 = (uint64_t)v208;
                      uint64_t v65 = v209;
                      uint64_t v67 = v210;
                      sub_1003C9F34((uint64_t)v208, v209, v210, v54);
                      id v69 = v68;
                      sub_1000963CC(0, (unint64_t *)&unk_10090AF40);

                      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                      specialized ContiguousArray._endMutation()();
                      if ((v54 & 0xC000000000000001) != 0) {
                        break;
                      }
                      uint64_t v60 = sub_1003C9E34(v66, v65, v67, v54);
                      uint64_t v62 = v61;
                      char v64 = v63;
                      sub_1000E4EA4(v66, v65, v67);
                      uint64_t v208 = (void *)v60;
                      uint64_t v209 = v62;
                      unsigned __int8 v210 = v64 & 1;
                      uint64_t v11 = v195;
                      if (!--v56) {
                        goto LABEL_109;
                      }
                    }
                    if ((v67 & 1) == 0) {
                      goto LABEL_212;
                    }
                    if (__CocoaSet.Index.handleBitPattern.getter()) {
                      swift_isUniquelyReferenced_nonNull_native();
                    }
                    uint64_t v11 = v195;
                    sub_100094134(&qword_100916988);
                    uint64_t v70 = (void (*)(void, void))Set.Index._asCocoa.modify();
                    __CocoaSet.formIndex(after:isUnique:)();
                    v70(&v212, 0);
                    --v56;
                  }
                  while (v56);
LABEL_109:
                  sub_1000E4EA4((uint64_t)v208, v209, v210);
                  id v71 = v211;
                  swift_bridgeObjectRelease();
                  goto LABEL_111;
                }
              }
              swift_bridgeObjectRelease();
              id v71 = _swiftEmptyArrayStorage;
LABEL_111:
              unint64_t v28 = v190;
              uint64_t v45 = (uint64_t)v192;
              uint64_t v27 = (uint64_t)sub_100711100((uint64_t)v71, v190);
              unint64_t v5 = 0;
              uint64_t v23 = *(void *)typea;
              goto LABEL_113;
            }
            __break(1u);
LABEL_206:
            __break(1u);
LABEL_207:
            __break(1u);
LABEL_208:
            __break(1u);
LABEL_209:
            __break(1u);
LABEL_210:
            __break(1u);
LABEL_211:
            __break(1u);
LABEL_212:
            __break(1u);
LABEL_213:
            sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
            KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
            __break(1u);
            JUMPOUT(0x1006FF750);
          }
          goto LABEL_12;
        }
        __break(1u);
LABEL_113:
        uint64_t v72 = v27;
        swift_bridgeObjectRelease();
        unint64_t v73 = sub_100717AC0(v23, v28);
        if (v5)
        {
LABEL_114:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_188;
        }
        unint64_t v183 = v73;
        swift_bridgeObjectRelease();
        uint64_t v178 = (uint64_t *)(v28 + 48);
        swift_beginAccess();
        if (!v11[2]) {
          goto LABEL_211;
        }
        uint64_t v74 = 0;
        uint64_t v175 = v45 + 24;
        uint64_t v75 = &selRef_intersectsSet_;
        uint64_t v194 = v72;
        while (2)
        {
          uint64_t v176 = v74;
          unint64_t v76 = (id *)&v196[2 * v74];
          char v77 = (int64_t *)v76[1];
          id v78 = *v76;
          uint64_t v186 = v77;
          swift_bridgeObjectRetain();
          id v79 = sub_100694DE8([v78 v75[446]], (unint64_t *)&qword_100909AD0);
          id v188 = v78;

          uint64_t v80 = *v178;
          if ((*v178 & 0xC000000000000001) != 0)
          {
            id v81 = v79;
            swift_bridgeObjectRetain();
            uint64_t v82 = __CocoaDictionary.lookup(_:)();
            if (v82)
            {
              uint64_t v211 = (void *)v82;
              sub_1000963CC(0, (unint64_t *)&qword_100909B00);
              swift_unknownObjectRetain();
              swift_dynamicCast();
              id v83 = v208;
              swift_unknownObjectRelease();

              swift_bridgeObjectRelease();
            }
            else
            {

              swift_bridgeObjectRelease();
              id v83 = 0;
            }
            uint64_t v11 = v195;
          }
          else if (*(void *)(v80 + 16))
          {
            id v84 = v79;
            swift_bridgeObjectRetain();
            unint64_t v85 = sub_100306FE8((uint64_t)v84);
            if (v86)
            {
              id v83 = *(id *)(*(void *)(v80 + 56) + 8 * v85);

              swift_bridgeObjectRelease();
            }
            else
            {

              swift_bridgeObjectRelease();
              id v83 = 0;
            }
          }
          else
          {
            id v83 = 0;
          }

          if (!v183[2])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_199:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            id v162 = v79;
            swift_retain_n();
            id v163 = v162;
            id v164 = Logger.logObject.getter();
            os_log_type_t v165 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v164, v165))
            {
              uint64_t v166 = swift_slowAlloc();
              uint64_t v208 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v166 = 136446722;
              uint64_t v211 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v208);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v166 + 12) = 2082;
              sub_10010B4E8(v175, (uint64_t)v214);
              sub_10073F754((uint64_t)v214, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
              uint64_t v167 = sub_100696CF4();
              unint64_t v169 = v168;
              sub_10073F754((uint64_t)v214, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
              uint64_t v211 = (void *)sub_1000C51B8(v167, v169, (uint64_t *)&v208);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v166 + 22) = 2080;
              id v170 = [v163 description];
              uint64_t v171 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v173 = v172;

              uint64_t v211 = (void *)sub_1000C51B8(v171, v173, (uint64_t *)&v208);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v164, v165, "[%{public}s] Tried to establish relationship with non-existing object -- skipping {author: %{public}s, cdObjectID: %s}", (uint8_t *)v166, 0x20u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_release_n();
            }
            [self noSuchObjectErrorWithObjectID:v163];
            swift_willThrow();

            return;
          }
          id v87 = v79;
          unint64_t v88 = sub_10030703C(v87);
          if ((v89 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            goto LABEL_199;
          }
          id v185 = *(id *)(v183[7] + 8 * v88);

          char v90 = v186;
          swift_bridgeObjectRetain_n();
          id v91 = v87;
          swift_retain_n();
          id v92 = v91;
          id v93 = Logger.logObject.getter();
          os_log_type_t v94 = static os_log_type_t.default.getter();
          char v182 = v92;
          if (os_log_type_enabled(v93, v94))
          {
            os_log_type_t typeb = v93;
            uint64_t v95 = swift_slowAlloc();
            uint64_t v203 = (void *)swift_slowAlloc();
            uint64_t v208 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v95 = 136446978;
            uint64_t v211 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v208);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v95 + 12) = 2082;
            sub_10010B4E8(v175, (uint64_t)v216);
            sub_10073F754((uint64_t)v216, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v96 = sub_100696CF4();
            unint64_t v98 = v97;
            sub_10073F754((uint64_t)v216, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            uint64_t v211 = (void *)sub_1000C51B8(v96, v98, (uint64_t *)&v208);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v95 + 22) = 2114;
            uint64_t v211 = v92;
            id v99 = v92;
            char v90 = v186;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            void *v203 = v92;

            *(_WORD *)(v95 + 32) = 2082;
            int64_t v100 = v186[2];
            if (v100)
            {
              uint64_t v211 = _swiftEmptyArrayStorage;
              sub_1001DE058(0, v100, 0);
              uint64_t v101 = 0;
              uint64_t v102 = v211;
              do
              {
                unint64_t v103 = 0xE900000000000044;
                unint64_t v104 = 0x49746E756F636361;
                switch(*((unsigned char *)v186 + v101 + 32))
                {
                  case 1:
                    unint64_t v103 = 0x80000001007C61C0;
                    unint64_t v104 = 0xD000000000000016;
                    break;
                  case 2:
                    unint64_t v104 = 0xD00000000000001BLL;
                    unint64_t v103 = 0x80000001007C61E0;
                    break;
                  case 3:
                    unint64_t v103 = 0xEF4449746E756F63;
                    unint64_t v104 = 0x6341746E65726170;
                    break;
                  case 4:
                    unint64_t v103 = 0xEC00000044497473;
                    unint64_t v104 = 0x694C746E65726170;
                    break;
                  case 5:
                    unint64_t v104 = 0xD000000000000015;
                    unint64_t v103 = 0x80000001007C6220;
                    break;
                  case 6:
                    unint64_t v104 = 0xD000000000000014;
                    unint64_t v103 = 0x80000001007C6240;
                    break;
                  default:
                    break;
                }
                uint64_t v211 = v102;
                unint64_t v106 = v102[2];
                unint64_t v105 = v102[3];
                if (v106 >= v105 >> 1)
                {
                  sub_1001DE058(v105 > 1, v106 + 1, 1);
                  uint64_t v102 = v211;
                }
                ++v101;
                v102[2] = v106 + 1;
                unint64_t v107 = &v102[2 * v106];
                v107[4] = v104;
                v107[5] = v103;
              }
              while (v100 != v101);
              swift_bridgeObjectRelease();
              uint64_t v72 = v194;
              uint64_t v11 = v195;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            uint64_t v108 = Array.description.getter();
            unint64_t v110 = v109;
            swift_bridgeObjectRelease();
            uint64_t v211 = (void *)sub_1000C51B8(v108, v110, (uint64_t *)&v208);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, typeb, v94, "[%{public}s] UPDATE RELATIONSHIPS {author: %{public}s, objectID: %{public}@, changedRelationshipKeys: %{public}s}", (uint8_t *)v95, 0x2Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v45 = (uint64_t)v192;
          }
          else
          {

            swift_release_n();
            swift_bridgeObjectRelease_n();
          }
          uint64_t v177 = v90[2];
          if (!v177)
          {
LABEL_177:
            swift_bridgeObjectRelease();
            unint64_t v145 = v176 + 1;
            if (*(unsigned char *)(v45 + 104) == 1)
            {
              id v146 = v185;
              [v146 updateChangeCount];
            }
            else
            {
            }
            uint64_t v74 = v176 + 1;
            uint64_t v75 = &selRef_intersectsSet_;
            if (v145 == v197) {
              goto LABEL_114;
            }
            if (v145 >= v11[2]) {
              goto LABEL_211;
            }
            continue;
          }
          break;
        }
        unint64_t v111 = 0;
        unint64_t v112 = v90 + 4;
        unint64_t v174 = v90 + 4;
        while (2)
        {
          if (v111 >= v90[2]) {
            goto LABEL_210;
          }
          char v180 = *((unsigned char *)v112 + v111);
          unint64_t v113 = (unint64_t)sub_1005E3F14(v188, v180);
          unint64_t v114 = v113;
          if (!(v113 >> 62))
          {
            uint64_t v115 = *(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10);
            unint64_t v179 = v111;
            if (v115) {
              goto LABEL_149;
            }
LABEL_175:
            Swift::Int v117 = (Swift::Int)_swiftEmptyDictionarySingleton;
LABEL_176:
            swift_bridgeObjectRelease();
            uint64_t v144 = sub_100420CF8(v117);
            swift_bridgeObjectRelease();
            sub_1005E415C(v188, v185, v180, v144);
            unint64_t v111 = v179 + 1;
            swift_bridgeObjectRelease();
            uint64_t v11 = v195;
            char v90 = v186;
            unint64_t v112 = v174;
            if (v179 + 1 == v177) {
              goto LABEL_177;
            }
            continue;
          }
          break;
        }
        swift_bridgeObjectRetain();
        uint64_t v115 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        unint64_t v179 = v111;
        if (!v115) {
          goto LABEL_175;
        }
LABEL_149:
        unint64_t typec = v114 & 0xC000000000000001;
        uint64_t v116 = 4;
        Swift::Int v117 = (Swift::Int)_swiftEmptyDictionarySingleton;
        unint64_t v191 = v114;
        uint64_t v189 = v115;
        while (1)
        {
          if (typec) {
            id v119 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v119 = *(id *)(v114 + 8 * v116);
          }
          uint64_t v120 = v119;
          if (__OFADD__(v116 - 4, 1)) {
            goto LABEL_206;
          }
          sub_1000963CC(0, (unint64_t *)&unk_10090AF40);
          id v121 = v120;
          uint64_t v122 = v121;
          if (!*(void *)(v72 + 16))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_191;
          }
          id v123 = v121;
          unint64_t v124 = sub_10030703C(v123);
          if ((v125 & 1) == 0) {
            break;
          }
          id v126 = *(id *)(*(void *)(v72 + 56) + 8 * v124);

          uint64_t v204 = v116 - 3;
          if ((v117 & 0xC000000000000001) != 0)
          {
            if (v117 < 0) {
              uint64_t v127 = v117;
            }
            else {
              uint64_t v127 = v117 & 0xFFFFFFFFFFFFFF8;
            }
            id v128 = v126;
            uint64_t v129 = __CocoaDictionary.count.getter();
            if (__OFADD__(v129, 1)) {
              goto LABEL_208;
            }
            Swift::Int v117 = sub_1001A7A10(v127, v129 + 1);
          }
          else
          {
            id v130 = v126;
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v208 = (void *)v117;
          unint64_t v133 = sub_100306FE8((uint64_t)v123);
          uint64_t v134 = *(void *)(v117 + 16);
          BOOL v135 = (v132 & 1) == 0;
          uint64_t v136 = v134 + v135;
          if (__OFADD__(v134, v135)) {
            goto LABEL_207;
          }
          char v137 = v132;
          if (*(void *)(v117 + 24) >= v136)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_100319990();
            }
          }
          else
          {
            sub_100310B54(v136, isUniquelyReferenced_nonNull_native);
            unint64_t v138 = sub_100306FE8((uint64_t)v123);
            if ((v137 & 1) != (v139 & 1)) {
              goto LABEL_213;
            }
            unint64_t v133 = v138;
          }
          Swift::Int v117 = (Swift::Int)v208;
          if (v137)
          {
            uint64_t v118 = v208[7];

            *(void *)(v118 + 8 * v133) = v126;
          }
          else
          {
            v208[(v133 >> 6) + 8] |= 1 << v133;
            *(void *)(*(void *)(v117 + 48) + 8 * v133) = v123;
            *(void *)(*(void *)(v117 + 56) + 8 * v133) = v126;
            uint64_t v140 = *(void *)(v117 + 16);
            BOOL v141 = __OFADD__(v140, 1);
            uint64_t v142 = v140 + 1;
            if (v141) {
              goto LABEL_209;
            }
            *(void *)(v117 + 16) = v142;
            id v143 = v123;
          }
          uint64_t v45 = (uint64_t)v192;
          uint64_t v72 = v194;

          swift_bridgeObjectRelease();
          ++v116;
          unint64_t v114 = v191;
          if (v204 == v189) {
            goto LABEL_176;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

LABEL_191:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_retain_n();
        id v147 = v122;
        id v148 = Logger.logObject.getter();
        os_log_type_t v149 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v148, v149))
        {
          uint64_t v150 = swift_slowAlloc();
          uint64_t v208 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v150 = 136446978;
          uint64_t v211 = (void *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v208);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v150 + 12) = 2082;
          sub_10010B4E8(v175, (uint64_t)v215);
          sub_10073F754((uint64_t)v215, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
          uint64_t v151 = sub_100696CF4();
          unint64_t v153 = v152;
          sub_10073F754((uint64_t)v215, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
          uint64_t v211 = (void *)sub_1000C51B8(v151, v153, (uint64_t *)&v208);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v150 + 22) = 2080;
          id v154 = [v147 description];
          uint64_t v155 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v157 = v156;

          uint64_t v211 = (void *)sub_1000C51B8(v155, v157, (uint64_t *)&v208);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v150 + 32) = 2080;
          id v158 = [v147 description];
          uint64_t v159 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v161 = v160;

          uint64_t v211 = (void *)sub_1000C51B8(v159, v161, (uint64_t *)&v208);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v148, v149, "[%{public}s] Tried to establish realtionship with non-existent target object -- bail {author: %{public}s, cdObjectID: %s, relationshipObjectID: %s}", (uint8_t *)v150, 0x2Au);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        [self noSuchObjectErrorWithObjectID:v147];
        swift_willThrow();

        return;
      case 2:
        unint64_t v5 = (unint64_t)[v11 childSmartListIDsToUndelete];
        sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
        sub_1001207D4();
        uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        if ((v13 & 0xC000000000000001) != 0)
        {
          uint64_t v30 = __CocoaSet.count.getter();
          if (!v30) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v30 = *(void *)(v13 + 16);
          if (!v30) {
            goto LABEL_58;
          }
        }
        if (v30 < 1)
        {
          unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
        }
        else
        {
          sub_100094134((uint64_t *)&unk_10090AF20);
          unint64_t v28 = swift_allocObject();
          int64_t v37 = j__malloc_size((const void *)v28);
          uint64_t v38 = v37 - 32;
          if (v37 < 32) {
            uint64_t v38 = v37 - 25;
          }
          *(void *)(v28 + 16) = v30;
          *(void *)(v28 + 24) = (2 * (v38 >> 3)) | 1;
        }
        swift_bridgeObjectRetain();
        unint64_t v5 = (unint64_t)sub_10020C094(&v212, (void *)(v28 + 32), v30, v13);
        sub_1000C1AF8();
        if (v5 != v30) {
          goto LABEL_187;
        }
        goto LABEL_70;
      case 3:
        id v29 = [v11 parentAccountID];
        goto LABEL_24;
      case 4:
        id v29 = [v11 parentListID];
LABEL_24:
        id v31 = v29;
        uint64_t v32 = v31;
        unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v212 = (uint64_t)_swiftEmptyArrayStorage;
        if (v31)
        {
          id v33 = v31;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          unint64_t v5 = *(void *)((v212 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= *(void *)((v212 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          uint64_t v13 = (uint64_t)&v212;
          specialized Array._endMutation()();
          unint64_t v28 = v212;
        }

        goto LABEL_71;
      case 5:
        unint64_t v5 = (unint64_t)[v11 reminderIDsToUndelete];
        sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
        sub_1001207D4();
        uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        if ((v13 & 0xC000000000000001) != 0)
        {
          uint64_t v35 = __CocoaSet.count.getter();
          if (!v35) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v35 = *(void *)(v13 + 16);
          if (!v35) {
            goto LABEL_58;
          }
        }
        if (v35 < 1)
        {
          unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
        }
        else
        {
          sub_100094134((uint64_t *)&unk_10090AF20);
          unint64_t v28 = swift_allocObject();
          int64_t v41 = j__malloc_size((const void *)v28);
          uint64_t v42 = v41 - 32;
          if (v41 < 32) {
            uint64_t v42 = v41 - 25;
          }
          *(void *)(v28 + 16) = v35;
          *(void *)(v28 + 24) = (2 * (v42 >> 3)) | 1;
        }
        swift_bridgeObjectRetain();
        unint64_t v5 = (unint64_t)sub_10020C094(&v212, (void *)(v28 + 32), v35, v13);
        sub_1000C1AF8();
        if (v5 != v35) {
          goto LABEL_185;
        }
        goto LABEL_70;
      case 6:
        unint64_t v5 = (unint64_t)[v11 sectionIDsToUndelete];
        sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
        sub_1001207D4();
        uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        if ((v13 & 0xC000000000000001) != 0)
        {
          uint64_t v36 = __CocoaSet.count.getter();
          if (!v36) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v36 = *(void *)(v13 + 16);
          if (!v36) {
            goto LABEL_58;
          }
        }
        if (v36 < 1)
        {
          unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
        }
        else
        {
          sub_100094134((uint64_t *)&unk_10090AF20);
          unint64_t v28 = swift_allocObject();
          int64_t v43 = j__malloc_size((const void *)v28);
          uint64_t v44 = v43 - 32;
          if (v43 < 32) {
            uint64_t v44 = v43 - 25;
          }
          *(void *)(v28 + 16) = v36;
          *(void *)(v28 + 24) = (2 * (v44 >> 3)) | 1;
        }
        swift_bridgeObjectRetain();
        unint64_t v5 = (unint64_t)sub_10020C094(&v212, (void *)(v28 + 32), v36, v13);
        sub_1000C1AF8();
        if (v5 != v36) {
          goto LABEL_186;
        }
        goto LABEL_70;
      default:
        sub_100094134((uint64_t *)&unk_10090AF20);
        uint64_t v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_10077A530;
        *(void *)(v26 + 32) = [v11 accountID];
        uint64_t v212 = v26;
        uint64_t v13 = (uint64_t)&v212;
        uint64_t v27 = specialized Array._endMutation()();
        unint64_t v28 = v212;
        goto LABEL_71;
    }
  }
}

void sub_1006FF788(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  unint64_t v6 = (unint64_t *)a3;
  uint64_t v215 = a2;
  uint64_t v9 = *(void *)(a3 + 16);
  unint64_t v8 = *(void *)(a3 + 24);
  uint64_t v204 = &v215;
  uint64_t v205 = v5;
  swift_bridgeObjectRetain();
  uint64_t v10 = (char **)sub_1003B58CC((void (*)(__n128 *__return_ptr, id *))sub_100741B70, (uint64_t)v203, a1);
  uint64_t v202 = v4;
  if (v4) {
    goto LABEL_2;
  }
  uint64_t v11 = v10;
  unint64_t v192 = a1;
  if (qword_1009073A0 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10008E2DC(v12, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  os_log_t log = (os_log_t)v6;
  uint64_t v191 = v5;
  uint64_t v196 = v11;
  if (os_log_type_enabled((os_log_t)v13, v14))
  {
    unint64_t v6 = (unint64_t *)swift_slowAlloc();
    unsigned __int8 v210 = (unint64_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v6 = 136446978;
    uint64_t v206 = (char *)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v210);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *((_WORD *)v6 + 6) = 2048;
    uint64_t v206 = v11[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *((_WORD *)v6 + 11) = 2082;
    sub_1000963CC(0, &qword_10090ABC0);
    id v15 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    os_log_type_t typea = v14;
    unint64_t v18 = v17;

    uint64_t v19 = v16;
    uint64_t v11 = v196;
    uint64_t v206 = (char *)sub_1000C51B8(v19, v18, (uint64_t *)&v210);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *((_WORD *)v6 + 16) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v206 = (char *)sub_1000C51B8(v9, v8, (uint64_t *)&v210);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v13, typea, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v6, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  *(void *)uint64_t type = v11[2];
  if (!*(void *)type) {
    goto LABEL_2;
  }
  uint64_t v211 = (uint64_t)&_swiftEmptySetSingleton;
  uint64_t v197 = v11 + 4;
  swift_bridgeObjectRetain();
  unint64_t v20 = 0;
  while (1)
  {
    if (v20 >= (unint64_t)v11[2])
    {
      __break(1u);
LABEL_171:
      __break(1u);
      __break(1u);
LABEL_172:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_2;
    }
    unint64_t v21 = &v197[2 * v20];
    uint64_t v22 = (char **)v21[1];
    unint64_t v6 = (unint64_t *)v22[2];
    if (v6) {
      break;
    }
LABEL_11:
    if (++v20 == *(void *)type)
    {
      swift_bridgeObjectRelease();
      if (v192 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v38 = *(void *)((v192 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v38)
      {
        unsigned __int8 v210 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        if (v38 < 0)
        {
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          return;
        }
        uint64_t v39 = 0;
        unint64_t v40 = v192;
        unint64_t v6 = &qword_10090ABC0;
        do
        {
          if (v38 == v39) {
            goto LABEL_171;
          }
          if ((v192 & 0xC000000000000001) != 0) {
            id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v41 = *(id *)(v40 + 8 * v39 + 32);
          }
          id v42 = v41;
          sub_100694DE8([v42 remObjectID], &qword_10090ABC0);
          ++v39;

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          unint64_t v40 = v192;
        }
        while (v38 != v39);
        unint64_t v193 = v210;
        uint64_t v11 = v196;
      }
      else
      {
        unint64_t v193 = _swiftEmptyArrayStorage;
      }
      uint64_t v43 = v211;
      if ((v211 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v44 = __CocoaSet.count.getter();
        if (v44)
        {
          uint64_t v45 = v44;
          uint64_t v209 = (char **)_swiftEmptyArrayStorage;
          uint64_t v13 = (uint64_t)&v209;
          specialized ContiguousArray.reserveCapacity(_:)();
          uint64_t v206 = (char *)__CocoaSet.startIndex.getter();
          uint64_t v207 = v46;
          unsigned __int8 v208 = 1;
          if ((v45 & 0x8000000000000000) == 0) {
            goto LABEL_74;
          }
          __break(1u);
LABEL_69:
          __break(1u);

          swift_release();
          goto LABEL_163;
        }
LABEL_80:
        swift_bridgeObjectRelease();
        uint64_t v22 = (char **)_swiftEmptyArrayStorage;
      }
      else
      {
        uint64_t v45 = *(void *)(v211 + 16);
        swift_bridgeObjectRetain();
        if (!v45) {
          goto LABEL_80;
        }
        uint64_t v209 = (char **)_swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        uint64_t v206 = (char *)sub_1003CA790(v43);
        uint64_t v207 = v47;
        unsigned __int8 v208 = v48 & 1;
        do
        {
LABEL_74:
          while (1)
          {
            uint64_t v55 = (uint64_t)v206;
            uint64_t v54 = v207;
            uint64_t v56 = v208;
            sub_1003C9F34((uint64_t)v206, v207, v208, v43);
            uint64_t v58 = v57;
            sub_1000963CC(0, (unint64_t *)&unk_10090AF40);

            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            if ((v43 & 0xC000000000000001) != 0) {
              break;
            }
            uint64_t v49 = sub_1003C9E34(v55, v54, v56, v43);
            uint64_t v51 = v50;
            char v53 = v52;
            sub_1000E4EA4(v55, v54, v56);
            uint64_t v206 = (char *)v49;
            uint64_t v207 = v51;
            unsigned __int8 v208 = v53 & 1;
            uint64_t v11 = v196;
            if (!--v45) {
              goto LABEL_79;
            }
          }
          if ((v56 & 1) == 0) {
            goto LABEL_187;
          }
          uint64_t v11 = v196;
          if (__CocoaSet.Index.handleBitPattern.getter()) {
            swift_isUniquelyReferenced_nonNull_native();
          }
          sub_100094134(&qword_100916988);
          char v59 = (void (*)(unint64_t **, void))Set.Index._asCocoa.modify();
          __CocoaSet.formIndex(after:isUnique:)();
          v59(&v210, 0);
          --v45;
        }
        while (v45);
LABEL_79:
        sub_1000E4EA4((uint64_t)v206, v207, v208);
        uint64_t v22 = v209;
        swift_bridgeObjectRelease();
      }
      unint64_t v27 = (unint64_t)log;
      uint64_t v26 = v191;
      uint64_t v32 = (uint64_t)sub_100711100((uint64_t)v22, (uint64_t)log);
      uint64_t v25 = 0;
      unint64_t v6 = v193;
LABEL_83:
      uint64_t v23 = (char *)v32;
      swift_bridgeObjectRelease();
      uint64_t v33 = (uint64_t)sub_100714A48((uint64_t)v6, v27);
      uint64_t v202 = v25;
      if (!v25) {
        goto LABEL_86;
      }
LABEL_84:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_163;
    }
  }
  unint64_t v200 = v20;
  uint64_t v11 = v22 + 4;
  uint64_t v23 = *v21;
  swift_bridgeObjectRetain();
  unint64_t v24 = 0;
  while (1)
  {
    if (v24 >= (unint64_t)v22[2]) {
      goto LABEL_69;
    }
    if (*((unsigned char *)v11 + v24)) {
      break;
    }
    uint64_t v25 = [v23 listIDsToUndelete];
    sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
    sub_1001207D4();
    uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    if ((v13 & 0xC000000000000001) != 0)
    {
      uint64_t v26 = __CocoaSet.count.getter();
      if (!v26) {
        goto LABEL_34;
      }
    }
    else
    {
      uint64_t v26 = *(void *)(v13 + 16);
      if (!v26)
      {
LABEL_34:
        uint64_t v32 = swift_bridgeObjectRelease();
        unint64_t v27 = (unint64_t)_swiftEmptyArrayStorage;
        if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
          goto LABEL_42;
        }
        goto LABEL_35;
      }
    }
    if (v26 < 1)
    {
      unint64_t v27 = (unint64_t)_swiftEmptyArrayStorage;
    }
    else
    {
      sub_100094134((uint64_t *)&unk_10090AF20);
      unint64_t v27 = swift_allocObject();
      int64_t v30 = j__malloc_size((const void *)v27);
      uint64_t v31 = v30 - 32;
      if (v30 < 32) {
        uint64_t v31 = v30 - 25;
      }
      *(void *)(v27 + 16) = v26;
      *(void *)(v27 + 24) = (2 * (v31 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_10020C094(&v210, (void *)(v27 + 32), v26, v13);
    uint64_t v33 = sub_1000C1AF8();
    if (v25 != (void *)v26) {
      goto LABEL_85;
    }
LABEL_41:
    uint64_t v32 = swift_bridgeObjectRelease();
    if (!(v27 >> 62))
    {
LABEL_42:
      uint64_t v26 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_43;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v32 = swift_bridgeObjectRelease();
LABEL_43:
    if (v26)
    {
      if (v26 < 1)
      {
        __break(1u);
        goto LABEL_83;
      }
      if ((v27 & 0xC000000000000001) != 0)
      {
        uint64_t v34 = 0;
        do
        {
          uint64_t v35 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          ++v34;
          uint64_t v13 = (uint64_t)&v211;
          sub_10031DE54(&v210, v35);
        }
        while (v26 != v34);
      }
      else
      {
        uint64_t v36 = 0;
        do
        {
          int64_t v37 = *(void **)(v27 + 8 * v36++ + 32);
          uint64_t v13 = (uint64_t)&v211;
          sub_10031DE54(&v210, v37);
        }
        while (v26 != v36);
      }
    }
    swift_bridgeObjectRelease();
    if ((unint64_t *)++v24 == v6)
    {

      swift_bridgeObjectRelease();
      uint64_t v11 = v196;
      unint64_t v20 = v200;
      goto LABEL_11;
    }
  }
  uint64_t v25 = [v23 smartListIDsToUndelete];
  sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
  sub_1001207D4();
  uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v13 & 0xC000000000000001) != 0)
  {
    uint64_t v26 = __CocoaSet.count.getter();
    if (!v26) {
      goto LABEL_34;
    }
  }
  else
  {
    uint64_t v26 = *(void *)(v13 + 16);
    if (!v26) {
      goto LABEL_34;
    }
  }
  if (v26 < 1)
  {
    unint64_t v27 = (unint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    sub_100094134((uint64_t *)&unk_10090AF20);
    unint64_t v27 = swift_allocObject();
    int64_t v28 = j__malloc_size((const void *)v27);
    uint64_t v29 = v28 - 32;
    if (v28 < 32) {
      uint64_t v29 = v28 - 25;
    }
    *(void *)(v27 + 16) = v26;
    *(void *)(v27 + 24) = (2 * (v29 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_10020C094(&v210, (void *)(v27 + 32), v26, v13);
  uint64_t v33 = sub_1000C1AF8();
  if (v25 == (void *)v26) {
    goto LABEL_41;
  }
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  uint64_t v60 = v33;
  swift_bridgeObjectRelease();
  uint64_t v61 = (uint64_t *)(v27 + 48);
  swift_beginAccess();
  if (!v11[2])
  {
LABEL_162:
    __break(1u);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
LABEL_163:
    swift_bridgeObjectRelease();
LABEL_2:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v62 = 0;
  uint64_t v176 = v26 + 24;
  uint64_t v22 = &selRef_intersectsSet_;
  unint64_t v174 = (uint64_t *)(v27 + 48);
  uint64_t v201 = v23;
  uint64_t v185 = v60;
  while (2)
  {
    uint64_t v177 = v62;
    char v63 = &v197[2 * v62];
    uint64_t v186 = v63[1];
    unint64_t v6 = *v63;
    swift_bridgeObjectRetain();
    char v64 = sub_100694DE8([v6 v22[446]], &qword_10090ABC0);
    if (v202) {
      goto LABEL_172;
    }
    uint64_t v65 = v64;

    uint64_t v66 = *v61;
    if ((v66 & 0xC000000000000001) != 0)
    {
      uint64_t v67 = v6;
      id v68 = v65;
      swift_bridgeObjectRetain();
      uint64_t v69 = __CocoaDictionary.lookup(_:)();
      if (v69)
      {
        uint64_t v209 = (char **)v69;
        sub_1000963CC(0, (unint64_t *)&qword_100909B00);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        uint64_t v70 = v206;
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
        uint64_t v70 = 0;
      }
      uint64_t v23 = v201;
      uint64_t v60 = v185;
    }
    else
    {
      if (*(void *)(v66 + 16))
      {
        uint64_t v67 = v6;
        id v71 = v65;
        swift_bridgeObjectRetain();
        unint64_t v72 = sub_100306FE8((uint64_t)v71);
        if (v73)
        {
          uint64_t v70 = (char *)*(id *)(*(void *)(v66 + 56) + 8 * v72);

          swift_bridgeObjectRelease();
          goto LABEL_100;
        }

        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v67 = v6;
      }
      uint64_t v70 = 0;
    }
LABEL_100:

    uint64_t v74 = v67;
    uint64_t v184 = v67;
    if (*(void *)(v60 + 16))
    {
      id v75 = v65;
      unint64_t v76 = sub_10030703C(v75);
      if (v77)
      {
        id v182 = *(id *)(*(void *)(v60 + 56) + 8 * v76);

        id v78 = v186;
        swift_bridgeObjectRetain_n();
        id v79 = v75;
        swift_retain_n();
        id v80 = v79;
        id v81 = Logger.logObject.getter();
        os_log_type_t v82 = static os_log_type_t.default.getter();
        unint64_t v183 = v80;
        if (os_log_type_enabled(v81, v82))
        {
          os_log_type_t v180 = v82;
          os_log_t loga = v81;
          uint64_t v83 = swift_slowAlloc();
          uint64_t v194 = (void *)swift_slowAlloc();
          uint64_t v206 = (char *)swift_slowAlloc();
          *(_DWORD *)uint64_t v83 = 136446978;
          uint64_t v209 = (char **)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v206);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v83 + 12) = 2082;
          sub_10010B4E8(v176, (uint64_t)v214);
          sub_10073F754((uint64_t)v214, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
          uint64_t v84 = sub_100696CF4();
          unint64_t v85 = (char **)v80;
          unint64_t v87 = v86;
          sub_10073F754((uint64_t)v214, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
          uint64_t v209 = (char **)sub_1000C51B8(v84, v87, (uint64_t *)&v206);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v83 + 22) = 2114;
          uint64_t v209 = v85;
          unint64_t v88 = v85;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v194 = v85;

          *(_WORD *)(v83 + 32) = 2082;
          int64_t v89 = *((void *)v186 + 2);
          if (v89)
          {
            uint64_t v209 = (char **)_swiftEmptyArrayStorage;
            sub_1001DE058(0, v89, 0);
            char v90 = v186;
            uint64_t v91 = 0;
            id v92 = v209;
            id v93 = v209[2];
            uint64_t v94 = 2 * (void)v93;
            do
            {
              unint64_t v95 = (unint64_t)&v93[v91];
              if (v90[v91 + 32]) {
                unint64_t v96 = 0xD000000000000016;
              }
              else {
                unint64_t v96 = 0xD000000000000011;
              }
              if (v90[v91 + 32]) {
                unint64_t v97 = 0x80000001007C65D0;
              }
              else {
                unint64_t v97 = 0x80000001007C65B0;
              }
              uint64_t v209 = v92;
              unint64_t v98 = (unint64_t)v92[3];
              unint64_t v99 = v95 + 1;
              if (v95 >= v98 >> 1)
              {
                sub_1001DE058(v98 > 1, v95 + 1, 1);
                char v90 = v186;
                id v92 = v209;
              }
              ++v91;
              v92[2] = (char *)v99;
              int64_t v100 = &v92[v94];
              v100[4] = (char *)v96;
              v100[5] = (char *)v97;
              v94 += 2;
            }
            while (v89 != v91);
            id v78 = v90;
            swift_bridgeObjectRelease();
            uint64_t v11 = v196;
            uint64_t v23 = v201;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v101 = Array.description.getter();
          unint64_t v103 = v102;
          swift_bridgeObjectRelease();
          uint64_t v209 = (char **)sub_1000C51B8(v101, v103, (uint64_t *)&v206);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, loga, v180, "[%{public}s] UPDATE RELATIONSHIPS {author: %{public}s, objectID: %{public}@, changedRelationshipKeys: %{public}s}", (uint8_t *)v83, 0x2Au);
          sub_100094134((uint64_t *)&unk_10090A040);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v26 = v191;
          uint64_t v74 = v184;
          uint64_t v60 = v185;
          id v80 = v183;
        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
        }
        unint64_t v104 = v78;
        uint64_t v178 = *((void *)v78 + 2);
        if (!v178)
        {
          id v143 = v80;
LABEL_157:
          swift_bridgeObjectRelease();
          unint64_t v144 = v177 + 1;
          if (*(unsigned char *)(v26 + 104) == 1)
          {
            id v145 = v182;
            [v145 updateChangeCount];
          }
          else
          {
          }
          uint64_t v61 = v174;
          uint64_t v62 = v177 + 1;
          if (v144 == *(void *)type) {
            goto LABEL_84;
          }
          uint64_t v22 = &selRef_intersectsSet_;
          if (v144 >= (unint64_t)v11[2]) {
            goto LABEL_162;
          }
          continue;
        }
        unint64_t v105 = 0;
        unint64_t v106 = v104 + 32;
        uint64_t v175 = v104 + 32;
        while (2)
        {
          if (v105 >= *((void *)v104 + 2)) {
            goto LABEL_186;
          }
          unint64_t v179 = v105;
          char v181 = v106[v105];
          unint64_t v107 = &selRef_smartListIDsToUndelete;
          if (!v181) {
            unint64_t v107 = &selRef_listIDsToUndelete;
          }
          id v108 = [v74 *v107];
          sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
          sub_1001207D4();
          uint64_t v109 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

          unint64_t v110 = sub_10020A3A0(v109);
          swift_bridgeObjectRelease();
          if (!((unint64_t)v110 >> 62))
          {
            uint64_t v111 = *(void *)(((unint64_t)v110 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v111) {
              goto LABEL_125;
            }
LABEL_153:
            Swift::Int v113 = (Swift::Int)_swiftEmptyDictionarySingleton;
LABEL_154:
            swift_bridgeObjectRelease();
            uint64_t v142 = sub_100420CF8(v113);
            swift_bridgeObjectRelease();
            uint64_t v74 = v184;
            sub_10028D180(v184, (uint64_t)v182, v181, v142);
            unint64_t v105 = v179 + 1;
            swift_bridgeObjectRelease();
            uint64_t v60 = v185;
            unint64_t v104 = v186;
            id v143 = v183;
            unint64_t v106 = v175;
            if (v179 + 1 == v178) {
              goto LABEL_157;
            }
            continue;
          }
          break;
        }
        swift_bridgeObjectRetain();
        uint64_t v111 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v111) {
          goto LABEL_153;
        }
LABEL_125:
        unint64_t v195 = (unint64_t)v110 & 0xC000000000000001;
        uint64_t v112 = 4;
        Swift::Int v113 = (Swift::Int)_swiftEmptyDictionarySingleton;
        os_log_t logb = v110;
        uint64_t v187 = v111;
        while (2)
        {
          if (v195) {
            uint64_t v115 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            uint64_t v115 = v110[v112].isa;
          }
          uint64_t v116 = v115;
          uint64_t v117 = v112 - 3;
          if (__OFADD__(v112 - 4, 1)) {
            goto LABEL_182;
          }
          sub_1000963CC(0, (unint64_t *)&unk_10090AF40);
          uint64_t v118 = v116;
          id v119 = v118;
          if (!*((void *)v23 + 2))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_166:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_retain_n();
            id v146 = v119;
            id v147 = Logger.logObject.getter();
            os_log_type_t v148 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v147, v148))
            {
              uint64_t v149 = swift_slowAlloc();
              uint64_t v206 = (char *)swift_slowAlloc();
              *(_DWORD *)uint64_t v149 = 136446978;
              uint64_t v209 = (char **)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v206);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v149 + 12) = 2082;
              sub_10010B4E8(v176, (uint64_t)v213);
              sub_10073F754((uint64_t)v213, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
              uint64_t v150 = sub_100696CF4();
              unint64_t v152 = v151;
              sub_10073F754((uint64_t)v213, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
              uint64_t v209 = (char **)sub_1000C51B8(v150, v152, (uint64_t *)&v206);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v149 + 22) = 2080;
              id v153 = [(objc_class *)v146 description];
              uint64_t v154 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v156 = v155;

              uint64_t v209 = (char **)sub_1000C51B8(v154, v156, (uint64_t *)&v206);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              *(_WORD *)(v149 + 32) = 2080;
              id v157 = [(objc_class *)v146 description];
              uint64_t v158 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v160 = v159;

              uint64_t v209 = (char **)sub_1000C51B8(v158, v160, (uint64_t *)&v206);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v147, v148, "[%{public}s] Tried to establish realtionship with non-existent target object -- bail {author: %{public}s, cdObjectID: %s, relationshipObjectID: %s}", (uint8_t *)v149, 0x2Au);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_release_n();
            }
            [self noSuchObjectErrorWithObjectID:v146];
            swift_willThrow();

            return;
          }
          uint64_t v120 = v118;
          unint64_t v121 = sub_10030703C(v120);
          if ((v122 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            goto LABEL_166;
          }
          id v123 = *(id *)(*((void *)v23 + 7) + 8 * v121);

          if ((v113 & 0xC000000000000001) != 0)
          {
            if (v113 < 0) {
              uint64_t v124 = v113;
            }
            else {
              uint64_t v124 = v113 & 0xFFFFFFFFFFFFFF8;
            }
            id v125 = v123;
            uint64_t v126 = __CocoaDictionary.count.getter();
            if (__OFADD__(v126, 1)) {
              goto LABEL_184;
            }
            Swift::Int v113 = sub_1001A7A10(v124, v126 + 1);
          }
          else
          {
            id v127 = v123;
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v206 = (char *)v113;
          unint64_t v130 = sub_100306FE8((uint64_t)v120);
          uint64_t v131 = *(void *)(v113 + 16);
          BOOL v132 = (v129 & 1) == 0;
          uint64_t v133 = v131 + v132;
          if (__OFADD__(v131, v132)) {
            goto LABEL_183;
          }
          char v134 = v129;
          if (*(void *)(v113 + 24) >= v133)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              Swift::Int v113 = (Swift::Int)v206;
              if ((v129 & 1) == 0) {
                goto LABEL_148;
              }
            }
            else
            {
              sub_100319990();
              Swift::Int v113 = (Swift::Int)v206;
              if ((v134 & 1) == 0) {
                goto LABEL_148;
              }
            }
          }
          else
          {
            sub_100310B54(v133, isUniquelyReferenced_nonNull_native);
            unint64_t v135 = sub_100306FE8((uint64_t)v120);
            if ((v134 & 1) != (v136 & 1)) {
              goto LABEL_188;
            }
            unint64_t v130 = v135;
            Swift::Int v113 = (Swift::Int)v206;
            if ((v134 & 1) == 0)
            {
LABEL_148:
              *(void *)(v113 + 8 * (v130 >> 6) + 64) |= 1 << v130;
              uint64_t v137 = 8 * v130;
              *(void *)(*(void *)(v113 + 48) + v137) = v120;
              *(void *)(*(void *)(v113 + 56) + v137) = v123;
              uint64_t v138 = *(void *)(v113 + 16);
              BOOL v139 = __OFADD__(v138, 1);
              uint64_t v140 = v138 + 1;
              if (v139) {
                goto LABEL_185;
              }
              *(void *)(v113 + 16) = v140;
              BOOL v141 = v120;
              goto LABEL_127;
            }
          }
          uint64_t v114 = *(void *)(v113 + 56);

          *(void *)(v114 + 8 * v130) = v123;
LABEL_127:
          uint64_t v26 = v191;
          uint64_t v11 = v196;
          uint64_t v23 = v201;

          swift_bridgeObjectRelease();
          ++v112;
          unint64_t v110 = logb;
          if (v117 == v187) {
            goto LABEL_154;
          }
          continue;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v161 = v65;
  swift_retain_n();
  id v162 = v161;
  id v163 = Logger.logObject.getter();
  os_log_type_t v164 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v163, v164))
  {
    uint64_t v165 = swift_slowAlloc();
    uint64_t v206 = (char *)swift_slowAlloc();
    *(_DWORD *)uint64_t v165 = 136446722;
    uint64_t v209 = (char **)sub_1000C51B8(0xD000000000000016, 0x80000001007DBFD0, (uint64_t *)&v206);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v165 + 12) = 2082;
    sub_10010B4E8(v176, (uint64_t)v212);
    sub_10073F754((uint64_t)v212, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
    uint64_t v166 = sub_100696CF4();
    unint64_t v168 = v167;
    sub_10073F754((uint64_t)v212, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
    uint64_t v209 = (char **)sub_1000C51B8(v166, v168, (uint64_t *)&v206);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v165 + 22) = 2080;
    id v169 = [v162 description];
    uint64_t v170 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v172 = v171;

    unint64_t v173 = v184;
    uint64_t v209 = (char **)sub_1000C51B8(v170, v172, (uint64_t *)&v206);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v163, v164, "[%{public}s] Tried to establish relationship with non-existing object -- skipping {author: %{public}s, cdObjectID: %s}", (uint8_t *)v165, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    unint64_t v173 = v67;
  }
  [self noSuchObjectErrorWithObjectID:v162];
  swift_willThrow();
}

void sub_100701464(unint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v5 = v3;
  unint64_t v6 = a3;
  uint64_t v75 = a2;
  uint64_t v9 = a3[2];
  uint64_t v8 = a3[3];
  v70[2] = &v75;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_100692158((uint64_t (*)(id *))static REMCDRecurrenceRule.shouldAttemptLocalObjectMerge(), v70, a1);
  if (v4) {
    goto LABEL_21;
  }
  unint64_t v11 = (unint64_t)v10;
  if (qword_1009073A0 != -1) {
    goto LABEL_61;
  }
LABEL_3:
  uint64_t v12 = type metadata accessor for Logger();
  sub_10008E2DC(v12, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v63 = static os_log_type_t.info.getter();
  os_log_type_t v14 = v13;
  unint64_t v15 = v11 >> 62;
  uint64_t v67 = v6;
  uint64_t v69 = (void *)v11;
  unint64_t v64 = v11 >> 62;
  unint64_t v66 = v5;
  if (os_log_type_enabled(v13, v63))
  {
    uint64_t v62 = v9;
    uint64_t v9 = swift_slowAlloc();
    v73[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446978;
    unint64_t v72 = (void *)sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 12) = 2048;
    if (!v15)
    {
      uint64_t v16 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_6;
    }
    goto LABEL_64;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v15)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v21 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v8 = (uint64_t)_swiftEmptyArrayStorage;
    if (!v21) {
      break;
    }
    v73[0] = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v21 & 0x8000000000000000) == 0)
    {
      uint64_t v8 = 0;
      unint64_t v5 = v11 & 0xC000000000000001;
      unint64_t v6 = (void *)0xD000000000000014;
      uint64_t v9 = 0x80000001007DC170;
      while (v21 != v8)
      {
        if (v5) {
          id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v22 = *(id *)(v11 + 8 * v8 + 32);
        }
        id v23 = v22;
        sub_100695DC4([v23 remObjectID], (void (*)(void))type metadata accessor for REMCDSavedAttachment, 0xD000000000000014, (void *)0x80000001007DC170);

        ++v8;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        unint64_t v11 = (unint64_t)v69;
        if (v21 == v8)
        {
          uint64_t v8 = v73[0];
          unint64_t v6 = v67;
          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      swift_once();
      goto LABEL_3;
    }
    __break(1u);
LABEL_64:
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    unint64_t v72 = (void *)v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 22) = 2082;
    type metadata accessor for REMCDSavedAttachment();
    id v17 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;

    unint64_t v11 = (unint64_t)v69;
    unint64_t v72 = (void *)sub_1000C51B8(v18, v20, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 32) = 2082;
    swift_bridgeObjectRetain();
    unint64_t v72 = (void *)sub_1000C51B8(v62, v8, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v63, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v9, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v15 = v64;
    unint64_t v6 = v67;
  }
LABEL_22:
  unint64_t v24 = sub_100710C98(v8, (uint64_t)v6);
  swift_bridgeObjectRelease();
  if (v64)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v9) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v9)
    {
LABEL_20:
      swift_bridgeObjectRelease();
LABEL_21:
      swift_bridgeObjectRelease();
      return;
    }
  }
  unint64_t v65 = v11 & 0xC000000000000001;
  char v59 = v6 + 6;
  swift_beginAccess();
  uint64_t v8 = 4;
  uint64_t v62 = 0x80000001007DC170;
  uint64_t v60 = v9;
  uint64_t v61 = v24;
  while (1)
  {
    uint64_t v25 = v8 - 4;
    if (v65)
    {
      id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      unint64_t v5 = v8 - 3;
      if (__OFADD__(v25, 1)) {
        goto LABEL_60;
      }
    }
    else
    {
      id v26 = *(id *)(v11 + 8 * v8);
      unint64_t v5 = v8 - 3;
      if (__OFADD__(v25, 1)) {
        goto LABEL_60;
      }
    }
    id v27 = v26;
    int64_t v28 = sub_100695DC4([v27 remObjectID], (void (*)(void))type metadata accessor for REMCDSavedAttachment, 0xD000000000000014, (void *)0x80000001007DC170);

    if (!v24[2])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_55;
    }
    id v29 = v28;
    unint64_t v30 = sub_10030703C(v29);
    if ((v31 & 1) == 0) {
      break;
    }
    id v32 = *(id *)(v24[7] + 8 * v30);

    uint64_t v33 = *v59;
    id v68 = v32;
    if ((*v59 & 0xC000000000000001) != 0)
    {
      if (v33 < 0) {
        unint64_t v6 = (void *)*v59;
      }
      else {
        unint64_t v6 = (void *)(v33 & 0xFFFFFFFFFFFFFF8);
      }
      id v34 = v29;
      id v35 = v32;
      swift_bridgeObjectRetain();
      uint64_t v36 = __CocoaDictionary.lookup(_:)();
      if (!v36)
      {
LABEL_47:

        swift_bridgeObjectRelease();
        goto LABEL_49;
      }
      unint64_t v6 = (void *)v36;
      uint64_t v71 = v36;
      sub_1000963CC(0, (unint64_t *)&qword_100909B00);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v37 = v72;
      swift_unknownObjectRelease();
    }
    else
    {
      if (!*(void *)(v33 + 16))
      {
        id v41 = v32;
        goto LABEL_49;
      }
      id v34 = v29;
      id v38 = v32;
      swift_bridgeObjectRetain();
      unint64_t v39 = sub_100306FE8((uint64_t)v34);
      if ((v40 & 1) == 0) {
        goto LABEL_47;
      }
      id v37 = *(id *)(*(void *)(v33 + 56) + 8 * v39);
    }

    swift_bridgeObjectRelease();
    if (v37)
    {

LABEL_51:
      goto LABEL_28;
    }
LABEL_49:
    id v42 = v29;
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      unint64_t v6 = (void *)swift_slowAlloc();
      unint64_t v72 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 136446466;
      *(void *)(v45 + 4) = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v72);
      *(_WORD *)(v45 + 12) = 2114;
      *(void *)(v45 + 14) = v42;
      *unint64_t v6 = v42;

      _os_log_impl((void *)&_mh_execute_header, v43, v44, "[%{public}s] Skipping mutateRelationshipOrdering() since this ingestable is immutable and is not a new insertion {objectID: %{public}@}", (uint8_t *)v45, 0x16u);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_51;
    }

LABEL_28:
    unint64_t v11 = (unint64_t)v69;
    ++v8;
    uint64_t v9 = v60;
    unint64_t v24 = v61;
    if (v5 == v60) {
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_55:
  id v46 = v28;
  swift_retain_n();
  id v47 = v46;
  char v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = swift_slowAlloc();
    unint64_t v72 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v50 = 136446722;
    uint64_t v71 = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v50 + 12) = 2082;
    id v58 = v27;
    sub_10010B4E8(v66 + 24, (uint64_t)v74);
    sub_10073F754((uint64_t)v74, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
    uint64_t v51 = sub_100696CF4();
    unint64_t v53 = v52;
    sub_10073F754((uint64_t)v74, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
    uint64_t v71 = sub_1000C51B8(v51, v53, (uint64_t *)&v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v50 + 22) = 2080;
    id v54 = [v47 description];
    uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v57 = v56;

    id v27 = v58;
    uint64_t v71 = sub_1000C51B8(v55, v57, (uint64_t *)&v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "[%{public}s] Tried to mutate ordering in relationships with non-existent target object -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v50, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  [self noSuchObjectErrorWithObjectID:v47];
  swift_willThrow();
}

void sub_10070201C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)a3;
  uint64_t v75 = a2;
  unint64_t v6 = *(char ***)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 24);
  v70[2] = &v75;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_100692158((uint64_t (*)(id *))sub_1007426B8, v70, a1);
  if (v3) {
    goto LABEL_21;
  }
  unint64_t v9 = (unint64_t)v8;
  if (qword_1009073A0 != -1) {
    goto LABEL_59;
  }
LABEL_3:
  uint64_t v10 = 0xD000000000000013;
  uint64_t v11 = type metadata accessor for Logger();
  sub_10008E2DC(v11, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v12 = Logger.logObject.getter();
  uint64_t v13 = static os_log_type_t.info.getter();
  os_log_t log = v12;
  unint64_t v14 = v9 >> 62;
  uint64_t v69 = (void *)v9;
  unint64_t v63 = v9 >> 62;
  unint64_t v64 = v4;
  if (os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    LOBYTE(v62) = v13;
    uint64_t v13 = swift_slowAlloc();
    v73[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446978;
    unint64_t v72 = (void *)sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2048;
    uint64_t v10 = (uint64_t)v6;
    if (!v14)
    {
      uint64_t v15 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_6;
    }
    goto LABEL_62;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v7 = (uint64_t)_swiftEmptyArrayStorage;
    if (!v20) {
      break;
    }
    v73[0] = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v20 & 0x8000000000000000) == 0)
    {
      uint64_t v7 = 0;
      unint64_t v21 = v9 & 0xC000000000000001;
      unint64_t v6 = &selRef_intersectsSet_;
      uint64_t v4 = (void *)0x80000001007DC150;
      while (v20 != v7)
      {
        if (v21) {
          id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v22 = *(id *)(v9 + 8 * v7 + 32);
        }
        id v23 = v22;
        sub_100695DC4([v23 remObjectID], (void (*)(void))type metadata accessor for REMCDManualSortHint, 0xD000000000000013, (void *)0x80000001007DC150);

        ++v7;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        unint64_t v9 = (unint64_t)v69;
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v20 == v7)
        {
          uint64_t v7 = v73[0];
          uint64_t v4 = v64;
          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      swift_once();
      goto LABEL_3;
    }
    __break(1u);
LABEL_62:
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    unint64_t v72 = (void *)v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 22) = 2082;
    type metadata accessor for REMCDManualSortHint();
    id v16 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v19 = v18;

    unint64_t v72 = (void *)sub_1000C51B8(v17, v19, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unint64_t v9 = (unint64_t)v69;
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 32) = 2082;
    swift_bridgeObjectRetain();
    unint64_t v72 = (void *)sub_1000C51B8(v10, v7, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, (os_log_type_t)v62, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v13, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v14 = v63;
    uint64_t v4 = v64;
  }
LABEL_22:
  unint64_t v24 = sub_1007119D0(v7, (uint64_t)v4);
  swift_bridgeObjectRelease();
  if (v63)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
    {
LABEL_20:
      swift_bridgeObjectRelease();
LABEL_21:
      swift_bridgeObjectRelease();
      return;
    }
  }
  unint64_t v65 = v9 & 0xC000000000000001;
  uint64_t v60 = v4 + 6;
  swift_beginAccess();
  uint64_t v25 = 4;
  uint64_t v61 = (char **)v7;
  uint64_t v62 = v24;
  while (1)
  {
    uint64_t v26 = v25 - 4;
    if (v65)
    {
      id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      unint64_t v6 = (char **)(v25 - 3);
      if (__OFADD__(v26, 1)) {
        goto LABEL_58;
      }
    }
    else
    {
      id v27 = *(id *)(v9 + 8 * v25);
      unint64_t v6 = (char **)(v25 - 3);
      if (__OFADD__(v26, 1)) {
        goto LABEL_58;
      }
    }
    uint64_t v4 = v27;
    int64_t v28 = sub_100695DC4([v4 remObjectID], (void (*)(void))type metadata accessor for REMCDManualSortHint, 0xD000000000000013, (void *)0x80000001007DC150);

    if (!v24[2])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_53;
    }
    id v29 = v28;
    unint64_t v30 = sub_10030703C(v29);
    if ((v31 & 1) == 0) {
      break;
    }
    id v32 = *(id *)(v24[7] + 8 * v30);

    uint64_t v33 = *v60;
    if ((*v60 & 0xC000000000000001) != 0)
    {
      id v34 = v29;
      id v35 = v32;
      swift_bridgeObjectRetain();
      uint64_t v36 = __CocoaDictionary.lookup(_:)();
      if (v36)
      {
        uint64_t v71 = v36;
        sub_1000963CC(0, (unint64_t *)&qword_100909B00);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v37 = v72;
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
        id v37 = 0;
      }
    }
    else
    {
      if (!*(void *)(v33 + 16))
      {
        id v42 = v32;
LABEL_45:
        id v37 = 0;
        goto LABEL_46;
      }
      id v38 = v29;
      id v39 = v32;
      swift_bridgeObjectRetain();
      unint64_t v40 = sub_100306FE8((uint64_t)v38);
      if ((v41 & 1) == 0)
      {

        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
      id v37 = *(id *)(*(void *)(v33 + 56) + 8 * v40);

      swift_bridgeObjectRelease();
    }
LABEL_46:

    uint64_t v43 = *(void *)(v68 + 72);
    id v44 = [v4 remObjectID];
    uint64_t v45 = v44;
    if (*(void *)(v43 + 16))
    {
      sub_100306FE8((uint64_t)v44);
      unint64_t v24 = v62;
      if (v46) {
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      unint64_t v24 = v62;
    }

    swift_bridgeObjectRelease();
    ++v25;
    uint64_t v7 = (uint64_t)v61;
    unint64_t v9 = (unint64_t)v69;
    if (v6 == v61) {
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_53:
  id v47 = v28;
  swift_retain_n();
  id v48 = v47;
  os_log_type_t v49 = Logger.logObject.getter();
  os_log_type_t v50 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v49, v50))
  {
    os_log_type_t loga = v50;
    uint64_t v51 = swift_slowAlloc();
    unint64_t v72 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v51 = 136446722;
    uint64_t v71 = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v51 + 12) = 2082;
    sub_10010B4E8(v68 + 24, (uint64_t)v74);
    sub_10073F754((uint64_t)v74, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
    uint64_t v52 = sub_100696CF4();
    unint64_t v53 = v4;
    unint64_t v55 = v54;
    sub_10073F754((uint64_t)v74, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
    uint64_t v71 = sub_1000C51B8(v52, v55, (uint64_t *)&v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 22) = 2080;
    id v56 = [v48 description];
    uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v59 = v58;

    uint64_t v4 = v53;
    uint64_t v71 = sub_1000C51B8(v57, v59, (uint64_t *)&v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v49, loga, "[%{public}s] Tried to mutate ordering in relationships with non-existent target object -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v51, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  [self noSuchObjectErrorWithObjectID:v48];
  swift_willThrow();
}

void sub_100702AF8(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(id *), unint64_t *a5, uint64_t a6, uint64_t (*a7)(uint64_t, unint64_t), unint64_t *a8)
{
  uint64_t v13 = v8;
  uint64_t v92 = a2;
  uint64_t v17 = *(void *)(a3 + 16);
  unint64_t v16 = *(void *)(a3 + 24);
  v87[2] = &v92;
  v87[3] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v18 = sub_100692158(a4, v87, a1);
  if (v9) {
    goto LABEL_22;
  }
  uint64_t v76 = v17;
  unint64_t v77 = a3;
  unint64_t v81 = v16;
  unint64_t v82 = (unint64_t)v18;
  uint64_t v19 = (uint64_t)a8;
  uint64_t v80 = v13;
  if (qword_1009073A0 != -1) {
    goto LABEL_59;
  }
LABEL_3:
  uint64_t v20 = type metadata accessor for Logger();
  sub_10008E2DC(v20, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  unint64_t v21 = Logger.logObject.getter();
  os_log_type_t v74 = static os_log_type_t.info.getter();
  unint64_t v22 = v82 >> 62;
  uint64_t v85 = a6;
  unint64_t v86 = a5;
  unint64_t v78 = v82 >> 62;
  if (os_log_type_enabled(v21, v74))
  {
    os_log_t log = v21;
    a6 = swift_slowAlloc();
    v90[0] = swift_slowAlloc();
    *(_DWORD *)a6 = 136446978;
    int64_t v89 = (void *)sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(a6 + 12) = 2048;
    if (!v22)
    {
      unint64_t v23 = v82;
      uint64_t v24 = *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_6;
    }
    goto LABEL_62;
  }
  id v29 = (unint64_t *)v19;

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  unint64_t v23 = v82;
  while (1)
  {
    if (v22)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v19 = (uint64_t)_swiftEmptyArrayStorage;
    if (!v30) {
      break;
    }
    v90[0] = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v30 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = 0;
      while (v30 != v19)
      {
        if ((v23 & 0xC000000000000001) != 0) {
          id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v31 = *(id *)(v23 + 8 * v19 + 32);
        }
        id v32 = v31;
        sub_100694DE8([v32 remObjectID], v86);

        ++v19;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        a5 = *(unint64_t **)(v90[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        a6 = v85;
        if (v30 == v19)
        {
          uint64_t v19 = v90[0];
          uint64_t v33 = a7;
          a5 = a8;
          id v34 = v86;
          unint64_t v22 = v78;
          goto LABEL_20;
        }
      }
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      swift_once();
      goto LABEL_3;
    }
    __break(1u);
LABEL_62:
    unint64_t v23 = v82;
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    int64_t v89 = (void *)v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(a6 + 22) = 2082;
    unint64_t v82 = a6 + 24;
    sub_1000963CC(0, a5);
    id v25 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v28 = v27;

    int64_t v89 = (void *)sub_1000C51B8(v26, v28, v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(a6 + 32) = 2082;
    swift_bridgeObjectRetain();
    int64_t v89 = (void *)sub_1000C51B8(v76, v81, v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, v74, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)a6, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    a6 = v85;
    a5 = v86;
    swift_slowDealloc();

    id v29 = a8;
    unint64_t v22 = v78;
  }
  id v35 = a5;
  a5 = v29;
  id v34 = v35;
  uint64_t v33 = a7;
LABEL_20:
  unint64_t v36 = v77;
  uint64_t v79 = v33(v19, v77);
  swift_bridgeObjectRelease();
  if (v22)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v37) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v37 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v37)
    {
LABEL_21:
      swift_bridgeObjectRelease();
LABEL_22:
      swift_bridgeObjectRelease();
      return;
    }
  }
  unint64_t v77 = v23 & 0xC000000000000001;
  uint64_t v75 = (uint64_t *)(v36 + 48);
  swift_beginAccess();
  uint64_t v38 = 4;
  os_log_t log = ((char *)&type metadata for Swift.AnyObject + 8);
  uint64_t v76 = v37;
  while (1)
  {
    uint64_t v39 = v38 - 4;
    if (v77)
    {
      id v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v41 = v38 - 3;
      if (__OFADD__(v39, 1)) {
        goto LABEL_58;
      }
    }
    else
    {
      id v40 = *(id *)(v23 + 8 * v38);
      uint64_t v41 = v38 - 3;
      if (__OFADD__(v39, 1)) {
        goto LABEL_58;
      }
    }
    unint64_t v82 = v41;
    id v42 = v40;
    uint64_t v43 = sub_100694DE8([v42 remObjectID], v34);
    unint64_t v81 = v38;
    a7 = (uint64_t (*)(uint64_t, unint64_t))v42;

    if (!*(void *)(v79 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_53;
    }
    id v44 = v43;
    uint64_t v45 = ((uint64_t (*)(void))a5)();
    if ((v46 & 1) == 0) {
      break;
    }
    uint64_t v19 = (uint64_t)*(id *)(*(void *)(v79 + 56) + 8 * v45);

    uint64_t v47 = *v75;
    if ((*v75 & 0xC000000000000001) != 0)
    {
      id v48 = v44;
      id v49 = (id)v19;
      swift_bridgeObjectRetain();
      uint64_t v50 = __CocoaDictionary.lookup(_:)();
      if (!v50) {
        goto LABEL_45;
      }
      uint64_t v88 = v50;
      sub_1000963CC(0, (unint64_t *)&qword_100909B00);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v51 = v89;
      swift_unknownObjectRelease();
    }
    else
    {
      if (!*(void *)(v47 + 16))
      {
        id v55 = (id)v19;
        goto LABEL_47;
      }
      id v48 = v44;
      id v52 = (id)v19;
      swift_bridgeObjectRetain();
      unint64_t v53 = sub_100306FE8((uint64_t)v48);
      if ((v54 & 1) == 0)
      {
LABEL_45:

        swift_bridgeObjectRelease();
        a6 = v85;
        goto LABEL_47;
      }
      id v51 = *(id *)(*(void *)(v47 + 56) + 8 * v53);
    }

    swift_bridgeObjectRelease();
    a6 = v85;
    if (v51)
    {

LABEL_49:
      goto LABEL_29;
    }
LABEL_47:
    id v56 = v44;
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = swift_slowAlloc();
      uint64_t v60 = (void *)swift_slowAlloc();
      int64_t v89 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v59 = 136446466;
      *(void *)(v59 + 4) = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v89);
      *(_WORD *)(v59 + 12) = 2114;
      *(void *)(v59 + 14) = v56;
      *uint64_t v60 = v56;

      _os_log_impl((void *)&_mh_execute_header, v57, v58, "[%{public}s] Skipping mutateRelationshipOrdering() since this ingestable is immutable and is not a new insertion {objectID: %{public}@}", (uint8_t *)v59, 0x16u);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      a6 = v85;
      swift_slowDealloc();

      goto LABEL_49;
    }

LABEL_29:
    uint64_t v38 = v81 + 1;
    a5 = a8;
    id v34 = v86;
    if (v82 == v76) {
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_53:
  id v61 = v43;
  swift_retain_n();
  id v62 = v61;
  unint64_t v63 = Logger.logObject.getter();
  os_log_type_t v64 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v63, v64))
  {
    uint64_t v65 = swift_slowAlloc();
    int64_t v89 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v65 = 136446722;
    uint64_t v88 = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v89);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v65 + 12) = 2082;
    sub_10010B4E8(v80 + 24, (uint64_t)v91);
    sub_10073F754((uint64_t)v91, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
    uint64_t v66 = sub_100696CF4();
    unint64_t v68 = v67;
    sub_10073F754((uint64_t)v91, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
    uint64_t v88 = sub_1000C51B8(v66, v68, (uint64_t *)&v89);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v65 + 22) = 2080;
    id v69 = [v62 description];
    uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v72 = v71;

    uint64_t v88 = sub_1000C51B8(v70, v72, (uint64_t *)&v89);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v63, v64, "[%{public}s] Tried to mutate ordering in relationships with non-existent target object -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v65, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  [self noSuchObjectErrorWithObjectID:v62];
  swift_willThrow();
}

void sub_1007036C4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id *), unint64_t *a5, uint64_t a6, uint64_t (*a7)(void *, uint64_t), uint64_t (*a8)(void))
{
  uint64_t v13 = v8;
  uint64_t v85 = a2;
  uint64_t v16 = *(void *)(a3 + 16);
  uint64_t v17 = *(char **)(a3 + 24);
  v80[2] = &v85;
  v80[3] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v18 = sub_100692158(a4, v80, a1);
  if (v9)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v79 = a5;
  uint64_t v72 = v16;
  uint64_t v73 = a3;
  unint64_t v77 = (unint64_t)v18;
  if (qword_1009073A0 != -1) {
    goto LABEL_62;
  }
LABEL_4:
  uint64_t v19 = type metadata accessor for Logger();
  sub_10008E2DC(v19, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v70 = static os_log_type_t.info.getter();
  unint64_t v21 = (char *)(v77 >> 62);
  uint64_t v74 = v13;
  uint64_t v78 = a6;
  if (os_log_type_enabled(v20, v70))
  {
    id v69 = v17;
    uint64_t v22 = swift_slowAlloc();
    v83[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136446978;
    unint64_t v82 = (void *)sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v22 + 12) = 2048;
    if (!v21)
    {
      unint64_t v23 = v20;
      uint64_t v13 = v77;
      uint64_t v24 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_7;
    }
    goto LABEL_65;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  uint64_t v13 = v77;
  while (1)
  {
    uint64_t v17 = v21;
    if (v21)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v28 = _swiftEmptyArrayStorage;
    if (!v22) {
      break;
    }
    v83[0] = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v22 & 0x8000000000000000) == 0)
    {
      uint64_t v29 = 0;
      while (v22 != v29)
      {
        if ((v13 & 0xC000000000000001) != 0) {
          id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v30 = *(id *)(v13 + 8 * v29 + 32);
        }
        id v31 = v30;
        sub_100694DE8([v31 remObjectID], v79);

        ++v29;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v17 = *(char **)(v83[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        a6 = v78;
        if (v22 == v29)
        {
          unint64_t v28 = (void *)v83[0];
          id v32 = a7;
          uint64_t v17 = (char *)(v77 >> 62);
          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      swift_once();
      goto LABEL_4;
    }
    __break(1u);
LABEL_65:
    unint64_t v23 = v20;
    uint64_t v13 = v77;
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    unint64_t v82 = (void *)v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2082;
    sub_1000963CC(0, v79);
    id v25 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v27;

    unint64_t v82 = (void *)sub_1000C51B8(v26, (unint64_t)v20, v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 32) = 2082;
    swift_bridgeObjectRetain();
    unint64_t v82 = (void *)sub_1000C51B8(v72, (unint64_t)v69, v83);
    a6 = v78;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v23, v70, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v22, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v21 = (char *)(v77 >> 62);
  }
  id v32 = a7;
LABEL_22:
  uint64_t v33 = v32(v28, v73);
  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v34) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v34 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v34)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
  }
  unint64_t v71 = (uint64_t *)(v73 + 48);
  swift_beginAccess();
  uint64_t v35 = 4;
  id v69 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v72 = v34;
  uint64_t v73 = v33;
  while (1)
  {
    uint64_t v36 = v35 - 4;
    if ((v77 & 0xC000000000000001) != 0)
    {
      id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v13 = v35 - 3;
      if (__OFADD__(v36, 1)) {
        goto LABEL_61;
      }
    }
    else
    {
      id v37 = *(id *)(v77 + 8 * v35);
      uint64_t v13 = v35 - 3;
      if (__OFADD__(v36, 1)) {
        goto LABEL_61;
      }
    }
    id v38 = v37;
    uint64_t v39 = sub_100694DE8([v38 remObjectID], v79);
    a7 = (uint64_t (*)(void *, uint64_t))v38;

    if (!*(void *)(v33 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_56;
    }
    id v40 = v39;
    uint64_t v41 = a8();
    if ((v42 & 1) == 0) {
      break;
    }
    id v43 = *(id *)(*(void *)(v33 + 56) + 8 * v41);

    uint64_t v44 = *v71;
    if ((*v71 & 0xC000000000000001) != 0)
    {
      if (v44 < 0) {
        uint64_t v17 = (char *)*v71;
      }
      else {
        uint64_t v17 = (char *)(v44 & 0xFFFFFFFFFFFFFF8);
      }
      id v45 = v40;
      id v46 = v43;
      swift_bridgeObjectRetain();
      uint64_t v47 = __CocoaDictionary.lookup(_:)();
      if (!v47)
      {
LABEL_46:

        swift_bridgeObjectRelease();
LABEL_48:
        id v48 = 0;
        goto LABEL_49;
      }
      uint64_t v17 = (char *)v47;
      uint64_t v81 = v47;
      sub_1000963CC(0, (unint64_t *)&qword_100909B00);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v48 = v82;
      swift_unknownObjectRelease();
    }
    else
    {
      if (!*(void *)(v44 + 16))
      {
        id v52 = v43;
        goto LABEL_48;
      }
      id v45 = v40;
      id v49 = v43;
      swift_bridgeObjectRetain();
      unint64_t v50 = sub_100306FE8((uint64_t)v45);
      if ((v51 & 1) == 0) {
        goto LABEL_46;
      }
      id v48 = *(id *)(*(void *)(v44 + 56) + 8 * v50);
    }

    swift_bridgeObjectRelease();
LABEL_49:

    uint64_t v53 = *(void *)(v74 + 72);
    id v54 = [a7 remObjectID];
    id v55 = v54;
    if (*(void *)(v53 + 16))
    {
      sub_100306FE8((uint64_t)v54);
      uint64_t v33 = v73;
      if (v56) {
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      uint64_t v33 = v73;
    }

    swift_bridgeObjectRelease();
    ++v35;
    a6 = v78;
    if (v13 == v72) {
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_56:
  id v57 = v39;
  swift_retain_n();
  id v58 = v57;
  uint64_t v59 = Logger.logObject.getter();
  os_log_type_t v60 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v59, v60))
  {
    uint64_t v61 = swift_slowAlloc();
    unint64_t v82 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v61 = 136446722;
    uint64_t v81 = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v61 + 12) = 2082;
    sub_10010B4E8(v74 + 24, (uint64_t)v84);
    sub_10073F754((uint64_t)v84, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
    uint64_t v62 = sub_100696CF4();
    unint64_t v64 = v63;
    sub_10073F754((uint64_t)v84, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
    uint64_t v81 = sub_1000C51B8(v62, v64, (uint64_t *)&v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v61 + 22) = 2080;
    id v65 = [v58 description];
    uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v68 = v67;

    uint64_t v81 = sub_1000C51B8(v66, v68, (uint64_t *)&v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v59, v60, "[%{public}s] Tried to mutate ordering in relationships with non-existent target object -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v61, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  [self noSuchObjectErrorWithObjectID:v58];
  swift_willThrow();
}

void sub_100704188(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v6 = a3;
  uint64_t v179 = a2;
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(a3 + 24);
  v168[2] = &v179;
  v168[3] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_100692158((uint64_t (*)(id *))sub_1007406D0, v168, a1);
  if (v4) {
    goto LABEL_21;
  }
  unint64_t v11 = (unint64_t)v10;
  if (qword_1009073A0 != -1) {
    goto LABEL_76;
  }
LABEL_3:
  uint64_t v12 = type metadata accessor for Logger();
  sub_10008E2DC(v12, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  os_log_t log = v13;
  unint64_t v15 = v11 >> 62;
  uint64_t v167 = v5;
  *(void *)unint64_t v159 = v11 >> 62;
  *(void *)id v162 = v6;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v158 = v9;
    uint64_t v9 = swift_slowAlloc();
    v172[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446978;
    id v169 = (void *)sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, v172);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 12) = 2048;
    os_log_type_t v156 = v14;
    if (!v15)
    {
      uint64_t v16 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_6;
    }
    goto LABEL_79;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v15)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v8 = (uint64_t)_swiftEmptyArrayStorage;
    if (!v5) {
      break;
    }
    v172[0] = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v5 & 0x8000000000000000) == 0)
    {
      uint64_t v8 = 0;
      uint64_t v6 = v11;
      unint64_t v22 = v11 & 0xC000000000000001;
      while (v5 != v8)
      {
        if (v22) {
          id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v23 = *(id *)(v6 + 8 * v8 + 32);
        }
        id v24 = v23;
        unint64_t v11 = (unint64_t)sub_100695DC4([v24 remObjectID], (void (*)(void))type metadata accessor for REMCDTemplate, 0x6D655444434D4552, (void *)0xED00006574616C70);
        ++v8;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v9 = *(void *)(v172[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v5 == v8)
        {
          uint64_t v8 = v172[0];
          unint64_t v11 = v6;
          unint64_t v15 = *(void *)v159;
          uint64_t v6 = *(void *)v162;
          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_76:
      swift_once();
      goto LABEL_3;
    }
    __break(1u);
LABEL_79:
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    id v169 = (void *)v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    unint64_t v17 = v11;
    *(_WORD *)(v9 + 22) = 2082;
    type metadata accessor for REMCDTemplate();
    id v18 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;

    id v169 = (void *)sub_1000C51B8(v19, v21, v172);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 32) = 2082;
    unint64_t v11 = v17;
    swift_bridgeObjectRetain();
    id v169 = (void *)sub_1000C51B8(v158, v8, v172);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, v156, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v9, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v15 = *(void *)v159;
    uint64_t v6 = *(void *)v162;
  }
LABEL_22:
  unint64_t v152 = sub_100716920(v8, v6);
  swift_bridgeObjectRelease();
  if (v15)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v26 = v152;
    if (!v25) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v25 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v26 = v152;
    if (!v25)
    {
LABEL_20:
      swift_bridgeObjectRelease();
LABEL_21:
      swift_bridgeObjectRelease();
      return;
    }
  }
  unint64_t v27 = (uint64_t *)(v6 + 48);
  uint64_t v28 = v167 + 24;
  unint64_t v29 = v11 & 0xC000000000000001;
  unint64_t v151 = v27;
  swift_beginAccess();
  unint64_t v30 = 0;
  id v146 = (char *)(v11 + 32);
  uint64_t v147 = v11 & 0xFFFFFFFFFFFFFF8;
  id v31 = &selRef_ckServerChangeTokens;
  id v145 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v153 = v167 + 24;
  unint64_t v148 = v11 & 0xC000000000000001;
  uint64_t v149 = v25;
  while (1)
  {
    if (v29)
    {
      id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v30 >= *(void *)(v147 + 16)) {
        goto LABEL_81;
      }
      id v32 = *(id *)&v146[8 * v30];
    }
    unint64_t v150 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
      __break(1u);
LABEL_81:
      __break(1u);
      return;
    }
    os_log_t loga = (os_log_t)v32;
    uint64_t v33 = sub_100695DC4([loga remObjectID], (void (*)(void))type metadata accessor for REMCDTemplate, 0x6D655444434D4552, (void *)0xED00006574616C70);

    if (!v26[2])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_71:
      id v133 = v33;
      swift_retain_n();
      id v134 = v133;
      unint64_t v135 = Logger.logObject.getter();
      os_log_type_t v136 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v135, v136))
      {
        uint64_t v137 = swift_slowAlloc();
        id v169 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v137 = 136446722;
        uint64_t v171 = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v169);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v137 + 12) = 2082;
        sub_10010B4E8(v28, (uint64_t)v173);
        sub_10073F754((uint64_t)v173, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
        uint64_t v138 = sub_100696CF4();
        unint64_t v140 = v139;
        sub_10073F754((uint64_t)v173, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
        uint64_t v171 = sub_1000C51B8(v138, v140, (uint64_t *)&v169);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v137 + 22) = 2080;
        id v141 = [v134 description];
        uint64_t v142 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v144 = v143;

        uint64_t v171 = sub_1000C51B8(v142, v144, (uint64_t *)&v169);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v135, v136, "[%{public}s] Tried to mutate ordering in relationships with non-existent target object -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v137, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      [self noSuchObjectErrorWithObjectID:v134];
      swift_willThrow();

      return;
    }
    id v34 = v33;
    unint64_t v35 = sub_10030703C(v34);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_71;
    }
    id v37 = *(id *)(v26[7] + 8 * v35);

    uint64_t v38 = *v151;
    id v157 = v37;
    if ((*v151 & 0xC000000000000001) == 0)
    {
      if (*(void *)(v38 + 16))
      {
        id v43 = v34;
        id v44 = v37;
        swift_bridgeObjectRetain();
        unint64_t v45 = sub_100306FE8((uint64_t)v43);
        if (v46)
        {
          id v42 = *(id *)(*(void *)(v38 + 56) + 8 * v45);

          swift_bridgeObjectRelease();
          goto LABEL_44;
        }

        swift_bridgeObjectRelease();
      }
      else
      {
        id v47 = v37;
      }
      id v42 = 0;
      goto LABEL_44;
    }
    id v39 = v34;
    id v40 = v37;
    swift_bridgeObjectRetain();
    uint64_t v41 = __CocoaDictionary.lookup(_:)();
    if (v41)
    {
      uint64_t v171 = v41;
      sub_1000963CC(0, (unint64_t *)&qword_100909B00);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v42 = v169;
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease();
      id v42 = 0;
    }
LABEL_44:

    uint64_t v48 = *(void *)(v167 + 72);
    id v49 = [loga remObjectID];
    unint64_t v50 = v49;
    if (*(void *)(v48 + 16) && (unint64_t v51 = sub_100306FE8((uint64_t)v49), (v52 & 1) != 0))
    {
      uint64_t v53 = *(void *)(*(void *)(v48 + 56) + 8 * v51);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v53 = 0;
    }

    id v54 = sub_100697C24(v53, (uint64_t)&off_1008B2418, (uint64_t)sub_10030A088, (uint64_t (*)(void))sub_100693184, (uint64_t *)&unk_100921AA8);
    swift_bridgeObjectRelease();
    uint64_t v55 = v54[2];
    if (v55) {
      break;
    }
LABEL_59:

    swift_bridgeObjectRelease();
    unint64_t v29 = v148;
    unint64_t v30 = v150;
    uint64_t v26 = v152;
    uint64_t v28 = v167 + 24;
    if (v150 == v149) {
      goto LABEL_20;
    }
  }
  *(void *)unint64_t v160 = v34;
  while (1)
  {
    id v56 = [v37 v31[228] v145];
    id v57 = [v56 relationshipsByName];

    sub_1000963CC(0, &qword_100921AA0);
    uint64_t v58 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    if (!*(void *)(v58 + 16)) {
      break;
    }
    unint64_t v59 = sub_1001806F8(0x736E6F6974636573, 0xE800000000000000);
    if ((v60 & 1) == 0) {
      break;
    }
    id v61 = *(id *)(*(void *)(v58 + 56) + 8 * v59);
    swift_bridgeObjectRelease();
    uint64_t v62 = v167;
    id v163 = v61;
    if (![v61 isOrdered])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v103 = v34;
      swift_retain_n();
      id v104 = v103;
      unint64_t v105 = Logger.logObject.getter();
      os_log_type_t v106 = static os_log_type_t.fault.getter();
      unint64_t v107 = &selRef_ckServerChangeTokens;
      if (os_log_type_enabled(v105, v106))
      {
        uint64_t v108 = swift_slowAlloc();
        id v169 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v108 = 136446978;
        os_log_type_t v161 = v106;
        uint64_t v171 = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v169);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v108 + 12) = 2082;
        uint64_t v109 = v167 + 24;
        sub_10010B4E8(v153, (uint64_t)v178);
        sub_10073F754((uint64_t)v178, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
        uint64_t v110 = sub_100696CF4();
        unint64_t v112 = v111;
        sub_10073F754((uint64_t)v178, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
        uint64_t v171 = sub_1000C51B8(v110, v112, (uint64_t *)&v169);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v108 + 22) = 2080;
        id v113 = [v104 description];
        uint64_t v114 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v116 = v115;

        uint64_t v171 = sub_1000C51B8(v114, v116, (uint64_t *)&v169);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        unint64_t v107 = &selRef_ckServerChangeTokens;
        swift_bridgeObjectRelease();
        *(_WORD *)(v108 + 32) = 2080;
        uint64_t v171 = sub_1000C51B8(0x736E6F6974636573, 0xE800000000000000, (uint64_t *)&v169);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v105, v161, "[%{public}s] Tried to mutate a relationship that is not ordered -- bail {author: %{public}s, cdObjectID: %s, orderableRelationhipKey: %s}", (uint8_t *)v108, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
        uint64_t v109 = v167 + 24;
      }
      uint64_t v117 = self;
      id v169 = 0;
      unint64_t v170 = 0xE000000000000000;
      _StringGuts.grow(_:)(115);
      v118._countAndFlagsBits = 0xD000000000000044;
      v118._object = (void *)0x80000001007DC100;
      String.append(_:)(v118);
      sub_10010B4E8(v109, (uint64_t)v177);
      sub_10073F754((uint64_t)v177, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v119 = sub_100696CF4();
      unint64_t v121 = v120;
      sub_10073F754((uint64_t)v177, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      v122._countAndFlagsBits = v119;
      v122._object = v121;
      String.append(_:)(v122);
      swift_bridgeObjectRelease();
      v123._countAndFlagsBits = 0x656A624F6463202CLL;
      v123._object = (void *)0xEE00203A44497463;
      String.append(_:)(v123);
      id v124 = [v104 v107[166]];
      uint64_t v125 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v127 = v126;

      v128._countAndFlagsBits = v125;
      v128._object = v127;
      String.append(_:)(v128);
      swift_bridgeObjectRelease();
      v129._object = (void *)0x80000001007DC0E0;
      v129._countAndFlagsBits = 0xD00000000000001ALL;
      String.append(_:)(v129);
      v130._countAndFlagsBits = 0x736E6F6974636573;
      v130._object = (void *)0xE800000000000000;
      String.append(_:)(v130);
      v131._countAndFlagsBits = 125;
      v131._object = (void *)0xE100000000000000;
      String.append(_:)(v131);
      NSString v132 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v117 internalErrorWithDebugDescription:v132];

      swift_willThrow();
      return;
    }
    id v63 = v34;
    swift_retain_n();
    id v64 = v63;
    id v65 = Logger.logObject.getter();
    os_log_type_t v66 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = swift_slowAlloc();
      uint64_t v154 = (void *)swift_slowAlloc();
      id v169 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v67 = 136447234;
      os_log_type_t type = v66;
      uint64_t v171 = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v169);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v67 + 12) = 2082;
      sub_10010B4E8(v153, (uint64_t)v176);
      sub_10073F754((uint64_t)v176, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v68 = sub_100696CF4();
      unint64_t v70 = v69;
      sub_10073F754((uint64_t)v176, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      uint64_t v171 = sub_1000C51B8(v68, v70, (uint64_t *)&v169);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v67 + 22) = 2114;
      uint64_t v171 = (uint64_t)v64;
      id v71 = v64;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v154 = *(void *)v160;

      id v37 = v157;
      *(_WORD *)(v67 + 32) = 2082;
      uint64_t v171 = sub_1000C51B8(0xD00000000000001CLL, 0x80000001007C62A0, (uint64_t *)&v169);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v67 + 42) = 2082;
      uint64_t v171 = sub_1000C51B8(0x736E6F6974636573, 0xE800000000000000, (uint64_t *)&v169);
      id v31 = &selRef_ckServerChangeTokens;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v65, type, "[%{public}s] Updating relationship ordering {author: %{public}s, objectID: %{public}@, changedValueKey: %{public}s, orderableRelationshipKey: %{public}s}", (uint8_t *)v67, 0x34u);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v62 = v167;
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    sub_10070BC8C(v37, v179, (uint64_t)loga, v62, 0xD00000000000001ALL, 0x80000001007DBFB0, (void (*)(void *, uint64_t))sub_100169F4C);
    if (*(unsigned char *)(v62 + 104) == 1)
    {
      id v73 = v37;
      [v73 updateChangeCount];
    }
    --v55;
    id v34 = *(id *)v160;
    if (!v55) {
      goto LABEL_59;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v74 = v34;
  swift_retain_n();
  id v75 = v74;
  uint64_t v76 = Logger.logObject.getter();
  os_log_type_t v77 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v76, v77))
  {
    uint64_t v78 = swift_slowAlloc();
    id v169 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v78 = 136446978;
    os_log_type_t v164 = v77;
    uint64_t v171 = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v169);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v78 + 12) = 2082;
    uint64_t v79 = v167 + 24;
    sub_10010B4E8(v153, (uint64_t)v175);
    sub_10073F754((uint64_t)v175, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
    uint64_t v80 = sub_100696CF4();
    unint64_t v82 = v81;
    sub_10073F754((uint64_t)v175, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
    uint64_t v171 = sub_1000C51B8(v80, v82, (uint64_t *)&v169);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v78 + 22) = 2080;
    id v83 = [v75 description];
    uint64_t v84 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v86 = v85;

    uint64_t v171 = sub_1000C51B8(v84, v86, (uint64_t *)&v169);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v78 + 32) = 2080;
    uint64_t v171 = sub_1000C51B8(0x736E6F6974636573, 0xE800000000000000, (uint64_t *)&v169);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v76, v164, "[%{public}s] Tried to mutate ordering of a non-existing relationship -- bail {author: %{public}s, cdObjectID: %s, orderableRelationhipKey: %s}", (uint8_t *)v78, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    uint64_t v79 = v167 + 24;
  }
  unint64_t v87 = self;
  id v169 = 0;
  unint64_t v170 = 0xE000000000000000;
  _StringGuts.grow(_:)(120);
  v88._countAndFlagsBits = 0xD000000000000049;
  v88._object = (void *)0x80000001007DC090;
  String.append(_:)(v88);
  sub_10010B4E8(v79, (uint64_t)v174);
  sub_10073F754((uint64_t)v174, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
  uint64_t v89 = sub_100696CF4();
  uint64_t v91 = v90;
  sub_10073F754((uint64_t)v174, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
  v92._countAndFlagsBits = v89;
  v92._object = v91;
  String.append(_:)(v92);
  swift_bridgeObjectRelease();
  v93._countAndFlagsBits = 0x656A624F6463202CLL;
  v93._object = (void *)0xEE00203A44497463;
  String.append(_:)(v93);
  id v94 = [v75 description];
  uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v97 = v96;

  v98._countAndFlagsBits = v95;
  v98._object = v97;
  String.append(_:)(v98);
  swift_bridgeObjectRelease();
  v99._object = (void *)0x80000001007DC0E0;
  v99._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v99);
  v100._countAndFlagsBits = 0x736E6F6974636573;
  v100._object = (void *)0xE800000000000000;
  String.append(_:)(v100);
  v101._countAndFlagsBits = 125;
  v101._object = (void *)0xE100000000000000;
  String.append(_:)(v101);
  NSString v102 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v87 internalErrorWithDebugDescription:v102];

  swift_willThrow();
}

void sub_100705AC8(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = v3;
  uint64_t v6 = a3;
  uint64_t v176 = a2;
  uint64_t v8 = a3[2];
  uint64_t v9 = a3[3];
  v165[2] = &v176;
  v165[3] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_100692158((uint64_t (*)(id *))sub_100740A2C, v165, a1);
  if (v4) {
    goto LABEL_20;
  }
  unint64_t v11 = (unint64_t)v10;
  if (qword_1009073A0 != -1) {
    goto LABEL_75;
  }
LABEL_3:
  uint64_t v12 = type metadata accessor for Logger();
  sub_10008E2DC(v12, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v156 = static os_log_type_t.info.getter();
  os_log_type_t v14 = v13;
  unint64_t v15 = v11 >> 62;
  id v163 = v5;
  os_log_type_t v164 = (void *)v11;
  unint64_t v157 = v11 >> 62;
  unint64_t v159 = v6;
  if (os_log_type_enabled(v13, v156))
  {
    uint64_t v153 = v8;
    uint64_t v5 = (__objc2_class **)swift_slowAlloc();
    v169[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446978;
    uint64_t v166 = (void *)sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, v169);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *((_WORD *)v5 + 6) = 2048;
    if (!v15)
    {
      uint64_t v16 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_6;
    }
    goto LABEL_78;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v15)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v9 = (uint64_t)_swiftEmptyArrayStorage;
    if (!v8) {
      break;
    }
    v169[0] = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v8 & 0x8000000000000000) == 0)
    {
      uint64_t v9 = 0;
      unint64_t v21 = v11 & 0xC000000000000001;
      uint64_t v6 = (uint64_t *)&unk_100910210;
      uint64_t v5 = off_1008AA4A0;
      while (v8 != v9)
      {
        if (v21) {
          id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v22 = *(id *)(v11 + 8 * v9 + 32);
        }
        id v23 = v22;
        sub_100694DE8([v23 remObjectID], (unint64_t *)&unk_100910210);
        ++v9;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        unint64_t v11 = (unint64_t)v164;
        if (v8 == v9)
        {
          uint64_t v9 = v169[0];
          uint64_t v5 = v163;
          unint64_t v15 = v157;
          uint64_t v6 = v159;
          goto LABEL_21;
        }
      }
      __break(1u);
LABEL_75:
      swift_once();
      goto LABEL_3;
    }
    __break(1u);
LABEL_78:
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v166 = (void *)v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *((_WORD *)v5 + 11) = 2082;
    sub_1000963CC(0, (unint64_t *)&unk_100910210);
    id v17 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;

    uint64_t v166 = (void *)sub_1000C51B8(v18, v20, v169);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unint64_t v11 = (unint64_t)v164;
    swift_bridgeObjectRelease();
    *((_WORD *)v5 + 16) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v166 = (void *)sub_1000C51B8(v153, v9, v169);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v156, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v5, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v5 = v163;
    unint64_t v15 = v157;
    uint64_t v6 = v159;
  }
LABEL_21:
  unint64_t v148 = sub_100716D88(v9, (uint64_t)v6);
  swift_bridgeObjectRelease();
  if (v15)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v25 = v11;
  uint64_t v26 = v148;
  if (!v24)
  {
LABEL_59:
    swift_bridgeObjectRelease();
LABEL_20:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v27 = (uint64_t)(v5 + 3);
  unint64_t v28 = v25 & 0xC000000000000001;
  uint64_t v147 = v6 + 6;
  swift_beginAccess();
  unint64_t v29 = 0;
  unint64_t v142 = v25 + 32;
  uint64_t v143 = v25 & 0xFFFFFFFFFFFFFF8;
  uint64_t v149 = (uint64_t)(v5 + 3);
  unint64_t v144 = v25 & 0xC000000000000001;
  uint64_t v145 = v24;
  while (1)
  {
    if (v28)
    {
      id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v29 >= *(void *)(v143 + 16)) {
        goto LABEL_80;
      }
      id v30 = *(id *)(v142 + 8 * v29);
    }
    unint64_t v146 = v29 + 1;
    if (__OFADD__(v29, 1))
    {
      __break(1u);
LABEL_80:
      __break(1u);
      return;
    }
    id v160 = v30;
    id v31 = sub_100694DE8([v160 remObjectID], (unint64_t *)&unk_100910210);

    if (!v26[2])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_70:
      id v130 = v31;
      swift_retain_n();
      id v131 = v130;
      NSString v132 = Logger.logObject.getter();
      os_log_type_t v133 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v132, v133))
      {
        uint64_t v134 = swift_slowAlloc();
        uint64_t v166 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v134 = 136446722;
        uint64_t v168 = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v134 + 12) = 2082;
        sub_10010B4E8(v27, (uint64_t)v170);
        sub_10073F754((uint64_t)v170, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
        uint64_t v135 = sub_100696CF4();
        unint64_t v137 = v136;
        sub_10073F754((uint64_t)v170, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
        uint64_t v168 = sub_1000C51B8(v135, v137, (uint64_t *)&v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v134 + 22) = 2080;
        id v138 = [v131 description];
        uint64_t v139 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v141 = v140;

        uint64_t v168 = sub_1000C51B8(v139, v141, (uint64_t *)&v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v132, v133, "[%{public}s] Tried to mutate ordering in relationships with non-existent target object -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v134, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      [self noSuchObjectErrorWithObjectID:v131];
      swift_willThrow();

      return;
    }
    id v32 = v31;
    unint64_t v33 = sub_10030703C(v32);
    if ((v34 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_70;
    }
    id v35 = *(id *)(v26[7] + 8 * v33);

    uint64_t v36 = *v147;
    unint64_t v152 = v35;
    if ((*v147 & 0xC000000000000001) == 0)
    {
      if (*(void *)(v36 + 16))
      {
        id v41 = v32;
        id v42 = v35;
        swift_bridgeObjectRetain();
        unint64_t v43 = sub_100306FE8((uint64_t)v41);
        if (v44)
        {
          id v40 = *(id *)(*(void *)(v36 + 56) + 8 * v43);

          swift_bridgeObjectRelease();
          goto LABEL_43;
        }

        swift_bridgeObjectRelease();
      }
      else
      {
        id v45 = v35;
      }
      id v40 = 0;
      goto LABEL_43;
    }
    id v37 = v32;
    id v38 = v35;
    swift_bridgeObjectRetain();
    uint64_t v39 = __CocoaDictionary.lookup(_:)();
    if (v39)
    {
      uint64_t v168 = v39;
      sub_1000963CC(0, (unint64_t *)&qword_100909B00);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v40 = v166;
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease();
      id v40 = 0;
    }
LABEL_43:

    char v46 = v5[9];
    id v47 = [v160 remObjectID];
    uint64_t v48 = v47;
    if (v46->cache && (unint64_t v49 = sub_100306FE8((uint64_t)v47), (v50 & 1) != 0))
    {
      uint64_t v51 = *((void *)v46[1].cache + v49);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v51 = 0;
    }

    char v52 = sub_100697C24(v51, (uint64_t)&off_1008B2610, (uint64_t)sub_10030A0AC, (uint64_t (*)(void))sub_100693184, &qword_100921B48);
    swift_bridgeObjectRelease();
    uint64_t v53 = v52[2];
    if (v53) {
      break;
    }
LABEL_58:

    swift_bridgeObjectRelease();
    unint64_t v28 = v144;
    unint64_t v29 = v146;
    uint64_t v26 = v148;
    uint64_t v27 = v149;
    if (v146 == v145) {
      goto LABEL_59;
    }
  }
  id v158 = v32;
  while (1)
  {
    id v54 = [v35 entity];
    id v55 = [v54 relationshipsByName];

    sub_1000963CC(0, &qword_100921AA0);
    uint64_t v56 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    if (!*(void *)(v56 + 16)) {
      break;
    }
    unint64_t v57 = sub_1001806F8(0x736E6F6974636573, 0xE800000000000000);
    if ((v58 & 1) == 0) {
      break;
    }
    id v59 = *(id *)(*(void *)(v56 + 56) + 8 * v57);
    swift_bridgeObjectRelease();
    if (![v59 isOrdered])
    {
      unint64_t v155 = v59;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v100 = v32;
      swift_retain_n();
      id v101 = v100;
      NSString v102 = Logger.logObject.getter();
      os_log_type_t v103 = static os_log_type_t.fault.getter();
      id v104 = &selRef_ckServerChangeTokens;
      if (os_log_type_enabled(v102, v103))
      {
        uint64_t v105 = swift_slowAlloc();
        uint64_t v166 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v105 = 136446978;
        os_log_type_t v162 = v103;
        uint64_t v168 = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v105 + 12) = 2082;
        uint64_t v106 = v149;
        sub_10010B4E8(v149, (uint64_t)v175);
        sub_10073F754((uint64_t)v175, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
        uint64_t v107 = sub_100696CF4();
        unint64_t v109 = v108;
        sub_10073F754((uint64_t)v175, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
        uint64_t v168 = sub_1000C51B8(v107, v109, (uint64_t *)&v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v105 + 22) = 2080;
        id v110 = [v101 description];
        uint64_t v111 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v113 = v112;

        uint64_t v168 = sub_1000C51B8(v111, v113, (uint64_t *)&v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        id v104 = &selRef_ckServerChangeTokens;
        swift_bridgeObjectRelease();
        *(_WORD *)(v105 + 32) = 2080;
        uint64_t v168 = sub_1000C51B8(0x736E6F6974636573, 0xE800000000000000, (uint64_t *)&v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v102, v162, "[%{public}s] Tried to mutate a relationship that is not ordered -- bail {author: %{public}s, cdObjectID: %s, orderableRelationhipKey: %s}", (uint8_t *)v105, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
        uint64_t v106 = v149;
      }
      uint64_t v114 = self;
      uint64_t v166 = 0;
      unint64_t v167 = 0xE000000000000000;
      _StringGuts.grow(_:)(115);
      v115._countAndFlagsBits = 0xD000000000000044;
      v115._object = (void *)0x80000001007DC100;
      String.append(_:)(v115);
      sub_10010B4E8(v106, (uint64_t)v174);
      sub_10073F754((uint64_t)v174, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v116 = sub_100696CF4();
      Swift::String v118 = v117;
      sub_10073F754((uint64_t)v174, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      v119._countAndFlagsBits = v116;
      v119._object = v118;
      String.append(_:)(v119);
      swift_bridgeObjectRelease();
      v120._countAndFlagsBits = 0x656A624F6463202CLL;
      v120._object = (void *)0xEE00203A44497463;
      String.append(_:)(v120);
      id v121 = [v101 v104[166]];
      uint64_t v122 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v124 = v123;

      v125._countAndFlagsBits = v122;
      v125._object = v124;
      String.append(_:)(v125);
      swift_bridgeObjectRelease();
      v126._object = (void *)0x80000001007DC0E0;
      v126._countAndFlagsBits = 0xD00000000000001ALL;
      String.append(_:)(v126);
      v127._countAndFlagsBits = 0x736E6F6974636573;
      v127._object = (void *)0xE800000000000000;
      String.append(_:)(v127);
      v128._countAndFlagsBits = 125;
      v128._object = (void *)0xE100000000000000;
      String.append(_:)(v128);
      NSString v129 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v114 internalErrorWithDebugDescription:v129];

      swift_willThrow();
      return;
    }
    id v60 = v32;
    swift_retain_n();
    id v61 = v60;
    uint64_t v62 = Logger.logObject.getter();
    os_log_type_t v63 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v62, v63))
    {
      id v154 = v59;
      uint64_t v64 = swift_slowAlloc();
      unint64_t v150 = (void *)swift_slowAlloc();
      uint64_t v166 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v64 = 136447234;
      os_log_type_t type = v63;
      uint64_t v168 = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v166);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v64 + 12) = 2082;
      sub_10010B4E8(v149, (uint64_t)v173);
      sub_10073F754((uint64_t)v173, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v65 = sub_100696CF4();
      unint64_t v67 = v66;
      sub_10073F754((uint64_t)v173, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      uint64_t v168 = sub_1000C51B8(v65, v67, (uint64_t *)&v166);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v64 + 22) = 2114;
      uint64_t v168 = (uint64_t)v61;
      id v68 = v61;
      id v35 = v152;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v150 = v158;

      *(_WORD *)(v64 + 32) = 2082;
      uint64_t v168 = sub_1000C51B8(0xD00000000000001CLL, 0x80000001007C62A0, (uint64_t *)&v166);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v64 + 42) = 2082;
      uint64_t v168 = sub_1000C51B8(0x736E6F6974636573, 0xE800000000000000, (uint64_t *)&v166);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v62, type, "[%{public}s] Updating relationship ordering {author: %{public}s, objectID: %{public}@, changedValueKey: %{public}s, orderableRelationshipKey: %{public}s}", (uint8_t *)v64, 0x34u);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      id v59 = v154;
      swift_slowDealloc();

      uint64_t v5 = v163;
    }
    else
    {

      swift_release_n();
    }
    sub_10070BC8C(v35, v176, (uint64_t)v160, (uint64_t)v5, 0xD00000000000001ALL, 0x80000001007DBFB0, (void (*)(void *, uint64_t))sub_1001BA59C);
    if (*((unsigned char *)v5 + 104) == 1)
    {
      id v70 = v35;
      [v70 updateChangeCount];
    }
    --v53;
    id v32 = v158;
    if (!v53) {
      goto LABEL_58;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v71 = v32;
  swift_retain_n();
  id v72 = v71;
  id v73 = Logger.logObject.getter();
  os_log_type_t v74 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v73, v74))
  {
    uint64_t v75 = swift_slowAlloc();
    uint64_t v166 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v75 = 136446978;
    os_log_type_t v161 = v74;
    uint64_t v168 = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v166);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v75 + 12) = 2082;
    uint64_t v76 = v149;
    sub_10010B4E8(v149, (uint64_t)v172);
    sub_10073F754((uint64_t)v172, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
    uint64_t v77 = sub_100696CF4();
    unint64_t v79 = v78;
    sub_10073F754((uint64_t)v172, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
    uint64_t v168 = sub_1000C51B8(v77, v79, (uint64_t *)&v166);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v75 + 22) = 2080;
    id v80 = [v72 description];
    uint64_t v81 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v83 = v82;

    uint64_t v168 = sub_1000C51B8(v81, v83, (uint64_t *)&v166);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v75 + 32) = 2080;
    uint64_t v168 = sub_1000C51B8(0x736E6F6974636573, 0xE800000000000000, (uint64_t *)&v166);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v73, v161, "[%{public}s] Tried to mutate ordering of a non-existing relationship -- bail {author: %{public}s, cdObjectID: %s, orderableRelationhipKey: %s}", (uint8_t *)v75, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    uint64_t v76 = v149;
  }
  uint64_t v84 = self;
  uint64_t v166 = 0;
  unint64_t v167 = 0xE000000000000000;
  _StringGuts.grow(_:)(120);
  v85._countAndFlagsBits = 0xD000000000000049;
  v85._object = (void *)0x80000001007DC090;
  String.append(_:)(v85);
  sub_10010B4E8(v76, (uint64_t)v171);
  sub_10073F754((uint64_t)v171, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
  uint64_t v86 = sub_100696CF4();
  Swift::String v88 = v87;
  sub_10073F754((uint64_t)v171, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
  v89._countAndFlagsBits = v86;
  v89._object = v88;
  String.append(_:)(v89);
  swift_bridgeObjectRelease();
  v90._countAndFlagsBits = 0x656A624F6463202CLL;
  v90._object = (void *)0xEE00203A44497463;
  String.append(_:)(v90);
  id v91 = [v72 description];
  uint64_t v92 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v94 = v93;

  v95._countAndFlagsBits = v92;
  v95._object = v94;
  String.append(_:)(v95);
  swift_bridgeObjectRelease();
  v96._object = (void *)0x80000001007DC0E0;
  v96._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v96);
  v97._countAndFlagsBits = 0x736E6F6974636573;
  v97._object = (void *)0xE800000000000000;
  String.append(_:)(v97);
  v98._countAndFlagsBits = 125;
  v98._object = (void *)0xE100000000000000;
  String.append(_:)(v98);
  NSString v99 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v84 internalErrorWithDebugDescription:v99];

  swift_willThrow();
}

void sub_1007073C8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id *), uint64_t *a5, uint64_t a6, void (*a7)(void), uint64_t a8, void *a9, uint64_t (*a10)(void))
{
  uint64_t v105 = a2;
  unint64_t v19 = *(void *)(a3 + 16);
  unint64_t v18 = *(void *)(a3 + 24);
  v100[2] = &v105;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v20 = sub_100692158(a4, v100, a1);
  if (v11) {
    goto LABEL_2;
  }
  Swift::String v89 = a5;
  unint64_t v90 = v19;
  unint64_t v96 = (unint64_t)v20;
  unint64_t v97 = v18;
  uint64_t v93 = a6;
  id v94 = (uint64_t *)a3;
  unint64_t v21 = (unint64_t)a7;
  uint64_t v95 = v10;
  if (qword_1009073A0 != -1) {
    goto LABEL_58;
  }
LABEL_4:
  uint64_t v22 = type metadata accessor for Logger();
  sub_10008E2DC(v22, (uint64_t)qword_100916070);
  unint64_t v23 = v96;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.info.getter();
  unint64_t v26 = v96 >> 62;
  uint64_t v98 = a8;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v27 = (uint64_t *)swift_slowAlloc();
    v103[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136446978;
    NSString v102 = (void *)sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *((_WORD *)v27 + 6) = 2048;
    os_log_t log = v24;
    LOBYTE(v28) = v25;
    if (!v26)
    {
      unint64_t v23 = v96;
      uint64_t v29 = *(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_7;
    }
    goto LABEL_61;
  }
  id v35 = (void (*)(void))v21;

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  unint64_t v28 = (uint64_t (*)(void *, uint64_t *))v93;
  uint64_t v36 = v94;
  while (1)
  {
    unint64_t v97 = (unint64_t)a9;
    if (v26)
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    id v38 = _swiftEmptyArrayStorage;
    if (!v37) {
      break;
    }
    v103[0] = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v27 = v103;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v37 & 0x8000000000000000) == 0)
    {
      uint64_t v39 = 0;
      unint64_t v21 = v23 & 0xC000000000000001;
      while (v37 != v39)
      {
        if (v21) {
          id v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v40 = *(id *)(v23 + 8 * v39 + 32);
        }
        id v41 = v40;
        sub_100695DC4([v41 remObjectID], a7, a8, a9);

        ++v39;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        a8 = v98;
        if (v37 == v39)
        {
          id v38 = (void *)v103[0];
          id v42 = a7;
          unint64_t v28 = (uint64_t (*)(void *, uint64_t *))v93;
          uint64_t v36 = v94;
          goto LABEL_21;
        }
      }
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      swift_once();
      goto LABEL_4;
    }
    __break(1u);
LABEL_61:
    unint64_t v23 = v96;
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_7:
    id v30 = v89;
    swift_bridgeObjectRelease();
    NSString v102 = (void *)v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *((_WORD *)v27 + 11) = 2082;
    Swift::String v89 = v27 + 3;
    ((void (*)(void))v30)(0);
    id v31 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v34 = v33;

    NSString v102 = (void *)sub_1000C51B8(v32, v34, v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *((_WORD *)v27 + 16) = 2082;
    swift_bridgeObjectRetain();
    NSString v102 = (void *)sub_1000C51B8(v90, v97, v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, (os_log_type_t)v28, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v27, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a8 = v98;
    id v35 = a7;
    unint64_t v28 = (uint64_t (*)(void *, uint64_t *))v93;
    uint64_t v36 = v94;
    unint64_t v26 = v96 >> 62;
  }
  id v42 = v35;
LABEL_21:
  uint64_t v93 = v28(v38, v36);
  swift_bridgeObjectRelease();
  if (!(v96 >> 62))
  {
    unint64_t v43 = *(uint64_t **)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v44 = v23;
    id v45 = v42;
    Swift::String v89 = v43;
    if (v43) {
      goto LABEL_23;
    }
LABEL_49:
    swift_bridgeObjectRelease();
LABEL_2:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v74 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  unint64_t v44 = v23;
  id v45 = v42;
  Swift::String v89 = (uint64_t *)v74;
  if (!v74) {
    goto LABEL_49;
  }
LABEL_23:
  char v46 = v36 + 6;
  unint64_t v47 = v44;
  unint64_t v90 = v44 & 0xC000000000000001;
  unint64_t v87 = v46;
  os_log_t log = a10;
  swift_beginAccess();
  unint64_t v21 = 4;
  while (1)
  {
    unint64_t v48 = v21 - 4;
    if (v90)
    {
      id v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v50 = __OFADD__(v48, 1);
      unint64_t v51 = v21 - 3;
      if (v50) {
        goto LABEL_57;
      }
    }
    else
    {
      id v49 = *(id *)(v47 + 8 * v21);
      BOOL v50 = __OFADD__(v48, 1);
      unint64_t v51 = v21 - 3;
      if (v50) {
        goto LABEL_57;
      }
    }
    id v52 = v49;
    uint64_t v53 = sub_100695DC4([v52 remObjectID], v45, a8, a9);

    if (!*(void *)(v93 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_52;
    }
    id v94 = (uint64_t *)v51;
    id v54 = v53;
    uint64_t v55 = a10();
    if ((v56 & 1) == 0) {
      break;
    }
    id v57 = *(id *)(*(void *)(v93 + 56) + 8 * v55);

    uint64_t v58 = *v87;
    if ((*v87 & 0xC000000000000001) != 0)
    {
      id v91 = v52;
      id v59 = v54;
      id v60 = v57;
      swift_bridgeObjectRetain();
      uint64_t v61 = __CocoaDictionary.lookup(_:)();
      if (v61)
      {
        uint64_t v101 = v61;
        sub_1000963CC(0, (unint64_t *)&qword_100909B00);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v62 = v102;
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
        id v62 = 0;
      }
      id v45 = a7;
      id v52 = v91;
    }
    else if (*(void *)(v58 + 16))
    {
      id v63 = v52;
      id v64 = v54;
      id v65 = v57;
      swift_bridgeObjectRetain();
      unint64_t v66 = sub_100306FE8((uint64_t)v64);
      if (v67)
      {
        id v62 = *(id *)(*(void *)(v58 + 56) + 8 * v66);

        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
        id v62 = 0;
      }
      id v52 = v63;
    }
    else
    {
      id v73 = v57;
      id v62 = 0;
    }

    uint64_t v68 = *(void *)(v95 + 72);
    unint64_t v69 = v52;
    id v70 = [v52 remObjectID];
    id v71 = v70;
    if (*(void *)(v68 + 16))
    {
      sub_100306FE8((uint64_t)v70);
      a8 = v98;
      if (v72) {
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      a8 = v98;
    }

    swift_bridgeObjectRelease();
    ++v21;
    unint64_t v47 = v96;
    if (v94 == v89) {
      goto LABEL_49;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_52:
  id v75 = v53;
  swift_retain_n();
  id v76 = v75;
  uint64_t v77 = Logger.logObject.getter();
  os_log_type_t v78 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v77, v78))
  {
    uint64_t v79 = swift_slowAlloc();
    NSString v102 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v79 = 136446722;
    uint64_t v101 = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v102);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v79 + 12) = 2082;
    id v92 = v52;
    sub_10010B4E8(v95 + 24, (uint64_t)v104);
    sub_10073F754((uint64_t)v104, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
    uint64_t v80 = sub_100696CF4();
    unint64_t v82 = v81;
    sub_10073F754((uint64_t)v104, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
    uint64_t v101 = sub_1000C51B8(v80, v82, (uint64_t *)&v102);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v79 + 22) = 2080;
    id v83 = [v76 description];
    uint64_t v84 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v86 = v85;

    id v52 = v92;
    uint64_t v101 = sub_1000C51B8(v84, v86, (uint64_t *)&v102);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v77, v78, "[%{public}s] Tried to mutate ordering in relationships with non-existent target object -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v79, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  [self noSuchObjectErrorWithObjectID:v76];
  swift_willThrow();
}

void sub_100707EE4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v6 = a3;
  uint64_t v73 = a2;
  uint64_t v8 = *(void *)(a3 + 16);
  id v9 = *(id *)(a3 + 24);
  v68[2] = &v73;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_100692158((uint64_t (*)(id *))sub_1007426B8, v68, a1);
  if (v4) {
    goto LABEL_54;
  }
  unint64_t v11 = (unint64_t)v10;
  if (qword_1009073A0 != -1) {
    goto LABEL_57;
  }
LABEL_3:
  uint64_t v12 = type metadata accessor for Logger();
  sub_10008E2DC(v12, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  os_log_t log = v13;
  unint64_t v15 = v11 >> 62;
  *(void *)os_log_type_t type = v6;
  uint64_t v67 = v5;
  if (os_log_type_enabled(v13, v14))
  {
    unint64_t v61 = v8;
    uint64_t v8 = swift_slowAlloc();
    v71[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446978;
    id v70 = (void *)sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2048;
    LOBYTE(v60) = v14;
    if (!v15)
    {
      uint64_t v16 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_6;
    }
    goto LABEL_60;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v15)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v21 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v8 = (uint64_t)_swiftEmptyArrayStorage;
    if (!v21) {
      break;
    }
    v71[0] = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v21 & 0x8000000000000000) == 0)
    {
      uint64_t v8 = 0;
      uint64_t v5 = (uint64_t)&selRef_intersectsSet_;
      while (v21 != v8)
      {
        if ((v11 & 0xC000000000000001) != 0) {
          id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v22 = *(id *)(v11 + 8 * v8 + 32);
        }
        id v23 = v22;
        id v9 = sub_100693E40([v23 remObjectID]);

        ++v8;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v6 = *(void *)(v71[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v21 == v8)
        {
          uint64_t v8 = v71[0];
          unint64_t v15 = v11 >> 62;
          uint64_t v6 = *(void *)type;
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      swift_once();
      goto LABEL_3;
    }
    __break(1u);
LABEL_60:
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    id v70 = (void *)v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 22) = 2082;
    sub_1000963CC(0, (unint64_t *)&qword_10090B040);
    id v17 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;

    id v70 = (void *)sub_1000C51B8(v18, v20, v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 32) = 2082;
    swift_bridgeObjectRetain();
    id v70 = (void *)sub_1000C51B8(v61, (unint64_t)v9, v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, (os_log_type_t)v60, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v8, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v15 = v11 >> 62;
    uint64_t v6 = *(void *)type;
  }
LABEL_19:
  id v62 = sub_100717658(v8, v6);
  swift_bridgeObjectRelease();
  if (v15)
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    id v60 = v45;
    if (v45) {
      goto LABEL_21;
    }
    goto LABEL_53;
  }
  id v60 = *(NSObject **)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v60)
  {
LABEL_53:
    swift_bridgeObjectRelease();
LABEL_54:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_21:
  unint64_t v61 = v11 & 0xC000000000000001;
  id v59 = (uint64_t *)(v6 + 48);
  swift_beginAccess();
  uint64_t v5 = 4;
  uint64_t v6 = (uint64_t)v62;
  while (1)
  {
    uint64_t v24 = v5 - 4;
    if (v61)
    {
      id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      unint64_t v26 = (v5 - 3);
      if (__OFADD__(v24, 1)) {
        goto LABEL_56;
      }
    }
    else
    {
      id v25 = *(id *)(v11 + 8 * v5);
      unint64_t v26 = (v5 - 3);
      if (__OFADD__(v24, 1)) {
        goto LABEL_56;
      }
    }
    id v9 = v25;
    uint64_t v27 = sub_100693E40([v9 remObjectID]);

    if (!*(void *)(v6 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_49;
    }
    uint64_t v8 = v27;
    unint64_t v28 = sub_10030703C((void *)v8);
    if ((v29 & 1) == 0) {
      break;
    }
    os_log_t loga = v26;
    id v30 = *(id *)(*(void *)(v6 + 56) + 8 * v28);

    uint64_t v31 = *v59;
    if ((*v59 & 0xC000000000000001) != 0)
    {
      id v32 = (id)v8;
      id v33 = v30;
      swift_bridgeObjectRetain();
      uint64_t v34 = __CocoaDictionary.lookup(_:)();
      if (v34)
      {
        uint64_t v69 = v34;
        sub_1000963CC(0, (unint64_t *)&qword_100909B00);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v35 = v70;
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
        id v35 = 0;
      }
    }
    else
    {
      if (!*(void *)(v31 + 16))
      {
        id v40 = v30;
LABEL_40:
        id v35 = 0;
        goto LABEL_41;
      }
      id v36 = (id)v8;
      id v37 = v30;
      swift_bridgeObjectRetain();
      unint64_t v38 = sub_100306FE8((uint64_t)v36);
      if ((v39 & 1) == 0)
      {

        swift_bridgeObjectRelease();
        goto LABEL_40;
      }
      id v35 = *(id *)(*(void *)(v31 + 56) + 8 * v38);

      swift_bridgeObjectRelease();
    }
LABEL_41:

    uint64_t v41 = *(void *)(v67 + 72);
    id v42 = [v9 remObjectID];
    unint64_t v43 = v42;
    if (*(void *)(v41 + 16))
    {
      sub_100306FE8((uint64_t)v42);
      uint64_t v6 = (uint64_t)v62;
      if (v44) {
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      uint64_t v6 = (uint64_t)v62;
    }

    swift_bridgeObjectRelease();
    ++v5;
    if (loga == v60) {
      goto LABEL_53;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_49:
  id v46 = v27;
  swift_retain_n();
  id v47 = v46;
  unint64_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v48, v49))
  {
    os_log_type_t typea = v49;
    uint64_t v50 = swift_slowAlloc();
    id v70 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v50 = 136446722;
    uint64_t v69 = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v50 + 12) = 2082;
    sub_10010B4E8(v67 + 24, (uint64_t)v72);
    sub_10073F754((uint64_t)v72, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
    uint64_t v51 = sub_100696CF4();
    id v52 = v9;
    unint64_t v54 = v53;
    sub_10073F754((uint64_t)v72, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
    uint64_t v69 = sub_1000C51B8(v51, v54, (uint64_t *)&v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v50 + 22) = 2080;
    id v55 = [v47 description];
    uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v58 = v57;

    id v9 = v52;
    uint64_t v69 = sub_1000C51B8(v56, v58, (uint64_t *)&v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v48, typea, "[%{public}s] Tried to mutate ordering in relationships with non-existent target object -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v50, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  [self noSuchObjectErrorWithObjectID:v47];
  swift_willThrow();
}

void sub_100708978(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v6 = (__objc2_class **)a3;
  uint64_t v205 = a2;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(a3 + 24);
  v194[2] = &v205;
  v194[3] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_100692158((uint64_t (*)(id *))sub_100741994, v194, a1);
  if (v4) {
    goto LABEL_20;
  }
  unint64_t v11 = (unint64_t)v10;
  if (qword_1009073A0 != -1) {
    goto LABEL_92;
  }
LABEL_3:
  uint64_t v12 = type metadata accessor for Logger();
  sub_10008E2DC(v12, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v183 = static os_log_type_t.info.getter();
  os_log_type_t v14 = v13;
  unint64_t v15 = v11 >> 62;
  uint64_t v191 = v5;
  *(void *)unint64_t v192 = v11;
  unint64_t v185 = v11 >> 62;
  os_log_t v187 = (os_log_t)v6;
  if (os_log_type_enabled(v13, v183))
  {
    uint64_t v181 = v8;
    uint64_t v6 = (__objc2_class **)swift_slowAlloc();
    v198[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446978;
    unint64_t v195 = (void *)sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *((_WORD *)v6 + 6) = 2048;
    if (!v15)
    {
      uint64_t v16 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_6;
    }
    goto LABEL_95;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v15)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v9 = (uint64_t)_swiftEmptyArrayStorage;
    if (!v8) {
      break;
    }
    v198[0] = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v8 & 0x8000000000000000) == 0)
    {
      uint64_t v9 = 0;
      unint64_t v21 = v11 & 0xC000000000000001;
      uint64_t v5 = &qword_100909AD0;
      uint64_t v6 = off_1008AA460;
      while (v8 != v9)
      {
        if (v21) {
          id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v22 = *(id *)(v11 + 8 * v9 + 32);
        }
        id v23 = v22;
        sub_100694DE8([v23 remObjectID], (unint64_t *)&qword_100909AD0);
        ++v9;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        unint64_t v11 = *(void *)v192;
        if (v8 == v9)
        {
          uint64_t v9 = v198[0];
          uint64_t v5 = v191;
          unint64_t v15 = v185;
          uint64_t v6 = (__objc2_class **)v187;
          goto LABEL_21;
        }
      }
      __break(1u);
LABEL_92:
      swift_once();
      goto LABEL_3;
    }
    __break(1u);
LABEL_95:
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    unint64_t v195 = (void *)v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *((_WORD *)v6 + 11) = 2082;
    sub_1000963CC(0, (unint64_t *)&qword_100909AD0);
    id v17 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;

    unint64_t v195 = (void *)sub_1000C51B8(v18, v20, v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unint64_t v11 = *(void *)v192;
    swift_bridgeObjectRelease();
    *((_WORD *)v6 + 16) = 2082;
    swift_bridgeObjectRetain();
    unint64_t v195 = (void *)sub_1000C51B8(v181, v9, v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v183, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v6, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v5 = v191;
    unint64_t v15 = v185;
    uint64_t v6 = (__objc2_class **)v187;
  }
LABEL_21:
  uint64_t v24 = sub_100717AC0(v9, (uint64_t)v6);
  swift_bridgeObjectRelease();
  if (v15)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v25)
    {
LABEL_76:
      swift_bridgeObjectRelease();
LABEL_20:
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v25 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v25) {
      goto LABEL_76;
    }
  }
  uint64_t v170 = (uint64_t)(v5 + 3);
  unint64_t v26 = v11 & 0xC000000000000001;
  id v169 = (uint64_t *)(v6 + 6);
  swift_beginAccess();
  unint64_t v27 = 0;
  id v163 = (void *)(v11 + 32);
  uint64_t v164 = v11 & 0xFFFFFFFFFFFFFF8;
  uint64_t v168 = v24;
  unint64_t v165 = v11 & 0xC000000000000001;
  uint64_t v166 = v25;
  while (1)
  {
    if (v26)
    {
      id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v29 = __OFADD__(v27, 1);
      unint64_t v30 = v27 + 1;
      if (v29) {
        goto LABEL_96;
      }
    }
    else
    {
      if (v27 >= *(void *)(v164 + 16)) {
        goto LABEL_97;
      }
      id v28 = (id)v163[v27];
      BOOL v29 = __OFADD__(v27, 1);
      unint64_t v30 = v27 + 1;
      if (v29)
      {
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
        return;
      }
    }
    id v31 = v28;
    id v32 = sub_100694DE8([v31 remObjectID], (unint64_t *)&qword_100909AD0);

    uint64_t v171 = v31;
    if (!v24[2])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_87:
      id v151 = v32;
      swift_retain_n();
      id v152 = v151;
      uint64_t v153 = Logger.logObject.getter();
      os_log_type_t v154 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v153, v154))
      {
        uint64_t v155 = swift_slowAlloc();
        unint64_t v195 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v155 = 136446722;
        uint64_t v197 = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v195);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v155 + 12) = 2082;
        sub_10010B4E8(v170, (uint64_t)v199);
        sub_10073F754((uint64_t)v199, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
        uint64_t v156 = sub_100696CF4();
        unint64_t v158 = v157;
        sub_10073F754((uint64_t)v199, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
        uint64_t v197 = sub_1000C51B8(v156, v158, (uint64_t *)&v195);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v155 + 22) = 2080;
        id v159 = [v152 description];
        uint64_t v160 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v162 = v161;

        id v31 = v171;
        uint64_t v197 = sub_1000C51B8(v160, v162, (uint64_t *)&v195);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v153, v154, "[%{public}s] Tried to mutate ordering in relationships with non-existent target object -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v155, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      [self noSuchObjectErrorWithObjectID:v152];
      swift_willThrow();

      return;
    }
    id v33 = v32;
    unint64_t v34 = sub_10030703C(v33);
    if ((v35 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_87;
    }
    unint64_t v167 = v30;
    id v36 = *(id *)(v24[7] + 8 * v34);

    uint64_t v37 = *v169;
    uint64_t v184 = v33;
    if ((*v169 & 0xC000000000000001) == 0)
    {
      if (*(void *)(v37 + 16))
      {
        id v38 = v33;
        id v42 = v36;
        swift_bridgeObjectRetain();
        unint64_t v43 = sub_100306FE8((uint64_t)v38);
        if (v44)
        {
          id v41 = *(id *)(*(void *)(v37 + 56) + 8 * v43);
          goto LABEL_40;
        }
LABEL_41:

        swift_bridgeObjectRelease();
      }
      else
      {
        id v45 = v36;
      }
      id v41 = 0;
      goto LABEL_44;
    }
    id v38 = v33;
    id v39 = v36;
    swift_bridgeObjectRetain();
    uint64_t v40 = __CocoaDictionary.lookup(_:)();
    if (!v40) {
      goto LABEL_41;
    }
    uint64_t v197 = v40;
    sub_1000963CC(0, (unint64_t *)&qword_100909B00);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v41 = v195;
    swift_unknownObjectRelease();
LABEL_40:

    swift_bridgeObjectRelease();
LABEL_44:

    uint64_t v46 = v5[9];
    id v47 = [v31 remObjectID];
    unint64_t v48 = v47;
    if (*(void *)(v46 + 16) && (unint64_t v49 = sub_100306FE8((uint64_t)v47), (v50 & 1) != 0))
    {
      uint64_t v51 = *(void *)(*(void *)(v46 + 56) + 8 * v49);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v51 = 0;
    }
    id v52 = v33;

    unint64_t v53 = sub_100697C24(v51, (uint64_t)&off_1008B17F0, (uint64_t)sub_10030A028, (uint64_t (*)(void))sub_100692B20, &qword_100921DB0);
    swift_bridgeObjectRelease();
    uint64_t v178 = v53[2];
    if (v178) {
      break;
    }
LABEL_75:

    swift_bridgeObjectRelease();
    unint64_t v27 = v167;
    uint64_t v24 = v168;
    unint64_t v26 = v165;
    if (v167 == v166) {
      goto LABEL_76;
    }
  }
  uint64_t v54 = 0;
  uint64_t v177 = v36;
  uint64_t v179 = v53;
  while (1)
  {
    uint64_t v186 = v54;
    unsigned int v55 = *((unsigned __int8 *)v53 + v54 + 32);
    id v56 = [v36 entity];
    id v57 = [v56 relationshipsByName];

    sub_1000963CC(0, &qword_100921AA0);
    uint64_t v58 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    unsigned int v188 = v55;
    uint64_t v59 = v55 <= 1 ? 0x7265646E696D6572 : 0x736E6F6974636573;
    uint64_t v60 = v55 <= 1 ? 0xE900000000000073 : 0xE800000000000000;
    uint64_t v180 = v59;
    if (!*(void *)(v58 + 16)) {
      break;
    }
    unint64_t v61 = sub_1001806F8(v59, v60);
    if ((v62 & 1) == 0) {
      break;
    }
    id v63 = v36;
    id v64 = v31;
    id v65 = *(id *)(*(void *)(v58 + 56) + 8 * v61);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v182 = v65;
    if (![v65 isOrdered])
    {
      unint64_t v176 = v60;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v117 = v184;
      swift_retain_n();
      id v118 = v117;
      Swift::String v119 = Logger.logObject.getter();
      os_log_type_t v120 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v119, v120))
      {
        os_log_type_t v193 = v120;
        uint64_t v121 = swift_slowAlloc();
        unint64_t v195 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v121 = 136446978;
        uint64_t v189 = v119;
        uint64_t v197 = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v195);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v121 + 12) = 2082;
        sub_10010B4E8(v170, (uint64_t)v204);
        sub_10073F754((uint64_t)v204, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
        uint64_t v122 = sub_100696CF4();
        unint64_t v124 = v123;
        sub_10073F754((uint64_t)v204, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
        uint64_t v197 = sub_1000C51B8(v122, v124, (uint64_t *)&v195);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v121 + 22) = 2080;
        id v125 = [v118 description];
        uint64_t v126 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v128 = v127;

        uint64_t v129 = v126;
        uint64_t v130 = v170;
        uint64_t v197 = sub_1000C51B8(v129, v128, (uint64_t *)&v195);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        id v131 = v118;
        swift_bridgeObjectRelease();
        *(_WORD *)(v121 + 32) = 2080;
        uint64_t v132 = v180;
        os_log_type_t v133 = (void *)v176;
        uint64_t v197 = sub_1000C51B8(v180, v176, (uint64_t *)&v195);
        uint64_t v134 = v177;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v189, v193, "[%{public}s] Tried to mutate a relationship that is not ordered -- bail {author: %{public}s, cdObjectID: %s, orderableRelationhipKey: %s}", (uint8_t *)v121, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        id v131 = v118;
        swift_release_n();
        uint64_t v130 = v170;
        os_log_type_t v133 = (void *)v60;
        uint64_t v132 = v180;
        uint64_t v134 = v63;
      }
      unint64_t v195 = 0;
      unint64_t v196 = 0xE000000000000000;
      _StringGuts.grow(_:)(115);
      v135._countAndFlagsBits = 0xD000000000000044;
      v135._object = (void *)0x80000001007DC100;
      String.append(_:)(v135);
      sub_10010B4E8(v130, (uint64_t)v203);
      sub_10073F754((uint64_t)v203, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v136 = sub_100696CF4();
      id v138 = v137;
      sub_10073F754((uint64_t)v203, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      v139._countAndFlagsBits = v136;
      v139._object = v138;
      String.append(_:)(v139);
      swift_bridgeObjectRelease();
      v140._countAndFlagsBits = 0x656A624F6463202CLL;
      v140._object = (void *)0xEE00203A44497463;
      String.append(_:)(v140);
      id v141 = [v131 description];
      uint64_t v142 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v144 = v143;

      v145._countAndFlagsBits = v142;
      v145._object = v144;
      String.append(_:)(v145);
      swift_bridgeObjectRelease();
      v146._object = (void *)0x80000001007DC0E0;
      v146._countAndFlagsBits = 0xD00000000000001ALL;
      String.append(_:)(v146);
      uint64_t v147 = self;
      v148._countAndFlagsBits = v132;
      v148._object = v133;
      String.append(_:)(v148);
      swift_bridgeObjectRelease();
      v149._countAndFlagsBits = 125;
      v149._object = (void *)0xE100000000000000;
      String.append(_:)(v149);
      NSString v150 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v147 internalErrorWithDebugDescription:v150];

      swift_willThrow();
      return;
    }
    id v52 = v184;
    id v66 = v184;
    uint64_t v67 = v5;
    swift_retain_n();
    id v68 = v66;
    uint64_t v69 = Logger.logObject.getter();
    os_log_type_t v70 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v69, v70))
    {
      os_log_type_t v172 = v70;
      os_log_t log = v69;
      unint64_t v174 = v60;
      uint64_t v71 = swift_slowAlloc();
      char v72 = (void *)swift_slowAlloc();
      unint64_t v195 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v71 = 136447234;
      uint64_t v197 = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v195);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v71 + 12) = 2082;
      sub_10010B4E8(v170, (uint64_t)v202);
      sub_10073F754((uint64_t)v202, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v73 = sub_100696CF4();
      unint64_t v75 = v74;
      sub_10073F754((uint64_t)v202, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      uint64_t v197 = sub_1000C51B8(v73, v75, (uint64_t *)&v195);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v71 + 22) = 2114;
      uint64_t v197 = (uint64_t)v68;
      id v76 = v68;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v72 = v184;

      *(_WORD *)(v71 + 32) = 2082;
      unint64_t v77 = 0xD00000000000001FLL;
      unsigned int v78 = v188;
      if (v188 != 1) {
        unint64_t v77 = 0xD00000000000001CLL;
      }
      unint64_t v79 = 0x80000001007C6280;
      if (v188 != 1) {
        unint64_t v79 = 0x80000001007C62A0;
      }
      if (v188) {
        uint64_t v80 = v77;
      }
      else {
        uint64_t v80 = 0xD00000000000001CLL;
      }
      if (v188) {
        unint64_t v81 = v79;
      }
      else {
        unint64_t v81 = 0x80000001007C6260;
      }
      uint64_t v197 = sub_1000C51B8(v80, v81, (uint64_t *)&v195);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v71 + 42) = 2082;
      uint64_t v197 = sub_1000C51B8(v180, v174, (uint64_t *)&v195);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v172, "[%{public}s] Updating relationship ordering {author: %{public}s, objectID: %{public}@, changedValueKey: %{public}s, orderableRelationshipKey: %{public}s}", (uint8_t *)v71, 0x34u);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      id v31 = v171;
      uint64_t v5 = v191;
      id v52 = v184;
    }
    else
    {
      id v31 = v64;

      swift_release_n();
      uint64_t v5 = v67;
      unsigned int v78 = v188;
    }
    id v36 = v177;
    sub_10070BF00(v177, v78 > 1, v205, v31, (uint64_t)v5, 0xD00000000000001ALL, 0x80000001007DBFB0);
    if (*((unsigned char *)v5 + 104) == 1)
    {
      id v83 = v177;
      [v83 updateChangeCount];
    }
    uint64_t v54 = v186 + 1;

    unint64_t v53 = v179;
    if (v178 == v186 + 1) {
      goto LABEL_75;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v84 = v52;
  swift_retain_n();
  unint64_t v85 = (void *)v60;
  id v86 = v84;
  unint64_t v87 = Logger.logObject.getter();
  os_log_type_t v88 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v87, v88))
  {
    unint64_t v175 = (unint64_t)v85;
    uint64_t v89 = swift_slowAlloc();
    unint64_t v195 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v89 = 136446978;
    os_log_type_t type = v88;
    uint64_t v197 = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v195);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v89 + 12) = 2082;
    sub_10010B4E8(v170, (uint64_t)v201);
    sub_10073F754((uint64_t)v201, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
    uint64_t v90 = sub_100696CF4();
    unint64_t v92 = v91;
    sub_10073F754((uint64_t)v201, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
    uint64_t v197 = sub_1000C51B8(v90, v92, (uint64_t *)&v195);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v89 + 22) = 2080;
    id v93 = [v86 description];
    uint64_t v94 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v96 = v95;

    id v31 = v171;
    uint64_t v97 = v94;
    uint64_t v98 = v170;
    uint64_t v197 = sub_1000C51B8(v97, v96, (uint64_t *)&v195);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v89 + 32) = 2080;
    uint64_t v99 = v180;
    id v100 = (void *)v175;
    uint64_t v197 = sub_1000C51B8(v180, v175, (uint64_t *)&v195);
    id v36 = v177;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v87, type, "[%{public}s] Tried to mutate ordering of a non-existing relationship -- bail {author: %{public}s, cdObjectID: %s, orderableRelationhipKey: %s}", (uint8_t *)v89, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    uint64_t v98 = v170;
    uint64_t v99 = v180;
    id v100 = v85;
  }
  unint64_t v195 = 0;
  unint64_t v196 = 0xE000000000000000;
  _StringGuts.grow(_:)(120);
  v101._countAndFlagsBits = 0xD000000000000049;
  v101._object = (void *)0x80000001007DC090;
  String.append(_:)(v101);
  sub_10010B4E8(v98, (uint64_t)v200);
  sub_10073F754((uint64_t)v200, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
  uint64_t v102 = sub_100696CF4();
  id v104 = v103;
  sub_10073F754((uint64_t)v200, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
  v105._countAndFlagsBits = v102;
  v105._object = v104;
  String.append(_:)(v105);
  swift_bridgeObjectRelease();
  v106._countAndFlagsBits = 0x656A624F6463202CLL;
  v106._object = (void *)0xEE00203A44497463;
  String.append(_:)(v106);
  id v107 = [v86 description];
  uint64_t v108 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v110 = v109;

  v111._countAndFlagsBits = v108;
  v111._object = v110;
  String.append(_:)(v111);
  swift_bridgeObjectRelease();
  v112._object = (void *)0x80000001007DC0E0;
  v112._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v112);
  unint64_t v113 = self;
  v114._countAndFlagsBits = v99;
  v114._object = v100;
  String.append(_:)(v114);
  swift_bridgeObjectRelease();
  v115._countAndFlagsBits = 125;
  v115._object = (void *)0xE100000000000000;
  String.append(_:)(v115);
  NSString v116 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v113 internalErrorWithDebugDescription:v116];

  swift_willThrow();
}

void sub_10070A350(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v6 = a3;
  uint64_t v185 = a2;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(a3 + 24);
  v174[2] = &v185;
  v174[3] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_100692158((uint64_t (*)(id *))sub_100741B3C, v174, a1);
  if (v4) {
    goto LABEL_21;
  }
  unint64_t v11 = (unint64_t)v10;
  if (qword_1009073A0 != -1) {
    goto LABEL_86;
  }
LABEL_3:
  uint64_t v12 = type metadata accessor for Logger();
  sub_10008E2DC(v12, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  uint64_t v14 = static os_log_type_t.info.getter();
  os_log_t log = v13;
  BOOL v15 = os_log_type_enabled(v13, (os_log_type_t)v14);
  unint64_t v16 = v11 >> 62;
  uint64_t v173 = v5;
  unint64_t v165 = v11 >> 62;
  uint64_t v167 = v6;
  if (v15)
  {
    os_log_type_t v161 = v14;
    uint64_t v163 = v8;
    uint64_t v14 = swift_slowAlloc();
    v178[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136446978;
    unint64_t v175 = (void *)sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, v178);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 12) = 2048;
    if (!v16)
    {
      uint64_t v17 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_6;
    }
    goto LABEL_89;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v16)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v9 = (uint64_t)_swiftEmptyArrayStorage;
    if (!v8) {
      break;
    }
    v178[0] = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v8 & 0x8000000000000000) == 0)
    {
      uint64_t v9 = 0;
      uint64_t v6 = v11;
      v11 &= 0xC000000000000001;
      while (v8 != v9)
      {
        if (v11) {
          id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v22 = *(id *)(v6 + 8 * v9 + 32);
        }
        id v23 = v22;
        sub_100694DE8([v23 remObjectID], &qword_10090ABC0);
        ++v9;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v5 = *(void *)(v178[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v8 == v9)
        {
          uint64_t v9 = v178[0];
          uint64_t v5 = v173;
          unint64_t v11 = v6;
          uint64_t v6 = v167;
          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_86:
      swift_once();
      goto LABEL_3;
    }
    __break(1u);
LABEL_89:
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    unint64_t v175 = (void *)v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 22) = 2082;
    sub_1000963CC(0, &qword_10090ABC0);
    id v18 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;

    unint64_t v175 = (void *)sub_1000C51B8(v19, v21, v178);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 32) = 2082;
    swift_bridgeObjectRetain();
    unint64_t v175 = (void *)sub_1000C51B8(v163, v9, v178);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, v161, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v14, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v5 = v173;
    unint64_t v16 = v11 >> 62;
    uint64_t v6 = v167;
  }
LABEL_22:
  uint64_t v24 = sub_100714A48(v9, v6);
  swift_bridgeObjectRelease();
  if (v165)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v25) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v25 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v25)
    {
LABEL_20:
      swift_bridgeObjectRelease();
LABEL_21:
      swift_bridgeObjectRelease();
      return;
    }
  }
  uint64_t v156 = v5 + 24;
  unint64_t v26 = v11 & 0xC000000000000001;
  os_log_type_t v154 = (uint64_t *)(v6 + 48);
  swift_beginAccess();
  unint64_t v27 = 0;
  unint64_t v148 = v11 + 32;
  uint64_t v149 = v11 & 0xFFFFFFFFFFFFFF8;
  unint64_t v28 = (unint64_t)"REMCDTemplateSection";
  uint64_t v147 = (char *)&type metadata for Swift.AnyObject + 8;
  unint64_t v150 = v11 & 0xC000000000000001;
  uint64_t v151 = v25;
  while (1)
  {
    if (v26)
    {
      id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v30 = __OFADD__(v27, 1);
      unint64_t v31 = v27 + 1;
      if (v30) {
        goto LABEL_90;
      }
    }
    else
    {
      if (v27 >= *(void *)(v149 + 16)) {
        goto LABEL_91;
      }
      id v29 = *(id *)(v148 + 8 * v27);
      BOOL v30 = __OFADD__(v27, 1);
      unint64_t v31 = v27 + 1;
      if (v30)
      {
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
        return;
      }
    }
    os_log_t loga = (os_log_t)v29;
    id v32 = sub_100694DE8([loga remObjectID], &qword_10090ABC0);

    if (!v24[2])
    {
      unint64_t v134 = v28;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_80:
      id v135 = v32;
      swift_retain_n();
      id v136 = v135;
      unint64_t v137 = Logger.logObject.getter();
      os_log_type_t v138 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v137, v138))
      {
        uint64_t v139 = swift_slowAlloc();
        unint64_t v175 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v139 = 136446722;
        uint64_t v177 = sub_1000C51B8(0xD00000000000001ALL, v134 | 0x8000000000000000, (uint64_t *)&v175);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v139 + 12) = 2082;
        sub_10010B4E8(v156, (uint64_t)v179);
        sub_10073F754((uint64_t)v179, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
        uint64_t v140 = sub_100696CF4();
        unint64_t v142 = v141;
        sub_10073F754((uint64_t)v179, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
        uint64_t v177 = sub_1000C51B8(v140, v142, (uint64_t *)&v175);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v139 + 22) = 2080;
        id v143 = [v136 description];
        uint64_t v144 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v146 = v145;

        uint64_t v177 = sub_1000C51B8(v144, v146, (uint64_t *)&v175);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v137, v138, "[%{public}s] Tried to mutate ordering in relationships with non-existent target object -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v139, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      [self noSuchObjectErrorWithObjectID:v136];
      swift_willThrow();

      return;
    }
    unint64_t v153 = v31;
    id v33 = v32;
    unint64_t v34 = sub_10030703C(v33);
    if ((v35 & 1) == 0)
    {
      unint64_t v134 = v28;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_80;
    }
    id v36 = *(id *)(v24[7] + 8 * v34);

    uint64_t v37 = *v154;
    uint64_t v166 = v36;
    uint64_t v168 = v33;
    if ((*v154 & 0xC000000000000001) == 0)
    {
      if (*(void *)(v37 + 16))
      {
        id v42 = v33;
        id v43 = v36;
        swift_bridgeObjectRetain();
        unint64_t v44 = sub_100306FE8((uint64_t)v42);
        if (v45)
        {
          id v41 = *(id *)(*(void *)(v37 + 56) + 8 * v44);

          swift_bridgeObjectRelease();
          goto LABEL_45;
        }

        swift_bridgeObjectRelease();
      }
      else
      {
        id v46 = v36;
      }
      id v41 = 0;
      goto LABEL_45;
    }
    id v38 = v33;
    id v39 = v36;
    swift_bridgeObjectRetain();
    uint64_t v40 = __CocoaDictionary.lookup(_:)();
    if (v40)
    {
      uint64_t v177 = v40;
      sub_1000963CC(0, (unint64_t *)&qword_100909B00);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v41 = v175;
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease();
      id v41 = 0;
    }
LABEL_45:

    uint64_t v47 = *(void *)(v5 + 72);
    id v48 = [loga remObjectID];
    unint64_t v49 = v48;
    if (*(void *)(v47 + 16) && (unint64_t v50 = sub_100306FE8((uint64_t)v48), (v51 & 1) != 0))
    {
      uint64_t v52 = *(void *)(*(void *)(v47 + 56) + 8 * v50);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v52 = 0;
    }

    unint64_t v53 = sub_100697C24(v52, (uint64_t)&off_1008B1C70, (uint64_t)sub_10030A04C, (uint64_t (*)(void))sub_1006939E0, &qword_100921DE0);
    swift_bridgeObjectRelease();
    uint64_t v162 = v53[2];
    if (v162) {
      break;
    }

    swift_bridgeObjectRelease();
LABEL_68:

    unint64_t v26 = v150;
    unint64_t v27 = v153;
    if (v153 == v151) {
      goto LABEL_20;
    }
  }
  id v152 = v24;
  uint64_t v54 = 0;
  uint64_t v155 = (const char *)v28;
  uint64_t v164 = v53;
  while (1)
  {
    int v55 = *((unsigned __int8 *)v53 + v54 + 32);
    id v56 = [v36 entity:v147];
    id v57 = [v56 relationshipsByName];

    sub_1000963CC(0, &qword_100921AA0);
    uint64_t v58 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    if (!*(void *)(v58 + 16)) {
      break;
    }
    unint64_t v59 = sub_1001806F8(0x737473696CLL, 0xE500000000000000);
    if ((v60 & 1) == 0) {
      break;
    }
    id v61 = *(id *)(*(void *)(v58 + 56) + 8 * v59);
    swift_bridgeObjectRelease();
    if (![v61 isOrdered])
    {
      uint64_t v160 = v61;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v104 = v168;
      swift_retain_n();
      id v105 = v104;
      Swift::String v106 = Logger.logObject.getter();
      os_log_type_t v107 = static os_log_type_t.fault.getter();
      uint64_t v108 = &selRef_ckServerChangeTokens;
      if (os_log_type_enabled(v106, v107))
      {
        uint64_t v109 = swift_slowAlloc();
        unint64_t v175 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v109 = 136446978;
        os_log_type_t v172 = v107;
        uint64_t v177 = sub_1000C51B8(0xD00000000000001ALL, v28 | 0x8000000000000000, (uint64_t *)&v175);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v109 + 12) = 2082;
        uint64_t v110 = v156;
        sub_10010B4E8(v156, (uint64_t)v184);
        sub_10073F754((uint64_t)v184, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
        uint64_t v111 = sub_100696CF4();
        unint64_t v113 = v112;
        sub_10073F754((uint64_t)v184, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
        uint64_t v177 = sub_1000C51B8(v111, v113, (uint64_t *)&v175);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v109 + 22) = 2080;
        id v114 = [v105 description];
        uint64_t v115 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v117 = v116;

        uint64_t v177 = sub_1000C51B8(v115, v117, (uint64_t *)&v175);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v109 + 32) = 2080;
        uint64_t v177 = sub_1000C51B8(0x737473696CLL, 0xE500000000000000, (uint64_t *)&v175);
        uint64_t v108 = &selRef_ckServerChangeTokens;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v106, v172, "[%{public}s] Tried to mutate a relationship that is not ordered -- bail {author: %{public}s, cdObjectID: %s, orderableRelationhipKey: %s}", (uint8_t *)v109, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
        uint64_t v110 = v156;
      }
      id v118 = self;
      unint64_t v175 = 0;
      unint64_t v176 = 0xE000000000000000;
      _StringGuts.grow(_:)(115);
      v119._countAndFlagsBits = 0xD000000000000044;
      v119._object = (void *)0x80000001007DC100;
      String.append(_:)(v119);
      sub_10010B4E8(v110, (uint64_t)v183);
      sub_10073F754((uint64_t)v183, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v120 = sub_100696CF4();
      uint64_t v122 = v121;
      sub_10073F754((uint64_t)v183, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      v123._countAndFlagsBits = v120;
      v123._object = v122;
      String.append(_:)(v123);
      swift_bridgeObjectRelease();
      v124._countAndFlagsBits = 0x656A624F6463202CLL;
      v124._object = (void *)0xEE00203A44497463;
      String.append(_:)(v124);
      id v125 = [v105 v108[166]];
      uint64_t v126 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v128 = v127;

      v129._countAndFlagsBits = v126;
      v129._object = v128;
      String.append(_:)(v129);
      swift_bridgeObjectRelease();
      v130._object = (void *)0x80000001007DC0E0;
      v130._countAndFlagsBits = 0xD00000000000001ALL;
      String.append(_:)(v130);
      v131._countAndFlagsBits = 0x737473696CLL;
      v131._object = (void *)0xE500000000000000;
      String.append(_:)(v131);
      v132._countAndFlagsBits = 125;
      v132._object = (void *)0xE100000000000000;
      String.append(_:)(v132);
      NSString v133 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v118 internalErrorWithDebugDescription:v133];

      swift_willThrow();
      return;
    }
    id v62 = v168;
    swift_retain_n();
    id v63 = v62;
    id v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v64, v65))
    {
      id v159 = v61;
      uint64_t v66 = swift_slowAlloc();
      unint64_t v157 = (void *)swift_slowAlloc();
      unint64_t v175 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v66 = 136447234;
      os_log_type_t type = v65;
      uint64_t v177 = sub_1000C51B8(0xD00000000000001ALL, 0x80000001007DBFB0, (uint64_t *)&v175);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v66 + 12) = 2082;
      sub_10010B4E8(v156, (uint64_t)v182);
      sub_10073F754((uint64_t)v182, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v67 = sub_100696CF4();
      unint64_t v69 = v68;
      sub_10073F754((uint64_t)v182, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      uint64_t v177 = sub_1000C51B8(v67, v69, (uint64_t *)&v175);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v66 + 22) = 2114;
      uint64_t v177 = (uint64_t)v63;
      id v70 = v63;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v157 = v168;

      *(_WORD *)(v66 + 32) = 2082;
      if (v55) {
        uint64_t v71 = 0xD00000000000001ALL;
      }
      else {
        uint64_t v71 = 0xD000000000000018;
      }
      if (v55) {
        unint64_t v72 = 0x80000001007C6610;
      }
      else {
        unint64_t v72 = 0x80000001007C65F0;
      }
      uint64_t v177 = sub_1000C51B8(v71, v72, (uint64_t *)&v175);
      unint64_t v28 = (unint64_t)v155;
      uint64_t v5 = v173;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v66 + 42) = 2082;
      uint64_t v177 = sub_1000C51B8(0x737473696CLL, 0xE500000000000000, (uint64_t *)&v175);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v64, type, "[%{public}s] Updating relationship ordering {author: %{public}s, objectID: %{public}@, changedValueKey: %{public}s, orderableRelationshipKey: %{public}s}", (uint8_t *)v66, 0x34u);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      id v61 = v159;
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    id v36 = v166;
    sub_10070C1B4(v166, v185, loga, v5, 0xD00000000000001ALL, v28 | 0x8000000000000000);
    unint64_t v53 = v164;
    if (*(unsigned char *)(v5 + 104) == 1)
    {
      id v74 = v166;
      [v74 updateChangeCount];
    }
    ++v54;

    if (v162 == v54)
    {

      swift_bridgeObjectRelease();
      uint64_t v24 = v152;
      goto LABEL_68;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v75 = v168;
  swift_retain_n();
  id v76 = v75;
  unint64_t v77 = Logger.logObject.getter();
  os_log_type_t v78 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v77, v78))
  {
    uint64_t v79 = swift_slowAlloc();
    unint64_t v175 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v79 = 136446978;
    os_log_type_t v171 = v78;
    uint64_t v177 = sub_1000C51B8(0xD00000000000001ALL, v28 | 0x8000000000000000, (uint64_t *)&v175);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v79 + 12) = 2082;
    uint64_t v80 = v156;
    sub_10010B4E8(v156, (uint64_t)v181);
    sub_10073F754((uint64_t)v181, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
    uint64_t v81 = sub_100696CF4();
    unint64_t v83 = v82;
    sub_10073F754((uint64_t)v181, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
    uint64_t v177 = sub_1000C51B8(v81, v83, (uint64_t *)&v175);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v79 + 22) = 2080;
    id v84 = [v76 description];
    uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v87 = v86;

    uint64_t v177 = sub_1000C51B8(v85, v87, (uint64_t *)&v175);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v79 + 32) = 2080;
    uint64_t v177 = sub_1000C51B8(0x737473696CLL, 0xE500000000000000, (uint64_t *)&v175);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v77, v171, "[%{public}s] Tried to mutate ordering of a non-existing relationship -- bail {author: %{public}s, cdObjectID: %s, orderableRelationhipKey: %s}", (uint8_t *)v79, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    uint64_t v80 = v156;
  }
  os_log_type_t v88 = self;
  unint64_t v175 = 0;
  unint64_t v176 = 0xE000000000000000;
  _StringGuts.grow(_:)(120);
  v89._countAndFlagsBits = 0xD000000000000049;
  v89._object = (void *)0x80000001007DC090;
  String.append(_:)(v89);
  sub_10010B4E8(v80, (uint64_t)v180);
  sub_10073F754((uint64_t)v180, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
  uint64_t v90 = sub_100696CF4();
  unint64_t v92 = v91;
  sub_10073F754((uint64_t)v180, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
  v93._countAndFlagsBits = v90;
  v93._object = v92;
  String.append(_:)(v93);
  swift_bridgeObjectRelease();
  v94._countAndFlagsBits = 0x656A624F6463202CLL;
  v94._object = (void *)0xEE00203A44497463;
  String.append(_:)(v94);
  id v95 = [v76 description];
  uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v98 = v97;

  v99._countAndFlagsBits = v96;
  v99._object = v98;
  String.append(_:)(v99);
  swift_bridgeObjectRelease();
  v100._object = (void *)0x80000001007DC0E0;
  v100._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v100);
  v101._countAndFlagsBits = 0x737473696CLL;
  v101._object = (void *)0xE500000000000000;
  String.append(_:)(v101);
  v102._countAndFlagsBits = 125;
  v102._object = (void *)0xE100000000000000;
  String.append(_:)(v102);
  NSString v103 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v88 internalErrorWithDebugDescription:v103];

  swift_willThrow();
}

void sub_10070BC8C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, void (*a7)(void *, uint64_t))
{
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [a1 mutableOrderedSetValueForKey:v12];

  if (v13)
  {
    id v14 = v13;
    a7(a1, a3);
  }
  else
  {
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10008E2DC(v15, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain_n();
    unint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136446466;
      swift_bridgeObjectRetain();
      sub_1000C51B8(a5, a6, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2080;
      sub_1000C51B8(0x736E6F6974636573, 0xE800000000000000, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "[%{public}s] Not mutating ordering because mutableOrderedSet for relationship is nil {orderableRelationshipKey: %s}", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_10070BF00(void *a1, char a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  char v9 = a2 & 1;
  if (a2) {
    uint64_t v10 = 0x736E6F6974636573;
  }
  else {
    uint64_t v10 = 0x7265646E696D6572;
  }
  if (a2) {
    unint64_t v11 = 0xE800000000000000;
  }
  else {
    unint64_t v11 = 0xE900000000000073;
  }
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [a1 mutableOrderedSetValueForKey:v12];

  if (v13)
  {
    id v14 = v13;
    sub_1005DE4C0(v14, v9, a1, a4, a5);
  }
  else
  {
    uint64_t v22 = v10;
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10008E2DC(v15, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain_n();
    unint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136446466;
      swift_bridgeObjectRetain();
      sub_1000C51B8(a6, a7, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2080;
      sub_1000C51B8(v22, v11, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "[%{public}s] Not mutating ordering because mutableOrderedSet for relationship is nil {orderableRelationshipKey: %s}", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_10070C1B4(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [a1 mutableOrderedSetValueForKey:v11];

  if (v12)
  {
    id v13 = v12;
    sub_10028EBB8(v13, a1, a3, a4);
  }
  else
  {
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10008E2DC(v14, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain_n();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136446466;
      swift_bridgeObjectRetain();
      sub_1000C51B8(a5, a6, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v17 + 12) = 2080;
      sub_1000C51B8(0x737473696CLL, 0xE500000000000000, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "[%{public}s] Not mutating ordering because mutableOrderedSet for relationship is nil {orderableRelationshipKey: %s}", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_10070C414(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (char **)v3;
  uint64_t v6 = a3;
  char v9 = *(uint8_t **)(a3 + 16);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(v3 + 72);
  v86[0] = a2;
  v84[2] = v86;
  v84[3] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v11 = sub_100692158((uint64_t (*)(id *))sub_100740884, v84, a1);
  if (!v4)
  {
    unint64_t v12 = (unint64_t)v11;
    if (qword_1009073A0 != -1) {
      goto LABEL_60;
    }
LABEL_3:
    uint64_t v13 = type metadata accessor for Logger();
    sub_10008E2DC(v13, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v77 = static os_log_type_t.info.getter();
    uint64_t v15 = v14;
    unint64_t v16 = v12 >> 62;
    unint64_t v81 = v12 >> 62;
    unint64_t v83 = (void *)v12;
    id v74 = v5;
    uint64_t v79 = v6;
    if (os_log_type_enabled(v14, v77))
    {
      unint64_t v76 = (unint64_t)v9;
      char v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v86[0] = v17;
      *(_DWORD *)char v9 = 136446978;
      uint64_t v85 = sub_1000C51B8(0x7661537265746661, 0xEF6E6F6974634165, v86);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *((_WORD *)v9 + 6) = 2048;
      unint64_t v75 = v17;
      if (!v16)
      {
        uint64_t v18 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_6;
      }
      goto LABEL_63;
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    while (1)
    {
      if (v16)
      {
        swift_bridgeObjectRetain();
        uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v6 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v8 = (uint64_t)_swiftEmptyArrayStorage;
      if (!v6) {
        break;
      }
      v86[0] = (uint64_t)_swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      if ((v6 & 0x8000000000000000) == 0)
      {
        uint64_t v8 = 0;
        unint64_t v24 = v12 & 0xC000000000000001;
        uint64_t v5 = &selRef_intersectsSet_;
        while (v6 != v8)
        {
          if (v24) {
            id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v25 = *(id *)(v12 + 8 * v8 + 32);
          }
          id v26 = v25;
          char v9 = (uint8_t *)sub_100695DC4([v26 remObjectID], (void (*)(void))type metadata accessor for REMCDManualSortHint, 0xD000000000000013, (void *)0x80000001007DC150);

          ++v8;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          unint64_t v12 = (unint64_t)v83;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          if (v6 == v8)
          {
            uint64_t v8 = v86[0];
            uint64_t v5 = v74;
            unint64_t v16 = v81;
            goto LABEL_22;
          }
        }
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        swift_once();
        goto LABEL_3;
      }
      __break(1u);
LABEL_63:
      swift_bridgeObjectRetain();
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      uint64_t v85 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *((_WORD *)v9 + 11) = 2082;
      type metadata accessor for REMCDManualSortHint();
      id v19 = [(id)swift_getObjCClassFromMetadata() description];
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v22 = v21;

      unint64_t v12 = (unint64_t)v83;
      uint64_t v85 = sub_1000C51B8(v20, v22, v86);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *((_WORD *)v9 + 16) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v85 = sub_1000C51B8(v76, v8, v86);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v23 = v15;
      _os_log_impl((void *)&_mh_execute_header, v15, v77, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", v9, 0x2Au);
      uint64_t v15 = v75;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v5 = v74;
      unint64_t v16 = v81;
    }
LABEL_22:
    unint64_t v27 = sub_1007119D0(v8, v79);
    swift_bridgeObjectRelease();
    if (v16)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v28) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v28 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v28)
      {
LABEL_20:
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    uint64_t v6 = v79 + 56;
    uint64_t v71 = (uint64_t)(v5 + 3);
    unint64_t v76 = v12 & 0xC000000000000001;
    uint64_t v73 = (uint64_t *)(v79 + 48);
    swift_beginAccess();
    uint64_t v69 = v79 + 56;
    swift_beginAccess();
    uint64_t v8 = 4;
    unint64_t v75 = 0x80000001007DC150;
    id v70 = v27;
    uint64_t v72 = v28;
    while (1)
    {
      uint64_t v29 = v8 - 4;
      if (v76)
      {
        id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v31 = v8 - 3;
        if (__OFADD__(v29, 1)) {
          goto LABEL_59;
        }
      }
      else
      {
        id v30 = *(id *)(v12 + 8 * v8);
        uint64_t v31 = v8 - 3;
        if (__OFADD__(v29, 1)) {
          goto LABEL_59;
        }
      }
      id v32 = v30;
      id v33 = sub_100695DC4([v32 remObjectID], (void (*)(void))type metadata accessor for REMCDManualSortHint, 0xD000000000000013, (void *)0x80000001007DC150);
      os_log_type_t v78 = v32;

      uint64_t v34 = *v73;
      uint64_t v80 = v31;
      uint64_t v82 = v8;
      if ((*v73 & 0xC000000000000001) != 0) {
        break;
      }
      if (*(void *)(v34 + 16))
      {
        id v35 = v33;
        swift_bridgeObjectRetain();
        unint64_t v38 = sub_100306FE8((uint64_t)v35);
        if (v39)
        {
          id v37 = *(id *)(*(void *)(v34 + 56) + 8 * v38);
          goto LABEL_40;
        }
        goto LABEL_41;
      }
LABEL_42:
      id v37 = 0;
LABEL_43:

      if (!v27[2]) {
        goto LABEL_49;
      }
      id v40 = v33;
      unint64_t v41 = sub_10030703C(v40);
      if ((v42 & 1) == 0)
      {

LABEL_49:
        id v45 = v33;
        swift_retain_n();
        uint64_t v6 = (uint64_t)v45;
        char v9 = (uint8_t *)Logger.logObject.getter();
        os_log_type_t v46 = static os_log_type_t.error.getter();
        if (os_log_type_enabled((os_log_t)v9, v46))
        {
          uint64_t v47 = swift_slowAlloc();
          Swift::String v89 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v47 = 136446466;
          sub_10010B4E8(v71, (uint64_t)v87);
          sub_10073F754((uint64_t)v87, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
          uint64_t v48 = sub_100696CF4();
          unint64_t v50 = v49;
          sub_10073F754((uint64_t)v87, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
          *(void *)(v47 + 4) = sub_1000C51B8(v48, v50, (uint64_t *)&v89);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v47 + 12) = 2080;
          id v51 = [(id)v6 description];
          uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v54 = v53;

          uint64_t v55 = v52;
          unint64_t v27 = v70;
          *(void *)(v47 + 14) = sub_1000C51B8(v55, v54, (uint64_t *)&v89);

          uint64_t v5 = v74;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v9, v46, "Tried to perform after-save action with non-existent target object -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v47, 0x16u);
          swift_arrayDestroy();
          unint64_t v12 = (unint64_t)v83;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        goto LABEL_28;
      }
      char v9 = (uint8_t *)*(id *)(v27[7] + 8 * v41);

      if (!*(void *)(*(void *)v69 + 16))
      {
        id v56 = v9;
LABEL_53:
        id v57 = v40;
        swift_retain_n();
        uint64_t v6 = (uint64_t)v57;
        uint64_t v58 = Logger.logObject.getter();
        os_log_type_t v59 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v58, v59))
        {
          uint64_t v60 = swift_slowAlloc();
          Swift::String v89 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v60 = 136446466;
          sub_10010B4E8(v71, (uint64_t)v88);
          sub_10073F754((uint64_t)v88, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
          os_log_type_t type = v59;
          uint64_t v61 = sub_100696CF4();
          unint64_t v68 = v9;
          unint64_t v63 = v62;
          sub_10073F754((uint64_t)v88, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
          *(void *)(v60 + 4) = sub_1000C51B8(v61, v63, (uint64_t *)&v89);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v60 + 12) = 2080;
          id v64 = [(id)v6 description];
          char v9 = (uint8_t *)static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v66 = v65;

          *(void *)(v60 + 14) = sub_1000C51B8((uint64_t)v9, v66, (uint64_t *)&v89);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v58, type, "Could not find the changed keys & values to perform after-save action -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v60, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        unint64_t v12 = (unint64_t)v83;
        goto LABEL_28;
      }
      uint64_t v6 = (uint64_t)v40;
      id v43 = v9;
      swift_bridgeObjectRetain();
      sub_100306FE8(v6);
      if ((v44 & 1) == 0)
      {

        swift_bridgeObjectRelease();
        goto LABEL_53;
      }

      swift_bridgeObjectRelease();
LABEL_28:
      uint64_t v8 = v82 + 1;
      if (v80 == v72) {
        goto LABEL_20;
      }
    }
    id v35 = v33;
    swift_bridgeObjectRetain();
    uint64_t v36 = __CocoaDictionary.lookup(_:)();
    if (v36)
    {
      v84[4] = v36;
      sub_1000963CC(0, (unint64_t *)&qword_100909B00);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v37 = v89;
      swift_unknownObjectRelease();
LABEL_40:

      swift_bridgeObjectRelease();
      goto LABEL_43;
    }
LABEL_41:

    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
LABEL_21:
  swift_bridgeObjectRelease();
}

void sub_10070D014(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id *), uint64_t a5, uint64_t a6, uint64_t (*a7)(void *, NSObject *), uint64_t (*a8)(void))
{
  uint64_t v13 = a3;
  uint64_t v15 = *(void **)(a3 + 16);
  unint64_t v16 = *(void *)(a3 + 24);
  uint64_t v17 = *(void *)(v8 + 72);
  v95[0] = a2;
  v93[2] = v95;
  v93[3] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_100692158(a4, v93, a1);
  if (!v9)
  {
    unint64_t v19 = (unint64_t)v18;
    unint64_t v87 = v15;
    os_log_type_t v88 = a7;
    unint64_t v85 = v8;
    if (qword_1009073A0 != -1) {
      goto LABEL_59;
    }
LABEL_3:
    uint64_t v20 = type metadata accessor for Logger();
    sub_10008E2DC(v20, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.info.getter();
    unint64_t v23 = v19 >> 62;
    unint64_t v89 = v19 >> 62;
    unint64_t v91 = (void *)v19;
    unint64_t v92 = (unint64_t *)a5;
    if (os_log_type_enabled(v21, v22))
    {
      a7 = (uint64_t (*)(void *, NSObject *))swift_slowAlloc();
      v95[0] = swift_slowAlloc();
      *(_DWORD *)a7 = 136446978;
      uint64_t v94 = sub_1000C51B8(0x7661537265746661, 0xEF6E6F6974634165, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *((_WORD *)a7 + 6) = 2048;
      os_log_t log = v21;
      LOBYTE(v83) = v22;
      if (!v23)
      {
        uint64_t v24 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_6;
      }
      goto LABEL_62;
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    while (1)
    {
      unint64_t v16 = v85;
      if (v23)
      {
        swift_bridgeObjectRetain();
        uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v29 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      id v30 = _swiftEmptyArrayStorage;
      if (!v29) {
        break;
      }
      v95[0] = (uint64_t)_swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      if ((v29 & 0x8000000000000000) == 0)
      {
        a5 = 0;
        unint64_t v16 = v19 & 0xC000000000000001;
        while (v29 != a5)
        {
          if (v16) {
            id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v31 = *(id *)(v19 + 8 * a5 + 32);
          }
          id v32 = v31;
          sub_100694DE8([v32 remObjectID], v92);

          ++a5;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          a7 = *(uint64_t (**)(void *, NSObject *))(v95[0] + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          unint64_t v19 = (unint64_t)v91;
          if (v29 == a5)
          {
            id v30 = (void *)v95[0];
            unint64_t v16 = v85;
            goto LABEL_19;
          }
        }
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        swift_once();
        goto LABEL_3;
      }
      __break(1u);
LABEL_62:
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      uint64_t v94 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *((_WORD *)a7 + 11) = 2082;
      sub_1000963CC(0, v92);
      id v25 = [(id)swift_getObjCClassFromMetadata() description];
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v28 = v27;

      uint64_t v94 = sub_1000C51B8(v26, v28, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      unint64_t v19 = (unint64_t)v91;
      swift_bridgeObjectRelease();
      *((_WORD *)a7 + 16) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v94 = sub_1000C51B8((uint64_t)v87, v16, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, log, (os_log_type_t)v83, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)a7, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v23 = v89;
    }
LABEL_19:
    os_log_t log = v88(v30, v13);
    swift_bridgeObjectRelease();
    if (v89)
    {
      swift_bridgeObjectRetain();
      uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v34 = v92;
      if (v33) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v33 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v34 = v92;
      if (v33)
      {
LABEL_21:
        uint64_t v80 = v16 + 24;
        uint64_t v82 = v13 + 6;
        unint64_t v83 = v19 & 0xC000000000000001;
        swift_beginAccess();
        uint64_t v79 = v13 + 7;
        swift_beginAccess();
        a5 = 4;
        uint64_t v13 = log;
        unint64_t v81 = (uint64_t (*)(void *, NSObject *))v33;
        while (1)
        {
          uint64_t v35 = a5 - 4;
          if (v83)
          {
            id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            BOOL v37 = __OFADD__(v35, 1);
            unint64_t v38 = (uint64_t (*)(void *, NSObject *))(a5 - 3);
            if (v37) {
              goto LABEL_58;
            }
          }
          else
          {
            id v36 = *(id *)(v19 + 8 * a5);
            BOOL v37 = __OFADD__(v35, 1);
            unint64_t v38 = (uint64_t (*)(void *, NSObject *))(a5 - 3);
            if (v37) {
              goto LABEL_58;
            }
          }
          a7 = (uint64_t (*)(void *, NSObject *))v36;
          char v39 = sub_100694DE8([a7 remObjectID], v34);
          os_log_type_t v88 = v38;

          Class isa = v82->isa;
          uint64_t v90 = a5;
          if (((unint64_t)v82->isa & 0xC000000000000001) != 0)
          {
            id v41 = v39;
            swift_bridgeObjectRetain();
            uint64_t v42 = __CocoaDictionary.lookup(_:)();
            if (v42)
            {
              v93[4] = v42;
              sub_1000963CC(0, (unint64_t *)&qword_100909B00);
              swift_unknownObjectRetain();
              swift_dynamicCast();
              id v43 = v98;
              swift_unknownObjectRelease();

              swift_bridgeObjectRelease();
            }
            else
            {

              swift_bridgeObjectRelease();
              id v43 = 0;
            }
            uint64_t v13 = log;
          }
          else if (*((void *)isa + 2))
          {
            id v44 = v39;
            swift_bridgeObjectRetain();
            unint64_t v45 = sub_100306FE8((uint64_t)v44);
            if (v46)
            {
              id v43 = *(id *)(*((void *)isa + 7) + 8 * v45);

              swift_bridgeObjectRelease();
            }
            else
            {

              swift_bridgeObjectRelease();
              id v43 = 0;
            }
          }
          else
          {
            id v43 = 0;
          }

          unint64_t v87 = a7;
          if (!v13[2].isa) {
            goto LABEL_44;
          }
          id v47 = v39;
          uint64_t v48 = a8();
          if ((v49 & 1) == 0) {
            break;
          }
          id v50 = *((id *)v13[7].isa + v48);

          if (!*((void *)v79->isa + 2))
          {
            id v65 = v50;
LABEL_50:
            id v66 = v47;
            swift_retain_n();
            a7 = (uint64_t (*)(void *, NSObject *))v66;
            unint64_t v67 = v16;
            unint64_t v68 = Logger.logObject.getter();
            os_log_type_t v69 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v68, v69))
            {
              uint64_t v70 = swift_slowAlloc();
              uint64_t v98 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v70 = 136446466;
              sub_10010B4E8(v80, (uint64_t)v97);
              sub_10073F754((uint64_t)v97, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
              os_log_type_t type = v69;
              uint64_t v71 = sub_100696CF4();
              unint64_t v73 = v72;
              sub_10073F754((uint64_t)v97, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
              *(void *)(v70 + 4) = sub_1000C51B8(v71, v73, (uint64_t *)&v98);
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v70 + 12) = 2080;
              id v74 = [a7 description];
              uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v77 = v76;

              *(void *)(v70 + 14) = sub_1000C51B8(v75, v77, (uint64_t *)&v98);
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v68, type, "Could not find the changed keys & values to perform after-save action -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v70, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_release_n();
            }
            unint64_t v19 = (unint64_t)v91;
            uint64_t v34 = v92;
            unint64_t v16 = v67;
            uint64_t v13 = log;
            goto LABEL_24;
          }
          id v51 = v47;
          id v52 = v50;
          swift_bridgeObjectRetain();
          sub_100306FE8((uint64_t)v51);
          if ((v53 & 1) == 0)
          {

            swift_bridgeObjectRelease();
            goto LABEL_50;
          }

          swift_bridgeObjectRelease();
LABEL_23:
          unint64_t v19 = (unint64_t)v91;
          uint64_t v34 = v92;
LABEL_24:
          a5 = v90 + 1;
          if (v88 == v81) {
            goto LABEL_55;
          }
        }

LABEL_44:
        id v54 = v39;
        swift_retain_n();
        id v55 = v54;
        a7 = (uint64_t (*)(void *, NSObject *))Logger.logObject.getter();
        os_log_type_t v56 = static os_log_type_t.error.getter();
        if (os_log_type_enabled((os_log_t)a7, v56))
        {
          uint64_t v57 = swift_slowAlloc();
          uint64_t v98 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v57 = 136446466;
          sub_10010B4E8(v80, (uint64_t)v96);
          sub_10073F754((uint64_t)v96, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
          uint64_t v58 = sub_100696CF4();
          unint64_t v60 = v59;
          sub_10073F754((uint64_t)v96, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
          *(void *)(v57 + 4) = sub_1000C51B8(v58, v60, (uint64_t *)&v98);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v57 + 12) = 2080;
          id v61 = [v55 description];
          uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v64 = v63;

          *(void *)(v57 + 14) = sub_1000C51B8(v62, v64, (uint64_t *)&v98);
          uint64_t v13 = log;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)a7, v56, "Tried to perform after-save action with non-existent target object -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v57, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          unint64_t v16 = v85;
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        goto LABEL_23;
      }
    }
LABEL_55:
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
}

void sub_10070DC24(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id *), uint64_t a5, uint64_t a6, uint64_t (*a7)(void *, NSObject *), uint64_t (*a8)(void))
{
  uint64_t v13 = a3;
  uint64_t v15 = *(void **)(a3 + 16);
  unint64_t v16 = *(void *)(a3 + 24);
  uint64_t v17 = *(void *)(v8 + 72);
  v95[0] = a2;
  v93[2] = v95;
  v93[3] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_100692158(a4, v93, a1);
  if (!v9)
  {
    unint64_t v19 = (unint64_t)v18;
    unint64_t v87 = v15;
    os_log_type_t v88 = a7;
    unint64_t v85 = v8;
    if (qword_1009073A0 != -1) {
      goto LABEL_59;
    }
LABEL_3:
    uint64_t v20 = type metadata accessor for Logger();
    sub_10008E2DC(v20, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.info.getter();
    unint64_t v23 = v19 >> 62;
    unint64_t v89 = v19 >> 62;
    unint64_t v91 = (void *)v19;
    unint64_t v92 = (unint64_t *)a5;
    if (os_log_type_enabled(v21, v22))
    {
      a7 = (uint64_t (*)(void *, NSObject *))swift_slowAlloc();
      v95[0] = swift_slowAlloc();
      *(_DWORD *)a7 = 136446978;
      uint64_t v94 = sub_1000C51B8(0x7661537265746661, 0xEF6E6F6974634165, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *((_WORD *)a7 + 6) = 2048;
      os_log_t log = v21;
      LOBYTE(v83) = v22;
      if (!v23)
      {
        uint64_t v24 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_6;
      }
      goto LABEL_62;
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    while (1)
    {
      unint64_t v16 = v85;
      if (v23)
      {
        swift_bridgeObjectRetain();
        uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v29 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      id v30 = _swiftEmptyArrayStorage;
      if (!v29) {
        break;
      }
      v95[0] = (uint64_t)_swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      if ((v29 & 0x8000000000000000) == 0)
      {
        a5 = 0;
        unint64_t v16 = v19 & 0xC000000000000001;
        while (v29 != a5)
        {
          if (v16) {
            id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v31 = *(id *)(v19 + 8 * a5 + 32);
          }
          id v32 = v31;
          sub_100694DE8([v32 remObjectID], v92);

          ++a5;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          a7 = *(uint64_t (**)(void *, NSObject *))(v95[0] + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          unint64_t v19 = (unint64_t)v91;
          if (v29 == a5)
          {
            id v30 = (void *)v95[0];
            unint64_t v16 = v85;
            goto LABEL_19;
          }
        }
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        swift_once();
        goto LABEL_3;
      }
      __break(1u);
LABEL_62:
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      uint64_t v94 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *((_WORD *)a7 + 11) = 2082;
      sub_1000963CC(0, v92);
      id v25 = [(id)swift_getObjCClassFromMetadata() description];
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v28 = v27;

      uint64_t v94 = sub_1000C51B8(v26, v28, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      unint64_t v19 = (unint64_t)v91;
      swift_bridgeObjectRelease();
      *((_WORD *)a7 + 16) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v94 = sub_1000C51B8((uint64_t)v87, v16, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, log, (os_log_type_t)v83, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)a7, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v23 = v89;
    }
LABEL_19:
    os_log_t log = v88(v30, v13);
    swift_bridgeObjectRelease();
    if (v89)
    {
      swift_bridgeObjectRetain();
      uint64_t v77 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v33 = v92;
      unint64_t v83 = (uint64_t (*)(void *, NSObject *))v77;
      if (v77) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v33 = v92;
      unint64_t v83 = *(uint64_t (**)(void *, NSObject *))((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v83)
      {
LABEL_21:
        uint64_t v80 = v16 + 24;
        unint64_t v81 = v13 + 6;
        unint64_t v82 = v19 & 0xC000000000000001;
        swift_beginAccess();
        uint64_t v79 = v13 + 7;
        swift_beginAccess();
        a5 = 4;
        uint64_t v13 = log;
        do
        {
          uint64_t v42 = a5 - 4;
          if (v82)
          {
            id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            BOOL v44 = __OFADD__(v42, 1);
            unint64_t v45 = (uint64_t (*)(void *, NSObject *))(a5 - 3);
            if (v44) {
              goto LABEL_58;
            }
          }
          else
          {
            id v43 = *(id *)(v19 + 8 * a5);
            BOOL v44 = __OFADD__(v42, 1);
            unint64_t v45 = (uint64_t (*)(void *, NSObject *))(a5 - 3);
            if (v44) {
              goto LABEL_58;
            }
          }
          a7 = (uint64_t (*)(void *, NSObject *))v43;
          char v46 = sub_100694DE8([a7 remObjectID], v33);
          os_log_type_t v88 = v45;

          Class isa = v81->isa;
          uint64_t v90 = a5;
          if (((unint64_t)v81->isa & 0xC000000000000001) != 0)
          {
            id v48 = v46;
            swift_bridgeObjectRetain();
            uint64_t v49 = __CocoaDictionary.lookup(_:)();
            if (v49)
            {
              v93[4] = v49;
              sub_1000963CC(0, (unint64_t *)&qword_100909B00);
              swift_unknownObjectRetain();
              swift_dynamicCast();
              id v50 = v98;
              swift_unknownObjectRelease();

              swift_bridgeObjectRelease();
            }
            else
            {

              swift_bridgeObjectRelease();
              id v50 = 0;
            }
            uint64_t v13 = log;
          }
          else
          {
            if (*((void *)isa + 2))
            {
              id v51 = v46;
              swift_bridgeObjectRetain();
              unint64_t v52 = sub_100306FE8((uint64_t)v51);
              if (v53)
              {
                id v50 = *(id *)(*((void *)isa + 7) + 8 * v52);

                swift_bridgeObjectRelease();
                goto LABEL_40;
              }

              swift_bridgeObjectRelease();
            }
            id v50 = 0;
          }
LABEL_40:

          unint64_t v87 = a7;
          if (!v13[2].isa) {
            goto LABEL_46;
          }
          id v54 = v46;
          uint64_t v55 = a8();
          if ((v56 & 1) == 0)
          {

LABEL_46:
            id v61 = v46;
            swift_retain_n();
            id v62 = v61;
            a7 = (uint64_t (*)(void *, NSObject *))Logger.logObject.getter();
            os_log_type_t v63 = static os_log_type_t.error.getter();
            if (os_log_type_enabled((os_log_t)a7, v63))
            {
              uint64_t v34 = swift_slowAlloc();
              uint64_t v98 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v34 = 136446466;
              sub_10010B4E8(v80, (uint64_t)v96);
              sub_10073F754((uint64_t)v96, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
              uint64_t v35 = sub_100696CF4();
              unint64_t v37 = v36;
              sub_10073F754((uint64_t)v96, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
              *(void *)(v34 + 4) = sub_1000C51B8(v35, v37, (uint64_t *)&v98);
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v34 + 12) = 2080;
              id v38 = [v62 description];
              uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v41 = v40;

              *(void *)(v34 + 14) = sub_1000C51B8(v39, v41, (uint64_t *)&v98);
              uint64_t v13 = log;
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, (os_log_t)a7, v63, "Tried to perform after-save action with non-existent target object -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v34, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              unint64_t v16 = v85;
              swift_slowDealloc();
            }
            else
            {

              swift_release_n();
            }
            goto LABEL_23;
          }
          id v57 = *((id *)v13[7].isa + v55);

          if (!*((void *)v79->isa + 2))
          {
            id v64 = v57;
LABEL_50:
            id v65 = v54;
            swift_retain_n();
            a7 = (uint64_t (*)(void *, NSObject *))v65;
            unint64_t v66 = v16;
            unint64_t v67 = Logger.logObject.getter();
            os_log_type_t v68 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v67, v68))
            {
              uint64_t v69 = swift_slowAlloc();
              uint64_t v98 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v69 = 136446466;
              sub_10010B4E8(v80, (uint64_t)v97);
              sub_10073F754((uint64_t)v97, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
              os_log_type_t type = v68;
              uint64_t v70 = sub_100696CF4();
              unint64_t v72 = v71;
              sub_10073F754((uint64_t)v97, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
              *(void *)(v69 + 4) = sub_1000C51B8(v70, v72, (uint64_t *)&v98);
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v69 + 12) = 2080;
              id v73 = [a7 description];
              uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v76 = v75;

              *(void *)(v69 + 14) = sub_1000C51B8(v74, v76, (uint64_t *)&v98);
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v67, type, "Could not find the changed keys & values to perform after-save action -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v69, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_release_n();
            }
            unint64_t v19 = (unint64_t)v91;
            uint64_t v33 = v92;
            unint64_t v16 = v66;
            uint64_t v13 = log;
            goto LABEL_24;
          }
          id v58 = v54;
          id v59 = v57;
          swift_bridgeObjectRetain();
          sub_100306FE8((uint64_t)v58);
          if ((v60 & 1) == 0)
          {

            swift_bridgeObjectRelease();
            goto LABEL_50;
          }

          swift_bridgeObjectRelease();
LABEL_23:
          unint64_t v19 = (unint64_t)v91;
          uint64_t v33 = v92;
LABEL_24:
          a5 = v90 + 1;
        }
        while (v88 != v83);
      }
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
}

void sub_10070E830(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id *), uint64_t a5, uint64_t (*a6)(void *, uint64_t), void (*a7)(void), uint64_t a8, void *a9, uint64_t (*a10)(void))
{
  uint64_t v19 = *(void *)(a3 + 16);
  unint64_t v18 = *(void *)(a3 + 24);
  uint64_t v20 = *(void *)(v10 + 72);
  v100[0] = a2;
  v98[2] = v100;
  v98[3] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v21 = (char *)sub_100692158(a4, v98, a1);
  if (!v11)
  {
    unint64_t v94 = v18;
    id v95 = a7;
    os_log_type_t v22 = v21;
    uint64_t v90 = a3;
    unint64_t v91 = a6;
    uint64_t v88 = v19;
    uint64_t v23 = a8;
    uint64_t v89 = v10;
    if (qword_1009073A0 != -1) {
      goto LABEL_60;
    }
LABEL_3:
    uint64_t v24 = type metadata accessor for Logger();
    sub_10008E2DC(v24, (uint64_t)qword_100916070);
    unint64_t v25 = (unint64_t)v22;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v22 = (char *)static os_log_type_t.info.getter();
    unint64_t v27 = v25 >> 62;
    uint64_t v96 = (char *)v25;
    unint64_t v92 = v25 >> 62;
    if (os_log_type_enabled(v26, (os_log_type_t)v22))
    {
      LOBYTE(v87) = (_BYTE)v22;
      os_log_type_t v22 = (char *)swift_slowAlloc();
      v100[0] = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v22 = 136446978;
      uint64_t v99 = sub_1000C51B8(0x7661537265746661, 0xEF6E6F6974634165, v100);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *((_WORD *)v22 + 6) = 2048;
      if (!v27)
      {
        uint64_t v28 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_6;
      }
      goto LABEL_63;
    }
    uint64_t v33 = v23;

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    while (1)
    {
      unint64_t v94 = (unint64_t)a9;
      if (v27)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v23 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v34 = _swiftEmptyArrayStorage;
      if (!v23) {
        break;
      }
      v100[0] = (uint64_t)_swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      if ((v23 & 0x8000000000000000) == 0)
      {
        uint64_t v35 = 0;
        unint64_t v36 = v25 & 0xC000000000000001;
        while (v23 != v35)
        {
          if (v36) {
            id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v37 = *(id *)&v96[8 * v35 + 32];
          }
          id v38 = v37;
          os_log_type_t v22 = (char *)sub_100695DC4([v38 remObjectID], v95, a8, a9);

          ++v35;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          a5 = *(void *)(v100[0] + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          if (v23 == v35)
          {
            uint64_t v34 = (void *)v100[0];
            unint64_t v25 = (unint64_t)v96;
            uint64_t v33 = a8;
            goto LABEL_19;
          }
        }
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        swift_once();
        goto LABEL_3;
      }
      __break(1u);
LABEL_63:
      swift_bridgeObjectRetain();
      uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      uint64_t v99 = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *((_WORD *)v22 + 11) = 2082;
      ((void (*)(void))a5)(0);
      id v29 = [(id)swift_getObjCClassFromMetadata() description];
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v32 = v31;

      uint64_t v99 = sub_1000C51B8(v30, v32, v100);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      unint64_t v25 = (unint64_t)v96;
      swift_bridgeObjectRelease();
      *((_WORD *)v22 + 16) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v99 = sub_1000C51B8(v88, v94, v100);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v87, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v22, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v33 = a8;
      unint64_t v27 = v92;
    }
LABEL_19:
    uint64_t v23 = v90;
    a5 = v91(v34, v90);
    swift_bridgeObjectRelease();
    if (v92)
    {
      swift_bridgeObjectRetain();
      uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v87 = v39;
      if (!v39)
      {
LABEL_56:
        swift_bridgeObjectRelease();
        goto LABEL_57;
      }
    }
    else
    {
      uint64_t v87 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v87) {
        goto LABEL_56;
      }
    }
    uint64_t v84 = v89 + 24;
    unint64_t v85 = (uint64_t *)(v90 + 48);
    unint64_t v86 = v25 & 0xC000000000000001;
    swift_beginAccess();
    uint64_t v83 = v90 + 56;
    swift_beginAccess();
    uint64_t v40 = 4;
    uint64_t v88 = a5;
    while (1)
    {
      uint64_t v41 = v40 - 4;
      if (v86)
      {
        id v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v43 = v40 - 3;
        if (__OFADD__(v41, 1)) {
          goto LABEL_59;
        }
      }
      else
      {
        id v42 = *(id *)(v25 + 8 * v40);
        uint64_t v43 = v40 - 3;
        if (__OFADD__(v41, 1)) {
          goto LABEL_59;
        }
      }
      id v44 = v42;
      unint64_t v45 = sub_100695DC4([v44 remObjectID], v95, v33, a9);

      uint64_t v46 = *v85;
      unint64_t v91 = (uint64_t (*)(void *, uint64_t))v44;
      uint64_t v93 = v43;
      if ((*v85 & 0xC000000000000001) != 0)
      {
        id v47 = v45;
        swift_bridgeObjectRetain();
        uint64_t v48 = __CocoaDictionary.lookup(_:)();
        if (v48)
        {
          v98[4] = v48;
          sub_1000963CC(0, (unint64_t *)&qword_100909B00);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          os_log_type_t v22 = v103;
          swift_unknownObjectRelease();

          swift_bridgeObjectRelease();
        }
        else
        {

          swift_bridgeObjectRelease();
          os_log_type_t v22 = 0;
        }
        a5 = v88;
      }
      else if (*(void *)(v46 + 16))
      {
        id v49 = v45;
        swift_bridgeObjectRetain();
        unint64_t v50 = sub_100306FE8((uint64_t)v49);
        if (v51)
        {
          os_log_type_t v22 = (char *)*(id *)(*(void *)(v46 + 56) + 8 * v50);

          swift_bridgeObjectRelease();
        }
        else
        {

          swift_bridgeObjectRelease();
          os_log_type_t v22 = 0;
        }
      }
      else
      {
        os_log_type_t v22 = 0;
      }

      uint64_t v90 = v40;
      if (!*(void *)(a5 + 16)) {
        goto LABEL_43;
      }
      id v52 = v45;
      uint64_t v53 = a10();
      if ((v54 & 1) == 0) {
        break;
      }
      os_log_type_t v22 = (char *)*(id *)(*(void *)(a5 + 56) + 8 * v53);

      if (!*(void *)(*(void *)v83 + 16))
      {
        uint64_t v69 = v22;
LABEL_51:
        id v70 = v52;
        swift_retain_n();
        uint64_t v23 = (uint64_t)v70;
        unint64_t v71 = Logger.logObject.getter();
        os_log_type_t v72 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v71, v72))
        {
          unint64_t v82 = v22;
          os_log_type_t v22 = (char *)swift_slowAlloc();
          NSString v103 = (char *)swift_slowAlloc();
          *(_DWORD *)os_log_type_t v22 = 136446466;
          sub_10010B4E8(v84, (uint64_t)v102);
          sub_10073F754((uint64_t)v102, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
          os_log_type_t type = v72;
          uint64_t v73 = sub_100696CF4();
          unint64_t v75 = v74;
          sub_10073F754((uint64_t)v102, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
          *(void *)(v22 + 4) = sub_1000C51B8(v73, v75, (uint64_t *)&v103);
          swift_release_n();
          swift_bridgeObjectRelease();
          *((_WORD *)v22 + 6) = 2080;
          id v76 = [(id)v23 description];
          uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v79 = v78;

          uint64_t v80 = v77;
          a5 = v88;
          *(void *)(v22 + 14) = sub_1000C51B8(v80, v79, (uint64_t *)&v103);

          unint64_t v25 = (unint64_t)v96;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v71, type, "Could not find the changed keys & values to perform after-save action -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v22, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
LABEL_54:
        uint64_t v40 = v90;
        uint64_t v57 = v93;
        goto LABEL_55;
      }
      uint64_t v23 = (uint64_t)v52;
      uint64_t v55 = v22;
      os_log_type_t v22 = v22;
      swift_bridgeObjectRetain();
      sub_100306FE8(v23);
      if ((v56 & 1) == 0)
      {

        swift_bridgeObjectRelease();
        os_log_type_t v22 = v55;
        uint64_t v33 = a8;
        goto LABEL_51;
      }

      swift_bridgeObjectRelease();
      uint64_t v57 = v93;
      uint64_t v33 = a8;
LABEL_55:
      ++v40;
      if (v57 == v87) {
        goto LABEL_56;
      }
    }

LABEL_43:
    id v58 = v45;
    swift_retain_n();
    uint64_t v23 = (uint64_t)v58;
    id v59 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v59, v60))
    {
      os_log_type_t v22 = (char *)swift_slowAlloc();
      NSString v103 = (char *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v22 = 136446466;
      sub_10010B4E8(v84, (uint64_t)v101);
      sub_10073F754((uint64_t)v101, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v61 = sub_100696CF4();
      unint64_t v63 = v62;
      sub_10073F754((uint64_t)v101, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      *(void *)(v22 + 4) = sub_1000C51B8(v61, v63, (uint64_t *)&v103);
      swift_release_n();
      swift_bridgeObjectRelease();
      *((_WORD *)v22 + 6) = 2080;
      id v64 = [(id)v23 description];
      uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v67 = v66;

      uint64_t v68 = v65;
      uint64_t v33 = a8;
      *(void *)(v22 + 14) = sub_1000C51B8(v68, v67, (uint64_t *)&v103);

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "Tried to perform after-save action with non-existent target object -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      a5 = v88;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    unint64_t v25 = (unint64_t)v96;
    goto LABEL_54;
  }
LABEL_57:
  swift_bridgeObjectRelease();
}

void sub_10070F470(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a3;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v7 = *(void **)(a3 + 24);
  Class isa = v3[9].isa;
  v91[0] = a2;
  v89[2] = v91;
  v89[3] = isa;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = (char **)sub_100692158((uint64_t (*)(id *))sub_100740E34, v89, a1);
  if (!v4)
  {
    unint64_t v11 = (unint64_t)v10;
    uint64_t v83 = v3;
    if (qword_1009073A0 != -1) {
      goto LABEL_59;
    }
LABEL_3:
    uint64_t v12 = type metadata accessor for Logger();
    uint64_t v13 = sub_10008E2DC(v12, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v78 = v13;
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.info.getter();
    unint64_t v16 = v14;
    BOOL v17 = os_log_type_enabled(v14, v15);
    unint64_t v18 = v11 >> 62;
    unint64_t v86 = v11 >> 62;
    uint64_t v88 = (char **)v11;
    if (v17)
    {
      LOBYTE(v84) = v15;
      uint64_t v19 = (void *)swift_slowAlloc();
      v91[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136446978;
      uint64_t v90 = sub_1000C51B8(0x7661537265746661, 0xEF6E6F6974634165, v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *((_WORD *)v19 + 6) = 2048;
      uint64_t v85 = v8;
      if (!v18)
      {
        uint64_t v20 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_6;
      }
      goto LABEL_62;
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    while (1)
    {
      unint64_t v16 = v83;
      if (v18)
      {
        swift_bridgeObjectRetain();
        uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v24 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v19 = _swiftEmptyArrayStorage;
      if (!v24) {
        break;
      }
      v91[0] = (uint64_t)_swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      if ((v24 & 0x8000000000000000) == 0)
      {
        uint64_t v25 = 0;
        unint64_t v26 = v11 & 0xC000000000000001;
        unint64_t v11 = (unint64_t)&selRef_intersectsSet_;
        while (v24 != v25)
        {
          if (v26) {
            unint64_t v27 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            unint64_t v27 = v88[v25 + 4];
          }
          uint64_t v28 = v27;
          uint64_t v7 = sub_100693E40([v28 remObjectID]);

          ++v25;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          uint64_t v8 = *(void *)(v91[0] + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          if (v24 == v25)
          {
            uint64_t v19 = (void *)v91[0];
            unint64_t v11 = (unint64_t)v88;
            unint64_t v16 = v83;
            goto LABEL_19;
          }
        }
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        swift_once();
        goto LABEL_3;
      }
      __break(1u);
LABEL_62:
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      uint64_t v90 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *((_WORD *)v19 + 11) = 2082;
      sub_1000963CC(0, (unint64_t *)&qword_10090B040);
      id v21 = [(id)swift_getObjCClassFromMetadata() description];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v23 = v22;

      unint64_t v11 = (unint64_t)v88;
      uint64_t v90 = sub_1000C51B8(v8, v23, v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *((_WORD *)v19 + 16) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v90 = sub_1000C51B8(v85, (unint64_t)v7, v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v84, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v19, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v18 = v86;
    }
LABEL_19:
    uint64_t v8 = (uint64_t)sub_100717658((uint64_t)v19, v5);
    swift_bridgeObjectRelease();
    if (v86)
    {
      swift_bridgeObjectRetain();
      uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v81 = v29;
      if (!v29)
      {
LABEL_55:
        swift_bridgeObjectRelease();
        goto LABEL_56;
      }
    }
    else
    {
      uint64_t v81 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v81) {
        goto LABEL_55;
      }
    }
    uint64_t v77 = (uint64_t)&v16[3];
    unint64_t v79 = (uint64_t *)(v5 + 48);
    unint64_t v80 = v11 & 0xC000000000000001;
    swift_beginAccess();
    uint64_t v76 = v5 + 56;
    swift_beginAccess();
    uint64_t v30 = 4;
    uint64_t v5 = v78;
    uint64_t v82 = v8;
    while (1)
    {
      uint64_t v39 = v30 - 4;
      if (v80)
      {
        uint64_t v40 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v7 = (void *)(v30 - 3);
        if (__OFADD__(v39, 1)) {
          goto LABEL_58;
        }
      }
      else
      {
        uint64_t v40 = (char *)*(id *)(v11 + 8 * v30);
        uint64_t v7 = (void *)(v30 - 3);
        if (__OFADD__(v39, 1)) {
          goto LABEL_58;
        }
      }
      uint64_t v41 = v40;
      id v42 = sub_100693E40([v41 remObjectID]);
      uint64_t v84 = v41;

      uint64_t v43 = *v79;
      uint64_t v85 = (uint64_t)v7;
      uint64_t v87 = v30;
      if ((*v79 & 0xC000000000000001) != 0)
      {
        id v44 = v42;
        swift_bridgeObjectRetain();
        uint64_t v45 = __CocoaDictionary.lookup(_:)();
        if (v45)
        {
          v89[4] = v45;
          sub_1000963CC(0, (unint64_t *)&qword_100909B00);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v46 = v94;
          swift_unknownObjectRelease();

          swift_bridgeObjectRelease();
        }
        else
        {

          swift_bridgeObjectRelease();
          id v46 = 0;
        }
        uint64_t v8 = v82;
      }
      else if (*(void *)(v43 + 16))
      {
        id v47 = v42;
        swift_bridgeObjectRetain();
        unint64_t v48 = sub_100306FE8((uint64_t)v47);
        if (v49)
        {
          id v46 = *(id *)(*(void *)(v43 + 56) + 8 * v48);

          swift_bridgeObjectRelease();
        }
        else
        {

          swift_bridgeObjectRelease();
          id v46 = 0;
        }
      }
      else
      {
        id v46 = 0;
      }

      if (!*(void *)(v8 + 16)) {
        goto LABEL_45;
      }
      id v50 = v42;
      unint64_t v51 = sub_10030703C(v50);
      if ((v52 & 1) == 0) {
        break;
      }
      id v53 = *(id *)(*(void *)(v8 + 56) + 8 * v51);

      if (!*(void *)(*(void *)v76 + 16))
      {
        id v61 = v53;
LABEL_51:
        id v62 = v50;
        swift_retain_n();
        id v63 = v62;
        id v64 = Logger.logObject.getter();
        os_log_type_t v65 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v64, v65))
        {
          uint64_t v66 = swift_slowAlloc();
          unint64_t v94 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v66 = 136446466;
          sub_10010B4E8(v77, (uint64_t)v93);
          sub_10073F754((uint64_t)v93, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
          os_log_type_t type = v65;
          uint64_t v67 = sub_100696CF4();
          uint64_t v68 = v53;
          unint64_t v70 = v69;
          sub_10073F754((uint64_t)v93, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
          *(void *)(v66 + 4) = sub_1000C51B8(v67, v70, (uint64_t *)&v94);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v66 + 12) = 2080;
          id v71 = [v63 description];
          uint64_t v72 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v74 = v73;

          *(void *)(v66 + 14) = sub_1000C51B8(v72, v74, (uint64_t *)&v94);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v64, type, "Could not find the changed keys & values to perform after-save action -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v66, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v8 = v82;
          swift_slowDealloc();

          uint64_t v5 = v78;
        }
        else
        {

          swift_release_n();
        }
        unint64_t v11 = (unint64_t)v88;
        goto LABEL_25;
      }
      id v54 = v50;
      id v55 = v53;
      swift_bridgeObjectRetain();
      sub_100306FE8((uint64_t)v54);
      if ((v56 & 1) == 0)
      {

        swift_bridgeObjectRelease();
        uint64_t v8 = v82;
        goto LABEL_51;
      }

      swift_bridgeObjectRelease();
      uint64_t v8 = v82;
LABEL_25:
      uint64_t v30 = v87 + 1;
      if (v85 == v81) {
        goto LABEL_55;
      }
    }

LABEL_45:
    id v57 = v42;
    swift_retain_n();
    id v58 = v57;
    id v59 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v31 = swift_slowAlloc();
      unint64_t v94 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136446466;
      sub_10010B4E8(v77, (uint64_t)v92);
      sub_10073F754((uint64_t)v92, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v32 = sub_100696CF4();
      unint64_t v34 = v33;
      sub_10073F754((uint64_t)v92, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      *(void *)(v31 + 4) = sub_1000C51B8(v32, v34, (uint64_t *)&v94);
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      id v35 = [v58 description];
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v38 = v37;

      *(void *)(v31 + 14) = sub_1000C51B8(v36, v38, (uint64_t *)&v94);
      uint64_t v5 = v78;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "Tried to perform after-save action with non-existent target object -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      unint64_t v11 = (unint64_t)v88;
      swift_slowDealloc();
      uint64_t v8 = v82;
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    goto LABEL_25;
  }
LABEL_56:
  swift_bridgeObjectRelease();
}

void sub_100710064(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = v3;
  uint64_t v6 = a3;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(unint64_t **)(a3 + 24);
  uint64_t v10 = *(void *)(v3 + 72);
  v88[0] = a2;
  v86[2] = v88;
  uint64_t v86[3] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_100692158((uint64_t (*)(id *))sub_100741AF8, v86, a1);
  if (!v4)
  {
    unint64_t v12 = (unint64_t)v11;
    if (qword_1009073A0 != -1) {
      goto LABEL_58;
    }
LABEL_3:
    uint64_t v13 = type metadata accessor for Logger();
    sub_10008E2DC(v13, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v79 = static os_log_type_t.info.getter();
    os_log_type_t v15 = v14;
    unint64_t v16 = v12 >> 62;
    unint64_t v83 = v12 >> 62;
    uint64_t v85 = (void *)v12;
    unint64_t v78 = v5;
    uint64_t v81 = v6;
    if (os_log_type_enabled(v14, v79))
    {
      uint64_t v77 = v8;
      BOOL v17 = (void *)swift_slowAlloc();
      v88[0] = swift_slowAlloc();
      *(_DWORD *)BOOL v17 = 136446978;
      uint64_t v87 = sub_1000C51B8(0x7661537265746661, 0xEF6E6F6974634165, v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *((_WORD *)v17 + 6) = 2048;
      if (!v16)
      {
        uint64_t v18 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_6;
      }
      goto LABEL_61;
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    while (1)
    {
      if (v16)
      {
        swift_bridgeObjectRetain();
        uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v6 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      BOOL v17 = _swiftEmptyArrayStorage;
      if (!v6) {
        break;
      }
      v88[0] = (uint64_t)_swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      if ((v6 & 0x8000000000000000) == 0)
      {
        uint64_t v8 = 0;
        unint64_t v5 = v12 & 0xC000000000000001;
        uint64_t v9 = &qword_10090ABC0;
        while (v6 != v8)
        {
          if (v5) {
            id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v23 = *(id *)(v12 + 8 * v8 + 32);
          }
          id v24 = v23;
          sub_100694DE8([v24 remObjectID], &qword_10090ABC0);
          ++v8;

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          unint64_t v12 = (unint64_t)v85;
          if (v6 == v8)
          {
            BOOL v17 = (void *)v88[0];
            unint64_t v5 = v78;
            unint64_t v16 = v83;
            goto LABEL_19;
          }
        }
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        swift_once();
        goto LABEL_3;
      }
      __break(1u);
LABEL_61:
      swift_bridgeObjectRetain();
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      uint64_t v87 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *((_WORD *)v17 + 11) = 2082;
      sub_1000963CC(0, &qword_10090ABC0);
      id v19 = [(id)swift_getObjCClassFromMetadata() description];
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v22 = v21;

      unint64_t v12 = (unint64_t)v85;
      uint64_t v87 = sub_1000C51B8(v20, v22, v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *((_WORD *)v17 + 16) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v87 = sub_1000C51B8(v77, (unint64_t)v9, v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v15, v79, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v17, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v5 = v78;
      unint64_t v16 = v83;
    }
LABEL_19:
    uint64_t v6 = v81;
    uint64_t v25 = sub_100714A48((uint64_t)v17, v81);
    swift_bridgeObjectRelease();
    if (v16)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v77 = v26;
      if (!v26)
      {
LABEL_54:
        swift_bridgeObjectRelease();
        goto LABEL_55;
      }
    }
    else
    {
      uint64_t v77 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v77) {
        goto LABEL_54;
      }
    }
    uint64_t v73 = v5 + 24;
    unint64_t v75 = (uint64_t *)(v81 + 48);
    unint64_t v76 = v12 & 0xC000000000000001;
    swift_beginAccess();
    uint64_t v72 = v81 + 56;
    swift_beginAccess();
    uint64_t v8 = 4;
    while (1)
    {
      uint64_t v37 = v8 - 4;
      if (v76)
      {
        id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v9 = (unint64_t *)(v8 - 3);
        if (__OFADD__(v37, 1)) {
          goto LABEL_57;
        }
      }
      else
      {
        id v38 = *(id *)(v12 + 8 * v8);
        uint64_t v9 = (unint64_t *)(v8 - 3);
        if (__OFADD__(v37, 1)) {
          goto LABEL_57;
        }
      }
      id v39 = v38;
      uint64_t v40 = sub_100694DE8([v39 remObjectID], &qword_10090ABC0);
      uint64_t v84 = v39;

      uint64_t v41 = *v75;
      unint64_t v80 = v9;
      uint64_t v82 = v8;
      if ((*v75 & 0xC000000000000001) != 0) {
        break;
      }
      if (*(void *)(v41 + 16))
      {
        id v42 = v40;
        swift_bridgeObjectRetain();
        unint64_t v45 = sub_100306FE8((uint64_t)v42);
        if (v46)
        {
          id v44 = *(id *)(*(void *)(v41 + 56) + 8 * v45);
          goto LABEL_37;
        }
        goto LABEL_38;
      }
LABEL_39:
      id v44 = 0;
LABEL_40:

      if (!v25[2]) {
        goto LABEL_46;
      }
      id v47 = v40;
      unint64_t v48 = sub_10030703C(v47);
      if ((v49 & 1) == 0)
      {

LABEL_46:
        id v56 = v40;
        swift_retain_n();
        uint64_t v6 = (uint64_t)v56;
        id v57 = Logger.logObject.getter();
        os_log_type_t v58 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v57, v58))
        {
          uint64_t v27 = swift_slowAlloc();
          unint64_t v91 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v27 = 136446466;
          sub_10010B4E8(v73, (uint64_t)v89);
          sub_10073F754((uint64_t)v89, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
          uint64_t v28 = sub_100696CF4();
          unint64_t v30 = v29;
          sub_10073F754((uint64_t)v89, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
          *(void *)(v27 + 4) = sub_1000C51B8(v28, v30, (uint64_t *)&v91);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v27 + 12) = 2080;
          id v31 = [(id)v6 description];
          uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v33 = v25;
          unint64_t v35 = v34;

          uint64_t v36 = v32;
          unint64_t v5 = v78;
          *(void *)(v27 + 14) = sub_1000C51B8(v36, v35, (uint64_t *)&v91);

          uint64_t v25 = v33;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v57, v58, "Tried to perform after-save action with non-existent target object -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v27, 0x16u);
          swift_arrayDestroy();
          unint64_t v12 = (unint64_t)v85;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        goto LABEL_25;
      }
      id v50 = *(id *)(v25[7] + 8 * v48);

      uint64_t v51 = *(void *)v72;
      if (!*(void *)(*(void *)v72 + 16))
      {
        id v59 = v50;
LABEL_50:
        id v60 = v47;
        swift_retain_n();
        uint64_t v6 = (uint64_t)v60;
        id v61 = Logger.logObject.getter();
        os_log_type_t v62 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v61, v62))
        {
          uint64_t v63 = swift_slowAlloc();
          unint64_t v91 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v63 = 136446466;
          sub_10010B4E8(v73, (uint64_t)v90);
          sub_10073F754((uint64_t)v90, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
          os_log_type_t type = v62;
          uint64_t v64 = sub_100696CF4();
          unint64_t v74 = v50;
          unint64_t v66 = v65;
          sub_10073F754((uint64_t)v90, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
          *(void *)(v63 + 4) = sub_1000C51B8(v64, v66, (uint64_t *)&v91);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v63 + 12) = 2080;
          id v67 = [(id)v6 description];
          uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v70 = v69;

          *(void *)(v63 + 14) = sub_1000C51B8(v68, v70, (uint64_t *)&v91);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v61, type, "Could not find the changed keys & values to perform after-save action -- bail {author: %{public}s, cdObjectID: %s}", (uint8_t *)v63, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        unint64_t v12 = (unint64_t)v85;
        goto LABEL_25;
      }
      uint64_t v6 = (uint64_t)v47;
      id v52 = v50;
      swift_bridgeObjectRetain();
      unint64_t v53 = sub_100306FE8(v6);
      if ((v54 & 1) == 0)
      {

        swift_bridgeObjectRelease();
        goto LABEL_50;
      }
      uint64_t v55 = *(void *)(*(void *)(v51 + 56) + 8 * v53);
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease();
      sub_100290DF4(v52, v55);

      swift_bridgeObjectRelease();
LABEL_25:
      uint64_t v8 = v82 + 1;
      if (v80 == (unint64_t *)v77) {
        goto LABEL_54;
      }
    }
    id v42 = v40;
    swift_bridgeObjectRetain();
    uint64_t v43 = __CocoaDictionary.lookup(_:)();
    if (v43)
    {
      v86[4] = v43;
      sub_1000963CC(0, (unint64_t *)&qword_100909B00);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v44 = v91;
      swift_unknownObjectRelease();
LABEL_37:

      swift_bridgeObjectRelease();
      goto LABEL_40;
    }
LABEL_38:

    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
LABEL_55:
  swift_bridgeObjectRelease();
}

void *sub_100710C98(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030A150);
  swift_release();
  v24[3] = sub_100094134(&qword_100921B98);
  v24[0] = v5;
  sub_100094134(&qword_100921BA0);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134(&qword_100913EB8);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_100319984, (void (*)(void))sub_100310B48, (uint64_t *)&unk_100913EC0);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_100127258(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023D034((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_retain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020A408((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_100717F28((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_1007215E8((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_100711100(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030A164);
  swift_release();
  v24[3] = sub_100094134(&qword_100921980);
  v24[0] = v5;
  sub_100094134(&qword_100921988);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134(&qword_100913C20);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031999C, (void (*)(void))sub_100310B60, (uint64_t *)&unk_100913C30);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_100127340(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023D094((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_retain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020A414((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_10071833C((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_1007218AC((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_100711568(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030A2B0);
  swift_release();
  v24[3] = sub_100094134(&qword_100921D28);
  v24[0] = v5;
  sub_100094134((uint64_t *)&unk_100921D30);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134(&qword_100914048);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_100319C30, (void (*)(void))sub_100310F20, (uint64_t *)&unk_100914050);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_100127368(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023D0F4((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_retain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020A684((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_1007186F8((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_100721B70((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_1007119D0(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030A320);
  swift_release();
  v24[3] = sub_100094134(&qword_100921AC0);
  v24[0] = v5;
  sub_100094134(&qword_100921AC8);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134((uint64_t *)&unk_100913D80);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031A268, (void (*)(void))sub_10031197C, &qword_10090B6D8);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_1001273C0(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023D154((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_retain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020A878((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_100718AE8((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_100721E34((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_100711E38(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030A4AC);
  swift_release();
  v24[3] = sub_100094134(&qword_100921FD0);
  v24[0] = v5;
  sub_100094134(&qword_100921FD8);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134((uint64_t *)&unk_100921FE0);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031A45C, (void (*)(void))sub_100311C94, (uint64_t *)&unk_100914500);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_100127448(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023D1B4((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_retain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020AC94((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_100718EFC((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_1007220F8((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_1007122A0(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030A4D4);
  swift_release();
  v24[3] = sub_100094134(&qword_100921F88);
  v24[0] = v5;
  sub_100094134((uint64_t *)&unk_100921F90);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134(&qword_1009144D0);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031A468, (void (*)(void))sub_100311CA0, &qword_100921FA0);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_100127470(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023D214((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_retain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020ACA0((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_1007192EC((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_1007223BC((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_100712708(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030A4FC);
  swift_release();
  v24[3] = sub_100094134(&qword_100921F40);
  v24[0] = v5;
  sub_100094134(&qword_100921F48);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134((uint64_t *)&unk_100921F50);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031A474, (void (*)(void))sub_100311CAC, (uint64_t *)&unk_1009144A0);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_100127498(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023D274((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_retain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020ACAC((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_1007196DC((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_100722680((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_100712B70(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030A524);
  swift_release();
  v24[3] = sub_100094134(&qword_100921EA0);
  v24[0] = v5;
  sub_100094134(&qword_100921EA8);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134(&qword_100914470);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031A480, (void (*)(void))sub_100311CB8, &qword_10090B798);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_1001274C0(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023D2D4((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_retain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020ACB8((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_100719ACC((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_100722944((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_100712FD8(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030B158);
  swift_release();
  v24[3] = sub_100094134(&qword_100921C10);
  v24[0] = v5;
  sub_100094134(&qword_100921C18);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134(&qword_100913F60);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031AABC, (void (*)(void))sub_100312670, &qword_10090B718);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_10012779C(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023D8B8((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_retain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020B4BC((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_100719EBC((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_100722C08((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_100713440(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030B180);
  swift_release();
  v24[3] = sub_100094134(&qword_100921C48);
  v24[0] = v5;
  sub_100094134((uint64_t *)&unk_100921C50);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134(&qword_100913F88);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031AAC8, (void (*)(void))sub_10031267C, (uint64_t *)&unk_100913F90);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_1001277C4(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023D918((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_retain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020B4C8((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_10071A2AC((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_100722ECC((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_1007138A8(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030B1A8);
  swift_release();
  v24[3] = sub_100094134(&qword_100921C80);
  v24[0] = v5;
  sub_100094134(&qword_100921C88);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134(&qword_100913FC0);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031AAD4, (void (*)(void))sub_100312688, &qword_10090B730);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_1001277EC(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023D978((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_retain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020B504((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_10071A69C((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_100723190((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_100713D10(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030B1D0);
  swift_release();
  v24[3] = sub_100094134(&qword_100921CB8);
  v24[0] = v5;
  sub_100094134(&qword_100921CC0);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134(&qword_100913FE8);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031AAE0, (void (*)(void))sub_100312694, (uint64_t *)&unk_100913FF0);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_100127814(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023D9D8((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_retain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020B510((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_10071AA8C((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_100723454((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_100714178(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030B1F8);
  swift_release();
  v24[3] = sub_100094134(&qword_100921CF0);
  v24[0] = v5;
  sub_100094134(&qword_100921CF8);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134(&qword_100914020);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031AAEC, (void (*)(void))sub_1003126A0, &qword_10090B748);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_10012783C(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023DA38((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_retain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020B51C((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_10071AE7C((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_100723718((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_1007145E0(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030B220);
  swift_release();
  v24[3] = sub_100094134(&qword_100921D60);
  v24[0] = v5;
  sub_100094134(&qword_100921D68);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134(&qword_100914080);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031AAF8, (void (*)(void))sub_1003126AC, &qword_10090B760);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_100127864(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023DA98((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_retain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020B558((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_10071B26C((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_1007239DC((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_100714A48(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030B830);
  swift_release();
  v24[3] = sub_100094134(&qword_1009219A8);
  v24[0] = v5;
  sub_100094134((uint64_t *)&unk_1009219B0);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134((uint64_t *)&unk_100913C80);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031B710, (void (*)(void))sub_100313C24, (uint64_t *)&unk_1009219C0);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_100126838(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023E1BC((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020B8D0((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_10071B65C((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_100723CA0((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_100714EB0(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030B844);
  swift_release();
  v24[3] = sub_100094134(&qword_100921E00);
  v24[0] = v5;
  sub_100094134(&qword_100921E08);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134((uint64_t *)&unk_100921E10);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031B71C, (void (*)(void))sub_100313C30, (uint64_t *)&unk_100914210);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_100127A28(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023E21C((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020B8DC((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_10071BA34((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_100723F64((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_100715318(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030B86C);
  swift_release();
  v24[3] = sub_100094134(&qword_100921E48);
  v24[0] = v5;
  sub_100094134((uint64_t *)&unk_100921E50);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134((uint64_t *)&unk_100914240);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031B728, (void (*)(void))sub_100313C3C, (uint64_t *)&unk_100921E60);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_100127A50(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023E27C((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020B8E8((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_10071BE0C((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_100724228((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_100715780(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030BFD4);
  swift_release();
  v24[3] = sub_100094134(&qword_100922010);
  v24[0] = v5;
  sub_100094134(&qword_100922018);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134((uint64_t *)&unk_100914960);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031D788, (void (*)(void))sub_1003174BC, &qword_10090B7D0);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_1001281C4(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023E2DC((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020BB6C((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_10071C1E4((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_1007244EC((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_100715BE8(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030C010);
  swift_release();
  v24[3] = sub_100094134(&qword_100921950);
  v24[0] = v5;
  sub_100094134((uint64_t *)&unk_100921958);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134((uint64_t *)&unk_100913BF0);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031DBEC, (void (*)(void))sub_100317BE4, &qword_10090B690);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_10012839C(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023E33C((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020BB78((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_10071C5E4((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_1007247B0((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_100716050(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030C038);
  swift_release();
  v24[3] = sub_100094134(&qword_1009219F0);
  v24[0] = v5;
  sub_100094134(&qword_1009219F8);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134(&qword_100913CB0);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031DBF8, (void (*)(void))sub_100317BF0, &qword_10090B6B0);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_1001283C4(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023E39C((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020BB84((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_10071C9E4((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_100724A74((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_1007164B8(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030C060);
  swift_release();
  v24[3] = sub_100094134(&qword_100921A30);
  v24[0] = v5;
  sub_100094134(&qword_100921A38);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134((uint64_t *)&unk_100921A40);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031DC04, (void (*)(void))sub_100317BFC, (uint64_t *)&unk_100913CF0);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_1001283EC(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023E3FC((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020BB90((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_10071CDE4((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_100724D38((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_100716920(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030C088);
  swift_release();
  v24[3] = sub_100094134(&qword_100921A80);
  v24[0] = v5;
  sub_100094134(&qword_100921A88);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134(&qword_100913D30);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031DC10, (void (*)(void))sub_100317C08, &qword_10090B6C8);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_100128414(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023E45C((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020BB9C((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_10071D1E4((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_100724FFC((uint64_t)v21, (uint64_t)sub_100726744, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_100716D88(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030C0B0);
  swift_release();
  v24[3] = sub_100094134(&qword_100921B28);
  v24[0] = v5;
  sub_100094134((uint64_t *)&unk_100921B30);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134(&qword_100913E18);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031DC1C, (void (*)(void))sub_100317C14, (uint64_t *)&unk_100913E20);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_10012843C(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023E4BC((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020BBA8((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_10071D5E8((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_1007252C0((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_1007171F0(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030C0D8);
  swift_release();
  v24[3] = sub_100094134(&qword_100921B70);
  v24[0] = v5;
  sub_100094134(&qword_100921B78);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134((uint64_t *)&unk_100913E70);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031DC28, (void (*)(void))sub_100317C20, &qword_10090B6F8);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_100128464(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023E51C((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_10020BBB4((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_10071D9C0((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_100725584((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_100717658(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030C100);
  swift_release();
  v24[3] = sub_100094134(&qword_100921BE0);
  v24[0] = v5;
  sub_100094134(&qword_100921BE8);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134(&qword_100921BF0);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031DC34, (void (*)(void))sub_100317C2C, (uint64_t *)&unk_100913F20);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_10012848C(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023E57C((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_100209A08((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_10071DDC0((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_100725848((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

void *sub_100717AC0(uint64_t a1, uint64_t a2)
{
  swift_retain();
  unint64_t v5 = sub_100726EA0(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_10030C128);
  swift_release();
  v24[3] = sub_100094134(&qword_100921D90);
  v24[0] = v5;
  sub_100094134(&qword_100921D98);
  throwingCast<A>(_:as:failureMessage:)();
  _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v24);
  if (!v2)
  {
    uint64_t v7 = v25;
    uint64_t v8 = v25[2];
    if (v8)
    {
      sub_100094134(&qword_100921DA0);
      uint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
    }
    else
    {
      uint64_t v9 = _swiftEmptyDictionarySingleton;
    }
    v24[0] = v9;
    swift_bridgeObjectRetain_n();
    sub_100725DD0(v7, 1, v24, (uint64_t (*)(id))sub_10030703C, (void (*)(void))sub_10031DC40, (void (*)(void))sub_100317C38, (uint64_t *)&unk_1009140D0);
    swift_bridgeObjectRelease();
    uint64_t v23 = v24[0];
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_1001284B4(v10);
    swift_bridgeObjectRelease();
    if (v8)
    {
      v24[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = 4;
      do
      {
        id v13 = (id)v7[v12];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v12 += 2;
        --v8;
      }
      while (v8);
      uint64_t v14 = (void *)v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    os_log_type_t v15 = sub_10023E5DC((uint64_t)v14, v11);
    swift_bridgeObjectRelease();
    if (qword_1009073A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10008E2DC(v16, (uint64_t)qword_100916070);
    swift_bridgeObjectRetain();
    BOOL v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      v24[0] = v15[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fetching pending objects from database {cdPendingObjectIDs.count: %ld}", v19, 0xCu);
      swift_slowDealloc();

      if (v15[2])
      {
LABEL_15:
        uint64_t v20 = sub_100209A14((uint64_t)v15);
        swift_release();
        unint64_t v21 = sub_10071E190((uint64_t)v20, *(void **)(a2 + 32));
        swift_release();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v23;
        sub_100725B0C((uint64_t)v21, (uint64_t)sub_100742698, 0, isUniquelyReferenced_nonNull_native, v24);
        unint64_t v5 = (void *)v24[0];
        swift_bridgeObjectRelease();
        swift_retain();
        sub_100726A08((uint64_t)v21, a2);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
    }
    else
    {

      swift_release();
      if (v15[2]) {
        goto LABEL_15;
      }
    }
    swift_release();
    return (void *)v23;
  }
  return v5;
}

objc_class *sub_100717F28(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EE780((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  id v42 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006976AC(a1, 0, 1, 0, v42, (void (*)(void))type metadata accessor for REMCDSavedAttachment, &qword_100921BA8, (uint64_t *)&unk_100913EC0);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
LABEL_5:
  unint64_t v40 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v11 = 4;
  while (1)
  {
    uint64_t v13 = v11 - 4;
    if (v40)
    {
      id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v15 = v11 - 3;
      if (__OFADD__(v13, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v14 = *(id *)(v9 + 8 * v11);
      uint64_t v15 = v11 - 3;
      if (__OFADD__(v13, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    id v42 = 0;
    id v16 = v14;
    id v17 = [v16 remObjectIDWithError:&v42];
    if (!v17)
    {
      id v39 = v42;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_28:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    os_log_type_t v18 = v17;
    id v19 = v42;
    uint64_t v20 = sub_100695DC4(v18, (void (*)(void))type metadata accessor for REMCDSavedAttachment, 0xD000000000000014, (void *)0x80000001007DC170);
    if (v4) {
      goto LABEL_28;
    }
    unint64_t v21 = v20;
    uint64_t v41 = v15;
    uint64_t v22 = v10;
    uint64_t v4 = (void *)v9;

    id v23 = v16;
    id v24 = v21;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v42 = v2;
    unint64_t v27 = sub_10030703C(v24);
    uint64_t v28 = *((void *)v2 + 2);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      goto LABEL_32;
    }
    unint64_t v9 = (unint64_t)v26;
    if (*((void *)v2 + 3) < v30) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v42;
      if (v26) {
        goto LABEL_6;
      }
    }
    else
    {
      sub_100319984();
      uint64_t v2 = v42;
      if (v9)
      {
LABEL_6:
        uint64_t v12 = *((void *)v2 + 7);

        *(void *)(v12 + 8 * v27) = v23;
        goto LABEL_7;
      }
    }
LABEL_22:
    *((void *)v2 + (v27 >> 6) + 8) |= 1 << v27;
    uint64_t v33 = 8 * v27;
    *(void *)(*((void *)v2 + 6) + v33) = v24;
    *(void *)(*((void *)v2 + 7) + v33) = v23;
    uint64_t v34 = *((void *)v2 + 2);
    BOOL v35 = __OFADD__(v34, 1);
    uint64_t v36 = v34 + 1;
    if (v35) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v36;
    id v37 = v24;
LABEL_7:

    swift_bridgeObjectRelease();
    ++v11;
    uint64_t v10 = v22;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v41 == v22)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100310B48(v30, isUniquelyReferenced_nonNull_native);
  unint64_t v31 = sub_10030703C(v24);
  if ((v9 & 1) == (v32 & 1))
  {
    unint64_t v27 = v31;
    uint64_t v2 = v42;
    if (v9) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
  sub_100094134((uint64_t *)&unk_100913EC0);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void *sub_10071833C(uint64_t a1, void *a2)
{
  if (!*(void *)(a1 + 16)) {
    return (void *)sub_1002EE78C((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10077A530;
  *(void *)(v6 + 32) = a2;
  id v40 = (id)v6;
  specialized Array._endMutation()();
  id v7 = a2;
  unint64_t v8 = (unint64_t)sub_100697614(a1, 0, 1, 0);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v8 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_5;
    }
    goto LABEL_33;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v9)
  {
LABEL_33:
    swift_bridgeObjectRelease();
    return _swiftEmptyDictionarySingleton;
  }
LABEL_5:
  unint64_t v39 = v8 & 0xC000000000000001;
  uint64_t v2 = _swiftEmptyDictionarySingleton;
  uint64_t v10 = 4;
  id v38 = (void *)v8;
  while (1)
  {
    uint64_t v13 = v10 - 4;
    if (v39)
    {
      id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v15 = v10 - 3;
      if (__OFADD__(v13, 1)) {
        goto LABEL_29;
      }
    }
    else
    {
      id v14 = *(id *)(v8 + 8 * v10);
      uint64_t v15 = v10 - 3;
      if (__OFADD__(v13, 1))
      {
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    id v40 = 0;
    id v16 = v14;
    id v17 = [v16 remObjectIDWithError:&v40];
    id v18 = v40;
    if (!v17)
    {
      id v37 = v40;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v19 = v17;
    sub_1000963CC(0, (unint64_t *)&unk_10090AF40);
    id v20 = v18;

    unint64_t v8 = (unint64_t)v16;
    id v21 = v19;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v40 = v2;
    unint64_t v24 = sub_10030703C(v21);
    uint64_t v25 = v2[2];
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26)) {
      goto LABEL_30;
    }
    char v28 = v23;
    if (v2[3] < v27) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v40;
      if (v23) {
        goto LABEL_6;
      }
    }
    else
    {
      sub_10031999C();
      uint64_t v2 = v40;
      if (v28)
      {
LABEL_6:
        uint64_t v11 = v2[7];
        uint64_t v12 = 8 * v24;

        *(void *)(v11 + v12) = v8;
        goto LABEL_7;
      }
    }
LABEL_21:
    v2[(v24 >> 6) + 8] |= 1 << v24;
    uint64_t v31 = 8 * v24;
    *(void *)(v2[6] + v31) = v21;
    *(void *)(v2[7] + v31) = v8;
    uint64_t v32 = v2[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33) {
      goto LABEL_31;
    }
    v2[2] = v34;
    id v35 = v21;
LABEL_7:

    swift_bridgeObjectRelease();
    ++v10;
    unint64_t v8 = (unint64_t)v38;
    if (v15 == v9)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100310B60(v27, isUniquelyReferenced_nonNull_native);
  unint64_t v29 = sub_10030703C(v21);
  if ((v28 & 1) == (v30 & 1))
  {
    unint64_t v24 = v29;
    uint64_t v2 = v40;
    if (v28) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
  sub_100094134((uint64_t *)&unk_100913C30);
  uint64_t result = (void *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_1007186F8(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EEAD8((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  uint64_t v43 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006970A0(a1, 0, 1, 0, v43, (unint64_t *)&qword_10090DC20, (uint64_t)off_1008AA448, &qword_10090DCA0, (uint64_t *)&unk_100914050);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
LABEL_5:
  unint64_t v41 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v11 = 4;
  while (1)
  {
    uint64_t v14 = v11 - 4;
    if (v41)
    {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v15 = *(id *)(v9 + 8 * v11);
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    uint64_t v43 = 0;
    id v17 = v15;
    id v18 = [v17 remObjectIDWithError:&v43];
    if (!v18)
    {
      id v40 = v43;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_28:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v19 = v18;
    id v20 = v43;
    id v21 = sub_100694DE8(v19, (unint64_t *)&qword_10090DC20);
    if (v4) {
      goto LABEL_28;
    }
    uint64_t v22 = v21;
    uint64_t v42 = v16;
    uint64_t v23 = v10;
    uint64_t v4 = (void *)v9;

    unint64_t v9 = (unint64_t)v17;
    id v24 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = v2;
    unint64_t v27 = sub_10030703C(v24);
    uint64_t v28 = *((void *)v2 + 2);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      goto LABEL_32;
    }
    char v31 = v26;
    if (*((void *)v2 + 3) < v30) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v43;
      if (v26) {
        goto LABEL_6;
      }
    }
    else
    {
      sub_100319C30();
      uint64_t v2 = v43;
      if (v31)
      {
LABEL_6:
        uint64_t v12 = *((void *)v2 + 7);
        uint64_t v13 = 8 * v27;

        *(void *)(v12 + v13) = v9;
        goto LABEL_7;
      }
    }
LABEL_22:
    *((void *)v2 + (v27 >> 6) + 8) |= 1 << v27;
    uint64_t v34 = 8 * v27;
    *(void *)(*((void *)v2 + 6) + v34) = v24;
    *(void *)(*((void *)v2 + 7) + v34) = v9;
    uint64_t v35 = *((void *)v2 + 2);
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v37;
    id v38 = v24;
LABEL_7:

    swift_bridgeObjectRelease();
    ++v11;
    uint64_t v10 = v23;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v42 == v23)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100310F20(v30, isUniquelyReferenced_nonNull_native);
  unint64_t v32 = sub_10030703C(v24);
  if ((v31 & 1) == (v33 & 1))
  {
    unint64_t v27 = v32;
    uint64_t v2 = v43;
    if (v31) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
  sub_100094134((uint64_t *)&unk_100914050);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_100718AE8(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EEC0C((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  uint64_t v42 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006976AC(a1, 0, 1, 0, v42, (void (*)(void))type metadata accessor for REMCDManualSortHint, &qword_100921AD0, &qword_10090B6D8);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
LABEL_5:
  unint64_t v40 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v11 = 4;
  while (1)
  {
    uint64_t v13 = v11 - 4;
    if (v40)
    {
      id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v15 = v11 - 3;
      if (__OFADD__(v13, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v14 = *(id *)(v9 + 8 * v11);
      uint64_t v15 = v11 - 3;
      if (__OFADD__(v13, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    uint64_t v42 = 0;
    id v16 = v14;
    id v17 = [v16 remObjectIDWithError:&v42];
    if (!v17)
    {
      unint64_t v39 = v42;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_28:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v18 = v17;
    id v19 = v42;
    id v20 = sub_100695DC4(v18, (void (*)(void))type metadata accessor for REMCDManualSortHint, 0xD000000000000013, (void *)0x80000001007DC150);
    if (v4) {
      goto LABEL_28;
    }
    id v21 = v20;
    uint64_t v41 = v15;
    uint64_t v22 = v10;
    uint64_t v4 = (void *)v9;

    id v23 = v16;
    id v24 = v21;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v42 = v2;
    unint64_t v27 = sub_10030703C(v24);
    uint64_t v28 = *((void *)v2 + 2);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      goto LABEL_32;
    }
    unint64_t v9 = (unint64_t)v26;
    if (*((void *)v2 + 3) < v30) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v42;
      if (v26) {
        goto LABEL_6;
      }
    }
    else
    {
      sub_10031A268();
      uint64_t v2 = v42;
      if (v9)
      {
LABEL_6:
        uint64_t v12 = *((void *)v2 + 7);

        *(void *)(v12 + 8 * v27) = v23;
        goto LABEL_7;
      }
    }
LABEL_22:
    *((void *)v2 + (v27 >> 6) + 8) |= 1 << v27;
    uint64_t v33 = 8 * v27;
    *(void *)(*((void *)v2 + 6) + v33) = v24;
    *(void *)(*((void *)v2 + 7) + v33) = v23;
    uint64_t v34 = *((void *)v2 + 2);
    BOOL v35 = __OFADD__(v34, 1);
    uint64_t v36 = v34 + 1;
    if (v35) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v36;
    id v37 = v24;
LABEL_7:

    swift_bridgeObjectRelease();
    ++v11;
    uint64_t v10 = v22;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v41 == v22)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_10031197C(v30, isUniquelyReferenced_nonNull_native);
  unint64_t v31 = sub_10030703C(v24);
  if ((v9 & 1) == (v32 & 1))
  {
    unint64_t v27 = v31;
    uint64_t v2 = v42;
    if (v9) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
  sub_100094134(&qword_10090B6D8);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_100718EFC(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EEC18((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  uint64_t v43 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006970A0(a1, 0, 1, 0, v43, &qword_100910E00, (uint64_t)off_1008AA408, &qword_100921FF0, (uint64_t *)&unk_100914500);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
LABEL_5:
  unint64_t v41 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v11 = 4;
  while (1)
  {
    uint64_t v14 = v11 - 4;
    if (v41)
    {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v15 = *(id *)(v9 + 8 * v11);
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    uint64_t v43 = 0;
    id v17 = v15;
    id v18 = [v17 remObjectIDWithError:&v43];
    if (!v18)
    {
      unint64_t v40 = v43;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_28:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v19 = v18;
    id v20 = v43;
    id v21 = sub_100694DE8(v19, &qword_100910E00);
    if (v4) {
      goto LABEL_28;
    }
    uint64_t v22 = v21;
    uint64_t v42 = v16;
    uint64_t v23 = v10;
    uint64_t v4 = (void *)v9;

    unint64_t v9 = (unint64_t)v17;
    id v24 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = v2;
    unint64_t v27 = sub_10030703C(v24);
    uint64_t v28 = *((void *)v2 + 2);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      goto LABEL_32;
    }
    char v31 = v26;
    if (*((void *)v2 + 3) < v30) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v43;
      if (v26) {
        goto LABEL_6;
      }
    }
    else
    {
      sub_10031A45C();
      uint64_t v2 = v43;
      if (v31)
      {
LABEL_6:
        uint64_t v12 = *((void *)v2 + 7);
        uint64_t v13 = 8 * v27;

        *(void *)(v12 + v13) = v9;
        goto LABEL_7;
      }
    }
LABEL_22:
    *((void *)v2 + (v27 >> 6) + 8) |= 1 << v27;
    uint64_t v34 = 8 * v27;
    *(void *)(*((void *)v2 + 6) + v34) = v24;
    *(void *)(*((void *)v2 + 7) + v34) = v9;
    uint64_t v35 = *((void *)v2 + 2);
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v37;
    id v38 = v24;
LABEL_7:

    swift_bridgeObjectRelease();
    ++v11;
    uint64_t v10 = v23;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v42 == v23)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100311C94(v30, isUniquelyReferenced_nonNull_native);
  unint64_t v32 = sub_10030703C(v24);
  if ((v31 & 1) == (v33 & 1))
  {
    unint64_t v27 = v32;
    uint64_t v2 = v43;
    if (v31) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
  sub_100094134((uint64_t *)&unk_100914500);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_1007192EC(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EEC24((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  uint64_t v43 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006970A0(a1, 0, 1, 0, v43, &qword_100910E10, (uint64_t)off_1008AA3F0, &qword_100921FA8, &qword_100921FA0);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
LABEL_5:
  unint64_t v41 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v11 = 4;
  while (1)
  {
    uint64_t v14 = v11 - 4;
    if (v41)
    {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v15 = *(id *)(v9 + 8 * v11);
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    uint64_t v43 = 0;
    id v17 = v15;
    id v18 = [v17 remObjectIDWithError:&v43];
    if (!v18)
    {
      unint64_t v40 = v43;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_28:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v19 = v18;
    id v20 = v43;
    id v21 = sub_100694DE8(v19, &qword_100910E10);
    if (v4) {
      goto LABEL_28;
    }
    uint64_t v22 = v21;
    uint64_t v42 = v16;
    uint64_t v23 = v10;
    uint64_t v4 = (void *)v9;

    unint64_t v9 = (unint64_t)v17;
    id v24 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = v2;
    unint64_t v27 = sub_10030703C(v24);
    uint64_t v28 = *((void *)v2 + 2);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      goto LABEL_32;
    }
    char v31 = v26;
    if (*((void *)v2 + 3) < v30) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v43;
      if (v26) {
        goto LABEL_6;
      }
    }
    else
    {
      sub_10031A468();
      uint64_t v2 = v43;
      if (v31)
      {
LABEL_6:
        uint64_t v12 = *((void *)v2 + 7);
        uint64_t v13 = 8 * v27;

        *(void *)(v12 + v13) = v9;
        goto LABEL_7;
      }
    }
LABEL_22:
    *((void *)v2 + (v27 >> 6) + 8) |= 1 << v27;
    uint64_t v34 = 8 * v27;
    *(void *)(*((void *)v2 + 6) + v34) = v24;
    *(void *)(*((void *)v2 + 7) + v34) = v9;
    uint64_t v35 = *((void *)v2 + 2);
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v37;
    id v38 = v24;
LABEL_7:

    swift_bridgeObjectRelease();
    ++v11;
    uint64_t v10 = v23;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v42 == v23)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100311CA0(v30, isUniquelyReferenced_nonNull_native);
  unint64_t v32 = sub_10030703C(v24);
  if ((v31 & 1) == (v33 & 1))
  {
    unint64_t v27 = v32;
    uint64_t v2 = v43;
    if (v31) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
  sub_100094134(&qword_100921FA0);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_1007196DC(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EEC30((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  uint64_t v43 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006970A0(a1, 0, 1, 0, v43, (unint64_t *)&qword_100910E40, (uint64_t)off_1008AA3E8, &qword_100921F60, (uint64_t *)&unk_1009144A0);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
LABEL_5:
  unint64_t v41 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v11 = 4;
  while (1)
  {
    uint64_t v14 = v11 - 4;
    if (v41)
    {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v15 = *(id *)(v9 + 8 * v11);
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    uint64_t v43 = 0;
    id v17 = v15;
    id v18 = [v17 remObjectIDWithError:&v43];
    if (!v18)
    {
      unint64_t v40 = v43;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_28:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v19 = v18;
    id v20 = v43;
    id v21 = sub_100694DE8(v19, (unint64_t *)&qword_100910E40);
    if (v4) {
      goto LABEL_28;
    }
    uint64_t v22 = v21;
    uint64_t v42 = v16;
    uint64_t v23 = v10;
    uint64_t v4 = (void *)v9;

    unint64_t v9 = (unint64_t)v17;
    id v24 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = v2;
    unint64_t v27 = sub_10030703C(v24);
    uint64_t v28 = *((void *)v2 + 2);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      goto LABEL_32;
    }
    char v31 = v26;
    if (*((void *)v2 + 3) < v30) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v43;
      if (v26) {
        goto LABEL_6;
      }
    }
    else
    {
      sub_10031A474();
      uint64_t v2 = v43;
      if (v31)
      {
LABEL_6:
        uint64_t v12 = *((void *)v2 + 7);
        uint64_t v13 = 8 * v27;

        *(void *)(v12 + v13) = v9;
        goto LABEL_7;
      }
    }
LABEL_22:
    *((void *)v2 + (v27 >> 6) + 8) |= 1 << v27;
    uint64_t v34 = 8 * v27;
    *(void *)(*((void *)v2 + 6) + v34) = v24;
    *(void *)(*((void *)v2 + 7) + v34) = v9;
    uint64_t v35 = *((void *)v2 + 2);
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v37;
    id v38 = v24;
LABEL_7:

    swift_bridgeObjectRelease();
    ++v11;
    uint64_t v10 = v23;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v42 == v23)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100311CAC(v30, isUniquelyReferenced_nonNull_native);
  unint64_t v32 = sub_10030703C(v24);
  if ((v31 & 1) == (v33 & 1))
  {
    unint64_t v27 = v32;
    uint64_t v2 = v43;
    if (v31) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
  sub_100094134((uint64_t *)&unk_1009144A0);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_100719ACC(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EEC3C((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  uint64_t v43 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006970A0(a1, 0, 1, 0, v43, &qword_10091FD58, (uint64_t)off_1008AA3F8, (uint64_t *)&unk_100921EB0, &qword_10090B798);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
LABEL_5:
  unint64_t v41 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v11 = 4;
  while (1)
  {
    uint64_t v14 = v11 - 4;
    if (v41)
    {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v15 = *(id *)(v9 + 8 * v11);
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    uint64_t v43 = 0;
    id v17 = v15;
    id v18 = [v17 remObjectIDWithError:&v43];
    if (!v18)
    {
      unint64_t v40 = v43;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_28:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v19 = v18;
    id v20 = v43;
    id v21 = sub_100694DE8(v19, &qword_10091FD58);
    if (v4) {
      goto LABEL_28;
    }
    uint64_t v22 = v21;
    uint64_t v42 = v16;
    uint64_t v23 = v10;
    uint64_t v4 = (void *)v9;

    unint64_t v9 = (unint64_t)v17;
    id v24 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = v2;
    unint64_t v27 = sub_10030703C(v24);
    uint64_t v28 = *((void *)v2 + 2);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      goto LABEL_32;
    }
    char v31 = v26;
    if (*((void *)v2 + 3) < v30) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v43;
      if (v26) {
        goto LABEL_6;
      }
    }
    else
    {
      sub_10031A480();
      uint64_t v2 = v43;
      if (v31)
      {
LABEL_6:
        uint64_t v12 = *((void *)v2 + 7);
        uint64_t v13 = 8 * v27;

        *(void *)(v12 + v13) = v9;
        goto LABEL_7;
      }
    }
LABEL_22:
    *((void *)v2 + (v27 >> 6) + 8) |= 1 << v27;
    uint64_t v34 = 8 * v27;
    *(void *)(*((void *)v2 + 6) + v34) = v24;
    *(void *)(*((void *)v2 + 7) + v34) = v9;
    uint64_t v35 = *((void *)v2 + 2);
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v37;
    id v38 = v24;
LABEL_7:

    swift_bridgeObjectRelease();
    ++v11;
    uint64_t v10 = v23;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v42 == v23)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100311CB8(v30, isUniquelyReferenced_nonNull_native);
  unint64_t v32 = sub_10030703C(v24);
  if ((v31 & 1) == (v33 & 1))
  {
    unint64_t v27 = v32;
    uint64_t v2 = v43;
    if (v31) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
  sub_100094134(&qword_10090B798);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_100719EBC(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EED88((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  uint64_t v43 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006970A0(a1, 0, 1, 0, v43, (unint64_t *)&unk_100909AC0, (uint64_t)off_1008AA3E0, &qword_100921C20, &qword_10090B718);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
LABEL_5:
  unint64_t v41 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v11 = 4;
  while (1)
  {
    uint64_t v14 = v11 - 4;
    if (v41)
    {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v15 = *(id *)(v9 + 8 * v11);
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    uint64_t v43 = 0;
    id v17 = v15;
    id v18 = [v17 remObjectIDWithError:&v43];
    if (!v18)
    {
      unint64_t v40 = v43;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_28:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v19 = v18;
    id v20 = v43;
    id v21 = sub_100694DE8(v19, (unint64_t *)&unk_100909AC0);
    if (v4) {
      goto LABEL_28;
    }
    uint64_t v22 = v21;
    uint64_t v42 = v16;
    uint64_t v23 = v10;
    uint64_t v4 = (void *)v9;

    unint64_t v9 = (unint64_t)v17;
    id v24 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = v2;
    unint64_t v27 = sub_10030703C(v24);
    uint64_t v28 = *((void *)v2 + 2);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      goto LABEL_32;
    }
    char v31 = v26;
    if (*((void *)v2 + 3) < v30) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v43;
      if (v26) {
        goto LABEL_6;
      }
    }
    else
    {
      sub_10031AABC();
      uint64_t v2 = v43;
      if (v31)
      {
LABEL_6:
        uint64_t v12 = *((void *)v2 + 7);
        uint64_t v13 = 8 * v27;

        *(void *)(v12 + v13) = v9;
        goto LABEL_7;
      }
    }
LABEL_22:
    *((void *)v2 + (v27 >> 6) + 8) |= 1 << v27;
    uint64_t v34 = 8 * v27;
    *(void *)(*((void *)v2 + 6) + v34) = v24;
    *(void *)(*((void *)v2 + 7) + v34) = v9;
    uint64_t v35 = *((void *)v2 + 2);
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v37;
    id v38 = v24;
LABEL_7:

    swift_bridgeObjectRelease();
    ++v11;
    uint64_t v10 = v23;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v42 == v23)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100312670(v30, isUniquelyReferenced_nonNull_native);
  unint64_t v32 = sub_10030703C(v24);
  if ((v31 & 1) == (v33 & 1))
  {
    unint64_t v27 = v32;
    uint64_t v2 = v43;
    if (v31) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
  sub_100094134(&qword_10090B718);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_10071A2AC(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EED94((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  uint64_t v43 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006970A0(a1, 0, 1, 0, v43, &qword_100910230, (uint64_t)off_1008AA410, &qword_100911540, (uint64_t *)&unk_100913F90);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
LABEL_5:
  unint64_t v41 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v11 = 4;
  while (1)
  {
    uint64_t v14 = v11 - 4;
    if (v41)
    {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v15 = *(id *)(v9 + 8 * v11);
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    uint64_t v43 = 0;
    id v17 = v15;
    id v18 = [v17 remObjectIDWithError:&v43];
    if (!v18)
    {
      unint64_t v40 = v43;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_28:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v19 = v18;
    id v20 = v43;
    id v21 = sub_100694DE8(v19, &qword_100910230);
    if (v4) {
      goto LABEL_28;
    }
    uint64_t v22 = v21;
    uint64_t v42 = v16;
    uint64_t v23 = v10;
    uint64_t v4 = (void *)v9;

    unint64_t v9 = (unint64_t)v17;
    id v24 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = v2;
    unint64_t v27 = sub_10030703C(v24);
    uint64_t v28 = *((void *)v2 + 2);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      goto LABEL_32;
    }
    char v31 = v26;
    if (*((void *)v2 + 3) < v30) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v43;
      if (v26) {
        goto LABEL_6;
      }
    }
    else
    {
      sub_10031AAC8();
      uint64_t v2 = v43;
      if (v31)
      {
LABEL_6:
        uint64_t v12 = *((void *)v2 + 7);
        uint64_t v13 = 8 * v27;

        *(void *)(v12 + v13) = v9;
        goto LABEL_7;
      }
    }
LABEL_22:
    *((void *)v2 + (v27 >> 6) + 8) |= 1 << v27;
    uint64_t v34 = 8 * v27;
    *(void *)(*((void *)v2 + 6) + v34) = v24;
    *(void *)(*((void *)v2 + 7) + v34) = v9;
    uint64_t v35 = *((void *)v2 + 2);
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v37;
    id v38 = v24;
LABEL_7:

    swift_bridgeObjectRelease();
    ++v11;
    uint64_t v10 = v23;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v42 == v23)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_10031267C(v30, isUniquelyReferenced_nonNull_native);
  unint64_t v32 = sub_10030703C(v24);
  if ((v31 & 1) == (v33 & 1))
  {
    unint64_t v27 = v32;
    uint64_t v2 = v43;
    if (v31) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
  sub_100094134((uint64_t *)&unk_100913F90);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_10071A69C(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EEDA0((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  uint64_t v43 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006970A0(a1, 0, 1, 0, v43, &qword_100915848, (uint64_t)off_1008AA4A8, &qword_100921C90, &qword_10090B730);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
LABEL_5:
  unint64_t v41 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v11 = 4;
  while (1)
  {
    uint64_t v14 = v11 - 4;
    if (v41)
    {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v15 = *(id *)(v9 + 8 * v11);
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    uint64_t v43 = 0;
    id v17 = v15;
    id v18 = [v17 remObjectIDWithError:&v43];
    if (!v18)
    {
      unint64_t v40 = v43;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_28:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v19 = v18;
    id v20 = v43;
    id v21 = sub_100694DE8(v19, &qword_100915848);
    if (v4) {
      goto LABEL_28;
    }
    uint64_t v22 = v21;
    uint64_t v42 = v16;
    uint64_t v23 = v10;
    uint64_t v4 = (void *)v9;

    unint64_t v9 = (unint64_t)v17;
    id v24 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = v2;
    unint64_t v27 = sub_10030703C(v24);
    uint64_t v28 = *((void *)v2 + 2);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      goto LABEL_32;
    }
    char v31 = v26;
    if (*((void *)v2 + 3) < v30) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v43;
      if (v26) {
        goto LABEL_6;
      }
    }
    else
    {
      sub_10031AAD4();
      uint64_t v2 = v43;
      if (v31)
      {
LABEL_6:
        uint64_t v12 = *((void *)v2 + 7);
        uint64_t v13 = 8 * v27;

        *(void *)(v12 + v13) = v9;
        goto LABEL_7;
      }
    }
LABEL_22:
    *((void *)v2 + (v27 >> 6) + 8) |= 1 << v27;
    uint64_t v34 = 8 * v27;
    *(void *)(*((void *)v2 + 6) + v34) = v24;
    *(void *)(*((void *)v2 + 7) + v34) = v9;
    uint64_t v35 = *((void *)v2 + 2);
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v37;
    id v38 = v24;
LABEL_7:

    swift_bridgeObjectRelease();
    ++v11;
    uint64_t v10 = v23;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v42 == v23)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100312688(v30, isUniquelyReferenced_nonNull_native);
  unint64_t v32 = sub_10030703C(v24);
  if ((v31 & 1) == (v33 & 1))
  {
    unint64_t v27 = v32;
    uint64_t v2 = v43;
    if (v31) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
  sub_100094134(&qword_10090B730);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_10071AA8C(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EEDAC((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  uint64_t v43 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006970A0(a1, 0, 1, 0, v43, (unint64_t *)&unk_100915850, (uint64_t)off_1008AA458, &qword_100921CC8, (uint64_t *)&unk_100913FF0);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
LABEL_5:
  unint64_t v41 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v11 = 4;
  while (1)
  {
    uint64_t v14 = v11 - 4;
    if (v41)
    {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v15 = *(id *)(v9 + 8 * v11);
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    uint64_t v43 = 0;
    id v17 = v15;
    id v18 = [v17 remObjectIDWithError:&v43];
    if (!v18)
    {
      unint64_t v40 = v43;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_28:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v19 = v18;
    id v20 = v43;
    id v21 = sub_100694DE8(v19, (unint64_t *)&unk_100915850);
    if (v4) {
      goto LABEL_28;
    }
    uint64_t v22 = v21;
    uint64_t v42 = v16;
    uint64_t v23 = v10;
    uint64_t v4 = (void *)v9;

    unint64_t v9 = (unint64_t)v17;
    id v24 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = v2;
    unint64_t v27 = sub_10030703C(v24);
    uint64_t v28 = *((void *)v2 + 2);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      goto LABEL_32;
    }
    char v31 = v26;
    if (*((void *)v2 + 3) < v30) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v43;
      if (v26) {
        goto LABEL_6;
      }
    }
    else
    {
      sub_10031AAE0();
      uint64_t v2 = v43;
      if (v31)
      {
LABEL_6:
        uint64_t v12 = *((void *)v2 + 7);
        uint64_t v13 = 8 * v27;

        *(void *)(v12 + v13) = v9;
        goto LABEL_7;
      }
    }
LABEL_22:
    *((void *)v2 + (v27 >> 6) + 8) |= 1 << v27;
    uint64_t v34 = 8 * v27;
    *(void *)(*((void *)v2 + 6) + v34) = v24;
    *(void *)(*((void *)v2 + 7) + v34) = v9;
    uint64_t v35 = *((void *)v2 + 2);
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v37;
    id v38 = v24;
LABEL_7:

    swift_bridgeObjectRelease();
    ++v11;
    uint64_t v10 = v23;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v42 == v23)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100312694(v30, isUniquelyReferenced_nonNull_native);
  unint64_t v32 = sub_10030703C(v24);
  if ((v31 & 1) == (v33 & 1))
  {
    unint64_t v27 = v32;
    uint64_t v2 = v43;
    if (v31) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
  sub_100094134((uint64_t *)&unk_100913FF0);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_10071AE7C(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EEDB8((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  uint64_t v43 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006970A0(a1, 0, 1, 0, v43, (unint64_t *)&unk_10090AF90, (uint64_t)off_1008AA440, &qword_100921D00, &qword_10090B748);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
LABEL_5:
  unint64_t v41 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v11 = 4;
  while (1)
  {
    uint64_t v14 = v11 - 4;
    if (v41)
    {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v15 = *(id *)(v9 + 8 * v11);
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    uint64_t v43 = 0;
    id v17 = v15;
    id v18 = [v17 remObjectIDWithError:&v43];
    if (!v18)
    {
      unint64_t v40 = v43;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_28:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v19 = v18;
    id v20 = v43;
    id v21 = sub_100694DE8(v19, (unint64_t *)&unk_10090AF90);
    if (v4) {
      goto LABEL_28;
    }
    uint64_t v22 = v21;
    uint64_t v42 = v16;
    uint64_t v23 = v10;
    uint64_t v4 = (void *)v9;

    unint64_t v9 = (unint64_t)v17;
    id v24 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = v2;
    unint64_t v27 = sub_10030703C(v24);
    uint64_t v28 = *((void *)v2 + 2);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      goto LABEL_32;
    }
    char v31 = v26;
    if (*((void *)v2 + 3) < v30) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v43;
      if (v26) {
        goto LABEL_6;
      }
    }
    else
    {
      sub_10031AAEC();
      uint64_t v2 = v43;
      if (v31)
      {
LABEL_6:
        uint64_t v12 = *((void *)v2 + 7);
        uint64_t v13 = 8 * v27;

        *(void *)(v12 + v13) = v9;
        goto LABEL_7;
      }
    }
LABEL_22:
    *((void *)v2 + (v27 >> 6) + 8) |= 1 << v27;
    uint64_t v34 = 8 * v27;
    *(void *)(*((void *)v2 + 6) + v34) = v24;
    *(void *)(*((void *)v2 + 7) + v34) = v9;
    uint64_t v35 = *((void *)v2 + 2);
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v37;
    id v38 = v24;
LABEL_7:

    swift_bridgeObjectRelease();
    ++v11;
    uint64_t v10 = v23;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v42 == v23)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_1003126A0(v30, isUniquelyReferenced_nonNull_native);
  unint64_t v32 = sub_10030703C(v24);
  if ((v31 & 1) == (v33 & 1))
  {
    unint64_t v27 = v32;
    uint64_t v2 = v43;
    if (v31) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
  sub_100094134(&qword_10090B748);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_10071B26C(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EEDC4((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  uint64_t v43 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006970A0(a1, 0, 1, 0, v43, (unint64_t *)&qword_100911820, (uint64_t)off_1008AA480, &qword_100921D70, &qword_10090B760);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
LABEL_5:
  unint64_t v41 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v11 = 4;
  while (1)
  {
    uint64_t v14 = v11 - 4;
    if (v41)
    {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v15 = *(id *)(v9 + 8 * v11);
      uint64_t v16 = v11 - 3;
      if (__OFADD__(v14, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    uint64_t v43 = 0;
    id v17 = v15;
    id v18 = [v17 remObjectIDWithError:&v43];
    if (!v18)
    {
      unint64_t v40 = v43;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_28:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v19 = v18;
    id v20 = v43;
    id v21 = sub_100694DE8(v19, (unint64_t *)&qword_100911820);
    if (v4) {
      goto LABEL_28;
    }
    uint64_t v22 = v21;
    uint64_t v42 = v16;
    uint64_t v23 = v10;
    uint64_t v4 = (void *)v9;

    unint64_t v9 = (unint64_t)v17;
    id v24 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = v2;
    unint64_t v27 = sub_10030703C(v24);
    uint64_t v28 = *((void *)v2 + 2);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      goto LABEL_32;
    }
    char v31 = v26;
    if (*((void *)v2 + 3) < v30) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v43;
      if (v26) {
        goto LABEL_6;
      }
    }
    else
    {
      sub_10031AAF8();
      uint64_t v2 = v43;
      if (v31)
      {
LABEL_6:
        uint64_t v12 = *((void *)v2 + 7);
        uint64_t v13 = 8 * v27;

        *(void *)(v12 + v13) = v9;
        goto LABEL_7;
      }
    }
LABEL_22:
    *((void *)v2 + (v27 >> 6) + 8) |= 1 << v27;
    uint64_t v34 = 8 * v27;
    *(void *)(*((void *)v2 + 6) + v34) = v24;
    *(void *)(*((void *)v2 + 7) + v34) = v9;
    uint64_t v35 = *((void *)v2 + 2);
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v37;
    id v38 = v24;
LABEL_7:

    swift_bridgeObjectRelease();
    ++v11;
    uint64_t v10 = v23;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v42 == v23)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_1003126AC(v30, isUniquelyReferenced_nonNull_native);
  unint64_t v32 = sub_10030703C(v24);
  if ((v31 & 1) == (v33 & 1))
  {
    unint64_t v27 = v32;
    uint64_t v2 = v43;
    if (v31) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
  sub_100094134(&qword_10090B760);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_10071B65C(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EF6DC((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  unint64_t v40 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006970A0(a1, 0, 1, 0, v40, &qword_10090ABC0, (uint64_t)off_1008AA3D8, &qword_100910070, (uint64_t *)&unk_1009219C0);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_7;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
  uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_35;
  }
LABEL_7:
  unint64_t v39 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v12 = 4;
  uint64_t v38 = v11;
  while (1)
  {
    uint64_t v15 = v12 - 4;
    if (v39)
    {
      id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v17 = v12 - 3;
      if (__OFADD__(v15, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v16 = *(id *)(v9 + 8 * v12);
      uint64_t v17 = v12 - 3;
      if (__OFADD__(v15, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    unint64_t v40 = 0;
    id v18 = v16;
    id v19 = [v18 remObjectIDWithError:&v40];
    if (!v19)
    {
      uint64_t v37 = v40;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_29:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v20 = v19;
    id v21 = v40;
    uint64_t v22 = sub_100694DE8(v20, &qword_10090ABC0);
    if (v4) {
      goto LABEL_29;
    }
    uint64_t v23 = v22;
    uint64_t v4 = (void *)v9;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v40 = v2;
    unint64_t v26 = sub_10030703C(v23);
    uint64_t v27 = *((void *)v2 + 2);
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      goto LABEL_32;
    }
    unint64_t v9 = (unint64_t)v25;
    if (*((void *)v2 + 3) < v29) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v40;
      if (v25) {
        goto LABEL_8;
      }
    }
    else
    {
      sub_10031B710();
      uint64_t v2 = v40;
      if (v9)
      {
LABEL_8:
        uint64_t v13 = *((void *)v2 + 7);
        uint64_t v14 = 8 * v26;

        *(void *)(v13 + v14) = v18;
        goto LABEL_9;
      }
    }
LABEL_24:
    *((void *)v2 + (v26 >> 6) + 8) |= 1 << v26;
    uint64_t v32 = 8 * v26;
    *(void *)(*((void *)v2 + 6) + v32) = v23;
    *(void *)(*((void *)v2 + 7) + v32) = v18;
    uint64_t v33 = *((void *)v2 + 2);
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v35;
    id v36 = v23;
LABEL_9:

    swift_bridgeObjectRelease();
    ++v12;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v17 == v38)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100313C24(v29, isUniquelyReferenced_nonNull_native);
  unint64_t v30 = sub_10030703C(v23);
  if ((v9 & 1) == (v31 & 1))
  {
    unint64_t v26 = v30;
    uint64_t v2 = v40;
    if (v9) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
  sub_100094134((uint64_t *)&unk_1009219C0);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_10071BA34(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EF6E8((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  unint64_t v40 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006970A0(a1, 0, 1, 0, v40, (unint64_t *)&qword_100909AF8, (uint64_t)off_1008AA498, &qword_100921E20, (uint64_t *)&unk_100914210);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_7;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
  uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_35;
  }
LABEL_7:
  unint64_t v39 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v12 = 4;
  uint64_t v38 = v11;
  while (1)
  {
    uint64_t v15 = v12 - 4;
    if (v39)
    {
      id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v17 = v12 - 3;
      if (__OFADD__(v15, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v16 = *(id *)(v9 + 8 * v12);
      uint64_t v17 = v12 - 3;
      if (__OFADD__(v15, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    unint64_t v40 = 0;
    id v18 = v16;
    id v19 = [v18 remObjectIDWithError:&v40];
    if (!v19)
    {
      uint64_t v37 = v40;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_29:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v20 = v19;
    id v21 = v40;
    uint64_t v22 = sub_100694DE8(v20, (unint64_t *)&qword_100909AF8);
    if (v4) {
      goto LABEL_29;
    }
    uint64_t v23 = v22;
    uint64_t v4 = (void *)v9;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v40 = v2;
    unint64_t v26 = sub_10030703C(v23);
    uint64_t v27 = *((void *)v2 + 2);
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      goto LABEL_32;
    }
    unint64_t v9 = (unint64_t)v25;
    if (*((void *)v2 + 3) < v29) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v40;
      if (v25) {
        goto LABEL_8;
      }
    }
    else
    {
      sub_10031B71C();
      uint64_t v2 = v40;
      if (v9)
      {
LABEL_8:
        uint64_t v13 = *((void *)v2 + 7);
        uint64_t v14 = 8 * v26;

        *(void *)(v13 + v14) = v18;
        goto LABEL_9;
      }
    }
LABEL_24:
    *((void *)v2 + (v26 >> 6) + 8) |= 1 << v26;
    uint64_t v32 = 8 * v26;
    *(void *)(*((void *)v2 + 6) + v32) = v23;
    *(void *)(*((void *)v2 + 7) + v32) = v18;
    uint64_t v33 = *((void *)v2 + 2);
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v35;
    id v36 = v23;
LABEL_9:

    swift_bridgeObjectRelease();
    ++v12;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v17 == v38)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100313C30(v29, isUniquelyReferenced_nonNull_native);
  unint64_t v30 = sub_10030703C(v23);
  if ((v9 & 1) == (v31 & 1))
  {
    unint64_t v26 = v30;
    uint64_t v2 = v40;
    if (v9) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
  sub_100094134((uint64_t *)&unk_100914210);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_10071BE0C(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EF6F4((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  unint64_t v40 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006970A0(a1, 0, 1, 0, v40, (unint64_t *)&qword_100921E40, (uint64_t)off_1008AA430, &qword_10091F518, (uint64_t *)&unk_100921E60);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_7;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
  uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_35;
  }
LABEL_7:
  unint64_t v39 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v12 = 4;
  uint64_t v38 = v11;
  while (1)
  {
    uint64_t v15 = v12 - 4;
    if (v39)
    {
      id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v17 = v12 - 3;
      if (__OFADD__(v15, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v16 = *(id *)(v9 + 8 * v12);
      uint64_t v17 = v12 - 3;
      if (__OFADD__(v15, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    unint64_t v40 = 0;
    id v18 = v16;
    id v19 = [v18 remObjectIDWithError:&v40];
    if (!v19)
    {
      uint64_t v37 = v40;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_29:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v20 = v19;
    id v21 = v40;
    uint64_t v22 = sub_100694DE8(v20, (unint64_t *)&qword_100921E40);
    if (v4) {
      goto LABEL_29;
    }
    uint64_t v23 = v22;
    uint64_t v4 = (void *)v9;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v40 = v2;
    unint64_t v26 = sub_10030703C(v23);
    uint64_t v27 = *((void *)v2 + 2);
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      goto LABEL_32;
    }
    unint64_t v9 = (unint64_t)v25;
    if (*((void *)v2 + 3) < v29) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v40;
      if (v25) {
        goto LABEL_8;
      }
    }
    else
    {
      sub_10031B728();
      uint64_t v2 = v40;
      if (v9)
      {
LABEL_8:
        uint64_t v13 = *((void *)v2 + 7);
        uint64_t v14 = 8 * v26;

        *(void *)(v13 + v14) = v18;
        goto LABEL_9;
      }
    }
LABEL_24:
    *((void *)v2 + (v26 >> 6) + 8) |= 1 << v26;
    uint64_t v32 = 8 * v26;
    *(void *)(*((void *)v2 + 6) + v32) = v23;
    *(void *)(*((void *)v2 + 7) + v32) = v18;
    uint64_t v33 = *((void *)v2 + 2);
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v35;
    id v36 = v23;
LABEL_9:

    swift_bridgeObjectRelease();
    ++v12;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v17 == v38)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100313C3C(v29, isUniquelyReferenced_nonNull_native);
  unint64_t v30 = sub_10030703C(v23);
  if ((v9 & 1) == (v31 & 1))
  {
    unint64_t v26 = v30;
    uint64_t v2 = v40;
    if (v9) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
  sub_100094134((uint64_t *)&unk_100921E60);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_10071C1E4(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EFD44((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  unint64_t v40 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006976AC(a1, 0, 1, 0, v40, (void (*)(void))type metadata accessor for REMCDDueDateDeltaAlert, &qword_100922020, &qword_10090B7D0);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_7;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
  uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_35;
  }
LABEL_7:
  unint64_t v38 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v12 = 4;
  while (1)
  {
    uint64_t v14 = v12 - 4;
    if (v38)
    {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v16 = v12 - 3;
      if (__OFADD__(v14, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v15 = *(id *)(v9 + 8 * v12);
      uint64_t v16 = v12 - 3;
      if (__OFADD__(v14, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    unint64_t v40 = 0;
    id v17 = v15;
    id v18 = [v17 remObjectIDWithError:&v40];
    if (!v18)
    {
      uint64_t v37 = v40;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_29:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v19 = v18;
    id v20 = v40;
    id v21 = sub_100695DC4(v19, (void (*)(void))type metadata accessor for REMCDDueDateDeltaAlert, 0xD000000000000016, (void *)0x80000001007DC190);
    if (v4) {
      goto LABEL_29;
    }
    uint64_t v22 = v21;
    uint64_t v39 = v16;
    uint64_t v23 = v11;
    uint64_t v4 = (void *)v9;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v40 = v2;
    unint64_t v26 = sub_10030703C(v22);
    uint64_t v27 = *((void *)v2 + 2);
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      goto LABEL_32;
    }
    unint64_t v9 = (unint64_t)v25;
    if (*((void *)v2 + 3) < v29) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v40;
      if (v25) {
        goto LABEL_8;
      }
    }
    else
    {
      sub_10031D788();
      uint64_t v2 = v40;
      if (v9)
      {
LABEL_8:
        uint64_t v13 = *((void *)v2 + 7);

        *(void *)(v13 + 8 * v26) = v17;
        goto LABEL_9;
      }
    }
LABEL_24:
    *((void *)v2 + (v26 >> 6) + 8) |= 1 << v26;
    uint64_t v32 = 8 * v26;
    *(void *)(*((void *)v2 + 6) + v32) = v22;
    *(void *)(*((void *)v2 + 7) + v32) = v17;
    uint64_t v33 = *((void *)v2 + 2);
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v35;
    id v36 = v22;
LABEL_9:

    swift_bridgeObjectRelease();
    ++v12;
    uint64_t v11 = v23;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v39 == v23)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_1003174BC(v29, isUniquelyReferenced_nonNull_native);
  unint64_t v30 = sub_10030703C(v22);
  if ((v9 & 1) == (v31 & 1))
  {
    unint64_t v26 = v30;
    uint64_t v2 = v40;
    if (v9) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
  sub_100094134(&qword_10090B7D0);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_10071C5E4(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EFD50((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  unint64_t v40 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006976AC(a1, 0, 1, 0, v40, (void (*)(void))type metadata accessor for REMCDTemplateSection, &qword_100913410, &qword_10090B690);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_7;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
  uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_35;
  }
LABEL_7:
  unint64_t v38 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v12 = 4;
  while (1)
  {
    uint64_t v14 = v12 - 4;
    if (v38)
    {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v16 = v12 - 3;
      if (__OFADD__(v14, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v15 = *(id *)(v9 + 8 * v12);
      uint64_t v16 = v12 - 3;
      if (__OFADD__(v14, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    unint64_t v40 = 0;
    id v17 = v15;
    id v18 = [v17 remObjectIDWithError:&v40];
    if (!v18)
    {
      uint64_t v37 = v40;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_29:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v19 = v18;
    id v20 = v40;
    id v21 = sub_100695DC4(v19, (void (*)(void))type metadata accessor for REMCDTemplateSection, 0xD000000000000014, (void *)0x80000001007DBF90);
    if (v4) {
      goto LABEL_29;
    }
    uint64_t v22 = v21;
    uint64_t v39 = v16;
    uint64_t v23 = v11;
    uint64_t v4 = (void *)v9;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v40 = v2;
    unint64_t v26 = sub_10030703C(v22);
    uint64_t v27 = *((void *)v2 + 2);
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      goto LABEL_32;
    }
    unint64_t v9 = (unint64_t)v25;
    if (*((void *)v2 + 3) < v29) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v40;
      if (v25) {
        goto LABEL_8;
      }
    }
    else
    {
      sub_10031DBEC();
      uint64_t v2 = v40;
      if (v9)
      {
LABEL_8:
        uint64_t v13 = *((void *)v2 + 7);

        *(void *)(v13 + 8 * v26) = v17;
        goto LABEL_9;
      }
    }
LABEL_24:
    *((void *)v2 + (v26 >> 6) + 8) |= 1 << v26;
    uint64_t v32 = 8 * v26;
    *(void *)(*((void *)v2 + 6) + v32) = v22;
    *(void *)(*((void *)v2 + 7) + v32) = v17;
    uint64_t v33 = *((void *)v2 + 2);
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v35;
    id v36 = v22;
LABEL_9:

    swift_bridgeObjectRelease();
    ++v12;
    uint64_t v11 = v23;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v39 == v23)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100317BE4(v29, isUniquelyReferenced_nonNull_native);
  unint64_t v30 = sub_10030703C(v22);
  if ((v9 & 1) == (v31 & 1))
  {
    unint64_t v26 = v30;
    uint64_t v2 = v40;
    if (v9) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
  sub_100094134(&qword_10090B690);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_10071C9E4(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EFD5C((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  unint64_t v40 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006976AC(a1, 0, 1, 0, v40, (void (*)(void))type metadata accessor for REMCDSmartListSection, &qword_100921A00, &qword_10090B6B0);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_7;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
  uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_35;
  }
LABEL_7:
  unint64_t v38 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v12 = 4;
  while (1)
  {
    uint64_t v14 = v12 - 4;
    if (v38)
    {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v16 = v12 - 3;
      if (__OFADD__(v14, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v15 = *(id *)(v9 + 8 * v12);
      uint64_t v16 = v12 - 3;
      if (__OFADD__(v14, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    unint64_t v40 = 0;
    id v17 = v15;
    id v18 = [v17 remObjectIDWithError:&v40];
    if (!v18)
    {
      uint64_t v37 = v40;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_29:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v19 = v18;
    id v20 = v40;
    id v21 = sub_100695DC4(v19, (void (*)(void))type metadata accessor for REMCDSmartListSection, 0xD000000000000015, (void *)0x80000001007DC050);
    if (v4) {
      goto LABEL_29;
    }
    uint64_t v22 = v21;
    uint64_t v39 = v16;
    uint64_t v23 = v11;
    uint64_t v4 = (void *)v9;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v40 = v2;
    unint64_t v26 = sub_10030703C(v22);
    uint64_t v27 = *((void *)v2 + 2);
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      goto LABEL_32;
    }
    unint64_t v9 = (unint64_t)v25;
    if (*((void *)v2 + 3) < v29) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v40;
      if (v25) {
        goto LABEL_8;
      }
    }
    else
    {
      sub_10031DBF8();
      uint64_t v2 = v40;
      if (v9)
      {
LABEL_8:
        uint64_t v13 = *((void *)v2 + 7);

        *(void *)(v13 + 8 * v26) = v17;
        goto LABEL_9;
      }
    }
LABEL_24:
    *((void *)v2 + (v26 >> 6) + 8) |= 1 << v26;
    uint64_t v32 = 8 * v26;
    *(void *)(*((void *)v2 + 6) + v32) = v22;
    *(void *)(*((void *)v2 + 7) + v32) = v17;
    uint64_t v33 = *((void *)v2 + 2);
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v35;
    id v36 = v22;
LABEL_9:

    swift_bridgeObjectRelease();
    ++v12;
    uint64_t v11 = v23;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v39 == v23)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100317BF0(v29, isUniquelyReferenced_nonNull_native);
  unint64_t v30 = sub_10030703C(v22);
  if ((v9 & 1) == (v31 & 1))
  {
    unint64_t v26 = v30;
    uint64_t v2 = v40;
    if (v9) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
  sub_100094134(&qword_10090B6B0);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_10071CDE4(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EFD68((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  unint64_t v40 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006976AC(a1, 0, 1, 0, v40, (void (*)(void))type metadata accessor for REMCDListSection, &qword_100921A50, (uint64_t *)&unk_100913CF0);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_7;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
  uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_35;
  }
LABEL_7:
  unint64_t v38 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v12 = 4;
  while (1)
  {
    uint64_t v14 = v12 - 4;
    if (v38)
    {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v16 = v12 - 3;
      if (__OFADD__(v14, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v15 = *(id *)(v9 + 8 * v12);
      uint64_t v16 = v12 - 3;
      if (__OFADD__(v14, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    unint64_t v40 = 0;
    id v17 = v15;
    id v18 = [v17 remObjectIDWithError:&v40];
    if (!v18)
    {
      uint64_t v37 = v40;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_29:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v19 = v18;
    id v20 = v40;
    id v21 = sub_100695DC4(v19, (void (*)(void))type metadata accessor for REMCDListSection, 0xD000000000000010, (void *)0x80000001007DC070);
    if (v4) {
      goto LABEL_29;
    }
    uint64_t v22 = v21;
    uint64_t v39 = v16;
    uint64_t v23 = v11;
    uint64_t v4 = (void *)v9;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v40 = v2;
    unint64_t v26 = sub_10030703C(v22);
    uint64_t v27 = *((void *)v2 + 2);
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      goto LABEL_32;
    }
    unint64_t v9 = (unint64_t)v25;
    if (*((void *)v2 + 3) < v29) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v40;
      if (v25) {
        goto LABEL_8;
      }
    }
    else
    {
      sub_10031DC04();
      uint64_t v2 = v40;
      if (v9)
      {
LABEL_8:
        uint64_t v13 = *((void *)v2 + 7);

        *(void *)(v13 + 8 * v26) = v17;
        goto LABEL_9;
      }
    }
LABEL_24:
    *((void *)v2 + (v26 >> 6) + 8) |= 1 << v26;
    uint64_t v32 = 8 * v26;
    *(void *)(*((void *)v2 + 6) + v32) = v22;
    *(void *)(*((void *)v2 + 7) + v32) = v17;
    uint64_t v33 = *((void *)v2 + 2);
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v35;
    id v36 = v22;
LABEL_9:

    swift_bridgeObjectRelease();
    ++v12;
    uint64_t v11 = v23;
    unint64_t v9 = (unint64_t)v4;
    uint64_t v4 = 0;
    if (v39 == v23)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100317BFC(v29, isUniquelyReferenced_nonNull_native);
  unint64_t v30 = sub_10030703C(v22);
  if ((v9 & 1) == (v31 & 1))
  {
    unint64_t v26 = v30;
    uint64_t v2 = v40;
    if (v9) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
  sub_100094134((uint64_t *)&unk_100913CF0);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_10071D1E4(uint64_t a1, void *a2)
{
  unint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EFD74((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  unint64_t v41 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006976AC(a1, 0, 1, 0, v41, (void (*)(void))type metadata accessor for REMCDTemplate, &qword_100921A90, &qword_10090B6C8);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_7;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
  uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_33;
  }
LABEL_7:
  unint64_t v39 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v12 = 4;
  while (1)
  {
    uint64_t v15 = v12 - 4;
    if (v39)
    {
      id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v17 = v12 - 3;
      if (__OFADD__(v15, 1)) {
        goto LABEL_29;
      }
    }
    else
    {
      id v16 = *(id *)(v9 + 8 * v12);
      uint64_t v17 = v12 - 3;
      if (__OFADD__(v15, 1))
      {
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    unint64_t v41 = 0;
    id v40 = v16;
    id v18 = [v40 remObjectIDWithError:&v41];
    if (!v18)
    {
      unint64_t v38 = v41;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_27:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v19 = v18;
    id v20 = v41;
    id v21 = sub_100695DC4(v19, (void (*)(void))type metadata accessor for REMCDTemplate, 0x6D655444434D4552, (void *)0xED00006574616C70);
    if (v4) {
      goto LABEL_27;
    }
    uint64_t v22 = v21;
    uint64_t v23 = v12;
    uint64_t v24 = v11;
    unint64_t v4 = v9;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v41 = v2;
    unint64_t v9 = sub_10030703C(v22);
    uint64_t v27 = *((void *)v2 + 2);
    BOOL v28 = (v26 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      goto LABEL_30;
    }
    char v30 = v26;
    if (*((void *)v2 + 3) < v29) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_10031DC10();
    }
LABEL_23:
    uint64_t v11 = v24;
    uint64_t v2 = v41;
    if (v30)
    {
      uint64_t v13 = *((void *)v41 + 7);
      uint64_t v14 = 8 * v9;

      *(void *)(v13 + v14) = v40;
    }
    else
    {
      *((void *)v41 + (v9 >> 6) + 8) |= 1 << v9;
      uint64_t v33 = 8 * v9;
      *(void *)(*((void *)v2 + 6) + v33) = v22;
      *(void *)(*((void *)v2 + 7) + v33) = v40;
      uint64_t v34 = *((void *)v2 + 2);
      BOOL v35 = __OFADD__(v34, 1);
      uint64_t v36 = v34 + 1;
      if (v35) {
        goto LABEL_31;
      }
      *((void *)v2 + 2) = v36;
      id v37 = v22;
    }

    swift_bridgeObjectRelease();
    uint64_t v12 = v23 + 1;
    unint64_t v9 = v4;
    unint64_t v4 = 0;
    if (v17 == v11)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100317C08(v29, isUniquelyReferenced_nonNull_native);
  unint64_t v31 = sub_10030703C(v22);
  if ((v30 & 1) == (v32 & 1))
  {
    unint64_t v9 = v31;
    goto LABEL_23;
  }
  sub_100094134(&qword_10090B6C8);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_10071D5E8(uint64_t a1, void *a2)
{
  unint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EFD80((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  id v40 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006970A0(a1, 0, 1, 0, v40, (unint64_t *)&unk_100910210, (uint64_t)off_1008AA4A0, (uint64_t *)&unk_100921B00, (uint64_t *)&unk_100913E20);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_7;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
  uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_35;
  }
LABEL_7:
  unint64_t v39 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v12 = 4;
  uint64_t v38 = v11;
  while (1)
  {
    uint64_t v15 = v12 - 4;
    if (v39)
    {
      id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v17 = v12 - 3;
      if (__OFADD__(v15, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v16 = *(id *)(v9 + 8 * v12);
      uint64_t v17 = v12 - 3;
      if (__OFADD__(v15, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    id v40 = 0;
    id v18 = v16;
    id v19 = [v18 remObjectIDWithError:&v40];
    if (!v19)
    {
      id v37 = v40;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_29:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v20 = v19;
    id v21 = v40;
    uint64_t v22 = sub_100694DE8(v20, (unint64_t *)&unk_100910210);
    if (v4) {
      goto LABEL_29;
    }
    uint64_t v23 = v22;
    unint64_t v4 = (void *)v9;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v40 = v2;
    unint64_t v26 = sub_10030703C(v23);
    uint64_t v27 = *((void *)v2 + 2);
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      goto LABEL_32;
    }
    unint64_t v9 = (unint64_t)v25;
    if (*((void *)v2 + 3) < v29) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v40;
      if (v25) {
        goto LABEL_8;
      }
    }
    else
    {
      sub_10031DC1C();
      uint64_t v2 = v40;
      if (v9)
      {
LABEL_8:
        uint64_t v13 = *((void *)v2 + 7);
        uint64_t v14 = 8 * v26;

        *(void *)(v13 + v14) = v18;
        goto LABEL_9;
      }
    }
LABEL_24:
    *((void *)v2 + (v26 >> 6) + 8) |= 1 << v26;
    uint64_t v32 = 8 * v26;
    *(void *)(*((void *)v2 + 6) + v32) = v23;
    *(void *)(*((void *)v2 + 7) + v32) = v18;
    uint64_t v33 = *((void *)v2 + 2);
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v35;
    id v36 = v23;
LABEL_9:

    swift_bridgeObjectRelease();
    ++v12;
    unint64_t v9 = (unint64_t)v4;
    unint64_t v4 = 0;
    if (v17 == v38)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100317C14(v29, isUniquelyReferenced_nonNull_native);
  unint64_t v30 = sub_10030703C(v23);
  if ((v9 & 1) == (v31 & 1))
  {
    unint64_t v26 = v30;
    uint64_t v2 = v40;
    if (v9) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
  sub_100094134((uint64_t *)&unk_100913E20);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_10071D9C0(uint64_t a1, void *a2)
{
  unint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EFD8C((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  id v40 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006976AC(a1, 0, 1, 0, v40, (void (*)(void))type metadata accessor for REMCDSavedReminder, &qword_100921B80, &qword_10090B6F8);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_7;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
  uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_35;
  }
LABEL_7:
  unint64_t v38 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v12 = 4;
  while (1)
  {
    uint64_t v14 = v12 - 4;
    if (v38)
    {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v16 = v12 - 3;
      if (__OFADD__(v14, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v15 = *(id *)(v9 + 8 * v12);
      uint64_t v16 = v12 - 3;
      if (__OFADD__(v14, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    id v40 = 0;
    id v17 = v15;
    id v18 = [v17 remObjectIDWithError:&v40];
    if (!v18)
    {
      id v37 = v40;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_29:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v19 = v18;
    id v20 = v40;
    id v21 = sub_100695DC4(v19, (void (*)(void))type metadata accessor for REMCDSavedReminder, 0xD000000000000012, (void *)0x80000001007CC3C0);
    if (v4) {
      goto LABEL_29;
    }
    uint64_t v22 = v21;
    uint64_t v39 = v16;
    uint64_t v23 = v11;
    unint64_t v4 = (void *)v9;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v40 = v2;
    unint64_t v26 = sub_10030703C(v22);
    uint64_t v27 = *((void *)v2 + 2);
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      goto LABEL_32;
    }
    unint64_t v9 = (unint64_t)v25;
    if (*((void *)v2 + 3) < v29) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v40;
      if (v25) {
        goto LABEL_8;
      }
    }
    else
    {
      sub_10031DC28();
      uint64_t v2 = v40;
      if (v9)
      {
LABEL_8:
        uint64_t v13 = *((void *)v2 + 7);

        *(void *)(v13 + 8 * v26) = v17;
        goto LABEL_9;
      }
    }
LABEL_24:
    *((void *)v2 + (v26 >> 6) + 8) |= 1 << v26;
    uint64_t v32 = 8 * v26;
    *(void *)(*((void *)v2 + 6) + v32) = v22;
    *(void *)(*((void *)v2 + 7) + v32) = v17;
    uint64_t v33 = *((void *)v2 + 2);
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v35;
    id v36 = v22;
LABEL_9:

    swift_bridgeObjectRelease();
    ++v12;
    uint64_t v11 = v23;
    unint64_t v9 = (unint64_t)v4;
    unint64_t v4 = 0;
    if (v39 == v23)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100317C20(v29, isUniquelyReferenced_nonNull_native);
  unint64_t v30 = sub_10030703C(v22);
  if ((v9 & 1) == (v31 & 1))
  {
    unint64_t v26 = v30;
    uint64_t v2 = v40;
    if (v9) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
  sub_100094134(&qword_10090B6F8);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_10071DDC0(uint64_t a1, void *a2)
{
  unint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EFD98((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  unint64_t v41 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006970A0(a1, 0, 1, 0, v41, (unint64_t *)&qword_10090B040, (uint64_t)off_1008AA488, &qword_10090D750, (uint64_t *)&unk_100913F20);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_7;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
  uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_33;
  }
LABEL_7:
  unint64_t v39 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v12 = 4;
  while (1)
  {
    uint64_t v15 = v12 - 4;
    if (v39)
    {
      id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v17 = v12 - 3;
      if (__OFADD__(v15, 1)) {
        goto LABEL_29;
      }
    }
    else
    {
      id v16 = *(id *)(v9 + 8 * v12);
      uint64_t v17 = v12 - 3;
      if (__OFADD__(v15, 1))
      {
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    unint64_t v41 = 0;
    id v40 = v16;
    id v18 = [v40 remObjectIDWithError:&v41];
    if (!v18)
    {
      unint64_t v38 = v41;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_27:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v19 = v18;
    id v20 = v41;
    id v21 = sub_100693E40(v19);
    if (v4) {
      goto LABEL_27;
    }
    uint64_t v22 = v21;
    uint64_t v23 = v12;
    uint64_t v24 = v11;
    unint64_t v4 = v9;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v41 = v2;
    unint64_t v9 = sub_10030703C(v22);
    uint64_t v27 = *((void *)v2 + 2);
    BOOL v28 = (v26 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      goto LABEL_30;
    }
    char v30 = v26;
    if (*((void *)v2 + 3) < v29) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_10031DC34();
    }
LABEL_23:
    uint64_t v11 = v24;
    uint64_t v2 = v41;
    if (v30)
    {
      uint64_t v13 = *((void *)v41 + 7);
      uint64_t v14 = 8 * v9;

      *(void *)(v13 + v14) = v40;
    }
    else
    {
      *((void *)v41 + (v9 >> 6) + 8) |= 1 << v9;
      uint64_t v33 = 8 * v9;
      *(void *)(*((void *)v2 + 6) + v33) = v22;
      *(void *)(*((void *)v2 + 7) + v33) = v40;
      uint64_t v34 = *((void *)v2 + 2);
      BOOL v35 = __OFADD__(v34, 1);
      uint64_t v36 = v34 + 1;
      if (v35) {
        goto LABEL_31;
      }
      *((void *)v2 + 2) = v36;
      id v37 = v22;
    }

    swift_bridgeObjectRelease();
    uint64_t v12 = v23 + 1;
    unint64_t v9 = v4;
    unint64_t v4 = 0;
    if (v17 == v11)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100317C2C(v29, isUniquelyReferenced_nonNull_native);
  unint64_t v31 = sub_10030703C(v22);
  if ((v30 & 1) == (v32 & 1))
  {
    unint64_t v9 = v31;
    goto LABEL_23;
  }
  sub_100094134((uint64_t *)&unk_100913F20);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

objc_class *sub_10071E190(uint64_t a1, void *a2)
{
  unint64_t v4 = v3;
  if (!*(void *)(a1 + 16)) {
    return (objc_class *)sub_1002EFDA4((uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100094134((uint64_t *)&unk_10090AF20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10077A530;
  *(void *)(v7 + 32) = a2;
  id v40 = (objc_class *)v7;
  specialized Array._endMutation()();
  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_1006970A0(a1, 0, 1, 0, v40, (unint64_t *)&qword_100909AD0, (uint64_t)off_1008AA460, &qword_100910160, (uint64_t *)&unk_1009140D0);
  swift_bridgeObjectRelease();
  if (v3) {
    return v2;
  }
  if (v9 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_7;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    return (objc_class *)_swiftEmptyDictionarySingleton;
  }
  uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_35;
  }
LABEL_7:
  unint64_t v39 = v9 & 0xC000000000000001;
  uint64_t v2 = (objc_class *)_swiftEmptyDictionarySingleton;
  uint64_t v12 = 4;
  uint64_t v38 = v11;
  while (1)
  {
    uint64_t v15 = v12 - 4;
    if (v39)
    {
      id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v17 = v12 - 3;
      if (__OFADD__(v15, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      id v16 = *(id *)(v9 + 8 * v12);
      uint64_t v17 = v12 - 3;
      if (__OFADD__(v15, 1))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    id v40 = 0;
    id v18 = v16;
    id v19 = [v18 remObjectIDWithError:&v40];
    if (!v19)
    {
      id v37 = v40;
      _convertNSErrorToError(_:)();

      swift_willThrow();
LABEL_29:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    id v20 = v19;
    id v21 = v40;
    uint64_t v22 = sub_100694DE8(v20, (unint64_t *)&qword_100909AD0);
    if (v4) {
      goto LABEL_29;
    }
    uint64_t v23 = v22;
    unint64_t v4 = (void *)v9;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v40 = v2;
    unint64_t v26 = sub_10030703C(v23);
    uint64_t v27 = *((void *)v2 + 2);
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      goto LABEL_32;
    }
    unint64_t v9 = (unint64_t)v25;
    if (*((void *)v2 + 3) < v29) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v40;
      if (v25) {
        goto LABEL_8;
      }
    }
    else
    {
      sub_10031DC40();
      uint64_t v2 = v40;
      if (v9)
      {
LABEL_8:
        uint64_t v13 = *((void *)v2 + 7);
        uint64_t v14 = 8 * v26;

        *(void *)(v13 + v14) = v18;
        goto LABEL_9;
      }
    }
LABEL_24:
    *((void *)v2 + (v26 >> 6) + 8) |= 1 << v26;
    uint64_t v32 = 8 * v26;
    *(void *)(*((void *)v2 + 6) + v32) = v23;
    *(void *)(*((void *)v2 + 7) + v32) = v18;
    uint64_t v33 = *((void *)v2 + 2);
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_33;
    }
    *((void *)v2 + 2) = v35;
    id v36 = v23;
LABEL_9:

    swift_bridgeObjectRelease();
    ++v12;
    unint64_t v9 = (unint64_t)v4;
    unint64_t v4 = 0;
    if (v17 == v38)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  sub_100317C38(v29, isUniquelyReferenced_nonNull_native);
  unint64_t v30 = sub_10030703C(v23);
  if ((v9 & 1) == (v31 & 1))
  {
    unint64_t v26 = v30;
    uint64_t v2 = v40;
    if (v9) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
  sub_100094134((uint64_t *)&unk_1009140D0);
  uint64_t result = (objc_class *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void *sub_10071E568(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v48 = a4;
  uint64_t v58 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  unint64_t v9 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _swiftEmptyDictionarySingleton;
  id v60 = _swiftEmptyDictionarySingleton;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v11; ++i)
    {
      id v13 = *(id *)(a1 + 8 * i + 32);
      uint64_t v14 = v55;
      sub_10071EBA4((uint64_t *)&v60, v13);
      uint64_t v55 = v14;
      if (v14)
      {
        swift_bridgeObjectRelease();

        return (void *)swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = v60;
  }
  id v60 = _swiftEmptyArrayStorage;
  id v15 = [self subclassesOfREMCDObjectRepresentingRootCoreDataEntities];
  sub_100094134(&qword_100917C30);
  uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v17 = *(void *)(v16 + 16);
  if (!v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v18 = 0;
  v47[1] = v16;
  uint64_t v54 = v16 + 32;
  uint64_t v57 = v7 + 32;
  if (a3) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = a2;
  }
  uint64_t v52 = v19;
  id v20 = &stru_1008F6000;
  uint64_t v49 = v17;
  id v50 = v10;
  while (1)
  {
    uint64_t v56 = v18;
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    if (([ObjCClassFromMetadata respondsToSelector:v20[164].name] & 1) == 0) {
      break;
    }
    id v22 = [ObjCClassFromMetadata v20[164].name];
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;

    if (v10[2])
    {
      unint64_t v26 = sub_1001806F8(v23, v25);
      if (v27)
      {
        uint64_t v28 = *(void *)(v10[7] + 8 * v26);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        int64_t v29 = *(void *)(v28 + 16);
        if (v29)
        {
          unint64_t v59 = (unint64_t)_swiftEmptyArrayStorage;
          sub_1001DE148(0, v29, 0);
          uint64_t v30 = 0;
          uint64_t v31 = v59;
          do
          {
            id v32 = *(id *)(v28 + 8 * v30 + 32);
            id v33 = [v32 uuid];
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            unint64_t v59 = v31;
            unint64_t v35 = *(void *)(v31 + 16);
            unint64_t v34 = *(void *)(v31 + 24);
            if (v35 >= v34 >> 1)
            {
              sub_1001DE148(v34 > 1, v35 + 1, 1);
              uint64_t v31 = v59;
            }
            ++v30;
            *(void *)(v31 + 16) = v35 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v31+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v35, v9, v58);
          }
          while (v29 != v30);
          swift_bridgeObjectRelease();
          uint64_t v36 = sub_100126860(v31);
          swift_release();
          uint64_t KeyPath = swift_getKeyPath();
          uint64_t v38 = sub_100333098(v36);
          swift_bridgeObjectRelease();
          unint64_t v39 = (void *)sub_1003A0380(KeyPath, v38, &qword_100921968, (uint64_t *)&unk_100914540);
          swift_release();
          if (v52 < 0) {
            goto LABEL_48;
          }
          uint64_t v10 = v50;
          if (v48) {
            v40.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
          }
          else {
            v40.super.Class isa = 0;
          }
          id v51 = v39;
          id v41 = [ObjCClassFromMetadata ic_resultsMatchingPredicate:v39 sortDescriptors:0 resultType:0 fetchBatchSize:v52 propertiesToFetch:v53 relationshipKeyPathsForPrefetching:0 context:v40.super.isa];

          sub_100094134((uint64_t *)&unk_100921990);
          unint64_t v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          unint64_t v59 = (unint64_t)_swiftEmptyArrayStorage;
          uint64_t v17 = v49;
          if (v42 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
            if (!v43) {
              goto LABEL_41;
            }
LABEL_28:
            if (v43 < 1)
            {
              __break(1u);
              break;
            }
            for (uint64_t j = 0; j != v43; ++j)
            {
              if ((v42 & 0xC000000000000001) != 0) {
                specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                swift_unknownObjectRetain();
              }
              self;
              if (swift_dynamicCastObjCClass())
              {
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
              }
              else
              {
                swift_unknownObjectRelease();
              }
            }
            swift_bridgeObjectRelease();
            unint64_t v45 = (void *)v59;
            uint64_t v17 = v49;
            uint64_t v10 = v50;
          }
          else
          {
            uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v43) {
              goto LABEL_28;
            }
LABEL_41:
            swift_bridgeObjectRelease();
            unint64_t v45 = _swiftEmptyArrayStorage;
          }
          swift_bridgeObjectRelease();
          sub_100202CFC((unint64_t)v45);

          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
LABEL_12:
    id v20 = &stru_1008F6000;
    uint64_t v18 = v56 + 1;
    if (v56 + 1 == v17)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v60;
    }
  }
  __break(1u);
LABEL_48:
  uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10071EBA4(uint64_t *a1, void *a2)
{
  unint64_t v4 = sub_1005A3BAC();
  id v5 = [a2 entityName];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  if (v4[2] && (unint64_t v9 = sub_1001806F8(v6, v8), (v10 & 1) != 0))
  {
    uint64_t v11 = (uint64_t *)(v4[7] + 16 * v9);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(*a1 + 16)
      && (swift_bridgeObjectRetain(), sub_1001806F8(v13, v12), char v15 = v14, swift_bridgeObjectRelease(), (v15 & 1) != 0))
    {
      uint64_t v17 = sub_1001EE520(&v35, v13, v12);
      if (*v16)
      {
        uint64_t v18 = v16;
        id v19 = a2;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(*v18 + 16) >= *(void *)(*v18 + 24) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        ((void (*)(uint64_t *, void))v17)(&v35, 0);
      }
      else
      {
        ((void (*)(uint64_t *, void))v17)(&v35, 0);
      }
    }
    else
    {
      sub_100094134(&qword_10090FF10);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_100776E40;
      *(void *)(v31 + 32) = a2;
      uint64_t v35 = v31;
      specialized Array._endMutation()();
      uint64_t v32 = v35;
      id v33 = a2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v35 = *a1;
      *a1 = 0x8000000000000000;
      sub_1002C4BF4(v32, v13, v12, isUniquelyReferenced_nonNull_native);
      *a1 = v35;
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v20 = self;
    _StringGuts.grow(_:)(52);
    v21._object = (void *)0x80000001007DBFF0;
    v21._countAndFlagsBits = 0xD000000000000031;
    String.append(_:)(v21);
    id v22 = a2;
    id v23 = [v22 description];
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v26 = v25;

    v27._countAndFlagsBits = v24;
    v27._object = v26;
    String.append(_:)(v27);

    swift_bridgeObjectRelease();
    v28._countAndFlagsBits = 125;
    v28._object = (void *)0xE100000000000000;
    String.append(_:)(v28);
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v20 internalErrorWithDebugDescription:v29];

    return swift_willThrow();
  }
}

uint64_t sub_10071EEC4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10008E278(v0, qword_100921860);
  uint64_t v1 = sub_10008E2DC(v0, (uint64_t)qword_100921860);
  if (qword_100907848 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10008E2DC(v0, (uint64_t)qword_100942520);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10071EF8C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13)
{
  uint64_t v15 = v14;
  uint64_t v64 = a4;
  uint64_t v65 = a8;
  uint64_t v68 = a5;
  uint64_t v69 = a7;
  uint64_t v66 = a3;
  uint64_t v67 = a6;
  uint64_t v63 = a2;
  uint64_t v17 = a13;
  unint64_t v70 = a12;
  sub_10010B4E8(a13, (uint64_t)v72);
  if (*(void *)(v13 + 32) != 3) {
    goto LABEL_12;
  }
  uint64_t v61 = a11;
  uint64_t v62 = a13;
  uint64_t v59 = v14;
  uint64_t v60 = v13;
  if (!(a1 >> 62))
  {
    uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v18) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
LABEL_28:
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  if (!v18)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v17 = v62;
    uint64_t v15 = v59;
    uint64_t v13 = v60;
LABEL_12:
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_100726D5C(_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, a1, a9);
    uint64_t v27 = v26;
    uint64_t result = swift_bridgeObjectRelease();
    if (!v15)
    {
      sub_10073F168((unint64_t)v25);
      __chkstk_darwin(v39);
      v45[2] = v40;
      v45[3] = v13;
      v45[4] = a9;
      v45[5] = v17;
      char v46 = v41 & 1;
      uint64_t v47 = v63;
      unint64_t v48 = a1;
      uint64_t v49 = v65;
      uint64_t v50 = v42;
      unint64_t v51 = v70;
      uint64_t v52 = v64;
      uint64_t v53 = v67;
      uint64_t v54 = v66;
      uint64_t v55 = v68;
      uint64_t v56 = v69;
      uint64_t v57 = v27;
      uint64_t v58 = v25;
      sub_1003B5ADC(v17, (uint64_t)sub_10073F704, (uint64_t)v45);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    return result;
  }
LABEL_4:
  uint64_t v19 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v20 = *(id *)(a1 + 8 * v19);
    }
    Swift::String v21 = v20;
    uint64_t v22 = v19 - 3;
    if (__OFADD__(v19 - 4, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    id v23 = [v20 accountTypeHost];
    unsigned __int8 v24 = [v23 isCloudKit];

    if (v24) {
      break;
    }
    ++v19;
    if (v22 == v18) {
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
  if (qword_100907B88 != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  sub_10008E2DC(v29, (uint64_t)qword_100921860);
  unint64_t v30 = v70;
  swift_bridgeObjectRetain();
  uint64_t v31 = v62;
  sub_10073F754(v62, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
  swift_bridgeObjectRetain();
  sub_10073F754(v62, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v73 = swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 136446466;
    if (v30) {
      uint64_t v35 = v61;
    }
    else {
      uint64_t v35 = 7104878;
    }
    if (v30) {
      unint64_t v36 = v30;
    }
    else {
      unint64_t v36 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    sub_1000C51B8(v35, v36, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2082;
    uint64_t v37 = sub_100696CF4();
    uint64_t v71 = sub_1000C51B8(v37, v38, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10073F754(v31, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
    sub_10073F754(v31, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "RDDatabaseSaver: Unexpected use of REMStoreModeEventKitSync to edit/insert/remove CloudKit account(s) {author: %{public}s, clientIdentity: %{public}s}", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_10073F754(v62, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
    sub_10073F754(v62, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
  }

  uint64_t v43 = self;
  NSString v44 = String._bridgeToObjectiveC()();
  [v43 internalErrorWithDebugDescription:v44];

  return swift_willThrow();
}

void sub_10071F4C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, unint64_t a7, unint64_t a8, unint64_t a9, uint64_t a10, unint64_t a11, unint64_t a12, unint64_t a13, unint64_t a14, unint64_t a15, unint64_t a16, unint64_t a17, int64_t a18)
{
  uint64_t v26 = *(void **)(a3 + 24);
  sub_100530270(a2, a1, v26);
  if (v18) {
    return;
  }
  unint64_t v124 = a7;
  uint64_t v27 = *(void *)(a3 + 32);
  type metadata accessor for CDIngestionCoordinator();
  uint64_t v28 = swift_allocObject();
  swift_bridgeObjectRetain();
  id v29 = v26;
  sub_10073F754(a5, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
  uint64_t v121 = a1;
  uint64_t v122 = (void *)a5;
  uint64_t v30 = sub_1007264A0(a4, v29, v121, a5, v27, a6 & 1, v28);
  uint64_t v123 = v30;
  if (*(unsigned char *)(v30 + 16))
  {
    uint64_t v31 = v30;
    unsigned __int8 v32 = 1;
    goto LABEL_32;
  }
  uint64_t v31 = a7;
  if (a7 >> 62) {
    goto LABEL_27;
  }
  uint64_t v33 = *(void *)((a7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v33) {
    goto LABEL_6;
  }
LABEL_13:
  while (1)
  {
    swift_bridgeObjectRelease();
    if (a8 >> 62) {
      break;
    }
    uint64_t v39 = *(void *)((a8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v31 = v123;
    if (!v39) {
      goto LABEL_30;
    }
LABEL_15:
    uint64_t v40 = 4;
    while (1)
    {
      id v41 = (a8 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(a8 + 8 * v40);
      uint64_t v42 = v41;
      uint64_t v43 = v40 - 3;
      if (__OFADD__(v40 - 4, 1)) {
        break;
      }
      unsigned __int8 v32 = [v41 listsDADisplayOrderChanged];

      if ((v32 & 1) == 0)
      {
        ++v40;
        if (v43 != v39) {
          continue;
        }
      }
      goto LABEL_24;
    }
    __break(1u);
    while (1)
    {
      __break(1u);
LABEL_27:
      swift_bridgeObjectRetain();
      uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
      if (!v33) {
        break;
      }
LABEL_6:
      uint64_t v34 = 4;
      while (1)
      {
        id v35 = (v31 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(v31 + 8 * v34);
        unint64_t v36 = v35;
        uint64_t v37 = v34 - 3;
        if (__OFADD__(v34 - 4, 1)) {
          break;
        }
        unsigned __int8 v38 = [v35 remindersICSDisplayOrderChanged];

        if (v38)
        {
          unsigned __int8 v32 = 1;
LABEL_24:
          uint64_t v31 = v123;
          goto LABEL_31;
        }
        ++v34;
        if (v37 == v33) {
          goto LABEL_13;
        }
      }
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v31 = v123;
  if (v39) {
    goto LABEL_15;
  }
LABEL_30:
  unsigned __int8 v32 = 0;
LABEL_31:
  swift_bridgeObjectRelease();
LABEL_32:
  *(unsigned char *)(v31 + 16) = v32;
  type metadata accessor for REMAccountStorageCDIngestor();
  uint64_t v44 = swift_allocObject();
  sub_1006A32AC(a8, v44);
  swift_release();
  type metadata accessor for REMListStorageCDIngestor();
  uint64_t v45 = swift_allocObject();
  sub_1006A3AF4(v124, v45);
  swift_release();
  unint64_t v127 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v128 = _swiftEmptyArrayStorage;
  if (a9 >> 62)
  {
    swift_bridgeObjectRetain();
    int64_t v46 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    int64_t v46 = *(void *)((a9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (v46)
  {
    sub_1000963CC(0, (unint64_t *)&qword_10090B040);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    if (v46 >= 1)
    {
      uint64_t v47 = 0;
      uint64_t v48 = 7104878;
      if (a11) {
        uint64_t v48 = a10;
      }
      uint64_t v120 = v48;
      unint64_t v49 = 0xE300000000000000;
      if (a11) {
        unint64_t v49 = a11;
      }
      unint64_t v119 = v49;
      while (1)
      {
        id v50 = (a9 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(a9 + 8 * v47 + 32);
        unint64_t v51 = v50;
        id v52 = [v50 objectID];
        id v53 = [v52 entityName];

        uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v56 = v55;

        id v57 = [ObjCClassFromMetadata cdEntityName];
        uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v60 = v59;

        if (v54 == v58 && v56 == v60) {
          break;
        }
        char v62 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v62) {
          goto LABEL_53;
        }
        id v63 = [v51 objectID];
        id v64 = [v63 entityName];

        uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v67 = v66;

        if (v65 == 0xD000000000000012 && v67 == 0x80000001007CC3C0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v70 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v70 & 1) == 0)
          {
            if (qword_100907B88 != -1) {
              swift_once();
            }
            uint64_t v71 = type metadata accessor for Logger();
            sub_10008E2DC(v71, (uint64_t)qword_100921860);
            sub_10073F754((uint64_t)v122, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            id v72 = v51;
            swift_bridgeObjectRetain();
            sub_10073F754((uint64_t)v122, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            id v73 = v72;
            swift_bridgeObjectRetain();
            unint64_t v74 = Logger.logObject.getter();
            os_log_type_t v75 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v74, v75))
            {
              uint64_t v76 = swift_slowAlloc();
              id v118 = (void *)swift_slowAlloc();
              uint64_t v126 = swift_slowAlloc();
              *(_DWORD *)uint64_t v76 = 136446722;
              swift_bridgeObjectRetain();
              *(void *)(v76 + 4) = sub_1000C51B8(v120, v119, &v126);
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v76 + 12) = 2082;
              uint64_t v77 = sub_100696CF4();
              *(void *)(v76 + 14) = sub_1000C51B8(v77, v78, &v126);
              swift_bridgeObjectRelease();
              sub_10073F754((uint64_t)v122, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
              sub_10073F754((uint64_t)v122, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
              *(_WORD *)(v76 + 22) = 2114;
              id v79 = [v73 objectID];
              *(void *)(v76 + 24) = v79;
              *id v118 = v79;

              _os_log_impl((void *)&_mh_execute_header, v74, v75, "RDDatabaseSaver: Attempt to ingest REMReminderStorage with unexpected '\\REMReminderStorage.objectID.entityName' {author: %{public}s, clientIdentity: %{public}s, reminderStorage.objectID: %{public}@}", (uint8_t *)v76, 0x20u);
              sub_100094134((uint64_t *)&unk_10090A040);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              swift_bridgeObjectRelease_n();

              sub_10073F754((uint64_t)v122, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
              sub_10073F754((uint64_t)v122, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            }
            goto LABEL_59;
          }
        }
        id v68 = v51;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        unint64_t v69 = v127;
LABEL_56:
        if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

LABEL_59:
        if (v46 == ++v47)
        {
          swift_bridgeObjectRelease();
          unint64_t v80 = (unint64_t)v128;
          goto LABEL_67;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_53:
      id v68 = v51;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      unint64_t v69 = (unint64_t)v128;
      goto LABEL_56;
    }
    __break(1u);
    goto LABEL_123;
  }
  swift_bridgeObjectRelease();
  unint64_t v80 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_67:
  if (!(v80 >> 62))
  {
    if (!*(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_70;
    }
    goto LABEL_69;
  }
  swift_bridgeObjectRetain();
  uint64_t v111 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v111)
  {
LABEL_69:
    type metadata accessor for REMReminderStorageCDIngestor();
    uint64_t v81 = swift_allocObject();
    sub_1006A433C(v80, v81);
    swift_release();
  }
LABEL_70:
  swift_bridgeObjectRelease();
  unint64_t v82 = v127;
  if (!(v127 >> 62))
  {
    unint64_t v83 = a12;
    if (!*(void *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  swift_bridgeObjectRetain();
  uint64_t v112 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  unint64_t v83 = a12;
  if (v112)
  {
LABEL_72:
    id v84 = [self defaultFetchOptions];
    type metadata accessor for REMSavedReminderStorageCDIngestor();
    uint64_t v85 = swift_allocObject();
    *(void *)(v85 + 16) = v84;
    sub_1006A4B84(v82, v85);
    swift_release();
  }
LABEL_73:
  swift_bridgeObjectRelease();
  if (!(v83 >> 62))
  {
    unint64_t v86 = a13;
    if (!*(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_76;
    }
    goto LABEL_75;
  }
  swift_bridgeObjectRetain();
  uint64_t v113 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  unint64_t v86 = a13;
  if (v113)
  {
LABEL_75:
    type metadata accessor for REMSmartListStorageCDIngestor();
    uint64_t v87 = swift_allocObject();
    sub_1006A53BC(v83, v87);
    swift_release();
  }
LABEL_76:
  if (!(v86 >> 62))
  {
    unint64_t v88 = a14;
    if (!*(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  swift_bridgeObjectRetain();
  uint64_t v114 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  unint64_t v88 = a14;
  if (v114)
  {
LABEL_78:
    id v89 = [self sharedConfiguration];
    [v89 templatePublicLinkTTL];
    uint64_t v91 = v90;

    type metadata accessor for REMTemplateStorageCDIngestor();
    uint64_t v92 = swift_allocObject();
    *(void *)(v92 + 16) = v91;
    sub_1006A5C04(v86, v92);
    swift_release();
  }
LABEL_79:
  if (!(v88 >> 62))
  {
    unint64_t v93 = a15;
    if (!*(void *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_82;
    }
    goto LABEL_81;
  }
  swift_bridgeObjectRetain();
  uint64_t v115 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  unint64_t v93 = a15;
  if (v115)
  {
LABEL_81:
    type metadata accessor for REMListSectionStorageCDIngestor();
    uint64_t v94 = swift_allocObject();
    sub_1006A643C(v88, v94);
    swift_release();
  }
LABEL_82:
  if (!(v93 >> 62))
  {
    unint64_t v95 = a16;
    if (!*(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  swift_bridgeObjectRetain();
  uint64_t v116 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  unint64_t v95 = a16;
  if (v116)
  {
LABEL_84:
    type metadata accessor for REMSmartListSectionStorageCDIngestor();
    uint64_t v96 = swift_allocObject();
    sub_1006A6C74(v93, v96);
    swift_release();
  }
LABEL_85:
  if (!(v95 >> 62))
  {
    if (!*(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_88;
    }
    goto LABEL_87;
  }
  swift_bridgeObjectRetain();
  uint64_t v117 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v117)
  {
LABEL_87:
    type metadata accessor for REMTemplateSectionStorageCDIngestor();
    uint64_t v97 = swift_allocObject();
    sub_1006A74AC(v95, v97);
    swift_release();
  }
LABEL_88:
  static os_log_type_t.info.getter();
  measureTimeElapsed(_:level:block:)();
  if (a11)
  {
    int64_t v46 = a11;
  }
  else
  {
    sub_100696CF4();
    int64_t v46 = 0xE300000000000000;
  }
  swift_bridgeObjectRetain();
  id v98 = [v121 transactionAuthor];
  if (v98)
  {
    uint64_t v99 = v98;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    a8 = v100;
  }
  else
  {
    a8 = 0;
  }
  NSString v101 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v121 setTransactionAuthor:v101];

  __chkstk_darwin(v102);
  static os_log_type_t.info.getter();
  measureTimeElapsed(_:level:block:)();
  sub_10073F7D0(a17, v122);
  sub_10072063C(a17, a10, a11);
  sub_100720F2C(a18, a10, a11);
  sub_100383B68();
  if (qword_100907B88 != -1) {
LABEL_123:
  }
    swift_once();
  uint64_t v104 = type metadata accessor for Logger();
  sub_10008E2DC(v104, (uint64_t)qword_100921860);
  sub_10073F754((uint64_t)v122, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
  swift_bridgeObjectRetain();
  sub_10073F754((uint64_t)v122, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
  swift_bridgeObjectRetain();
  id v105 = Logger.logObject.getter();
  os_log_type_t v106 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v105, v106))
  {
    uint64_t v107 = swift_slowAlloc();
    uint64_t v126 = swift_slowAlloc();
    *(_DWORD *)uint64_t v107 = 136446466;
    if (a11) {
      uint64_t v108 = a10;
    }
    else {
      uint64_t v108 = 7104878;
    }
    swift_bridgeObjectRetain();
    sub_1000C51B8(v108, v46, &v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v107 + 12) = 2082;
    uint64_t v109 = sub_100696CF4();
    sub_1000C51B8(v109, v110, &v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10073F754((uint64_t)v122, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
    sub_10073F754((uint64_t)v122, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
    _os_log_impl((void *)&_mh_execute_header, v105, v106, "SAVE END {request.author: %{public}s, clientIdentity: %{public}s}", (uint8_t *)v107, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_10073F754((uint64_t)v122, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
    sub_10073F754((uint64_t)v122, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
  }
  if (a8) {
    NSString v103 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v103 = 0;
  }
  [v121 setTransactionAuthor:v103];
  swift_bridgeObjectRelease();
  swift_release();
}

id sub_100720598(void *a1)
{
  id v3 = 0;
  if ([a1 save:&v3]) {
    return v3;
  }
  id v2 = v3;
  _convertNSErrorToError(_:)();

  return (id)swift_willThrow();
}

void sub_10072063C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v22) {
      return;
    }
  }
  else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return;
  }
  uint64_t v8 = (void *)sub_100720890(a1);
  if (v8)
  {
    unint64_t v9 = v8;
    sub_10034BBA4(v8);
  }
  unint64_t v10 = (unint64_t)sub_100720D50(a1);
  if (v10 >> 62) {
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v11) {
    sub_10034CEA0(0);
  }
  sub_100094134(&qword_100908170);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100776E80;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v13;
  *(void *)(inited + 72) = &type metadata for String;
  uint64_t v14 = 0x68747561206F6E28;
  if (a3) {
    uint64_t v14 = a2;
  }
  unint64_t v15 = 0xEB0000000029726FLL;
  if (a3) {
    unint64_t v15 = a3;
  }
  *(void *)(inited + 48) = v14;
  *(void *)(inited + 56) = v15;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1001281EC(a1);
  swift_bridgeObjectRelease();
  *(void *)(inited + 120) = sub_100094134(&qword_100917CA0);
  *(void *)(inited + 96) = v17;
  unint64_t v18 = sub_1001805C0(inited);
  id v19 = [self defaultCenter];
  uint64_t v20 = *(void *)(v4 + 24);
  sub_100421E94(v18);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v19 postNotificationName:@"RDStoreControllerDidDisableAccountsNotification" object:v20 userInfo:isa];
}

uint64_t sub_100720890(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v30 = _swiftEmptyArrayStorage;
  id v2 = (uint8_t *)(a1 >> 62);
  if (!(a1 >> 62))
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v9 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_16:
    BOOL v10 = v9 < 0 || (v9 & 0x4000000000000000) != 0;
    if (v10)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
      if (v25 <= 1) {
        goto LABEL_36;
      }
    }
    else if (*(uint64_t *)(v9 + 16) <= 1)
    {
      goto LABEL_36;
    }
    if (qword_100907B88 != -1) {
      goto LABEL_50;
    }
    while (1)
    {
      uint64_t v11 = type metadata accessor for Logger();
      sub_10008E2DC(v11, (uint64_t)qword_100921860);
      swift_bridgeObjectRetain_n();
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v12, v13))
      {
        os_log_type_t v27 = v13;
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v30 = (void *)swift_slowAlloc();
        id v29 = v14;
        *(_DWORD *)uint64_t v14 = 136446210;
        if (v2)
        {
          swift_bridgeObjectRetain();
          uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v15 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v15)
        {
          uint64_t v26 = v12;
          uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
          if (v15 < 0)
          {
            __break(1u);
            return result;
          }
          uint64_t v17 = 0;
          do
          {
            if ((v1 & 0xC000000000000001) != 0) {
              id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v18 = *(id *)(v1 + 8 * v17 + 32);
            }
            id v19 = v18;
            ++v17;
            id v20 = [v18 remObjectID:v26];

            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          while (v15 != v17);
          uint64_t v12 = v26;
        }
        id v2 = v29;
        sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
        uint64_t v21 = Array.description.getter();
        unint64_t v23 = v22;
        swift_bridgeObjectRelease();
        sub_1000C51B8(v21, v23, (uint64_t *)&v30);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v12, v27, "RDDatabaseSaver: Found more than 1 primary cloudkit account storage in array {accountIDs: %{public}s}", v29, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
LABEL_36:
      if (v10)
      {
        swift_bridgeObjectRetain();
        uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
        swift_release();
        if (!v1) {
          goto LABEL_44;
        }
      }
      else
      {
        uint64_t v1 = *(void *)(v9 + 16);
        if (!v1) {
          goto LABEL_44;
        }
      }
      if ((v9 & 0xC000000000000001) != 0) {
        goto LABEL_48;
      }
      if (*(void *)(v9 + 16))
      {
        id v24 = *(id *)(v9 + 32);
        goto LABEL_43;
      }
      __break(1u);
LABEL_50:
      swift_once();
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  if (!v3) {
    goto LABEL_15;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v28 = v2;
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(v1 + 8 * i + 32);
      }
      uint64_t v6 = v5;
      id v7 = [v5 accountTypeHost];
      unsigned int v8 = [v7 isPrimaryCloudKit];

      if (!v8 || ([v6 _isAddingExtraPrimaryCKAccountForTesting] & 1) != 0)
      {
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = (uint64_t)v30;
    id v2 = v28;
    goto LABEL_16;
  }
  __break(1u);
LABEL_48:
  id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_43:
  uint64_t v1 = (uint64_t)v24;
LABEL_44:
  swift_release();
  return v1;
}

void *sub_100720D50(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (!v2) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_14;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    goto LABEL_19;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v4 = *(id *)(v1 + 8 * i + 32);
    }
    id v5 = v4;
    id v6 = [v4 accountTypeHost];
    unsigned int v7 = [v6 isNonPrimaryCloudKit];

    if (v7)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
    }
  }
LABEL_14:
  swift_bridgeObjectRelease();
  unsigned int v8 = (void *)sub_100720890(v1);
  if (v8)
  {
    unint64_t v1 = v8;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_16:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      return _swiftEmptyArrayStorage;
    }
LABEL_19:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_16;
  }
  return _swiftEmptyArrayStorage;
}

void sub_100720F2C(int64_t a1, uint64_t a2, unint64_t a3)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v3 = a1;
    }
    else {
      uint64_t v3 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    int64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v8) {
      return;
    }
  }
  else
  {
    int64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v8) {
      return;
    }
  }
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v27 = a2;
  unint64_t v28 = a3;
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v8; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v11 = v10;
    if ((objc_msgSend(v10, "inactive", v27, v28) & 1) != 0
      || ([v11 markedForRemoval] & 1) != 0)
    {
    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
  }
  swift_bridgeObjectRelease();
  int64_t v8 = (int64_t)_swiftEmptyArrayStorage;
  uint64_t v3 = v4;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0
    || ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
  {
LABEL_36:
    swift_retain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (v26) {
      goto LABEL_16;
    }
    goto LABEL_37;
  }
  if (_swiftEmptyArrayStorage[2])
  {
LABEL_16:
    uint64_t v12 = (void *)sub_100720890(v8);
    if (v12)
    {
      os_log_type_t v13 = v12;
      if (([v12 _isAddingExtraPrimaryCKAccountForTesting] & 1) == 0) {
        sub_10034C3AC(v13);
      }
    }
    unint64_t v14 = (unint64_t)sub_100720D50(v8);
    swift_release();
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v15) {
      sub_10034CEA0(1);
    }
    sub_100094134(&qword_100908170);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100776E80;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v17;
    *(void *)(inited + 72) = &type metadata for String;
    uint64_t v18 = 0x68747561206F6E28;
    if (v28) {
      uint64_t v18 = v27;
    }
    unint64_t v19 = 0xEB0000000029726FLL;
    if (v28) {
      unint64_t v19 = v28;
    }
    *(void *)(inited + 48) = v18;
    *(void *)(inited + 56) = v19;
    *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 88) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1001281EC(a1);
    swift_bridgeObjectRelease();
    *(void *)(inited + 120) = sub_100094134(&qword_100917CA0);
    *(void *)(inited + 96) = v21;
    unint64_t v22 = sub_1001805C0(inited);
    id v23 = [self defaultCenter];
    uint64_t v24 = *(void *)(v3 + 24);
    sub_100421E94(v22);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v23 postNotificationName:@"RDStoreControllerDidEnableAccountsNotification" object:v24 userInfo:isa];

    return;
  }
LABEL_37:

  swift_release();
}

uint64_t sub_1007212E8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RDDatabaseSaver()
{
  return self;
}

void sub_10072134C(void *a1, id *a2, uint64_t a3)
{
  id v5 = *a2;
  id v6 = [*a2 remObjectID];
  unsigned int v7 = v6;
  if (!*(void *)(a3 + 16) || (unint64_t v8 = sub_100306FE8((uint64_t)v6), (v9 & 1) == 0))
  {

    return;
  }
  uint64_t v10 = *(void *)(*(void *)(a3 + 56) + 8 * v8);
  swift_bridgeObjectRetain();

  unsigned int v11 = [v5 markedForRemoval];
  if (sub_1001CBC20(0x6576697463616E69, 0xE800000000000000, v10)) {
    unsigned int v12 = [v5 inactive];
  }
  else {
    unsigned int v12 = 0;
  }
  char v13 = sub_1001CBC20(0x44497463656A626FLL, 0xE800000000000000, v10);
  char v14 = sub_1001CBC20(0x6576697463616E69, 0xE800000000000000, v10);
  swift_bridgeObjectRelease();
  if (v14)
  {
    unsigned __int8 v15 = [v5 inactive];
    if (v11)
    {
      if ((v13 & 1) == 0)
      {
        if ((v15 & 1) == 0)
        {
          uint64_t v16 = self;
          id v17 = [v5 objectID];
          id v18 = [v16 validationErrorRemoveAccountBeingActivated:v17];
LABEL_16:
          v18;

          swift_willThrow();
          return;
        }
        goto LABEL_24;
      }
LABEL_15:
      unint64_t v19 = self;
      id v17 = [v5 objectID];
      id v18 = [v19 validationErrorRemoveAccountBeingInserted:v17];
      goto LABEL_16;
    }
    if (!(v13 & 1 | ((v15 & 1) == 0)))
    {
LABEL_23:
      if (!v12) {
        return;
      }
      goto LABEL_24;
    }
LABEL_20:
    id v20 = v5;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    goto LABEL_23;
  }
  if (!v11)
  {
    if ((v13 & 1) == 0) {
      goto LABEL_23;
    }
    goto LABEL_20;
  }
  if (v13) {
    goto LABEL_15;
  }
LABEL_24:
  id v21 = v5;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((a1[1] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((a1[1] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
}

uint64_t sub_1007215E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_100319984();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100310B48(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100310B48(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134((uint64_t *)&unk_100913EC0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1007218AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031999C();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100310B60(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100310B60(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134((uint64_t *)&unk_100913C30);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100721B70(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_100319C30();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100310F20(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100310F20(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134((uint64_t *)&unk_100914050);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100721E34(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031A268();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_10031197C(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_10031197C(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134(&qword_10090B6D8);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1007220F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031A45C();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100311C94(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100311C94(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134((uint64_t *)&unk_100914500);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1007223BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031A468();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100311CA0(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100311CA0(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134(&qword_100921FA0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100722680(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031A474();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100311CAC(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100311CAC(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134((uint64_t *)&unk_1009144A0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100722944(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031A480();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100311CB8(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100311CB8(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134(&qword_10090B798);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100722C08(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031AABC();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100312670(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100312670(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134(&qword_10090B718);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100722ECC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031AAC8();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_10031267C(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_10031267C(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134((uint64_t *)&unk_100913F90);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100723190(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031AAD4();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100312688(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100312688(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134(&qword_10090B730);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100723454(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031AAE0();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100312694(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100312694(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134((uint64_t *)&unk_100913FF0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100723718(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031AAEC();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_1003126A0(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_1003126A0(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134(&qword_10090B748);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1007239DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031AAF8();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_1003126AC(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_1003126AC(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134(&qword_10090B760);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100723CA0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031B710();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100313C24(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100313C24(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134((uint64_t *)&unk_1009219C0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100723F64(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031B71C();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100313C30(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100313C30(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134((uint64_t *)&unk_100914210);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100724228(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031B728();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100313C3C(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100313C3C(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134((uint64_t *)&unk_100921E60);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1007244EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031D788();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_1003174BC(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_1003174BC(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134(&qword_10090B7D0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1007247B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031DBEC();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100317BE4(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100317BE4(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134(&qword_10090B690);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100724A74(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031DBF8();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100317BF0(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100317BF0(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134(&qword_10090B6B0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100724D38(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031DC04();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100317BFC(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100317BFC(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134((uint64_t *)&unk_100913CF0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100724FFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031DC10();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100317C08(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100317C08(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134(&qword_10090B6C8);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1007252C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031DC1C();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100317C14(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100317C14(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134((uint64_t *)&unk_100913E20);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100725584(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031DC28();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100317C20(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100317C20(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134(&qword_10090B6F8);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100725848(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031DC34();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100317C2C(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100317C2C(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134((uint64_t *)&unk_100913F20);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100725B0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  unint64_t v8 = (void *)sub_1001A6364(v7);
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unsigned int v12 = (void *)*a5;
  unint64_t v14 = sub_10030703C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      id v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_10031DC40();
      id v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1001A6364(v17);
    if (v26)
    {
      unint64_t v28 = (void *)v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v36 = sub_10030703C(v28);
        uint64_t v37 = v34[2];
        BOOL v38 = (v35 & 1) == 0;
        int64_t v32 = v37 + v38;
        if (__OFADD__(v37, v38)) {
          goto LABEL_25;
        }
        char v39 = v35;
        if (v34[3] < v32)
        {
          sub_100317C38(v32, 1);
          int64_t v32 = sub_10030703C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_27;
          }
          unint64_t v36 = v32;
        }
        id v41 = (void *)*a5;
        if (v39)
        {

          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v36;

          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = 8 * v36;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v41[2] = v44;
        }
        unint64_t v28 = (void *)sub_1001A6364(v32);
        uint64_t v29 = v33;
      }
      while (v28);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000C1AF8();
    return swift_release();
  }
  sub_100317C38(v17, a4 & 1);
  uint64_t v17 = sub_10030703C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    id v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:

    uint64_t v21 = v20[7];
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_27:
  sub_100094134((uint64_t *)&unk_1009140D0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100725DD0(void *a1, char a2, void *a3, uint64_t (*a4)(id), void (*a5)(void), void (*a6)(void), uint64_t *a7)
{
  uint64_t v7 = a1[2];
  if (!v7) {
    return swift_bridgeObjectRelease();
  }
  unsigned int v12 = (void *)a1[4];
  uint64_t v11 = (void *)a1[5];
  swift_bridgeObjectRetain();
  char v13 = (void *)*a3;
  id v14 = v12;
  id v15 = v11;
  unint64_t v17 = a4(v14);
  uint64_t v18 = v13[2];
  BOOL v19 = (v16 & 1) == 0;
  if (__OFADD__(v18, v19)) {
    goto LABEL_23;
  }
  char v20 = v16;
  if (v13[3] >= v18 + v19)
  {
    if (a2)
    {
      if (v16) {
        goto LABEL_10;
      }
    }
    else
    {
      a5();
      if (v20) {
        goto LABEL_10;
      }
    }
LABEL_13:
    BOOL v24 = (void *)*a3;
    *(void *)(*a3 + 8 * (v17 >> 6) + 64) |= 1 << v17;
    uint64_t v25 = 8 * v17;
    *(void *)(v24[6] + v25) = v14;
    *(void *)(v24[7] + v25) = v15;
    uint64_t v26 = v24[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v24[2] = v28;
    uint64_t v29 = v7 - 1;
    if (v7 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    for (uint64_t i = (void **)(a1 + 7); ; i += 2)
    {
      uint64_t v31 = *i;
      int64_t v32 = (void *)*a3;
      id v14 = *(i - 1);
      id v15 = v31;
      unint64_t v33 = a4(v14);
      uint64_t v35 = v32[2];
      BOOL v36 = (v34 & 1) == 0;
      BOOL v27 = __OFADD__(v35, v36);
      uint64_t v37 = v35 + v36;
      if (v27) {
        break;
      }
      char v38 = v34;
      if (v32[3] < v37)
      {
        ((void (*)(uint64_t, uint64_t))a6)(v37, 1);
        unint64_t v33 = a4(v14);
        if ((v38 & 1) != (v39 & 1)) {
          goto LABEL_25;
        }
      }
      if (v38) {
        goto LABEL_10;
      }
      char v40 = (void *)*a3;
      *(void *)(*a3 + 8 * (v33 >> 6) + 64) |= 1 << v33;
      uint64_t v41 = 8 * v33;
      *(void *)(v40[6] + v41) = v14;
      *(void *)(v40[7] + v41) = v15;
      uint64_t v42 = v40[2];
      BOOL v27 = __OFADD__(v42, 1);
      uint64_t v43 = v42 + 1;
      if (v27) {
        goto LABEL_24;
      }
      v40[2] = v43;
      if (!--v29) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  a6();
  uint64_t v21 = a4(v14);
  if ((v20 & 1) == (v22 & 1))
  {
    unint64_t v17 = v21;
    if ((v20 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    swift_allocError();
    swift_willThrow();
    swift_errorRetain();
    sub_100094134((uint64_t *)&unk_10090ABB0);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease_n();
      return swift_errorRelease();
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_100094134(a7);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_26:
  _StringGuts.grow(_:)(30);
  v44._object = (void *)0x80000001007D3E70;
  v44._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v44);
  sub_100094134(a7);
  _print_unlocked<A, B>(_:_:)();
  v45._countAndFlagsBits = 39;
  v45._object = (void *)0xE100000000000000;
  String.append(_:)(v45);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10072617C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  uint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_10072622C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6)
{
  v22[0] = a1;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)&double v13 = __chkstk_darwin(v11).n128_u64[0];
  id v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a2;
  id v17 = [*(id *)(*(void *)a3 + 16) uuid:v13, v22[0]];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v18 = UUID.uuidString.getter();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  v22[5] = v16;
  v22[2] = v18;
  v22[3] = v20;
  sub_100094134(a4);
  sub_100742630(a5, a6);
  Dictionary<>.append(_:toCollectionUnderKey:)();
  return swift_bridgeObjectRelease();
}

BOOL sub_10072639C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  uint64_t v5 = a4(*a1, a3);
  if (!v4)
  {
    uint64_t v7 = *(void *)(v5 + 16);
    swift_bridgeObjectRelease();
    return v7 != 0;
  }
  return v6;
}

BOOL sub_1007263E8(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_10073EF30(*a1, *(void *)(a3 + 72));
  if (!v3)
  {
    uint64_t v6 = v4[2];
    swift_bridgeObjectRelease();
    return v6 != 0;
  }
  return v5;
}

void *sub_100726430@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(void, void)@<X3>, void *a4@<X8>)
{
  uint64_t v6 = (void *)*a1;
  uint64_t result = (void *)a3(*a1, *(void *)(a2 + 72));
  if (!v4)
  {
    unint64_t v8 = result;
    if (result[2])
    {
      uint64_t result = v6;
    }
    else
    {
      uint64_t result = (void *)swift_bridgeObjectRelease();
      uint64_t v6 = 0;
      unint64_t v8 = 0;
    }
    *a4 = v6;
    a4[1] = v8;
  }
  return result;
}

uint64_t sub_1007264A0(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v23 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_WORD *)(a7 + 16) = 0;
  *(void *)(a7 + 112) = _swiftEmptyArrayStorage;
  *(void *)(a7 + 120) = _swiftEmptyArrayStorage;
  *(void *)(a7 + 128) = _swiftEmptyArrayStorage;
  *(void *)(a7 + 136) = _swiftEmptyArrayStorage;
  *(void *)(a7 + 72) = a1;
  *(void *)(a7 + 80) = a2;
  *(void *)(a7 + 88) = a3;
  sub_10010B4E8(a4, a7 + 24);
  id v17 = a2;
  id v18 = a3;
  *(void *)(a7 + 144) = sub_1002EE9BC((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(a7 + 96) = a5;
  *(unsigned char *)(a7 + 104) = a6;
  switch(a5)
  {
    case 0:
      goto LABEL_5;
    case 1:
    case 2:
    case 3:

      *(_WORD *)(a7 + 16) = 257;
      break;
    case 4:

      *(unsigned char *)(a7 + 17) = 1;
      break;
    default:
      uint64_t v19 = v23;
      if (a5 != 4499 && a5 != 4599)
      {
        if (qword_1009073A0 != -1) {
          swift_once();
        }
        uint64_t v21 = sub_10008E2DC(v14, (uint64_t)qword_100916070);
        (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v16, v21, v14);
        sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
        sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
        sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
        __break(1u);
        JUMPOUT(0x1007266DCLL);
      }
LABEL_5:

      break;
  }
  return a7;
}

BOOL sub_1007266F0(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t *a6)
{
  uint64_t v7 = sub_10072FFE4(*a1, a3, a4, a5, a6);
  if (!v6)
  {
    uint64_t v9 = v7[2];
    swift_bridgeObjectRelease();
    return v9 != 0;
  }
  return v8;
}

id sub_100726744@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)a1;
  id v5 = *(id *)(a1 + 8);
  *a2 = *(void *)a1;
  a2[1] = v5;
  id v3 = v2;

  return v5;
}

BOOL sub_100726784(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void))
{
  uint64_t v5 = a4(*a1, *(void *)(a3 + 72));
  if (!v4)
  {
    uint64_t v7 = *(void *)(v5 + 16);
    swift_bridgeObjectRelease();
    return v7 != 0;
  }
  return v6;
}

void *sub_1007267D0@<X0>(void **a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t result = sub_10072FFE4(*a1, *(void *)(a2 + 72), (uint64_t)&type metadata for REMListStorageCDIngestor.RelationshipKey, (uint64_t (*)(void))sub_100692304, &qword_100921DB8);
  if (!v3)
  {
    uint64_t v7 = result;
    if (result[2])
    {
      uint64_t result = v5;
    }
    else
    {
      uint64_t result = (void *)swift_bridgeObjectRelease();
      uint64_t v5 = 0;
      uint64_t v7 = 0;
    }
    *a3 = v5;
    a3[1] = v7;
  }
  return result;
}

uint64_t sub_100726860(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    id v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v18 = v17[1];
    v20[0] = *v17;
    v20[1] = v18;
    swift_bridgeObjectRetain();
    sub_100383C9C(v20, a2);
    if (v2)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= v9) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v5 + 8 * v11);
    if (!v15)
    {
      int64_t v16 = v11 + 1;
      if (v11 + 1 >= v9) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v5 + 8 * v16);
      if (v15) {
        goto LABEL_14;
      }
      int64_t v16 = v11 + 2;
      if (v11 + 2 >= v9) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v5 + 8 * v16);
      if (v15) {
        goto LABEL_14;
      }
      int64_t v16 = v11 + 3;
      if (v11 + 3 >= v9) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v5 + 8 * v16);
      if (v15)
      {
LABEL_14:
        int64_t v11 = v16;
        goto LABEL_15;
      }
      int64_t v19 = v11 + 4;
      if (v11 + 4 >= v9) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v5 + 8 * v19);
      v11 += 4;
      if (!v15) {
        break;
      }
    }
LABEL_15:
    unint64_t v8 = (v15 - 1) & v15;
  }
  while (1)
  {
    int64_t v11 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v11 >= v9) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v5 + 8 * v11);
    ++v19;
    if (v15) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100726A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  uint64_t v5 = (uint64_t *)(a2 + 40);
  int64_t v38 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (1)
  {
    if (v4)
    {
      unint64_t v8 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      unint64_t v9 = v8 | (v6 << 6);
    }
    else
    {
      int64_t v10 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_43;
      }
      if (v10 >= v38) {
        return swift_release();
      }
      unint64_t v11 = *(void *)(v37 + 8 * v10);
      ++v6;
      if (!v11)
      {
        int64_t v6 = v10 + 1;
        if (v10 + 1 >= v38) {
          return swift_release();
        }
        unint64_t v11 = *(void *)(v37 + 8 * v6);
        if (!v11)
        {
          int64_t v6 = v10 + 2;
          if (v10 + 2 >= v38) {
            return swift_release();
          }
          unint64_t v11 = *(void *)(v37 + 8 * v6);
          if (!v11)
          {
            int64_t v6 = v10 + 3;
            if (v10 + 3 >= v38) {
              return swift_release();
            }
            unint64_t v11 = *(void *)(v37 + 8 * v6);
            if (!v11)
            {
              int64_t v12 = v10 + 4;
              if (v12 >= v38) {
                return swift_release();
              }
              unint64_t v11 = *(void *)(v37 + 8 * v12);
              if (!v11)
              {
                while (1)
                {
                  int64_t v6 = v12 + 1;
                  if (__OFADD__(v12, 1)) {
                    goto LABEL_44;
                  }
                  if (v6 >= v38) {
                    return swift_release();
                  }
                  unint64_t v11 = *(void *)(v37 + 8 * v6);
                  ++v12;
                  if (v11) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v6 = v12;
            }
          }
        }
      }
LABEL_23:
      unint64_t v4 = (v11 - 1) & v11;
      unint64_t v9 = __clz(__rbit64(v11)) + (v6 << 6);
    }
    uint64_t v13 = 8 * v9;
    uint64_t v14 = *(void **)(*(void *)(a1 + 48) + v13);
    unint64_t v15 = *(void **)(*(void *)(a1 + 56) + v13);
    swift_beginAccess();
    uint64_t v16 = *v5;
    if ((*v5 & 0xC000000000000001) != 0)
    {
      if (v16 >= 0) {
        v16 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      id v17 = v15;
      id v18 = v14;
      uint64_t v19 = __CocoaDictionary.count.getter();
      if (__OFADD__(v19, 1)) {
        goto LABEL_41;
      }
      *uint64_t v5 = sub_1001A77BC(v16, v19 + 1);
    }
    else
    {
      id v20 = v15;
      id v21 = v14;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v5;
    char v40 = (void *)*v5;
    *uint64_t v5 = 0x8000000000000000;
    unint64_t v25 = sub_100306FE8((uint64_t)v14);
    uint64_t v26 = *(void *)(v23 + 16);
    BOOL v27 = (v24 & 1) == 0;
    uint64_t v28 = v26 + v27;
    if (__OFADD__(v26, v27)) {
      break;
    }
    char v29 = v24;
    if (*(void *)(v23 + 24) >= v28)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_100319978();
      }
    }
    else
    {
      sub_100310B3C(v28, isUniquelyReferenced_nonNull_native);
      unint64_t v30 = sub_100306FE8((uint64_t)v14);
      if ((v29 & 1) != (v31 & 1)) {
        goto LABEL_45;
      }
      unint64_t v25 = v30;
    }
    if (v29)
    {
      uint64_t v7 = v40[7];

      *(void *)(v7 + 8 * v25) = v15;
    }
    else
    {
      v40[(v25 >> 6) + 8] |= 1 << v25;
      *(void *)(v40[6] + 8 * v25) = v14;
      *(void *)(v40[7] + 8 * v25) = v15;
      uint64_t v32 = v40[2];
      BOOL v33 = __OFADD__(v32, 1);
      uint64_t v34 = v32 + 1;
      if (v33) {
        goto LABEL_42;
      }
      v40[2] = v34;
      id v35 = v14;
    }
    *uint64_t v5 = (uint64_t)v40;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  sub_1000963CC(0, (unint64_t *)&qword_10090A3B0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100726D48(uint64_t a1, uint64_t a2)
{
  return sub_1003A0380(a1, a2, (uint64_t *)&unk_100921E90, &qword_10090DC68);
}

void *sub_100726D5C(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1;
  v14[0] = a1;
  v14[1] = a2;
  if (a3 >> 62) {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = _CocoaArrayWrapper.endIndex.getter())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v10 = (a3 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(a3 + 8 * i);
      uint64_t v7 = v10;
      uint64_t v11 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v13 = v10;
      sub_10072134C(v14, &v13, a4);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return v7;
      }

      if (v11 == v8)
      {
        swift_bridgeObjectRelease();
        return (void *)v14[0];
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v7;
}

void *sub_100726EA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(BOOL, uint64_t, uint64_t, void *))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v5 = (uint64_t *)(a2 + 48);
  int64_t v6 = (uint64_t *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_beginAccess();
  uint64_t v26 = v6;
  swift_beginAccess();
  uint64_t v7 = 0;
  uint64_t v8 = _swiftEmptyArrayStorage;
  do
  {
    unint64_t v9 = *(void **)(a1 + 8 * v7 + 32);
    uint64_t v10 = *v5;
    if ((*v5 & 0xC000000000000001) != 0)
    {
      id v11 = v9;
      swift_bridgeObjectRetain();
      if (__CocoaDictionary.lookup(_:)())
      {
        sub_1000963CC(0, (unint64_t *)&qword_100909B00);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v12 = v27;
        swift_unknownObjectRelease();
        goto LABEL_12;
      }
LABEL_14:

      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    uint64_t v13 = *(void *)(v10 + 16);
    id v14 = v9;
    if (v13)
    {
      id v11 = v14;
      swift_bridgeObjectRetain();
      unint64_t v15 = sub_100306FE8((uint64_t)v11);
      if (v16)
      {
        id v12 = *(id *)(*(void *)(v10 + 56) + 8 * v15);
LABEL_12:

        swift_bridgeObjectRelease();
        if (v12) {
          goto LABEL_22;
        }
        goto LABEL_15;
      }
      goto LABEL_14;
    }
LABEL_15:
    uint64_t v17 = *v26;
    if ((*v26 & 0xC000000000000001) != 0)
    {
      id v18 = v9;
      swift_bridgeObjectRetain();
      if (!__CocoaDictionary.lookup(_:)()) {
        goto LABEL_3;
      }
      sub_1000963CC(0, (unint64_t *)&qword_100909B00);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v12 = v27;
      swift_unknownObjectRelease();
    }
    else
    {
      if (!*(void *)(v17 + 16)) {
        goto LABEL_4;
      }
      id v18 = v9;
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_100306FE8((uint64_t)v18);
      if ((v20 & 1) == 0)
      {
LABEL_3:

        swift_bridgeObjectRelease();
LABEL_4:

        goto LABEL_5;
      }
      id v12 = *(id *)(*(void *)(v17 + 56) + 8 * v19);
    }

    swift_bridgeObjectRelease();
    if (!v12) {
      goto LABEL_4;
    }
LABEL_22:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = (void *)a3(0, v8[2] + 1, 1, v8);
    }
    unint64_t v22 = v8[2];
    unint64_t v21 = v8[3];
    if (v22 >= v21 >> 1) {
      uint64_t v8 = (void *)a3(v21 > 1, v22 + 1, 1, v8);
    }
    v8[2] = v22 + 1;
    uint64_t v23 = &v8[2 * v22];
    v23[4] = v9;
    v23[5] = v12;
LABEL_5:
    ++v7;
  }
  while (v3 != v7);
  swift_bridgeObjectRelease();
  return v8;
}

void sub_1007271D4(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_66:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
LABEL_67:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_67;
  }
LABEL_3:
  unint64_t v45 = v1 & 0xC000000000000001;
  uint64_t v3 = 4;
  unint64_t v43 = v1;
  uint64_t v44 = v2;
  while (1)
  {
    if (v45) {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v5 = *(id *)(v1 + 8 * v3);
    }
    id v46 = v5;
    uint64_t v6 = v3 - 3;
    if (__OFADD__(v3 - 4, 1))
    {
      __break(1u);
      goto LABEL_66;
    }
    v7._countAndFlagsBits = 0x49746E756F636361;
    v7._object = (void *)0xE900000000000044;
    Swift::Int v8 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B2ED0, v7);
    if (v8)
    {
      if (v8 != 1)
      {
        if (qword_1009074C8 != -1) {
          swift_once();
        }
        uint64_t v13 = type metadata accessor for Logger();
        sub_10008E2DC(v13, (uint64_t)qword_100917690);
        id v14 = Logger.logObject.getter();
        os_log_type_t v15 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v14, v15))
        {
          type metadata accessor for REMCDSavedAttachment();
          uint64_t v16 = swift_slowAlloc();
          uint64_t v47 = swift_slowAlloc();
          *(_DWORD *)uint64_t v16 = 136446210;
          id v17 = [(id)swift_getObjCClassFromMetadata() description];
          uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v20 = v19;

          *(void *)(v16 + 4) = sub_1000C51B8(v18, v20, &v47);
          uint64_t v2 = v44;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v14, v15, "CDIngestableRelationshipKey is expected to define 'accountID' for every kind of CDIngestors (except REMCDAccount) {CDType: %{public}s}", (uint8_t *)v16, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          unint64_t v1 = v43;
          swift_slowDealloc();
        }

LABEL_7:
        if (v6 == v2) {
          goto LABEL_67;
        }
        goto LABEL_8;
      }
      int v9 = 1;
    }
    else
    {
      int v9 = 0;
    }
    v10._countAndFlagsBits = 0x44497463656A626FLL;
    v10._object = (void *)0xE800000000000000;
    Swift::Int v11 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B2F20, v10);
    if (!v11) {
      break;
    }
    if (v11 == 1)
    {
      int v12 = 1;
      goto LABEL_26;
    }
    if (qword_1009074C8 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_10008E2DC(v27, (uint64_t)qword_100917690);
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v28, v29))
    {

      unint64_t v1 = v43;
      goto LABEL_7;
    }
    uint64_t v30 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136446210;
    type metadata accessor for REMCDSavedAttachment();
    id v31 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v34 = v33;

    uint64_t v2 = v44;
    *(void *)(v30 + 4) = sub_1000C51B8(v32, v34, &v47);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "CDIngestableValueKey is expected to define 'objectID' for every kind of CDIngestors {CDType: %{public}s}", (uint8_t *)v30, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v1 = v43;
    if (v6 == v44) {
      goto LABEL_67;
    }
LABEL_8:
    ++v3;
  }
  int v12 = 0;
LABEL_26:
  if (v9) {
    uint64_t v21 = 0x7265646E696D6572;
  }
  else {
    uint64_t v21 = 0x49746E756F636361;
  }
  if (v9) {
    unint64_t v22 = 0xEA00000000004449;
  }
  else {
    unint64_t v22 = 0xE900000000000044;
  }
  if (v21 == 0x49746E756F636361 && v22 == 0xE900000000000044) {
    goto LABEL_39;
  }
  char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0)
  {
    if (v21 == 0x7265646E696D6572 && v22 == 0xEA00000000004449)
    {
LABEL_39:
      swift_bridgeObjectRelease_n();
      goto LABEL_40;
    }
    char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v36 & 1) == 0) {
      goto LABEL_5;
    }
  }
LABEL_40:
  if (v12) {
    uint64_t v25 = 6911093;
  }
  else {
    uint64_t v25 = 0x44497463656A626FLL;
  }
  if (v12) {
    unint64_t v26 = 0xE300000000000000;
  }
  else {
    unint64_t v26 = 0xE800000000000000;
  }
  if (v25 == 0x44497463656A626FLL && v26 == 0xE800000000000000) {
    goto LABEL_48;
  }
  char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v35) {
    goto LABEL_5;
  }
  if (v25 == 6911093 && v26 == 0xE300000000000000)
  {
LABEL_48:

    swift_bridgeObjectRelease_n();
    goto LABEL_6;
  }
  char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_5:

LABEL_6:
    uint64_t v2 = v44;
    goto LABEL_7;
  }
  sub_10074025C();
  uint64_t v37 = swift_allocError();
  swift_willThrow();
  swift_bridgeObjectRelease();
  uint64_t v47 = v37;
  swift_errorRetain();
  sub_100094134((uint64_t *)&unk_10090ABB0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    int64_t v38 = self;
    id v39 = [v46 remObjectID];
    [v38 validationErrorMoveAcrossAccount:v39];

    swift_willThrow();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    char v40 = self;
    uint64_t v47 = 0;
    unint64_t v48 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    uint64_t v47 = 0xD00000000000001ALL;
    unint64_t v48 = 0x80000001007DC030;
    swift_getErrorValue();
    v41._countAndFlagsBits = Error.rem_errorDescription.getter();
    String.append(_:)(v41);
    swift_bridgeObjectRelease();
    NSString v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v40 internalErrorWithDebugDescription:v42];

    swift_willThrow();
    swift_errorRelease();
  }
}

void sub_100727A10(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
    if (v37) {
      goto LABEL_3;
    }
LABEL_64:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v37 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v37) {
    goto LABEL_64;
  }
LABEL_3:
  unint64_t v1 = a1 & 0xC000000000000001;
  for (uint64_t i = 4; ; ++i)
  {
    id v3 = v1 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * i);
    id v39 = v3;
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    v5._countAndFlagsBits = 0x49746E756F636361;
    v5._object = (void *)0xE900000000000044;
    Swift::Int v6 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B4320, v5);
    if (!v6)
    {
      int v7 = 0;
LABEL_15:
      v8._rawValue = &off_1008B4370;
      int v9 = sub_100698378(v8, (unint64_t *)&qword_10090DC20);
      int v10 = v9;
      uint64_t v35 = i;
      if (v7) {
        uint64_t v11 = 0x7265646E696D6572;
      }
      else {
        uint64_t v11 = 0x49746E756F636361;
      }
      if (v7) {
        unint64_t v12 = 0xEA00000000004449;
      }
      else {
        unint64_t v12 = 0xE900000000000044;
      }
      int v13 = v9;
      uint64_t i = 0x7265646E696D6572;
      if (v11 == 0x49746E756F636361 && v12 == 0xE900000000000044)
      {
LABEL_26:
        swift_bridgeObjectRelease_n();
      }
      else
      {
        unint64_t v1 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v1 & 1) == 0)
        {
          if (v11 == 0x7265646E696D6572 && v12 == 0xEA00000000004449) {
            goto LABEL_26;
          }
          unint64_t v1 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v1 & 1) == 0)
          {
LABEL_45:

            unint64_t v1 = a1 & 0xC000000000000001;
            uint64_t i = v35;
LABEL_5:
            if (v4 == v37) {
              goto LABEL_64;
            }
            continue;
          }
        }
      }
      unint64_t v22 = 0xE800000000000000;
      uint64_t v23 = 0x44497463656A626FLL;
      switch(v13)
      {
        case 0:
          goto LABEL_36;
        case 1:
        case 3:
          goto LABEL_39;
        case 2:
          unint64_t v22 = 0xE400000000000000;
          uint64_t v23 = 1701667182;
LABEL_36:
          if (v23 == 0x44497463656A626FLL && v22 == 0xE800000000000000)
          {
LABEL_38:
            unint64_t v1 = a1 & 0xC000000000000001;
            uint64_t i = v35;

            swift_bridgeObjectRelease_n();
            goto LABEL_5;
          }
LABEL_39:
          unint64_t v1 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v1 & 1) == 0)
          {
            switch(v10)
            {
              case 0:
              case 2:
              case 3:
                unint64_t v1 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v1 & 1) == 0)
                {
                  unint64_t v24 = 0xE800000000000000;
                  uint64_t v25 = 0x44497463656A626FLL;
                  switch(v10)
                  {
                    case 0:
                      goto LABEL_48;
                    case 1:
                    case 3:
                      goto LABEL_50;
                    case 2:
                      unint64_t v24 = 0xE400000000000000;
                      uint64_t v25 = 1701667182;
LABEL_48:
                      if (v25 == 1701667182 && v24 == 0xE400000000000000) {
                        goto LABEL_38;
                      }
LABEL_50:
                      unint64_t v1 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if (v1) {
                        goto LABEL_45;
                      }
                      unint64_t v26 = 0xE800000000000000;
                      uint64_t v27 = 0x44497463656A626FLL;
                      switch(&unk_1008B4000)
                      {
                        case 0u:
                          break;
                        case 1u:
                          uint64_t v27 = 0x6E6F697461657263;
                          unint64_t v26 = 0xEC00000065746144;
                          break;
                        case 2u:
                          unint64_t v26 = 0xE400000000000000;
                          uint64_t v27 = 1701667182;
                          break;
                        case 3u:
                          unint64_t v26 = 0xE400000000000000;
                          uint64_t v27 = 1701869940;
                          break;
                        default:
                          goto LABEL_4;
                      }
                      if (v27 == 1701869940 && v26 == 0xE400000000000000) {
                        goto LABEL_38;
                      }
                      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if ((v28 & 1) == 0) {
                        goto LABEL_60;
                      }
                      goto LABEL_45;
                    default:
                      goto LABEL_4;
                  }
                }
                goto LABEL_45;
              case 1:
                goto LABEL_38;
              default:
                goto LABEL_4;
            }
          }
          break;
        default:
LABEL_4:

          goto LABEL_5;
      }
      goto LABEL_45;
    }
    if (v6 == 1)
    {
      int v7 = 1;
      goto LABEL_15;
    }
    if (qword_1009074C8 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10008E2DC(v14, (uint64_t)qword_100917690);
    os_log_type_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v15, v16))
    {

      goto LABEL_5;
    }
    sub_1000963CC(0, (unint64_t *)&qword_10090DC20);
    uint64_t v36 = i;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136446210;
    id v18 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;

    *(void *)(v17 + 4) = sub_1000C51B8(v19, v21, &v40);
    unint64_t v1 = a1 & 0xC000000000000001;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "CDIngestableRelationshipKey is expected to define 'accountID' for every kind of CDIngestors (except REMCDAccount) {CDType: %{public}s}", (uint8_t *)v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t i = v36;
    swift_slowDealloc();

    if (v4 == v37) {
      goto LABEL_64;
    }
  }
  __break(1u);
LABEL_60:
  sub_10074025C();
  uint64_t v29 = swift_allocError();
  swift_willThrow();
  swift_bridgeObjectRelease();
  uint64_t v40 = v29;
  swift_errorRetain();
  sub_100094134((uint64_t *)&unk_10090ABB0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    uint64_t v30 = self;
    id v31 = [v39 remObjectID];
    [v30 validationErrorMoveAcrossAccount:v31];

    swift_willThrow();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    uint64_t v32 = self;
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    uint64_t v40 = 0xD00000000000001ALL;
    unint64_t v41 = 0x80000001007DC030;
    swift_getErrorValue();
    v33._countAndFlagsBits = Error.rem_errorDescription.getter();
    String.append(_:)(v33);
    swift_bridgeObjectRelease();
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v32 internalErrorWithDebugDescription:v34];

    swift_willThrow();
    swift_errorRelease();
  }
}

void sub_100728568(void *a1, char a2, uint64_t a3, unint64_t *a4)
{
  v42[3] = sub_1000963CC(0, a4);
  v42[0] = (uint64_t)a1;
  sub_1000963CC(0, (unint64_t *)&unk_100910DD0);
  id v9 = a1;
  throwingCast<A>(_:as:failureMessage:)();
  if (v5)
  {
    _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v42);
  }
  else
  {
    _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v42);
    id v10 = v43;
    if (a2)
    {
      sub_100471B10(1, *(void **)(v4 + 24), a3);
      os_log_type_t v16 = v15;
      [v10 setAlarm:v15];
      [(id)swift_dynamicCastObjCProtocolUnconditional() generateNonce];
      id v18 = v17;
      if (qword_100906F40 != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      sub_10008E2DC(v19, (uint64_t)qword_10090C790);
      static REMCDRecurrenceRule.shouldAttemptLocalObjectMerge()();
      static REMCDRecurrenceRule.shouldAttemptLocalObjectMerge()();
      id v20 = v10;
      id v21 = v16;
      id v22 = v20;
      id v23 = v21;
      unint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v24, v25))
      {
        os_log_type_t v40 = v25;
        uint64_t v26 = swift_slowAlloc();
        v42[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 68158466;
        LODWORD(v43) = 2;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v26 + 8) = 2050;
        id v43 = v18;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v26 + 18) = 2082;
        id v27 = [v23 remObjectID];
        if (v27)
        {
          char v28 = v27;
          id v29 = [v27 description];

          uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v32 = v31;
        }
        else
        {
          unint64_t v32 = 0xE300000000000000;
          uint64_t v30 = 7104878;
        }
        os_log_t log = v24;
        id v43 = (id)sub_1000C51B8(v30, v32, v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 28) = 2082;
        id v33 = [v22 remObjectID];
        if (v33)
        {
          NSString v34 = v33;
          id v35 = [v33 description];

          uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v38 = v37;

          os_log_type_t v39 = v40;
        }
        else
        {
          unint64_t v38 = 0xE300000000000000;
          os_log_type_t v39 = v40;
          uint64_t v36 = 7104878;
        }
        id v43 = (id)sub_1000C51B8(v36, v38, v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, log, v39, "REMAlarmTriggerCDIngestor.establishRelationship: Setting alarm.dueDateResolutionTokenAsNonce {nonce: %{public}.*f, alarmID: %{public}s, triggerID: %{public}s}", (uint8_t *)v26, 0x26u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      [v23 setDueDateResolutionTokenAsNonce:*(double *)&v18];
    }
    else
    {
      uint64_t v11 = *(void **)(v4 + 16);
      id v12 = v43;
      sub_100471AE8(0, v11, a3);
      uint64_t v14 = v13;
      [v12 setAccount:v13];
    }
  }
}

void sub_100728A08(void *a1, char a2, uint64_t a3, unint64_t *a4)
{
  v43[3] = sub_1000963CC(0, a4);
  v43[0] = (uint64_t)a1;
  sub_1000963CC(0, (unint64_t *)&unk_100910DD0);
  id v9 = a1;
  throwingCast<A>(_:as:failureMessage:)();
  if (v5)
  {
    _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v43);
  }
  else
  {
    _s7remindd37RDStaledFileAttachmentCleanupActivityC40RDStaledFileAttachmentCleanupRateReducerVwxx_0((uint64_t)v43);
    id v10 = v44;
    if (a2)
    {
      sub_100471B10(1, *(void **)(v4 + 24), a3);
      os_log_type_t v16 = v15;
      [v10 setAlarm:v15];
      uint64_t v17 = (void *)swift_dynamicCastObjCProtocolConditional();
      if (v17)
      {
        [v17 generateNonce];
        uint64_t v19 = v18;
      }
      else
      {
        uint64_t v19 = (void *)kREMNonceUnset;
      }
      if (qword_100906F40 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_10008E2DC(v20, (uint64_t)qword_10090C790);
      static REMCDRecurrenceRule.shouldAttemptLocalObjectMerge()();
      static REMCDRecurrenceRule.shouldAttemptLocalObjectMerge()();
      id v21 = v10;
      id v22 = v16;
      id v23 = v21;
      id v24 = v22;
      os_log_type_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v25, v26))
      {
        os_log_type_t v41 = v26;
        uint64_t v27 = swift_slowAlloc();
        v43[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v27 = 68158466;
        LODWORD(v44) = 2;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v27 + 8) = 2050;
        id v44 = v19;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v27 + 18) = 2082;
        id v28 = [v24 remObjectID];
        if (v28)
        {
          id v29 = v28;
          id v30 = [v28 description];

          uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v33 = v32;
        }
        else
        {
          unint64_t v33 = 0xE300000000000000;
          uint64_t v31 = 7104878;
        }
        os_log_t log = v25;
        id v44 = (id)sub_1000C51B8(v31, v33, v43);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v27 + 28) = 2082;
        id v34 = [v23 remObjectID];
        if (v34)
        {
          id v35 = v34;
          id v36 = [v34 description];

          uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v39 = v38;

          os_log_type_t v40 = v41;
        }
        else
        {
          unint64_t v39 = 0xE300000000000000;
          os_log_type_t v40 = v41;
          uint64_t v37 = 7104878;
        }
        id v44 = (id)sub_1000C51B8(v37, v39, v43);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, log, v40, "REMAlarmTriggerCDIngestor.establishRelationship: Setting alarm.dueDateResolutionTokenAsNonce {nonce: %{public}.*f, alarmID: %{public}s, triggerID: %{public}s}", (uint8_t *)v27, 0x26u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      [v24 setDueDateResolutionTokenAsNonce:*(double *)&v19];
    }
    else
    {
      uint64_t v11 = *(void **)(v4 + 16);
      id v12 = v44;
      sub_100471AE8(0, v11, a3);
      uint64_t v14 = v13;
      [v12 setAccount:v13];
    }
  }
}

_UNKNOWN **sub_100728EB0(void *a1, uint64_t a2)
{
  id v3 = [a1 remObjectID];
  uint64_t v4 = v3;
  if (*(void *)(a2 + 16))
  {
    sub_100306FE8((uint64_t)v3);
    if (v5) {
      swift_bridgeObjectRetain();
    }
  }

  swift_bridgeObjectRelease();
  return &off_1008B53A8;
}

_UNKNOWN **sub_100728F38(void *a1, uint64_t a2)
{
  id v3 = [a1 remObjectID];
  uint64_t v4 = v3;
  if (*(void *)(a2 + 16))
  {
    sub_100306FE8((uint64_t)v3);
    if (v5) {
      swift_bridgeObjectRetain();
    }
  }

  swift_bridgeObjectRelease();
  return &off_1008B53D0;
}

_UNKNOWN **sub_100728FC0(void *a1, uint64_t a2)
{
  uint64_t result = sub_100728EB0(a1, a2);
  if (v2) {
    return result;
  }
  Swift::Int v6 = result;
  int v7 = sub_100728F38(a1, a2);
  v8._rawValue = &off_1008B5338;
  if (sub_10069AA00(v8, (void (*)(void))type metadata accessor for REMCDManualSortHint)) {
    goto LABEL_33;
  }
  v9._rawValue = &off_1008B4A30;
  char v10 = sub_100698D0C(v9, (void (*)(void))type metadata accessor for REMCDManualSortHint);
  if (v10 == 2) {
    goto LABEL_33;
  }
  char v11 = v10;
  sub_100094134(&qword_100921AF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100776E40;
  *(void *)(inited + 56) = &type metadata for REMManualOrderingCDIngestor.RelationshipKey;
  *(void *)(inited + 64) = &off_1008C6C50;
  swift_bridgeObjectRetain();
  sub_1000C0DE0((void *)(inited + 32), (uint64_t)&type metadata for REMManualOrderingCDIngestor.RelationshipKey);
  if (sub_100486BF8() == 0x49746E756F636361 && v13 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_32:
    swift_setDeallocating();
    sub_100094134(&qword_100921AF8);
    swift_arrayDestroy();
LABEL_33:
    swift_bridgeObjectRelease();
    return (_UNKNOWN **)swift_bridgeObjectRelease();
  }
  swift_setDeallocating();
  sub_100094134(&qword_100921AF8);
  swift_arrayDestroy();
  os_log_type_t v16 = v7[2];
  swift_bridgeObjectRelease();
  if (!v16) {
    return (_UNKNOWN **)swift_bridgeObjectRelease();
  }
  uint64_t v17 = v6[2];
  if (v17)
  {
    if (v11) {
      uint64_t v18 = 0x6465696669646F6DLL;
    }
    else {
      uint64_t v18 = 0x44497463656A626FLL;
    }
    if (v11) {
      unint64_t v19 = 0xEC00000065746144;
    }
    else {
      unint64_t v19 = 0xE800000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = *((unsigned char *)v6 + v20 + 32) ? 0x6465696669646F6DLL : 0x44497463656A626FLL;
      unint64_t v22 = *((unsigned char *)v6 + v20 + 32) ? 0xEC00000065746144 : 0xE800000000000000;
      if (v21 == v18 && v22 == v19) {
        break;
      }
      char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v24) {
        return (_UNKNOWN **)swift_bridgeObjectRelease_n();
      }
      if (v17 == (void *)++v20)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_37;
      }
    }
    swift_bridgeObjectRelease_n();
    return (_UNKNOWN **)swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_37:
    sub_10074025C();
    swift_allocError();
    return (_UNKNOWN **)swift_willThrow();
  }
}

uint64_t sub_10072931C()
{
  v0._rawValue = &off_1008B45B8;
  uint64_t result = sub_100699FDC(v0, &qword_100910E10);
  if (result == 2) {
    return result;
  }
  char v2 = result;
  uint64_t result = sub_100699A38();
  if (result == 3) {
    return result;
  }
  char v3 = result;
  if (v2) {
    uint64_t v4 = 0x44496D72616C61;
  }
  else {
    uint64_t v4 = 0x49746E756F636361;
  }
  if (v2) {
    unint64_t v5 = 0xE700000000000000;
  }
  else {
    unint64_t v5 = 0xE900000000000044;
  }
  if (v4 != 0x49746E756F636361 || v5 != 0xE900000000000044)
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_16;
    }
    if (v4 != 0x44496D72616C61 || v5 != 0xE700000000000000)
    {
      char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v7 & 1) == 0) {
        return result;
      }
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_16:
  unint64_t v8 = 0x44497463656A626FLL;
  if (!v3) {
    return swift_bridgeObjectRelease_n();
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    if (v3)
    {
      if (v3 == 1)
      {
        unint64_t v10 = 0x80000001007C70B0;
        unint64_t v11 = 0xD000000000000012;
      }
      else
      {
        unint64_t v11 = 0x74696D69786F7270;
        unint64_t v10 = 0xE900000000000079;
      }
    }
    else
    {
      unint64_t v10 = 0xE800000000000000;
      unint64_t v11 = 0x44497463656A626FLL;
    }
    if (v11 == 0xD000000000000012 && 0x80000001007C70B0 == v10) {
      return swift_bridgeObjectRelease_n();
    }
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      if (v3)
      {
        if (v3 == 1)
        {
          unint64_t v13 = 0x80000001007C70B0;
          unint64_t v8 = 0xD000000000000012;
        }
        else
        {
          unint64_t v8 = 0x74696D69786F7270;
          unint64_t v13 = 0xE900000000000079;
        }
      }
      else
      {
        unint64_t v13 = 0xE800000000000000;
      }
      if (v8 == 0x74696D69786F7270 && v13 == 0xE900000000000079) {
        return swift_bridgeObjectRelease_n();
      }
      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        sub_10074025C();
        swift_allocError();
        return swift_willThrow();
      }
    }
  }
  return result;
}

unint64_t sub_1007297C8()
{
  v0._rawValue = &off_1008B4E40;
  unint64_t result = sub_100699FDC(v0, (unint64_t *)&unk_100909AC0);
  if (result == 2) {
    return result;
  }
  char v2 = result;
  v3._rawValue = &off_1008B46A8;
  int v4 = sub_100698748(v3, (unint64_t *)&unk_100909AC0);
  int v5 = v4;
  if (v2) {
    uint64_t v6 = 0x7265646E696D6572;
  }
  else {
    uint64_t v6 = 0x49746E756F636361;
  }
  if (v2) {
    unint64_t v7 = 0xEA00000000004449;
  }
  else {
    unint64_t v7 = 0xE900000000000044;
  }
  int v8 = v4;
  if (v6 == 0x49746E756F636361 && v7 == 0xE900000000000044)
  {
LABEL_10:
    swift_bridgeObjectRelease_n();
    goto LABEL_12;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    if (v6 != 0x7265646E696D6572 || v7 != 0xEA00000000004449)
    {
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      if ((v11 & 1) == 0) {
        return result;
      }
      goto LABEL_12;
    }
    goto LABEL_10;
  }
LABEL_12:
  unint64_t v10 = 0x44497463656A626FLL;
  unint64_t result = 0x44497463656A626FLL;
  unint64_t v12 = 0xE800000000000000;
  unint64_t v13 = 0x44497463656A626FLL;
  switch(v8)
  {
    case 0:
      goto LABEL_21;
    case 1:
    case 3:
      goto LABEL_23;
    case 2:
      char v14 = "acknowledgedDate";
      goto LABEL_20;
    case 4:
      char v14 = "originalAlarmUID";
LABEL_20:
      unint64_t v12 = (unint64_t)(v14 - 32) | 0x8000000000000000;
      unint64_t v13 = 0xD000000000000010;
LABEL_21:
      if (v13 == 0x44497463656A626FLL && v12 == 0xE800000000000000)
      {
LABEL_51:
        unint64_t result = swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_23:
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          unint64_t result = 0x72656767697274;
          unint64_t v16 = 0xE800000000000000;
          unint64_t v17 = 0x44497463656A626FLL;
          switch(v5)
          {
            case 0:
              goto LABEL_30;
            case 1:
              unint64_t v16 = 0xE700000000000000;
              unint64_t v17 = 0x72656767697274;
              goto LABEL_30;
            case 2:
              uint64_t v18 = "acknowledgedDate";
              goto LABEL_28;
            case 3:
              unint64_t v17 = 0x4449556D72616C61;
              goto LABEL_30;
            case 4:
              uint64_t v18 = "originalAlarmUID";
LABEL_28:
              unint64_t v16 = (unint64_t)(v18 - 32) | 0x8000000000000000;
              unint64_t v17 = 0xD000000000000010;
LABEL_30:
              if (v17 == 0x72656767697274 && v16 == 0xE700000000000000) {
                goto LABEL_51;
              }
              char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              unint64_t result = swift_bridgeObjectRelease();
              if ((v19 & 1) == 0)
              {
                unint64_t result = 0xD000000000000010;
                unint64_t v20 = 0xE800000000000000;
                unint64_t v21 = 0x44497463656A626FLL;
                switch(v5)
                {
                  case 0:
                    goto LABEL_39;
                  case 1:
                    unint64_t v20 = 0xE700000000000000;
                    unint64_t v21 = 0x72656767697274;
                    goto LABEL_39;
                  case 2:
                    unint64_t v22 = "acknowledgedDate";
                    goto LABEL_37;
                  case 3:
                    unint64_t v21 = 0x4449556D72616C61;
                    goto LABEL_39;
                  case 4:
                    unint64_t v22 = "originalAlarmUID";
LABEL_37:
                    unint64_t v20 = (unint64_t)(v22 - 32) | 0x8000000000000000;
                    unint64_t v21 = 0xD000000000000010;
LABEL_39:
                    if (v21 == 0xD000000000000010 && 0x80000001007C6B20 == v20) {
                      goto LABEL_51;
                    }
                    char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    swift_bridgeObjectRelease();
                    unint64_t result = swift_bridgeObjectRelease();
                    if ((v23 & 1) == 0)
                    {
                      unint64_t result = 0x4449556D72616C61;
                      unint64_t v24 = 0xE800000000000000;
                      unint64_t v25 = 0x44497463656A626FLL;
                      switch(v5)
                      {
                        case 0:
                          goto LABEL_49;
                        case 1:
                          unint64_t v24 = 0xE700000000000000;
                          unint64_t v25 = 0x72656767697274;
                          goto LABEL_49;
                        case 2:
                          os_log_type_t v26 = "acknowledgedDate";
                          goto LABEL_47;
                        case 3:
                          unint64_t v25 = 0x4449556D72616C61;
                          goto LABEL_49;
                        case 4:
                          os_log_type_t v26 = "originalAlarmUID";
LABEL_47:
                          unint64_t v24 = (unint64_t)(v26 - 32) | 0x8000000000000000;
                          unint64_t v25 = 0xD000000000000010;
LABEL_49:
                          if (v25 == 0x4449556D72616C61 && v24 == 0xE800000000000000) {
                            goto LABEL_51;
                          }
                          char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
                          swift_bridgeObjectRelease();
                          unint64_t result = swift_bridgeObjectRelease();
                          if ((v27 & 1) == 0)
                          {
                            unint64_t result = 0xD000000000000010;
                            unint64_t v28 = 0xE800000000000000;
                            switch(v5)
                            {
                              case 0:
                                goto LABEL_60;
                              case 1:
                                unint64_t v28 = 0xE700000000000000;
                                unint64_t v10 = 0x72656767697274;
                                goto LABEL_60;
                              case 2:
                                id v29 = "acknowledgedDate";
                                goto LABEL_59;
                              case 3:
                                unint64_t v10 = 0x4449556D72616C61;
                                goto LABEL_60;
                              case 4:
                                id v29 = "originalAlarmUID";
LABEL_59:
                                unint64_t v28 = (unint64_t)(v29 - 32) | 0x8000000000000000;
                                unint64_t v10 = 0xD000000000000010;
LABEL_60:
                                if (v10 == 0xD000000000000010 && 0x80000001007C6F30 == v28) {
                                  goto LABEL_51;
                                }
                                char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
                                swift_bridgeObjectRelease();
                                unint64_t result = swift_bridgeObjectRelease();
                                if ((v30 & 1) == 0)
                                {
                                  sub_10074025C();
                                  swift_allocError();
                                  unint64_t result = swift_willThrow();
                                }
                                break;
                              default:
                                return result;
                            }
                          }
                          break;
                        default:
                          return result;
                      }
                    }
                    break;
                  default:
                    return result;
                }
              }
              break;
            default:
              return result;
          }
        }
      }
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10072A108()
{
  v0._rawValue = &off_1008B4EE0;
  int v1 = sub_10069A810(v0, &qword_100910230);
  int v2 = v1;
  int v3 = v1;
  int v4 = sub_100697FA0();
  unint64_t v5 = 0xE900000000000044;
  uint64_t v6 = 0x49746E756F636361;
  unint64_t result = 0x49746E756F636361;
  uint64_t v8 = 0x49746E756F636361;
  unint64_t v9 = 0xE900000000000044;
  switch(v2)
  {
    case 0:
      goto LABEL_6;
    case 1:
      uint64_t v8 = 0x7265646E696D6572;
      goto LABEL_4;
    case 2:
      uint64_t v8 = 0x65656E6769737361;
LABEL_4:
      unint64_t v9 = 0xEA00000000004449;
      goto LABEL_6;
    case 3:
      uint64_t v8 = 0x74616E696769726FLL;
      unint64_t v9 = 0xEC0000004449726FLL;
LABEL_6:
      if (v8 == 0x49746E756F636361 && v9 == 0xE900000000000044)
      {
LABEL_8:
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0)
        {
          unint64_t result = 0x7265646E696D6572;
          uint64_t v17 = 0x49746E756F636361;
          unint64_t v18 = 0xE900000000000044;
          switch(v3)
          {
            case 0:
              goto LABEL_38;
            case 1:
              uint64_t v17 = 0x7265646E696D6572;
              goto LABEL_37;
            case 2:
              uint64_t v17 = 0x65656E6769737361;
LABEL_37:
              unint64_t v18 = 0xEA00000000004449;
LABEL_38:
              if (v17 != 0x7265646E696D6572 || v18 != 0xEA00000000004449) {
                goto LABEL_40;
              }
              goto LABEL_8;
            case 3:
LABEL_40:
              char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v19 & 1) == 0)
              {
                unint64_t result = 0x65656E6769737361;
                uint64_t v20 = 0x49746E756F636361;
                unint64_t v21 = 0xE900000000000044;
                switch(v3)
                {
                  case 0:
                    goto LABEL_46;
                  case 1:
                    uint64_t v20 = 0x7265646E696D6572;
                    goto LABEL_44;
                  case 2:
                    uint64_t v20 = 0x65656E6769737361;
LABEL_44:
                    unint64_t v21 = 0xEA00000000004449;
                    goto LABEL_46;
                  case 3:
                    uint64_t v20 = 0x74616E696769726FLL;
                    unint64_t v21 = 0xEC0000004449726FLL;
LABEL_46:
                    if (v20 == 0x65656E6769737361 && v21 == 0xEA00000000004449) {
                      goto LABEL_8;
                    }
                    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v22 & 1) == 0)
                    {
                      unint64_t result = 0x74616E696769726FLL;
                      switch(&off_1008B5000)
                      {
                        case 0u:
                          goto LABEL_54;
                        case 1u:
                          uint64_t v6 = 0x7265646E696D6572;
                          goto LABEL_52;
                        case 2u:
                          uint64_t v6 = 0x65656E6769737361;
LABEL_52:
                          unint64_t v5 = 0xEA00000000004449;
                          goto LABEL_54;
                        case 3u:
                          uint64_t v6 = 0x74616E696769726FLL;
                          unint64_t v5 = 0xEC0000004449726FLL;
LABEL_54:
                          if (v6 == 0x74616E696769726FLL && v5 == 0xEC0000004449726FLL) {
                            goto LABEL_8;
                          }
                          char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
                          swift_bridgeObjectRelease();
                          unint64_t result = swift_bridgeObjectRelease();
                          if ((v23 & 1) == 0) {
                            return result;
                          }
                          goto LABEL_10;
                        default:
                          return result;
                      }
                    }
                    break;
                  default:
                    return result;
                }
              }
              break;
            default:
              return result;
          }
        }
      }
LABEL_10:
      uint64_t v11 = 0;
      break;
    default:
      return result;
  }
  while (2)
  {
    unint64_t v12 = (char *)&off_1008B5588 + v11++;
    unint64_t v13 = 0xE800000000000000;
    unint64_t result = 0x44497463656A626FLL;
    switch(v12[32])
    {
      case 1:
        unint64_t result = 0x64656E6769737361;
        unint64_t v13 = 0xEC00000065746144;
        break;
      case 2:
        unint64_t v13 = 0xE600000000000000;
        unint64_t result = 0x737574617473;
        break;
      case 3:
        unint64_t v13 = 0x80000001007C6100;
        unint64_t result = 0xD000000000000014;
        break;
      case 4:
        unint64_t result = 0xD000000000000016;
        unint64_t v13 = 0x80000001007C6120;
        break;
      case 5:
        unint64_t result = 0xD000000000000018;
        unint64_t v13 = 0x80000001007C6140;
        break;
      default:
        break;
    }
    unint64_t v14 = 0xE800000000000000;
    unint64_t v15 = 0x44497463656A626FLL;
    switch(v4)
    {
      case 0:
        goto LABEL_25;
      case 1:
        unint64_t v14 = 0xEC00000065746144;
        if (result != 0x64656E6769737361) {
          goto LABEL_27;
        }
        goto LABEL_26;
      case 2:
        unint64_t v14 = 0xE600000000000000;
        if (result != 0x737574617473) {
          goto LABEL_27;
        }
        goto LABEL_26;
      case 3:
        unint64_t v14 = 0x80000001007C6100;
        if (result != 0xD000000000000014) {
          goto LABEL_27;
        }
        goto LABEL_26;
      case 4:
        unint64_t v15 = 0xD000000000000016;
        unint64_t v14 = 0x80000001007C6120;
LABEL_25:
        if (result == v15) {
          goto LABEL_26;
        }
        goto LABEL_27;
      case 5:
        unint64_t v14 = 0x80000001007C6140;
        if (result != 0xD000000000000018) {
          goto LABEL_27;
        }
LABEL_26:
        if (v13 != v14)
        {
LABEL_27:
          char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          unint64_t result = swift_bridgeObjectRelease();
          if (v16) {
            return result;
          }
          if (v11 == 6)
          {
            sub_10074025C();
            swift_allocError();
            return swift_willThrow();
          }
          continue;
        }
        return swift_bridgeObjectRelease_n();
      default:
        return result;
    }
  }
}

unint64_t sub_10072A9B4()
{
  v0._rawValue = &off_1008B5110;
  unint64_t result = sub_100699FDC(v0, (unint64_t *)&unk_100915850);
  if (result != 2)
  {
    char v2 = result;
    v3._rawValue = &off_1008B4BA8;
    unsigned __int8 v4 = sub_100699678(v3, (unint64_t *)&unk_100915850);
    if (v2) {
      uint64_t v5 = 0x7265646E696D6572;
    }
    else {
      uint64_t v5 = 0x49746E756F636361;
    }
    if (v2) {
      unint64_t v6 = 0xEA00000000004449;
    }
    else {
      unint64_t v6 = 0xE900000000000044;
    }
    int v7 = v4;
    if (v5 != 0x49746E756F636361 || v6 != 0xE900000000000044)
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v8) {
        goto LABEL_15;
      }
      if (v5 != 0x7265646E696D6572 || v6 != 0xEA00000000004449)
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        if ((v9 & 1) == 0) {
          return result;
        }
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_15:
    uint64_t v10 = 7;
    uint64_t v11 = &byte_1008B5648;
    while (1)
    {
      int v12 = *v11++;
      unint64_t v13 = 0xE800000000000000;
      unint64_t result = 0x44497463656A626FLL;
      switch(v12)
      {
        case 1:
          unint64_t v13 = 0xE300000000000000;
          unint64_t result = 6911093;
          break;
        case 2:
          unint64_t result = 0x657A6953656C6966;
          break;
        case 3:
          unint64_t v13 = 0xE700000000000000;
          unint64_t result = 0x4C5255656C6966;
          break;
        case 4:
          unint64_t v13 = 0x80000001007C6FC0;
          unint64_t result = 0xD000000000000012;
          break;
        case 5:
          unint64_t v13 = 0xE500000000000000;
          unint64_t result = 0x6874646977;
          break;
        case 6:
          unint64_t v13 = 0xE600000000000000;
          unint64_t result = 0x746867696568;
          break;
        default:
          break;
      }
      unint64_t v14 = 0xE800000000000000;
      uint64_t v15 = 0x44497463656A626FLL;
      switch(v7)
      {
        case 0:
          goto LABEL_33;
        case 1:
          unint64_t v14 = 0xE300000000000000;
          if (result != 6911093) {
            goto LABEL_35;
          }
          goto LABEL_34;
        case 2:
          if (result != 0x657A6953656C6966) {
            goto LABEL_35;
          }
          goto LABEL_34;
        case 3:
          unint64_t v14 = 0xE700000000000000;
          if (result != 0x4C5255656C6966) {
            goto LABEL_35;
          }
          goto LABEL_34;
        case 4:
          unint64_t v14 = 0x80000001007C6FC0;
          if (result != 0xD000000000000012) {
            goto LABEL_35;
          }
          goto LABEL_34;
        case 5:
          unint64_t v14 = 0xE500000000000000;
          uint64_t v15 = 0x6874646977;
LABEL_33:
          if (result == v15) {
            goto LABEL_34;
          }
          goto LABEL_35;
        case 6:
          unint64_t v14 = 0xE600000000000000;
          if (result != 0x746867696568) {
            goto LABEL_35;
          }
LABEL_34:
          if (v13 == v14) {
            return swift_bridgeObjectRelease_n();
          }
LABEL_35:
          char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          unint64_t result = swift_bridgeObjectRelease();
          if (v16) {
            return result;
          }
          if (!--v10)
          {
            sub_10074025C();
            swift_allocError();
            return swift_willThrow();
          }
          break;
        default:
          return result;
      }
    }
  }
  return result;
}

unint64_t sub_10072AD94()
{
  v0._rawValue = &off_1008B5038;
  unint64_t result = sub_100699FDC(v0, (unint64_t *)&unk_10090AF90);
  if (result == 2) {
    return result;
  }
  char v2 = result;
  v3._rawValue = &off_1008B4998;
  int v4 = sub_100698748(v3, (unint64_t *)&unk_10090AF90);
  int v5 = v4;
  if (v2) {
    uint64_t v6 = 0x7265646E696D6572;
  }
  else {
    uint64_t v6 = 0x49746E756F636361;
  }
  if (v2) {
    unint64_t v7 = 0xEA00000000004449;
  }
  else {
    unint64_t v7 = 0xE900000000000044;
  }
  int v8 = v4;
  if (v6 == 0x49746E756F636361 && v7 == 0xE900000000000044)
  {
LABEL_10:
    swift_bridgeObjectRelease_n();
    goto LABEL_12;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    if (v6 != 0x7265646E696D6572 || v7 != 0xEA00000000004449)
    {
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      if ((v11 & 1) == 0) {
        return result;
      }
      goto LABEL_12;
    }
    goto LABEL_10;
  }
LABEL_12:
  unint64_t v10 = 0x44497463656A626FLL;
  unint64_t result = 0x44497463656A626FLL;
  uint64_t v12 = 0x44497463656A626FLL;
  switch(v8)
  {
    case 0:
      goto LABEL_19;
    case 1:
    case 3:
    case 4:
      goto LABEL_20;
    case 2:
      uint64_t v12 = 0x657A6953656C6966;
LABEL_19:
      if (v12 == 0x44497463656A626FLL)
      {
LABEL_45:
        unint64_t result = swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_20:
        char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          unint64_t result = 6911093;
          unint64_t v14 = 0xE800000000000000;
          unint64_t v15 = 0x44497463656A626FLL;
          switch(v5)
          {
            case 0:
              goto LABEL_26;
            case 1:
              unint64_t v14 = 0xE300000000000000;
              unint64_t v15 = 6911093;
              goto LABEL_26;
            case 2:
              unint64_t v15 = 0x657A6953656C6966;
              goto LABEL_26;
            case 3:
              unint64_t v14 = 0xE700000000000000;
              unint64_t v15 = 0x4C5255656C6966;
              goto LABEL_26;
            case 4:
              unint64_t v14 = 0x80000001007C6FC0;
              unint64_t v15 = 0xD000000000000012;
LABEL_26:
              if (v15 == 6911093 && v14 == 0xE300000000000000) {
                goto LABEL_45;
              }
              char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              unint64_t result = swift_bridgeObjectRelease();
              if ((v16 & 1) == 0)
              {
                unint64_t result = 0x657A6953656C6966;
                unint64_t v17 = 0xE800000000000000;
                unint64_t v18 = 0x44497463656A626FLL;
                switch(v5)
                {
                  case 0:
                    goto LABEL_34;
                  case 1:
                    unint64_t v17 = 0xE300000000000000;
                    unint64_t v18 = 6911093;
                    goto LABEL_34;
                  case 2:
                    unint64_t v18 = 0x657A6953656C6966;
                    goto LABEL_34;
                  case 3:
                    unint64_t v17 = 0xE700000000000000;
                    unint64_t v18 = 0x4C5255656C6966;
                    goto LABEL_34;
                  case 4:
                    unint64_t v17 = 0x80000001007C6FC0;
                    unint64_t v18 = 0xD000000000000012;
LABEL_34:
                    if (v18 == 0x657A6953656C6966 && v17 == 0xE800000000000000) {
                      goto LABEL_45;
                    }
                    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    swift_bridgeObjectRelease();
                    unint64_t result = swift_bridgeObjectRelease();
                    if ((v19 & 1) == 0)
                    {
                      unint64_t result = 0x4C5255656C6966;
                      unint64_t v20 = 0xE800000000000000;
                      unint64_t v21 = 0x44497463656A626FLL;
                      switch(v5)
                      {
                        case 0:
                          goto LABEL_43;
                        case 1:
                          unint64_t v20 = 0xE300000000000000;
                          unint64_t v21 = 6911093;
                          goto LABEL_43;
                        case 2:
                          unint64_t v21 = 0x657A6953656C6966;
                          goto LABEL_43;
                        case 3:
                          unint64_t v20 = 0xE700000000000000;
                          unint64_t v21 = 0x4C5255656C6966;
                          goto LABEL_43;
                        case 4:
                          unint64_t v20 = 0x80000001007C6FC0;
                          unint64_t v21 = 0xD000000000000012;
LABEL_43:
                          if (v21 == 0x4C5255656C6966 && v20 == 0xE700000000000000) {
                            goto LABEL_45;
                          }
                          char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
                          swift_bridgeObjectRelease();
                          unint64_t result = swift_bridgeObjectRelease();
                          if ((v22 & 1) == 0)
                          {
                            unint64_t result = 0xD000000000000012;
                            unint64_t v23 = 0xE800000000000000;
                            switch(v5)
                            {
                              case 0:
                                goto LABEL_53;
                              case 1:
                                unint64_t v23 = 0xE300000000000000;
                                unint64_t v10 = 6911093;
                                goto LABEL_53;
                              case 2:
                                unint64_t v10 = 0x657A6953656C6966;
                                goto LABEL_53;
                              case 3:
                                unint64_t v23 = 0xE700000000000000;
                                unint64_t v10 = 0x4C5255656C6966;
                                goto LABEL_53;
                              case 4:
                                unint64_t v23 = 0x80000001007C6FC0;
                                unint64_t v10 = 0xD000000000000012;
LABEL_53:
                                if (v10 == 0xD000000000000012 && 0x80000001007C6FC0 == v23) {
                                  goto LABEL_45;
                                }
                                char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
                                swift_bridgeObjectRelease();
                                unint64_t result = swift_bridgeObjectRelease();
                                if ((v24 & 1) == 0)
                                {
                                  sub_10074025C();
                                  swift_allocError();
                                  unint64_t result = swift_willThrow();
                                }
                                break;
                              default:
                                return result;
                            }
                          }
                          break;
                        default:
                          return result;
                      }
                    }
                    break;
                  default:
                    return result;
                }
              }
              break;
            default:
              return result;
          }
        }
      }
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10072B704()
{
  v0._rawValue = &off_1008B50C0;
  unint64_t result = sub_100699FDC(v0, (unint64_t *)&qword_100911820);
  if (result != 2)
  {
    char v2 = result;
    unsigned __int8 v3 = sub_10069892C((uint64_t (*)(uint64_t, unint64_t))sub_1003647EC, (unint64_t *)&qword_100911820);
    if (v2) {
      uint64_t v4 = 0x7265646E696D6572;
    }
    else {
      uint64_t v4 = 0x49746E756F636361;
    }
    if (v2) {
      unint64_t v5 = 0xEA00000000004449;
    }
    else {
      unint64_t v5 = 0xE900000000000044;
    }
    int v6 = v3;
    if (v4 != 0x49746E756F636361 || v5 != 0xE900000000000044)
    {
      char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_15;
      }
      if (v4 != 0x7265646E696D6572 || v5 != 0xEA00000000004449)
      {
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        if ((v8 & 1) == 0) {
          return result;
        }
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_15:
    uint64_t v9 = 11;
    unint64_t v10 = &byte_1008B56E8;
    while (1)
    {
      int v11 = *v10++;
      unint64_t v12 = 0xE800000000000000;
      unint64_t result = 0x44497463656A626FLL;
      switch(v11)
      {
        case 1:
          unint64_t result = 0x6E65727275636572;
          unint64_t v12 = 0xED0000646E456563;
          break;
        case 2:
          unint64_t v12 = 0xE900000000000079;
          unint64_t result = 0x636E657571657266;
          break;
        case 3:
          unint64_t result = 0x6C61767265746E69;
          break;
        case 4:
          unint64_t v12 = 0x80000001007C7010;
          unint64_t result = 0xD000000000000011;
          break;
        case 5:
          unint64_t result = 0x6854664F73796164;
          unint64_t v12 = 0xED00006B65655765;
          break;
        case 6:
          unint64_t result = 0x6854664F73796164;
          unint64_t v12 = 0xEE0068746E6F4D65;
          break;
        case 7:
          unint64_t result = 0x6854664F73796164;
          unint64_t v12 = 0xED00007261655965;
          break;
        case 8:
          unint64_t result = 0x54664F736B656577;
          unint64_t v12 = 0xEE00726165596568;
          break;
        case 9:
          unint64_t result = 0x664F7368746E6F6DLL;
          unint64_t v12 = 0xEF72616559656854;
          break;
        case 10:
          unint64_t result = 0x7469736F50746573;
          unint64_t v12 = 0xEC000000736E6F69;
          break;
        default:
          break;
      }
      unint64_t v13 = 0xE800000000000000;
      uint64_t v14 = 0x44497463656A626FLL;
      switch(v6)
      {
        case 0:
          goto LABEL_44;
        case 1:
          uint64_t v15 = 0x6E65727275636572;
          uint64_t v16 = 0x646E456563;
          goto LABEL_38;
        case 2:
          unint64_t v13 = 0xE900000000000079;
          if (result != 0x636E657571657266) {
            goto LABEL_46;
          }
          goto LABEL_45;
        case 3:
          if (result != 0x6C61767265746E69) {
            goto LABEL_46;
          }
          goto LABEL_45;
        case 4:
          unint64_t v13 = 0x80000001007C7010;
          if (result != 0xD000000000000011) {
            goto LABEL_46;
          }
          goto LABEL_45;
        case 5:
          uint64_t v15 = 0x6854664F73796164;
          uint64_t v16 = 0x6B65655765;
          goto LABEL_38;
        case 6:
          uint64_t v17 = 0x6854664F73796164;
          uint64_t v18 = 0x68746E6F4D65;
          goto LABEL_41;
        case 7:
          uint64_t v15 = 0x6854664F73796164;
          uint64_t v16 = 0x7261655965;
LABEL_38:
          unint64_t v13 = v16 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
          if (result != v15) {
            goto LABEL_46;
          }
          goto LABEL_45;
        case 8:
          uint64_t v17 = 0x54664F736B656577;
          uint64_t v18 = 0x726165596568;
LABEL_41:
          unint64_t v13 = v18 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
          if (result != v17) {
            goto LABEL_46;
          }
          goto LABEL_45;
        case 9:
          uint64_t v14 = 0x664F7368746E6F6DLL;
          unint64_t v13 = 0xEF72616559656854;
LABEL_44:
          if (result == v14) {
            goto LABEL_45;
          }
          goto LABEL_46;
        case 10:
          unint64_t v13 = 0xEC000000736E6F69;
          if (result != 0x7469736F50746573) {
            goto LABEL_46;
          }
LABEL_45:
          if (v12 == v13) {
            return swift_bridgeObjectRelease_n();
          }
LABEL_46:
          char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          unint64_t result = swift_bridgeObjectRelease();
          if (v19) {
            return result;
          }
          if (!--v9)
          {
            sub_10074025C();
            swift_allocError();
            return swift_willThrow();
          }
          break;
        default:
          return result;
      }
    }
  }
  return result;
}

_UNKNOWN **sub_10072BC9C(void *a1, uint64_t a2)
{
  id v3 = [a1 remObjectID];
  uint64_t v4 = v3;
  if (*(void *)(a2 + 16))
  {
    sub_100306FE8((uint64_t)v3);
    if (v5) {
      swift_bridgeObjectRetain();
    }
  }

  swift_bridgeObjectRelease();
  return &off_1008B5720;
}

_UNKNOWN **sub_10072BD24(void *a1, uint64_t a2)
{
  id v3 = [a1 remObjectID];
  uint64_t v4 = v3;
  if (*(void *)(a2 + 16))
  {
    sub_100306FE8((uint64_t)v3);
    if (v5) {
      swift_bridgeObjectRetain();
    }
  }

  swift_bridgeObjectRelease();
  return &off_1008B5750;
}

_UNKNOWN **sub_10072BDAC(void *a1, uint64_t a2)
{
  unint64_t result = sub_10072BC9C(a1, a2);
  if (!v2)
  {
    int v6 = result;
    char v7 = sub_10072BD24(a1, a2);
    v8._rawValue = &off_1008B4E90;
    char v9 = sub_100699FDC(v8, (unint64_t *)&qword_100909AF8);
    if (v9 == 2
      || (char v10 = v9,
          char v11 = sub_10069892C((uint64_t (*)(uint64_t, unint64_t))sub_100441534, (unint64_t *)&qword_100909AF8), v11 == 11)|| (v12 = v7[2]) == 0)
    {
      swift_bridgeObjectRelease();
      return (_UNKNOWN **)swift_bridgeObjectRelease();
    }
    else
    {
      char v30 = v11;
      if (v10) {
        uint64_t v13 = 0x44497473696CLL;
      }
      else {
        uint64_t v13 = 0x49746E756F636361;
      }
      if (v10) {
        unint64_t v14 = 0xE600000000000000;
      }
      else {
        unint64_t v14 = 0xE900000000000044;
      }
      swift_bridgeObjectRetain();
      uint64_t v15 = 0;
      while (1)
      {
        uint64_t v16 = *((unsigned char *)v7 + v15 + 32) ? 0x44497473696CLL : 0x49746E756F636361;
        unint64_t v17 = *((unsigned char *)v7 + v15 + 32) ? 0xE600000000000000 : 0xE900000000000044;
        if (v16 == v13 && v17 == v14) {
          break;
        }
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v19) {
          goto LABEL_29;
        }
        if (v12 == (void *)++v15)
        {
          swift_bridgeObjectRelease();
          return (_UNKNOWN **)swift_bridgeObjectRelease_n();
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_29:
      swift_bridgeObjectRelease_n();
      unint64_t v20 = (char *)v6[2];
      if (v20)
      {
        swift_bridgeObjectRetain();
        unint64_t v21 = 0;
        while (1)
        {
          char v22 = &(v21++)[(void)v6];
          unint64_t v23 = 0xE800000000000000;
          uint64_t v24 = 0x44497463656A626FLL;
          switch(v22[32])
          {
            case 1:
              uint64_t v24 = 0x4E79616C70736964;
              uint64_t v25 = 6647137;
              goto LABEL_43;
            case 2:
              unint64_t v23 = 0xE900000000000065;
              uint64_t v24 = 0x6D614E7473726966;
              break;
            case 3:
              uint64_t v24 = 0x614E656C6464696DLL;
              unint64_t v23 = 0xEA0000000000656DLL;
              break;
            case 4:
              uint64_t v24 = 0x656D614E7473616CLL;
              break;
            case 5:
              uint64_t v24 = 0x66657250656D616ELL;
              goto LABEL_38;
            case 6:
              uint64_t v24 = 0x66667553656D616ELL;
LABEL_38:
              unint64_t v23 = 0xEA00000000007869;
              break;
            case 7:
              uint64_t v24 = 0x656D616E6B63696ELL;
              break;
            case 8:
              unint64_t v23 = 0xE700000000000000;
              uint64_t v24 = 0x73736572646461;
              break;
            case 9:
              unint64_t v23 = 0xE600000000000000;
              uint64_t v24 = 0x737574617473;
              break;
            case 10:
              uint64_t v24 = 0x654C737365636361;
              uint64_t v25 = 7103862;
LABEL_43:
              unint64_t v23 = v25 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
              break;
            default:
              break;
          }
          unint64_t v26 = 0xE800000000000000;
          uint64_t v27 = 0x44497463656A626FLL;
          switch(v30)
          {
            case 1:
              uint64_t v27 = 0x4E79616C70736964;
              uint64_t v28 = 6647137;
              goto LABEL_56;
            case 2:
              unint64_t v26 = 0xE900000000000065;
              uint64_t v27 = 0x6D614E7473726966;
              break;
            case 3:
              uint64_t v27 = 0x614E656C6464696DLL;
              unint64_t v26 = 0xEA0000000000656DLL;
              break;
            case 4:
              uint64_t v27 = 0x656D614E7473616CLL;
              break;
            case 5:
              uint64_t v27 = 0x66657250656D616ELL;
              goto LABEL_51;
            case 6:
              uint64_t v27 = 0x66667553656D616ELL;
LABEL_51:
              unint64_t v26 = 0xEA00000000007869;
              break;
            case 7:
              uint64_t v27 = 0x656D616E6B63696ELL;
              break;
            case 8:
              unint64_t v26 = 0xE700000000000000;
              uint64_t v27 = 0x73736572646461;
              break;
            case 9:
              unint64_t v26 = 0xE600000000000000;
              uint64_t v27 = 0x737574617473;
              break;
            case 10:
              uint64_t v27 = 0x654C737365636361;
              uint64_t v28 = 7103862;
LABEL_56:
              unint64_t v26 = v28 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
              break;
            default:
              break;
          }
          if (v24 == v27 && v23 == v26) {
            break;
          }
          char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v29) {
            return (_UNKNOWN **)swift_bridgeObjectRelease_n();
          }
          if (v20 == v21)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_63;
          }
        }
        swift_bridgeObjectRelease_n();
        return (_UNKNOWN **)swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRelease();
LABEL_63:
      sub_10074025C();
      swift_allocError();
      return (_UNKNOWN **)swift_willThrow();
    }
  }
  return result;
}

_UNKNOWN **sub_10072C31C(void *a1, uint64_t a2)
{
  id v3 = [a1 remObjectID];
  uint64_t v4 = v3;
  if (*(void *)(a2 + 16))
  {
    sub_100306FE8((uint64_t)v3);
    if (v5) {
      swift_bridgeObjectRetain();
    }
  }

  swift_bridgeObjectRelease();
  return &off_1008B5778;
}

_UNKNOWN **sub_10072C3A4(void *a1, uint64_t a2)
{
  id v3 = [a1 remObjectID];
  uint64_t v4 = v3;
  if (*(void *)(a2 + 16))
  {
    sub_100306FE8((uint64_t)v3);
    if (v5) {
      swift_bridgeObjectRetain();
    }
  }

  swift_bridgeObjectRelease();
  return &off_1008B57A0;
}

_UNKNOWN **sub_10072C42C(void *a1, uint64_t a2)
{
  unint64_t result = sub_10072C31C(a1, a2);
  if (!v2)
  {
    int v6 = result;
    char v7 = sub_10072C3A4(a1, a2);
    v8._rawValue = &off_1008B5278;
    char v9 = sub_100699FDC(v8, (unint64_t *)&qword_100921E40);
    if (v9 == 2
      || (char v10 = v9,
          v11._rawValue = &off_1008B4CC0,
          char v12 = sub_100699678(v11, (unint64_t *)&qword_100921E40),
          v12 == 7)
      || (uint64_t v13 = v7[2]) == 0)
    {
      swift_bridgeObjectRelease();
      return (_UNKNOWN **)swift_bridgeObjectRelease();
    }
    else
    {
      char v29 = v12;
      if (v10) {
        uint64_t v14 = 0x44497473696CLL;
      }
      else {
        uint64_t v14 = 0x49746E756F636361;
      }
      if (v10) {
        unint64_t v15 = 0xE600000000000000;
      }
      else {
        unint64_t v15 = 0xE900000000000044;
      }
      swift_bridgeObjectRetain();
      uint64_t v16 = 0;
      while (1)
      {
        uint64_t v17 = *((unsigned char *)v7 + v16 + 32) ? 0x44497473696CLL : 0x49746E756F636361;
        unint64_t v18 = *((unsigned char *)v7 + v16 + 32) ? 0xE600000000000000 : 0xE900000000000044;
        if (v17 == v14 && v18 == v15) {
          break;
        }
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_29;
        }
        if (v13 == (void *)++v16)
        {
          swift_bridgeObjectRelease();
          return (_UNKNOWN **)swift_bridgeObjectRelease_n();
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_29:
      swift_bridgeObjectRelease_n();
      unint64_t v21 = (char *)v6[2];
      if (v21)
      {
        swift_bridgeObjectRetain();
        char v22 = 0;
        while (1)
        {
          unint64_t v23 = &(v22++)[(void)v6];
          unint64_t v24 = 0xE800000000000000;
          unint64_t v25 = 0x44497463656A626FLL;
          switch(v23[32])
          {
            case 1:
              unint64_t v25 = 0x6972745364697575;
              unint64_t v24 = 0xEA0000000000676ELL;
              break;
            case 2:
              unint64_t v24 = 0xE700000000000000;
              unint64_t v25 = 0x4C525574736F68;
              break;
            case 3:
              unint64_t v24 = 0x80000001007C62C0;
              unint64_t v25 = 0xD000000000000012;
              break;
            case 4:
              unint64_t v25 = 0xD000000000000017;
              unint64_t v24 = 0x80000001007C62E0;
              break;
            case 5:
              unint64_t v25 = 0x6F54636E79536164;
              unint64_t v24 = 0xEB000000006E656BLL;
              break;
            case 6:
              unint64_t v24 = 0xE900000000000079;
              unint64_t v25 = 0x654B687375506164;
              break;
            default:
              break;
          }
          unint64_t v26 = 0xE800000000000000;
          unint64_t v27 = 0x44497463656A626FLL;
          switch(v29)
          {
            case 1:
              unint64_t v27 = 0x6972745364697575;
              unint64_t v26 = 0xEA0000000000676ELL;
              break;
            case 2:
              unint64_t v26 = 0xE700000000000000;
              unint64_t v27 = 0x4C525574736F68;
              break;
            case 3:
              unint64_t v26 = 0x80000001007C62C0;
              unint64_t v27 = 0xD000000000000012;
              break;
            case 4:
              unint64_t v27 = 0xD000000000000017;
              unint64_t v26 = 0x80000001007C62E0;
              break;
            case 5:
              unint64_t v27 = 0x6F54636E79536164;
              unint64_t v26 = 0xEB000000006E656BLL;
              break;
            case 6:
              unint64_t v26 = 0xE900000000000079;
              unint64_t v27 = 0x654B687375506164;
              break;
            default:
              break;
          }
          if (v25 == v27 && v24 == v26) {
            break;
          }
          char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v28) {
            return (_UNKNOWN **)swift_bridgeObjectRelease_n();
          }
          if (v21 == v22)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_51;
          }
        }
        swift_bridgeObjectRelease_n();
        return (_UNKNOWN **)swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRelease();
LABEL_51:
      sub_10074025C();
      swift_allocError();
      return (_UNKNOWN **)swift_willThrow();
    }
  }
  return result;
}

void *sub_10072C8DC(void *a1, uint64_t a2)
{
  id v3 = [a1 remObjectID];
  uint64_t v4 = v3;
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_100306FE8((uint64_t)v3), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
  }

  Swift::OpaquePointer v8 = sub_100697C24(v7, (uint64_t)&off_1008B27F0, (uint64_t)sub_10030A0D0, (uint64_t (*)(void))sub_100693398, &qword_100922028);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_10072C9B4(void *a1, uint64_t a2)
{
  id v3 = [a1 remObjectID];
  uint64_t v4 = v3;
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_100306FE8((uint64_t)v3), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
  }

  Swift::OpaquePointer v8 = sub_100697C24(v7, (uint64_t)&off_1008B27B8, (uint64_t)sub_10030A0C4, (uint64_t (*)(void))sub_100693184, &qword_100922030);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_10072CA8C(void *a1, uint64_t a2)
{
  unint64_t result = sub_10072C8DC(a1, a2);
  if (v2) {
    return result;
  }
  char v6 = result;
  uint64_t v7 = sub_10072C9B4(a1, a2);
  v8._rawValue = &off_1008B5370;
  if (sub_10069AA00(v8, (void (*)(void))type metadata accessor for REMCDDueDateDeltaAlert)
    || (char v9 = sub_10069949C(), v9 == 6))
  {
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  char v10 = v9;
  uint64_t v11 = v7[2];
  swift_bridgeObjectRelease();
  if (!v11) {
    return (void *)swift_bridgeObjectRelease();
  }
  uint64_t v12 = v6[2];
  if (v12)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    while (1)
    {
      uint64_t v14 = (char *)v6 + v13++;
      unint64_t v15 = 0xE800000000000000;
      unint64_t v16 = 0x44497463656A626FLL;
      switch(v14[32])
      {
        case 1:
          unint64_t v16 = 0xD000000000000012;
          unint64_t v15 = 0x80000001007C6B00;
          break;
        case 2:
          unint64_t v16 = 0x4465746144657564;
          unint64_t v15 = 0xEC00000061746C65;
          break;
        case 3:
          unint64_t v16 = 0x6E6F697461657263;
          unint64_t v15 = 0xEC00000065746144;
          break;
        case 4:
          unint64_t v15 = 0x80000001007C6B20;
          unint64_t v16 = 0xD000000000000010;
          break;
        case 5:
          unint64_t v16 = 0xD00000000000001ALL;
          unint64_t v15 = 0x80000001007C6B40;
          break;
        default:
          break;
      }
      unint64_t v17 = 0xE800000000000000;
      unint64_t v18 = 0x44497463656A626FLL;
      switch(v10)
      {
        case 1:
          unint64_t v17 = 0x80000001007C6B00;
          if (v16 == 0xD000000000000012) {
            goto LABEL_25;
          }
          goto LABEL_26;
        case 2:
          uint64_t v19 = 0x4465746144657564;
          uint64_t v20 = 1635019877;
          goto LABEL_21;
        case 3:
          uint64_t v19 = 0x6E6F697461657263;
          uint64_t v20 = 1702125892;
LABEL_21:
          unint64_t v17 = v20 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          if (v16 != v19) {
            goto LABEL_26;
          }
          goto LABEL_25;
        case 4:
          unint64_t v17 = 0x80000001007C6B20;
          unint64_t v18 = 0xD000000000000010;
          goto LABEL_24;
        case 5:
          unint64_t v17 = 0x80000001007C6B40;
          if (v16 != 0xD00000000000001ALL) {
            goto LABEL_26;
          }
          goto LABEL_25;
        default:
LABEL_24:
          if (v16 != v18) {
            goto LABEL_26;
          }
LABEL_25:
          if (v15 == v17)
          {
            swift_bridgeObjectRelease_n();
            return (void *)swift_bridgeObjectRelease_n();
          }
LABEL_26:
          char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v21) {
            return (void *)swift_bridgeObjectRelease_n();
          }
          if (v12 == v13)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_34;
          }
          break;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_34:
  sub_10074025C();
  swift_allocError();
  return (void *)swift_willThrow();
}

void *sub_10072CE04(void *a1, uint64_t a2)
{
  id v3 = [a1 remObjectID];
  uint64_t v4 = v3;
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_100306FE8((uint64_t)v3), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
  }

  Swift::OpaquePointer v8 = sub_100697C24(v7, (uint64_t)&off_1008B2C58, (uint64_t)sub_10030A118, (uint64_t (*)(void))sub_100693C14, (uint64_t *)&unk_100921970);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_10072CEDC(void *a1, uint64_t a2)
{
  id v3 = [a1 remObjectID];
  uint64_t v4 = v3;
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_100306FE8((uint64_t)v3), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
  }

  Swift::OpaquePointer v8 = sub_100697C24(v7, (uint64_t)&off_1008B2C08, (uint64_t)sub_10030A10C, (uint64_t (*)(void))sub_1006939E0, &qword_1009219A0);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_10072CFB4(void *a1, uint64_t a2)
{
  unint64_t result = sub_10072CE04(a1, a2);
  if (v2) {
    return result;
  }
  char v6 = result;
  uint64_t v7 = sub_10072CEDC(a1, a2);
  v8._rawValue = &off_1008B2C08;
  char v9 = sub_10069ABEC(v8, (void (*)(void))type metadata accessor for REMCDTemplateSection);
  if (v9 == 2
    || (char v10 = v9,
        v11._rawValue = &off_1008B2C58,
        char v12 = sub_100699E00(v11, (void (*)(void))type metadata accessor for REMCDTemplateSection),
        v12 == 4)
    || (uint64_t v13 = v7[2]) == 0)
  {
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  char v29 = v12;
  if (v10) {
    uint64_t v14 = 0x4449746E65726170;
  }
  else {
    uint64_t v14 = 0x49746E756F636361;
  }
  if (v10) {
    unint64_t v15 = 0xE800000000000000;
  }
  else {
    unint64_t v15 = 0xE900000000000044;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  while (1)
  {
    uint64_t v17 = *((unsigned char *)v7 + v16 + 32) ? 0x4449746E65726170 : 0x49746E756F636361;
    unint64_t v18 = *((unsigned char *)v7 + v16 + 32) ? 0xE800000000000000 : 0xE900000000000044;
    if (v17 == v14 && v18 == v15) {
      break;
    }
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_29;
    }
    if (v13 == ++v16)
    {
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease_n();
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_29:
  swift_bridgeObjectRelease_n();
  uint64_t v21 = v6[2];
  if (!v21)
  {
    swift_bridgeObjectRelease();
LABEL_49:
    sub_10074025C();
    swift_allocError();
    return (void *)swift_willThrow();
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = 0;
  while (2)
  {
    unint64_t v23 = (char *)v6 + v22++;
    unint64_t v24 = 0xE800000000000000;
    unint64_t v25 = 0x44497463656A626FLL;
    switch(v23[32])
    {
      case 1:
        unint64_t v24 = 0x80000001007C63B0;
        unint64_t v25 = 0xD000000000000017;
        break;
      case 2:
        unint64_t v25 = 0x6E6F697461657263;
        unint64_t v24 = 0xEC00000065746144;
        break;
      case 3:
        unint64_t v25 = 0x4E79616C70736964;
        unint64_t v24 = 0xEB00000000656D61;
        break;
      default:
        break;
    }
    unint64_t v26 = 0xE800000000000000;
    uint64_t v27 = 0x44497463656A626FLL;
    switch(v29)
    {
      case 1:
        unint64_t v26 = 0x80000001007C63B0;
        if (v25 == 0xD000000000000017) {
          goto LABEL_40;
        }
        goto LABEL_41;
      case 2:
        uint64_t v27 = 0x6E6F697461657263;
        unint64_t v26 = 0xEC00000065746144;
        goto LABEL_39;
      case 3:
        unint64_t v26 = 0xEB00000000656D61;
        if (v25 != 0x4E79616C70736964) {
          goto LABEL_41;
        }
        goto LABEL_40;
      default:
LABEL_39:
        if (v25 != v27) {
          goto LABEL_41;
        }
LABEL_40:
        if (v24 != v26)
        {
LABEL_41:
          char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v28) {
            return (void *)swift_bridgeObjectRelease_n();
          }
          if (v21 == v22)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_49;
          }
          continue;
        }
        swift_bridgeObjectRelease_n();
        return (void *)swift_bridgeObjectRelease_n();
    }
  }
}

void *sub_10072D3BC(void *a1, uint64_t a2)
{
  id v3 = [a1 remObjectID];
  uint64_t v4 = v3;
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_100306FE8((uint64_t)v3), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
  }

  Swift::OpaquePointer v8 = sub_100697C24(v7, (uint64_t)&off_1008B2D28, (uint64_t)sub_10030A130, (uint64_t (*)(void))sub_100693C14, &qword_100921A08);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_10072D494(void *a1, uint64_t a2)
{
  id v3 = [a1 remObjectID];
  uint64_t v4 = v3;
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_100306FE8((uint64_t)v3), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
  }

  Swift::OpaquePointer v8 = sub_100697C24(v7, (uint64_t)&off_1008B2CD8, (uint64_t)sub_10030A124, (uint64_t (*)(void))sub_1006939E0, &qword_100921A10);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_10072D56C(void *a1, uint64_t a2)
{
  unint64_t result = sub_10072D3BC(a1, a2);
  if (v2) {
    return result;
  }
  char v6 = result;
  uint64_t v7 = sub_10072D494(a1, a2);
  v8._rawValue = &off_1008B2CD8;
  char v9 = sub_10069ABEC(v8, (void (*)(void))type metadata accessor for REMCDSmartListSection);
  if (v9 == 2
    || (char v10 = v9,
        v11._rawValue = &off_1008B2D28,
        char v12 = sub_100699E00(v11, (void (*)(void))type metadata accessor for REMCDSmartListSection),
        v12 == 4)
    || (uint64_t v13 = v7[2]) == 0)
  {
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  char v29 = v12;
  if (v10) {
    uint64_t v14 = 0x4449746E65726170;
  }
  else {
    uint64_t v14 = 0x49746E756F636361;
  }
  if (v10) {
    unint64_t v15 = 0xE800000000000000;
  }
  else {
    unint64_t v15 = 0xE900000000000044;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  while (1)
  {
    uint64_t v17 = *((unsigned char *)v7 + v16 + 32) ? 0x4449746E65726170 : 0x49746E756F636361;
    unint64_t v18 = *((unsigned char *)v7 + v16 + 32) ? 0xE800000000000000 : 0xE900000000000044;
    if (v17 == v14 && v18 == v15) {
      break;
    }
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_29;
    }
    if (v13 == ++v16)
    {
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease_n();
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_29:
  swift_bridgeObjectRelease_n();
  uint64_t v21 = v6[2];
  if (!v21)
  {
    swift_bridgeObjectRelease();
LABEL_49:
    sub_10074025C();
    swift_allocError();
    return (void *)swift_willThrow();
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = 0;
  while (2)
  {
    unint64_t v23 = (char *)v6 + v22++;
    unint64_t v24 = 0xE800000000000000;
    unint64_t v25 = 0x44497463656A626FLL;
    switch(v23[32])
    {
      case 1:
        unint64_t v24 = 0x80000001007C63B0;
        unint64_t v25 = 0xD000000000000017;
        break;
      case 2:
        unint64_t v25 = 0x6E6F697461657263;
        unint64_t v24 = 0xEC00000065746144;
        break;
      case 3:
        unint64_t v25 = 0x4E79616C70736964;
        unint64_t v24 = 0xEB00000000656D61;
        break;
      default:
        break;
    }
    unint64_t v26 = 0xE800000000000000;
    uint64_t v27 = 0x44497463656A626FLL;
    switch(v29)
    {
      case 1:
        unint64_t v26 = 0x80000001007C63B0;
        if (v25 == 0xD000000000000017) {
          goto LABEL_40;
        }
        goto LABEL_41;
      case 2:
        uint64_t v27 = 0x6E6F697461657263;
        unint64_t v26 = 0xEC00000065746144;
        goto LABEL_39;
      case 3:
        unint64_t v26 = 0xEB00000000656D61;
        if (v25 != 0x4E79616C70736964) {
          goto LABEL_41;
        }
        goto LABEL_40;
      default:
LABEL_39:
        if (v25 != v27) {
          goto LABEL_41;
        }
LABEL_40:
        if (v24 != v26)
        {
LABEL_41:
          char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v28) {
            return (void *)swift_bridgeObjectRelease_n();
          }
          if (v21 == v22)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_49;
          }
          continue;
        }
        swift_bridgeObjectRelease_n();
        return (void *)swift_bridgeObjectRelease_n();
    }
  }
}

void *sub_10072D974(void *a1, uint64_t a2)
{
  id v3 = [a1 remObjectID];
  uint64_t v4 = v3;
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_100306FE8((uint64_t)v3), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
  }

  Swift::OpaquePointer v8 = sub_100697C24(v7, (uint64_t)&off_1008B28A0, (uint64_t)sub_10030A0DC, (uint64_t (*)(void))sub_1006939E0, &qword_100921A60);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_10072DA4C(void *a1, uint64_t a2)
{
  unint64_t result = sub_10072FFE4(a1, a2, (uint64_t)&type metadata for REMListSectionStorageCDIngestor.ValueKey, (uint64_t (*)(void))sub_1006935C4, &qword_100921A58);
  if (!v2)
  {
    char v6 = result;
    uint64_t v7 = sub_10072D974(a1, a2);
    v8._rawValue = &off_1008B28A0;
    char v9 = sub_10069ABEC(v8, (void (*)(void))type metadata accessor for REMCDListSection);
    if (v9 == 2 || (char v10 = v9, v11 = sub_10069985C(), v11 == 5) || (v12 = v7[2]) == 0)
    {
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease();
    }
    else
    {
      char v28 = v11;
      if (v10) {
        uint64_t v13 = 0x4449746E65726170;
      }
      else {
        uint64_t v13 = 0x49746E756F636361;
      }
      if (v10) {
        unint64_t v14 = 0xE800000000000000;
      }
      else {
        unint64_t v14 = 0xE900000000000044;
      }
      swift_bridgeObjectRetain();
      uint64_t v15 = 0;
      while (1)
      {
        uint64_t v16 = *((unsigned char *)v7 + v15 + 32) ? 0x4449746E65726170 : 0x49746E756F636361;
        unint64_t v17 = *((unsigned char *)v7 + v15 + 32) ? 0xE800000000000000 : 0xE900000000000044;
        if (v16 == v13 && v17 == v14) {
          break;
        }
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v19) {
          goto LABEL_29;
        }
        if (v12 == ++v15)
        {
          swift_bridgeObjectRelease();
          return (void *)swift_bridgeObjectRelease_n();
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_29:
      swift_bridgeObjectRelease_n();
      uint64_t v20 = v6[2];
      if (v20)
      {
        swift_bridgeObjectRetain();
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v22 = (char *)v6 + v21++;
          unint64_t v23 = 0xE800000000000000;
          unint64_t v24 = 0x44497463656A626FLL;
          switch(v22[32])
          {
            case 1:
              unint64_t v23 = 0x80000001007C63B0;
              unint64_t v24 = 0xD000000000000017;
              break;
            case 2:
              unint64_t v24 = 0x6E6F697461657263;
              unint64_t v23 = 0xEC00000065746144;
              break;
            case 3:
              unint64_t v24 = 0x4E79616C70736964;
              unint64_t v23 = 0xEB00000000656D61;
              break;
            case 4:
              unint64_t v24 = 0x6163696E6F6E6163;
              unint64_t v23 = 0xED0000656D614E6CLL;
              break;
            default:
              break;
          }
          unint64_t v25 = 0xE800000000000000;
          unint64_t v26 = 0x44497463656A626FLL;
          switch(v28)
          {
            case 1:
              unint64_t v25 = 0x80000001007C63B0;
              unint64_t v26 = 0xD000000000000017;
              break;
            case 2:
              unint64_t v26 = 0x6E6F697461657263;
              unint64_t v25 = 0xEC00000065746144;
              break;
            case 3:
              unint64_t v26 = 0x4E79616C70736964;
              unint64_t v25 = 0xEB00000000656D61;
              break;
            case 4:
              unint64_t v26 = 0x6163696E6F6E6163;
              unint64_t v25 = 0xED0000656D614E6CLL;
              break;
            default:
              break;
          }
          if (v24 == v26 && v23 == v25) {
            break;
          }
          char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v27) {
            return (void *)swift_bridgeObjectRelease_n();
          }
          if (v20 == v21)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_47;
          }
        }
        swift_bridgeObjectRelease_n();
        return (void *)swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRelease();
LABEL_47:
      sub_10074025C();
      swift_allocError();
      return (void *)swift_willThrow();
    }
  }
  return result;
}

void *sub_10072DE98(void *a1, uint64_t a2)
{
  id v3 = [a1 remObjectID];
  uint64_t v4 = v3;
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_100306FE8((uint64_t)v3), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
  }

  Swift::OpaquePointer v8 = sub_100697C24(v7, (uint64_t)&off_1008B23B0, (uint64_t)sub_10030A07C, (uint64_t (*)(void))sub_100692B20, &qword_100921AB8);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_10072DF70(void *a1, uint64_t a2)
{
  unint64_t result = sub_10072FFE4(a1, a2, (uint64_t)&type metadata for REMTemplateStorageCDIngestor.ValueKey, (uint64_t (*)(void))sub_100692D4C, &qword_100921A98);
  if (v2) {
    return result;
  }
  char v6 = result;
  uint64_t v7 = sub_10072DE98(a1, a2);
  char v8 = sub_10069A628();
  if (v8 == 3 || (v9 = v8, v10 = sub_100698EEC(), v10 == 12) || (uint64_t v34 = v7[2]) == 0)
  {
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  char v33 = v10;
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  while (1)
  {
    uint64_t v12 = (char *)v7 + v11++;
    int v13 = v12[32];
    uint64_t v14 = 0x6341746E65726170;
    if (v13 != 1) {
      uint64_t v14 = 0xD000000000000014;
    }
    unint64_t v15 = 0xEF4449746E756F63;
    if (v13 != 1) {
      unint64_t v15 = 0x80000001007C6240;
    }
    uint64_t v16 = v13 ? v14 : 0x49746E756F636361;
    unint64_t v17 = v13 ? v15 : 0xE900000000000044;
    if (v9) {
      break;
    }
    unint64_t v19 = 0xE900000000000044;
    if (v16 == 0x49746E756F636361) {
      goto LABEL_28;
    }
LABEL_29:
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_34;
    }
    if (v34 == v11)
    {
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease_n();
    }
  }
  if (v9 == 1) {
    unint64_t v18 = 0x6341746E65726170;
  }
  else {
    unint64_t v18 = 0xD000000000000014;
  }
  if (v9 == 1) {
    unint64_t v19 = 0xEF4449746E756F63;
  }
  else {
    unint64_t v19 = 0x80000001007C6240;
  }
  if (v16 != v18) {
    goto LABEL_29;
  }
LABEL_28:
  if (v17 != v19) {
    goto LABEL_29;
  }
  swift_bridgeObjectRelease_n();
LABEL_34:
  swift_bridgeObjectRelease_n();
  uint64_t v21 = v6[2];
  if (v21)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    while (1)
    {
      unint64_t v23 = (char *)v6 + v22++;
      unint64_t v24 = 0xE800000000000000;
      unint64_t v25 = 0x44497463656A626FLL;
      switch(v23[32])
      {
        case 1:
          unint64_t v26 = "daIsNotificationsCollection";
          goto LABEL_43;
        case 2:
          unint64_t v25 = 0x72756769666E6F63;
          unint64_t v24 = 0xED00006E6F697461;
          break;
        case 3:
          unint64_t v24 = 0xE400000000000000;
          unint64_t v25 = 1701667182;
          break;
        case 4:
          unint64_t v24 = 0xE500000000000000;
          unint64_t v25 = 0x726F6C6F63;
          break;
        case 5:
          unint64_t v25 = 0x626D456567646162;
          unint64_t v24 = 0xEB000000006D656CLL;
          break;
        case 6:
          unint64_t v26 = "DsToCategorizeAsGroceryItems";
LABEL_43:
          unint64_t v24 = (unint64_t)v26 | 0x8000000000000000;
          unint64_t v25 = 0xD000000000000017;
          break;
        case 7:
          unint64_t v25 = 0x53676E6974726F73;
          unint64_t v24 = 0xEC000000656C7974;
          break;
        case 8:
          char v27 = "lendar";
          unint64_t v25 = 0xD000000000000015;
          goto LABEL_49;
        case 9:
          unint64_t v25 = 0xD00000000000001CLL;
          char v27 = "remindersICSDisplayOrderChanged";
          goto LABEL_49;
        case 10:
          unint64_t v25 = 0xD000000000000019;
          char v27 = "calDAVNotifications";
          goto LABEL_49;
        case 11:
          unint64_t v25 = 0xD000000000000027;
          char v27 = "unsavedSectionIDsOrdering";
LABEL_49:
          unint64_t v24 = (unint64_t)v27 | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v28 = 0xE800000000000000;
      unint64_t v29 = 0x44497463656A626FLL;
      switch(v33)
      {
        case 1:
          char v30 = "daIsNotificationsCollection";
          goto LABEL_57;
        case 2:
          unint64_t v29 = 0x72756769666E6F63;
          unint64_t v28 = 0xED00006E6F697461;
          break;
        case 3:
          unint64_t v28 = 0xE400000000000000;
          unint64_t v29 = 1701667182;
          break;
        case 4:
          unint64_t v28 = 0xE500000000000000;
          unint64_t v29 = 0x726F6C6F63;
          break;
        case 5:
          unint64_t v29 = 0x626D456567646162;
          unint64_t v28 = 0xEB000000006D656CLL;
          break;
        case 6:
          char v30 = "DsToCategorizeAsGroceryItems";
LABEL_57:
          unint64_t v28 = (unint64_t)v30 | 0x8000000000000000;
          unint64_t v29 = 0xD000000000000017;
          break;
        case 7:
          unint64_t v29 = 0x53676E6974726F73;
          unint64_t v28 = 0xEC000000656C7974;
          break;
        case 8:
          uint64_t v31 = "lendar";
          unint64_t v29 = 0xD000000000000015;
          goto LABEL_63;
        case 9:
          unint64_t v29 = 0xD00000000000001CLL;
          uint64_t v31 = "remindersICSDisplayOrderChanged";
          goto LABEL_63;
        case 10:
          unint64_t v29 = 0xD000000000000019;
          uint64_t v31 = "calDAVNotifications";
          goto LABEL_63;
        case 11:
          unint64_t v29 = 0xD000000000000027;
          uint64_t v31 = "unsavedSectionIDsOrdering";
LABEL_63:
          unint64_t v28 = (unint64_t)v31 | 0x8000000000000000;
          break;
        default:
          break;
      }
      if (v25 == v29 && v24 == v28) {
        break;
      }
      char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v32) {
        return (void *)swift_bridgeObjectRelease_n();
      }
      if (v21 == v22)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_70;
      }
    }
    swift_bridgeObjectRelease_n();
    return (void *)swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
LABEL_70:
  sub_10074025C();
  swift_allocError();
  return (void *)swift_willThrow();
}

void *sub_10072E564(void *a1, uint64_t a2)
{
  id v3 = [a1 remObjectID];
  uint64_t v4 = v3;
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_100306FE8((uint64_t)v3), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
  }

  char v8 = sub_100697C24(v7, (uint64_t)&off_1008B2590, (uint64_t)sub_10030A0A0, (uint64_t (*)(void))sub_100693C14, &qword_100921B50);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_10072E63C(void *a1, uint64_t a2)
{
  unint64_t result = sub_10072FFE4(a1, a2, (uint64_t)&type metadata for REMSmartListStorageCDIngestor.ValueKey, (uint64_t (*)(void))sub_100692F68, &qword_100921B40);
  if (v2) {
    return result;
  }
  char v6 = result;
  uint64_t v7 = sub_10072E564(a1, a2);
  v8._rawValue = &off_1008B2590;
  int v9 = sub_10069A810(v8, (unint64_t *)&unk_100910210);
  char v10 = sub_1006992B0();
  if (v10 == 14 || (uint64_t v11 = v7[2]) == 0)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  char v31 = v10;
  swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  while (2)
  {
    int v13 = (char *)v7 + v12++;
    unint64_t v14 = 0xE900000000000044;
    unint64_t v15 = 0x49746E756F636361;
    switch(v13[32])
    {
      case 1:
        unint64_t v15 = 0x6341746E65726170;
        unint64_t v14 = 0xEF4449746E756F63;
        break;
      case 2:
        unint64_t v15 = 0x694C746E65726170;
        unint64_t v14 = 0xEC00000044497473;
        break;
      case 3:
        unint64_t v14 = 0x80000001007C6240;
        unint64_t v15 = 0xD000000000000014;
        break;
      default:
        break;
    }
    uint64_t v16 = 0x49746E756F636361;
    unint64_t v17 = 0xE900000000000044;
    switch(v9)
    {
      case 0:
        goto LABEL_15;
      case 1:
        unint64_t v17 = 0xEF4449746E756F63;
        if (v15 != 0x6341746E65726170) {
          goto LABEL_19;
        }
        goto LABEL_18;
      case 2:
        uint64_t v16 = 0x694C746E65726170;
        unint64_t v17 = 0xEC00000044497473;
LABEL_15:
        if (v15 != v16) {
          goto LABEL_19;
        }
        goto LABEL_18;
      case 3:
        unint64_t v17 = 0x80000001007C6240;
        if (v15 != 0xD000000000000014) {
          goto LABEL_19;
        }
LABEL_18:
        if (v14 != v17)
        {
LABEL_19:
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v18) {
            goto LABEL_24;
          }
          if (v11 == v12)
          {
            swift_bridgeObjectRelease();
            return (void *)swift_bridgeObjectRelease_n();
          }
          continue;
        }
        swift_bridgeObjectRelease_n();
LABEL_24:
        swift_bridgeObjectRelease_n();
        uint64_t v19 = v6[2];
        if (v19)
        {
          swift_bridgeObjectRetain();
          uint64_t v20 = 0;
          while (1)
          {
            uint64_t v21 = (char *)v6 + v20++;
            unint64_t v22 = 0xE800000000000000;
            unint64_t v23 = 0x44497463656A626FLL;
            switch(v21[32])
            {
              case 1:
                unint64_t v24 = "daIsNotificationsCollection";
                goto LABEL_37;
              case 2:
                unint64_t v23 = 0x73694C7472616D73;
                unint64_t v22 = 0xED00006570795474;
                break;
              case 3:
                unint64_t v23 = 0x53676E6974726F73;
                unint64_t v22 = 0xEC000000656C7974;
                break;
              case 4:
                unint64_t v22 = 0xEA00000000006574;
                unint64_t v23 = 0x614464656E6E6970;
                break;
              case 5:
                unint64_t v23 = 0x724F6C61756E616DLL;
                unint64_t v22 = 0xEE00676E69726564;
                break;
              case 6:
                unint64_t v22 = 0xE400000000000000;
                unint64_t v23 = 1701667182;
                break;
              case 7:
                unint64_t v22 = 0xE500000000000000;
                unint64_t v23 = 0x726F6C6F63;
                break;
              case 8:
                unint64_t v23 = 0x626D456567646162;
                unint64_t v22 = 0xEB000000006D656CLL;
                break;
              case 9:
                unint64_t v23 = 0x61447265746C6966;
                unint64_t v22 = 0xEA00000000006174;
                break;
              case 10:
                unint64_t v24 = "DsToCategorizeAsGroceryItems";
LABEL_37:
                unint64_t v22 = (unint64_t)v24 | 0x8000000000000000;
                unint64_t v23 = 0xD000000000000017;
                break;
              case 11:
                unint64_t v23 = 0xD00000000000001CLL;
                unint64_t v25 = "remindersICSDisplayOrderChanged";
                goto LABEL_41;
              case 12:
                unint64_t v23 = 0xD000000000000019;
                unint64_t v25 = "calDAVNotifications";
                goto LABEL_41;
              case 13:
                unint64_t v23 = 0xD000000000000027;
                unint64_t v25 = "unsavedSectionIDsOrdering";
LABEL_41:
                unint64_t v22 = (unint64_t)v25 | 0x8000000000000000;
                break;
              default:
                break;
            }
            unint64_t v26 = 0xE800000000000000;
            unint64_t v27 = 0x44497463656A626FLL;
            switch(v31)
            {
              case 1:
                unint64_t v28 = "daIsNotificationsCollection";
                goto LABEL_53;
              case 2:
                unint64_t v27 = 0x73694C7472616D73;
                unint64_t v26 = 0xED00006570795474;
                break;
              case 3:
                unint64_t v27 = 0x53676E6974726F73;
                unint64_t v26 = 0xEC000000656C7974;
                break;
              case 4:
                unint64_t v26 = 0xEA00000000006574;
                unint64_t v27 = 0x614464656E6E6970;
                break;
              case 5:
                unint64_t v27 = 0x724F6C61756E616DLL;
                unint64_t v26 = 0xEE00676E69726564;
                break;
              case 6:
                unint64_t v26 = 0xE400000000000000;
                unint64_t v27 = 1701667182;
                break;
              case 7:
                unint64_t v26 = 0xE500000000000000;
                unint64_t v27 = 0x726F6C6F63;
                break;
              case 8:
                unint64_t v27 = 0x626D456567646162;
                unint64_t v26 = 0xEB000000006D656CLL;
                break;
              case 9:
                unint64_t v27 = 0x61447265746C6966;
                unint64_t v26 = 0xEA00000000006174;
                break;
              case 10:
                unint64_t v28 = "DsToCategorizeAsGroceryItems";
LABEL_53:
                unint64_t v26 = (unint64_t)v28 | 0x8000000000000000;
                unint64_t v27 = 0xD000000000000017;
                break;
              case 11:
                unint64_t v27 = 0xD00000000000001CLL;
                unint64_t v29 = "remindersICSDisplayOrderChanged";
                goto LABEL_57;
              case 12:
                unint64_t v27 = 0xD000000000000019;
                unint64_t v29 = "calDAVNotifications";
                goto LABEL_57;
              case 13:
                unint64_t v27 = 0xD000000000000027;
                unint64_t v29 = "unsavedSectionIDsOrdering";
LABEL_57:
                unint64_t v26 = (unint64_t)v29 | 0x8000000000000000;
                break;
              default:
                break;
            }
            if (v23 == v27 && v22 == v26) {
              break;
            }
            char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v30) {
              return (void *)swift_bridgeObjectRelease_n();
            }
            if (v19 == v20)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_64;
            }
          }
          swift_bridgeObjectRelease_n();
          return (void *)swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_bridgeObjectRelease();
LABEL_64:
          sub_10074025C();
          swift_allocError();
          return (void *)swift_willThrow();
        }
      default:
        goto LABEL_3;
    }
  }
}

void *sub_10072ED7C(void *a1, uint64_t a2)
{
  id v3 = [a1 remObjectID];
  uint64_t v4 = v3;
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_100306FE8((uint64_t)v3), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
  }

  Swift::OpaquePointer v8 = sub_100697C24(v7, (uint64_t)&off_1008B2988, (uint64_t)sub_10030A0F4, (uint64_t (*)(void))sub_1006939E0, &qword_100921B90);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_10072EE54(void *a1, uint64_t a2)
{
  unint64_t result = sub_10072FFE4(a1, a2, (uint64_t)&type metadata for REMSavedReminderStorageCDIngestor.ValueKey, (uint64_t (*)(void))sub_1006937E0, &qword_100921B88);
  if (!v2)
  {
    char v6 = result;
    uint64_t v7 = sub_10072ED7C(a1, a2);
    v8._rawValue = &off_1008B2988;
    char v9 = sub_10069ABEC(v8, (void (*)(void))type metadata accessor for REMCDSavedReminder);
    if (v9 == 2 || (char v10 = v9, v11 = sub_100699C24(), v11 == 22) || (v12 = v7[2]) == 0)
    {
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease();
    }
    else
    {
      char v32 = v11;
      if (v10) {
        uint64_t v13 = 0x44497473696CLL;
      }
      else {
        uint64_t v13 = 0x49746E756F636361;
      }
      if (v10) {
        unint64_t v14 = 0xE600000000000000;
      }
      else {
        unint64_t v14 = 0xE900000000000044;
      }
      swift_bridgeObjectRetain();
      uint64_t v15 = 0;
      while (1)
      {
        uint64_t v16 = *((unsigned char *)v7 + v15 + 32) ? 0x44497473696CLL : 0x49746E756F636361;
        unint64_t v17 = *((unsigned char *)v7 + v15 + 32) ? 0xE600000000000000 : 0xE900000000000044;
        if (v16 == v13 && v17 == v14) {
          break;
        }
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v19) {
          goto LABEL_29;
        }
        if (v12 == ++v15)
        {
          swift_bridgeObjectRelease();
          return (void *)swift_bridgeObjectRelease_n();
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_29:
      swift_bridgeObjectRelease_n();
      uint64_t v20 = v6[2];
      if (v20)
      {
        swift_bridgeObjectRetain();
        uint64_t v21 = 0;
        while (1)
        {
          unint64_t v22 = (char *)v6 + v21++;
          unint64_t v23 = 0xE800000000000000;
          uint64_t v24 = 0x44497463656A626FLL;
          switch(v22[32])
          {
            case 1:
              unint64_t v23 = 0x80000001007C67E0;
              uint64_t v24 = 0xD000000000000010;
              break;
            case 2:
              uint64_t v24 = 0xD000000000000017;
              unint64_t v23 = 0x80000001007C63B0;
              break;
            case 3:
              unint64_t v25 = "daCalendarItemUniqueIdentifier";
              goto LABEL_45;
            case 4:
              uint64_t v26 = 0x44656C746974;
              goto LABEL_47;
            case 5:
              uint64_t v24 = 0x797469726F697270;
              break;
            case 6:
              unint64_t v23 = 0xE700000000000000;
              uint64_t v24 = 0x64656767616C66;
              break;
            case 7:
              uint64_t v24 = 0x6E6F697461657263;
              unint64_t v23 = 0xEC00000065746144;
              break;
            case 8:
              uint64_t v24 = 0x6E65727275636572;
              unint64_t v23 = 0xEF73656C75526563;
              break;
            case 9:
              uint64_t v24 = 0xD000000000000013;
              unint64_t v23 = 0x80000001007C68F0;
              break;
            case 10:
              unint64_t v25 = "startDateComponents";
              goto LABEL_45;
            case 11:
              uint64_t v24 = 0x656E6F5A656D6974;
              break;
            case 12:
              unint64_t v23 = 0xE600000000000000;
              uint64_t v24 = 0x7961446C6C61;
              break;
            case 13:
              unint64_t v25 = "dueDateComponents";
LABEL_45:
              unint64_t v23 = (unint64_t)v25 | 0x8000000000000000;
              uint64_t v24 = 0xD000000000000011;
              break;
            case 14:
              uint64_t v26 = 0x447365746F6ELL;
LABEL_47:
              uint64_t v24 = v26 & 0xFFFFFFFFFFFFLL | 0x636F000000000000;
              unint64_t v23 = 0xED0000746E656D75;
              break;
            case 15:
              uint64_t v24 = 0x656D686361747461;
              unint64_t v23 = 0xEB0000000073746ELL;
              break;
            case 16:
              unint64_t v23 = 0xE600000000000000;
              uint64_t v24 = 0x736D72616C61;
              break;
            case 17:
              uint64_t v24 = 0xD000000000000016;
              unint64_t v23 = 0x80000001007C6970;
              break;
            case 18:
              uint64_t v24 = 0xD00000000000001ALL;
              unint64_t v23 = 0x80000001007C6990;
              break;
            case 19:
              uint64_t v24 = 0xD000000000000024;
              unint64_t v23 = 0x80000001007C69B0;
              break;
            case 20:
              uint64_t v24 = 0x7367617468736168;
              break;
            case 21:
              uint64_t v24 = 0x48746361746E6F63;
              unint64_t v23 = 0xEE0073656C646E61;
              break;
            default:
              break;
          }
          unint64_t v27 = 0xE800000000000000;
          uint64_t v28 = 0x44497463656A626FLL;
          switch(v32)
          {
            case 1:
              unint64_t v27 = 0x80000001007C67E0;
              uint64_t v28 = 0xD000000000000010;
              break;
            case 2:
              uint64_t v28 = 0xD000000000000017;
              unint64_t v27 = 0x80000001007C63B0;
              break;
            case 3:
              unint64_t v29 = "daCalendarItemUniqueIdentifier";
              goto LABEL_69;
            case 4:
              uint64_t v30 = 0x44656C746974;
              goto LABEL_71;
            case 5:
              uint64_t v28 = 0x797469726F697270;
              break;
            case 6:
              unint64_t v27 = 0xE700000000000000;
              uint64_t v28 = 0x64656767616C66;
              break;
            case 7:
              uint64_t v28 = 0x6E6F697461657263;
              unint64_t v27 = 0xEC00000065746144;
              break;
            case 8:
              uint64_t v28 = 0x6E65727275636572;
              unint64_t v27 = 0xEF73656C75526563;
              break;
            case 9:
              uint64_t v28 = 0xD000000000000013;
              unint64_t v27 = 0x80000001007C68F0;
              break;
            case 10:
              unint64_t v29 = "startDateComponents";
              goto LABEL_69;
            case 11:
              uint64_t v28 = 0x656E6F5A656D6974;
              break;
            case 12:
              unint64_t v27 = 0xE600000000000000;
              uint64_t v28 = 0x7961446C6C61;
              break;
            case 13:
              unint64_t v29 = "dueDateComponents";
LABEL_69:
              unint64_t v27 = (unint64_t)v29 | 0x8000000000000000;
              uint64_t v28 = 0xD000000000000011;
              break;
            case 14:
              uint64_t v30 = 0x447365746F6ELL;
LABEL_71:
              uint64_t v28 = v30 & 0xFFFFFFFFFFFFLL | 0x636F000000000000;
              unint64_t v27 = 0xED0000746E656D75;
              break;
            case 15:
              uint64_t v28 = 0x656D686361747461;
              unint64_t v27 = 0xEB0000000073746ELL;
              break;
            case 16:
              unint64_t v27 = 0xE600000000000000;
              uint64_t v28 = 0x736D72616C61;
              break;
            case 17:
              uint64_t v28 = 0xD000000000000016;
              unint64_t v27 = 0x80000001007C6970;
              break;
            case 18:
              uint64_t v28 = 0xD00000000000001ALL;
              unint64_t v27 = 0x80000001007C6990;
              break;
            case 19:
              uint64_t v28 = 0xD000000000000024;
              unint64_t v27 = 0x80000001007C69B0;
              break;
            case 20:
              uint64_t v28 = 0x7367617468736168;
              break;
            case 21:
              uint64_t v28 = 0x48746361746E6F63;
              unint64_t v27 = 0xEE0073656C646E61;
              break;
            default:
              break;
          }
          if (v24 == v28 && v23 == v27) {
            break;
          }
          char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31) {
            return (void *)swift_bridgeObjectRelease_n();
          }
          if (v20 == v21)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_85;
          }
        }
        swift_bridgeObjectRelease_n();
        return (void *)swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRelease();
LABEL_85:
      sub_10074025C();
      swift_allocError();
      return (void *)swift_willThrow();
    }
  }
  return result;
}

void *sub_10072F638(void *a1, uint64_t a2)
{
  id v3 = [a1 remObjectID];
  uint64_t v4 = v3;
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_100306FE8((uint64_t)v3), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
  }

  Swift::OpaquePointer v8 = sub_100697C24(v7, (uint64_t)&off_1008B1F50, (uint64_t)sub_10030A064, (uint64_t (*)(void))sub_100693398, (uint64_t *)&unk_100921C00);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_10072F710(void *a1, uint64_t a2)
{
  unint64_t result = sub_10072FFE4(a1, a2, (uint64_t)&type metadata for REMReminderStorageCDIngestor.ValueKey, (uint64_t (*)(void))sub_100692920, &qword_100921BF8);
  if (v2) {
    return result;
  }
  char v6 = result;
  uint64_t v7 = sub_10072F638(a1, a2);
  int v8 = sub_10069A430();
  char v9 = sub_100698B20();
  if (v9 == 38 || (char v28 = v9, (v10 = v7[2]) == 0))
  {
LABEL_3:
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  while (2)
  {
    uint64_t v12 = (char *)v7 + v11++;
    unint64_t v13 = 0xE900000000000044;
    unint64_t v14 = 0x49746E756F636361;
    switch(v12[32])
    {
      case 1:
        unint64_t v13 = 0xE600000000000000;
        unint64_t v14 = 0x44497473696CLL;
        break;
      case 2:
        unint64_t v13 = 0x80000001007C67E0;
        unint64_t v14 = 0xD000000000000010;
        break;
      case 3:
        uint64_t v15 = "parentReminderID";
        goto LABEL_12;
      case 4:
        uint64_t v15 = "subtaskIDsToUndelete";
LABEL_12:
        unint64_t v13 = (unint64_t)v15 | 0x8000000000000000;
        unint64_t v14 = 0xD000000000000014;
        break;
      case 5:
        unint64_t v14 = 0xD00000000000001FLL;
        unint64_t v13 = 0x80000001007C6840;
        break;
      default:
        break;
    }
    unint64_t v16 = 0x49746E756F636361;
    unint64_t v17 = 0xE900000000000044;
    switch(v8)
    {
      case 0:
        goto LABEL_22;
      case 1:
        unint64_t v17 = 0xE600000000000000;
        if (v14 != 0x44497473696CLL) {
          goto LABEL_24;
        }
        goto LABEL_23;
      case 2:
        unint64_t v17 = 0x80000001007C67E0;
        if (v14 != 0xD000000000000010) {
          goto LABEL_24;
        }
        goto LABEL_23;
      case 3:
        char v18 = "parentReminderID";
        goto LABEL_21;
      case 4:
        char v18 = "subtaskIDsToUndelete";
LABEL_21:
        unint64_t v17 = (unint64_t)v18 | 0x8000000000000000;
        unint64_t v16 = 0xD000000000000014;
LABEL_22:
        if (v14 == v16) {
          goto LABEL_23;
        }
        goto LABEL_24;
      case 5:
        unint64_t v17 = 0x80000001007C6840;
        if (v14 != 0xD00000000000001FLL) {
          goto LABEL_24;
        }
LABEL_23:
        if (v13 != v17)
        {
LABEL_24:
          char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v19) {
            goto LABEL_31;
          }
          if (v10 == v11)
          {
            swift_bridgeObjectRelease();
            return (void *)swift_bridgeObjectRelease_n();
          }
          continue;
        }
        swift_bridgeObjectRelease_n();
LABEL_31:
        swift_bridgeObjectRelease_n();
        uint64_t v20 = v6[2];
        if (v20)
        {
          swift_bridgeObjectRetain();
          uint64_t v21 = 0;
          while (1)
          {
            uint64_t v22 = sub_10024776C(*((unsigned char *)v6 + v21 + 32));
            uint64_t v24 = v23;
            if (v22 == sub_10024776C(v28) && v24 == v25) {
              break;
            }
            char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v27) {
              return (void *)swift_bridgeObjectRelease_n();
            }
            if (v20 == ++v21)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_41;
            }
          }
          swift_bridgeObjectRelease_n();
          return (void *)swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_bridgeObjectRelease();
LABEL_41:
          sub_10074025C();
          swift_allocError();
          return (void *)swift_willThrow();
        }
      default:
        goto LABEL_3;
    }
  }
}

void *sub_10072FB20(void *a1, uint64_t a2)
{
  unint64_t result = sub_10072FFE4(a1, a2, (uint64_t)&type metadata for REMListStorageCDIngestor.ValueKey, (uint64_t (*)(void))sub_100692520, &qword_100921DA8);
  if (v2) {
    return result;
  }
  char v6 = result;
  uint64_t v7 = sub_10072FFE4(a1, a2, (uint64_t)&type metadata for REMListStorageCDIngestor.RelationshipKey, (uint64_t (*)(void))sub_100692304, &qword_100921DB8);
  int v8 = sub_10069A1D0();
  char v9 = sub_10069818C();
  if (v9 == 39 || (char v28 = v9, (v10 = v7[2]) == 0))
  {
LABEL_3:
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  while (2)
  {
    uint64_t v12 = (char *)v7 + v11++;
    unint64_t v13 = 0xE900000000000044;
    unint64_t v14 = 0x49746E756F636361;
    switch(v12[32])
    {
      case 1:
        unint64_t v14 = 0xD000000000000016;
        unint64_t v13 = 0x80000001007C61C0;
        break;
      case 2:
        unint64_t v14 = 0xD00000000000001BLL;
        unint64_t v13 = 0x80000001007C61E0;
        break;
      case 3:
        unint64_t v14 = 0x6341746E65726170;
        unint64_t v13 = 0xEF4449746E756F63;
        break;
      case 4:
        unint64_t v14 = 0x694C746E65726170;
        unint64_t v13 = 0xEC00000044497473;
        break;
      case 5:
        unint64_t v14 = 0xD000000000000015;
        unint64_t v13 = 0x80000001007C6220;
        break;
      case 6:
        unint64_t v13 = 0x80000001007C6240;
        unint64_t v14 = 0xD000000000000014;
        break;
      default:
        break;
    }
    unint64_t v15 = 0x49746E756F636361;
    unint64_t v16 = 0xE900000000000044;
    switch(v8)
    {
      case 0:
        goto LABEL_24;
      case 1:
        unint64_t v17 = 0xD000000000000016;
        char v18 = "publicLinkExpirationDate";
        goto LABEL_17;
      case 2:
        unint64_t v17 = 0xD00000000000001BLL;
        char v18 = "childListIDsToUndelete";
LABEL_17:
        unint64_t v16 = (unint64_t)v18 | 0x8000000000000000;
        if (v14 != v17) {
          goto LABEL_26;
        }
        goto LABEL_25;
      case 3:
        unint64_t v16 = 0xEF4449746E756F63;
        if (v14 != 0x6341746E65726170) {
          goto LABEL_26;
        }
        goto LABEL_25;
      case 4:
        unint64_t v16 = 0xEC00000044497473;
        if (v14 != 0x694C746E65726170) {
          goto LABEL_26;
        }
        goto LABEL_25;
      case 5:
        unint64_t v15 = 0xD000000000000015;
        unint64_t v16 = 0x80000001007C6220;
LABEL_24:
        if (v14 == v15) {
          goto LABEL_25;
        }
        goto LABEL_26;
      case 6:
        unint64_t v16 = 0x80000001007C6240;
        if (v14 != 0xD000000000000014) {
          goto LABEL_26;
        }
LABEL_25:
        if (v13 != v16)
        {
LABEL_26:
          char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v19) {
            goto LABEL_33;
          }
          if (v10 == v11)
          {
            swift_bridgeObjectRelease();
            return (void *)swift_bridgeObjectRelease_n();
          }
          continue;
        }
        swift_bridgeObjectRelease_n();
LABEL_33:
        swift_bridgeObjectRelease_n();
        uint64_t v20 = v6[2];
        if (v20)
        {
          swift_bridgeObjectRetain();
          uint64_t v21 = 0;
          while (1)
          {
            uint64_t v22 = sub_1005D91F8(*((unsigned char *)v6 + v21 + 32));
            uint64_t v24 = v23;
            if (v22 == sub_1005D91F8(v28) && v24 == v25) {
              break;
            }
            char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v27) {
              return (void *)swift_bridgeObjectRelease_n();
            }
            if (v20 == ++v21)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_43;
            }
          }
          swift_bridgeObjectRelease_n();
          return (void *)swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_bridgeObjectRelease();
LABEL_43:
          sub_10074025C();
          swift_allocError();
          return (void *)swift_willThrow();
        }
      default:
        goto LABEL_3;
    }
  }
}

void *sub_10072FFE4(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t *a5)
{
  id v8 = [a1 remObjectID];
  char v9 = v8;
  if (*(void *)(a2 + 16) && (unint64_t v10 = sub_100306FE8((uint64_t)v8), (v11 & 1) != 0))
  {
    uint64_t v12 = *(void *)(*(void *)(a2 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v12 = 0;
  }

  unint64_t v13 = sub_100697DE4(v12, a4, a5);
  swift_bridgeObjectRelease();
  return v13;
}

void *sub_1007300A4(void *a1, uint64_t a2)
{
  id v3 = [a1 remObjectID];
  uint64_t v4 = v3;
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_100306FE8((uint64_t)v3), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
  }

  id v8 = sub_100697C24(v7, (uint64_t)&off_1008B1C20, (uint64_t)sub_10030A040, (uint64_t (*)(void))sub_1006939E0, &qword_100921DE8);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_10073017C(void *a1, uint64_t a2)
{
  unint64_t result = sub_10072FFE4(a1, a2, (uint64_t)&type metadata for REMAccountStorageCDIngestor.ValueKey, (uint64_t (*)(void))sub_100692720, &qword_100921DD8);
  if (!v2)
  {
    char v6 = result;
    uint64_t v7 = sub_1007300A4(a1, a2);
    char v8 = sub_10069A3C8();
    if (v8 == 2 || (v9 = v8, v10 = sub_10069855C(), v10 == 26) || (uint64_t v27 = v7[2]) == 0)
    {
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = v10;
      if (v9) {
        unint64_t v11 = 0xD000000000000016;
      }
      else {
        unint64_t v11 = 0xD000000000000011;
      }
      if (v9) {
        unint64_t v12 = 0x80000001007C65D0;
      }
      else {
        unint64_t v12 = 0x80000001007C65B0;
      }
      swift_bridgeObjectRetain();
      uint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = *((unsigned char *)v7 + v13 + 32) ? 0xD000000000000016 : 0xD000000000000011;
        unint64_t v15 = *((unsigned char *)v7 + v13 + 32) ? 0x80000001007C65D0 : 0x80000001007C65B0;
        if (v14 == v11 && v15 == v12) {
          break;
        }
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_29;
        }
        if (v27 == ++v13)
        {
          swift_bridgeObjectRelease();
          return (void *)swift_bridgeObjectRelease_n();
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_29:
      swift_bridgeObjectRelease_n();
      uint64_t v18 = v6[2];
      if (v18)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = 0;
        while (1)
        {
          unint64_t v20 = sub_10028826C(*((unsigned char *)v6 + v19 + 32));
          uint64_t v22 = v21;
          if (v20 == sub_10028826C(v26) && v22 == v23) {
            break;
          }
          char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v25) {
            return (void *)swift_bridgeObjectRelease_n();
          }
          if (v18 == ++v19)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_39;
          }
        }
        swift_bridgeObjectRelease_n();
        return (void *)swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRelease();
LABEL_39:
      sub_10074025C();
      swift_allocError();
      return (void *)swift_willThrow();
    }
  }
  return result;
}

void sub_10073043C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_64:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
LABEL_65:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_65;
  }
LABEL_3:
  unint64_t v44 = v1 & 0xC000000000000001;
  uint64_t v3 = 4;
  unint64_t v42 = v1;
  uint64_t v43 = v2;
  while (1)
  {
    if (v44) {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v5 = *(id *)(v1 + 8 * v3);
    }
    id v45 = v5;
    uint64_t v6 = v3 - 3;
    if (__OFADD__(v3 - 4, 1))
    {
      __break(1u);
      goto LABEL_64;
    }
    v7._countAndFlagsBits = 0x49746E756F636361;
    v7._object = (void *)0xE900000000000044;
    Swift::Int v8 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B45B8, v7);
    if (v8)
    {
      if (v8 != 1)
      {
        if (qword_1009074C8 != -1) {
          swift_once();
        }
        uint64_t v13 = type metadata accessor for Logger();
        sub_10008E2DC(v13, (uint64_t)qword_100917690);
        unint64_t v14 = Logger.logObject.getter();
        os_log_type_t v15 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v14, v15))
        {
          sub_1000963CC(0, &qword_10091FD58);
          uint64_t v16 = swift_slowAlloc();
          uint64_t v46 = swift_slowAlloc();
          *(_DWORD *)uint64_t v16 = 136446210;
          id v17 = [(id)swift_getObjCClassFromMetadata() description];
          uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v20 = v19;

          *(void *)(v16 + 4) = sub_1000C51B8(v18, v20, &v46);
          uint64_t v2 = v43;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v14, v15, "CDIngestableRelationshipKey is expected to define 'accountID' for every kind of CDIngestors (except REMCDAccount) {CDType: %{public}s}", (uint8_t *)v16, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          unint64_t v1 = v42;
          swift_slowDealloc();
        }

LABEL_7:
        if (v6 == v2) {
          goto LABEL_65;
        }
        goto LABEL_8;
      }
      int v9 = 1;
    }
    else
    {
      int v9 = 0;
    }
    v10._countAndFlagsBits = 0x44497463656A626FLL;
    v10._object = (void *)0xE800000000000000;
    Swift::Int v11 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B4630, v10);
    if (!v11) {
      break;
    }
    if (v11 == 1)
    {
      int v12 = 1;
      goto LABEL_26;
    }
    if (qword_1009074C8 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_10008E2DC(v26, (uint64_t)qword_100917690);
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v27, v28))
    {

      unint64_t v1 = v42;
      goto LABEL_7;
    }
    uint64_t v29 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136446210;
    sub_1000963CC(0, &qword_10091FD58);
    id v30 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v33 = v32;

    uint64_t v2 = v43;
    *(void *)(v29 + 4) = sub_1000C51B8(v31, v33, &v46);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "CDIngestableValueKey is expected to define 'objectID' for every kind of CDIngestors {CDType: %{public}s}", (uint8_t *)v29, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v1 = v42;
    if (v6 == v43) {
      goto LABEL_65;
    }
LABEL_8:
    ++v3;
  }
  int v12 = 0;
LABEL_26:
  if (v9) {
    uint64_t v21 = 0x44496D72616C61;
  }
  else {
    uint64_t v21 = 0x49746E756F636361;
  }
  if (v9) {
    unint64_t v22 = 0xE700000000000000;
  }
  else {
    unint64_t v22 = 0xE900000000000044;
  }
  if (v21 == 0x49746E756F636361 && v22 == 0xE900000000000044) {
    goto LABEL_37;
  }
  char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) == 0)
  {
    if (v21 == 0x44496D72616C61 && v22 == 0xE700000000000000)
    {
LABEL_37:
      swift_bridgeObjectRelease_n();
      goto LABEL_38;
    }
    char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0) {
      goto LABEL_5;
    }
  }
LABEL_38:
  if (v12) {
    uint64_t v24 = 0x65746E49656D6974;
  }
  else {
    uint64_t v24 = 0x44497463656A626FLL;
  }
  if (v12) {
    unint64_t v25 = 0xEC0000006C617672;
  }
  else {
    unint64_t v25 = 0xE800000000000000;
  }
  if (v24 == 0x44497463656A626FLL && v25 == 0xE800000000000000) {
    goto LABEL_46;
  }
  char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v34) {
    goto LABEL_5;
  }
  if (v24 == 0x65746E49656D6974 && v25 == 0xEC0000006C617672)
  {
LABEL_46:

    swift_bridgeObjectRelease_n();
    goto LABEL_6;
  }
  char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_5:

LABEL_6:
    uint64_t v2 = v43;
    goto LABEL_7;
  }
  sub_10074025C();
  uint64_t v36 = swift_allocError();
  swift_willThrow();
  swift_bridgeObjectRelease();
  uint64_t v46 = v36;
  swift_errorRetain();
  sub_100094134((uint64_t *)&unk_10090ABB0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    uint64_t v37 = self;
    id v38 = [v45 remObjectID];
    [v37 validationErrorMoveAcrossAccount:v38];

    swift_willThrow();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    unint64_t v39 = self;
    uint64_t v46 = 0;
    unint64_t v47 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    uint64_t v46 = 0xD00000000000001ALL;
    unint64_t v47 = 0x80000001007DC030;
    swift_getErrorValue();
    v40._countAndFlagsBits = Error.rem_errorDescription.getter();
    String.append(_:)(v40);
    swift_bridgeObjectRelease();
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v39 internalErrorWithDebugDescription:v41];

    swift_willThrow();
    swift_errorRelease();
  }
}

void sub_100730CB4(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_64:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
LABEL_65:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_65;
  }
LABEL_3:
  unint64_t v44 = v1 & 0xC000000000000001;
  uint64_t v3 = 4;
  unint64_t v42 = v1;
  uint64_t v43 = v2;
  while (1)
  {
    if (v44) {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v5 = *(id *)(v1 + 8 * v3);
    }
    id v45 = v5;
    uint64_t v6 = v3 - 3;
    if (__OFADD__(v3 - 4, 1))
    {
      __break(1u);
      goto LABEL_64;
    }
    v7._countAndFlagsBits = 0x49746E756F636361;
    v7._object = (void *)0xE900000000000044;
    Swift::Int v8 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B45B8, v7);
    if (v8)
    {
      if (v8 != 1)
      {
        if (qword_1009074C8 != -1) {
          swift_once();
        }
        uint64_t v13 = type metadata accessor for Logger();
        sub_10008E2DC(v13, (uint64_t)qword_100917690);
        unint64_t v14 = Logger.logObject.getter();
        os_log_type_t v15 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v14, v15))
        {
          sub_1000963CC(0, (unint64_t *)&qword_100910E40);
          uint64_t v16 = swift_slowAlloc();
          uint64_t v46 = swift_slowAlloc();
          *(_DWORD *)uint64_t v16 = 136446210;
          id v17 = [(id)swift_getObjCClassFromMetadata() description];
          uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v20 = v19;

          *(void *)(v16 + 4) = sub_1000C51B8(v18, v20, &v46);
          uint64_t v2 = v43;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v14, v15, "CDIngestableRelationshipKey is expected to define 'accountID' for every kind of CDIngestors (except REMCDAccount) {CDType: %{public}s}", (uint8_t *)v16, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          unint64_t v1 = v42;
          swift_slowDealloc();
        }

LABEL_7:
        if (v6 == v2) {
          goto LABEL_65;
        }
        goto LABEL_8;
      }
      int v9 = 1;
    }
    else
    {
      int v9 = 0;
    }
    v10._countAndFlagsBits = 0x44497463656A626FLL;
    v10._object = (void *)0xE800000000000000;
    Swift::Int v11 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B4C70, v10);
    if (!v11) {
      break;
    }
    if (v11 == 1)
    {
      int v12 = 1;
      goto LABEL_26;
    }
    if (qword_1009074C8 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_10008E2DC(v26, (uint64_t)qword_100917690);
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v27, v28))
    {

      unint64_t v1 = v42;
      goto LABEL_7;
    }
    uint64_t v29 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136446210;
    sub_1000963CC(0, (unint64_t *)&qword_100910E40);
    id v30 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v33 = v32;

    uint64_t v2 = v43;
    *(void *)(v29 + 4) = sub_1000C51B8(v31, v33, &v46);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "CDIngestableValueKey is expected to define 'objectID' for every kind of CDIngestors {CDType: %{public}s}", (uint8_t *)v29, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v1 = v42;
    if (v6 == v43) {
      goto LABEL_65;
    }
LABEL_8:
    ++v3;
  }
  int v12 = 0;
LABEL_26:
  if (v9) {
    uint64_t v21 = 0x44496D72616C61;
  }
  else {
    uint64_t v21 = 0x49746E756F636361;
  }
  if (v9) {
    unint64_t v22 = 0xE700000000000000;
  }
  else {
    unint64_t v22 = 0xE900000000000044;
  }
  if (v21 == 0x49746E756F636361 && v22 == 0xE900000000000044) {
    goto LABEL_37;
  }
  char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) == 0)
  {
    if (v21 == 0x44496D72616C61 && v22 == 0xE700000000000000)
    {
LABEL_37:
      swift_bridgeObjectRelease_n();
      goto LABEL_38;
    }
    char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0) {
      goto LABEL_5;
    }
  }
LABEL_38:
  if (v12) {
    uint64_t v24 = 0x706D6F4365746164;
  }
  else {
    uint64_t v24 = 0x44497463656A626FLL;
  }
  if (v12) {
    unint64_t v25 = 0xEE0073746E656E6FLL;
  }
  else {
    unint64_t v25 = 0xE800000000000000;
  }
  if (v24 == 0x44497463656A626FLL && v25 == 0xE800000000000000) {
    goto LABEL_46;
  }
  char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v34) {
    goto LABEL_5;
  }
  if (v24 == 0x706D6F4365746164 && v25 == 0xEE0073746E656E6FLL)
  {
LABEL_46:

    swift_bridgeObjectRelease_n();
    goto LABEL_6;
  }
  char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_5:

LABEL_6:
    uint64_t v2 = v43;
    goto LABEL_7;
  }
  sub_10074025C();
  uint64_t v36 = swift_allocError();
  swift_willThrow();
  swift_bridgeObjectRelease();
  uint64_t v46 = v36;
  swift_errorRetain();
  sub_100094134((uint64_t *)&unk_10090ABB0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    uint64_t v37 = self;
    id v38 = [v45 remObjectID];
    [v37 validationErrorMoveAcrossAccount:v38];

    swift_willThrow();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    unint64_t v39 = self;
    uint64_t v46 = 0;
    unint64_t v47 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    uint64_t v46 = 0xD00000000000001ALL;
    unint64_t v47 = 0x80000001007DC030;
    swift_getErrorValue();
    v40._countAndFlagsBits = Error.rem_errorDescription.getter();
    String.append(_:)(v40);
    swift_bridgeObjectRelease();
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v39 internalErrorWithDebugDescription:v41];

    swift_willThrow();
    swift_errorRelease();
  }
}

void sub_100731534(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_64:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
LABEL_65:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_65;
  }
LABEL_3:
  unint64_t v44 = v1 & 0xC000000000000001;
  uint64_t v3 = 4;
  unint64_t v42 = v1;
  uint64_t v43 = v2;
  while (1)
  {
    if (v44) {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v5 = *(id *)(v1 + 8 * v3);
    }
    id v45 = v5;
    uint64_t v6 = v3 - 3;
    if (__OFADD__(v3 - 4, 1))
    {
      __break(1u);
      goto LABEL_64;
    }
    v7._countAndFlagsBits = 0x49746E756F636361;
    v7._object = (void *)0xE900000000000044;
    Swift::Int v8 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B45B8, v7);
    if (v8)
    {
      if (v8 != 1)
      {
        if (qword_1009074C8 != -1) {
          swift_once();
        }
        uint64_t v13 = type metadata accessor for Logger();
        sub_10008E2DC(v13, (uint64_t)qword_100917690);
        unint64_t v14 = Logger.logObject.getter();
        os_log_type_t v15 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v14, v15))
        {
          sub_1000963CC(0, &qword_100910E00);
          uint64_t v16 = swift_slowAlloc();
          uint64_t v46 = swift_slowAlloc();
          *(_DWORD *)uint64_t v16 = 136446210;
          id v17 = [(id)swift_getObjCClassFromMetadata() description];
          uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v20 = v19;

          *(void *)(v16 + 4) = sub_1000C51B8(v18, v20, &v46);
          uint64_t v2 = v43;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v14, v15, "CDIngestableRelationshipKey is expected to define 'accountID' for every kind of CDIngestors (except REMCDAccount) {CDType: %{public}s}", (uint8_t *)v16, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          unint64_t v1 = v42;
          swift_slowDealloc();
        }

LABEL_7:
        if (v6 == v2) {
          goto LABEL_65;
        }
        goto LABEL_8;
      }
      int v9 = 1;
    }
    else
    {
      int v9 = 0;
    }
    v10._countAndFlagsBits = 0x44497463656A626FLL;
    v10._object = (void *)0xE800000000000000;
    Swift::Int v11 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B4D88, v10);
    if (!v11) {
      break;
    }
    if (v11 == 1)
    {
      int v12 = 1;
      goto LABEL_26;
    }
    if (qword_1009074C8 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_10008E2DC(v26, (uint64_t)qword_100917690);
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v27, v28))
    {

      unint64_t v1 = v42;
      goto LABEL_7;
    }
    uint64_t v29 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136446210;
    sub_1000963CC(0, &qword_100910E00);
    id v30 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v33 = v32;

    uint64_t v2 = v43;
    *(void *)(v29 + 4) = sub_1000C51B8(v31, v33, &v46);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "CDIngestableValueKey is expected to define 'objectID' for every kind of CDIngestors {CDType: %{public}s}", (uint8_t *)v29, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v1 = v42;
    if (v6 == v43) {
      goto LABEL_65;
    }
LABEL_8:
    ++v3;
  }
  int v12 = 0;
LABEL_26:
  if (v9) {
    uint64_t v21 = 0x44496D72616C61;
  }
  else {
    uint64_t v21 = 0x49746E756F636361;
  }
  if (v9) {
    unint64_t v22 = 0xE700000000000000;
  }
  else {
    unint64_t v22 = 0xE900000000000044;
  }
  if (v21 == 0x49746E756F636361 && v22 == 0xE900000000000044) {
    goto LABEL_37;
  }
  char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) == 0)
  {
    if (v21 == 0x44496D72616C61 && v22 == 0xE700000000000000)
    {
LABEL_37:
      swift_bridgeObjectRelease_n();
      goto LABEL_38;
    }
    char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0) {
      goto LABEL_5;
    }
  }
LABEL_38:
  if (v12) {
    uint64_t v24 = 0x746E657665;
  }
  else {
    uint64_t v24 = 0x44497463656A626FLL;
  }
  if (v12) {
    unint64_t v25 = 0xE500000000000000;
  }
  else {
    unint64_t v25 = 0xE800000000000000;
  }
  if (v24 == 0x44497463656A626FLL && v25 == 0xE800000000000000) {
    goto LABEL_46;
  }
  char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v34) {
    goto LABEL_5;
  }
  if (v24 == 0x746E657665 && v25 == 0xE500000000000000)
  {
LABEL_46:

    swift_bridgeObjectRelease_n();
    goto LABEL_6;
  }
  char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_5:

LABEL_6:
    uint64_t v2 = v43;
    goto LABEL_7;
  }
  sub_10074025C();
  uint64_t v36 = swift_allocError();
  swift_willThrow();
  swift_bridgeObjectRelease();
  uint64_t v46 = v36;
  swift_errorRetain();
  sub_100094134((uint64_t *)&unk_10090ABB0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    uint64_t v37 = self;
    id v38 = [v45 remObjectID];
    [v37 validationErrorMoveAcrossAccount:v38];

    swift_willThrow();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    unint64_t v39 = self;
    uint64_t v46 = 0;
    unint64_t v47 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    uint64_t v46 = 0xD00000000000001ALL;
    unint64_t v47 = 0x80000001007DC030;
    swift_getErrorValue();
    v40._countAndFlagsBits = Error.rem_errorDescription.getter();
    String.append(_:)(v40);
    swift_bridgeObjectRelease();
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v39 internalErrorWithDebugDescription:v41];

    swift_willThrow();
    swift_errorRelease();
  }
}

void sub_100731D94(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
    if (v37) {
      goto LABEL_3;
    }
LABEL_64:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v37 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v37) {
    goto LABEL_64;
  }
LABEL_3:
  unint64_t v1 = a1 & 0xC000000000000001;
  for (uint64_t i = 4; ; ++i)
  {
    id v3 = v1 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * i);
    id v39 = v3;
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    v5._countAndFlagsBits = 0x49746E756F636361;
    v5._object = (void *)0xE900000000000044;
    Swift::Int v6 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B4FB0, v5);
    if (!v6)
    {
      int v7 = 0;
LABEL_15:
      v8._rawValue = &off_1008B4918;
      int v9 = sub_100698378(v8, &qword_100915848);
      int v10 = v9;
      uint64_t v35 = i;
      if (v7) {
        uint64_t v11 = 0x7265646E696D6572;
      }
      else {
        uint64_t v11 = 0x49746E756F636361;
      }
      if (v7) {
        unint64_t v12 = 0xEA00000000004449;
      }
      else {
        unint64_t v12 = 0xE900000000000044;
      }
      int v13 = v9;
      uint64_t i = 0x7265646E696D6572;
      if (v11 == 0x49746E756F636361 && v12 == 0xE900000000000044)
      {
LABEL_26:
        swift_bridgeObjectRelease_n();
      }
      else
      {
        unint64_t v1 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v1 & 1) == 0)
        {
          if (v11 == 0x7265646E696D6572 && v12 == 0xEA00000000004449) {
            goto LABEL_26;
          }
          unint64_t v1 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v1 & 1) == 0)
          {
LABEL_45:

            unint64_t v1 = a1 & 0xC000000000000001;
            uint64_t i = v35;
LABEL_5:
            if (v4 == v37) {
              goto LABEL_64;
            }
            continue;
          }
        }
      }
      unint64_t v22 = 0xE800000000000000;
      uint64_t v23 = 0x44497463656A626FLL;
      switch(v13)
      {
        case 0:
          goto LABEL_36;
        case 1:
        case 3:
          goto LABEL_39;
        case 2:
          unint64_t v22 = 0xE300000000000000;
          uint64_t v23 = 7107189;
LABEL_36:
          if (v23 == 0x44497463656A626FLL && v22 == 0xE800000000000000)
          {
LABEL_38:
            unint64_t v1 = a1 & 0xC000000000000001;
            uint64_t i = v35;

            swift_bridgeObjectRelease_n();
            goto LABEL_5;
          }
LABEL_39:
          unint64_t v1 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v1 & 1) == 0)
          {
            switch(v10)
            {
              case 0:
              case 2:
              case 3:
                unint64_t v1 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v1 & 1) == 0)
                {
                  unint64_t v24 = 0xE800000000000000;
                  uint64_t v25 = 0x44497463656A626FLL;
                  switch(v10)
                  {
                    case 0:
                      goto LABEL_48;
                    case 1:
                    case 3:
                      goto LABEL_50;
                    case 2:
                      unint64_t v24 = 0xE300000000000000;
                      uint64_t v25 = 7107189;
LABEL_48:
                      if (v25 == 7107189 && v24 == 0xE300000000000000) {
                        goto LABEL_38;
                      }
LABEL_50:
                      unint64_t v1 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if (v1) {
                        goto LABEL_45;
                      }
                      unint64_t v26 = 0xE800000000000000;
                      uint64_t v27 = 0x44497463656A626FLL;
                      switch(&off_1008B5000)
                      {
                        case 0u:
                          break;
                        case 1u:
                          unint64_t v26 = 0xE300000000000000;
                          uint64_t v27 = 6911093;
                          break;
                        case 2u:
                          unint64_t v26 = 0xE300000000000000;
                          uint64_t v27 = 7107189;
                          break;
                        case 3u:
                          uint64_t v27 = 0x617461646174656DLL;
                          break;
                        default:
                          goto LABEL_4;
                      }
                      if (v27 == 0x617461646174656DLL && v26 == 0xE800000000000000) {
                        goto LABEL_38;
                      }
                      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if ((v28 & 1) == 0) {
                        goto LABEL_60;
                      }
                      goto LABEL_45;
                    default:
                      goto LABEL_4;
                  }
                }
                goto LABEL_45;
              case 1:
                goto LABEL_38;
              default:
                goto LABEL_4;
            }
          }
          break;
        default:
LABEL_4:

          goto LABEL_5;
      }
      goto LABEL_45;
    }
    if (v6 == 1)
    {
      int v7 = 1;
      goto LABEL_15;
    }
    if (qword_1009074C8 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10008E2DC(v14, (uint64_t)qword_100917690);
    os_log_type_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v15, v16))
    {

      goto LABEL_5;
    }
    sub_1000963CC(0, &qword_100915848);
    uint64_t v36 = i;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136446210;
    id v18 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;

    *(void *)(v17 + 4) = sub_1000C51B8(v19, v21, &v40);
    unint64_t v1 = a1 & 0xC000000000000001;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "CDIngestableRelationshipKey is expected to define 'accountID' for every kind of CDIngestors (except REMCDAccount) {CDType: %{public}s}", (uint8_t *)v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t i = v36;
    swift_slowDealloc();

    if (v4 == v37) {
      goto LABEL_64;
    }
  }
  __break(1u);
LABEL_60:
  sub_10074025C();
  uint64_t v29 = swift_allocError();
  swift_willThrow();
  swift_bridgeObjectRelease();
  uint64_t v40 = v29;
  swift_errorRetain();
  sub_100094134((uint64_t *)&unk_10090ABB0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    id v30 = self;
    id v31 = [v39 remObjectID];
    [v30 validationErrorMoveAcrossAccount:v31];

    swift_willThrow();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    unint64_t v32 = self;
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    uint64_t v40 = 0xD00000000000001ALL;
    unint64_t v41 = 0x80000001007DC030;
    swift_getErrorValue();
    v33._countAndFlagsBits = Error.rem_errorDescription.getter();
    String.append(_:)(v33);
    swift_bridgeObjectRelease();
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v32 internalErrorWithDebugDescription:v34];

    swift_willThrow();
    swift_errorRelease();
  }
}

void sub_10073288C(unint64_t a1, void (*a2)(void))
{
  if (!(a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_15:
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  if (!v5) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v6 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(a1 + 8 * v6);
    }
    Swift::OpaquePointer v8 = v7;
    uint64_t v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
      goto LABEL_15;
    }
    a2();
    if (v2) {
      break;
    }

    ++v6;
    if (v9 == v5) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  swift_errorRetain();
  sub_100094134((uint64_t *)&unk_10090ABB0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    int v10 = self;
    id v11 = [v8 remObjectID];
    [v10 validationErrorMoveAcrossAccount:v11];

    swift_willThrow();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    unint64_t v12 = self;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    v13._countAndFlagsBits = Error.rem_errorDescription.getter();
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v12 internalErrorWithDebugDescription:v14];

    swift_willThrow();
    swift_errorRelease();
  }
}

void sub_100732B04(unint64_t a1, void (*a2)(id, uint64_t))
{
  if (!(a1 >> 62))
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_15:
  swift_bridgeObjectRetain();
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  if (!v6) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v7 = *(void *)(v2 + 72);
  uint64_t v8 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v9 = *(id *)(a1 + 8 * v8);
    }
    int v10 = v9;
    uint64_t v2 = v8 - 3;
    if (__OFADD__(v8 - 4, 1))
    {
      __break(1u);
      goto LABEL_15;
    }
    a2(v9, v7);
    if (v3) {
      break;
    }

    ++v8;
    if (v2 == v6) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  swift_errorRetain();
  sub_100094134((uint64_t *)&unk_10090ABB0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    id v11 = self;
    id v12 = [v10 remObjectID];
    [v11 validationErrorMoveAcrossAccount:v12];

    swift_willThrow();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    Swift::String v13 = self;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    v14._countAndFlagsBits = Error.rem_errorDescription.getter();
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v13 internalErrorWithDebugDescription:v15];

    swift_willThrow();
    swift_errorRelease();
  }
}

uint64_t sub_100732D90(uint64_t a1, void *a2, SEL *a3, uint64_t *a4, unint64_t *a5, uint64_t *a6)
{
  unint64_t v22 = a6;
  uint64_t v23 = a1;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)&double v12 = __chkstk_darwin(v10).n128_u64[0];
  Swift::String v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [a2 *a3 v12];
  id v16 = [v15 uuid];

  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = UUID.uuidString.getter();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  unint64_t v26 = a2;
  uint64_t v24 = v17;
  uint64_t v25 = v19;
  sub_100094134(a4);
  sub_100742630(a5, v22);
  Dictionary<>.append(_:toCollectionUnderKey:)();
  return swift_bridgeObjectRelease();
}

void sub_100732F14(unint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  unint64_t v5 = v2;
  uint64_t v8 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v8 - 8);
  uint64_t v243 = (uint64_t)&v210 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v242 = (char *)&v210 - v11;
  uint64_t v248 = type metadata accessor for UUID();
  uint64_t v249 = *(void *)(v248 - 8);
  __chkstk_darwin(v248);
  long long v245 = (char *)&v210 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  os_log_t v244 = (char *)&v210 - v14;
  uint64_t v15 = type metadata accessor for Logger();
  unint64_t v240 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  long long v246 = (char *)&v210 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (unint64_t *)a2[2];
  uint64_t v17 = a2[3];
  uint64_t v250 = a2;
  id v241 = (id)a2[4];
  uint64_t v19 = qword_1009073A0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19 != -1) {
    goto LABEL_166;
  }
LABEL_2:
  uint64_t v20 = sub_10008E2DC(v15, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v252 = v20;
  uint64_t v21 = Logger.logObject.getter();
  uint64_t v22 = static os_log_type_t.info.getter();
  BOOL v23 = os_log_type_enabled(v21, (os_log_type_t)v22);
  uint64_t v24 = (_WORD *)(a1 >> 62);
  unint64_t v253 = v5;
  unint64_t v254 = a1;
  uint64_t v247 = v15;
  uint64_t v251 = (_WORD *)(a1 >> 62);
  if (v23)
  {
    LODWORD(v238) = v22;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    os_log_t v255 = (char *)v25;
    *(_DWORD *)uint64_t v22 = 136446978;
    uint64_t v258 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v255);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v22 + 12) = 2048;
    uint64_t v239 = v18;
    uint64_t v237 = (uint64_t)v25;
    if (!v24)
    {
      uint64_t v26 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
    goto LABEL_170;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v24)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    id v31 = (char *)_swiftEmptyArrayStorage;
    if (!v17) {
      break;
    }
    os_log_t v255 = (char *)_swiftEmptyArrayStorage;
    uint64_t v21 = &v255;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v32 = 0;
      unint64_t v5 = a1 & 0xC000000000000001;
      uint64_t v18 = &qword_100915848;
      uint64_t v22 = (uint64_t)off_1008AA4A8;
      while (v17 != v32)
      {
        if (v5) {
          id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v33 = *(id *)(a1 + 8 * v32 + 32);
        }
        id v34 = v33;
        sub_100694DE8([v34 remObjectID], &qword_100915848);
        if (v4)
        {

          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        ++v32;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v15 = *((void *)v255 + 2);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        a1 = v254;
        if (v17 == v32)
        {
          id v31 = v255;
          unint64_t v5 = v253;
          uint64_t v15 = v247;
          uint64_t v24 = v251;
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
LABEL_166:
      swift_once();
      goto LABEL_2;
    }
    __break(1u);
LABEL_169:
    __break(1u);
LABEL_170:
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v258 = (void *)v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2082;
    sub_1000963CC(0, &qword_100915848);
    id v27 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v30 = v29;

    uint64_t v258 = (void *)sub_1000C51B8(v28, v30, (uint64_t *)&v255);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a1 = v254;
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 32) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v258 = (void *)sub_1000C51B8((uint64_t)v239, v17, (uint64_t *)&v255);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v238, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v22, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v5 = v253;
    uint64_t v15 = v247;
    uint64_t v24 = v251;
  }
LABEL_19:
  uint64_t v35 = *(void *)(v5 + 96);
  if (v35 <= 1)
  {
    if (v35)
    {
      if (v35 != 1) {
        goto LABEL_173;
      }
      swift_bridgeObjectRelease();
      uint64_t v46 = Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v46, v47))
      {
        unint64_t v48 = (uint8_t *)swift_slowAlloc();
        os_log_t v255 = (char *)swift_slowAlloc();
        *(_DWORD *)unint64_t v48 = 136315138;
        long long v246 = (char *)(v48 + 4);
        uint64_t v22 = (uint64_t)[self cdEntityName];
        uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v51 = v50;

        uint64_t v52 = v49;
        a1 = v254;
        uint64_t v258 = (void *)sub_1000C51B8(v52, v51, (uint64_t *)&v255);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        unint64_t v5 = v253;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "Skipping fetch during upsert {CDType: %s}", v48, 0xCu);
        swift_arrayDestroy();
        uint64_t v24 = v251;
        swift_slowDealloc();
        swift_slowDealloc();
      }

      uint64_t v17 = (uint64_t)v250;
      unint64_t v240 = sub_1002EEDA0((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v45 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v24) {
        goto LABEL_31;
      }
      goto LABEL_37;
    }
  }
  else if ((unint64_t)(v35 - 2) >= 3 && v35 != 4499 && v35 != 4599)
  {
LABEL_173:
    (*(void (**)(char *, uint64_t, uint64_t))(v240 + 16))(v246, v252, v15);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
    __break(1u);
    JUMPOUT(0x100735750);
  }
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v36, v37))
  {
    id v38 = (uint8_t *)swift_slowAlloc();
    id v39 = (char *)swift_slowAlloc();
    long long v246 = v31;
    os_log_t v255 = v39;
    *(_DWORD *)id v38 = 136315138;
    unint64_t v240 = (unint64_t)(v38 + 4);
    id v40 = [self cdEntityName];
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v42 = v41;

    a1 = v254;
    uint64_t v258 = (void *)sub_1000C51B8(v22, v42, (uint64_t *)&v255);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Performing fetch during upsert {CDType: %s}", v38, 0xCu);
    swift_arrayDestroy();
    id v31 = v246;
    unint64_t v5 = v253;
    swift_slowDealloc();
    uint64_t v24 = v251;
    swift_slowDealloc();
  }

  uint64_t v17 = (uint64_t)v250;
  uint64_t v43 = sub_1007138A8((uint64_t)v31, (uint64_t)v250);
  swift_bridgeObjectRelease();
  if (v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v240 = (unint64_t)v43;
  uint64_t v45 = a1 & 0xFFFFFFFFFFFFFF8;
  if (!v24)
  {
LABEL_31:
    uint64_t v21 = *(NSObject **)(v45 + 16);
    if (!v21) {
      goto LABEL_151;
    }
    goto LABEL_38;
  }
LABEL_37:
  swift_bridgeObjectRetain();
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v21) {
    goto LABEL_151;
  }
LABEL_38:
  id v53 = 0;
  uint64_t v227 = v5 + 24;
  uint64_t v230 = v17 + 48;
  uint64_t v226 = (void **)(v17 + 56);
  unint64_t v232 = a1 & 0xC000000000000001;
  uint64_t v225 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v224 = (char *)(a1 + 32);
  uint64_t v234 = (void (**)(char *, uint64_t))(v249 + 8);
  uint64_t v233 = &v259;
  uint64_t v229 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v249 + 56);
  long long v228 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v249 + 48);
  unsigned __int8 v223 = (char *)&v258 + 4;
  *(void *)&long long v44 = 136446978;
  long long v222 = v44;
  *(void *)&long long v44 = 136446210;
  long long v236 = v44;
  *(void *)&long long v44 = 136447490;
  long long v219 = v44;
  *(void *)&long long v44 = 136447234;
  long long v216 = v44;
  *(void *)&long long v44 = 136446466;
  long long v220 = v44;
  unint64_t v221 = (char *)&type metadata for Any + 8;
  unint64_t v231 = v21;
  while (1)
  {
    if (v232)
    {
      id v54 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v55 = __OFADD__(v53, 1);
      uint64_t v56 = ((char *)&v53->isa + 1);
      if (v55) {
        goto LABEL_169;
      }
      goto LABEL_45;
    }
    if ((unint64_t)v53 >= *(void *)(v225 + 16)) {
      break;
    }
    id v54 = *(id *)&v224[8 * (void)v53];
    BOOL v55 = __OFADD__(v53, 1);
    uint64_t v56 = ((char *)&v53->isa + 1);
    if (v55) {
      goto LABEL_169;
    }
LABEL_45:
    os_log_t v235 = v56;
    id v57 = (char *)v54;
    uint64_t v58 = sub_100694DE8([v57 remObjectID], &qword_100915848);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    uint64_t v250 = v58;
    uint64_t v251 = 0;

    long long v246 = v57;
    id v59 = [v57 accountID];
    id v60 = [v59 uuid];

    uint64_t v61 = v244;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v62 = UUID.uuidString.getter();
    uint64_t v64 = v63;
    uint64_t v65 = *v234;
    uint64_t v66 = v61;
    uint64_t v67 = v248;
    (*v234)(v66, v248);
    id v68 = [self localInternalAccountID];
    id v69 = [v68 uuid];

    char v70 = v245;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v71 = UUID.uuidString.getter();
    uint64_t v73 = v72;
    v65(v70, v67);
    unint64_t v74 = v65;
    if (v62 == v71 && v64 == v73)
    {
      swift_bridgeObjectRelease_n();
      id v75 = v250;
    }
    else
    {
      char v76 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v77 = v240;
      id v75 = v250;
      if ((v76 & 1) == 0)
      {
        uint64_t v24 = v246;
        goto LABEL_56;
      }
    }
    int v78 = 0x7FFFFFFF;
    id v79 = v251;
    uint64_t v24 = v246;
    switch(*(unsigned __int16 *)(v253 + 68) >> 14)
    {
      case 2:
        int v78 = *(_DWORD *)(v253 + 64);
        break;
      case 3:
        break;
      default:
        int v78 = 2147483519;
        break;
    }
    sub_100662770(2, v78);
    if (v79)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    uint64_t v251 = 0;
    unint64_t v77 = v240;
LABEL_56:
    v80._rawValue = &off_1008B4918;
    uint64_t v17 = sub_100698378(v80, &qword_100915848);
    if (*(void *)(v77 + 16))
    {
      id v81 = v75;
      unint64_t v82 = sub_10030703C(v81);
      if (v83)
      {
        id v84 = *(id *)(*(void *)(v77 + 56) + 8 * v82);

        id v85 = v81;
        unint64_t v86 = Logger.logObject.getter();
        os_log_type_t v87 = static os_log_type_t.info.getter();
        uint64_t v22 = v87;
        if (!os_log_type_enabled(v86, v87))
        {

          goto LABEL_134;
        }
        uint64_t v24 = (_WORD *)swift_slowAlloc();
        unint64_t v88 = (void *)swift_slowAlloc();
        uint64_t v249 = swift_slowAlloc();
        os_log_t v255 = (char *)v249;
        *(_DWORD *)uint64_t v24 = v220;
        uint64_t v258 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v255);
        uint64_t v250 = v84;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v24[6] = 2114;
        uint64_t v258 = v85;
        uint64_t v17 = (uint64_t)v85;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v88 = v85;

        _os_log_impl((void *)&_mh_execute_header, v86, (os_log_type_t)v22, "[%{public}s] Skipping merge() and updateChangeCount() since this ingestable is immutable and is not a new insertion {objectID: %{public}@}", (uint8_t *)v24, 0x16u);
        sub_100094134((uint64_t *)&unk_10090A040);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        goto LABEL_99;
      }
    }
    unint64_t v89 = 0xE800000000000000;
    uint64_t v90 = 0x44497463656A626FLL;
    switch((char)v17)
    {
      case 0:
        goto LABEL_63;
      case 1:
      case 3:
        goto LABEL_66;
      case 2:
        unint64_t v89 = 0xE300000000000000;
        uint64_t v90 = 7107189;
LABEL_63:
        if (v90 == 0x44497463656A626FLL && v89 == 0xE800000000000000)
        {
LABEL_65:
          swift_bridgeObjectRelease_n();
        }
        else
        {
LABEL_66:
          char v91 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v91 & 1) == 0)
          {
            unint64_t v185 = 0xE800000000000000;
            uint64_t v186 = 0x44497463656A626FLL;
            switch((int)v17)
            {
              case 0:
                goto LABEL_129;
              case 1:
                unint64_t v185 = 0xE300000000000000;
                uint64_t v186 = 6911093;
                goto LABEL_129;
              case 2:
                unint64_t v185 = 0xE300000000000000;
                uint64_t v186 = 7107189;
                goto LABEL_129;
              case 3:
                uint64_t v186 = 0x617461646174656DLL;
LABEL_129:
                if (v186 == 6911093 && v185 == 0xE300000000000000) {
                  goto LABEL_65;
                }
                char v187 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v187 & 1) == 0)
                {
                  unint64_t v193 = 0xE800000000000000;
                  uint64_t v194 = 0x44497463656A626FLL;
                  switch((int)v17)
                  {
                    case 0:
                      goto LABEL_140;
                    case 1:
                      unint64_t v193 = 0xE300000000000000;
                      uint64_t v194 = 6911093;
                      goto LABEL_140;
                    case 2:
                      unint64_t v193 = 0xE300000000000000;
                      uint64_t v194 = 7107189;
                      goto LABEL_140;
                    case 3:
                      uint64_t v194 = 0x617461646174656DLL;
LABEL_140:
                      if (v194 == 7107189 && v193 == 0xE300000000000000) {
                        goto LABEL_65;
                      }
                      char v195 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if ((v195 & 1) == 0)
                      {
                        unint64_t v196 = 0xE800000000000000;
                        uint64_t v197 = 0x44497463656A626FLL;
                        switch(&unk_1008B6000)
                        {
                          case 0u:
                            goto LABEL_147;
                          case 1u:
                            unint64_t v196 = 0xE300000000000000;
                            uint64_t v197 = 6911093;
                            goto LABEL_147;
                          case 2u:
                            unint64_t v196 = 0xE300000000000000;
                            uint64_t v197 = 7107189;
                            goto LABEL_147;
                          case 3u:
                            uint64_t v197 = 0x617461646174656DLL;
LABEL_147:
                            if (v197 == 0x617461646174656DLL && v196 == 0xE800000000000000) {
                              goto LABEL_65;
                            }
                            char v198 = _stringCompareWithSmolCheck(_:_:expecting:)();
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            if ((v198 & 1) == 0) {
                              goto LABEL_150;
                            }
                            goto LABEL_67;
                          default:
                            goto LABEL_150;
                        }
                      }
                      break;
                    default:
                      goto LABEL_150;
                  }
                }
                break;
              default:
                goto LABEL_150;
            }
          }
        }
LABEL_67:
        uint64_t v92 = *(void **)(v253 + 88);
        sub_1000963CC(0, &qword_100915848);
        ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
        id v94 = [ObjCClassFromMetadata entity];
        id v95 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v94 insertIntoManagedObjectContext:v92];
        id v96 = v241;
        [v92 assignObject:v95 toPersistentStore:v96];

        id v97 = v95;
        id v98 = [v75 uuid];
        uint64_t v99 = (uint64_t)v242;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v100 = v248;
        (*v229)(v99, 0, 1, v248);
        uint64_t v101 = v243;
        sub_1001248EC(v99, v243);
        int v102 = (*v228)(v101, 1, v100);
        Class isa = 0;
        if (v102 != 1)
        {
          uint64_t v104 = v243;
          Class isa = UUID._bridgeToObjectiveC()().super.isa;
          v74((char *)v104, v248);
        }
        [v97 setIdentifier:isa v210];

        sub_1001260DC(v99);
        id v105 = v75;
        uint64_t v18 = (unint64_t *)v253;
        swift_retain_n();
        id v106 = v97;
        uint64_t v107 = v105;
        uint64_t v108 = v106;
        uint64_t v109 = Logger.logObject.getter();
        os_log_type_t v110 = static os_log_type_t.default.getter();
        BOOL v111 = os_log_type_enabled(v109, v110);
        uint64_t v250 = v108;
        if (v111)
        {
          uint64_t v112 = swift_slowAlloc();
          uint64_t v113 = (void *)swift_slowAlloc();
          uint64_t v249 = swift_slowAlloc();
          os_log_t v255 = (char *)v249;
          *(_DWORD *)uint64_t v112 = v222;
          uint64_t v258 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v255);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v112 + 12) = 2082;
          sub_10010B4E8(v227, (uint64_t)v257);
          sub_10073F754((uint64_t)v257, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
          uint64_t v114 = sub_100696CF4();
          unint64_t v116 = v115;
          sub_10073F754((uint64_t)v257, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
          uint64_t v258 = (void *)sub_1000C51B8(v114, v116, (uint64_t *)&v255);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v112 + 22) = 2114;
          uint64_t v258 = v107;
          uint64_t v117 = v107;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v113 = v107;

          *(_WORD *)(v112 + 32) = 2112;
          id v118 = [v250 objectID];
          uint64_t v258 = v118;
          uint64_t v108 = v250;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          v113[1] = v118;

          _os_log_impl((void *)&_mh_execute_header, v109, v110, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v112, 0x2Au);
          sub_100094134((uint64_t *)&unk_10090A040);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v18 = (unint64_t *)v253;
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        swift_beginAccess();
        uint64_t v17 = v107;
        sub_1001A6B7C((uint64_t)v108, v17);
        swift_endAccess();

        uint64_t v119 = 4;
        uint64_t v249 = 4;
        uint64_t v120 = &byte_1008B68D0;
        break;
      default:
LABEL_150:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        [self noSuchObjectErrorWithObjectID:v75];
        swift_willThrow();

        return;
    }
    do
    {
      char v122 = *v120++;
      char v121 = v122;
      if (((*((unsigned int *)v18 + 16) | ((unint64_t)*((unsigned __int16 *)v18 + 34) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
      {
        uint64_t v123 = Logger.logObject.getter();
        os_log_type_t v124 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v123, v124))
        {
          uint64_t v125 = swift_slowAlloc();
          os_log_t v255 = (char *)swift_slowAlloc();
          *(_DWORD *)uint64_t v125 = v236;
          LOBYTE(v258) = v121;
          uint64_t v126 = String.init<A>(describing:)();
          *(void *)(v125 + 4) = sub_1000C51B8(v126, v127, (uint64_t *)&v255);
          uint64_t v18 = (unint64_t *)v253;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v123, v124, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v125, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
      }
      LODWORD(v24) = *((_DWORD *)v18 + 16);
      if (*((unsigned __int16 *)v18 + 34) >> 14 == 2 && (v18[8] & 1) == 0)
      {
        if (qword_100907AE0 != -1) {
          goto LABEL_172;
        }
        goto LABEL_153;
      }
      --v119;
    }
    while (v119);
    swift_retain_n();
    id v129 = (id)v17;
    Swift::String v130 = v250;
    Swift::String v131 = v129;
    uint64_t v17 = v130;
    Swift::String v132 = Logger.logObject.getter();
    int v133 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v132, (os_log_type_t)v133))
    {
      LODWORD(v217) = v133;
      uint64_t v237 = (uint64_t)v132;
      unint64_t v134 = v131;
      uint64_t v135 = swift_slowAlloc();
      uint64_t v250 = (void *)swift_slowAlloc();
      unsigned __int8 v218 = (char *)swift_slowAlloc();
      os_log_t v255 = v218;
      *(_DWORD *)uint64_t v135 = v219;
      uint64_t v258 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v255);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v136 = (unint64_t *)v17;
      *(_WORD *)(v135 + 12) = 2082;
      sub_10010B4E8(v227, (uint64_t)v256);
      sub_10073F754((uint64_t)v256, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v137 = sub_100696CF4();
      unint64_t v139 = v138;
      sub_10073F754((uint64_t)v256, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      uint64_t v258 = (void *)sub_1000C51B8(v137, v139, (uint64_t *)&v255);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v135 + 22) = 2114;
      uint64_t v258 = v134;
      uint64_t v140 = v134;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v238 = v134;
      unint64_t v141 = v250;
      *uint64_t v250 = v134;

      *(_WORD *)(v135 + 32) = 2112;
      unint64_t v142 = [v136 objectID];
      uint64_t v258 = v142;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v141[1] = v142;

      uint64_t v239 = v136;
      *(_WORD *)(v135 + 42) = 2082;
      uint64_t v143 = 4;
      uint64_t v258 = _swiftEmptyArrayStorage;
      sub_1001DE058(0, 4, 0);
      uint64_t v144 = v258;
      unint64_t v145 = &byte_1008B68D0;
      do
      {
        int v146 = *v145++;
        unint64_t v147 = 0xE800000000000000;
        uint64_t v148 = 0x44497463656A626FLL;
        switch(v146)
        {
          case 1:
            unint64_t v147 = 0xE300000000000000;
            uint64_t v148 = 6911093;
            break;
          case 2:
            unint64_t v147 = 0xE300000000000000;
            uint64_t v148 = 7107189;
            break;
          case 3:
            uint64_t v148 = 0x617461646174656DLL;
            break;
          default:
            break;
        }
        uint64_t v258 = v144;
        unint64_t v150 = v144[2];
        unint64_t v149 = v144[3];
        if (v150 >= v149 >> 1)
        {
          sub_1001DE058(v149 > 1, v150 + 1, 1);
          uint64_t v144 = v258;
        }
        v144[2] = v150 + 1;
        uint64_t v151 = &v144[2 * v150];
        v151[4] = v148;
        v151[5] = v147;
        --v143;
      }
      while (v143);
      uint64_t v18 = (unint64_t *)v253;
      uint64_t v152 = Array.description.getter();
      unint64_t v154 = v153;
      swift_bridgeObjectRelease();
      uint64_t v258 = (void *)sub_1000C51B8(v152, v154, (uint64_t *)&v255);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v135 + 52) = 1024;
      int v155 = *((unsigned __int8 *)v18 + 104);
      swift_release();
      LODWORD(v258) = v155;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      os_log_t v156 = (os_log_t)v237;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v237, (os_log_type_t)v217, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v135, 0x3Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v157 = v246;
      uint64_t v17 = (uint64_t)v239;
      Swift::String v131 = v238;
    }
    else
    {

      swift_release_n();
      unint64_t v157 = v246;
    }
    unint64_t v158 = v251;
    sub_100498070(v157, (void *)v17, (uint64_t)&off_1008B68B0);
    if (v158)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    uint64_t v251 = 0;
    id v159 = [(id)v17 changedValues];
    uint64_t v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v160 = v226;
    swift_beginAccess();
    os_log_type_t v161 = v131;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v258 = *v160;
    *uint64_t v160 = (void *)0x8000000000000000;
    uint64_t v24 = (_WORD *)v22;
    sub_1002C4FAC(v22, v161, isUniquelyReferenced_nonNull_native);
    *uint64_t v160 = v258;

    swift_bridgeObjectRelease();
    swift_endAccess();
    int v163 = *((unsigned __int8 *)v18 + 104);
    if (v249 && (v163 & 1) != 0)
    {
      unint64_t v86 = (id)v17;
      swift_bridgeObjectRelease();
      [v86 updateChangeCount];

LABEL_99:
      goto LABEL_134;
    }
    uint64_t v164 = v161;
    swift_retain_n();
    a1 = v164;
    uint64_t v22 = (uint64_t)(id)v17;
    uint64_t v17 = (uint64_t)v24;
    swift_bridgeObjectRetain();
    unint64_t v165 = Logger.logObject.getter();
    int v166 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v165, (os_log_type_t)v166))
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      goto LABEL_134;
    }
    unsigned __int8 v218 = (char *)v22;
    int v213 = v166;
    os_log_t v217 = v165;
    uint64_t v167 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    unsigned __int8 v214 = (char *)swift_slowAlloc();
    os_log_t v255 = v214;
    *(_DWORD *)uint64_t v167 = v216;
    uint64_t v258 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v255);
    unint64_t v5 = (unint64_t)v233;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v167 + 12) = 1024;
    swift_release();
    LODWORD(v258) = v163;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v167 + 18) = 1024;
    LODWORD(v258) = 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v167 + 24) = 2114;
    uint64_t v258 = (void *)a1;
    uint64_t v4 = (uint64_t)(id)a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v212 = v22;
    *(void *)uint64_t v22 = a1;

    id v211 = (id)v4;
    uint64_t v215 = (uint8_t *)v167;
    *(_WORD *)(v167 + 34) = 2082;
    uint64_t v15 = *(void *)(v17 + 16);
    if (!v15) {
      goto LABEL_133;
    }
    uint64_t v258 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1001DE058(0, v15, 0);
    uint64_t v168 = v258;
    uint64_t v169 = sub_10072617C(v17);
    LODWORD(v22) = v170;
    uint64_t v171 = 0;
    uint64_t v172 = v17 + 64;
    char v173 = *(unsigned char *)(v17 + 32);
    uint64_t v237 = v170;
    uint64_t v210 = v17 + 88;
    uint64_t v238 = (void *)v15;
    uint64_t v239 = (unint64_t *)(v17 + 64);
    while (2)
    {
      if (v169 < 0 || v169 >= 1 << v173) {
        goto LABEL_160;
      }
      a1 = (unint64_t)v169 >> 6;
      uint64_t v4 = 1 << v169;
      if ((*(void *)(v172 + 8 * ((unint64_t)v169 >> 6)) & (1 << v169)) == 0) {
        goto LABEL_161;
      }
      if (*(_DWORD *)(v17 + 36) != v22) {
        goto LABEL_162;
      }
      uint64_t v176 = *(void *)(v17 + 48) + 16 * v169;
      uint64_t v177 = *(void **)v176;
      uint64_t v15 = *(void *)(v176 + 8);
      uint64_t v249 = v171;
      uint64_t v250 = v177;
      uint64_t v258 = v168;
      unint64_t v5 = v168[2];
      unint64_t v178 = v168[3];
      uint64_t v18 = (unint64_t *)(v5 + 1);
      swift_bridgeObjectRetain();
      if (v5 >= v178 >> 1)
      {
        sub_1001DE058(v178 > 1, v5 + 1, 1);
        uint64_t v168 = v258;
      }
      v168[2] = v18;
      uint64_t v179 = &v168[2 * v5];
      v179[4] = v250;
      v179[5] = v15;
      char v173 = *(unsigned char *)(v17 + 32);
      unint64_t v174 = 1 << v173;
      if (v169 >= 1 << v173) {
        goto LABEL_163;
      }
      uint64_t v172 = (uint64_t)v239;
      unint64_t v180 = v239[a1];
      if ((v180 & v4) == 0) {
        goto LABEL_164;
      }
      if (*(_DWORD *)(v17 + 36) != v22) {
        goto LABEL_165;
      }
      unint64_t v181 = v180 & (-2 << (v169 & 0x3F));
      if (v181)
      {
        unint64_t v174 = __clz(__rbit64(v181)) | v169 & 0xFFFFFFFFFFFFFFC0;
        uint64_t v15 = (uint64_t)v238;
        uint64_t v175 = v249;
      }
      else
      {
        id v182 = (char *)(a1 + 1);
        unint64_t v183 = (v174 + 63) >> 6;
        uint64_t v15 = (uint64_t)v238;
        uint64_t v175 = v249;
        if (a1 + 1 < v183)
        {
          unint64_t v184 = v239[(void)v182];
          if (v184) {
            goto LABEL_117;
          }
          id v182 = (char *)(a1 + 2);
          if (a1 + 2 < v183)
          {
            unint64_t v184 = v239[(void)v182];
            if (v184)
            {
LABEL_117:
              unint64_t v174 = __clz(__rbit64(v184)) + ((void)v182 << 6);
            }
            else
            {
              while (v183 - 3 != a1)
              {
                unint64_t v184 = *(void *)(v210 + 8 * a1++);
                if (v184)
                {
                  id v182 = (char *)(a1 + 2);
                  goto LABEL_117;
                }
              }
            }
          }
        }
      }
      uint64_t v171 = v175 + 1;
      uint64_t v22 = v237;
      uint64_t v169 = v174;
      a1 = v254;
      if (v171 != v15) {
        continue;
      }
      break;
    }
    swift_bridgeObjectRelease();
LABEL_133:
    unsigned int v188 = v218;
    uint64_t v189 = v215;
    uint64_t v190 = Array.description.getter();
    uint64_t v24 = v191;
    swift_bridgeObjectRelease();
    uint64_t v258 = (void *)sub_1000C51B8(v190, (unint64_t)v24, (uint64_t *)&v255);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v192 = v217;
    _os_log_impl((void *)&_mh_execute_header, v217, (os_log_type_t)v213, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v189, 0x2Cu);
    sub_100094134((uint64_t *)&unk_10090A040);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

LABEL_134:
    id v53 = v235;
    uint64_t v21 = v231;
    uint64_t v4 = (uint64_t)v251;
    if (v235 == v231)
    {
LABEL_151:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
LABEL_172:
  swift_once();
LABEL_153:
  sub_10008E2DC(v247, (uint64_t)qword_100920A70);
  uint64_t v199 = Logger.logObject.getter();
  os_log_type_t v200 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v199, v200))
  {
    uint64_t v201 = swift_slowAlloc();
    os_log_t v255 = (char *)swift_slowAlloc();
    *(_DWORD *)uint64_t v201 = v220;
    uint64_t v202 = sub_100662CC0(1);
    uint64_t v258 = (void *)sub_1000C51B8(v202, v203, (uint64_t *)&v255);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v201 + 12) = 2082;
    uint64_t v204 = sub_100662CC0((__int16)v24);
    uint64_t v258 = (void *)sub_1000C51B8(v204, v205, (uint64_t *)&v255);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v199, v200, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v201, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v206 = self;
  NSString v207 = String._bridgeToObjectiveC()();
  sub_100662CC0(1);
  NSString v208 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100662CC0((__int16)v24);
  NSString v209 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v206 unauthorizedErrorWithMissingEntitlement:v207 requestedAccessLevel:v208 currentAccesslevel:v209];

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1007357F0(unint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v8 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v8 - 8);
  uint64_t v253 = (uint64_t)&v217 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v254 = (uint64_t)&v217 - v11;
  uint64_t v258 = type metadata accessor for UUID();
  unint64_t v252 = *(void *)(v258 - 8);
  __chkstk_darwin(v258);
  id v256 = (char *)&v217 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  os_log_t v255 = (char *)&v217 - v14;
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v249 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v250 = (char *)&v217 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a2[2];
  uint64_t v18 = (__objc2_class **)a2[3];
  uint64_t v257 = a2;
  id v251 = (id)a2[4];
  uint64_t v19 = qword_1009073A0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_10008E2DC(v15, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v260 = v20;
  uint64_t v21 = Logger.logObject.getter();
  uint64_t v22 = static os_log_type_t.info.getter();
  BOOL v23 = os_log_type_enabled(v21, (os_log_type_t)v22);
  unint64_t v24 = a1 >> 62;
  uint64_t v261 = v5;
  unint64_t v262 = a1;
  uint64_t v259 = a1 >> 62;
  uint64_t v248 = v15;
  if (!v23)
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  LODWORD(v246) = v22;
  uint64_t v22 = swift_slowAlloc();
  uint64_t v25 = (char *)swift_slowAlloc();
  uint64_t v263 = v25;
  *(_DWORD *)uint64_t v22 = 136446978;
  uint64_t v266 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v263);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *(_WORD *)(v22 + 12) = 2048;
  uint64_t v247 = v17;
  long long v245 = v25;
  if (v24) {
    goto LABEL_170;
  }
  uint64_t v26 = *(void *)((v262 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    uint64_t v266 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2082;
    sub_1000963CC(0, (unint64_t *)&unk_100915850);
    id v27 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v30 = v29;

    uint64_t v266 = sub_1000C51B8(v28, v30, (uint64_t *)&v263);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 32) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v266 = sub_1000C51B8(v247, (unint64_t)v18, (uint64_t *)&v263);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v246, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v22, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a1 = v262;
    unint64_t v24 = v259;
LABEL_8:
    if (v24)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v31)
    {
      uint64_t v36 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_21;
    }
    uint64_t v263 = (char *)_swiftEmptyArrayStorage;
    uint64_t v21 = &v263;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v31 & 0x8000000000000000) == 0) {
      break;
    }
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
LABEL_167:
    __break(1u);
LABEL_168:
    __break(1u);
LABEL_169:
    __break(1u);
LABEL_170:
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  id v32 = 0;
  unint64_t v33 = a1 & 0xC000000000000001;
  uint64_t v18 = off_1008AA458;
  do
  {
    if ((id)v31 == v32)
    {
      __break(1u);
LABEL_161:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_157;
    }
    if (v33) {
      id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v34 = *(id *)(a1 + 8 * (void)v32 + 32);
    }
    id v35 = v34;
    sub_100694DE8([v35 remObjectID], (unint64_t *)&unk_100915850);
    if (v4)
    {

      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    id v32 = (char *)v32 + 1;

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    a1 = v262;
  }
  while ((id)v31 != v32);
  uint64_t v36 = v263;
  unint64_t v24 = v259;
LABEL_21:
  uint64_t v37 = v261;
  uint64_t v38 = *(void *)(v261 + 96);
  if (v38 <= 1)
  {
    if (v38)
    {
      if (v38 != 1) {
        goto LABEL_174;
      }
      swift_bridgeObjectRelease();
      unint64_t v50 = Logger.logObject.getter();
      os_log_type_t v51 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = (uint8_t *)swift_slowAlloc();
        uint64_t v263 = (char *)swift_slowAlloc();
        *(_DWORD *)uint64_t v52 = 136315138;
        uint64_t v250 = (char *)(v52 + 4);
        id v53 = [self cdEntityName];
        uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v55;

        a1 = v262;
        uint64_t v56 = v54;
        unint64_t v24 = v259;
        uint64_t v266 = sub_1000C51B8(v56, (unint64_t)v18, (uint64_t *)&v263);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v50, v51, "Skipping fetch during upsert {CDType: %s}", v52, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v37 = v261;
        swift_slowDealloc();
      }

      unint64_t v47 = (unint64_t)v257;
      uint64_t v48 = sub_1002EEDAC((uint64_t)_swiftEmptyArrayStorage);
      goto LABEL_36;
    }
  }
  else if ((unint64_t)(v38 - 2) >= 3 && v38 != 4499 && v38 != 4599)
  {
LABEL_174:
    (*(void (**)(char *, uint64_t, uint64_t))(v249 + 16))(v250, v260, v248);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
    __break(1u);
    JUMPOUT(0x100737E68);
  }
  id v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v250 = v36;
    unint64_t v41 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = (__objc2_class **)swift_slowAlloc();
    uint64_t v263 = (char *)v18;
    *(_DWORD *)unint64_t v41 = 136315138;
    uint64_t v249 = (uint64_t)(v41 + 4);
    id v42 = [self cdEntityName];
    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v45 = v44;

    unint64_t v24 = v259;
    uint64_t v46 = v43;
    a1 = v262;
    uint64_t v266 = sub_1000C51B8(v46, v45, (uint64_t *)&v263);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v36 = v250;
    uint64_t v37 = v261;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "Performing fetch during upsert {CDType: %s}", v41, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  unint64_t v47 = (unint64_t)v257;
  uint64_t v48 = (uint64_t)sub_100713D10((uint64_t)v36, (uint64_t)v257);
  swift_bridgeObjectRelease();
  if (v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
LABEL_36:
  if (v24)
  {
    swift_bridgeObjectRetain();
    uint64_t v57 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v57) {
      goto LABEL_151;
    }
  }
  else
  {
    uint64_t v57 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v57) {
      goto LABEL_151;
    }
  }
  unint64_t v58 = 0;
  uint64_t v232 = v37 + 24;
  uint64_t v237 = (void **)(v47 + 48);
  unint64_t v231 = (void **)(v47 + 56);
  unint64_t v59 = a1 & 0xC000000000000001;
  uint64_t v234 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v233 = a1 + 32;
  long long v246 = (void (**)(char *, uint64_t))(v252 + 8);
  unint64_t v240 = &v267;
  long long v236 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v252 + 56);
  os_log_t v235 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v252 + 48);
  uint64_t v230 = (char *)&v266 + 4;
  *(void *)&long long v49 = 136446978;
  long long v228 = v49;
  *(void *)&long long v49 = 136446210;
  long long v244 = v49;
  *(void *)&long long v49 = 136447490;
  long long v226 = v49;
  *(void *)&long long v49 = 136447234;
  long long v225 = v49;
  *(void *)&long long v49 = 136446466;
  long long v229 = v49;
  unint64_t v252 = (unint64_t)"ss";
  uint64_t v227 = (char *)&type metadata for Any + 8;
  uint64_t v247 = v48;
  uint64_t v239 = v57;
  unint64_t v238 = a1 & 0xC000000000000001;
  while (1)
  {
    if (v59)
    {
      id v60 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v61 = __OFADD__(v58, 1);
      uint64_t v62 = (char *)(v58 + 1);
      if (v61) {
        break;
      }
      goto LABEL_47;
    }
    if (v58 >= *(void *)(v234 + 16)) {
      goto LABEL_172;
    }
    id v60 = *(id *)(v233 + 8 * v58);
    BOOL v61 = __OFADD__(v58, 1);
    uint64_t v62 = (char *)(v58 + 1);
    if (v61) {
      break;
    }
LABEL_47:
    long long v245 = v62;
    id v63 = v60;
    uint64_t v64 = sub_100694DE8([v63 remObjectID], (unint64_t *)&unk_100915850);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    uint64_t v65 = v64;
    uint64_t v259 = 0;

    uint64_t v257 = v63;
    id v66 = [v63 accountID];
    id v67 = [v66 uuid];

    id v68 = v255;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v69 = UUID.uuidString.getter();
    uint64_t v71 = v70;
    uint64_t v72 = *v246;
    uint64_t v73 = v258;
    (*v246)(v68, v258);
    id v74 = [self localInternalAccountID];
    id v75 = [v74 uuid];

    char v76 = v256;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v18 = (__objc2_class **)UUID.uuidString.getter();
    uint64_t v78 = v77;
    v72(v76, v73);
    if ((__objc2_class **)v69 == v18 && v71 == v78)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v79 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v79 & 1) == 0)
      {
        uint64_t v81 = v247;
        goto LABEL_58;
      }
    }
    int v80 = 0x7FFFFFFF;
    uint64_t v81 = v247;
    unint64_t v82 = v257;
    uint64_t v83 = v259;
    switch(*(unsigned __int16 *)(v261 + 68) >> 14)
    {
      case 2:
        int v80 = *(_DWORD *)(v261 + 64);
        break;
      case 3:
        break;
      default:
        int v80 = 2147483519;
        break;
    }
    sub_100662770(2, v80);
    if (v83)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    uint64_t v259 = 0;
LABEL_58:
    v84._rawValue = &off_1008B4BA8;
    unsigned __int8 v85 = sub_100699678(v84, (unint64_t *)&unk_100915850);
    if (*(void *)(v81 + 16))
    {
      id v86 = v65;
      unint64_t v87 = sub_10030703C(v86);
      if (v88)
      {
        unint64_t v89 = (char *)*(id *)(*(void *)(v81 + 56) + 8 * v87);

        unint64_t v47 = (unint64_t)v86;
        uint64_t v90 = Logger.logObject.getter();
        os_log_type_t v91 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v90, v91))
        {
          uint64_t v92 = swift_slowAlloc();
          unint64_t v93 = (void *)swift_slowAlloc();
          uint64_t v249 = swift_slowAlloc();
          uint64_t v263 = (char *)v249;
          *(_DWORD *)uint64_t v92 = v229;
          uint64_t v250 = v89;
          uint64_t v266 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v263);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v92 + 12) = 2114;
          uint64_t v18 = (__objc2_class **)(v92 + 22);
          uint64_t v266 = v47;
          id v94 = (void **)(id)v47;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *unint64_t v93 = v47;

          _os_log_impl((void *)&_mh_execute_header, v90, v91, "[%{public}s] Skipping merge() and updateChangeCount() since this ingestable is immutable and is not a new insertion {objectID: %{public}@}", (uint8_t *)v92, 0x16u);
          sub_100094134((uint64_t *)&unk_10090A040);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        goto LABEL_150;
      }
    }
    int v95 = v85;
    uint64_t v96 = 0;
    while (2)
    {
      int v98 = v95;
      id v97 = (char *)&off_1008B68D8 + v96++;
      unint64_t v99 = 0xE600000000000000;
      unint64_t v100 = 0x746867696568;
      switch(v97[32])
      {
        case 1:
          unint64_t v99 = 0xE300000000000000;
          unint64_t v100 = 6911093;
          break;
        case 2:
          unint64_t v99 = 0xE800000000000000;
          unint64_t v100 = 0x657A6953656C6966;
          break;
        case 3:
          unint64_t v99 = 0xE700000000000000;
          unint64_t v100 = 0x4C5255656C6966;
          break;
        case 4:
          unint64_t v99 = v252 | 0x8000000000000000;
          unint64_t v100 = 0xD000000000000012;
          break;
        case 5:
          unint64_t v99 = 0xE500000000000000;
          unint64_t v100 = 0x6874646977;
          break;
        case 6:
          break;
        default:
          unint64_t v99 = 0xE800000000000000;
          unint64_t v100 = 0x44497463656A626FLL;
          break;
      }
      unint64_t v101 = 0xE600000000000000;
      unint64_t v102 = 0x746867696568;
      switch(v98)
      {
        case 0:
          unint64_t v101 = 0xE800000000000000;
          if (v100 != 0x44497463656A626FLL) {
            goto LABEL_83;
          }
          goto LABEL_82;
        case 1:
          unint64_t v101 = 0xE300000000000000;
          if (v100 != 6911093) {
            goto LABEL_83;
          }
          goto LABEL_82;
        case 2:
          unint64_t v101 = 0xE800000000000000;
          if (v100 != 0x657A6953656C6966) {
            goto LABEL_83;
          }
          goto LABEL_82;
        case 3:
          unint64_t v101 = 0xE700000000000000;
          if (v100 != 0x4C5255656C6966) {
            goto LABEL_83;
          }
          goto LABEL_82;
        case 4:
          unint64_t v101 = v252 | 0x8000000000000000;
          unint64_t v102 = 0xD000000000000012;
          goto LABEL_81;
        case 5:
          unint64_t v101 = 0xE500000000000000;
          if (v100 != 0x6874646977) {
            goto LABEL_83;
          }
          goto LABEL_82;
        case 6:
LABEL_81:
          if (v100 != v102) {
            goto LABEL_83;
          }
LABEL_82:
          if (v99 != v101)
          {
LABEL_83:
            char v103 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v103) {
              goto LABEL_89;
            }
            if (v96 == 7)
            {
LABEL_152:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              [self noSuchObjectErrorWithObjectID:v65];
              swift_willThrow();

              return;
            }
            continue;
          }
          swift_bridgeObjectRelease_n();
LABEL_89:
          uint64_t v104 = *(void **)(v261 + 88);
          sub_1000963CC(0, (unint64_t *)&unk_100915850);
          ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
          id v106 = [ObjCClassFromMetadata entity];
          id v107 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v106 insertIntoManagedObjectContext:v104];
          id v108 = v251;
          [v104 assignObject:v107 toPersistentStore:v108];

          id v109 = v107;
          id v110 = [v65 uuid];
          uint64_t v111 = v254;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v112 = v258;
          (*v236)(v111, 0, 1, v258);
          uint64_t v113 = v253;
          sub_1001248EC(v111, v253);
          Class isa = 0;
          if ((*v235)(v113, 1, v112) != 1)
          {
            uint64_t v115 = v253;
            Class isa = UUID._bridgeToObjectiveC()().super.isa;
            v72((char *)v115, v258);
          }
          [v109 setIdentifier:isa v217];

          sub_1001260DC(v254);
          id v116 = v65;
          uint64_t v117 = v261;
          swift_retain_n();
          id v118 = v109;
          uint64_t v119 = v116;
          uint64_t v120 = (char *)v118;
          char v121 = Logger.logObject.getter();
          os_log_type_t v122 = static os_log_type_t.default.getter();
          int v123 = v122;
          BOOL v124 = os_log_type_enabled(v121, v122);
          uint64_t v250 = v120;
          if (v124)
          {
            uint64_t v125 = swift_slowAlloc();
            uint64_t v126 = (void *)swift_slowAlloc();
            uint64_t v249 = swift_slowAlloc();
            uint64_t v263 = (char *)v249;
            *(_DWORD *)uint64_t v125 = v228;
            LODWORD(v243) = v123;
            uint64_t v266 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v263);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v125 + 12) = 2082;
            sub_10010B4E8(v232, (uint64_t)v265);
            sub_10073F754((uint64_t)v265, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v127 = sub_100696CF4();
            unint64_t v129 = v128;
            sub_10073F754((uint64_t)v265, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            uint64_t v266 = sub_1000C51B8(v127, v129, (uint64_t *)&v263);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v125 + 22) = 2114;
            uint64_t v266 = v119;
            Swift::String v130 = v119;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *uint64_t v126 = v119;

            uint64_t v120 = v250;
            *(_WORD *)(v125 + 32) = 2112;
            Swift::String v131 = [v120 objectID];
            uint64_t v266 = v131;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            v126[1] = v131;

            _os_log_impl((void *)&_mh_execute_header, v121, (os_log_type_t)v243, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v125, 0x2Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_release_n();
          }
          uint64_t v132 = v117;
          swift_beginAccess();
          uint64_t v18 = v119;
          sub_1001A6B7C((uint64_t)v120, (uint64_t)v18);
          swift_endAccess();

          uint64_t v133 = 7;
          uint64_t v249 = 7;
          unint64_t v134 = &byte_1008B68F8;
          while (2)
          {
            char v136 = *v134++;
            char v135 = v136;
            if (((*(unsigned int *)(v132 + 64) | ((unint64_t)*(unsigned __int16 *)(v132 + 68) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
            {
              uint64_t v137 = Logger.logObject.getter();
              os_log_type_t v138 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v137, v138))
              {
                uint64_t v139 = swift_slowAlloc();
                uint64_t v263 = (char *)swift_slowAlloc();
                *(_DWORD *)uint64_t v139 = v244;
                LOBYTE(v266) = v135;
                uint64_t v140 = String.init<A>(describing:)();
                *(void *)(v139 + 4) = sub_1000C51B8(v140, v141, (uint64_t *)&v263);
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v137, v138, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v139, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }

              uint64_t v132 = v261;
            }
            LODWORD(v47) = *(_DWORD *)(v132 + 64);
            if (*(unsigned __int16 *)(v132 + 68) >> 14 == 2 && (*(_DWORD *)(v132 + 64) & 1) == 0)
            {
              if (qword_100907AE0 != -1) {
                goto LABEL_173;
              }
              goto LABEL_154;
            }
            if (--v133) {
              continue;
            }
            break;
          }
          swift_retain_n();
          uint64_t v143 = v18;
          uint64_t v144 = v250;
          uint64_t v18 = v143;
          id v32 = v144;
          unint64_t v145 = Logger.logObject.getter();
          int v146 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v145, (os_log_type_t)v146))
          {
            LODWORD(v241) = v146;
            os_log_t v243 = v145;
            unint64_t v147 = v18;
            uint64_t v148 = swift_slowAlloc();
            unint64_t v149 = (void *)swift_slowAlloc();
            unint64_t v242 = (char *)swift_slowAlloc();
            uint64_t v263 = v242;
            *(_DWORD *)uint64_t v148 = v226;
            uint64_t v266 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v263);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v148 + 12) = 2082;
            sub_10010B4E8(v232, (uint64_t)v264);
            sub_10073F754((uint64_t)v264, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
            uint64_t v150 = sub_100696CF4();
            unint64_t v152 = v151;
            sub_10073F754((uint64_t)v264, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
            uint64_t v266 = sub_1000C51B8(v150, v152, (uint64_t *)&v263);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v148 + 22) = 2114;
            uint64_t v266 = v147;
            unint64_t v153 = v147;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            uint64_t v250 = (char *)v147;
            *unint64_t v149 = v147;

            *(_WORD *)(v148 + 32) = 2112;
            unint64_t v154 = [v32 objectID];
            uint64_t v266 = v154;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            uint64_t v224 = v149;
            v149[1] = v154;

            *(_WORD *)(v148 + 42) = 2082;
            uint64_t v155 = 7;
            uint64_t v266 = _swiftEmptyArrayStorage;
            sub_1001DE058(0, 7, 0);
            os_log_t v156 = v266;
            unint64_t v157 = &byte_1008B68F8;
            do
            {
              int v158 = *v157++;
              unint64_t v159 = 0xE600000000000000;
              unint64_t v160 = 0x746867696568;
              switch(v158)
              {
                case 1:
                  unint64_t v159 = 0xE300000000000000;
                  unint64_t v160 = 6911093;
                  break;
                case 2:
                  unint64_t v159 = 0xE800000000000000;
                  unint64_t v160 = 0x657A6953656C6966;
                  break;
                case 3:
                  unint64_t v159 = 0xE700000000000000;
                  unint64_t v160 = 0x4C5255656C6966;
                  break;
                case 4:
                  unint64_t v159 = v252 | 0x8000000000000000;
                  unint64_t v160 = 0xD000000000000012;
                  break;
                case 5:
                  unint64_t v159 = 0xE500000000000000;
                  unint64_t v160 = 0x6874646977;
                  break;
                case 6:
                  break;
                default:
                  unint64_t v159 = 0xE800000000000000;
                  unint64_t v160 = 0x44497463656A626FLL;
                  break;
              }
              uint64_t v266 = v156;
              unint64_t v162 = (unint64_t)v156[2].isa;
              unint64_t v161 = (unint64_t)v156[3].isa;
              if (v162 >= v161 >> 1)
              {
                sub_1001DE058(v161 > 1, v162 + 1, 1);
                os_log_t v156 = v266;
              }
              v156[2].Class isa = (Class)(v162 + 1);
              int v163 = &v156[2 * v162];
              v163[4].Class isa = (Class)v160;
              v163[5].Class isa = (Class)v159;
              --v155;
            }
            while (v155);
            uint64_t v164 = Array.description.getter();
            unint64_t v166 = v165;
            swift_bridgeObjectRelease();
            uint64_t v266 = sub_1000C51B8(v164, v166, (uint64_t *)&v263);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v148 + 52) = 1024;
            uint64_t v132 = v261;
            int v167 = *(unsigned __int8 *)(v261 + 104);
            swift_release();
            LODWORD(v266) = v167;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release();
            os_log_t v168 = v243;
            _os_log_impl((void *)&_mh_execute_header, v243, (os_log_type_t)v241, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v148, 0x3Au);
            sub_100094134((uint64_t *)&unk_10090A040);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v169 = v259;
            uint64_t v18 = (__objc2_class **)v250;
          }
          else
          {

            swift_release_n();
            uint64_t v169 = v259;
          }
          sub_1004983C4(v257, v32, (uint64_t)&off_1008B68D8);
          if (v169) {
            goto LABEL_161;
          }
          uint64_t v259 = 0;
          id v170 = [v32 changedValues];
          uint64_t v171 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          unint64_t v47 = (unint64_t)v231;
          swift_beginAccess();
          uint64_t v172 = v132;
          char v173 = v18;
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v266 = *(NSObject **)v47;
          *(void *)unint64_t v47 = 0x8000000000000000;
          sub_1002C4FAC(v171, v173, isUniquelyReferenced_nonNull_native);
          *(void *)unint64_t v47 = v266;

          swift_bridgeObjectRelease();
          swift_endAccess();
          int v175 = *(unsigned __int8 *)(v172 + 104);
          if (v249 && (v175 & 1) != 0)
          {
            id v176 = v32;
            swift_bridgeObjectRelease();
            [v176 updateChangeCount];

            goto LABEL_149;
          }
          uint64_t v177 = v173;
          LOWORD(v47) = v261;
          swift_retain_n();
          unint64_t v178 = v177;
          id v179 = v32;
          swift_bridgeObjectRetain();
          unint64_t v180 = Logger.logObject.getter();
          int v181 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v180, (os_log_type_t)v181))
          {

            swift_bridgeObjectRelease_n();
            swift_release_n();
            goto LABEL_150;
          }
          int v219 = v181;
          os_log_t v222 = v180;
          id v223 = v179;
          uint64_t v18 = (__objc2_class **)swift_slowAlloc();
          uint64_t v224 = (void *)swift_slowAlloc();
          long long v220 = (char *)swift_slowAlloc();
          uint64_t v263 = v220;
          *(_DWORD *)uint64_t v18 = v225;
          uint64_t v266 = sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v263);
          uint64_t v22 = (uint64_t)v240;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *((_WORD *)v18 + 6) = 1024;
          swift_release();
          LODWORD(v266) = v175;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release();
          *((_WORD *)v18 + 9) = 1024;
          LODWORD(v266) = 1;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *((_WORD *)v18 + 12) = 2114;
          uint64_t v266 = v178;
          uint64_t v4 = v178;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v224 = v178;

          id v218 = (id)v4;
          unint64_t v221 = v18;
          *((_WORD *)v18 + 17) = 2082;
          int64_t v182 = *(void *)(v171 + 16);
          if (!v182) {
            goto LABEL_148;
          }
          uint64_t v266 = _swiftEmptyArrayStorage;
          swift_bridgeObjectRetain();
          sub_1001DE058(0, v182, 0);
          uint64_t v21 = v266;
          uint64_t v183 = sub_10072617C(v171);
          unsigned int v185 = v184;
          uint64_t v186 = 0;
          os_log_t v187 = (os_log_t)(v171 + 64);
          char v188 = *(unsigned char *)(v171 + 32);
          uint64_t v241 = v184;
          uint64_t v217 = v171 + 88;
          unint64_t v242 = (char *)v182;
          os_log_t v243 = (os_log_t)(v171 + 64);
          while (2)
          {
            if (v183 < 0 || v183 >= 1 << v188) {
              goto LABEL_164;
            }
            unint64_t v47 = (unint64_t)v183 >> 6;
            uint64_t v4 = 1 << v183;
            if (((uint64_t)v187[(unint64_t)v183 >> 6].isa & (1 << v183)) == 0) {
              goto LABEL_165;
            }
            if (*(_DWORD *)(v171 + 36) != v185) {
              goto LABEL_166;
            }
            uint64_t v249 = v186;
            uint64_t v191 = *(void *)(v171 + 48) + 16 * v183;
            uint64_t v250 = *(char **)v191;
            uint64_t v18 = (__objc2_class **)v171;
            os_log_t v192 = *(objc_class **)(v191 + 8);
            uint64_t v266 = v21;
            unint64_t v193 = (unint64_t)v21[2].isa;
            unint64_t v194 = (unint64_t)v21[3].isa;
            uint64_t v22 = v193 + 1;
            swift_bridgeObjectRetain();
            if (v193 >= v194 >> 1)
            {
              sub_1001DE058(v194 > 1, v193 + 1, 1);
              uint64_t v21 = v266;
            }
            v21[2].Class isa = (Class)v22;
            char v195 = &v21[2 * v193];
            v195[4].Class isa = (Class)v250;
            v195[5].Class isa = v192;
            char v188 = *((unsigned char *)v18 + 32);
            unint64_t v189 = 1 << v188;
            if (v183 >= 1 << v188) {
              goto LABEL_167;
            }
            os_log_t v187 = v243;
            Class v196 = v243[v47].isa;
            if (((unint64_t)v196 & v4) == 0) {
              goto LABEL_168;
            }
            uint64_t v171 = (uint64_t)v18;
            if (*((_DWORD *)v18 + 9) != v185) {
              goto LABEL_169;
            }
            unint64_t v197 = (unint64_t)v196 & (-2 << (v183 & 0x3F));
            if (v197)
            {
              unint64_t v189 = __clz(__rbit64(v197)) | v183 & 0xFFFFFFFFFFFFFFC0;
              uint64_t v190 = v242;
            }
            else
            {
              char v198 = (char *)(v47 + 1);
              unint64_t v199 = (v189 + 63) >> 6;
              uint64_t v190 = v242;
              if (v47 + 1 < v199)
              {
                Class v200 = v243[(void)v198].isa;
                if (v200) {
                  goto LABEL_140;
                }
                char v198 = (char *)(v47 + 2);
                if (v47 + 2 < v199)
                {
                  Class v200 = v243[(void)v198].isa;
                  if (v200)
                  {
LABEL_140:
                    unint64_t v189 = __clz(__rbit64((unint64_t)v200)) + ((void)v198 << 6);
                  }
                  else
                  {
                    while (v199 - 3 != v47)
                    {
                      Class v200 = *(Class *)(v217 + 8 * v47++);
                      if (v200)
                      {
                        char v198 = (char *)(v47 + 2);
                        goto LABEL_140;
                      }
                    }
                  }
                }
              }
            }
            uint64_t v186 = v249 + 1;
            unsigned int v185 = v241;
            uint64_t v183 = v189;
            if ((char *)(v249 + 1) != v190) {
              continue;
            }
            break;
          }
          swift_bridgeObjectRelease();
LABEL_148:
          uint64_t v201 = (uint8_t *)v221;
          uint64_t v202 = Array.description.getter();
          unint64_t v204 = v203;
          swift_bridgeObjectRelease();
          uint64_t v266 = sub_1000C51B8(v202, v204, (uint64_t *)&v263);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          os_log_t v205 = v222;
          _os_log_impl((void *)&_mh_execute_header, v222, (os_log_type_t)v219, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v201, 0x2Cu);
          sub_100094134((uint64_t *)&unk_10090A040);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          id v176 = v223;
LABEL_149:

LABEL_150:
          uint64_t v4 = v259;
          unint64_t v58 = (unint64_t)v245;
          unint64_t v59 = v238;
          if (v245 == (char *)v239)
          {
LABEL_151:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return;
          }
          break;
        default:
          goto LABEL_152;
      }
      break;
    }
  }
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  swift_once();
LABEL_154:
  sub_10008E2DC(v248, (uint64_t)qword_100920A70);
  uint64_t v206 = Logger.logObject.getter();
  os_log_type_t v207 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v206, v207))
  {
    uint64_t v208 = swift_slowAlloc();
    uint64_t v263 = (char *)swift_slowAlloc();
    *(_DWORD *)uint64_t v208 = v229;
    uint64_t v209 = sub_100662CC0(1);
    uint64_t v266 = sub_1000C51B8(v209, v210, (uint64_t *)&v263);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v208 + 12) = 2082;
    uint64_t v211 = sub_100662CC0(v47);
    uint64_t v266 = sub_1000C51B8(v211, v212, (uint64_t *)&v263);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v206, v207, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v208, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  int v213 = self;
  NSString v214 = String._bridgeToObjectiveC()();
  sub_100662CC0(1);
  NSString v215 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100662CC0(v47);
  NSString v216 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v213 unauthorizedErrorWithMissingEntitlement:v214 requestedAccessLevel:v215 currentAccesslevel:v216];

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_157:
}

void sub_100737ECC(unint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v8 = sub_100094134((uint64_t *)&unk_100909E50);
  __chkstk_darwin(v8 - 8);
  uint64_t v255 = (uint64_t)&v220 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v258 = (uint64_t)&v220 - v11;
  uint64_t v260 = type metadata accessor for UUID();
  uint64_t v261 = *(void *)(v260 - 8);
  __chkstk_darwin(v260);
  uint64_t v257 = (char *)&v220 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v256 = (char *)&v220 - v14;
  uint64_t v15 = (void *)type metadata accessor for Logger();
  os_log_t v252 = (os_log_t)*(v15 - 1);
  __chkstk_darwin(v15);
  uint64_t v254 = (char *)&v220 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a2[2];
  unint64_t v17 = a2[3];
  id v262 = a2;
  id v253 = (id)a2[4];
  uint64_t v19 = qword_1009073A0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19 != -1) {
    goto LABEL_176;
  }
LABEL_2:
  uint64_t v20 = sub_10008E2DC((uint64_t)v15, (uint64_t)qword_100916070);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v264 = v20;
  uint64_t v21 = Logger.logObject.getter();
  int v22 = static os_log_type_t.info.getter();
  BOOL v23 = os_log_type_enabled(v21, (os_log_type_t)v22);
  unint64_t v24 = a1 >> 62;
  unint64_t v265 = v5;
  unint64_t v266 = a1;
  uint64_t v259 = v15;
  unint64_t v263 = a1 >> 62;
  if (v23)
  {
    LODWORD(v250) = v22;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = (void *)swift_slowAlloc();
    uint64_t v267 = v26;
    *(_DWORD *)uint64_t v25 = 136446978;
    uint64_t v270 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v267);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 12) = 2048;
    id v251 = (void *)v18;
    unint64_t v249 = (unint64_t)v26;
    if (!v24)
    {
      uint64_t v27 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
    goto LABEL_180;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  while (1)
  {
    if (v24)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v25 = (uint64_t)_swiftEmptyArrayStorage;
    if (!v5) {
      break;
    }
    uint64_t v267 = _swiftEmptyArrayStorage;
    uint64_t v21 = &v267;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v5 & 0x8000000000000000) == 0)
    {
      unint64_t v17 = 0;
      uint64_t v18 = a1 & 0xC000000000000001;
      while (v5 != v17)
      {
        if (v18) {
          id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v32 = *(id *)(a1 + 8 * v17 + 32);
        }
        id v33 = v32;
        id v34 = sub_100694DE8([v33 remObjectID], (unint64_t *)&unk_10090AF90);
        if (v4)
        {

          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        uint64_t v15 = v34;
        ++v17;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        a1 = v266;
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v5 == v17)
        {
          uint64_t v25 = (uint64_t)v267;
          uint64_t v15 = v259;
          unint64_t v24 = v263;
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
LABEL_173:
      __break(1u);
LABEL_174:
      __break(1u);
LABEL_175:
      __break(1u);
LABEL_176:
      swift_once();
      goto LABEL_2;
    }
    __break(1u);
LABEL_179:
    __break(1u);
LABEL_180:
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v270 = (void *)v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 2082;
    sub_1000963CC(0, (unint64_t *)&unk_10090AF90);
    id v28 = [(id)swift_getObjCClassFromMetadata() description];
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v31 = v30;

    a1 = v266;
    uint64_t v270 = (void *)sub_1000C51B8(v29, v31, (uint64_t *)&v267);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 32) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v270 = (void *)sub_1000C51B8((uint64_t)v251, v17, (uint64_t *)&v267);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v250, "[%{public}s] Processing changed ingestables {count: %ld, CDType: %{public}s, accountIdentifier: %{public}s}", (uint8_t *)v25, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v15 = v259;
    unint64_t v24 = v263;
  }
LABEL_19:
  uint64_t v35 = *(void *)(v265 + 96);
  if (v35 <= 1)
  {
    if (v35)
    {
      if (v35 != 1) {
        goto LABEL_183;
      }
      swift_bridgeObjectRelease();
      unint64_t v50 = Logger.logObject.getter();
      os_log_type_t v51 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = (uint8_t *)swift_slowAlloc();
        id v53 = (void *)swift_slowAlloc();
        LOWORD(v15) = (_WORD)v53;
        uint64_t v267 = v53;
        *(_DWORD *)uint64_t v52 = 136315138;
        uint64_t v254 = (char *)(v52 + 4);
        uint64_t v25 = (uint64_t)[self cdEntityName];
        uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v56 = v55;

        uint64_t v270 = (void *)sub_1000C51B8(v54, v56, (uint64_t *)&v267);
        a1 = v266;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        unint64_t v24 = v263;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v50, v51, "Skipping fetch during upsert {CDType: %s}", v52, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      unint64_t v17 = (unint64_t)v262;
      unint64_t v249 = sub_1002EEDB8((uint64_t)_swiftEmptyArrayStorage);
      unint64_t v45 = v265;
      uint64_t v48 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v24) {
        goto LABEL_31;
      }
      goto LABEL_37;
    }
  }
  else if ((unint64_t)(v35 - 2) >= 3 && v35 != 4499 && v35 != 4599)
  {
LABEL_183:
    ((void (*)(char *, uint64_t, void *))v252[2].isa)(v254, v264, v15);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_1001805C0((uint64_t)_swiftEmptyArrayStorage);
    sub_10052ECB8((uint64_t)"unknown mode", 12, 2);
    __break(1u);
    JUMPOUT(0x10073A9B4);
  }
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.debug.getter();
  LOWORD(v15) = v37;
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v254 = (char *)swift_slowAlloc();
    uint64_t v267 = v254;
    *(_DWORD *)uint64_t v38 = 136315138;
    os_log_t v252 = (os_log_t)(v38 + 4);
    id v39 = [self cdEntityName];
    uint64_t v40 = v25;
    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v43 = v42;

    uint64_t v44 = v41;
    uint64_t v25 = v40;
    uint64_t v270 = (void *)sub_1000C51B8(v44, v43, (uint64_t *)&v267);
    a1 = v266;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v15, "Performing fetch during upsert {CDType: %s}", (uint8_t *)v38, 0xCu);
    swift_arrayDestroy();
    unint64_t v24 = v263;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  unint64_t v17 = (unint64_t)v262;
  unint64_t v45 = v265;
  uint64_t v46 = sub_100714178(v25, (uint64_t)v262);
  swift_bridgeObjectRelease();
  if (v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v249 = (unint64_t)v46;
  uint64_t v48 = a1 & 0xFFFFFFFFFFFFFF8;
  if (!v24)
  {
LABEL_31:
    uint64_t v49 = *(void *)(v48 + 16);
    if (!v49) {
      goto LABEL_161;
    }
    goto LABEL_38;
  }
LABEL_37:
  swift_bridgeObjectRetain();
  uint64_t v49 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v49) {
    goto LABEL_161;
  }
LABEL_38:
  uint64_t v238 = v45 + 24;
  uint64_t v57 = 0;
  unint64_t v241 = v17 + 48;
  unint64_t v237 = v17 + 56;
  unint64_t v243 = a1 & 0xC000000000000001;
  uint64_t v236 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v235 = a1 + 32;
  long long v246 = (void (**)(char *, uint64_t))(v261 + 8);
  long long v244 = &v271;
  unint64_t v240 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v261 + 56);
  uint64_t v239 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v261 + 48);
  uint64_t v234 = (char *)&v270 + 4;
  *(void *)&long long v47 = 136446978;
  long long v233 = v47;
  *(void *)&long long v47 = 136446210;
  long long v248 = v47;
  *(void *)&long long v47 = 136447490;
  long long v230 = v47;
  *(void *)&long long v47 = 136447234;
  long long v228 = v47;
  *(void *)&long long v47 = 136446466;
  long long v231 = v47;
  unint64_t v245 = (unint64_t)"ss";
  uint64_t v232 = (char *)&type metadata for Any + 8;
  uint64_t v242 = v49;
  while (1)
  {
    if (v243)
    {
      id v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v59 = __OFADD__(v57, 1);
      uint64_t v21 = ((char *)&v57->isa + 1);
      if (v59) {
        goto LABEL_179;
      }
      goto LABEL_45;
    }
    if ((unint64_t)v57 >= *(void *)(v236 + 16)) {
      break;
    }
    id v58 = *(id *)(v235 + 8 * (void)v57);
    BOOL v59 = __OFADD__(v57, 1);
    uint64_t v21 = ((char *)&v57->isa + 1);
    if (v59) {
      goto LABEL_179;
    }
LABEL_45:
    id v60 = (char *)v58;
    BOOL v61 = sub_100694DE8([v60 remObjectID], (unint64_t *)&unk_10090AF90);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    id v262 = v61;
    uint64_t v247 = v21;
    unint64_t v263 = 0;

    uint64_t v254 = v60;
    id v62 = [v60 accountID];
    id v63 = [v62 uuid];

    uint64_t v64 = v256;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v65 = UUID.uuidString.getter();
    uint64_t v67 = v66;
    id v68 = *v246;
    uint64_t v69 = v64;
    uint64_t v70 = v260;
    (*v246)(v69, v260);
    id v71 = [self localInternalAccountID];
    id v72 = [v71 uuid];

    uint64_t v73 = v257;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v74 = UUID.uuidString.getter();
    uint64_t v76 = v75;
    v68(v73, v70);
    if (v65 == v74 && v67 == v76)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v77 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v77 & 1) == 0)
      {
        unint64_t v81 = v249;
        id v80 = v262;
        goto LABEL_56;
      }
    }
    int v78 = 0x7FFFFFFF;
    id v80 = v262;
    unint64_t v79 = v263;
    unint64_t v81 = v249;
    switch(*(unsigned __int16 *)(v265 + 68) >> 14)
    {
      case 2:
        int v78 = *(_DWORD *)(v265 + 64);
        break;
      case 3:
        break;
      default:
        int v78 = 2147483519;
        break;
    }
    sub_100662770(2, v78);
    if (v79)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v263 = 0;
LABEL_56:
    v82._rawValue = &off_1008B4998;
    unint64_t v17 = sub_100698748(v82, (unint64_t *)&unk_10090AF90);
    if (*(void *)(v81 + 16))
    {
      id v83 = v80;
      unint64_t v84 = sub_10030703C(v83);
      if (v85)
      {
        id v86 = *(id *)(*(void *)(v81 + 56) + 8 * v84);

        uint64_t v15 = v83;
        unint64_t v87 = Logger.logObject.getter();
        os_log_type_t v88 = static os_log_type_t.info.getter();
        uint64_t v25 = v88;
        if (os_log_type_enabled(v87, v88))
        {
          unint64_t v17 = swift_slowAlloc();
          unint64_t v89 = (void *)swift_slowAlloc();
          uint64_t v261 = swift_slowAlloc();
          uint64_t v267 = (void *)v261;
          *(_DWORD *)unint64_t v17 = v231;
          uint64_t v270 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v267);
          id v262 = v86;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v17 + 12) = 2114;
          uint64_t v270 = v15;
          uint64_t v90 = v15;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *unint64_t v89 = v15;

          _os_log_impl((void *)&_mh_execute_header, v87, (os_log_type_t)v25, "[%{public}s] Skipping merge() and updateChangeCount() since this ingestable is immutable and is not a new insertion {objectID: %{public}@}", (uint8_t *)v17, 0x16u);
          sub_100094134((uint64_t *)&unk_10090A040);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        goto LABEL_126;
      }
    }
    uint64_t v91 = 0x44497463656A626FLL;
    switch((char)v17)
    {
      case 0:
        goto LABEL_65;
      case 1:
      case 3:
      case 4:
        goto LABEL_67;
      case 2:
        uint64_t v91 = 0x657A6953656C6966;
LABEL_65:
        if (v91 == 0x44497463656A626FLL)
        {
LABEL_66:
          swift_bridgeObjectRelease_n();
          unint64_t v92 = v265;
        }
        else
        {
LABEL_67:
          char v93 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v92 = v265;
          if ((v93 & 1) == 0)
          {
            unint64_t v196 = 0xE800000000000000;
            unint64_t v197 = 0x44497463656A626FLL;
            switch((int)v17)
            {
              case 0:
                goto LABEL_133;
              case 1:
                unint64_t v196 = 0xE300000000000000;
                unint64_t v197 = 6911093;
                goto LABEL_133;
              case 2:
                unint64_t v197 = 0x657A6953656C6966;
                goto LABEL_133;
              case 3:
                unint64_t v196 = 0xE700000000000000;
                unint64_t v197 = 0x4C5255656C6966;
                goto LABEL_133;
              case 4:
                unint64_t v196 = v245 | 0x8000000000000000;
                unint64_t v197 = 0xD000000000000012;
LABEL_133:
                if (v197 == 6911093 && v196 == 0xE300000000000000) {
                  goto LABEL_66;
                }
                char v198 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                unint64_t v92 = v265;
                if ((v198 & 1) == 0)
                {
                  unint64_t v199 = 0xE800000000000000;
                  unint64_t v200 = 0x44497463656A626FLL;
                  switch((int)v17)
                  {
                    case 0:
                      goto LABEL_141;
                    case 1:
                      unint64_t v199 = 0xE300000000000000;
                      unint64_t v200 = 6911093;
                      goto LABEL_141;
                    case 2:
                      unint64_t v200 = 0x657A6953656C6966;
                      goto LABEL_141;
                    case 3:
                      unint64_t v199 = 0xE700000000000000;
                      unint64_t v200 = 0x4C5255656C6966;
                      goto LABEL_141;
                    case 4:
                      unint64_t v199 = v245 | 0x8000000000000000;
                      unint64_t v200 = 0xD000000000000012;
LABEL_141:
                      if (v200 == 0x657A6953656C6966 && v199 == 0xE800000000000000) {
                        goto LABEL_66;
                      }
                      char v201 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      unint64_t v92 = v265;
                      if ((v201 & 1) == 0)
                      {
                        unint64_t v202 = 0xE800000000000000;
                        unint64_t v203 = 0x44497463656A626FLL;
                        switch((int)v17)
                        {
                          case 0:
                            goto LABEL_149;
                          case 1:
                            unint64_t v202 = 0xE300000000000000;
                            unint64_t v203 = 6911093;
                            goto LABEL_149;
                          case 2:
                            unint64_t v203 = 0x657A6953656C6966;
                            goto LABEL_149;
                          case 3:
                            unint64_t v202 = 0xE700000000000000;
                            unint64_t v203 = 0x4C5255656C6966;
                            goto LABEL_149;
                          case 4:
                            unint64_t v202 = v245 | 0x8000000000000000;
                            unint64_t v203 = 0xD000000000000012;
LABEL_149:
                            if (v203 == 0x4C5255656C6966 && v202 == 0xE700000000000000) {
                              goto LABEL_66;
                            }
                            char v204 = _stringCompareWithSmolCheck(_:_:expecting:)();
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            unint64_t v92 = v265;
                            if ((v204 & 1) == 0)
                            {
                              unint64_t v205 = 0xE800000000000000;
                              unint64_t v206 = 0x44497463656A626FLL;
                              switch((int)v245)
                              {
                                case 0:
                                  goto LABEL_157;
                                case 1:
                                  unint64_t v205 = 0xE300000000000000;
                                  unint64_t v206 = 6911093;
                                  goto LABEL_157;
                                case 2:
                                  unint64_t v206 = 0x657A6953656C6966;
                                  goto LABEL_157;
                                case 3:
                                  unint64_t v205 = 0xE700000000000000;
                                  unint64_t v206 = 0x4C5255656C6966;
                                  goto LABEL_157;
                                case 4:
                                  unint64_t v205 = v245 | 0x8000000000000000;
                                  unint64_t v206 = 0xD000000000000012;
LABEL_157:
                                  if (v206 == 0xD000000000000012 && (v245 | 0x8000000000000000) == v205) {
                                    goto LABEL_66;
                                  }
                                  char v207 = _stringCompareWithSmolCheck(_:_:expecting:)();
                                  swift_bridgeObjectRelease();
                                  swift_bridgeObjectRelease();
                                  unint64_t v92 = v265;
                                  if ((v207 & 1) == 0) {
                                    goto LABEL_160;
                                  }
                                  goto LABEL_68;
                                default:
                                  goto LABEL_160;
                              }
                            }
                            break;
                          default:
                            goto LABEL_160;
                        }
                      }
                      break;
                    default:
                      goto LABEL_160;
                  }
                }
                break;
              default:
                goto LABEL_160;
            }
          }
        }
LABEL_68:
        id v94 = *(void **)(v92 + 88);
        sub_1000963CC(0, (unint64_t *)&unk_10090AF90);
        ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
        id v96 = [ObjCClassFromMetadata entity];
        id v97 = [objc_allocWithZone((Class)ObjCClassFromMetadata) initWithEntity:v96 insertIntoManagedObjectContext:v94];
        id v98 = v253;
        [v94 assignObject:v97 toPersistentStore:v98];

        id v99 = v97;
        id v100 = [v80 uuid];
        uint64_t v101 = v258;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v102 = v260;
        (*v240)(v101, 0, 1, v260);
        uint64_t v103 = v255;
        sub_1001248EC(v101, v255);
        int v104 = (*v239)(v103, 1, v102);
        Class isa = 0;
        if (v104 != 1)
        {
          uint64_t v106 = v255;
          Class isa = UUID._bridgeToObjectiveC()().super.isa;
          v68((char *)v106, v260);
        }
        [v99 setIdentifier:isa];

        sub_1001260DC(v258);
        id v107 = v80;
        unint64_t v108 = v265;
        swift_retain_n();
        id v109 = v99;
        id v110 = v107;
        id v111 = v109;
        uint64_t v112 = Logger.logObject.getter();
        os_log_type_t v113 = static os_log_type_t.default.getter();
        int v114 = v113;
        BOOL v115 = os_log_type_enabled(v112, v113);
        id v262 = v111;
        if (v115)
        {
          uint64_t v116 = swift_slowAlloc();
          LODWORD(v252) = v114;
          uint64_t v117 = v116;
          id v118 = (void *)swift_slowAlloc();
          uint64_t v261 = swift_slowAlloc();
          uint64_t v267 = (void *)v261;
          *(_DWORD *)uint64_t v117 = v233;
          uint64_t v270 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v267);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v117 + 12) = 2082;
          sub_10010B4E8(v238, (uint64_t)v269);
          sub_10073F754((uint64_t)v269, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
          uint64_t v119 = sub_100696CF4();
          unint64_t v121 = v120;
          sub_10073F754((uint64_t)v269, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
          uint64_t v270 = (void *)sub_1000C51B8(v119, v121, (uint64_t *)&v267);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v117 + 22) = 2114;
          uint64_t v270 = v110;
          os_log_type_t v122 = v110;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *id v118 = v110;

          *(_WORD *)(v117 + 32) = 2112;
          int v123 = [v262 objectID];
          uint64_t v270 = v123;
          id v111 = v262;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          v118[1] = v123;

          _os_log_impl((void *)&_mh_execute_header, v112, (os_log_type_t)v252, "[%{public}s] INSERT {author: %{public}s, objectID: %{public}@, managedObjectID: %@}", (uint8_t *)v117, 0x2Au);
          sub_100094134((uint64_t *)&unk_10090A040);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        unint64_t v124 = v108;
        swift_beginAccess();
        unint64_t v17 = v110;
        sub_1001A6B7C((uint64_t)v111, v17);
        swift_endAccess();

        uint64_t v125 = 5;
        uint64_t v261 = 5;
        uint64_t v126 = &byte_1008B6920;
        break;
      default:
LABEL_160:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        [self noSuchObjectErrorWithObjectID:v80];
        swift_willThrow();

        return;
    }
    do
    {
      char v128 = *v126++;
      char v127 = v128;
      if (((*(unsigned int *)(v124 + 64) | ((unint64_t)*(unsigned __int16 *)(v124 + 68) << 32)) & 0xFFFFC00000000001) == 0x800000000000)
      {
        unint64_t v129 = Logger.logObject.getter();
        os_log_type_t v130 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v129, v130))
        {
          uint64_t v131 = swift_slowAlloc();
          uint64_t v267 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v131 = v248;
          LOBYTE(v270) = v127;
          uint64_t v132 = String.init<A>(describing:)();
          *(void *)(v131 + 4) = sub_1000C51B8(v132, v133, (uint64_t *)&v267);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v129, v130, "Client doesn't have permission to write key {changedValueKey: %{public}s}", (uint8_t *)v131, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        unint64_t v124 = v265;
      }
      LODWORD(v15) = *(_DWORD *)(v124 + 64);
      if (*(unsigned __int16 *)(v124 + 68) >> 14 == 2 && (*(_DWORD *)(v124 + 64) & 1) == 0)
      {
        if (qword_100907AE0 != -1) {
          goto LABEL_182;
        }
        goto LABEL_163;
      }
      --v125;
    }
    while (v125);
    swift_retain_n();
    unint64_t v135 = v124;
    id v136 = (id)v17;
    id v137 = v262;
    uint64_t v15 = v136;
    uint64_t v25 = (uint64_t)v137;
    os_log_type_t v138 = Logger.logObject.getter();
    int v139 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v138, (os_log_type_t)v139))
    {
      LODWORD(v250) = v139;
      os_log_t v252 = v138;
      uint64_t v140 = v15;
      uint64_t v141 = swift_slowAlloc();
      unint64_t v142 = (void *)swift_slowAlloc();
      id v251 = (void *)swift_slowAlloc();
      uint64_t v267 = v251;
      *(_DWORD *)uint64_t v141 = v230;
      uint64_t v270 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v267);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v141 + 12) = 2082;
      sub_10010B4E8(v238, (uint64_t)v268);
      sub_10073F754((uint64_t)v268, (void (*)(void, void, void, void, void, unint64_t))sub_10010B584);
      uint64_t v143 = sub_100696CF4();
      unint64_t v145 = v144;
      sub_10073F754((uint64_t)v268, (void (*)(void, void, void, void, void, unint64_t))sub_10012227C);
      uint64_t v270 = (void *)sub_1000C51B8(v143, v145, (uint64_t *)&v267);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v141 + 22) = 2114;
      uint64_t v270 = v140;
      int v146 = v140;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v262 = v140;
      void *v142 = v140;

      *(_WORD *)(v141 + 32) = 2112;
      unint64_t v147 = [(id)v25 objectID];
      uint64_t v270 = v147;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      long long v229 = v142;
      v142[1] = v147;

      *(_WORD *)(v141 + 42) = 2082;
      uint64_t v148 = 5;
      uint64_t v270 = _swiftEmptyArrayStorage;
      sub_1001DE058(0, 5, 0);
      unint64_t v149 = v270;
      uint64_t v150 = &byte_1008B6920;
      do
      {
        int v151 = *v150++;
        unint64_t v152 = 0xE800000000000000;
        unint64_t v153 = 0x44497463656A626FLL;
        switch(v151)
        {
          case 1:
            unint64_t v152 = 0xE300000000000000;
            unint64_t v153 = 6911093;
            break;
          case 2:
            unint64_t v153 = 0x657A6953656C6966;
            break;
          case 3:
            unint64_t v152 = 0xE700000000000000;
            unint64_t v153 = 0x4C5255656C6966;
            break;
          case 4:
            unint64_t v152 = v245 | 0x8000000000000000;
            unint64_t v153 = 0xD000000000000012;
            break;
          default:
            break;
        }
        uint64_t v270 = v149;
        unint64_t v155 = v149[2];
        unint64_t v154 = v149[3];
        if (v155 >= v154 >> 1)
        {
          sub_1001DE058(v154 > 1, v155 + 1, 1);
          unint64_t v149 = v270;
        }
        v149[2] = v155 + 1;
        os_log_t v156 = &v149[2 * v155];
        v156[4] = v153;
        v156[5] = v152;
        --v148;
      }
      while (v148);
      uint64_t v157 = Array.description.getter();
      unint64_t v159 = v158;
      swift_bridgeObjectRelease();
      uint64_t v270 = (void *)sub_1000C51B8(v157, v159, (uint64_t *)&v267);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v141 + 52) = 1024;
      unint64_t v160 = v265;
      int v161 = *(unsigned __int8 *)(v265 + 104);
      swift_release();
      LODWORD(v270) = v161;
      unint64_t v162 = v160;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      os_log_t v163 = v252;
      _os_log_impl((void *)&_mh_execute_header, v252, (os_log_type_t)v250, "[%{public}s] UPDATE VALUES {author: %{public}s, objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}s}, syncToCloudKit: %{BOOL}d}", (uint8_t *)v141, 0x3Au);
      sub_100094134((uint64_t *)&unk_10090A040);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v15 = v262;
    }
    else
    {

      swift_release_n();
      unint64_t v162 = v135;
    }
    uint64_t v164 = v254;
    unint64_t v165 = v263;
    sub_100498B9C(v254, (void *)v25, (uint64_t)&off_1008B6900);
    if (v165)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v263 = 0;
    unint64_t v166 = v162;
    id v167 = [(id)v25 changedValues];
    uint64_t v168 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v17 = v237;
    swift_beginAccess();
    uint64_t v169 = v15;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v270 = *(void **)v17;
    *(void *)unint64_t v17 = 0x8000000000000000;
    sub_1002C4FAC(v168, v169, isUniquelyReferenced_nonNull_native);
    *(void *)unint64_t v17 = v270;

    swift_bridgeObjectRelease();
    swift_endAccess();
    int v171 = *(unsigned __int8 *)(v166 + 104);
    if (v261 && (v171 & 1) != 0)
    {
      id v172 = (id)v25;
      swift_bridgeObjectRelease();
      [v172 updateChangeCount];

      goto LABEL_126;
    }
    char v173 = v169;
    unint64_t v17 = v265;
    swift_retain_n();
    unint64_t v174 = v173;
    uint64_t v15 = (id)v25;
    swift_bridgeObjectRetain();
    int v175 = Logger.logObject.getter();
    LODWORD(v229) = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v175, (os_log_type_t)v229))
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      goto LABEL_126;
    }
    os_log_t v226 = v175;
    id v227 = v15;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v224 = (void *)swift_slowAlloc();
    uint64_t v267 = v224;
    *(_DWORD *)uint64_t v25 = v228;
    uint64_t v270 = (void *)sub_1000C51B8(0x747265737075, 0xE600000000000000, (uint64_t *)&v267);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 12) = 1024;
    swift_release();
    LODWORD(v270) = v171;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v25 + 18) = 1024;
    LODWORD(v270) = 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 24) = 2114;
    uint64_t v270 = v174;
    uint64_t v4 = v174;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v223 = v18;
    *(void *)uint64_t v18 = v174;

    id v222 = (id)v4;
    long long v225 = (uint8_t *)v25;
    *(_WORD *)(v25 + 34) = 2082;
    a1 = *(void *)(v168 + 16);
    if (!a1) {
      goto LABEL_125;
    }
    uint64_t v270 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1001DE058(0, a1, 0);
    id v176 = v270;
    uint64_t v5 = sub_10072617C(v168);
    uint64_t v15 = v177;
    uint64_t v178 = 0;
    os_log_t v179 = (os_log_t)(v168 + 64);
    char v180 = *(unsigned char *)(v168 + 32);
    unint64_t v250 = v177;
    uint64_t v221 = v168 + 88;
    id v251 = (void *)a1;
    os_log_t v252 = (os_log_t)(v168 + 64);
    while (2)
    {
      if (v5 < 0 || v5 >= 1 << v180) {
        goto LABEL_170;
      }
      uint64_t v18 = (unint64_t)v5 >> 6;
      uint64_t v4 = 1 << v5;
      if (((uint64_t)v179[(unint64_t)v5 >> 6].isa & (1 << v5)) == 0) {
        goto LABEL_171;
      }
      if (*(_DWORD *)(v168 + 36) != v15) {
        goto LABEL_172;
      }
      uint64_t v182 = *(void *)(v168 + 48) + 16 * v5;
      uint64_t v183 = *(void **)v182;
      uint64_t v25 = *(void *)(v182 + 8);
      uint64_t v261 = v178;
      id v262 = v183;
      uint64_t v270 = v176;
      a1 = v176[2];
      unint64_t v184 = v176[3];
      unint64_t v17 = a1 + 1;
      swift_bridgeObjectRetain();
      if (a1 >= v184 >> 1)
      {
        sub_1001DE058(v184 > 1, a1 + 1, 1);
        id v176 = v270;
      }
      v176[2] = v17;
      unsigned int v185 = &v176[2 * a1];
      v185[4] = v262;
      v185[5] = v25;
      char v180 = *(unsigned char *)(v168 + 32);
      unint64_t v181 = 1 << v180;
      if (v5 >= 1 << v180) {
        goto LABEL_173;
      }
      os_log_t v179 = v252;
      Class v186 = v252[v18].isa;
      if (((unint64_t)v186 & v4) == 0) {
        goto LABEL_174;
      }
      if (*(_DWORD *)(v168 + 36) != v15) {
        goto LABEL_175;
      }
      unint64_t v187 = (unint64_t)v186 & (-2 << (v5 & 0x3F));
      if (v187)
      {
        unint64_t v181 = __clz(__rbit64(v187)) | v5 & 0xFFFFFFFFFFFFFFC0;
        a1 = (unint64_t)v251;
      }
      else
      {
        uint64_t v188 = v18 + 1;
        unint64_t v189 = (v181 + 63) >> 6;
        a1 = (unint64_t)v251;
        if (v18 + 1 < v189)
        {
          Class v190 = v252[v188].isa;
          if (v190) {
            goto LABEL_117;
          }
          uint64_t v188 = v18 + 2;
          if (v18 + 2 < v189)
          {
            Class v190 = v252[v188].isa;
            if (v190)
            {
LABEL_117:
              unint64_t v181 = __clz(__rbit64((unint64_t)v190)) + (v188 << 6);
            }
            else
            {
              while (v189 - 3 != v18)
              {
                Class v190 = *(Class *)(v221 + 8 * v18++);
                if (v190)
                {
                  uint64_t v188 = v18 + 2;
                  goto LABEL_117;
                }
              }
            }
          }
        }
      }
      uint64_t v178 = v261 + 1;
      uint64_t v15 = (void *)v250;
      uint64_t v5 = v181;
      if (v261 + 1 != a1) {
        continue;
      }
      break;
    }
    swift_bridgeObjectRelease();
LABEL_125:
    uint64_t v191 = v225;
    uint64_t v192 = Array.description.getter();
    uint64_t v15 = v193;
    swift_bridgeObjectRelease();
    uint64_t v270 = (void *)sub_1000C51B8(v192, (unint64_t)v15, (uint64_t *)&v267);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v194 = v226;
    _os_log_impl((void *)&_mh_execute_header, v226, (os_log_type_t)v229, "[%{public}s] updateChangeCount() skipped {syncToCloudKit: %{BOOL}d, immutableType: %{BOOL}d, objectID: %{public}@, changedValues.keys: %{public}s}", v191, 0x2Cu);
    sub_100094134((uint64_t *)&unk_10090A040);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v195 = v227;
LABEL_126:
    uint64_t v57 = v247;
    uint64_t v4 = v263;
    if (v247 == v242)
    {
LABEL_161:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
LABEL_182:
  swift_once();
LABEL_163:
  sub_10008E2DC((uint64_t)v259, (uint64_t)qword_100920A70);
  uint64_t v208 = Logger.logObject.getter();
  os_log_type_t v209 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v208, v209))
  {
    uint64_t v210 = swift_slowAlloc();
    uint64_t v267 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v210 = v231;
    uint64_t v211 = sub_100662CC0(1);
    uint64_t v270 = (void *)sub_1000C51B8(v211, v212, (uint64_t *)&v267);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v210 + 12) = 2082;
    uint64_t v213 = sub_100662CC0((__int16)v15);
    uint64_t v270 = (void *)sub_1000C51B8(v213, v214, (uint64_t *)&v267);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v208, v209, "Operation denied {requestedAccessLevel: %{public}s, currentAccesslevel: %{public}s}", (uint8_t *)v210, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v215 = v262;
  NSString v216 = self;
  NSString v217 = String._bridgeToObjectiveC()();
  sub_100662CC0(1);
  NSString v218 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100662CC0((__int16)v15);
  NSString v219 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v216 unauthorizedErrorWithMissingEntitlement:v217 requestedAccessLevel:v218 currentAccesslevel:v219];

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}