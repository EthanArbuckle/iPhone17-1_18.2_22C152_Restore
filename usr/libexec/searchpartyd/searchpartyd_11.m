uint64_t sub_1007B9338(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *(void *)(*(void *)v1 + 184);
  *(void *)(*(void *)v1 + 288) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007B9450, v2, 0);
}

uint64_t sub_1007B9450()
{
  uint64_t v1 = (uint64_t)(v0 + 2);
  uint64_t v2 = v0[36];
  if (v2)
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    type metadata accessor for SharingCircleKeyManager();
    uint64_t v3 = swift_allocObject();
    v0[37] = v3;
    swift_retain();
    swift_defaultActor_initialize();
    type metadata accessor for KeyDropInterface();
    uint64_t v4 = swift_allocObject();
    swift_defaultActor_initialize();
    *(void *)(v4 + 112) = 0;
    *(void *)(v4 + 120) = 0;
    *(void *)(v3 + 112) = v4;
    *(void *)(v3 + 120) = v2;
    v5 = (void *)swift_task_alloc();
    v0[38] = v5;
    void *v5 = v0;
    v5[1] = sub_1007B962C;
    uint64_t v6 = v0[34];
    uint64_t v7 = v0[22];
    return sub_100CA861C(v6, v7);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    sub_10001CEC8();
    swift_allocError();
    void *v9 = 0xD000000000000010;
    v9[1] = 0x80000001013F23D0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_1007B962C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 312) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 184);
  if (v0) {
    uint64_t v4 = sub_1007BA5DC;
  }
  else {
    uint64_t v4 = sub_1007B9758;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1007B9758()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[40] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1007B97F8;
  uint64_t v2 = v0[33];
  uint64_t v3 = v0[34];
  uint64_t v4 = v0[22];
  return sub_1001C522C(v2, v4, v3);
}

uint64_t sub_1007B97F8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 328) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 184);
  if (v0) {
    uint64_t v4 = sub_1007BA6A4;
  }
  else {
    uint64_t v4 = sub_1007B9924;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1007B9924()
{
  uint64_t v26 = v0;
  if (qword_101636CD0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 264);
  uint64_t v4 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 248);
  uint64_t v5 = *(void *)(v0 + 232);
  uint64_t v6 = type metadata accessor for Logger();
  sub_100010324(v6, (uint64_t)qword_10170E378);
  sub_1007BA90C(v2, v1);
  sub_1007BA90C(v2, v3);
  sub_1007BA90C(v2, v4);
  sub_1007BA90C(v2, v5);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v11 = *(void *)(v0 + 248);
  uint64_t v10 = *(void *)(v0 + 256);
  uint64_t v12 = *(void *)(v0 + 240);
  if (v9)
  {
    os_log_type_t type = v8;
    uint64_t v22 = *(void *)(v0 + 224);
    uint64_t v23 = *(void *)(v0 + 232);
    uint64_t v13 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136447747;
    sub_1007BAACC((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 128) = sub_1008FA0F0(v14, v15, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007BABD8(v10, type metadata accessor for KeyDropDelegatedShareMetadataResponse);
    *(_WORD *)(v13 + 12) = 2160;
    *(void *)(v0 + 136) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 22) = 2049;
    uint64_t v16 = *(void *)(v11 + *(int *)(v22 + 20));
    sub_1007BABD8(v11, type metadata accessor for KeyDropDelegatedShareMetadataResponse);
    *(void *)(v0 + 144) = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 32) = 2160;
    *(void *)(v0 + 152) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 42) = 2081;
    type metadata accessor for Date();
    sub_1007BAACC((unint64_t *)&qword_101638DA0, 255, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 160) = sub_1008FA0F0(v17, v18, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007BABD8(v12, type metadata accessor for KeyDropDelegatedShareMetadataResponse);
    *(_WORD *)(v13 + 52) = 2160;
    *(void *)(v0 + 168) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 62) = 1025;
    int v19 = *(unsigned __int8 *)(v23 + *(int *)(v22 + 28));
    sub_1007BABD8(v23, type metadata accessor for KeyDropDelegatedShareMetadataResponse);
    *(_DWORD *)(v0 + 384) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v7, type, "Got metadata for delegated share: %{public}s,\nvisitor count: %{private,mask.hash}ld,\nexpiration: %{private,mask.hash}s.\navailableToNewViewers: %{BOOL,private,mask.hash}d.", (uint8_t *)v13, 0x44u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1007BABD8(*(void *)(v0 + 232), type metadata accessor for KeyDropDelegatedShareMetadataResponse);
    sub_1007BABD8(v11, type metadata accessor for KeyDropDelegatedShareMetadataResponse);
    sub_1007BABD8(v10, type metadata accessor for KeyDropDelegatedShareMetadataResponse);
    sub_1007BABD8(v12, type metadata accessor for KeyDropDelegatedShareMetadataResponse);
  }

  uint64_t v20 = *(void *)(v0 + 288);
  return _swift_task_switch(sub_1007B9D90, v20, 0);
}

uint64_t sub_1007B9D90()
{
  *(void *)(v0 + 336) = *(void *)(*(void *)(v0 + 288) + 136);
  swift_retain();
  return _swift_task_switch(sub_1007B9E04, 0, 0);
}

uint64_t sub_1007B9E04()
{
  uint64_t v1 = v0[42];
  uint64_t v2 = v0[36];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[43] = v3;
  v3[2] = v1;
  v3[3] = sub_10001DAA0;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[44] = v4;
  uint64_t v5 = type metadata accessor for BeaconKeyManager(0);
  *uint64_t v4 = v0;
  v4[1] = sub_1007B9F1C;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 15, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10001DAA8, v3, v5);
}

uint64_t sub_1007B9F1C()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = *(void *)(*v0 + 264);
  uint64_t v3 = *(void *)(*v0 + 224);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  v1[45] = v1[15];
  uint64_t v5 = *(void *)(v2 + *(int *)(v3 + 20));
  uint64_t v6 = (void *)swift_task_alloc();
  v1[46] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1007BA0F4;
  uint64_t v7 = v1[22];
  return sub_1012E181C(v7, v5);
}

uint64_t sub_1007BA0F4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 376) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 184);
  swift_release();
  if (v0) {
    uint64_t v4 = sub_1007BA78C;
  }
  else {
    uint64_t v4 = sub_1007BA23C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1007BA23C()
{
  if (*(unsigned char *)(v0[33] + *(int *)(v0[28] + 28)))
  {
    swift_release();
    swift_release();
    uint64_t v1 = v0[34];
    sub_1007BABD8(v0[33], type metadata accessor for KeyDropDelegatedShareMetadataResponse);
    sub_1007BABD8(v1, type metadata accessor for KeyDropJoinToken);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    return _swift_task_switch(sub_1007BA398, 0, 0);
  }
}

uint64_t sub_1007BA398()
{
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[23];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[22], v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v6 + v5, v1, v2);
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_release();
  swift_release();
  return _swift_task_switch(sub_1007BA4D8, v4, 0);
}

uint64_t sub_1007BA4D8()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0[34];
  sub_1007BABD8(v0[33], type metadata accessor for KeyDropDelegatedShareMetadataResponse);
  sub_1007BABD8(v1, type metadata accessor for KeyDropJoinToken);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1007BA5DC()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1007BA6A4()
{
  uint64_t v1 = *(void *)(v0 + 272);
  swift_release();
  swift_release();
  sub_1007BABD8(v1, type metadata accessor for KeyDropJoinToken);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1007BA78C()
{
  uint64_t v2 = v0[33];
  uint64_t v1 = v0[34];
  swift_release();
  swift_release();
  sub_1007BABD8(v2, type metadata accessor for KeyDropDelegatedShareMetadataResponse);
  sub_1007BABD8(v1, type metadata accessor for KeyDropJoinToken);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t type metadata accessor for DelegatedShareMetadataService()
{
  return self;
}

uint64_t sub_1007BA8B4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1007BAACC(&qword_10164DAA0, a2, (void (*)(uint64_t))type metadata accessor for DelegatedShareMetadataService);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1007BA90C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for KeyDropDelegatedShareMetadataResponse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007BA970()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1007BAA00()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10001D2E4;
  return sub_100348798(v3);
}

uint64_t sub_1007BAACC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1007BAB14(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_101641FB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1007BAB74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DelegatedBeaconMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007BABD8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for DelegatedShareMeta()
{
  uint64_t result = qword_10164DB08;
  if (!qword_10164DB08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_1007BAC84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1007BAD50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1007BADCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1007BAE48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1007BAEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007BAED8);
}

uint64_t sub_1007BAED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1007BAF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007BAF58);
}

uint64_t sub_1007BAF58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1007BAFC8()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

Swift::Int sub_1007BB060()
{
  return Hasher._finalize()();
}

uint64_t sub_1007BB0B8()
{
  return String.hash(into:)();
}

Swift::Int sub_1007BB0D4()
{
  return Hasher._finalize()();
}

uint64_t sub_1007BB128@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1015A28B0, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

void sub_1007BB17C(void *a1@<X8>)
{
  *a1 = 0xD00000000000002ALL;
  a1[1] = 0x80000001013EEEF0;
}

uint64_t sub_1007BB484(int a1, void *aBlock, void *a3)
{
  *(void *)(v3 + 16) = a3;
  *(void *)(v3 + 24) = _Block_copy(aBlock);
  id v5 = a3;
  return _swift_task_switch(sub_1007BB500, 0, 0);
}

uint64_t sub_1007BB500()
{
  sub_10001CD44((void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10164B490 + dword_10164B490);
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_1007BB5C0;
  return v3();
}

uint64_t sub_1007BB5C0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007BB6C0, 0, 0);
}

uint64_t sub_1007BB6C0()
{
  uint64_t v1 = *(void (***)(void, void))(v0 + 24);

  sub_10001D4B0(0, &qword_10164DCA0);
  sub_10012E2E4(&qword_10164DCA8, &qword_10164DCA0);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  ((void (**)(void, Class))v1)[2](v1, isa);

  _Block_release(v1);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1007BB7C0(void (*a1)(void, uint64_t))
{
  sub_100484228();
  uint64_t v2 = swift_allocError();
  *uint64_t v3 = 0;
  a1(0, v2);

  return swift_errorRelease();
}

uint64_t sub_1007BB950(void (*a1)(void))
{
  sub_100484228();
  swift_allocError();
  *uint64_t v2 = 0;
  a1();

  return swift_errorRelease();
}

uint64_t sub_1007BBAAC(char *a1, uint64_t a2, uint64_t a3, const void *a4, void (*a5)(char *, uint64_t, void *))
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = _Block_copy(a4);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = *sub_10001CD44(&a1[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation], *(void *)&a1[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24]);
  _Block_copy(v12);
  uint64_t v14 = a1;
  a5(v11, v13, v12);
  _Block_release(v12);
  _Block_release(v12);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_1007BBCC8(uint64_t a1, uint64_t a2)
{
  sub_10001D4B0(0, &qword_10164DC58);
  sub_10012E2E4((unint64_t *)&unk_10164DC60, &qword_10164DC58);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(a2 + 16))(a2, isa);
}

uint64_t sub_1007BC154(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_101636CA8 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100010324(v6, (uint64_t)qword_10170E318);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446210;
    sub_1008FA0F0(0xD000000000000035, 0x8000000101404390, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_10001CD44((void *)(v3 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(v3 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
  return sub_1006630A4(a1, a2);
}

void sub_1007BC5DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10001D4B0(0, (unint64_t *)&qword_10164DC40);
  v5.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  if (a2) {
    uint64_t v6 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, v5.super.isa);
}

void sub_1007BCAB8(void *a1, int a2, void *a3, void *aBlock, void (*a5)(uint64_t, unint64_t, id, void *))
{
  os_log_type_t v8 = _Block_copy(aBlock);
  id v9 = a3;
  id v13 = a1;
  uint64_t v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v12 = v11;

  _Block_copy(v8);
  a5(v10, v12, v13, v8);
  _Block_release(v8);
  _Block_release(v8);
  sub_10001CFB8(v10, v12);
}

uint64_t sub_1007BCE30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  static os_log_type_t.default.getter();
  if (qword_1016372F0 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_101342130;
  uint64_t v7 = UUID.uuidString.getter();
  uint64_t v9 = v8;
  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = sub_10000B4CC();
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v9;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_10001CD44((void *)(v3 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(v3 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
  sub_100A46B88();
  sub_100790B18(a1, a2, 0, 0);

  return swift_release();
}

uint64_t sub_1007BD06C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  static os_log_type_t.default.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_101347BA0;
  swift_getObjectType();
  sub_10000588C((uint64_t *)&unk_101665F30);
  uint64_t v13 = v3;
  uint64_t v5 = String.init<A>(describing:)();
  uint64_t v7 = v6;
  *(void *)(v4 + 56) = &type metadata for String;
  unint64_t v8 = sub_10000B4CC();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  *(void *)(v4 + 96) = &type metadata for String;
  *(void *)(v4 + 104) = v8;
  *(void *)(v4 + 64) = v8;
  *(void *)(v4 + 72) = 0xD00000000000001FLL;
  *(void *)(v4 + 80) = 0x8000000101404300;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  static os_log_type_t.default.getter();
  if (qword_101637250 != -1) {
    swift_once();
  }
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_101347BA0;
  uint64_t v10 = String.init<A>(describing:)();
  *(void *)(v9 + 56) = &type metadata for String;
  *(void *)(v9 + 64) = v8;
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v11;
  *(void *)(v9 + 96) = &type metadata for String;
  *(void *)(v9 + 104) = v8;
  *(void *)(v9 + 72) = 0xD00000000000001FLL;
  *(void *)(v9 + 80) = 0x8000000101404300;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_10001CD44((void *)(v13 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(v13 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
  return sub_100661834(a1, a2, a3);
}

uint64_t sub_1007BD5CC()
{
  static os_log_type_t.default.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_101347BA0;
  swift_getObjectType();
  sub_10000588C((uint64_t *)&unk_101665F30);
  uint64_t v1 = String.init<A>(describing:)();
  uint64_t v3 = v2;
  *(void *)(v0 + 56) = &type metadata for String;
  unint64_t v4 = sub_10000B4CC();
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v3;
  *(void *)(v0 + 96) = &type metadata for String;
  *(void *)(v0 + 104) = v4;
  *(void *)(v0 + 64) = v4;
  *(void *)(v0 + 72) = 0xD000000000000018;
  *(void *)(v0 + 80) = 0x8000000101407FD0;
  os_log(_:dso:log:_:_:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1007BD8FC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  static os_log_type_t.default.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_101347BA0;
  swift_getObjectType();
  sub_10000588C((uint64_t *)&unk_101665F30);
  uint64_t v9 = String.init<A>(describing:)();
  uint64_t v11 = v10;
  *(void *)(v8 + 56) = &type metadata for String;
  unint64_t v12 = sub_10000B4CC();
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v11;
  *(void *)(v8 + 96) = &type metadata for String;
  *(void *)(v8 + 104) = v12;
  *(void *)(v8 + 64) = v12;
  *(void *)(v8 + 72) = 0xD00000000000002CLL;
  *(void *)(v8 + 80) = 0x8000000101407F70;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_10001CD44((void *)(v4 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(v4 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
  sub_100A46B88();
  sub_100790B18(a1, a2, a3, a4);
  return swift_release();
}

uint64_t sub_1007BDBE8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  static os_log_type_t.default.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_101347BA0;
  swift_getObjectType();
  sub_10000588C((uint64_t *)&unk_101665F30);
  uint64_t v9 = String.init<A>(describing:)();
  uint64_t v11 = v10;
  *(void *)(v8 + 56) = &type metadata for String;
  unint64_t v12 = sub_10000B4CC();
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v11;
  *(void *)(v8 + 96) = &type metadata for String;
  *(void *)(v8 + 104) = v12;
  *(void *)(v8 + 64) = v12;
  *(void *)(v8 + 72) = 0xD000000000000028;
  *(void *)(v8 + 80) = 0x8000000101407F40;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_10001CD44((void *)(v4 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(v4 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
  sub_100A46B88();
  sub_100790790(a1, a2, a3, a4);
  return swift_release();
}

uint64_t sub_1007BDF74(void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  static os_log_type_t.default.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_101347BA0;
  swift_getObjectType();
  sub_10000588C((uint64_t *)&unk_101665F30);
  uint64_t v9 = String.init<A>(describing:)();
  uint64_t v11 = v10;
  *(void *)(v8 + 56) = &type metadata for String;
  unint64_t v12 = sub_10000B4CC();
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v11;
  *(void *)(v8 + 96) = &type metadata for String;
  *(void *)(v8 + 104) = v12;
  *(void *)(v8 + 64) = v12;
  *(void *)(v8 + 72) = 0xD00000000000002FLL;
  *(void *)(v8 + 80) = 0x80000001014077B0;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_10001CD44((void *)(v4 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(v4 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
  sub_100A46B88();
  sub_100790060(a1, a2, a3, a4);
  return swift_release();
}

uint64_t sub_1007BE548(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a5;
  uint64_t v7 = a4;
  uint64_t v8 = a2;
  int64_t v10 = *(void *)(a3 + 16);
  if (v10)
  {
    sub_1000B8104(0, v10, 0);
    uint64_t result = sub_10115FE18(a3);
    uint64_t v13 = result;
    uint64_t v15 = v14;
    char v17 = v16 & 1;
    while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << *(unsigned char *)(a3 + 32))
    {
      if (((*(void *)(a3 + 56 + (((unint64_t)v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        goto LABEL_15;
      }
      if (*(_DWORD *)(a3 + 36) != v15) {
        goto LABEL_16;
      }
      id v18 = *(id *)(*(void *)(a3 + 48) + 8 * v13);
      char v19 = sub_10110180C();

      unint64_t v21 = _swiftEmptyArrayStorage[2];
      unint64_t v20 = _swiftEmptyArrayStorage[3];
      if (v21 >= v20 >> 1) {
        sub_1000B8104(v20 > 1, v21 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v21 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage[4] + v21) = v19;
      uint64_t result = sub_10052CB9C(v13, v15, v17 & 1, a3);
      uint64_t v13 = result;
      uint64_t v15 = v22;
      char v17 = v23 & 1;
      if (!--v10)
      {
        sub_1001A1CB8(result, v22, v23 & 1);
        uint64_t v7 = a4;
        uint64_t v6 = a5;
        a1 = v26;
        uint64_t v8 = a2;
        uint64_t v5 = v25;
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
LABEL_11:
    uint64_t v24 = sub_101159C78((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    sub_10001CD44((void *)(v5 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(v5 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
    sub_10044CCF0(a1, v8, v24, 1, v7, v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1007BE944(uint64_t a1, uint64_t a2)
{
  type metadata accessor for UUID();
  sub_10001D4B0(0, (unint64_t *)&qword_101638DB0);
  sub_1007C7800(&qword_10163BC60, (void (*)(uint64_t))&type metadata accessor for UUID);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(a2 + 16))(a2, isa);
}

uint64_t sub_1007BEAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_1007BEB1C, 0, 0);
}

uint64_t sub_1007BEB1C()
{
  uint64_t v1 = (void *)v0[3];
  sub_10001CD44((void *)(v0[2] + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(v0[2] + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
  id v2 = v1;
  id v3 = [v2 uuids];
  type metadata accessor for UUID();
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  v0[6] = v4;

  id v5 = [v2 bundleIdentifier];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  v0[7] = v9;
  int64_t v10 = (void *)v0[3];
  char v11 = [v10 subscribe];

  unint64_t v12 = (void *)swift_task_alloc();
  v0[8] = v12;
  *unint64_t v12 = v0;
  v12[1] = sub_1007BEC88;
  return sub_10045A8DC(v7, v9, v4, v11);
}

uint64_t sub_1007BEC88(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v5 = sub_1007BEE34;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 80) = a1;
    swift_bridgeObjectRelease();
    id v5 = sub_1007BEDC0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1007BEDC0()
{
  uint64_t v1 = *(void **)(v0 + 80);
  (*(void (**)(void *, void))(v0 + 32))(v1, 0);

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1007BEE34()
{
  uint64_t v1 = v0[9];
  id v2 = (void (*)(void, uint64_t))v0[4];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_errorRetain();
  v2(0, v1);
  swift_errorRelease();
  swift_errorRelease();
  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_1007BF4C0(void *a1, int a2, void *a3, void *aBlock, void (*a5)(id, id, void *))
{
  uint64_t v8 = _Block_copy(aBlock);
  _Block_copy(v8);
  id v9 = a3;
  id v10 = a1;
  a5(v9, v10, v8);
  _Block_release(v8);
  _Block_release(v8);
}

void sub_1007BF584(void *a1, int a2, void *aBlock, void (*a4)(void))
{
  uint64_t v6 = _Block_copy(aBlock);
  _Block_copy(v6);
  id v7 = a1;
  a4();
  _Block_release(v6);
  _Block_release(v6);
}

void sub_1007BF7D4(uint64_t a1, NSString a2, uint64_t a3)
{
  if (a2) {
    a2 = String._bridgeToObjectiveC()();
  }
  id v4 = a2;
  (*(void (**)(uint64_t))(a3 + 16))(a3);
}

void sub_1007BFA18(void *a1, char a2, void (*a3)(void *, void *))
{
  if (a2)
  {
    swift_errorRetain();
    sub_10000588C(&qword_101638D40);
    swift_willThrowTypedImpl();
    swift_errorRetain();
    a3(0, a1);
    sub_100173E7C(a1, 1);
    sub_100173E7C(a1, 1);
  }
  else
  {
    id v5 = a1;
    a3(a1, 0);
    sub_100173E7C(a1, 0);
  }
}

uint64_t sub_1007BFE0C(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(uint64_t))
{
  uint64_t v13 = sub_10000588C(a4);
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t *)((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = a5(0);
  __chkstk_darwin(v16 - 8);
  id v18 = (char *)&v23 - v17;
  sub_10001D074(a1, (uint64_t)v15, a4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = *v15;
    uint64_t v19 = v24;
    sub_10000588C(&qword_101638D40);
    swift_willThrowTypedImpl();
    swift_errorRetain();
    a2(0, v19);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v21 = sub_1007C787C((uint64_t)v15, (uint64_t)v18, a6);
    uint64_t v22 = (void *)a7(v21);
    a2(v22, 0);

    return sub_1007C7900((uint64_t)v18, a6);
  }
}

void sub_1007BFFD0(void *a1, int a2, void *a3, uint64_t a4, void *aBlock, void (*a6)(uint64_t, unint64_t, uint64_t, void *))
{
  id v10 = _Block_copy(aBlock);
  id v11 = a3;
  id v15 = a1;
  uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v14 = v13;

  _Block_copy(v10);
  a6(v12, v14, a4, v10);
  _Block_release(v10);
  _Block_release(v10);
  sub_10001CFB8(v12, v14);
}

uint64_t sub_1007C0094(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3)
{
  return sub_1007BFE0C(a1, a2, a3, &qword_10164B410, type metadata accessor for RawAccessoryMetadata, type metadata accessor for RawAccessoryMetadata, (uint64_t (*)(uint64_t))sub_1001AAEA4);
}

uint64_t sub_1007C0230(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3)
{
  return sub_1007BFE0C(a1, a2, a3, &qword_10164B3F8, type metadata accessor for AccessoryMetadata, type metadata accessor for AccessoryMetadata, (uint64_t (*)(uint64_t))sub_1001A9630);
}

uint64_t sub_1007C03CC(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  if ((a2 & 1) == 0) {
    return a3(0);
  }
  swift_errorRetain();
  a3(a1);

  return sub_100173E88(a1, 1);
}

uint64_t sub_1007C0570()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1007C05A8(uint64_t a1, char a2)
{
  return sub_1007C03CC(a1, a2 & 1, *(uint64_t (**)(uint64_t))(v2 + 16));
}

uint64_t sub_1007C05B4()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *id v4 = v1;
  v4[1] = sub_100033F68;
  return sub_10069116C(v2, v3);
}

uint64_t sub_1007C064C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  v59 = a2;
  uint64_t v5 = type metadata accessor for CodingUserInfoKey();
  __chkstk_darwin(v5);
  uint64_t v73 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v61 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v63 = (unint64_t)(v9 + 63) >> 6;
  v66 = (void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v60 = v6;
  v65 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v64 = a1;
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  v58 = (char *)&type metadata for () + 8;
  long long v62 = xmmword_101342130;
  uint64_t v69 = v5;
  while (1)
  {
    if (v11)
    {
      uint64_t v71 = (v11 - 1) & v11;
      uint64_t v72 = v3;
      unint64_t v17 = __clz(__rbit64(v11)) | (v12 << 6);
      uint64_t v18 = v73;
      goto LABEL_21;
    }
    BOOL v19 = __OFADD__(v12++, 1);
    uint64_t v18 = v73;
    if (v19) {
      goto LABEL_52;
    }
    if (v12 >= v63) {
      return swift_release();
    }
    unint64_t v20 = *(void *)(v61 + 8 * v12);
    if (!v20) {
      break;
    }
LABEL_20:
    uint64_t v71 = (v20 - 1) & v20;
    uint64_t v72 = v3;
    unint64_t v17 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_21:
    uint64_t v22 = (unsigned __int8 *)(*(void *)(v64 + 48) + 24 * v17);
    int v68 = *v22;
    uint64_t v23 = (char *)*((void *)v22 + 2);
    v67 = (char *)*((void *)v22 + 1);
    type metadata accessor for PropertyListEncoder();
    swift_allocObject();
    v70 = v23;
    swift_bridgeObjectRetain();
    PropertyListEncoder.init()();
    if (qword_101637650 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_100010324(v5, (uint64_t)static CodingUserInfoKey.messagingCoder);
    uint64_t v25 = *v66;
    (*v66)(v18, v24, v5);
    v77 = &type metadata for Bool;
    LOBYTE(v76) = 1;
    uint64_t v26 = (void (*)(char *, void))dispatch thunk of PropertyListEncoder.userInfo.modify();
    v28 = v27;
    if (v77)
    {
      sub_100173E4C(&v76, v74);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v78 = (void *)*v28;
      v30 = v78;
      uint64_t *v28 = 0x8000000000000000;
      unint64_t v32 = sub_1007242F0(v18);
      uint64_t v33 = v30[2];
      BOOL v34 = (v31 & 1) == 0;
      uint64_t v35 = v33 + v34;
      if (__OFADD__(v33, v34))
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      char v36 = v31;
      if (v30[3] < v35)
      {
        sub_100E678BC(v35, isUniquelyReferenced_nonNull_native);
        unint64_t v37 = sub_1007242F0(v73);
        if ((v36 & 1) != (v38 & 1)) {
          goto LABEL_55;
        }
        unint64_t v32 = v37;
        v39 = v78;
        if ((v36 & 1) == 0) {
          goto LABEL_28;
        }
LABEL_36:
        v49 = (_OWORD *)(v39[7] + 32 * v32);
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v49);
        sub_100173E4C(v74, v49);
        uint64_t v40 = v69;
LABEL_37:
        uint64_t *v28 = (uint64_t)v39;
        swift_bridgeObjectRelease();
        (*v65)(v73, v40);
        goto LABEL_40;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        v39 = v78;
        if (v31) {
          goto LABEL_36;
        }
      }
      else
      {
        sub_100E7F638();
        v39 = v78;
        if (v36) {
          goto LABEL_36;
        }
      }
LABEL_28:
      v39[(v32 >> 6) + 8] |= 1 << v32;
      uint64_t v40 = v69;
      v25(v39[6] + *(void *)(v60 + 72) * v32, v73, v69);
      sub_100173E4C(v74, (_OWORD *)(v39[7] + 32 * v32));
      uint64_t v41 = v39[2];
      BOOL v19 = __OFADD__(v41, 1);
      uint64_t v42 = v41 + 1;
      if (v19) {
        goto LABEL_53;
      }
      v39[2] = v42;
      v39 = v78;
      goto LABEL_37;
    }
    sub_10001DAB4((uint64_t)&v76, (uint64_t *)&unk_101644360);
    swift_bridgeObjectRetain();
    unint64_t v43 = sub_1007242F0(v18);
    char v45 = v44;
    swift_bridgeObjectRelease();
    if (v45)
    {
      char v46 = swift_isUniquelyReferenced_nonNull_native();
      v78 = (void *)*v28;
      uint64_t *v28 = 0x8000000000000000;
      if ((v46 & 1) == 0) {
        sub_100E7F638();
      }
      v47 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
      v47(v78[6] + *(void *)(v60 + 72) * v43, v5);
      uint64_t v48 = (uint64_t)v78;
      sub_100173E4C((_OWORD *)(v78[7] + 32 * v43), v74);
      sub_100166D64(v43, v48);
      uint64_t *v28 = v48;
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v74, 0, sizeof(v74));
      v47 = *v65;
    }
    v47(v73, v5);
    sub_10001DAB4((uint64_t)v74, (uint64_t *)&unk_101644360);
LABEL_40:
    v26(v75, 0);
    *(void *)&long long v76 = &off_10159F4E0;
    sub_10000588C((uint64_t *)&unk_10164DBD0);
    sub_10025F9B4();
    uint64_t v50 = v72;
    uint64_t v51 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    if (v50)
    {
      swift_release();
      static os_log_type_t.error.getter();
      if (qword_101637258 != -1) {
        swift_once();
      }
      sub_10000588C((uint64_t *)&unk_10163AD00);
      uint64_t v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = v62;
      *(void *)&long long v76 = v50;
      swift_errorRetain();
      sub_10000588C(&qword_101638D40);
      uint64_t v54 = String.init<A>(describing:)();
      uint64_t v56 = v55;
      *(void *)(v53 + 56) = &type metadata for String;
      *(void *)(v53 + 64) = sub_10000B4CC();
      *(void *)(v53 + 32) = v54;
      *(void *)(v53 + 40) = v56;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = 0;
    }
    else
    {
      uint64_t v13 = v51;
      unint64_t v14 = v52;
      swift_release();
      uint64_t v15 = type metadata accessor for Transaction();
      __chkstk_darwin(v15);
      *(&v58 - 8) = v59;
      *((unsigned char *)&v58 - 56) = 8;
      *(&v58 - 6) = (char *)1;
      *(&v58 - 5) = (char *)v13;
      *(&v58 - 4) = (char *)v14;
      *((unsigned char *)&v58 - 24) = v68;
      uint64_t v16 = v70;
      *(&v58 - 2) = v67;
      *(&v58 - 1) = v16;
      static Transaction.named<A>(_:with:)();
      uint64_t v3 = 0;
      sub_10001CFB8(v13, v14);
      swift_bridgeObjectRelease();
    }
    uint64_t v5 = v69;
    unint64_t v11 = v71;
  }
  int64_t v21 = v12 + 1;
  if (v12 + 1 >= v63) {
    return swift_release();
  }
  unint64_t v20 = *(void *)(v61 + 8 * v21);
  if (v20) {
    goto LABEL_19;
  }
  int64_t v21 = v12 + 2;
  if (v12 + 2 >= v63) {
    return swift_release();
  }
  unint64_t v20 = *(void *)(v61 + 8 * v21);
  if (v20) {
    goto LABEL_19;
  }
  int64_t v21 = v12 + 3;
  if (v12 + 3 >= v63) {
    return swift_release();
  }
  unint64_t v20 = *(void *)(v61 + 8 * v21);
  if (v20) {
    goto LABEL_19;
  }
  int64_t v21 = v12 + 4;
  if (v12 + 4 >= v63) {
    return swift_release();
  }
  unint64_t v20 = *(void *)(v61 + 8 * v21);
  if (v20)
  {
LABEL_19:
    int64_t v12 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v63) {
      return swift_release();
    }
    unint64_t v20 = *(void *)(v61 + 8 * v12);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_54:
  __break(1u);
LABEL_55:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void *sub_1007C0E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v6 = (void *)(a1 + 32);
    uint64_t v7 = *(void *)(a2 + 280);
    do
    {
      uint64_t v8 = v6[3];
      uint64_t v9 = v6[4];
      uint64_t v10 = sub_10001CD44(v6, v8);
      sub_100B2B68C((uint64_t)v10, v7, v8, v9);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v6 += 5;
      --v3;
    }
    while (v3);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void sub_1007C0F50(uint64_t a1, unint64_t a2, uint64_t a3, void (**a4)(void, void))
{
  uint64_t v8 = sub_10000588C(&qword_101638CF0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  unint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v31 - v12;
  uint64_t v14 = sub_10000588C((uint64_t *)&unk_1016477E0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for MACAddress();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  _Block_copy(a4);
  sub_1000361E0(a1, a2);
  MACAddress.init(data:type:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_10001DAB4((uint64_t)v16, (uint64_t *)&unk_1016477E0);
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_100010324(v21, (uint64_t)qword_10170F068);
    sub_1000361E0(a1, a2);
    sub_1000361E0(a1, a2);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      unint64_t v32 = v11;
      *(_DWORD *)uint64_t v24 = 136315138;
      char v31 = v24 + 4;
      uint64_t v25 = Data.hexString.getter();
      uint64_t v33 = sub_1008FA0F0(v25, v26, &v34);
      unint64_t v11 = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001CFB8(a1, a2);
      sub_10001CFB8(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "beaconingIdentifier: invalid MAC address %s", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001CFB8(a1, a2);
      sub_10001CFB8(a1, a2);
    }

    uint64_t v28 = type metadata accessor for UUID();
    uint64_t v29 = *(void *)(v28 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v13, 1, 1, v28);
    sub_10001D074((uint64_t)v13, (uint64_t)v11, &qword_101638CF0);
    Class isa = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v11, 1, v28) != 1)
    {
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v28);
    }
    ((void (**)(void, Class))a4)[2](a4, isa);

    sub_10001DAB4((uint64_t)v13, &qword_101638CF0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    uint64_t v27 = *sub_10001CD44((void *)(a3 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(a3 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
    _Block_copy(a4);
    sub_1006B2E64((uint64_t)v20, v27, (uint64_t)a4);
    _Block_release(a4);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  _Block_release(a4);
}

uint64_t sub_1007C1444(uint64_t a1, unint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v47 = v8;
  __chkstk_darwin(v8);
  char v44 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchQoS();
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v42 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v41 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000588C((uint64_t *)&unk_1016477E0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for MACAddress();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a4;
  _Block_copy(a4);
  sub_1000361E0(a1, a2);
  MACAddress.init(data:type:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    uint64_t v39 = v21;
    sub_10001DAB4((uint64_t)v16, (uint64_t *)&unk_1016477E0);
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_100010324(v22, (uint64_t)qword_10170F068);
    sub_1000361E0(a1, a2);
    sub_1000361E0(a1, a2);
    os_log_type_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136315138;
      uint64_t v26 = Data.hexString.getter();
      uint64_t v48 = (void *)sub_1008FA0F0(v26, v27, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001CFB8(a1, a2);
      sub_10001CFB8(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "fetchFindMyNetworkStatus: invalid MAC address %s", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001CFB8(a1, a2);
      sub_10001CFB8(a1, a2);
    }

    uint64_t v29 = v39;
    sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
    uint64_t v31 = v40;
    uint64_t v30 = v41;
    (*(void (**)(char *, void, uint64_t))(v40 + 104))(v13, enum case for DispatchQoS.QoSClass.default(_:), v41);
    unint64_t v32 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v30);
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = sub_10013148C;
    *(void *)(v33 + 24) = v29;
    aBlock[4] = (uint64_t)sub_1007C80D0;
    aBlock[5] = v33;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1004B5480;
    aBlock[3] = (uint64_t)&unk_1015D5B38;
    uint64_t v34 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v35 = v42;
    static DispatchQoS.unspecified.getter();
    uint64_t v48 = _swiftEmptyArrayStorage;
    sub_1007C7800((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_10002FE84();
    char v36 = v44;
    uint64_t v37 = v47;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v34);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v37);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v45);
    swift_release();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    uint64_t v28 = *sub_10001CD44((void *)(a3 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(a3 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
    _Block_copy(a4);
    sub_1006B3848((uint64_t)v20, v28, (uint64_t)a4);
    _Block_release(a4);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  return swift_release();
}

uint64_t sub_1007C1B48(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, const void *a6)
{
  uint64_t v27 = a3;
  unint64_t v28 = a4;
  uint64_t v10 = type metadata accessor for MACAddress();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v26 - v15;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a6;
  _Block_copy(a6);
  sub_1000361E0(a1, a2);
  MACAddress.init(dataRepresentation:)();
  uint64_t v18 = *sub_10001CD44((void *)(a5 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(a5 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
  uint64_t v26 = type metadata accessor for Transaction();
  uint64_t v19 = v10;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  unint64_t v20 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v21 = (char *)swift_allocObject();
  *((void *)v21 + 2) = v18;
  *((void *)v21 + 3) = sub_1001E06E0;
  *((void *)v21 + 4) = v17;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v21[v20], v14, v10);
  uint64_t v22 = (uint64_t *)&v21[(v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v24 = v27;
  unint64_t v23 = v28;
  *uint64_t v22 = v27;
  v22[1] = v23;
  swift_retain();
  swift_retain();
  sub_1000361E0(v24, v23);
  static Transaction.asyncTask(name:block:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v19);
  return swift_release();
}

uint64_t sub_1007C1F84(uint64_t a1, unint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v8 = type metadata accessor for MACAddress();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a4;
  _Block_copy(a4);
  sub_1000361E0(a1, a2);
  MACAddress.init(dataRepresentation:)();
  uint64_t v16 = *sub_10001CD44((void *)(a3 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(a3 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
  type metadata accessor for Transaction();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = v16;
  *((void *)v18 + 3) = sub_1001E06E0;
  *((void *)v18 + 4) = v15;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v18[v17], v12, v8);
  swift_retain();
  swift_retain();
  static Transaction.asyncTask(name:block:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return swift_release();
}

uint64_t sub_1007C238C(uint64_t a1, unint64_t a2, int a3, uint64_t a4, void *a5)
{
  LODWORD(v40) = a3;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  __chkstk_darwin(v9);
  uint64_t v45 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for DispatchQoS();
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v43 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v41 = *(void *)(v12 - 8);
  uint64_t v42 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000588C((uint64_t *)&unk_1016477E0);
  __chkstk_darwin(v15 - 8);
  unint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for MACAddress();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a5;
  _Block_copy(a5);
  sub_1000361E0(a1, a2);
  MACAddress.init(data:type:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    uint64_t v40 = v22;
    sub_10001DAB4((uint64_t)v17, (uint64_t *)&unk_1016477E0);
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_100010324(v23, (uint64_t)qword_10170F068);
    sub_1000361E0(a1, a2);
    sub_1000361E0(a1, a2);
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315138;
      uint64_t v27 = Data.hexString.getter();
      v49 = (void *)sub_1008FA0F0(v27, v28, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001CFB8(a1, a2);
      sub_10001CFB8(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "setFindMyNetworkStatus: invalid MAC address %s", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001CFB8(a1, a2);
      sub_10001CFB8(a1, a2);
    }

    uint64_t v30 = v40;
    sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
    uint64_t v32 = v41;
    uint64_t v31 = v42;
    (*(void (**)(char *, void, uint64_t))(v41 + 104))(v14, enum case for DispatchQoS.QoSClass.default(_:), v42);
    uint64_t v33 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v31);
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = sub_1001E06E0;
    *(void *)(v34 + 24) = v30;
    aBlock[4] = (uint64_t)sub_1007C7CF0;
    aBlock[5] = v34;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1004B5480;
    aBlock[3] = (uint64_t)&unk_1015D5A20;
    uint64_t v35 = _Block_copy(aBlock);
    swift_retain();
    char v36 = v43;
    static DispatchQoS.unspecified.getter();
    v49 = _swiftEmptyArrayStorage;
    sub_1007C7800((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_10002FE84();
    uint64_t v37 = v45;
    uint64_t v38 = v48;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v35);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v38);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v36, v46);
    swift_release();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    uint64_t v29 = *sub_10001CD44((void *)(a4 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(a4 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
    _Block_copy(a5);
    sub_1006B3EC0((uint64_t)v21, v40 & 1, v29, (void (**)(const void *, void *))a5);
    _Block_release(a5);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  return swift_release();
}

void sub_1007C2A9C(char a1, uint64_t a2, uint64_t a3)
{
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v5 = sub_1010AB9F8(v32);
  swift_bridgeObjectRelease();
  sub_1000A5940();
  id v6 = sub_100F16154();
  id v7 = [v6 stringForKey:SPSettingsServiceStateKey];

  if (!v7)
  {
    if (qword_101636E28 != -1) {
      swift_once();
    }
    id v7 = (id)qword_10170E680;
  }
  swift_release();
  if (*(void *)(v5 + 16))
  {
    id v8 = SPDisabledReasonNone;
    char v9 = sub_100272E5C((uint64_t)v8, v5);

    if ((v9 & 1) == 0) {
      goto LABEL_14;
    }
  }
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;
  if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
LABEL_14:
      uint64_t v16 = (id *)&SPOwnerDataStateNotAvailable;
      BOOL v17 = (a1 & 1) == 0;
      goto LABEL_15;
    }
  }
  if ((a1 & 1) == 0)
  {
    uint64_t v16 = (id *)&SPOwnerDataStateInitializing;
    goto LABEL_25;
  }
  uint64_t v18 = sub_100AB24F0();
  if ((*(unsigned char *)(v18 + 184) & 1) != 0
    || *(void *)(v18 + 136) && (swift_retain(), char v19 = sub_1004B3448(), swift_release(), (v19 & 1) != 0))
  {
    swift_release();
    uint64_t v16 = (id *)&SPOwnerDataStateUpdating;
    goto LABEL_25;
  }
  char v31 = sub_10042C8F8();
  swift_release();
  uint64_t v16 = (id *)&SPOwnerDataStateUpdating;
  BOOL v17 = (v31 & 1) == 0;
LABEL_15:
  if (!v17) {
    uint64_t v16 = (id *)&SPOwnerDataStateUpToDate;
  }
LABEL_25:
  id v20 = *v16;
  id v21 = v7;
  sub_101158984(v5);
  swift_bridgeObjectRelease();
  id v22 = objc_allocWithZone((Class)SPOwnerSessionState);
  type metadata accessor for SPDisabledReason(0);
  sub_1007C7800(&qword_101637E20, type metadata accessor for SPDisabledReason);
  id v23 = v20;
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v25 = [v22 initWithServiceState:v21 disabledReasons:isa ownerDataState:v23];

  static os_log_type_t.default.getter();
  if (qword_101637250 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_101342130;
  id v27 = [v25 description];
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  *(void *)(v26 + 56) = &type metadata for String;
  *(void *)(v26 + 64) = sub_10000B4CC();
  *(void *)(v26 + 32) = v28;
  *(void *)(v26 + 40) = v30;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, id))(a3 + 16))(a3, v25);
}

void sub_1007C2F00(uint64_t a1, unint64_t a2, uint64_t a3, void (**a4)(void, void))
{
  uint64_t v8 = sub_10000588C((uint64_t *)&unk_1016477E0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MACAddress();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  _Block_copy(a4);
  sub_1000361E0(a1, a2);
  MACAddress.init(data:type:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10001DAB4((uint64_t)v10, (uint64_t *)&unk_1016477E0);
    static os_log_type_t.error.getter();
    if (qword_101637230 != -1) {
      swift_once();
    }
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_101342130;
    uint64_t v16 = Data.hexString.getter();
    uint64_t v18 = v17;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_10000B4CC();
    *(void *)(v15 + 32) = v16;
    *(void *)(v15 + 40) = v18;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    type metadata accessor for SPOwnerSessionError(0);
    v22[0] = 5;
    sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
    sub_1007C7800(&qword_101638460, type metadata accessor for SPOwnerSessionError);
    _BridgedStoredNSError.init(_:userInfo:)();
    char v19 = (void *)v22[1];
    id v20 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void *))a4)[2](a4, v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    uint64_t v21 = *(void *)(*(void *)(*sub_10001CD44((void *)(a3+ OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(a3+ OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation+ 24))+ OBJC_IVAR____TtC12searchpartyd20BeaconManagerService_bluetoothCommunicatorCoordinator)+ 24);
    _Block_copy(a4);
    sub_1013329A0((uint64_t)v14, v21, a4);
    _Block_release(a4);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  _Block_release(a4);
}

void sub_1007C3260(char **a1, unint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v8 = sub_10000588C(&qword_10163BB20);
  __chkstk_darwin(v8 - 8);
  uint64_t v44 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for OwnedBeaconGroup(0);
  unint64_t v10 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007C7510(a3 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation, (uint64_t)v47);
  uint64_t v13 = sub_10001CD44(v47, v47[3]);
  if (a2 >> 62)
  {
LABEL_22:
    _Block_copy(a4);
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _Block_copy(a4);
  }
  uint64_t v15 = _swiftEmptyArrayStorage;
  uint64_t v42 = v12;
  unint64_t v43 = v10;
  if (v14)
  {
    uint64_t v41 = v13;
    uint64_t v46 = _swiftEmptyArrayStorage;
    uint64_t v13 = &v46;
    sub_1000B700C(0, v14 & ~(v14 >> 63), 0);
    if (v14 < 0)
    {
      __break(1u);
LABEL_24:
      uint64_t v33 = v40;
      _Block_release(v40);
      _Block_release(v33);
      LODWORD(v37) = 0;
      uint64_t v36 = 3451;
      v35[0] = 2;
    }
    else
    {
      uint64_t v39 = a1;
      uint64_t v40 = a4;
      a4 = 0;
      uint64_t v15 = v46;
      unint64_t v10 = a2 & 0xC000000000000001;
      a1 = &selRef_fetchEncryptedPayloadForUnknownBeacon_completion_;
      while (1)
      {
        if ((const void *)v14 == a4)
        {
          __break(1u);
          goto LABEL_22;
        }
        if (v10) {
          uint64_t v16 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v16 = *(id *)(a2 + 8 * (void)a4 + 32);
        }
        uint64_t v13 = v16;
        unint64_t v17 = (unint64_t)[v16 integerValue:v39];
        if ((v17 & 0x8000000000000000) != 0) {
          goto LABEL_24;
        }
        char v18 = v17;
        if (v17 >= 0x100) {
          break;
        }

        uint64_t v46 = v15;
        uint64_t v12 = (char *)v15[2];
        unint64_t v19 = v15[3];
        if ((unint64_t)v12 >= v19 >> 1)
        {
          uint64_t v13 = &v46;
          sub_1000B700C(v19 > 1, (int64_t)(v12 + 1), 1);
          uint64_t v15 = v46;
        }
        a4 = (char *)a4 + 1;
        v15[2] = v12 + 1;
        v12[(void)v15 + 32] = v18;
        if ((const void *)v14 == a4)
        {
          a4 = v40;
          uint64_t v20 = (uint64_t)v44;
          a1 = v39;
          uint64_t v13 = v41;
          goto LABEL_17;
        }
      }
      uint64_t v34 = v40;
      _Block_release(v40);
      _Block_release(v34);
      LODWORD(v37) = 0;
      uint64_t v36 = 3455;
      v35[0] = 2;
    }
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v20 = (uint64_t)v44;
LABEL_17:
    uint64_t v21 = *v13;
    _Block_copy(a4);
    _Block_copy(a4);
    sub_100AE75E0((uint64_t)a1, v20);
    uint64_t v22 = v45;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v20, 1, v45) == 1)
    {
      sub_10001DAB4(v20, &qword_10163BB20);
      sub_1003A4778();
      swift_allocError();
      *id v23 = 1;
      uint64_t v24 = (void *)_convertErrorToNSError(_:)();
      (*((void (**)(const void *, void *))a4 + 2))(a4, v24);

      swift_errorRelease();
    }
    else
    {
      uint64_t v25 = (uint64_t)v42;
      uint64_t v26 = sub_1007C787C(v20, (uint64_t)v42, type metadata accessor for OwnedBeaconGroup);
      uint64_t v27 = *(void *)(v25 + *(int *)(v22 + 40));
      __chkstk_darwin(v26);
      uint64_t v37 = v25;
      uint64_t v38 = v15;
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1000D1650((uint64_t)_swiftEmptyArrayStorage, (void (*)(uint64_t *, void *))sub_1007C78E4, (uint64_t)v35, v27);
      swift_bridgeObjectRelease();
      uint64_t v29 = *(unsigned char **)(v21 + OBJC_IVAR____TtC12searchpartyd20BeaconManagerService_classicPairingSupport);
      uint64_t v30 = a4;
      uint64_t v31 = v25 + *(int *)(v22 + 28);
      _Block_copy(v30);
      uint64_t v32 = v31;
      a4 = v30;
      sub_100414028(v32, v28, v29, v30);
      _Block_release(v30);
      swift_bridgeObjectRelease();
      sub_1007C7900(v25, type metadata accessor for OwnedBeaconGroup);
    }
    _Block_release(a4);
    _Block_release(a4);
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v47);
    _Block_release(a4);
  }
}

void sub_1007C3794(uint64_t a1, uint64_t a2)
{
  static os_log_type_t.default.getter();
  if (qword_101637250 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_101347BA0;
  char ObjectType = swift_getObjectType();
  sub_10000588C((uint64_t *)&unk_101665F30);
  uint64_t v5 = String.init<A>(describing:)();
  uint64_t v7 = v6;
  *(void *)(v4 + 56) = &type metadata for String;
  unint64_t v8 = sub_10000B4CC();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  *(void *)(v4 + 96) = &type metadata for String;
  *(void *)(v4 + 104) = v8;
  *(void *)(v4 + 64) = v8;
  *(void *)(v4 + 72) = 0xD00000000000001ELL;
  *(void *)(v4 + 80) = 0x8000000101408130;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v9 = *sub_10001CD44((void *)(a1 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(a1 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
  swift_retain();
  AnyCurrentValuePublisher.value.getter();
  swift_release();
  unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 280);
  uint64_t v11 = sub_100AD2AD4();
  if (qword_101636CB8 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_10170E330;
  swift_retain();
  uint64_t v13 = sub_1002B1EEC(v11, v10, v12, ObjectType);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  uint64_t v14 = sub_1007C0E7C(v13, v9);
  swift_bridgeObjectRelease();
  swift_release();
  sub_101159418((unint64_t)v14);
  swift_bridgeObjectRelease();
  sub_10001D4B0(0, (unint64_t *)&unk_10164DC30);
  sub_10012E2E4((unint64_t *)&qword_1016556B0, (unint64_t *)&unk_10164DC30);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a2 + 16))(a2, isa);
  swift_bridgeObjectRelease();
}

uint64_t sub_1007C3A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, void *, uint64_t))
{
  static os_log_type_t.default.getter();
  if (qword_1016372F0 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  static os_log_type_t.default.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_101347BA0;
  swift_getObjectType();
  sub_10000588C((uint64_t *)&unk_101665F30);
  uint64_t v12 = String.init<A>(describing:)();
  uint64_t v14 = v13;
  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v15 = sub_10000B4CC();
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v14;
  *(void *)(v11 + 96) = &type metadata for String;
  *(void *)(v11 + 104) = v15;
  *(void *)(v11 + 64) = v15;
  *(void *)(v11 + 72) = 0xD000000000000039;
  *(void *)(v11 + 80) = a6;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_10001CD44((void *)(a2 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(a2 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
  uint64_t v16 = sub_100A46B88();
  a7(a1, v16, a3);
  return swift_release();
}

uint64_t sub_1007C3C30(unint64_t a1, uint64_t a2, uint64_t a3)
{
  static os_log_type_t.default.getter();
  if (qword_1016372F0 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  static os_log_type_t.default.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_101347BA0;
  swift_getObjectType();
  sub_10000588C((uint64_t *)&unk_101665F30);
  uint64_t v7 = String.init<A>(describing:)();
  uint64_t v9 = v8;
  *(void *)(v6 + 56) = &type metadata for String;
  unint64_t v10 = sub_10000B4CC();
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v9;
  *(void *)(v6 + 96) = &type metadata for String;
  *(void *)(v6 + 104) = v10;
  *(void *)(v6 + 64) = v10;
  *(void *)(v6 + 72) = 0xD00000000000003BLL;
  *(void *)(v6 + 80) = 0x8000000101406DE0;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_10001CD44((void *)(a2 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(a2 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
  uint64_t v11 = sub_100A46B88();
  sub_100797F70(a1, v11, a3);
  return swift_release();
}

uint64_t sub_1007C3E20(void *a1, uint64_t a2, uint64_t a3)
{
  v20[0] = a1;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_10163AC90);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v10 = (char *)v20 - v9;
  static os_log_type_t.default.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_101347BA0;
  v20[1] = (void *)swift_getObjectType();
  sub_10000588C((uint64_t *)&unk_101665F30);
  uint64_t v12 = String.init<A>(describing:)();
  uint64_t v14 = v13;
  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v15 = sub_10000B4CC();
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v14;
  *(void *)(v11 + 96) = &type metadata for String;
  *(void *)(v11 + 104) = v15;
  *(void *)(v11 + 64) = v15;
  *(void *)(v11 + 72) = 0xD000000000000038;
  *(void *)(v11 + 80) = 0x8000000101408030;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_10001CD44((void *)(a2 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(a2 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
  sub_100A46B88();
  sub_100780834(v20[0], (uint64_t)v10);
  swift_release();
  sub_10001D074((uint64_t)v10, (uint64_t)v8, (uint64_t *)&unk_10163AC90);
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v16 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v16) != 1)
  {
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v16);
  }
  (*(void (**)(uint64_t, Class, void))(a3 + 16))(a3, isa, 0);

  return sub_10001DAB4((uint64_t)v10, (uint64_t *)&unk_10163AC90);
}

uint64_t sub_1007C40D4(void *a1, uint64_t a2, uint64_t a3)
{
  static os_log_type_t.default.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_101347BA0;
  swift_getObjectType();
  sub_10000588C((uint64_t *)&unk_101665F30);
  uint64_t v7 = String.init<A>(describing:)();
  uint64_t v9 = v8;
  *(void *)(v6 + 56) = &type metadata for String;
  unint64_t v10 = sub_10000B4CC();
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v9;
  *(void *)(v6 + 96) = &type metadata for String;
  *(void *)(v6 + 104) = v10;
  *(void *)(v6 + 64) = v10;
  *(void *)(v6 + 72) = 0xD000000000000034;
  *(void *)(v6 + 80) = 0x8000000101407FF0;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_10001CD44((void *)(a2 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(a2 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
  uint64_t v11 = sub_100A46B88();
  sub_100796894(a1, (uint64_t)v11, a3);
  return swift_release();
}

uint64_t sub_1007C425C(uint64_t a1, uint64_t a2, const void *a3)
{
  uint64_t v17 = a1;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t)a3;
  _Block_copy(a3);
  static os_log_type_t.default.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_101347BA0;
  uint64_t ObjectType = swift_getObjectType();
  sub_10000588C((uint64_t *)&unk_101665F30);
  uint64_t v10 = String.init<A>(describing:)();
  uint64_t v12 = v11;
  *(void *)(v9 + 56) = &type metadata for String;
  unint64_t v13 = sub_10000B4CC();
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v12;
  *(void *)(v9 + 96) = &type metadata for String;
  *(void *)(v9 + 104) = v13;
  *(void *)(v9 + 64) = v13;
  *(void *)(v9 + 72) = 0xD00000000000002DLL;
  *(void *)(v9 + 80) = 0x8000000101407FA0;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  UUID.init()();
  uint64_t v14 = sub_10001CD44((void *)(a2 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(a2 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
  sub_10046933C((uint64_t)v8, v17, 2, *v14, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1007C4478(void *a1, uint64_t a2, const void *a3)
{
  uint64_t v6 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v6 - 8);
  uint64_t v41 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000588C((uint64_t *)&unk_10163B1D0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v38 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v38 - v15;
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = a3;
  _Block_copy(a3);
  uint64_t v42 = (void *)a3;
  _Block_copy(a3);
  uint64_t v17 = a1;
  id v18 = [a1 identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100ACCD98((uint64_t)v16, (uint64_t)v47);
  unint64_t v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v40 = v11;
  v19(v16, v11);
  sub_10001D074((uint64_t)v47, (uint64_t)v46, (uint64_t *)&unk_10163BBE0);
  uint64_t v39 = v19;
  if (v46[3])
  {
    sub_10000588C((uint64_t *)&unk_10164DBF0);
    uint64_t v20 = type metadata accessor for LocalFindableAccessoryRecord();
    int v21 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, v21 ^ 1u, 1, v20);
  }
  else
  {
    sub_10001DAB4((uint64_t)v46, (uint64_t *)&unk_10163BBE0);
    uint64_t v20 = type metadata accessor for LocalFindableAccessoryRecord();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 1, 1, v20);
  }
  type metadata accessor for LocalFindableAccessoryRecord();
  int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v10, 1, v20);
  sub_10001DAB4((uint64_t)v10, (uint64_t *)&unk_10163B1D0);
  if (v22)
  {
    sub_10001D074((uint64_t)v47, (uint64_t)&v44, (uint64_t *)&unk_10163BBE0);
    if (v45)
    {
      sub_10001CEB0(&v44, (uint64_t)v46);
      uint64_t v23 = *sub_10001CD44((void *)(a2 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(a2 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
      uint64_t v24 = (void (**)(void, void))v42;
      _Block_copy(v42);
      sub_10047EAC8((uint64_t)v46, v23, v24);
      _Block_release(v24);
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v46);
    }
    else
    {
      sub_10001DAB4((uint64_t)&v44, (uint64_t *)&unk_10163BBE0);
      type metadata accessor for SPOwnerSessionError(0);
      *(void *)&long long v44 = 2;
      sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
      sub_1007C7800(&qword_101638460, type metadata accessor for SPOwnerSessionError);
      _BridgedStoredNSError.init(_:userInfo:)();
      uint64_t v36 = (void *)v46[0];
      uint64_t v37 = (void *)_convertErrorToNSError(_:)();
      uint64_t v24 = (void (**)(void, void))v42;
      (*((void (**)(void *, void *))v42 + 2))(v42, v37);
    }
    sub_10001DAB4((uint64_t)v47, (uint64_t *)&unk_10163BBE0);
    swift_release();
    uint64_t v35 = v24;
  }
  else
  {
    uint64_t v25 = sub_10001CD44((void *)(a2 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(a2 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
    id v26 = [v17 identifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v27 = swift_allocObject();
    uint64_t v28 = v43;
    *(void *)(v27 + 16) = sub_1001E06E0;
    *(void *)(v27 + 24) = v28;
    uint64_t v29 = *v25;
    uint64_t v30 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v41, 1, 1, v30);
    uint64_t v31 = v38;
    uint64_t v32 = v40;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v38, v16, v40);
    unint64_t v33 = (*(unsigned __int8 *)(v12 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v34 = (char *)swift_allocObject();
    *((void *)v34 + 2) = 0;
    *((void *)v34 + 3) = 0;
    *((void *)v34 + 4) = v29;
    *((void *)v34 + 5) = sub_1003B6E7C;
    *((void *)v34 + 6) = v27;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v34[v33], v31, v32);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1008F5E44(v41, (uint64_t)&unk_101642658, (uint64_t)v34);
    swift_release();
    swift_release();
    v39(v16, v32);
    sub_10001DAB4((uint64_t)v47, (uint64_t *)&unk_10163BBE0);
    swift_release();
    uint64_t v35 = v42;
  }
  _Block_release(v35);
}

void sub_1007C4AC8(void *a1, uint64_t a2, void (**a3)(void, void))
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000588C(&qword_10163B9F0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a2;
  _Block_copy(a3);
  id v17 = [a1 identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100ACD178((uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10001DAB4((uint64_t)v12, &qword_10163B9F0);
    type metadata accessor for SPOwnerSessionError(0);
    uint64_t v23 = 2;
    sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
    sub_1007C7800(&qword_101638460, type metadata accessor for SPOwnerSessionError);
    _BridgedStoredNSError.init(_:userInfo:)();
    id v18 = v24;
    unint64_t v19 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void *))a3)[2](a3, v19);
  }
  else
  {
    sub_1007C787C((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v20 = *sub_10001CD44((void *)(v22 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(v22 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
    _Block_copy(a3);
    sub_10047EF04((uint64_t)v16, v20, (void (**)(const void *, void *))a3);
    _Block_release(a3);
    sub_1007C7900((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  }
  _Block_release(a3);
}

void sub_1007C4E04(void *a1, char *a2, const void *a3)
{
  uint64_t v6 = sub_10000588C((uint64_t *)&unk_10163AC90);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v139 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v144 = v9;
  uint64_t v145 = v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v140 = (uint64_t)&v139 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v139 = (uint64_t)&v139 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  v141 = (char *)&v139 - v16;
  __chkstk_darwin(v15);
  v142 = (char *)&v139 - v17;
  uint64_t v146 = swift_allocObject();
  *(void *)(v146 + 16) = a3;
  _Block_copy(a3);
  _Block_copy(a3);
  _Block_copy(a3);
  v147 = a3;
  _Block_copy(a3);
  static os_log_type_t.default.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_101347500;
  v143 = a2;
  id aBlock = (id)swift_getObjectType();
  sub_10000588C((uint64_t *)&unk_101665F30);
  uint64_t v19 = String.init<A>(describing:)();
  uint64_t v21 = v20;
  *(void *)(v18 + 56) = &type metadata for String;
  unint64_t v22 = sub_10000B4CC();
  *(void *)(v18 + 32) = v19;
  *(void *)(v18 + 40) = v21;
  *(void *)(v18 + 96) = &type metadata for String;
  *(void *)(v18 + 104) = v22;
  *(void *)(v18 + 64) = v22;
  *(void *)(v18 + 72) = 0xD000000000000016;
  *(void *)(v18 + 80) = 0x8000000101407E70;
  id aBlock = [a1 type];
  uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
  *(void *)(v18 + 136) = &type metadata for String;
  *(void *)(v18 + 144) = v22;
  *(void *)(v18 + 112) = v23;
  *(void *)(v18 + 120) = v24;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  switch((unint64_t)[a1 type])
  {
    case 0uLL:
      sub_10001CD44(&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation], *(void *)&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24]);
      sub_10000588C(&qword_10163BC50);
      uint64_t v28 = v145;
      unint64_t v29 = (*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_101342130;
      id v31 = [a1 beaconIdentifier];
      uint64_t v32 = v142;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v30 + v29, v32, v144);
      uint64_t v33 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v8, 1, 1, v33);
      uint64_t v34 = swift_allocObject();
      uint64_t v35 = v146;
      *(void *)(v34 + 16) = sub_1001E06E0;
      *(void *)(v34 + 24) = v35;
      swift_retain();
      sub_10044CCF0((char *)v30, (uint64_t)v8, (uint64_t)&_swiftEmptySetSingleton, 1, (uint64_t)sub_1003C6214, v34);
      swift_bridgeObjectRelease();
      swift_release();
      sub_10001DAB4((uint64_t)v8, (uint64_t *)&unk_10163AC90);
      goto LABEL_28;
    case 1uLL:
      sub_10001CD44(&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation], *(void *)&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24]);
      id v36 = [a1 identifier];
      uint64_t v37 = (void (*)(void, void))v142;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      id v38 = [a1 beaconIdentifier];
      uint64_t v39 = (uint64_t)v141;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10046EB7C((uint64_t)v37, v39, (uint64_t)sub_1001E06E0, v146);
      goto LABEL_27;
    case 2uLL:
      sub_10001CD44(&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation], *(void *)&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24]);
      id v40 = [a1 identifier];
      uint64_t v37 = (void (*)(void, void))v142;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      id v41 = [a1 beaconIdentifier];
      uint64_t v39 = (uint64_t)v141;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10046F5C0((uint64_t)v37, v39, (uint64_t)sub_1001E06E0, v146);
      goto LABEL_27;
    case 3uLL:
      uint64_t v42 = sub_10001CD44(&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation], *(void *)&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24]);
      id v43 = [a1 identifier];
      uint64_t v44 = (uint64_t)v142;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      id v45 = [a1 beaconIdentifier];
      uint64_t v46 = (uint64_t)v141;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      id v47 = [a1 playSoundContext];
      uint64_t v48 = *v42;
      uint64_t v27 = v147;
      _Block_copy(v147);
      sub_10046933C(v44, v46, (uint64_t)v47, v48, (uint64_t)v27);
      v49 = *(void (**)(uint64_t, uint64_t))(v145 + 8);
      uint64_t v50 = v46;
      uint64_t v51 = v144;
      v49(v50, v144);
      v49(v44, v51);
      goto LABEL_10;
    case 4uLL:
      sub_10001CD44(&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation], *(void *)&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24]);
      id v53 = [a1 identifier];
      uint64_t v37 = (void (*)(void, void))v142;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      id v54 = [a1 beaconIdentifier];
      uint64_t v39 = (uint64_t)v141;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10046AAD0((uint64_t)v37, v39, (uint64_t)sub_1001E06E0, v146);
      goto LABEL_27;
    case 5uLL:
      sub_1007C7510((uint64_t)&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation], (uint64_t)&aBlock);
      uint64_t v55 = sub_10001CD44(&aBlock, (uint64_t)v151);
      id v56 = [a1 beaconIdentifier];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      id v57 = [a1 lostModeMessage];
      if (v57)
      {
        v58 = v57;
        uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v61 = v60;
      }
      else
      {
        uint64_t v59 = 0;
        uint64_t v61 = 0;
      }
      id v112 = [a1 lostModePhoneNumber];
      if (v112)
      {
        v113 = v112;
        uint64_t v114 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v116 = v115;
      }
      else
      {
        uint64_t v114 = 0;
        uint64_t v116 = 0;
      }
      v123 = v147;
      id v124 = [a1 lostModeEmail];
      if (v124)
      {
        v125 = v124;
        uint64_t v126 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v128 = v127;
      }
      else
      {
        uint64_t v126 = 0;
        uint64_t v128 = 0;
      }
      uint64_t v134 = *v55;
      _Block_copy(v123);
      uint64_t v137 = v134;
      uint64_t v135 = v139;
      sub_100480FA8(v139, 1, v59, v61, v114, v116, v126, v128, v137, v123);
      goto LABEL_48;
    case 6uLL:
      sub_1007C7510((uint64_t)&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation], (uint64_t)&aBlock);
      long long v62 = sub_10001CD44(&aBlock, (uint64_t)v151);
      id v63 = [a1 beaconIdentifier];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      id v64 = [a1 lostModeMessage];
      if (v64)
      {
        v65 = v64;
        uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v68 = v67;
      }
      else
      {
        uint64_t v66 = 0;
        uint64_t v68 = 0;
      }
      id v117 = [a1 lostModePhoneNumber];
      if (v117)
      {
        v118 = v117;
        uint64_t v119 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v121 = v120;
      }
      else
      {
        uint64_t v119 = 0;
        uint64_t v121 = 0;
      }
      v123 = v147;
      id v129 = [a1 lostModeEmail];
      if (v129)
      {
        v130 = v129;
        uint64_t v131 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v133 = v132;
      }
      else
      {
        uint64_t v131 = 0;
        uint64_t v133 = 0;
      }
      uint64_t v136 = *v62;
      _Block_copy(v123);
      uint64_t v138 = v136;
      uint64_t v135 = v140;
      sub_100480FA8(v140, 0, v66, v68, v119, v121, v131, v133, v138, v123);
LABEL_48:
      _Block_release(v123);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v135, v144);
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&aBlock);
      swift_release();
      _Block_release(v123);
      _Block_release(v123);
      unint64_t v52 = v123;
      goto LABEL_30;
    case 7uLL:
      sub_10000588C(&qword_10163BC50);
      uint64_t v69 = v145;
      unint64_t v70 = (*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
      uint64_t v71 = swift_allocObject();
      *(_OWORD *)(v71 + 16) = xmmword_101342130;
      unint64_t v72 = v71 + v70;
      id v73 = [a1 beaconIdentifier];
      v74 = v142;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(unint64_t, char *, uint64_t))(v69 + 32))(v72, v74, v144);
      v75.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      uint64_t v76 = swift_allocObject();
      uint64_t v77 = v146;
      *(void *)(v76 + 16) = sub_1001E06E0;
      *(void *)(v76 + 24) = v77;
      v152 = sub_1007C759C;
      uint64_t v153 = v76;
      id aBlock = _NSConcreteStackBlock;
      uint64_t v149 = 1107296256;
      v150 = sub_10001EB4C;
      v151 = &unk_1015D5610;
      v78 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v143 enableSeparationMonitoringForBeacons:v75.super.isa completion:v78];
      goto LABEL_18;
    case 8uLL:
      sub_10000588C(&qword_10163BC50);
      uint64_t v79 = v145;
      unint64_t v80 = (*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
      uint64_t v81 = swift_allocObject();
      *(_OWORD *)(v81 + 16) = xmmword_101342130;
      unint64_t v82 = v81 + v80;
      id v83 = [a1 beaconIdentifier];
      v84 = v142;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(unint64_t, char *, uint64_t))(v79 + 32))(v82, v84, v144);
      v75.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      uint64_t v85 = swift_allocObject();
      uint64_t v86 = v146;
      *(void *)(v85 + 16) = sub_1001E06E0;
      *(void *)(v85 + 24) = v86;
      v152 = sub_1007C84F4;
      uint64_t v153 = v85;
      id aBlock = _NSConcreteStackBlock;
      uint64_t v149 = 1107296256;
      v150 = sub_10001EB4C;
      v151 = &unk_1015D55C0;
      v78 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v143 disableSeparationMonitoringForBeacons:v75.super.isa completion:v78];
LABEL_18:
      _Block_release(v78);
      swift_release();

      goto LABEL_29;
    case 9uLL:
      sub_10001CD44(&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation], *(void *)&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24]);
      id v87 = [a1 identifier];
      uint64_t v37 = (void (*)(void, void))v142;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      id v88 = [a1 beaconIdentifier];
      uint64_t v39 = (uint64_t)v141;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10046D808(v37, v39, (uint64_t)sub_1001E06E0, v146);
      goto LABEL_27;
    case 0xAuLL:
      sub_10001CD44(&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation], *(void *)&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24]);
      id v89 = [a1 beaconIdentifier];
      uint64_t v90 = (uint64_t)v142;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10046B7C8(v90, (uint64_t)sub_1001E06E0, v146);
      (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v90, v144);
      goto LABEL_28;
    case 0xBuLL:
      id v91 = [a1 obfuscatedIdentifier];
      if (v91)
      {
        v92 = v91;
        uint64_t v93 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v95 = v94;

        static os_log_type_t.default.getter();
        uint64_t v96 = swift_allocObject();
        *(_OWORD *)(v96 + 16) = xmmword_101342130;
        *(void *)(v96 + 56) = &type metadata for String;
        *(void *)(v96 + 64) = v22;
        *(void *)(v96 + 32) = v93;
        *(void *)(v96 + 40) = v95;
        swift_bridgeObjectRetain();
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        sub_1003A4778();
        swift_allocError();
        unsigned char *v97 = 1;
        v98 = (void *)_convertErrorToNSError(_:)();
        v99 = v147;
        (*((void (**)(const void *, void *))v147 + 2))(v147, v98);

        swift_errorRelease();
        swift_release();
        swift_bridgeObjectRelease();
        _Block_release(v99);
        _Block_release(v99);
        unint64_t v52 = v99;
      }
      else
      {
        sub_1007C74BC();
        swift_allocError();
        unsigned char *v122 = 0;
LABEL_5:
        id v26 = (void *)_convertErrorToNSError(_:)();
        uint64_t v27 = v147;
        (*((void (**)(const void *, void *))v147 + 2))(v147, v26);

        swift_errorRelease();
LABEL_10:
        swift_release();
        _Block_release(v27);
        _Block_release(v27);
        unint64_t v52 = v27;
      }
LABEL_30:
      _Block_release(v52);
      return;
    case 0xCuLL:
      sub_10001CD44(&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation], *(void *)&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24]);
      id v100 = [a1 identifier];
      uint64_t v37 = (void (*)(void, void))v142;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      id v101 = [a1 beaconIdentifier];
      uint64_t v39 = (uint64_t)v141;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10046D59C();
      goto LABEL_27;
    case 0xDuLL:
      sub_10001CD44(&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation], *(void *)&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24]);
      id v102 = [a1 identifier];
      uint64_t v37 = (void (*)(void, void))v142;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      id v103 = [a1 beaconIdentifier];
      uint64_t v39 = (uint64_t)v141;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10046DE50((uint64_t)v37, v39, (uint64_t)sub_1001E06E0, v146);
      goto LABEL_27;
    case 0xEuLL:
      sub_10001CD44(&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation], *(void *)&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24]);
      id v104 = [a1 identifier];
      uint64_t v37 = (void (*)(void, void))v142;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      id v105 = [a1 beaconIdentifier];
      uint64_t v39 = (uint64_t)v141;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1004650DC((uint64_t)v37, v39, (uint64_t)sub_1001E06E0, v146);
      goto LABEL_27;
    case 0xFuLL:
      sub_10001CD44(&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation], *(void *)&v143[OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24]);
      id v106 = [a1 identifier];
      uint64_t v37 = (void (*)(void, void))v142;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      id v107 = [a1 beaconIdentifier];
      uint64_t v39 = (uint64_t)v141;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10046720C((uint64_t)v37, v39, (uint64_t)sub_1001E06E0, v146);
LABEL_27:
      v108 = *(void (**)(uint64_t, uint64_t))(v145 + 8);
      uint64_t v109 = v39;
      uint64_t v110 = v144;
      v108(v109, v144);
      v108((uint64_t)v37, v110);
LABEL_28:
      swift_release();
LABEL_29:
      v111 = v147;
      _Block_release(v147);
      _Block_release(v111);
      unint64_t v52 = v111;
      goto LABEL_30;
    default:
      sub_1007C74BC();
      swift_allocError();
      *uint64_t v25 = 1;
      goto LABEL_5;
  }
}

void sub_1007C6178(uint64_t a1, const void *a2)
{
  uint64_t v20 = a2;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  static os_log_type_t.default.getter();
  if (qword_101637290 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_101347BA0;
  uint64_t ObjectType = swift_getObjectType();
  sub_10000588C((uint64_t *)&unk_101665F30);
  uint64_t v8 = String.init<A>(describing:)();
  uint64_t v10 = v9;
  *(void *)(v7 + 56) = &type metadata for String;
  unint64_t v11 = sub_10000B4CC();
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v10;
  *(void *)(v7 + 96) = &type metadata for String;
  *(void *)(v7 + 104) = v11;
  *(void *)(v7 + 64) = v11;
  *(void *)(v7 + 72) = 0xD00000000000001FLL;
  *(void *)(v7 + 80) = 0x8000000101407DA0;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_10001CD44((void *)(a1 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(a1 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24));
  uint64_t v13 = *v12;
  uint64_t v14 = *(void **)(*v12 + 56);
  *uint64_t v6 = v14;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.notOnQueue(_:), v3);
  id v15 = v14;
  char v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if ((v16 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_6;
  }
  type metadata accessor for Transaction();
  static Transaction.named<A>(_:with:)();
  if (!*(void *)(v13 + 40))
  {
    _Block_release(v20);
    __break(1u);
    return;
  }
  swift_retain();
  static os_log_type_t.default.getter();
  if (qword_101637258 != -1) {
    goto LABEL_10;
  }
LABEL_6:
  os_log(_:dso:log:_:_:)();
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  OS_dispatch_queue.sync<A>(execute:)();
  sub_1010ABE60(ObjectType);
  double v18 = v17;
  swift_bridgeObjectRelease();
  (*((void (**)(const void *, void, double))v20 + 2))(v20, 0, v18);
  swift_release();
}

void sub_1007C6520(uint64_t a1, void (**a2)(void, void))
{
  static os_log_type_t.default.getter();
  if (qword_101637290 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_101347BA0;
  swift_getObjectType();
  sub_10000588C((uint64_t *)&unk_101665F30);
  uint64_t v5 = String.init<A>(describing:)();
  uint64_t v7 = v6;
  *(void *)(v4 + 56) = &type metadata for String;
  unint64_t v8 = sub_10000B4CC();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  *(void *)(v4 + 96) = &type metadata for String;
  *(void *)(v4 + 104) = v8;
  *(void *)(v4 + 64) = v8;
  *(void *)(v4 + 72) = 0xD000000000000021;
  *(void *)(v4 + 80) = 0x8000000101407D30;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(char **)(*sub_10001CD44((void *)(a1 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation), *(void *)(a1 + OBJC_IVAR____TtC12searchpartyd23BeaconManagerTrampoline_implementation + 24))+ 40);
  if (v9)
  {
    swift_retain();
    static os_log_type_t.default.getter();
    if (qword_101637258 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    uint64_t v10 = sub_100510700();
    swift_retain();
    sub_1007C064C(v10, v9);
    swift_bridgeObjectRelease();
    swift_release();
    a2[2](a2, 0);
    swift_release();
  }
  else
  {
    _Block_release(a2);
    __break(1u);
  }
}

uint64_t sub_1007C674C(uint64_t a1, unint64_t a2, int a3, const void *a4)
{
  int v27 = a3;
  uint64_t v7 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for MACAddress();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v14 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  char v16 = &v26[-v15];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a4;
  _Block_copy(a4);
  sub_1000361E0(a1, a2);
  MACAddress.init(dataRepresentation:)();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1007C84EC;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v9, 1, 1, v19);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16))(v14, v16, v10);
  unint64_t v20 = (*(unsigned __int8 *)(v11 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v21 = (v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  char v23 = v27 & 1;
  *(void *)(v22 + 16) = 0;
  *(void *)(v22 + 24) = 0;
  *(unsigned char *)(v22 + 32) = v23;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v11 + 32))(v22 + v20, v14, v10);
  uint64_t v24 = (uint64_t (**)(uint64_t))(v22 + v21);
  *uint64_t v24 = sub_1007C6F3C;
  v24[1] = (uint64_t (*)(uint64_t))v18;
  swift_retain();
  swift_retain();
  sub_1008F5E44((uint64_t)v9, (uint64_t)&unk_10164DBC0, v22);
  swift_release();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v16, v10);
  return swift_release();
}

uint64_t sub_1007C6A74(uint64_t a1, unint64_t a2, int a3, const void *a4)
{
  int v27 = a3;
  uint64_t v7 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for MACAddress();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v14 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  char v16 = &v26[-v15];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a4;
  _Block_copy(a4);
  sub_1000361E0(a1, a2);
  MACAddress.init(dataRepresentation:)();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1007C84EC;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v9, 1, 1, v19);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16))(v14, v16, v10);
  unint64_t v20 = (*(unsigned __int8 *)(v11 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v21 = (v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  char v23 = v27 & 1;
  *(void *)(v22 + 16) = 0;
  *(void *)(v22 + 24) = 0;
  *(unsigned char *)(v22 + 32) = v23;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v11 + 32))(v22 + v20, v14, v10);
  uint64_t v24 = (uint64_t (**)(uint64_t))(v22 + v21);
  *uint64_t v24 = sub_1007C6D9C;
  v24[1] = (uint64_t (*)(uint64_t))v18;
  swift_retain();
  swift_retain();
  sub_1008F5E44((uint64_t)v9, (uint64_t)&unk_10164DBB8, v22);
  swift_release();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v16, v10);
  return swift_release();
}

uint64_t sub_1007C6D9C(uint64_t a1)
{
  return sub_1007BFE0C(a1, *(void (**)(void *, uint64_t))(v1 + 16), *(void *)(v1 + 24), &qword_10164B3F8, type metadata accessor for AccessoryMetadata, type metadata accessor for AccessoryMetadata, (uint64_t (*)(uint64_t))sub_1001A9630);
}

uint64_t sub_1007C6E00(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for MACAddress() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  char v8 = *(unsigned char *)(v1 + 32);
  uint64_t v9 = v1 + v5;
  uint64_t v10 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100033F68;
  return sub_100690774(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1007C6F3C(uint64_t a1)
{
  return sub_1007BFE0C(a1, *(void (**)(void *, uint64_t))(v1 + 16), *(void *)(v1 + 24), &qword_10164B410, type metadata accessor for RawAccessoryMetadata, type metadata accessor for RawAccessoryMetadata, (uint64_t (*)(uint64_t))sub_1001AAEA4);
}

uint64_t sub_1007C6FA0()
{
  uint64_t v1 = type metadata accessor for MACAddress();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 33) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1007C708C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for MACAddress() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  char v8 = *(unsigned char *)(v1 + 32);
  uint64_t v9 = v1 + v5;
  uint64_t v10 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100033F68;
  return sub_100690534(a1, v6, v7, v8, v9, v11, v12);
}

void sub_1007C71C8(void *a1, char a2)
{
  sub_1007BFA18(a1, a2 & 1, *(void (**)(void *, void *))(v2 + 16));
}

uint64_t sub_1007C71D4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1007C72C8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100033F68;
  return sub_10068EC00(a1, v6, v7, v8, v9, v11, v12);
}

void sub_1007C7404(uint64_t a1, void *a2)
{
  sub_1007BF7D4(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1007C740C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1007C7444(uint64_t a1)
{
  return sub_100471E9C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void, void))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1007C7464(uint64_t a1)
{
  return sub_100511174(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72));
}

uint64_t sub_1007C74A0(uint64_t a1)
{
  return sub_100A501B4(a1, v1);
}

unint64_t sub_1007C74BC()
{
  unint64_t result = qword_10164DBE0;
  if (!qword_10164DBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DBE0);
  }
  return result;
}

uint64_t sub_1007C7510(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  long long v5 = *(_OWORD *)(a1 + 64);
  long long v6 = *(_OWORD *)(a1 + 80);
  long long v7 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 80) = v6;
  *(_OWORD *)(a2 + 96) = v7;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1007C7584(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1007C7594()
{
  return swift_release();
}

uint64_t sub_1007C759C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 16))(a2);
}

uint64_t sub_1007C75C8()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1007C76A4(uint64_t a1)
{
  sub_100691D90(a1, *(void *)(v1 + 16), &qword_10164DC00);
}

uint64_t sub_1007C76D0(uint64_t a1)
{
  return sub_100463360(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void *))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1007C76F0()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1007C7738()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 16);
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_100033F68;
  *(_OWORD *)(v2 + 16) = v3;
  *(_OWORD *)(v2 + 32) = v4;
  return _swift_task_switch(sub_1007BEB1C, 0, 0);
}

void sub_1007C77E4(uint64_t a1, uint64_t a2)
{
  sub_1001D9A5C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1007C7800(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1007C7848(uint64_t a1)
{
  sub_1007BE944(a1, *(void *)(v1 + 16));
}

void sub_1007C7850(uint64_t a1)
{
  sub_100691D90(a1, *(void *)(v1 + 16), &qword_1016566B0);
}

uint64_t sub_1007C787C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1007C78E4(void **a1, uint64_t *a2)
{
  return sub_100470944(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1007C7900(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1007C7960()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release();

  return _swift_deallocObject(v0, v11, v10);
}

uint64_t sub_1007C7AE4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = v1[4];
  uint64_t v12 = (uint64_t)v1 + v5;
  uint64_t v13 = *(void *)((char *)v1 + v6);
  uint64_t v14 = (uint64_t)v1 + v8;
  uint64_t v15 = *(void *)((char *)v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  char v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *char v16 = v2;
  v16[1] = sub_100033F68;
  return sub_1004702A0(a1, v9, v10, v11, v12, v13, v14, v15);
}

void sub_1007C7CA0(uint64_t a1, uint64_t a2)
{
  sub_1007BC5DC(a1, a2, *(void *)(v2 + 16));
}

void sub_1007C7CA8(uint64_t a1)
{
  sub_100A34AC4(a1, *(void *)(v1 + 16));
}

void sub_1007C7CB0(uint64_t a1)
{
  sub_1007BBCC8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1007C7CB8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1007C7CF0()
{
  return sub_1007BB950(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1007C7CF8()
{
  uint64_t v1 = type metadata accessor for MACAddress();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1007C7DCC()
{
  uint64_t v2 = *(void *)(type metadata accessor for MACAddress() - 8);
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = (uint64_t)v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_10001D2E4;
  return sub_10065C2A4(v3, v4, v5, v6);
}

uint64_t sub_1007C7EB4()
{
  uint64_t v1 = type metadata accessor for MACAddress();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_10001CFB8(*(void *)(v0 + v6), *(void *)(v0 + v6 + 8));

  return _swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1007C7FA8()
{
  uint64_t v2 = *(void *)(type metadata accessor for MACAddress() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v7 = (uint64_t)v0 + v3;
  unint64_t v8 = (void *)((char *)v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v11;
  *uint64_t v11 = v1;
  v11[1] = sub_100033F68;
  return sub_10065BA7C(v4, v5, v6, v7, v9, v10);
}

uint64_t sub_1007C80D0()
{
  return sub_1007BB7C0(*(void (**)(void, uint64_t))(v0 + 16));
}

uint64_t sub_1007C80D8()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1007C8120()
{
  uint64_t v2 = v0[2];
  unint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_100033F68;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_10164DC80 + dword_10164DC80);
  return v6(v2, v3, v4);
}

uint64_t sub_1007C81D8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_100033F68;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1016677E8 + dword_1016677E8);
  return v6(v2, v3, v4);
}

uint64_t sub_1007C829C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100033F68;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1016677F0 + dword_1016677F0);
  return v8(a1, v4, v5, v6);
}

unsigned char *storeEnumTagSinglePayload for OwnerSessionEntitlement(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1007C8404);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OwnerSessionEntitlement()
{
  return &type metadata for OwnerSessionEntitlement;
}

unint64_t sub_1007C8440()
{
  unint64_t result = qword_10164DCB8;
  if (!qword_10164DCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DCB8);
  }
  return result;
}

unint64_t sub_1007C8498()
{
  unint64_t result = qword_10164DCC0;
  if (!qword_10164DCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DCC0);
  }
  return result;
}

uint64_t *sub_1007C85B0()
{
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  return &qword_10170E390;
}

void *sub_1007C85FC()
{
  uint64_t v0 = type metadata accessor for URL();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100F7E414((uint64_t)v2);
  type metadata accessor for ConfigurationCoordinator();
  swift_allocObject();
  unint64_t result = sub_1000A5E6C((uint64_t)v2);
  qword_10170E390 = (uint64_t)result;
  return result;
}

uint64_t sub_1007C8690()
{
  sub_10000588C(&qword_101639580);
  OS_dispatch_queue.sync<A>(execute:)();
  URLComponents.init()();
  URLComponents.scheme.setter();
  URLComponents.host.setter();
  URLComponents.path.setter();
  uint64_t v0 = (uint64_t (*)(uint64_t *, void))URLComponents.path.modify();
  v1._countAndFlagsBits = 0x6F666E6974752FLL;
  v1._object = (void *)0xE700000000000000;
  String.append(_:)(v1);
  return v0(&v3, 0);
}

uint64_t sub_1007C8790(char *a1, char *a2)
{
  return sub_10071BD28(*a1, *a2);
}

Swift::Int sub_1007C879C()
{
  return Hasher._finalize()();
}

uint64_t sub_1007C881C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1007C8888()
{
  return Hasher._finalize()();
}

uint64_t sub_1007C8904@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &off_1015A28E8;
  return sub_1007CA060(v2, a1, a2);
}

void sub_1007C8910(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x746E657665;
  if (*v1) {
    uint64_t v2 = 0x7354746E657665;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1007C894C()
{
  if (*v0) {
    return 0x7354746E657665;
  }
  else {
    return 0x746E657665;
  }
}

uint64_t sub_1007C8984@<X0>(Swift::String string@<0:X0, 8:X1>, char *a2@<X8>)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1015A28E8, v3);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_1007C89E8(uint64_t a1)
{
  unint64_t v2 = sub_1007CD044();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007C8A24(uint64_t a1)
{
  unint64_t v2 = sub_1007CD044();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007C8A60(void *a1)
{
  uint64_t v3 = sub_10000588C(&qword_10164DEB0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001CD44(a1, a1[3]);
  sub_1007CD044();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for UTInfoPublishRequestBody.State(0);
    v8[14] = 1;
    type metadata accessor for Date();
    sub_1007CD098((unint64_t *)&unk_10163ACE0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1007C8C18(char a1)
{
  unint64_t result = 0x6E6F437261435462;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x74536E6F69746F6DLL;
      break;
    case 3:
      unint64_t result = 0x7954656369766564;
      break;
    case 4:
      unint64_t result = 0x496B726F7774656ELL;
      break;
    case 5:
      unint64_t result = 0x657264644163616DLL;
      break;
    case 6:
      unint64_t result = 0x6E72657478457369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1007C8D30(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v20 = a5;
  uint64_t v16 = a3;
  uint64_t v17 = a4;
  uint64_t v8 = sub_10000588C(&qword_10164DE90);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_1007CCF48();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v18) = 0;
  uint64_t v12 = a2;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v5)
  {
    uint64_t v14 = v16;
    uint64_t v13 = v17;
    LOBYTE(v18) = BYTE1(v12);
    char v21 = 1;
    sub_1007CCF9C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v18) = BYTE2(v12);
    char v21 = 2;
    sub_1007CCFF0();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v18) = BYTE3(v12);
    char v21 = 3;
    sub_1002944A4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v18) = 4;
    char v21 = BYTE5(v12) & 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v18 = v14;
    uint64_t v19 = v13;
    char v21 = 5;
    sub_100037BB4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v18) = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1007C8FFC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000588C(&qword_10164DE58);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_1007CCD94();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v10[0]) = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v2)
  {
    v10[0] = *(void *)(v3 + 16);
    char v11 = 1;
    sub_10000588C(&qword_10164DE68);
    sub_1007CCDE8();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v10[0]) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    sub_1007CCE8C(v3 + 40, (uint64_t)v12);
    sub_1007CCE8C((uint64_t)v12, (uint64_t)v10);
    char v11 = 3;
    sub_1007CCEF4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1007C91F8(void *a1, char a2, uint64_t a3)
{
  uint64_t v7 = sub_10000588C(&qword_10164DE28);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_1007CCC2C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v15 = a2;
  char v14 = 0;
  sub_1007CCC80();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v3)
  {
    v12[1] = a3;
    char v13 = 1;
    sub_10000588C(&qword_10164DE40);
    sub_1007CCCD4(&qword_10164DE48, &qword_10164DE40, (void (*)(void))sub_1007CCD40);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1007C93D0(void *a1)
{
  return sub_1007C8A60(a1);
}

uint64_t sub_1007C93E8(char *a1, char *a2)
{
  return sub_10071BDCC(*a1, *a2);
}

Swift::Int sub_1007C93F4()
{
  return Hasher._finalize()();
}

uint64_t sub_1007C945C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1007C94A8()
{
  return Hasher._finalize()();
}

uint64_t sub_1007C950C@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &off_1015A2938;
  return sub_1007CA060(v2, a1, a2);
}

void sub_1007C9518(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701670760;
  if (*v1) {
    uint64_t v2 = 1802661751;
  }
  *a1 = v2;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1007C9540()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1007C9590(unsigned __int8 *a1, char *a2)
{
  return sub_10071BE3C(*a1, *a2);
}

Swift::Int sub_1007C959C()
{
  return Hasher._finalize()();
}

uint64_t sub_1007C966C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1007C9724()
{
  return Hasher._finalize()();
}

unint64_t sub_1007C97F0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1007CA3D4(*a1);
  *a2 = result;
  return result;
}

void sub_1007C9820(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x676E696B6C6177;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x676E696C637963;
      goto LABEL_3;
    case 2:
      *a1 = 0x676E6976697264;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0x616E6F6974617473;
      a1[1] = 0xEA00000000007972;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE700000000000000;
      break;
  }
}

uint64_t sub_1007C98B8()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_1007C9908()
{
  return sub_1007C8C18(*v0);
}

uint64_t sub_1007C9910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007CA420(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1007C9938(uint64_t a1)
{
  unint64_t v2 = sub_1007CCF48();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007C9974(uint64_t a1)
{
  unint64_t v2 = sub_1007CCF48();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007C99B0(void *a1)
{
  return sub_1007C8D30(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 5) << 40), *((void *)v1 + 1), *((void *)v1 + 2), *((unsigned __int8 *)v1 + 24));
}

uint64_t sub_1007C99F4()
{
  uint64_t result = 1953916001;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6574617473;
      break;
    case 2:
      uint64_t result = 0x7069726373627573;
      break;
    case 3:
      uint64_t result = 0x787443746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1007C9A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007CA754(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1007C9AAC(uint64_t a1)
{
  unint64_t v2 = sub_1007CCD94();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007C9AE8(uint64_t a1)
{
  unint64_t v2 = sub_1007CCD94();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007C9B24(void *a1)
{
  return sub_1007C8FFC(a1);
}

uint64_t sub_1007C9B68()
{
  return 0x6572616853736168;
}

uint64_t sub_1007C9B8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6572616853736168 && a2 == 0xEE00736D65744964)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1007C9C48(uint64_t a1)
{
  unint64_t v2 = sub_1007CDC74();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007C9C84(uint64_t a1)
{
  unint64_t v2 = sub_1007CDC74();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007C9CC0(void *a1)
{
  uint64_t v2 = sub_10000588C(&qword_10164DF60);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_1007CDC74();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1007C9DF4()
{
  if (*v0) {
    return 7562345;
  }
  else {
    return 0x7443746E65696C63;
  }
}

uint64_t sub_1007C9E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007CA91C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1007C9E54(uint64_t a1)
{
  unint64_t v2 = sub_1007CCC2C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007C9E90(uint64_t a1)
{
  unint64_t v2 = sub_1007CCC2C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007C9ECC(void *a1)
{
  return sub_1007C91F8(a1, *(unsigned char *)v1, *(void *)(v1 + 8));
}

uint64_t sub_1007C9EEC(char *a1, char *a2)
{
  return sub_10071CB98(*a1, *a2);
}

Swift::Int sub_1007C9EF8()
{
  return Hasher._finalize()();
}

uint64_t sub_1007C9F74()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1007C9FDC()
{
  return Hasher._finalize()();
}

uint64_t sub_1007CA054@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &off_1015A2A08;
  return sub_1007CA060(v2, a1, a2);
}

uint64_t sub_1007CA060@<X0>(Swift::OpaquePointer cases@<0:X3>, Swift::String *a2@<X0>, char *a3@<X8>)
{
  Swift::Int v4 = _findStringSwitchCase(cases:string:)(cases, *a2);
  uint64_t result = swift_bridgeObjectRelease();
  if (v4 == 1) {
    char v6 = 1;
  }
  else {
    char v6 = 2;
  }
  if (!v4) {
    char v6 = 0;
  }
  *a3 = v6;
  return result;
}

void sub_1007CA0BC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7472656E69;
  if (*v1) {
    uint64_t v2 = 0x657669746361;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1007CA0F4()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1007CA154()
{
  uint64_t v1 = 1953916001;
  if (*v0 != 1) {
    uint64_t v1 = 0x746C75736572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7069726373627573;
  }
}

uint64_t sub_1007CA1B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007CAA0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1007CA1D8(uint64_t a1)
{
  unint64_t v2 = sub_1007CDBCC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007CA214(uint64_t a1)
{
  unint64_t v2 = sub_1007CDBCC();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_1007CA250@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1007CAB70(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(unsigned char *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1007CA298()
{
  return 7562345;
}

uint64_t sub_1007CA2A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 7562345 && a2 == 0xE300000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1007CA330(uint64_t a1)
{
  unint64_t v2 = sub_1007CCB84();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007CA36C(uint64_t a1)
{
  unint64_t v2 = sub_1007CCB84();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_1007CA3A8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1007CAE10(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

unint64_t sub_1007CA3D4(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1015A2988, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t sub_1007CA420(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F437261435462 && a2 == 0xEE0064657463656ELL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000101408250 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74536E6F69746F6DLL && a2 == 0xEB00000000657461 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7954656369766564 && a2 == 0xEA00000000006570 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x496B726F7774656ELL && a2 == 0xE900000000000064 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x657264644163616DLL && a2 == 0xEA00000000007373 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E72657478457369 && a2 == 0xEA00000000006C61)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1007CA754(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1953916001 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7069726373627573 && a2 == 0xEE0064496E6F6974 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x787443746E657665 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1007CA91C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7443746E65696C63 && a2 == 0xE900000000000078;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7562345 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1007CAA0C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7069726373627573 && a2 == 0xEE0064496E6F6974;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953916001 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1007CAB70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000588C(&qword_10164DF48);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_1007CDBCC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  }
  char v24 = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  uint64_t v20 = v9;
  char v23 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v14 = v13;
  uint64_t v18 = v12;
  char v21 = 2;
  sub_1007CDC20();
  swift_bridgeObjectRetain();
  uint64_t v19 = v14;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(v14) = v22;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  uint64_t v15 = v19;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v15;
  *(unsigned char *)(a2 + 32) = v14;
  return result;
}

void *sub_1007CAE10(void *a1)
{
  uint64_t v3 = sub_10000588C(&qword_10164DE00);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001CD44(a1, a1[3]);
  sub_1007CCB84();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_10000588C(&qword_10164DE10);
    sub_1007CCCD4(&qword_10164DE18, &qword_10164DE10, (void (*)(void))sub_1007CCBD8);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_1007CAFC0(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 208) = a2;
  *(void *)(v3 + 216) = a3;
  *(unsigned char *)(v3 + 392) = a1;
  uint64_t v4 = type metadata accessor for HashAlgorithm();
  *(void *)(v3 + 224) = v4;
  *(void *)(v3 + 232) = *(void *)(v4 - 8);
  *(void *)(v3 + 240) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for JSONEncoder.DateEncodingStrategy();
  *(void *)(v3 + 248) = v5;
  *(void *)(v3 + 256) = *(void *)(v5 - 8);
  *(void *)(v3 + 264) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for TimeZone();
  *(void *)(v3 + 272) = v6;
  *(void *)(v3 + 280) = *(void *)(v6 - 8);
  *(void *)(v3 + 288) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Date();
  *(void *)(v3 + 296) = v7;
  *(void *)(v3 + 304) = *(void *)(v7 - 8);
  *(void *)(v3 + 312) = swift_task_alloc();
  return _swift_task_switch(sub_1007CB198, 0, 0);
}

uint64_t sub_1007CB198()
{
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 288);
  uint64_t v4 = *(void *)(v0 + 296);
  uint64_t v29 = *(void *)(v0 + 280);
  uint64_t v30 = *(void *)(v0 + 272);
  id v31 = *(void **)(v0 + 264);
  uint64_t v32 = *(void *)(v0 + 256);
  uint64_t v33 = *(void *)(v0 + 248);
  uint64_t v35 = *(void *)(v0 + 208);
  char v34 = *(unsigned char *)(v0 + 392);
  sub_10000588C(&qword_101642890);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10134BF90;
  *(void *)(inited + 32) = 0x747065636341;
  *(void *)(inited + 40) = 0xE600000000000000;
  *(void *)(inited + 48) = 0xD000000000000010;
  *(void *)(inited + 56) = 0x80000001013F87B0;
  strcpy((char *)(inited + 64), "content-type");
  *(unsigned char *)(inited + 77) = 0;
  *(_WORD *)(inited + 78) = -5120;
  *(void *)(inited + 80) = 0xD000000000000010;
  *(void *)(inited + 88) = 0x80000001013F87B0;
  *(void *)(inited + 96) = 0xD000000000000015;
  *(void *)(inited + 104) = 0x80000001013F87D0;
  Date.init()();
  uint64_t v6 = Date.epoch.getter();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  v7(v2, v4);
  *(void *)(v0 + 192) = v6;
  *(void *)(inited + 112) = dispatch thunk of CustomStringConvertible.description.getter();
  *(void *)(inited + 120) = v8;
  *(void *)(inited + 128) = 0xD000000000000012;
  *(void *)(inited + 136) = 0x8000000101408230;
  static TimeZone.current.getter();
  Date.init()();
  uint64_t v9 = TimeZone.abbreviation(for:)();
  unint64_t v11 = v10;
  v7(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v3, v30);
  if (v11) {
    uint64_t v12 = v9;
  }
  else {
    uint64_t v12 = 0;
  }
  unint64_t v13 = 0xE000000000000000;
  if (v11) {
    unint64_t v13 = v11;
  }
  *(void *)(inited + 144) = v12;
  *(void *)(inited + 152) = v13;
  unint64_t v14 = sub_10092D8F8(inited);
  uint64_t v15 = sub_100BCABFC(v14);
  uint64_t v17 = v16;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10016C0FC(v15, v17, 0x6567412D72657355, 0xEA0000000000746ELL, isUniquelyReferenced_nonNull_native);
  *(void *)(v0 + 320) = v14;
  swift_bridgeObjectRelease();
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  *(void *)(v0 + 328) = JSONEncoder.init()();
  *id v31 = sub_1003B9190;
  v31[1] = 0;
  (*(void (**)(void *, void, uint64_t))(v32 + 104))(v31, enum case for JSONEncoder.DateEncodingStrategy.custom(_:), v33);
  dispatch thunk of JSONEncoder.dateEncodingStrategy.setter();
  *(unsigned char *)(v0 + 176) = v34;
  *(void *)(v0 + 184) = v35;
  sub_1007CBAD0();
  *(void *)(v0 + 336) = dispatch thunk of JSONEncoder.encode<A>(_:)();
  *(void *)(v0 + 344) = v19;
  uint64_t v21 = *(void *)(v0 + 232);
  uint64_t v20 = *(void *)(v0 + 240);
  uint64_t v22 = *(void *)(v0 + 224);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v20, enum case for HashAlgorithm.sha256(_:), v22);
  uint64_t v23 = Data.hash(algorithm:)();
  uint64_t v25 = v24;
  *(void *)(v0 + 352) = v23;
  *(void *)(v0 + 360) = v24;
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  id v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10165AB78 + dword_10165AB78);
  id v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v26;
  *id v26 = v0;
  v26[1] = sub_1007CB604;
  uint64_t v27 = *(void *)(v0 + 216);
  return v36(v23, v25, v27);
}

uint64_t sub_1007CB604(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 376) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1007CB860;
  }
  else
  {
    uint64_t v6 = v4[44];
    unint64_t v7 = v4[45];
    v4[48] = a1;
    sub_10001CFB8(v6, v7);
    uint64_t v5 = sub_1007CB730;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1007CB730()
{
  unint64_t v11 = v0;
  uint64_t v2 = v0[47];
  uint64_t v1 = v0[48];
  uint64_t v3 = v0[40];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = v3;
  sub_1001EE9C8(v1, (uint64_t)sub_100BD6E00, 0, isUniquelyReferenced_nonNull_native, &v10);
  if (v2)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = v10;
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[1];
    uint64_t v8 = v0[42];
    uint64_t v9 = v0[43];
    return v7(v6, v8, v9);
  }
}

uint64_t sub_1007CB860()
{
  sub_10001CFB8(v0[44], v0[45]);
  if (qword_101637238 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170EF80);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138543362;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[25] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to generate utInfo attestation header: %{public}@.", v4, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
    swift_release();

    swift_errorRelease();
  }
  else
  {
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    swift_release();
  }
  uint64_t v7 = v0[40];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[1];
  uint64_t v9 = v0[42];
  uint64_t v10 = v0[43];
  return v8(v7, v9, v10);
}

unint64_t sub_1007CBAD0()
{
  unint64_t result = qword_10164DCD8;
  if (!qword_10164DCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DCD8);
  }
  return result;
}

uint64_t destroy for UTInfoPublishRequestBody.Record(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(unsigned char *)(a1 + 40) != 3)
  {
    unint64_t v3 = *(void *)(a1 + 56);
    if (v3 >> 60 != 15)
    {
      uint64_t v4 = *(void *)(a1 + 48);
      return sub_10001CFB8(v4, v3);
    }
  }
  return result;
}

uint64_t initializeWithCopy for UTInfoPublishRequestBody.Record(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = (_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 == 3)
  {
    *(_OWORD *)(a1 + 40) = *v7;
    *(_OWORD *)(a1 + 49) = *(_OWORD *)((char *)v7 + 9);
  }
  else
  {
    *(_WORD *)(a1 + 40) = v6;
    *(unsigned char *)(a1 + 42) = BYTE2(v6);
    *(unsigned char *)(a1 + 43) = BYTE3(v6);
    *(_WORD *)(a1 + 44) = WORD2(v6);
    uint64_t v8 = (uint64_t *)(a2 + 48);
    unint64_t v9 = *(void *)(a2 + 56);
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 48) = *(_OWORD *)v8;
    }
    else
    {
      uint64_t v10 = *v8;
      sub_1000361E0(*v8, *(void *)(a2 + 56));
      *(void *)(a1 + 48) = v10;
      *(void *)(a1 + 56) = v9;
    }
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  }
  return a1;
}

uint64_t assignWithCopy for UTInfoPublishRequestBody.Record(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 40);
  uint64_t v6 = (_OWORD *)(a2 + 40);
  uint64_t v5 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned char *)(a1 + 40) != 3)
  {
    if (v5 == 3)
    {
      sub_1007CBE74(a1 + 40);
      long long v8 = *(_OWORD *)(a2 + 49);
      *uint64_t v4 = *v6;
      *(_OWORD *)(a1 + 49) = v8;
      return a1;
    }
    *(unsigned char *)(a1 + 40) = v5;
    *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
    *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
    *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
    *(_WORD *)(a1 + 44) = *(_WORD *)(a2 + 44);
    unint64_t v11 = (uint64_t *)(a2 + 48);
    unint64_t v10 = *(void *)(a2 + 56);
    if (*(void *)(a1 + 56) >> 60 == 15)
    {
      if (v10 >> 60 != 15)
      {
        uint64_t v12 = *v11;
        goto LABEL_12;
      }
    }
    else
    {
      if (v10 >> 60 != 15)
      {
        uint64_t v13 = *v11;
        sub_1000361E0(*v11, *(void *)(a2 + 56));
        uint64_t v14 = *(void *)(a1 + 48);
        unint64_t v15 = *(void *)(a1 + 56);
        *(void *)(a1 + 48) = v13;
        *(void *)(a1 + 56) = v10;
        sub_10001CFB8(v14, v15);
        goto LABEL_17;
      }
      sub_1001356D0(a1 + 48);
    }
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v11;
    goto LABEL_17;
  }
  if (v5 != 3)
  {
    *(unsigned char *)(a1 + 40) = v5;
    *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
    *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
    *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
    *(_WORD *)(a1 + 44) = *(_WORD *)(a2 + 44);
    unint64_t v9 = (_OWORD *)(a2 + 48);
    unint64_t v10 = *(void *)(a2 + 56);
    if (v10 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 48) = *v9;
LABEL_17:
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      return a1;
    }
    uint64_t v12 = *(void *)v9;
LABEL_12:
    sub_1000361E0(v12, v10);
    *(void *)(a1 + 48) = v12;
    *(void *)(a1 + 56) = v10;
    goto LABEL_17;
  }
  long long v7 = *v6;
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  *uint64_t v4 = v7;
  return a1;
}

uint64_t sub_1007CBE74(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >> 60 != 15) {
    sub_10001CFB8(*(void *)(a1 + 8), v2);
  }
  return a1;
}

__n128 initializeWithTake for TagUserStatistics(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for UTInfoPublishRequestBody.Record(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  if (*(unsigned char *)(a1 + 40) == 3) {
    goto LABEL_4;
  }
  if (*(void *)(a2 + 40) != 3)
  {
    *(_WORD *)(a1 + 40) = v6;
    *(unsigned char *)(a1 + 42) = BYTE2(v6);
    *(unsigned char *)(a1 + 43) = BYTE3(v6);
    *(_WORD *)(a1 + 44) = WORD2(v6);
    long long v7 = (void *)(a2 + 48);
    unint64_t v8 = *(void *)(a1 + 56);
    if (v8 >> 60 != 15)
    {
      unint64_t v9 = *(void *)(a2 + 56);
      if (v9 >> 60 != 15)
      {
        uint64_t v10 = *(void *)(a1 + 48);
        *(void *)(a1 + 48) = *v7;
        *(void *)(a1 + 56) = v9;
        sub_10001CFB8(v10, v8);
        goto LABEL_10;
      }
      sub_1001356D0(a1 + 48);
    }
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v7;
LABEL_10:
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    return a1;
  }
  sub_1007CBE74(a1 + 40);
LABEL_4:
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  return a1;
}

uint64_t getEnumTagSinglePayload for UTInfoPublishRequestBody.Record(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UTInfoPublishRequestBody.Record(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UTInfoPublishRequestBody.Record()
{
  return &type metadata for UTInfoPublishRequestBody.Record;
}

uint64_t destroy for UTInfoPublishRequestBody.EventContext(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (v1 >> 60 != 15) {
    return sub_10001CFB8(*(void *)(result + 8), v1);
  }
  return result;
}

uint64_t initializeWithCopy for UTInfoPublishRequestBody.EventContext(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  uint64_t v4 = (uint64_t *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)v4;
  }
  else
  {
    uint64_t v6 = *v4;
    sub_1000361E0(*v4, *(void *)(a2 + 16));
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v5;
  }
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithCopy for UTInfoPublishRequestBody.EventContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  uint64_t v4 = (_OWORD *)(a1 + 8);
  unint64_t v5 = (uint64_t *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) >> 60 != 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v8 = *v5;
      sub_1000361E0(*v5, *(void *)(a2 + 16));
      uint64_t v9 = *(void *)(a1 + 8);
      unint64_t v10 = *(void *)(a1 + 16);
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v6;
      sub_10001CFB8(v9, v10);
      goto LABEL_8;
    }
    sub_1001356D0(a1 + 8);
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
LABEL_6:
    *uint64_t v4 = *(_OWORD *)v5;
    goto LABEL_8;
  }
  uint64_t v7 = *v5;
  sub_1000361E0(*v5, *(void *)(a2 + 16));
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v6;
LABEL_8:
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for UTInfoPublishRequestBody.EventContext(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  uint64_t v4 = (_OWORD *)(a1 + 8);
  unint64_t v5 = (void *)(a2 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 16);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 8);
      *(void *)(a1 + 8) = *v5;
      *(void *)(a1 + 16) = v7;
      sub_10001CFB8(v8, v6);
      goto LABEL_6;
    }
    sub_1001356D0(a1 + 8);
  }
  *uint64_t v4 = *(_OWORD *)v5;
LABEL_6:
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for UTInfoPublishRequestBody.EventContext(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[25]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UTInfoPublishRequestBody.EventContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UTInfoPublishRequestBody.EventContext()
{
  return &type metadata for UTInfoPublishRequestBody.EventContext;
}

ValueMetadata *type metadata accessor for UTInfoPublishResponse()
{
  return &type metadata for UTInfoPublishResponse;
}

ValueMetadata *type metadata accessor for SubmitUTInfo()
{
  return &type metadata for SubmitUTInfo;
}

uint64_t initializeBufferWithCopyOfBuffer for UTInfoPublishRequestBody(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UTInfoPublishRequestBody(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UTInfoPublishRequestBody(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UTInfoPublishRequestBody()
{
  return &type metadata for UTInfoPublishRequestBody;
}

uint64_t *sub_1007CC44C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unsigned int v3 = *a2;
    unsigned int v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    unint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Date();
    unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1007CC534(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1007CC5AC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  unint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_1007CC644(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  unint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_1007CC6E0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1007CC76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007CC780);
}

uint64_t sub_1007CC780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1007CC830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007CC844);
}

uint64_t sub_1007CC844(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for UTInfoPublishRequestBody.State(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_10164DD38);
}

uint64_t sub_1007CC90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1007CCAF0(a1, a2, a3, (uint64_t)&unk_1013691E0, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
}

uint64_t sub_1007CC92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007CC940);
}

uint64_t sub_1007CC940(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FMNAccountType();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1007CC9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007CCA04);
}

void *sub_1007CCA04(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *__n128 result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for FMNAccountType();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SubmitUTInfoEndpoint(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_10164DDC8);
}

uint64_t sub_1007CCACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1007CCAF0(a1, a2, a3, (uint64_t)&value witness table for Builtin.NativeObject + 64, (uint64_t (*)(uint64_t))&type metadata accessor for FMNAccountType);
}

uint64_t sub_1007CCAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t result = a5(319);
  if (v6 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1007CCB84()
{
  unint64_t result = qword_10164DE08;
  if (!qword_10164DE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DE08);
  }
  return result;
}

unint64_t sub_1007CCBD8()
{
  unint64_t result = qword_10164DE20;
  if (!qword_10164DE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DE20);
  }
  return result;
}

unint64_t sub_1007CCC2C()
{
  unint64_t result = qword_10164DE30;
  if (!qword_10164DE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DE30);
  }
  return result;
}

unint64_t sub_1007CCC80()
{
  unint64_t result = qword_10164DE38;
  if (!qword_10164DE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DE38);
  }
  return result;
}

uint64_t sub_1007CCCD4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000592C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1007CCD40()
{
  unint64_t result = qword_10164DE50;
  if (!qword_10164DE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DE50);
  }
  return result;
}

unint64_t sub_1007CCD94()
{
  unint64_t result = qword_10164DE60;
  if (!qword_10164DE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DE60);
  }
  return result;
}

unint64_t sub_1007CCDE8()
{
  unint64_t result = qword_10164DE70;
  if (!qword_10164DE70)
  {
    sub_10000592C(&qword_10164DE68);
    sub_1007CD098(&qword_10164DE78, (void (*)(uint64_t))type metadata accessor for UTInfoPublishRequestBody.State);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DE70);
  }
  return result;
}

uint64_t sub_1007CCE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_10164DE80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1007CCEF4()
{
  unint64_t result = qword_10164DE88;
  if (!qword_10164DE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DE88);
  }
  return result;
}

unint64_t sub_1007CCF48()
{
  unint64_t result = qword_10164DE98;
  if (!qword_10164DE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DE98);
  }
  return result;
}

unint64_t sub_1007CCF9C()
{
  unint64_t result = qword_10164DEA0;
  if (!qword_10164DEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DEA0);
  }
  return result;
}

unint64_t sub_1007CCFF0()
{
  unint64_t result = qword_10164DEA8;
  if (!qword_10164DEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DEA8);
  }
  return result;
}

unint64_t sub_1007CD044()
{
  unint64_t result = qword_10164DEB8;
  if (!qword_10164DEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DEB8);
  }
  return result;
}

uint64_t sub_1007CD098(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for UTInfoPublishRequestBody.State.CodingKeys()
{
  return &type metadata for UTInfoPublishRequestBody.State.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for UTInfoPublishRequestBody.EventContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007CD1C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UTInfoPublishRequestBody.EventContext.CodingKeys()
{
  return &type metadata for UTInfoPublishRequestBody.EventContext.CodingKeys;
}

ValueMetadata *type metadata accessor for UTInfoPublishRequestBody.Record.CodingKeys()
{
  return &type metadata for UTInfoPublishRequestBody.Record.CodingKeys;
}

ValueMetadata *type metadata accessor for UTInfoPublishRequestBody.CodingKeys()
{
  return &type metadata for UTInfoPublishRequestBody.CodingKeys;
}

ValueMetadata *type metadata accessor for UTInfoPublishResponse.CodingKeys()
{
  return &type metadata for UTInfoPublishResponse.CodingKeys;
}

unsigned char *_s12searchpartyd24UTInfoPublishRequestBodyV11MotionStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007CD2FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UTInfoPublishRequestBody.MotionState()
{
  return &type metadata for UTInfoPublishRequestBody.MotionState;
}

ValueMetadata *type metadata accessor for UTInfoPublishRequestBody.KnownLocationMode()
{
  return &type metadata for UTInfoPublishRequestBody.KnownLocationMode;
}

uint64_t initializeWithCopy for UTInfoPublishResponse.Subscription(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UTInfoPublishResponse.Subscription(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for UTInfoPublishResponse.Subscription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for UTInfoPublishResponse.Subscription(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UTInfoPublishResponse.Subscription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UTInfoPublishResponse.Subscription()
{
  return &type metadata for UTInfoPublishResponse.Subscription;
}

unsigned char *storeEnumTagSinglePayload for UTInfoPublishRequestBody.ClientContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007CD5BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UTInfoPublishRequestBody.ClientContext()
{
  return &type metadata for UTInfoPublishRequestBody.ClientContext;
}

unint64_t sub_1007CD5F8()
{
  unint64_t result = qword_10164DEC0;
  if (!qword_10164DEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DEC0);
  }
  return result;
}

unint64_t sub_1007CD650()
{
  unint64_t result = qword_10164DEC8;
  if (!qword_10164DEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DEC8);
  }
  return result;
}

unint64_t sub_1007CD6A8()
{
  unint64_t result = qword_10164DED0;
  if (!qword_10164DED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DED0);
  }
  return result;
}

unint64_t sub_1007CD700()
{
  unint64_t result = qword_10164DED8;
  if (!qword_10164DED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DED8);
  }
  return result;
}

unint64_t sub_1007CD758()
{
  unint64_t result = qword_10164DEE0;
  if (!qword_10164DEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DEE0);
  }
  return result;
}

unint64_t sub_1007CD7B0()
{
  unint64_t result = qword_10164DEE8;
  if (!qword_10164DEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DEE8);
  }
  return result;
}

unint64_t sub_1007CD808()
{
  unint64_t result = qword_10164DEF0;
  if (!qword_10164DEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DEF0);
  }
  return result;
}

unint64_t sub_1007CD860()
{
  unint64_t result = qword_10164DEF8;
  if (!qword_10164DEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DEF8);
  }
  return result;
}

unint64_t sub_1007CD8B8()
{
  unint64_t result = qword_10164DF00;
  if (!qword_10164DF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DF00);
  }
  return result;
}

unint64_t sub_1007CD910()
{
  unint64_t result = qword_10164DF08;
  if (!qword_10164DF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DF08);
  }
  return result;
}

unint64_t sub_1007CD968()
{
  unint64_t result = qword_10164DF10;
  if (!qword_10164DF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DF10);
  }
  return result;
}

unint64_t sub_1007CD9C0()
{
  unint64_t result = qword_10164DF18;
  if (!qword_10164DF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DF18);
  }
  return result;
}

unint64_t sub_1007CDA18()
{
  unint64_t result = qword_10164DF20;
  if (!qword_10164DF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DF20);
  }
  return result;
}

unint64_t sub_1007CDA70()
{
  unint64_t result = qword_10164DF28;
  if (!qword_10164DF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DF28);
  }
  return result;
}

unint64_t sub_1007CDAC8()
{
  unint64_t result = qword_10164DF30;
  if (!qword_10164DF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DF30);
  }
  return result;
}

unint64_t sub_1007CDB20()
{
  unint64_t result = qword_10164DF38;
  if (!qword_10164DF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DF38);
  }
  return result;
}

unint64_t sub_1007CDB78()
{
  unint64_t result = qword_10164DF40;
  if (!qword_10164DF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DF40);
  }
  return result;
}

unint64_t sub_1007CDBCC()
{
  unint64_t result = qword_10164DF50;
  if (!qword_10164DF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DF50);
  }
  return result;
}

unint64_t sub_1007CDC20()
{
  unint64_t result = qword_10164DF58;
  if (!qword_10164DF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DF58);
  }
  return result;
}

unint64_t sub_1007CDC74()
{
  unint64_t result = qword_10164DF68;
  if (!qword_10164DF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DF68);
  }
  return result;
}

unint64_t sub_1007CDCC8()
{
  unint64_t result = qword_10164DF70;
  if (!qword_10164DF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DF70);
  }
  return result;
}

unint64_t sub_1007CDD1C()
{
  unint64_t result = qword_10164DF78;
  if (!qword_10164DF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DF78);
  }
  return result;
}

unsigned char *_s12searchpartyd21UTInfoPublishResponseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1007CDE0CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for UTInfoPublishRequestBody.ClientContext.CodingKeys()
{
  return &type metadata for UTInfoPublishRequestBody.ClientContext.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for UTInfoPublishResponse.Subscription.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007CDF10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UTInfoPublishResponse.Subscription.CodingKeys()
{
  return &type metadata for UTInfoPublishResponse.Subscription.CodingKeys;
}

unsigned char *_s12searchpartyd24UTInfoPublishRequestBodyV17KnownLocationModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007CE014);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UTInfoPublishResponse.Result()
{
  return &type metadata for UTInfoPublishResponse.Result;
}

unint64_t sub_1007CE050()
{
  unint64_t result = qword_10164DF80;
  if (!qword_10164DF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DF80);
  }
  return result;
}

unint64_t sub_1007CE0A8()
{
  unint64_t result = qword_10164DF88;
  if (!qword_10164DF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DF88);
  }
  return result;
}

unint64_t sub_1007CE100()
{
  unint64_t result = qword_10164DF90;
  if (!qword_10164DF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DF90);
  }
  return result;
}

unint64_t sub_1007CE158()
{
  unint64_t result = qword_10164DF98;
  if (!qword_10164DF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DF98);
  }
  return result;
}

unint64_t sub_1007CE1B0()
{
  unint64_t result = qword_10164DFA0;
  if (!qword_10164DFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DFA0);
  }
  return result;
}

unint64_t sub_1007CE208()
{
  unint64_t result = qword_10164DFA8;
  if (!qword_10164DFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DFA8);
  }
  return result;
}

unint64_t sub_1007CE260()
{
  unint64_t result = qword_10164DFB0;
  if (!qword_10164DFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DFB0);
  }
  return result;
}

unint64_t sub_1007CE2B4()
{
  unint64_t result = qword_10164DFB8;
  if (!qword_10164DFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164DFB8);
  }
  return result;
}

uint64_t ConnectionPair.readConnection.getter()
{
  return swift_retain();
}

uint64_t ConnectionPair.writeConnection.getter()
{
  return swift_retain();
}

uint64_t ConnectionPair.__allocating_init(_:readonly:key:)(uint64_t a1, int a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  ConnectionPair.init(_:readonly:key:)(a1, a2, a3, a4);
  return v8;
}

uint64_t ConnectionPair.init(_:readonly:key:)(uint64_t a1, int a2, uint64_t a3, unint64_t a4)
{
  uint64_t v39 = a3;
  unint64_t v42 = a4;
  int v37 = a2;
  uint64_t v44 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v44 - 8);
  uint64_t v6 = __chkstk_darwin(v44);
  id v36 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v36 - v9;
  __chkstk_darwin(v8);
  id v43 = (char *)&v36 - v11;
  uint64_t v12 = type metadata accessor for Connection.Location();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v36 - v17;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v40 = a1;
  v19((char *)&v36 - v17, a1, v12);
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v18, v12);
  if (v20 != enum case for Connection.Location.uri(_:))
  {
    uint64_t v29 = v38;
    uint64_t v28 = v39;
    if (v20 != enum case for Connection.Location.inMemory(_:) && v20 != enum case for Connection.Location.temporary(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    uint64_t v31 = v40;
    v19(v16, v40, v12);
    type metadata accessor for Connection();
    swift_allocObject();
    uint64_t v32 = Connection.init(_:readonly:)();
    if (v29)
    {
      sub_100037A24(v28, v42);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v31, v12);
      uint64_t v27 = v41;
      goto LABEL_12;
    }
    uint64_t v27 = v41;
    *(void *)(v41 + 16) = v32;
    *(void *)(v27 + 24) = v32;
    swift_retain();
LABEL_14:
    swift_retain();
    Connection.busyTimeout.setter();
    swift_release();
    Connection.busyTimeout.setter();
    sub_100037A24(v28, v42);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v31, v12);
    return v27;
  }
  (*(void (**)(char *, uint64_t))(v13 + 96))(v18, v12);
  uint64_t v21 = v43;
  URL.init(fileURLWithPath:)();
  swift_bridgeObjectRelease();
  type metadata accessor for Connection();
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v22(v10, v21, v44);
  uint64_t v23 = v39;
  unint64_t v24 = v42;
  sub_100037A38(v39, v42);
  uint64_t v25 = v38;
  id v26 = Connection.init(_:readonly:key:)((uint64_t)v10, v37 & 1, v23, v24);
  if (!v25)
  {
    uint64_t v38 = v5;
    uint64_t v33 = v23;
    uint64_t v27 = v41;
    *(void *)(v41 + 24) = v26;
    v22(v36, v43, v44);
    sub_100037A38(v33, v24);
    char v34 = Connection.init(_:readonly:key:)((uint64_t)v36, 1, v33, v24);
    uint64_t v28 = v33;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v43, v44);
    *(void *)(v27 + 16) = v34;
    uint64_t v31 = v40;
    goto LABEL_14;
  }
  sub_100037A24(v23, v24);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v40, v12);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v43, v44);
  uint64_t v27 = v41;
LABEL_12:
  type metadata accessor for ConnectionPair();
  swift_deallocPartialClassInstance();
  return v27;
}

uint64_t type metadata accessor for ConnectionPair()
{
  return self;
}

uint64_t ConnectionPair.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t ConnectionPair.__deallocating_deinit()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t ConnectionPair.description.getter()
{
  return Connection.description.getter();
}

uint64_t sub_1007CE920()
{
  return Connection.description.getter();
}

uint64_t sub_1007CE948()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10170E398);
  sub_100010324(v0, (uint64_t)qword_10170E398);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1007CE9B8()
{
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  OS_dispatch_queue.sync<A>(execute:)();
  sub_10000588C(&qword_101647FA0);
  sub_1010AC2C4(v1);
  swift_bridgeObjectRelease();
  uint64_t result = AsyncKeyedThrottle.__allocating_init(throttleInterval:)();
  qword_10164E068 = result;
  return result;
}

uint64_t sub_1007CEA88(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[8] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[9] = v4;
  v2[10] = *(void *)(v4 + 64);
  v2[11] = swift_task_alloc();
  v2[12] = sub_10000588C((uint64_t *)&unk_10163B7C0);
  v2[13] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for MemberSharingCircle();
  v2[14] = v5;
  v2[15] = *(void *)(v5 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  return _swift_task_switch(sub_1007CEBFC, v1, 0);
}

uint64_t sub_1007CEBFC()
{
  uint64_t v15 = v0;
  if (qword_101636888 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = type metadata accessor for Logger();
  *(void *)(v0 + 152) = sub_100010324(v3, (uint64_t)qword_10170D788);
  sub_1007E0518(v1, v2, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 144);
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 141558275;
    *(void *)(v0 + 32) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2081;
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 40) = sub_1008FA0F0(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v7, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Initial keys downloading for circle %{private,mask.hash}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1007E0580(*(void *)(v0 + 144), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  }

  uint64_t v11 = *(void *)(v0 + 112);
  uint64_t v12 = *(void *)(*(void *)(v0 + 56) + 152);
  *(void *)(v0 + 160) = v12;
  *(_DWORD *)(v0 + 240) = *(_DWORD *)(v11 + 20);
  return _swift_task_switch(sub_1007CEEB4, v12, 0);
}

uint64_t sub_1007CEEB4()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 48) + *(int *)(v0 + 240);
  *(void *)(v0 + 168) = *(void *)(v1 + 136);
  BOOL v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  *(void *)(v0 + 176) = v6;
  *(void *)(v0 + 184) = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v5, v3);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 192) = v8;
  *(void *)(v8 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v2, v3);
  swift_retain();
  return _swift_task_switch(sub_1007CEFBC, 0, 0);
}

uint64_t sub_1007CEFBC()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[21];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[25] = v3;
  v3[2] = v2;
  v3[3] = sub_1007E05E4;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[26] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007CF0C4;
  uint64_t v6 = v0[12];
  uint64_t v5 = v0[13];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1007E0D14, v3, v6);
}

uint64_t sub_1007CF0C4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1007CF214, v1, 0);
}

uint64_t sub_1007CF214()
{
  int v20 = v0;
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[13];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[15] + 48))(v2, 1, v1) == 1)
  {
    sub_10001DAB4(v2, (uint64_t *)&unk_10163B7C0);
LABEL_11:
    sub_1007E0518(v0[6], v0[16], (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v14 = v0[16];
    if (v13)
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 141558275;
      v0[2] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 12) = 2081;
      sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[3] = sub_1008FA0F0(v16, v17, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1007E0580(v14, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Skip keys download for %{private,mask.hash}s.\nShare has not been accepted yet.", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1007E0580(v0[16], (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
  uint64_t v3 = v0[17];
  sub_1007E0480(v2, v3, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  unsigned int v4 = *(unsigned __int8 *)(v3 + *(int *)(v1 + 40));
  BOOL v5 = v4 > 4;
  int v6 = (1 << v4) & 0x16;
  if (v5 || v6 == 0)
  {
    sub_1007E0580(v0[17], (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    goto LABEL_11;
  }
  uint64_t v8 = (void *)swift_task_alloc();
  v0[27] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1007CF5B4;
  uint64_t v9 = v0[6];
  return sub_1007D20B0(v9, 1);
}

uint64_t sub_1007CF5B4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    unsigned int v4 = sub_1007CF95C;
  }
  else {
    unsigned int v4 = sub_1007CF6E0;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1007CF6E0()
{
  if (qword_101636CE8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[22];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[6];
  v0[29] = qword_10164E068;
  v1(v3, v5 + *(int *)(v2 + 24), v4);
  sub_10000588C(&qword_101647FA0);
  sub_100062734(&qword_1016667E0, &qword_101647FA0);
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1007CF7F0, v7, v6);
}

uint64_t sub_1007CF7F0()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[7];
  dispatch thunk of AsyncKeyedThrottle.throttle(key:block:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  return _swift_task_switch(sub_1007CF8A8, v4, 0);
}

uint64_t sub_1007CF8A8()
{
  sub_1007E0580(*(void *)(v0 + 136), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1007CF95C()
{
  sub_1007E0580(*(void *)(v0 + 136), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1007CFA1C()
{
  return sub_1007E0BA4(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 1);
}

uint64_t sub_1007CFA54(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[8] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[9] = v4;
  v2[10] = *(void *)(v4 + 64);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = sub_10000588C((uint64_t *)&unk_10163B7C0);
  v2[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for MemberSharingCircle();
  v2[15] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v2[16] = v6;
  v2[17] = *(void *)(v6 + 64);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  return _swift_task_switch(sub_1007CFBEC, v1, 0);
}

uint64_t sub_1007CFBEC()
{
  uint64_t v15 = v0;
  if (qword_101636888 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = type metadata accessor for Logger();
  *(void *)(v0 + 176) = sub_100010324(v3, (uint64_t)qword_10170D788);
  sub_1007E0518(v1, v2, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 168);
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 141558275;
    *(void *)(v0 + 32) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2081;
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 40) = sub_1008FA0F0(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v7, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Download Keys for circle %{private,mask.hash}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1007E0580(*(void *)(v0 + 168), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  }

  uint64_t v11 = *(void *)(v0 + 120);
  uint64_t v12 = *(void *)(*(void *)(v0 + 56) + 152);
  *(void *)(v0 + 184) = v12;
  *(_DWORD *)(v0 + 264) = *(_DWORD *)(v11 + 20);
  return _swift_task_switch(sub_1007CFEA4, v12, 0);
}

uint64_t sub_1007CFEA4()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 48) + *(int *)(v0 + 264);
  *(void *)(v0 + 192) = *(void *)(v1 + 136);
  BOOL v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 200) = v6;
  *(void *)(v0 + 208) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v5, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 216) = v8;
  *(void *)(v8 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v8 + v7, v2, v4);
  swift_retain();
  return _swift_task_switch(sub_1007CFFB0, 0, 0);
}

uint64_t sub_1007CFFB0()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[24];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[28] = v3;
  v3[2] = v2;
  v3[3] = sub_1007E05E4;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[29] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007D00B8;
  uint64_t v6 = v0[13];
  uint64_t v5 = v0[14];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1007E0D14, v3, v6);
}

uint64_t sub_1007D00B8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1007D0208, v1, 0);
}

uint64_t sub_1007D0208()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 128) + 48))(v2, 1, v1) == 1)
  {
    sub_10001DAB4(v2, (uint64_t *)&unk_10163B7C0);
LABEL_13:
    sub_1007E0518(*(void *)(v0 + 48), *(void *)(v0 + 144), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    unint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v20 = *(void *)(v0 + 144);
    if (v19)
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 141558275;
      *(void *)(v0 + 16) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v21 + 12) = 2081;
      sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 24) = sub_1008FA0F0(v22, v23, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1007E0580(v20, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Skip keys download for %{private,mask.hash}s.\nShare has not been accepted yet.", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1007E0580(*(void *)(v0 + 144), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
  uint64_t v3 = *(void *)(v0 + 160);
  sub_1007E0480(v2, v3, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  unsigned int v4 = *(unsigned __int8 *)(v3 + *(int *)(v1 + 40));
  BOOL v5 = v4 > 4;
  int v6 = (1 << v4) & 0x16;
  if (v5 || v6 == 0)
  {
    sub_1007E0580(*(void *)(v0 + 160), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    goto LABEL_13;
  }
  if (qword_101636CE8 != -1) {
    swift_once();
  }
  uint64_t v8 = *(void *)(v0 + 152);
  uint64_t v9 = *(void *)(v0 + 128);
  uint64_t v10 = *(void *)(v0 + 56);
  uint64_t v11 = *(void *)(v0 + 48);
  (*(void (**)(void, uint64_t, void))(v0 + 200))(*(void *)(v0 + 88), v11 + *(int *)(*(void *)(v0 + 120) + 24), *(void *)(v0 + 64));
  sub_1007E0518(v11, v8, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v0 + 240) = v13;
  *(void *)(v13 + 16) = v10;
  sub_1007E0480(v8, v13 + v12, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  uint64_t v25 = (char *)&async function pointer to dispatch thunk of AsyncKeyedThrottle.throttle(key:block:skipBlock:)
      + async function pointer to dispatch thunk of AsyncKeyedThrottle.throttle(key:block:skipBlock:);
  swift_retain();
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1007D06D0;
  uint64_t v15 = *(void *)(v0 + 88);
  return ((uint64_t (*)(uint64_t, void *, uint64_t, uint64_t (*)(), void))v25)(v15, &unk_10164E1D8, v13, sub_1007D135C, 0);
}

uint64_t sub_1007D06D0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 72);
  uint64_t v5 = *(void *)(*v1 + 64);
  *(void *)(*v1 + 256) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_release();
  uint64_t v6 = *(void *)(v2 + 56);
  if (v0) {
    unint64_t v7 = sub_1007D0948;
  }
  else {
    unint64_t v7 = sub_1007D087C;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1007D087C()
{
  sub_1007E0580(*(void *)(v0 + 160), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1007D0948()
{
  sub_1007E0580(*(void *)(v0 + 160), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1007D0A20(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = type metadata accessor for MemberSharingCircle();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[7] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[8] = v5;
  v2[9] = *(void *)(v5 + 64);
  v2[10] = swift_task_alloc();
  v2[11] = sub_10000588C((uint64_t *)&unk_10163B7C0);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  return _swift_task_switch(sub_1007D0B88, 0, 0);
}

uint64_t sub_1007D0B88()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) + 152);
  *(void *)(v0 + 112) = v2;
  *(_DWORD *)(v0 + 168) = *(_DWORD *)(v1 + 20);
  return _swift_task_switch(sub_1007D0BB8, v2, 0);
}

uint64_t sub_1007D0BB8()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 24) + *(int *)(v0 + 168);
  *(void *)(v0 + 120) = *(void *)(v1 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 128) = v7;
  *(void *)(v7 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v7 + v6, v2, v3);
  swift_retain();
  return _swift_task_switch(sub_1007D0CB4, 0, 0);
}

uint64_t sub_1007D0CB4()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[17] = v3;
  v3[2] = v2;
  v3[3] = sub_1007E05E4;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[18] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007D0DBC;
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[11];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1007E0D14, v3, v6);
}

uint64_t sub_1007D0DBC()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1007D0EF0, 0, 0);
}

uint64_t sub_1007D0EF0()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  sub_10001D074(v0[13], v1, (uint64_t *)&unk_10163B7C0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_10001DAB4(v0[12], (uint64_t *)&unk_10163B7C0);
    sub_1001307C4();
    swift_allocError();
    *uint64_t v4 = 1;
    swift_willThrow();
    sub_10001DAB4(v0[13], (uint64_t *)&unk_10163B7C0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5(0);
  }
  else
  {
    sub_1007E0480(v0[12], v0[6], (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[19] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1007D10C0;
    uint64_t v8 = v0[6];
    return sub_1007D20B0(v8, 0);
  }
}

uint64_t sub_1007D10C0()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1007D1294;
  }
  else {
    uint64_t v2 = sub_1007D11D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1007D11D4()
{
  uint64_t v1 = v0[13];
  sub_1007E0580(v0[6], (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_10001DAB4(v1, (uint64_t *)&unk_10163B7C0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(1);
}

uint64_t sub_1007D1294()
{
  sub_1007E0580(v0[6], (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_10001DAB4(v0[13], (uint64_t *)&unk_10163B7C0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1(0);
}

uint64_t sub_1007D135C()
{
  sub_1001307C4();
  swift_allocError();
  unsigned char *v0 = 0;
  return swift_willThrow();
}

uint64_t sub_1007D13A8(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[8] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[9] = v4;
  v2[10] = *(void *)(v4 + 64);
  v2[11] = swift_task_alloc();
  v2[12] = sub_10000588C((uint64_t *)&unk_10163B7C0);
  v2[13] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for MemberSharingCircle();
  v2[14] = v5;
  v2[15] = *(void *)(v5 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  return _swift_task_switch(sub_1007D151C, v1, 0);
}

uint64_t sub_1007D151C()
{
  uint64_t v15 = v0;
  if (qword_101636888 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = type metadata accessor for Logger();
  *(void *)(v0 + 152) = sub_100010324(v3, (uint64_t)qword_10170D788);
  sub_1007E0518(v1, v2, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 144);
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 141558275;
    *(void *)(v0 + 32) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2081;
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 40) = sub_1008FA0F0(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v7, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Force download Keys for circle %{private,mask.hash}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1007E0580(*(void *)(v0 + 144), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  }

  uint64_t v11 = *(void *)(v0 + 112);
  uint64_t v12 = *(void *)(*(void *)(v0 + 56) + 152);
  *(void *)(v0 + 160) = v12;
  *(_DWORD *)(v0 + 216) = *(_DWORD *)(v11 + 20);
  return _swift_task_switch(sub_1007D17D4, v12, 0);
}

uint64_t sub_1007D17D4()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 48) + *(int *)(v0 + 216);
  *(void *)(v0 + 168) = *(void *)(v1 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 176) = v7;
  *(void *)(v7 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v7 + v6, v2, v3);
  swift_retain();
  return _swift_task_switch(sub_1007D18D0, 0, 0);
}

uint64_t sub_1007D18D0()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[23] = v3;
  v3[2] = v2;
  v3[3] = sub_1007E05E4;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[24] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007D19D4;
  uint64_t v6 = v0[12];
  uint64_t v5 = v0[13];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1007E0D14, v3, v6);
}

uint64_t sub_1007D19D4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1007D1B24, v1, 0);
}

uint64_t sub_1007D1B24()
{
  uint64_t v20 = v0;
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[13];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[15] + 48))(v2, 1, v1) == 1)
  {
    sub_10001DAB4(v2, (uint64_t *)&unk_10163B7C0);
LABEL_11:
    sub_1007E0518(v0[6], v0[16], (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v14 = v0[16];
    if (v13)
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 141558275;
      v0[2] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 12) = 2081;
      sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[3] = sub_1008FA0F0(v16, v17, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1007E0580(v14, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Skip keys download for %{private,mask.hash}s.\nShare has not been accepted yet.", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1007E0580(v0[16], (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
  uint64_t v3 = v0[17];
  sub_1007E0480(v2, v3, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  unsigned int v4 = *(unsigned __int8 *)(v3 + *(int *)(v1 + 40));
  BOOL v5 = v4 > 4;
  int v6 = (1 << v4) & 0x16;
  if (v5 || v6 == 0)
  {
    sub_1007E0580(v0[17], (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    goto LABEL_11;
  }
  uint64_t v8 = (void *)swift_task_alloc();
  v0[25] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1007D1EC4;
  uint64_t v9 = v0[6];
  return sub_1007D20B0(v9, 0);
}

uint64_t sub_1007D1EC4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    unsigned int v4 = sub_1007D1FF0;
  }
  else {
    unsigned int v4 = sub_1007CF8A8;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1007D1FF0()
{
  sub_1007E0580(*(void *)(v0 + 136), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1007D20B0(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 75) = a2;
  *(void *)(v3 + 200) = a1;
  *(void *)(v3 + 208) = v2;
  sub_10000588C(&qword_10164DBB0);
  *(void *)(v3 + 216) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for MemberSharingCircle();
  *(void *)(v3 + 224) = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)(v3 + 232) = v5;
  *(void *)(v3 + 240) = *(void *)(v5 + 64);
  *(void *)(v3 + 248) = swift_task_alloc();
  *(void *)(v3 + 256) = swift_task_alloc();
  *(void *)(v3 + 264) = swift_task_alloc();
  *(void *)(v3 + 272) = swift_task_alloc();
  *(void *)(v3 + 280) = swift_task_alloc();
  return _swift_task_switch(sub_1007D21E0, v2, 0);
}

uint64_t sub_1007D21E0()
{
  uint64_t v15 = v0;
  if (qword_101636888 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[25];
  uint64_t v3 = type metadata accessor for Logger();
  v0[36] = sub_100010324(v3, (uint64_t)qword_10170D788);
  sub_1007E0518(v2, v1, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[35];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 141558275;
    v0[16] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2081;
    type metadata accessor for UUID();
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[12] = sub_1008FA0F0(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v7, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Process keys downloading for circle %{private,mask.hash}s.", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1007E0580(v0[35], (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  }

  sub_10001CD44((void *)(v0[26] + 112), *(void *)(v0[26] + 136));
  uint64_t v11 = (void *)swift_task_alloc();
  v0[37] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1007D24CC;
  uint64_t v12 = v0[25];
  return sub_100C2B32C(v12);
}

uint64_t sub_1007D24CC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[38] = a1;
  v3[39] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[26];
    return _swift_task_switch(sub_1007D28EC, v4, 0);
  }
  else
  {
    uint64_t v7 = (uint64_t (*)(uint64_t))((char *)&dword_101662A88 + dword_101662A88);
    os_log_type_t v5 = (void *)swift_task_alloc();
    v3[40] = v5;
    void *v5 = v3;
    v5[1] = sub_1007D2654;
    return v7(2);
  }
}

uint64_t sub_1007D2654()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 328) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1007D27C4;
  char v4 = *(unsigned char *)(v1 + 75);
  uint64_t v5 = *(void *)(v1 + 200);
  uint64_t v6 = *(void *)(v1 + 304);
  return sub_1007D3AB0(v6, v5, v4);
}

uint64_t sub_1007D27C4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 336) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 208);
    char v4 = sub_1007D3688;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 208);
    swift_bridgeObjectRelease();
    char v4 = sub_1007D2ED8;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1007D28EC()
{
  uint64_t v26 = v0;
  uint64_t v1 = (unsigned char *)(v0 + 73);
  sub_1007E0518(*(void *)(v0 + 200), *(void *)(v0 + 272), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 272);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 141558531;
    *(void *)(v0 + 104) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 2081;
    type metadata accessor for UUID();
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v6 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 112) = sub_1008FA0F0(v6, v7, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v8 = v4;
    uint64_t v1 = (unsigned char *)(v0 + 73);
    sub_1007E0580(v8, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v5 + 22) = 2082;
    swift_getErrorValue();
    uint64_t v9 = Error.localizedDescription.getter();
    *(void *)(v0 + 136) = sub_1008FA0F0(v9, v10, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to download keys for circle: %{private,mask.hash}s,\nerror: %{public}s", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1007E0580(*(void *)(v0 + 272), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    swift_errorRelease();
    swift_errorRelease();
  }

  *(void *)(v0 + 168) = *(void *)(v0 + 312);
  swift_errorRetain();
  *(void *)(v0 + 352) = sub_10000588C(&qword_101638D40);
  if (swift_dynamicCast()
    && *v1 == 19
    && (*(void *)(v0 + 88) = *(void *)(v0 + 312), swift_errorRetain(), (swift_dynamicCast() & 1) != 0))
  {
    *(void *)(v0 + 80) = *(void *)(v0 + 312);
    swift_errorRetain();
    if (swift_dynamicCast() && *(unsigned char *)(v0 + 72) == 1 && *(void *)(v0 + 64) > 5uLL)
    {
      uint64_t v11 = *(void *)(v0 + 256);
      uint64_t v12 = *(void *)(v0 + 232);
      uint64_t v14 = *(void *)(v0 + 208);
      uint64_t v13 = *(void *)(v0 + 216);
      uint64_t v15 = *(void *)(v0 + 200);
      uint64_t v16 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 1, 1, v16);
      sub_1007E0518(v15, v11, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
      uint64_t v18 = sub_1007E02E4(&qword_10164E180, v17, (void (*)(uint64_t))type metadata accessor for ShareKeysDownloadUseCase);
      unint64_t v19 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      uint64_t v20 = (void *)swift_allocObject();
      v20[2] = v14;
      v20[3] = v18;
      v20[4] = v14;
      sub_1007E0480(v11, (uint64_t)v20 + v19, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
      swift_retain_n();
      sub_1008F5E44(v13, (uint64_t)&unk_10164E1C8, (uint64_t)v20);
      swift_errorRelease();
      swift_release();
    }
    else
    {
      swift_errorRelease();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
  else
  {
    unint64_t v24 = (uint64_t (*)(char))((char *)&dword_101662A88 + dword_101662A88);
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 360) = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_1007D3330;
    return v24(0);
  }
}

uint64_t sub_1007D2ED8()
{
  uint64_t v12 = v0;
  sub_1007E0518(v0[25], v0[33], (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v10 = v0[33];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    v0[23] = 1752392040;
    uint64_t v11 = v4;
    *(_DWORD *)uint64_t v3 = 141558275;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v3 + 12) = 2081;
    type metadata accessor for UUID();
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v5 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[24] = sub_1008FA0F0(v5, v6, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v10, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Done processing members for circle %{private,mask.hash}s.", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1007E0580(v0[33], (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  }

  sub_10001CD44((void *)(v0[26] + 160), *(void *)(v0[26] + 184));
  unint64_t v7 = (void *)swift_task_alloc();
  v0[43] = v7;
  *unint64_t v7 = v0;
  v7[1] = sub_1007D317C;
  uint64_t v8 = v0[25];
  return sub_1010BEF20(v8);
}

uint64_t sub_1007D317C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1007D3330()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 208);
  swift_task_dealloc();
  return _swift_task_switch(sub_1007D3440, v1, 0);
}

uint64_t sub_1007D3440()
{
  *(void *)(v0 + 80) = *(void *)(v0 + 312);
  swift_errorRetain();
  if ((swift_dynamicCast() & 1) != 0 && (*(unsigned char *)(v0 + 72) == 1 ? (BOOL v1 = *(void *)(v0 + 64) > 5uLL) : (BOOL v1 = 0), v1))
  {
    uint64_t v2 = *(void *)(v0 + 256);
    uint64_t v3 = *(void *)(v0 + 232);
    uint64_t v5 = *(void *)(v0 + 208);
    uint64_t v4 = *(void *)(v0 + 216);
    uint64_t v6 = *(void *)(v0 + 200);
    uint64_t v7 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
    sub_1007E0518(v6, v2, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    uint64_t v9 = sub_1007E02E4(&qword_10164E180, v8, (void (*)(uint64_t))type metadata accessor for ShareKeysDownloadUseCase);
    unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = v5;
    v11[3] = v9;
    v11[4] = v5;
    sub_1007E0480(v2, (uint64_t)v11 + v10, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    swift_retain_n();
    sub_1008F5E44(v4, (uint64_t)&unk_10164E1C8, (uint64_t)v11);
    swift_errorRelease();
    swift_release();
  }
  else
  {
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1007D3688()
{
  uint64_t v16 = v0;
  uint64_t v1 = v0[31];
  uint64_t v2 = v0[25];
  swift_bridgeObjectRelease();
  sub_1007E0518(v2, v1, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[31];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 141558531;
    v0[18] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2081;
    type metadata accessor for UUID();
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v7 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[19] = sub_1008FA0F0(v7, v8, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v5, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v6 + 22) = 2082;
    swift_getErrorValue();
    uint64_t v9 = Error.localizedDescription.getter();
    v0[22] = sub_1008FA0F0(v9, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to process circle: %{private,mask.hash}s,\nerror: %{public}s", (uint8_t *)v6, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    uint64_t v11 = v0[31];
    swift_errorRelease();
    sub_1007E0580(v11, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_10001CD44((void *)(v0[26] + 160), *(void *)(v0[26] + 184));
  uint64_t v12 = (void *)swift_task_alloc();
  v0[43] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1007D317C;
  uint64_t v13 = v0[25];
  return sub_1010BEF20(v13);
}

uint64_t sub_1007D39E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_1007D3A08, a4, 0);
}

uint64_t sub_1007D3A08()
{
  sub_10001CD44((void *)(v0[2] + 160), *(void *)(v0[2] + 184));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1003D6A84;
  uint64_t v2 = v0[3];
  return sub_1010BCDFC(v2);
}

uint64_t sub_1007D3AB0(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 728) = v3;
  *(unsigned char *)(v4 + 1388) = a3;
  *(void *)(v4 + 720) = a2;
  *(void *)(v4 + 712) = a1;
  sub_10000588C(&qword_10164DBB0);
  *(void *)(v4 + 736) = swift_task_alloc();
  uint64_t v5 = sub_10000588C(&qword_101657C30);
  *(void *)(v4 + 744) = v5;
  *(void *)(v4 + 752) = *(void *)(v5 - 8);
  *(void *)(v4 + 760) = swift_task_alloc();
  *(void *)(v4 + 768) = sub_10000588C((uint64_t *)&unk_101653D50);
  *(void *)(v4 + 776) = swift_task_alloc();
  *(void *)(v4 + 784) = sub_10000588C((uint64_t *)&unk_10163B890);
  *(void *)(v4 + 792) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for MemberPeerTrust();
  *(void *)(v4 + 800) = v6;
  *(void *)(v4 + 808) = *(void *)(v6 - 8);
  *(void *)(v4 + 816) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  *(void *)(v4 + 824) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v4 + 832) = v8;
  *(void *)(v4 + 840) = *(void *)(v8 + 64);
  *(void *)(v4 + 848) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member(0);
  *(void *)(v4 + 856) = v9;
  *(void *)(v4 + 864) = *(void *)(v9 - 8);
  *(void *)(v4 + 872) = swift_task_alloc();
  *(void *)(v4 + 880) = swift_task_alloc();
  *(void *)(v4 + 888) = swift_task_alloc();
  *(void *)(v4 + 896) = swift_task_alloc();
  *(void *)(v4 + 904) = swift_task_alloc();
  *(void *)(v4 + 912) = swift_task_alloc();
  *(void *)(v4 + 920) = swift_task_alloc();
  *(void *)(v4 + 928) = swift_task_alloc();
  *(void *)(v4 + 936) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MemberSharingCircle();
  *(void *)(v4 + 944) = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)(v4 + 952) = v11;
  *(void *)(v4 + 960) = *(void *)(v11 + 64);
  *(void *)(v4 + 968) = swift_task_alloc();
  *(void *)(v4 + 976) = swift_task_alloc();
  *(void *)(v4 + 984) = swift_task_alloc();
  *(void *)(v4 + 992) = swift_task_alloc();
  *(void *)(v4 + 1000) = swift_task_alloc();
  *(void *)(v4 + 1008) = swift_task_alloc();
  *(void *)(v4 + 1016) = swift_task_alloc();
  *(void *)(v4 + 1024) = swift_task_alloc();
  *(void *)(v4 + 1032) = swift_task_alloc();
  *(void *)(v4 + 1040) = swift_task_alloc();
  return _swift_task_switch(sub_1007D3E6C, v3, 0);
}

uint64_t sub_1007D3E6C()
{
  uint64_t v1 = *(void *)(v0 + 944);
  uint64_t v2 = *(void *)(v0 + 720);
  *(void *)(v0 + 1048) = *(void *)(*(void *)(v0 + 728) + 152);
  uint64_t v3 = *(int *)(v1 + 24);
  *(_DWORD *)(v0 + 1368) = v3;
  uint64_t v4 = v2 + v3;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 1056) = v5;
  void *v5 = v0;
  v5[1] = sub_1007D3F1C;
  return sub_100E5B3AC(v4);
}

uint64_t sub_1007D3F1C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 728);
  *(void *)(*(void *)v1 + 1064) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007D4034, v2, 0);
}

uint64_t sub_1007D4034()
{
  uint64_t v51 = v0;
  uint64_t v1 = *(void *)(v0 + 1064);
  uint64_t v2 = *(void *)(v0 + 720);
  uint64_t v3 = (void *)swift_task_alloc();
  v3[2] = v2;
  uint64_t v4 = sub_1000A3E1C((uint64_t (*)(char *))sub_1007E0218, v3, v1);
  *(void *)(v0 + 1072) = v4;
  swift_task_dealloc();
  *(void *)(v0 + 704) = _swiftEmptyArrayStorage;
  uint64_t v5 = *(void *)(v4 + 16);
  *(void *)(v0 + 1080) = v5;
  if (v5)
  {
    uint64_t v6 = *(void *)(v0 + 952);
    uint64_t v7 = *(void *)(v0 + 944);
    int v8 = *(_DWORD *)(v6 + 80);
    *(_DWORD *)(v0 + 1372) = v8;
    *(void *)(v0 + 1088) = *(void *)(v6 + 72);
    *(void *)(v0 + 1096) = 0;
    uint64_t v9 = *(void *)(v0 + 1040);
    uint64_t v10 = *(void *)(v0 + 1072) + ((v8 + 32) & ~(unint64_t)v8);
    swift_bridgeObjectRetain();
    sub_1007E0518(v10, v9, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    uint64_t v11 = *(void *)(v9 + *(int *)(v7 + 36));
    uint64_t v12 = *(void *)(v11 + 16);
    if (!v12)
    {
      uint64_t v16 = _swiftEmptyArrayStorage;
LABEL_14:
      *(void *)(v0 + 640) = v16;
      uint64_t v44 = (void *)swift_task_alloc();
      *(void *)(v0 + 1104) = v44;
      uint64_t v45 = sub_10000588C((uint64_t *)&unk_1016636E0);
      uint64_t v21 = sub_100062734((unint64_t *)&qword_10163FBF0, (uint64_t *)&unk_1016636E0);
      *uint64_t v44 = v0;
      v44[1] = sub_1007D47D0;
      uint64_t v18 = *(void *)(v0 + 728);
      uint64_t v20 = &type metadata for String;
      uint64_t v17 = (char *)&unk_10164E1A0;
      uint64_t v19 = v45;
      return Sequence.asyncCompactMap<A>(_:)(v17, v18, v19, v20, v21);
    }
    uint64_t v13 = *(void *)(v0 + 832);
    sub_10000588C(&qword_10163BC50);
    uint64_t v14 = *(void *)(v13 + 72);
    unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v16 = (void *)swift_allocObject();
    uint64_t v17 = (char *)j__malloc_size(v16);
    if (v14)
    {
      if (&v17[-v15] == (char *)0x8000000000000000 && v14 == -1)
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return Sequence.asyncCompactMap<A>(_:)(v17, v18, v19, v20, v21);
      }
      v16[2] = v12;
      v16[3] = 2 * ((uint64_t)&v17[-v15] / v14);
      swift_bridgeObjectRetain_n();
      uint64_t v23 = sub_100711B04(v0 + 56, (char *)v16 + v15, v12, v11);
      sub_100132C20();
      if (v23 == v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else if (qword_101636888 == -1)
  {
    goto LABEL_11;
  }
  swift_once();
LABEL_11:
  unint64_t v24 = (long long *)(v0 + 16);
  uint64_t v25 = *(void *)(v0 + 1032);
  uint64_t v26 = *(void *)(v0 + 720);
  uint64_t v27 = type metadata accessor for Logger();
  *(void *)(v0 + 1120) = v27;
  *(void *)(v0 + 1128) = sub_100010324(v27, (uint64_t)qword_10170D788);
  sub_1007E0518(v26, v25, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  swift_bridgeObjectRetain_n();
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v31 = *(void *)(v0 + 1032);
  if (v30)
  {
    log = v28;
    uint64_t v32 = *(void *)(v0 + 712);
    uint64_t v33 = swift_slowAlloc();
    v50[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 141559299;
    *(void *)(v0 + 688) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v33 + 12) = 2081;
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 696) = sub_1008FA0F0(v34, v35, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v31, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v33 + 22) = 2080;
    swift_beginAccess();
    uint64_t v36 = *(void *)(v0 + 704);
    swift_bridgeObjectRetain();
    uint64_t v37 = Array.description.getter();
    unint64_t v39 = v38;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 624) = sub_1008FA0F0(v37, v39, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unint64_t v24 = (long long *)(v0 + 16);
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 32) = 2048;
    *(void *)(v0 + 616) = *(void *)(v36 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v33 + 42) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v40 = Array.description.getter();
    unint64_t v42 = v41;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 608) = sub_1008FA0F0(v40, v42, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 52) = 2048;
    uint64_t v43 = *(void *)(v32 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 576) = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v29, "Processing circle: %{private,mask.hash}s,\nknownMembers: %s, count: %ld,\nmembers: %s, count: %ld.", (uint8_t *)v33, 0x3Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1007E0580(v31, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);

    swift_bridgeObjectRelease_n();
  }
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v17 = (char *)sub_10001D074((uint64_t)&xmmword_10166E8F0, (uint64_t)v24, (uint64_t *)&unk_101638D30);
  if (!*(void *)(v0 + 40)) {
    goto LABEL_28;
  }
  sub_10001CEB0(v24, v0 + 136);
  sub_10001CD44((void *)(v0 + 136), *(void *)(v0 + 160));
  v49 = (uint64_t (__cdecl *)())((char *)&dword_1016391F8 + dword_1016391F8);
  uint64_t v46 = (void *)swift_task_alloc();
  *(void *)(v0 + 1136) = v46;
  *uint64_t v46 = v0;
  v46[1] = sub_1007D507C;
  return v49();
}

uint64_t sub_1007D47D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 728);
  *(void *)(*(void *)v1 + 1112) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1007D490C, v2, 0);
}

uint64_t sub_1007D490C()
{
  uint64_t v47 = v0;
  uint64_t v1 = *(void *)(v0 + 1080);
  uint64_t v2 = *(void *)(v0 + 1040);
  uint64_t v3 = *(void *)(v0 + 1096) + 1;
  sub_1004429C0(*(void *)(v0 + 1112));
  sub_1007E0580(v2, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  if (v3 != v1)
  {
    uint64_t v24 = *(void *)(v0 + 1096) + 1;
    *(void *)(v0 + 1096) = v24;
    uint64_t v25 = *(void *)(v0 + 1040);
    uint64_t v26 = *(void *)(v0 + 944);
    sub_1007E0518(*(void *)(v0 + 1072)+ ((*(unsigned __int8 *)(v0 + 1372) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1372))+ *(void *)(v0 + 1088) * v24, v25, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    uint64_t v27 = *(void *)(v25 + *(int *)(v26 + 36));
    uint64_t v28 = *(void *)(v27 + 16);
    if (!v28)
    {
      uint64_t v32 = _swiftEmptyArrayStorage;
LABEL_22:
      *(void *)(v0 + 640) = v32;
      unint64_t v42 = (void *)swift_task_alloc();
      *(void *)(v0 + 1104) = v42;
      uint64_t v43 = sub_10000588C((uint64_t *)&unk_1016636E0);
      uint64_t v37 = sub_100062734((unint64_t *)&qword_10163FBF0, (uint64_t *)&unk_1016636E0);
      *unint64_t v42 = v0;
      v42[1] = sub_1007D47D0;
      uint64_t v34 = *(void *)(v0 + 728);
      uint64_t v36 = &type metadata for String;
      uint64_t v33 = (char *)&unk_10164E1A0;
      uint64_t v35 = v43;
      return Sequence.asyncCompactMap<A>(_:)(v33, v34, v35, v36, v37);
    }
    uint64_t v29 = *(void *)(v0 + 832);
    sub_10000588C(&qword_10163BC50);
    uint64_t v30 = *(void *)(v29 + 72);
    unint64_t v31 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v32 = (void *)swift_allocObject();
    uint64_t v33 = (char *)j__malloc_size(v32);
    if (v30)
    {
      if (&v33[-v31] == (char *)0x8000000000000000 && v30 == -1) {
        goto LABEL_27;
      }
      v32[2] = v28;
      v32[3] = 2 * ((uint64_t)&v33[-v31] / v30);
      swift_bridgeObjectRetain_n();
      uint64_t v39 = sub_100711B04(v0 + 56, (char *)v32 + v31, v28, v27);
      uint64_t v33 = (char *)sub_100132C20();
      if (v39 == v28)
      {
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    return Sequence.asyncCompactMap<A>(_:)(v33, v34, v35, v36, v37);
  }
  swift_bridgeObjectRelease();
  if (qword_101636888 != -1) {
    swift_once();
  }
  uint64_t v4 = (long long *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 1032);
  uint64_t v6 = *(void *)(v0 + 720);
  uint64_t v7 = type metadata accessor for Logger();
  *(void *)(v0 + 1120) = v7;
  *(void *)(v0 + 1128) = sub_100010324(v7, (uint64_t)qword_10170D788);
  sub_1007E0518(v6, v5, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  swift_bridgeObjectRetain_n();
  int v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = *(void *)(v0 + 1032);
  if (v10)
  {
    log = v8;
    uint64_t v12 = *(void *)(v0 + 712);
    uint64_t v13 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 141559299;
    *(void *)(v0 + 688) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2081;
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 696) = sub_1008FA0F0(v14, v15, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v11, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v13 + 22) = 2080;
    swift_beginAccess();
    uint64_t v16 = *(void *)(v0 + 704);
    swift_bridgeObjectRetain();
    uint64_t v17 = Array.description.getter();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 624) = sub_1008FA0F0(v17, v19, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v4 = (long long *)(v0 + 16);
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 32) = 2048;
    *(void *)(v0 + 616) = *(void *)(v16 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 42) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v20 = Array.description.getter();
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 608) = sub_1008FA0F0(v20, v22, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 52) = 2048;
    uint64_t v23 = *(void *)(v12 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 576) = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v9, "Processing circle: %{private,mask.hash}s,\nknownMembers: %s, count: %ld,\nmembers: %s, count: %ld.", (uint8_t *)v13, 0x3Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1007E0580(v11, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);

    swift_bridgeObjectRelease_n();
  }
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v33 = (char *)sub_10001D074((uint64_t)&xmmword_10166E8F0, (uint64_t)v4, (uint64_t *)&unk_101638D30);
  if (!*(void *)(v0 + 40)) {
    goto LABEL_28;
  }
  sub_10001CEB0(v4, v0 + 136);
  sub_10001CD44((void *)(v0 + 136), *(void *)(v0 + 160));
  uint64_t v45 = (uint64_t (__cdecl *)())((char *)&dword_1016391F8 + dword_1016391F8);
  uint64_t v40 = (void *)swift_task_alloc();
  *(void *)(v0 + 1136) = v40;
  *uint64_t v40 = v0;
  v40[1] = sub_1007D507C;
  return v45();
}

uint64_t sub_1007D507C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 728);
  *(void *)(*(void *)v1 + 1144) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007D5194, v2, 0);
}

uint64_t sub_1007D5194()
{
  if (*(void *)(v0 + 1144))
  {
    uint64_t v1 = *(void *)(v0 + 712);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 136);
    uint64_t v2 = *(void *)(v1 + 16);
    *(void *)(v0 + 1152) = v2;
    if (v2)
    {
      uint64_t v3 = *(void *)(v0 + 864);
      *(_DWORD *)(v0 + 1376) = *(_DWORD *)(v3 + 80);
      swift_bridgeObjectRetain();
      swift_beginAccess();
      uint64_t v4 = 0;
      *(void *)(v0 + 1160) = *(void *)(v3 + 72);
      while (1)
      {
        *(void *)(v0 + 1184) = _swiftEmptyArrayStorage;
        *(void *)(v0 + 1176) = _swiftEmptyArrayStorage;
        *(void *)(v0 + 1168) = v4;
        uint64_t v5 = *(void *)(v0 + 936);
        uint64_t v6 = *(void *)(v0 + 856);
        sub_1007E0518(*(void *)(v0 + 712)+ ((*(unsigned __int8 *)(v0 + 1376) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1376))+ *(void *)(v0 + 1160) * v4, v5, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
        if ((*(unsigned char *)(v5 + *(int *)(v6 + 20)) & 1) == 0)
        {
          uint64_t v7 = *(void *)(v0 + 848);
          uint64_t v8 = *(void *)(v0 + 832);
          uint64_t v9 = *(void *)(v0 + 824);
          uint64_t v10 = *(void *)(v0 + 720) + *(int *)(*(void *)(v0 + 944) + 32);
          uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
          *(void *)(v0 + 1192) = v11;
          *(void *)(v0 + 1200) = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
          v11(v7, v10, v9);
          sub_1007E02E4((unint64_t *)&qword_10163B8F0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v12 = dispatch thunk of static Equatable.== infix(_:_:)();
          (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
          if ((v12 & 1) == 0) {
            break;
          }
        }
        sub_1007E0580(*(void *)(v0 + 936), type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
        uint64_t v4 = *(void *)(v0 + 1168) + 1;
        if (v4 == *(void *)(v0 + 1152))
        {
          swift_bridgeObjectRelease();
          goto LABEL_18;
        }
      }
      uint64_t v13 = *(void *)(v0 + 1048);
      return _swift_task_switch(sub_1007D56B4, v13, 0);
    }
    else
    {
LABEL_18:
      *(void *)(v0 + 1328) = _swiftEmptyArrayStorage;
      *(void *)(v0 + 1320) = _swiftEmptyArrayStorage;
      unint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 1336) = v18;
      *unint64_t v18 = v0;
      v18[1] = sub_1007D9310;
      uint64_t v19 = *(void *)(v0 + 1072);
      uint64_t v20 = *(void *)(v0 + 720);
      uint64_t v21 = *(void *)(v0 + 712);
      return sub_1007DC948((uint64_t)_swiftEmptyArrayStorage, v20, v21, v19);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 136);
    if (qword_101636FA0 != -1) {
      swift_once();
    }
    sub_100010324(*(void *)(v0 + 1120), (uint64_t)qword_10170EA60);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "No ItemSharingNotificationsService available!", v16, 2u);
      swift_slowDealloc();
    }

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_1007D56B4()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1192);
  uint64_t v2 = *(void *)(v0 + 1048);
  uint64_t v3 = *(void *)(v0 + 936);
  uint64_t v4 = *(void *)(v0 + 848);
  uint64_t v5 = *(void *)(v0 + 832);
  uint64_t v6 = *(void *)(v0 + 824);
  *(void *)(v0 + 1208) = *(void *)(v2 + 136);
  v1(v4, v3, v6);
  int v7 = *(_DWORD *)(v5 + 80);
  *(_DWORD *)(v0 + 1380) = v7;
  unint64_t v8 = (v7 + 24) & ~(unint64_t)v7;
  uint64_t v9 = swift_allocObject();
  *(void *)(v0 + 1216) = v9;
  *(void *)(v9 + 16) = v2;
  uint64_t v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32);
  *(void *)(v0 + 1224) = v10;
  *(void *)(v0 + 1232) = (v5 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v10(v9 + v8, v4, v6);
  swift_retain();
  return _swift_task_switch(sub_1007D57C0, 0, 0);
}

uint64_t sub_1007D57C0()
{
  uint64_t v1 = v0[152];
  uint64_t v2 = v0[151];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[155] = v3;
  v3[2] = v2;
  v3[3] = sub_1007E0330;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[156] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007D58CC;
  uint64_t v5 = v0[99];
  uint64_t v6 = v0[98];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1000750F8, v3, v6);
}

uint64_t sub_1007D58CC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 728);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1007D5A1C, v1, 0);
}

uint64_t sub_1007D5A1C()
{
  uint64_t v104 = v0;
  uint64_t v1 = *(void *)(v0 + 792);
  int v2 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 808) + 48))(v1, 1, *(void *)(v0 + 800));
  uint64_t v3 = *(void *)(v0 + 720);
  if (v2 != 1)
  {
    uint64_t v18 = *(void *)(v0 + 944);
    sub_1007E0480(v1, *(void *)(v0 + 816), (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
    uint64_t v19 = *(void *)(v3 + *(int *)(v18 + 36));
    if (*(void *)(v19 + 16)
      && (unint64_t v20 = sub_1007240CC(*(void *)(v0 + 816) + *(int *)(*(void *)(v0 + 800) + 20)), (v21 & 1) != 0))
    {
      int v22 = *(unsigned __int8 *)(*(void *)(v19 + 56) + v20);
    }
    else
    {
      int v22 = 0;
    }
    uint64_t v23 = *(void *)(v0 + 936);
    uint64_t v24 = (uint64_t *)(*(void *)(v0 + 816) + *(int *)(*(void *)(v0 + 800) + 32));
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = *(int *)(*(void *)(v0 + 856) + 24);
    *(_DWORD *)(v0 + 1384) = v27;
    uint64_t v28 = (uint64_t *)(v23 + v27);
    uint64_t v30 = *v28;
    uint64_t v29 = v28[1];
    if (v25 == *v28 && v26 == v29)
    {
      if (v22 == 1)
      {
LABEL_20:
        uint64_t v48 = *(void *)(v0 + 880);
        uint64_t v49 = *(void *)(v0 + 872);
        sub_1007E0518(*(void *)(v0 + 720), *(void *)(v0 + 1000), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
        sub_1007E0518(v23, v48, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
        sub_1007E0518(v23, v49, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
        uint64_t v50 = Logger.logObject.getter();
        os_log_type_t v51 = static os_log_type_t.default.getter();
        BOOL v52 = os_log_type_enabled(v50, v51);
        uint64_t v53 = *(void *)(v0 + 1000);
        if (v52)
        {
          uint64_t v97 = *(void *)(v0 + 880);
          uint64_t v98 = *(void *)(v0 + 856);
          uint64_t v99 = *(void *)(v0 + 872);
          uint64_t v101 = *(void *)(v0 + 816);
          *(void *)os_log_type_t type = *(void *)(v0 + 936);
          uint64_t v54 = swift_slowAlloc();
          uint64_t v103 = swift_slowAlloc();
          *(_DWORD *)uint64_t v54 = 141559043;
          *(void *)(v0 + 648) = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v54 + 12) = 2081;
          sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v55 = dispatch thunk of CustomStringConvertible.description.getter();
          *(void *)(v0 + 656) = sub_1008FA0F0(v55, v56, &v103);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1007E0580(v53, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
          *(_WORD *)(v54 + 22) = 2160;
          *(void *)(v0 + 664) = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v54 + 32) = 2081;
          uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
          *(void *)(v0 + 672) = sub_1008FA0F0(v57, v58, &v103);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1007E0580(v97, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
          *(_WORD *)(v54 + 42) = 2080;
          uint64_t v59 = (uint64_t *)(v99 + *(int *)(v98 + 24));
          uint64_t v60 = *v59;
          unint64_t v61 = v59[1];
          swift_bridgeObjectRetain();
          *(void *)(v0 + 680) = sub_1008FA0F0(v60, v61, &v103);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1007E0580(v99, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
          _os_log_impl((void *)&_mh_execute_header, v50, v51, "Participant for shareId: %{private,mask.hash}s,\nmemberId: %{private,mask.hash}s\nis already known by %s.", (uint8_t *)v54, 0x34u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_1007E0580(v101, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
          uint64_t v62 = *(void *)type;
        }
        else
        {
          uint64_t v72 = *(void *)(v0 + 936);
          uint64_t v73 = *(void *)(v0 + 880);
          uint64_t v74 = *(void *)(v0 + 872);
          uint64_t v75 = *(void *)(v0 + 816);

          sub_1007E0580(v74, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
          sub_1007E0580(v73, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
          sub_1007E0580(v53, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
          sub_1007E0580(v75, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
          uint64_t v62 = v72;
        }
        goto LABEL_35;
      }
    }
    else if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0 && v22 == 1)
    {
      uint64_t v23 = *(void *)(v0 + 936);
      goto LABEL_20;
    }
    id v64 = *(void **)(v0 + 704);
    uint64_t v65 = v64[2];
    if (v65)
    {
      BOOL v66 = v64[4] == v30 && v64[5] == v29;
      if (v66 || (uint64_t v67 = _stringCompareWithSmolCheck(_:_:expecting:)(), (v67 & 1) != 0))
      {
LABEL_32:
        char v70 = 1;
LABEL_46:
        *(unsigned char *)(v0 + 1389) = v70;
        uint64_t v68 = *(void *)(v0 + 1048);
        v92 = sub_1007D67F0;
LABEL_47:
        uint64_t v67 = (uint64_t)v92;
        uint64_t v69 = 0;
        return _swift_task_switch(v67, v68, v69);
      }
      if (v65 != 1)
      {
        uint64_t v93 = v64 + 7;
        uint64_t v94 = 1;
        while (1)
        {
          uint64_t v95 = v94 + 1;
          if (__OFADD__(v94, 1)) {
            break;
          }
          if (*(v93 - 1) == v30 && *v93 == v29) {
            goto LABEL_32;
          }
          uint64_t v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
          if (v67) {
            goto LABEL_32;
          }
          char v70 = 0;
          ++v94;
          v93 += 2;
          if (v95 == v65) {
            goto LABEL_46;
          }
        }
        __break(1u);
        return _swift_task_switch(v67, v68, v69);
      }
    }
    char v70 = 0;
    goto LABEL_46;
  }
  uint64_t v4 = *(void *)(v0 + 992);
  sub_10001DAB4(v1, (uint64_t *)&unk_10163B890);
  sub_1007E0518(v3, v4, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = *(void *)(v0 + 992);
    *(void *)id v100 = *(void *)(v0 + 1152);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v103 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 141559299;
    *(void *)(v0 + 424) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2081;
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 432) = sub_1008FA0F0(v9, v10, &v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v7, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v8 + 22) = 2080;
    uint64_t v11 = *(void *)(v0 + 704);
    swift_bridgeObjectRetain();
    uint64_t v12 = Array.description.getter();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 440) = sub_1008FA0F0(v12, v14, &v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 32) = 2048;
    *(void *)(v0 + 448) = *(void *)(v11 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 42) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v15 = Array.description.getter();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 456) = sub_1008FA0F0(v15, v17, &v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 52) = 2048;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 464) = *(void *)v100;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Inconsistent participant list for shareId: %{private,mask.hash}s,\nknownMembers: %s, count: %ld,\nmembers: %s, count: %ld.", (uint8_t *)v8, 0x3Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v32 = *(void *)(v0 + 992);
    swift_bridgeObjectRelease();
    sub_1007E0580(v32, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);

    swift_bridgeObjectRelease_n();
  }
  uint64_t v33 = *(void *)(v0 + 984);
  uint64_t v34 = *(void *)(v0 + 952);
  uint64_t v35 = *(void *)(v0 + 736);
  uint64_t v36 = *(void *)(v0 + 728);
  uint64_t v37 = *(void *)(v0 + 720);
  uint64_t v38 = type metadata accessor for TaskPriority();
  uint64_t v39 = *(void *)(v38 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v35, 1, 1, v38);
  sub_1007E0518(v37, v33, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  uint64_t v41 = sub_1007E02E4(&qword_10164E180, v40, (void (*)(uint64_t))type metadata accessor for ShareKeysDownloadUseCase);
  unint64_t v42 = (*(unsigned __int8 *)(v34 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v43 = (void *)swift_allocObject();
  v43[2] = v36;
  v43[3] = v41;
  v43[4] = v36;
  sub_1007E0480(v33, (uint64_t)v43 + v42, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  LODWORD(v35) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v35, 1, v38);
  swift_retain_n();
  uint64_t v44 = *(void *)(v0 + 736);
  if (v35 != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v44, v38);
    if (v43[2]) {
      goto LABEL_18;
    }
LABEL_23:
    uint64_t v45 = 0;
    uint64_t v47 = 0;
    goto LABEL_24;
  }
  sub_10001DAB4(*(void *)(v0 + 736), &qword_10164DBB0);
  if (!v43[2]) {
    goto LABEL_23;
  }
LABEL_18:
  swift_getObjectType();
  swift_unknownObjectRetain();
  uint64_t v45 = dispatch thunk of Actor.unownedExecutor.getter();
  uint64_t v47 = v46;
  swift_unknownObjectRelease();
LABEL_24:
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = &unk_10164E1B0;
  *(void *)(v63 + 24) = v43;
  if (v47 | v45)
  {
    *(void *)(v0 + 296) = 0;
    *(void *)(v0 + 304) = 0;
    *(void *)(v0 + 312) = v45;
    *(void *)(v0 + 320) = v47;
  }
  uint64_t v71 = *(void *)(v0 + 936);
  swift_task_create();
  swift_release();
  uint64_t v62 = v71;
LABEL_35:
  sub_1007E0580(v62, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  uint64_t v76 = *(void *)(v0 + 1184);
  uint64_t v77 = *(void *)(v0 + 1176);
  uint64_t v78 = *(void *)(v0 + 1168) + 1;
  if (v78 != *(void *)(v0 + 1152))
  {
    while (1)
    {
      *(void *)(v0 + 1184) = v76;
      *(void *)(v0 + 1176) = v77;
      *(void *)(v0 + 1168) = v78;
      uint64_t v84 = *(void *)(v0 + 936);
      uint64_t v85 = *(void *)(v0 + 856);
      sub_1007E0518(*(void *)(v0 + 712)+ ((*(unsigned __int8 *)(v0 + 1376) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1376))+ *(void *)(v0 + 1160) * v78, v84, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
      if ((*(unsigned char *)(v84 + *(int *)(v85 + 20)) & 1) == 0)
      {
        uint64_t v86 = *(void *)(v0 + 848);
        uint64_t v87 = *(void *)(v0 + 832);
        uint64_t v88 = *(void *)(v0 + 824);
        uint64_t v89 = *(void *)(v0 + 720) + *(int *)(*(void *)(v0 + 944) + 32);
        uint64_t v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16);
        *(void *)(v0 + 1192) = v90;
        *(void *)(v0 + 1200) = (v87 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v90(v86, v89, v88);
        sub_1007E02E4((unint64_t *)&qword_10163B8F0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v91 = dispatch thunk of static Equatable.== infix(_:_:)();
        (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v86, v88);
        if ((v91 & 1) == 0) {
          break;
        }
      }
      sub_1007E0580(*(void *)(v0 + 936), type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
      uint64_t v78 = *(void *)(v0 + 1168) + 1;
      if (v78 == *(void *)(v0 + 1152)) {
        goto LABEL_36;
      }
    }
    uint64_t v68 = *(void *)(v0 + 1048);
    v92 = sub_1007D56B4;
    goto LABEL_47;
  }
LABEL_36:
  swift_bridgeObjectRelease();
  *(void *)(v0 + 1328) = v76;
  *(void *)(v0 + 1320) = v77;
  uint64_t v79 = (void *)swift_task_alloc();
  *(void *)(v0 + 1336) = v79;
  *uint64_t v79 = v0;
  v79[1] = sub_1007D9310;
  uint64_t v80 = *(void *)(v0 + 1072);
  uint64_t v81 = *(void *)(v0 + 720);
  uint64_t v82 = *(void *)(v0 + 712);
  return sub_1007DC948(v77, v81, v82, v80);
}

uint64_t sub_1007D67F0()
{
  uint64_t v1 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 1224);
  int v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1192);
  uint64_t v3 = *(void *)(v0 + 1048);
  uint64_t v4 = *(void *)(v0 + 848);
  uint64_t v5 = *(void *)(v0 + 824);
  unint64_t v6 = (*(unsigned __int8 *)(v0 + 1380) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1380);
  uint64_t v7 = *(void *)(v0 + 720) + *(int *)(v0 + 1368);
  *(void *)(v0 + 1256) = *(void *)(v3 + 136);
  v2(v4, v7, v5);
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 1264) = v8;
  *(void *)(v8 + 16) = v3;
  v1(v8 + v6, v4, v5);
  swift_retain();
  return _swift_task_switch(sub_1007D68F4, 0, 0);
}

uint64_t sub_1007D68F4()
{
  uint64_t v1 = v0[158];
  uint64_t v2 = v0[157];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[159] = v3;
  v3[2] = v2;
  v3[3] = sub_1007E04EC;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[160] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007D6A00;
  uint64_t v5 = v0[97];
  uint64_t v6 = v0[96];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_100075048, v3, v6);
}

uint64_t sub_1007D6A00()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 728);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1007D6B50, v1, 0);
}

uint64_t sub_1007D6B50()
{
  uint64_t v122 = v0;
  uint64_t v1 = *(void *)(v0 + 776);
  uint64_t v2 = type metadata accessor for SharedBeaconRecord(0);
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  int v4 = *(unsigned __int8 *)(v0 + 1389);
  int v5 = *(unsigned __int8 *)(v0 + 1388);
  if (v3 == 1)
  {
    sub_10001DAB4(v1, (uint64_t *)&unk_101653D50);
    if (((v4 | v5) & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_6;
  }
  int v6 = *(unsigned __int8 *)(v1 + *(int *)(v2 + 64));
  sub_1007E0580(v1, type metadata accessor for SharedBeaconRecord);
  if (((v4 | v5) & 1) == 0)
  {
    if (v6 != 4)
    {
LABEL_13:
      uint64_t v29 = *(void *)(v0 + 936);
      uint64_t v30 = *(void *)(v0 + 928);
      uint64_t v31 = *(void *)(v0 + 920);
      sub_1007E0518(*(void *)(v0 + 720), *(void *)(v0 + 1024), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
      sub_1007E0518(v29, v30, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
      sub_1007E0518(v29, v31, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
      uint64_t v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.default.getter();
      BOOL v34 = os_log_type_enabled(v32, v33);
      uint64_t v35 = *(void *)(v0 + 1024);
      if (v34)
      {
        uint64_t v113 = *(void *)(v0 + 928);
        uint64_t v116 = *(void *)(v0 + 920);
        *(void *)os_log_type_t type = *(void *)(v0 + 856);
        uint64_t v36 = swift_slowAlloc();
        uint64_t v121 = swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 141559043;
        *(void *)(v0 + 528) = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v36 + 12) = 2081;
        sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 536) = sub_1008FA0F0(v37, v38, &v121);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1007E0580(v35, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
        *(_WORD *)(v36 + 22) = 2160;
        *(void *)(v0 + 544) = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v36 + 32) = 2081;
        uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 552) = sub_1008FA0F0(v39, v40, &v121);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1007E0580(v113, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
        *(_WORD *)(v36 + 42) = 2080;
        uint64_t v41 = (uint64_t *)(v116 + *(int *)(*(void *)type + 24));
        uint64_t v42 = *v41;
        unint64_t v43 = v41[1];
        swift_bridgeObjectRetain();
        *(void *)(v0 + 560) = sub_1008FA0F0(v42, v43, &v121);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1007E0580(v116, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "Participant for shareId: %{private,mask.hash}s,\nmemberId: %{private,mask.hash}s\nis revealed: %s.", (uint8_t *)v36, 0x34u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v94 = *(void *)(v0 + 928);
        uint64_t v95 = *(void *)(v0 + 920);
        sub_1007E0580(*(void *)(v0 + 1024), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
        sub_1007E0580(v94, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
        sub_1007E0580(v95, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
      }

      uint64_t v96 = (uint64_t *)(*(void *)(v0 + 936) + *(int *)(v0 + 1384));
      uint64_t v97 = *v96;
      uint64_t v98 = v96[1];
      *(void *)(v0 + 1288) = v98;
      swift_bridgeObjectRetain();
      uint64_t v99 = (void *)swift_task_alloc();
      *(void *)(v0 + 1296) = v99;
      void *v99 = v0;
      v99[1] = sub_1007D7C50;
      uint64_t v100 = *(void *)(v0 + 936);
      uint64_t v101 = *(void *)(v0 + 720);
      uint64_t v102 = v0 + 216;
      uint64_t v103 = v97;
      uint64_t v104 = v98;
      goto LABEL_37;
    }
    goto LABEL_10;
  }
  if (v6 == 4)
  {
LABEL_10:
    int v118 = 1;
    goto LABEL_11;
  }
LABEL_6:
  uint64_t v7 = (uint64_t *)(*(void *)(v0 + 936) + *(int *)(v0 + 1384));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  *(void *)(v0 + 1304) = v8;
  swift_bridgeObjectRetain();
  _s12searchpartyd20MessagingDestinationV6stringACSgSS_tcfC_0();
  if (v12)
  {
    char v13 = sub_100B96948(v10, v11, v12);
    swift_bridgeObjectRelease();
    if (v13)
    {
      swift_bridgeObjectRetain();
      uint64_t v105 = (void *)swift_task_alloc();
      *(void *)(v0 + 1312) = v105;
      *uint64_t v105 = v0;
      v105[1] = sub_1007D85A0;
      uint64_t v100 = *(void *)(v0 + 936);
      uint64_t v101 = *(void *)(v0 + 720);
      uint64_t v102 = v0 + 256;
      uint64_t v103 = v9;
      uint64_t v104 = v8;
LABEL_37:
      return sub_100B87E70(v102, v101, v100, v103, v104);
    }
  }
  int v118 = 0;
LABEL_11:
  uint64_t v14 = *(void *)(v0 + 1184);
  uint64_t v15 = *(void *)(v0 + 936);
  uint64_t v16 = *(void *)(v0 + 912);
  uint64_t v17 = *(void *)(v0 + 904);
  sub_1007E0518(*(void *)(v0 + 720), *(void *)(v0 + 1016), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_1007E0518(v15, v16, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  sub_1007E0518(v15, v17, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  uint64_t v120 = v14;
  if (os_log_type_enabled(v18, v19))
  {
    char v110 = *(unsigned char *)(v0 + 1389);
    uint64_t v20 = *(void *)(v0 + 1016);
    uint64_t v106 = *(void *)(v0 + 912);
    uint64_t v107 = *(void *)(v0 + 856);
    uint64_t v108 = *(void *)(v0 + 904);
    int v112 = *(unsigned __int8 *)(v0 + 1388);
    uint64_t v21 = swift_slowAlloc();
    uint64_t v121 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 141559811;
    *(void *)(v0 + 568) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 12) = 2081;
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 408) = sub_1008FA0F0(v22, v23, &v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v20, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v21 + 22) = 2160;
    *(void *)(v0 + 584) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 32) = 2081;
    uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 592) = sub_1008FA0F0(v24, v25, &v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v106, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    *(_WORD *)(v21 + 42) = 2080;
    uint64_t v26 = (uint64_t *)(v108 + *(int *)(v107 + 24));
    uint64_t v27 = *v26;
    unint64_t v28 = v26[1];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 600) = sub_1008FA0F0(v27, v28, &v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v108, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    *(_WORD *)(v21 + 52) = 1024;
    *(_DWORD *)(v0 + 1360) = (v110 & 1) == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 58) = 1024;
    *(_DWORD *)(v0 + 1356) = v112;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 64) = 1024;
    *(_DWORD *)(v0 + 1352) = v118;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Participant for shareId: %{private,mask.hash}s,\nmemberId: %{private,mask.hash}s\nis revealed silently: %s - isNewRevealedMember: %{BOOL}d,\n            isInitial: %{BOOL}d, isAutomaticShare: %{BOOL}d.", (uint8_t *)v21, 0x46u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v44 = *(void *)(v0 + 912);
    uint64_t v45 = *(void *)(v0 + 904);
    sub_1007E0580(*(void *)(v0 + 1016), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    sub_1007E0580(v44, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    sub_1007E0580(v45, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  }

  uint64_t v46 = *(void *)(v0 + 760);
  uint64_t v47 = (uint64_t *)(*(void *)(v0 + 936) + *(int *)(v0 + 1384));
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  uint64_t v50 = (void *)(v46 + *(int *)(*(void *)(v0 + 744) + 48));
  sub_1007E0518(*(void *)(v0 + 816), v46, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
  *uint64_t v50 = v49;
  v50[1] = v48;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v52 = *(void *)(v0 + 1176);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v52 = sub_100A6F1BC(0, *(void *)(v52 + 16) + 1, 1, *(void *)(v0 + 1176));
  }
  unint64_t v54 = *(void *)(v52 + 16);
  unint64_t v53 = *(void *)(v52 + 24);
  if (v54 >= v53 >> 1) {
    uint64_t v52 = sub_100A6F1BC(v53 > 1, v54 + 1, 1, v52);
  }
  uint64_t v55 = *(void *)(v0 + 1008);
  uint64_t v56 = *(void *)(v0 + 936);
  uint64_t v57 = *(void *)(v0 + 896);
  uint64_t v58 = *(void *)(v0 + 888);
  uint64_t v59 = *(void *)(v0 + 760);
  uint64_t v60 = *(void *)(v0 + 752);
  uint64_t v61 = *(void *)(v0 + 720);
  *(void *)(v52 + 16) = v54 + 1;
  sub_10001D608(v59, v52+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * v54, &qword_101657C30);
  sub_1007E0518(v61, v55, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_1007E0518(v56, v57, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  sub_1007E0518(v56, v58, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  uint64_t v62 = Logger.logObject.getter();
  os_log_type_t v63 = static os_log_type_t.default.getter();
  BOOL v64 = os_log_type_enabled(v62, v63);
  uint64_t v65 = *(void *)(v0 + 1008);
  if (v64)
  {
    uint64_t v119 = *(void *)(v0 + 936);
    uint64_t v109 = *(void *)(v0 + 896);
    uint64_t v114 = *(void *)(v0 + 888);
    uint64_t v111 = *(void *)(v0 + 856);
    uint64_t v117 = *(void *)(v0 + 816);
    uint64_t v66 = swift_slowAlloc();
    uint64_t v121 = swift_slowAlloc();
    *(_DWORD *)uint64_t v66 = 141559043;
    *(void *)(v0 + 488) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v66 + 12) = 2081;
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v67 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 496) = sub_1008FA0F0(v67, v68, &v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v65, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v66 + 22) = 2160;
    *(void *)(v0 + 504) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v66 + 32) = 2081;
    uint64_t v69 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 512) = sub_1008FA0F0(v69, v70, &v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v109, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    *(_WORD *)(v66 + 42) = 2080;
    uint64_t v71 = (uint64_t *)(v114 + *(int *)(v111 + 24));
    uint64_t v72 = *v71;
    unint64_t v73 = v71[1];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 520) = sub_1008FA0F0(v72, v73, &v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v114, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    _os_log_impl((void *)&_mh_execute_header, v62, v63, "Participant for shareId: %{private,mask.hash}s,\nmemberId: %{private,mask.hash}s\nneeds to update displayIdentifier: %s.", (uint8_t *)v66, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1007E0580(v117, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
    uint64_t v74 = v119;
  }
  else
  {
    uint64_t v75 = *(void *)(v0 + 936);
    uint64_t v76 = *(void *)(v0 + 896);
    uint64_t v77 = *(void *)(v0 + 888);
    uint64_t v78 = *(void *)(v0 + 816);

    sub_1007E0580(v77, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    sub_1007E0580(v76, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    sub_1007E0580(v65, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    sub_1007E0580(v78, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
    uint64_t v74 = v75;
  }
  sub_1007E0580(v74, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  uint64_t v79 = *(void *)(v0 + 1168) + 1;
  if (v79 == *(void *)(v0 + 1152))
  {
LABEL_24:
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1328) = v120;
    *(void *)(v0 + 1320) = v52;
    uint64_t v80 = (void *)swift_task_alloc();
    *(void *)(v0 + 1336) = v80;
    *uint64_t v80 = v0;
    v80[1] = sub_1007D9310;
    uint64_t v81 = *(void *)(v0 + 1072);
    uint64_t v82 = *(void *)(v0 + 720);
    uint64_t v83 = *(void *)(v0 + 712);
    return sub_1007DC948(v52, v82, v83, v81);
  }
  else
  {
    while (1)
    {
      *(void *)(v0 + 1184) = v120;
      *(void *)(v0 + 1176) = v52;
      *(void *)(v0 + 1168) = v79;
      uint64_t v85 = *(void *)(v0 + 936);
      uint64_t v86 = *(void *)(v0 + 856);
      sub_1007E0518(*(void *)(v0 + 712)+ ((*(unsigned __int8 *)(v0 + 1376) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1376))+ *(void *)(v0 + 1160) * v79, v85, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
      if ((*(unsigned char *)(v85 + *(int *)(v86 + 20)) & 1) == 0)
      {
        uint64_t v87 = *(void *)(v0 + 848);
        uint64_t v88 = *(void *)(v0 + 832);
        uint64_t v89 = *(void *)(v0 + 824);
        uint64_t v90 = *(void *)(v0 + 720) + *(int *)(*(void *)(v0 + 944) + 32);
        char v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 16);
        *(void *)(v0 + 1192) = v91;
        *(void *)(v0 + 1200) = (v88 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v91(v87, v90, v89);
        sub_1007E02E4((unint64_t *)&qword_10163B8F0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v92 = dispatch thunk of static Equatable.== infix(_:_:)();
        (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v87, v89);
        if ((v92 & 1) == 0) {
          break;
        }
      }
      sub_1007E0580(*(void *)(v0 + 936), type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
      uint64_t v79 = *(void *)(v0 + 1168) + 1;
      if (v79 == *(void *)(v0 + 1152)) {
        goto LABEL_24;
      }
    }
    uint64_t v93 = *(void *)(v0 + 1048);
    return _swift_task_switch(sub_1007D56B4, v93, 0);
  }
}

uint64_t sub_1007D7C50()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 728);
  if (v0)
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    int v4 = sub_1007D96C4;
  }
  else
  {
    swift_bridgeObjectRelease();
    int v4 = sub_1007D7DAC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1007D7DAC()
{
  uint64_t v60 = v0;
  sub_10001D074(v0 + 216, v0 + 176, (uint64_t *)&unk_101657C40);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v2 = *(void **)(v0 + 1184);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v2 = sub_100A6F1D0(0, v2[2] + 1, 1, *(void **)(v0 + 1184));
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100A6F1D0((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  sub_10001D608(v0 + 176, (uint64_t)&v2[5 * v4 + 4], (uint64_t *)&unk_101657C40);
  sub_10001DAB4(v0 + 216, (uint64_t *)&unk_101657C40);
  uint64_t v5 = *(void *)(v0 + 760);
  uint64_t v6 = (uint64_t *)(*(void *)(v0 + 936) + *(int *)(v0 + 1384));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  uint64_t v9 = (void *)(v5 + *(int *)(*(void *)(v0 + 744) + 48));
  sub_1007E0518(*(void *)(v0 + 816), v5, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
  void *v9 = v7;
  v9[1] = v8;
  swift_bridgeObjectRetain();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *(void *)(v0 + 1176);
  if ((v10 & 1) == 0) {
    uint64_t v11 = sub_100A6F1BC(0, *(void *)(v11 + 16) + 1, 1, *(void *)(v0 + 1176));
  }
  unint64_t v13 = *(void *)(v11 + 16);
  unint64_t v12 = *(void *)(v11 + 24);
  uint64_t v58 = v2;
  if (v13 >= v12 >> 1) {
    uint64_t v11 = sub_100A6F1BC(v12 > 1, v13 + 1, 1, v11);
  }
  uint64_t v14 = *(void *)(v0 + 1008);
  uint64_t v15 = *(void *)(v0 + 936);
  uint64_t v16 = *(void *)(v0 + 896);
  uint64_t v17 = *(void *)(v0 + 888);
  uint64_t v18 = *(void *)(v0 + 760);
  uint64_t v19 = *(void *)(v0 + 752);
  uint64_t v20 = *(void *)(v0 + 720);
  *(void *)(v11 + 16) = v13 + 1;
  sub_10001D608(v18, v11+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v13, &qword_101657C30);
  sub_1007E0518(v20, v14, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_1007E0518(v15, v16, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  sub_1007E0518(v15, v17, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v24 = *(void *)(v0 + 1008);
  if (v23)
  {
    uint64_t v53 = *(void *)(v0 + 896);
    uint64_t v54 = *(void *)(v0 + 856);
    uint64_t v55 = *(void *)(v0 + 888);
    uint64_t v56 = *(void *)(v0 + 816);
    uint64_t v57 = *(void *)(v0 + 936);
    uint64_t v25 = swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 141559043;
    *(void *)(v0 + 488) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 12) = 2081;
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 496) = sub_1008FA0F0(v26, v27, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v24, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v25 + 22) = 2160;
    *(void *)(v0 + 504) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 32) = 2081;
    uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 512) = sub_1008FA0F0(v28, v29, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v53, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    *(_WORD *)(v25 + 42) = 2080;
    uint64_t v30 = (uint64_t *)(v55 + *(int *)(v54 + 24));
    uint64_t v31 = *v30;
    unint64_t v32 = v30[1];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 520) = sub_1008FA0F0(v31, v32, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v55, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Participant for shareId: %{private,mask.hash}s,\nmemberId: %{private,mask.hash}s\nneeds to update displayIdentifier: %s.", (uint8_t *)v25, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1007E0580(v56, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
    uint64_t v33 = v57;
  }
  else
  {
    uint64_t v34 = *(void *)(v0 + 936);
    uint64_t v35 = *(void *)(v0 + 896);
    uint64_t v36 = *(void *)(v0 + 888);
    uint64_t v37 = *(void *)(v0 + 816);

    sub_1007E0580(v36, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    sub_1007E0580(v35, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    sub_1007E0580(v24, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    sub_1007E0580(v37, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
    uint64_t v33 = v34;
  }
  sub_1007E0580(v33, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  uint64_t v38 = *(void *)(v0 + 1168) + 1;
  if (v38 == *(void *)(v0 + 1152))
  {
LABEL_13:
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1328) = v58;
    *(void *)(v0 + 1320) = v11;
    uint64_t v39 = (void *)swift_task_alloc();
    *(void *)(v0 + 1336) = v39;
    void *v39 = v0;
    v39[1] = sub_1007D9310;
    uint64_t v40 = *(void *)(v0 + 1072);
    uint64_t v41 = *(void *)(v0 + 720);
    uint64_t v42 = *(void *)(v0 + 712);
    return sub_1007DC948(v11, v41, v42, v40);
  }
  else
  {
    while (1)
    {
      *(void *)(v0 + 1184) = v58;
      *(void *)(v0 + 1176) = v11;
      *(void *)(v0 + 1168) = v38;
      uint64_t v44 = *(void *)(v0 + 936);
      uint64_t v45 = *(void *)(v0 + 856);
      sub_1007E0518(*(void *)(v0 + 712)+ ((*(unsigned __int8 *)(v0 + 1376) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1376))+ *(void *)(v0 + 1160) * v38, v44, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
      if ((*(unsigned char *)(v44 + *(int *)(v45 + 20)) & 1) == 0)
      {
        uint64_t v46 = *(void *)(v0 + 848);
        uint64_t v47 = *(void *)(v0 + 832);
        uint64_t v48 = *(void *)(v0 + 824);
        uint64_t v49 = *(void *)(v0 + 720) + *(int *)(*(void *)(v0 + 944) + 32);
        uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16);
        *(void *)(v0 + 1192) = v50;
        *(void *)(v0 + 1200) = (v47 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v50(v46, v49, v48);
        sub_1007E02E4((unint64_t *)&qword_10163B8F0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v51 = dispatch thunk of static Equatable.== infix(_:_:)();
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
        if ((v51 & 1) == 0) {
          break;
        }
      }
      sub_1007E0580(*(void *)(v0 + 936), type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
      uint64_t v38 = *(void *)(v0 + 1168) + 1;
      if (v38 == *(void *)(v0 + 1152)) {
        goto LABEL_13;
      }
    }
    uint64_t v52 = *(void *)(v0 + 1048);
    return _swift_task_switch(sub_1007D56B4, v52, 0);
  }
}

uint64_t sub_1007D85A0()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 728);
  if (v0)
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_1007D9EC4;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_1007D86FC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1007D86FC()
{
  uint64_t v81 = v0;
  sub_10001D074(v0 + 256, v0 + 96, (uint64_t *)&unk_101657C40);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v2 = *(void **)(v0 + 1184);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v2 = sub_100A6F1D0(0, v2[2] + 1, 1, *(void **)(v0 + 1184));
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100A6F1D0((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  sub_10001D608(v0 + 96, (uint64_t)&v2[5 * v4 + 4], (uint64_t *)&unk_101657C40);
  sub_10001DAB4(v0 + 256, (uint64_t *)&unk_101657C40);
  uint64_t v5 = *(void *)(v0 + 936);
  uint64_t v6 = *(void *)(v0 + 912);
  uint64_t v7 = *(void *)(v0 + 904);
  sub_1007E0518(*(void *)(v0 + 720), *(void *)(v0 + 1016), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_1007E0518(v5, v6, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  sub_1007E0518(v5, v7, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  uint64_t v79 = v2;
  if (os_log_type_enabled(v8, v9))
  {
    char v73 = *(unsigned char *)(v0 + 1389);
    uint64_t v10 = *(void *)(v0 + 1016);
    uint64_t v69 = *(void *)(v0 + 912);
    os_log_t log = *(os_log_t *)(v0 + 856);
    uint64_t v71 = *(void *)(v0 + 904);
    int v76 = *(unsigned __int8 *)(v0 + 1388);
    uint64_t v11 = swift_slowAlloc();
    uint64_t v80 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 141559811;
    *(void *)(v0 + 568) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 2081;
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 408) = sub_1008FA0F0(v12, v13, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v10, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v11 + 22) = 2160;
    *(void *)(v0 + 584) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 32) = 2081;
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 592) = sub_1008FA0F0(v14, v15, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v69, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    *(_WORD *)(v11 + 42) = 2080;
    uint64_t v16 = (uint64_t *)(v71 + SLODWORD(log[3].isa));
    uint64_t v17 = *v16;
    unint64_t v18 = v16[1];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 600) = sub_1008FA0F0(v17, v18, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v71, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    *(_WORD *)(v11 + 52) = 1024;
    *(_DWORD *)(v0 + 1360) = (v73 & 1) == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 58) = 1024;
    *(_DWORD *)(v0 + 1356) = v76;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 64) = 1024;
    *(_DWORD *)(v0 + 1352) = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Participant for shareId: %{private,mask.hash}s,\nmemberId: %{private,mask.hash}s\nis revealed silently: %s - isNewRevealedMember: %{BOOL}d,\n            isInitial: %{BOOL}d, isAutomaticShare: %{BOOL}d.", (uint8_t *)v11, 0x46u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 912);
    uint64_t v20 = *(void *)(v0 + 904);
    sub_1007E0580(*(void *)(v0 + 1016), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    sub_1007E0580(v19, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    sub_1007E0580(v20, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  }

  uint64_t v21 = *(void *)(v0 + 760);
  os_log_type_t v22 = (uint64_t *)(*(void *)(v0 + 936) + *(int *)(v0 + 1384));
  uint64_t v23 = *v22;
  uint64_t v24 = v22[1];
  uint64_t v25 = (void *)(v21 + *(int *)(*(void *)(v0 + 744) + 48));
  sub_1007E0518(*(void *)(v0 + 816), v21, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
  *uint64_t v25 = v23;
  v25[1] = v24;
  swift_bridgeObjectRetain();
  char v26 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v27 = *(void *)(v0 + 1176);
  if ((v26 & 1) == 0) {
    uint64_t v27 = sub_100A6F1BC(0, *(void *)(v27 + 16) + 1, 1, *(void *)(v0 + 1176));
  }
  unint64_t v29 = *(void *)(v27 + 16);
  unint64_t v28 = *(void *)(v27 + 24);
  if (v29 >= v28 >> 1) {
    uint64_t v27 = sub_100A6F1BC(v28 > 1, v29 + 1, 1, v27);
  }
  uint64_t v30 = *(void *)(v0 + 1008);
  uint64_t v31 = *(void *)(v0 + 936);
  uint64_t v32 = *(void *)(v0 + 896);
  uint64_t v33 = *(void *)(v0 + 888);
  uint64_t v34 = *(void *)(v0 + 760);
  uint64_t v35 = *(void *)(v0 + 752);
  uint64_t v36 = *(void *)(v0 + 720);
  *(void *)(v27 + 16) = v29 + 1;
  sub_10001D608(v34, v27+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v29, &qword_101657C30);
  sub_1007E0518(v36, v30, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_1007E0518(v31, v32, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  sub_1007E0518(v31, v33, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  BOOL v39 = os_log_type_enabled(v37, v38);
  uint64_t v40 = *(void *)(v0 + 1008);
  if (v39)
  {
    uint64_t v78 = *(void *)(v0 + 936);
    uint64_t v72 = *(void *)(v0 + 896);
    uint64_t v74 = *(void *)(v0 + 856);
    uint64_t v75 = *(void *)(v0 + 888);
    uint64_t v77 = *(void *)(v0 + 816);
    uint64_t v41 = swift_slowAlloc();
    uint64_t v80 = swift_slowAlloc();
    *(_DWORD *)uint64_t v41 = 141559043;
    *(void *)(v0 + 488) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v41 + 12) = 2081;
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 496) = sub_1008FA0F0(v42, v43, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v40, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v41 + 22) = 2160;
    *(void *)(v0 + 504) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v41 + 32) = 2081;
    uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 512) = sub_1008FA0F0(v44, v45, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v72, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    *(_WORD *)(v41 + 42) = 2080;
    uint64_t v46 = (uint64_t *)(v75 + *(int *)(v74 + 24));
    uint64_t v47 = *v46;
    unint64_t v48 = v46[1];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 520) = sub_1008FA0F0(v47, v48, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v75, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Participant for shareId: %{private,mask.hash}s,\nmemberId: %{private,mask.hash}s\nneeds to update displayIdentifier: %s.", (uint8_t *)v41, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1007E0580(v77, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
    uint64_t v49 = v78;
  }
  else
  {
    uint64_t v50 = *(void *)(v0 + 936);
    uint64_t v51 = *(void *)(v0 + 896);
    uint64_t v52 = *(void *)(v0 + 888);
    uint64_t v53 = *(void *)(v0 + 816);

    sub_1007E0580(v52, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    sub_1007E0580(v51, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    sub_1007E0580(v40, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    sub_1007E0580(v53, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
    uint64_t v49 = v50;
  }
  sub_1007E0580(v49, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  uint64_t v54 = *(void *)(v0 + 1168) + 1;
  if (v54 == *(void *)(v0 + 1152))
  {
LABEL_16:
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1328) = v79;
    *(void *)(v0 + 1320) = v27;
    uint64_t v55 = (void *)swift_task_alloc();
    *(void *)(v0 + 1336) = v55;
    *uint64_t v55 = v0;
    v55[1] = sub_1007D9310;
    uint64_t v56 = *(void *)(v0 + 1072);
    uint64_t v57 = *(void *)(v0 + 720);
    uint64_t v58 = *(void *)(v0 + 712);
    return sub_1007DC948(v27, v57, v58, v56);
  }
  else
  {
    while (1)
    {
      *(void *)(v0 + 1184) = v79;
      *(void *)(v0 + 1176) = v27;
      *(void *)(v0 + 1168) = v54;
      uint64_t v60 = *(void *)(v0 + 936);
      uint64_t v61 = *(void *)(v0 + 856);
      sub_1007E0518(*(void *)(v0 + 712)+ ((*(unsigned __int8 *)(v0 + 1376) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1376))+ *(void *)(v0 + 1160) * v54, v60, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
      if ((*(unsigned char *)(v60 + *(int *)(v61 + 20)) & 1) == 0)
      {
        uint64_t v62 = *(void *)(v0 + 848);
        uint64_t v63 = *(void *)(v0 + 832);
        uint64_t v64 = *(void *)(v0 + 824);
        uint64_t v65 = *(void *)(v0 + 720) + *(int *)(*(void *)(v0 + 944) + 32);
        uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16);
        *(void *)(v0 + 1192) = v66;
        *(void *)(v0 + 1200) = (v63 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v66(v62, v65, v64);
        sub_1007E02E4((unint64_t *)&qword_10163B8F0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v67 = dispatch thunk of static Equatable.== infix(_:_:)();
        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
        if ((v67 & 1) == 0) {
          break;
        }
      }
      sub_1007E0580(*(void *)(v0 + 936), type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
      uint64_t v54 = *(void *)(v0 + 1168) + 1;
      if (v54 == *(void *)(v0 + 1152)) {
        goto LABEL_16;
      }
    }
    uint64_t v68 = *(void *)(v0 + 1048);
    return _swift_task_switch(sub_1007D56B4, v68, 0);
  }
}

uint64_t sub_1007D9310()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1344) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 728);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_1007DAAE4;
    uint64_t v5 = v3;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = *(void *)(v2 + 1144);
    unint64_t v4 = sub_1007D946C;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_1007D946C()
{
  uint64_t v1 = *(void *)(v0 + 728);
  sub_100B89274(*(void *)(v0 + 1328));
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1007D94F0, v1, 0);
}

uint64_t sub_1007D94F0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1007D96C4()
{
  uint64_t v61 = v0;
  *(_OWORD *)(v0 + 216) = 0u;
  *(void *)(v0 + 248) = 0;
  *(_OWORD *)(v0 + 232) = 0u;
  sub_10001D074(v0 + 216, v0 + 176, (uint64_t *)&unk_101657C40);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v2 = *(void **)(v0 + 1184);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v2 = sub_100A6F1D0(0, v2[2] + 1, 1, *(void **)(v0 + 1184));
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100A6F1D0((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  sub_10001D608(v0 + 176, (uint64_t)&v2[5 * v4 + 4], (uint64_t *)&unk_101657C40);
  sub_10001DAB4(v0 + 216, (uint64_t *)&unk_101657C40);
  uint64_t v5 = *(void *)(v0 + 760);
  uint64_t v6 = (uint64_t *)(*(void *)(v0 + 936) + *(int *)(v0 + 1384));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  os_log_type_t v9 = (void *)(v5 + *(int *)(*(void *)(v0 + 744) + 48));
  sub_1007E0518(*(void *)(v0 + 816), v5, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
  void *v9 = v7;
  v9[1] = v8;
  swift_bridgeObjectRetain();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v11 = *(void *)(v0 + 1176);
  if ((v10 & 1) == 0) {
    unint64_t v11 = sub_100A6F1BC(0, *(void *)(v11 + 16) + 1, 1, v11);
  }
  unint64_t v13 = *(void *)(v11 + 16);
  unint64_t v12 = *(void *)(v11 + 24);
  uint64_t v58 = v2;
  if (v13 >= v12 >> 1) {
    uint64_t v59 = sub_100A6F1BC(v12 > 1, v13 + 1, 1, v11);
  }
  else {
    uint64_t v59 = v11;
  }
  uint64_t v14 = *(void *)(v0 + 1008);
  uint64_t v15 = *(void *)(v0 + 936);
  uint64_t v16 = *(void *)(v0 + 896);
  uint64_t v17 = *(void *)(v0 + 888);
  uint64_t v18 = *(void *)(v0 + 760);
  uint64_t v19 = *(void *)(v0 + 752);
  uint64_t v20 = *(void *)(v0 + 720);
  *(void *)(v59 + 16) = v13 + 1;
  sub_10001D608(v18, v59+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v13, &qword_101657C30);
  sub_1007E0518(v20, v14, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_1007E0518(v15, v16, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  sub_1007E0518(v15, v17, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v24 = *(void *)(v0 + 1008);
  if (v23)
  {
    uint64_t v53 = *(void *)(v0 + 896);
    uint64_t v54 = *(void *)(v0 + 856);
    uint64_t v55 = *(void *)(v0 + 888);
    uint64_t v56 = *(void *)(v0 + 816);
    uint64_t v57 = *(void *)(v0 + 936);
    uint64_t v25 = swift_slowAlloc();
    uint64_t v60 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 141559043;
    *(void *)(v0 + 488) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 12) = 2081;
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 496) = sub_1008FA0F0(v26, v27, &v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v24, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v25 + 22) = 2160;
    *(void *)(v0 + 504) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 32) = 2081;
    uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 512) = sub_1008FA0F0(v28, v29, &v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v53, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    *(_WORD *)(v25 + 42) = 2080;
    uint64_t v30 = (uint64_t *)(v55 + *(int *)(v54 + 24));
    uint64_t v31 = *v30;
    unint64_t v32 = v30[1];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 520) = sub_1008FA0F0(v31, v32, &v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v55, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Participant for shareId: %{private,mask.hash}s,\nmemberId: %{private,mask.hash}s\nneeds to update displayIdentifier: %s.", (uint8_t *)v25, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1007E0580(v56, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
    uint64_t v33 = v57;
  }
  else
  {
    uint64_t v34 = *(void *)(v0 + 936);
    uint64_t v35 = *(void *)(v0 + 896);
    uint64_t v36 = *(void *)(v0 + 888);
    uint64_t v37 = *(void *)(v0 + 816);

    sub_1007E0580(v36, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    sub_1007E0580(v35, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    sub_1007E0580(v24, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    sub_1007E0580(v37, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
    uint64_t v33 = v34;
  }
  sub_1007E0580(v33, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  uint64_t v38 = *(void *)(v0 + 1168) + 1;
  if (v38 == *(void *)(v0 + 1152))
  {
LABEL_13:
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1328) = v58;
    *(void *)(v0 + 1320) = v59;
    BOOL v39 = (void *)swift_task_alloc();
    *(void *)(v0 + 1336) = v39;
    void *v39 = v0;
    v39[1] = sub_1007D9310;
    uint64_t v40 = *(void *)(v0 + 1072);
    uint64_t v41 = *(void *)(v0 + 720);
    uint64_t v42 = *(void *)(v0 + 712);
    return sub_1007DC948(v59, v41, v42, v40);
  }
  else
  {
    while (1)
    {
      *(void *)(v0 + 1184) = v58;
      *(void *)(v0 + 1176) = v59;
      *(void *)(v0 + 1168) = v38;
      uint64_t v44 = *(void *)(v0 + 936);
      uint64_t v45 = *(void *)(v0 + 856);
      sub_1007E0518(*(void *)(v0 + 712)+ ((*(unsigned __int8 *)(v0 + 1376) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1376))+ *(void *)(v0 + 1160) * v38, v44, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
      if ((*(unsigned char *)(v44 + *(int *)(v45 + 20)) & 1) == 0)
      {
        uint64_t v46 = *(void *)(v0 + 848);
        uint64_t v47 = *(void *)(v0 + 832);
        uint64_t v48 = *(void *)(v0 + 824);
        uint64_t v49 = *(void *)(v0 + 720) + *(int *)(*(void *)(v0 + 944) + 32);
        uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16);
        *(void *)(v0 + 1192) = v50;
        *(void *)(v0 + 1200) = (v47 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v50(v46, v49, v48);
        sub_1007E02E4((unint64_t *)&qword_10163B8F0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v51 = dispatch thunk of static Equatable.== infix(_:_:)();
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
        if ((v51 & 1) == 0) {
          break;
        }
      }
      sub_1007E0580(*(void *)(v0 + 936), type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
      uint64_t v38 = *(void *)(v0 + 1168) + 1;
      if (v38 == *(void *)(v0 + 1152)) {
        goto LABEL_13;
      }
    }
    uint64_t v52 = *(void *)(v0 + 1048);
    return _swift_task_switch(sub_1007D56B4, v52, 0);
  }
}

uint64_t sub_1007D9EC4()
{
  uint64_t v81 = v0;
  *(void *)(v0 + 288) = 0;
  *(_OWORD *)(v0 + 256) = 0u;
  *(_OWORD *)(v0 + 272) = 0u;
  sub_10001D074(v0 + 256, v0 + 96, (uint64_t *)&unk_101657C40);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v2 = *(void **)(v0 + 1184);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v2 = sub_100A6F1D0(0, v2[2] + 1, 1, *(void **)(v0 + 1184));
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100A6F1D0((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  sub_10001D608(v0 + 96, (uint64_t)&v2[5 * v4 + 4], (uint64_t *)&unk_101657C40);
  sub_10001DAB4(v0 + 256, (uint64_t *)&unk_101657C40);
  uint64_t v5 = *(void *)(v0 + 936);
  uint64_t v6 = *(void *)(v0 + 912);
  uint64_t v7 = *(void *)(v0 + 904);
  sub_1007E0518(*(void *)(v0 + 720), *(void *)(v0 + 1016), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_1007E0518(v5, v6, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  sub_1007E0518(v5, v7, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  uint64_t v79 = v2;
  if (os_log_type_enabled(v8, v9))
  {
    char v73 = *(unsigned char *)(v0 + 1389);
    uint64_t v10 = *(void *)(v0 + 1016);
    uint64_t v69 = *(void *)(v0 + 912);
    os_log_t log = *(os_log_t *)(v0 + 856);
    uint64_t v71 = *(void *)(v0 + 904);
    int v76 = *(unsigned __int8 *)(v0 + 1388);
    uint64_t v11 = swift_slowAlloc();
    uint64_t v80 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 141559811;
    *(void *)(v0 + 568) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 2081;
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 408) = sub_1008FA0F0(v12, v13, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v10, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v11 + 22) = 2160;
    *(void *)(v0 + 584) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 32) = 2081;
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 592) = sub_1008FA0F0(v14, v15, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v69, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    *(_WORD *)(v11 + 42) = 2080;
    uint64_t v16 = (uint64_t *)(v71 + SLODWORD(log[3].isa));
    uint64_t v17 = *v16;
    unint64_t v18 = v16[1];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 600) = sub_1008FA0F0(v17, v18, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v71, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    *(_WORD *)(v11 + 52) = 1024;
    *(_DWORD *)(v0 + 1360) = (v73 & 1) == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 58) = 1024;
    *(_DWORD *)(v0 + 1356) = v76;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 64) = 1024;
    *(_DWORD *)(v0 + 1352) = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Participant for shareId: %{private,mask.hash}s,\nmemberId: %{private,mask.hash}s\nis revealed silently: %s - isNewRevealedMember: %{BOOL}d,\n            isInitial: %{BOOL}d, isAutomaticShare: %{BOOL}d.", (uint8_t *)v11, 0x46u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 912);
    uint64_t v20 = *(void *)(v0 + 904);
    sub_1007E0580(*(void *)(v0 + 1016), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    sub_1007E0580(v19, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    sub_1007E0580(v20, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  }

  uint64_t v21 = *(void *)(v0 + 760);
  os_log_type_t v22 = (uint64_t *)(*(void *)(v0 + 936) + *(int *)(v0 + 1384));
  uint64_t v23 = *v22;
  uint64_t v24 = v22[1];
  uint64_t v25 = (void *)(v21 + *(int *)(*(void *)(v0 + 744) + 48));
  sub_1007E0518(*(void *)(v0 + 816), v21, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
  *uint64_t v25 = v23;
  v25[1] = v24;
  swift_bridgeObjectRetain();
  char v26 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v27 = *(void *)(v0 + 1176);
  if ((v26 & 1) == 0) {
    uint64_t v27 = sub_100A6F1BC(0, *(void *)(v27 + 16) + 1, 1, *(void *)(v0 + 1176));
  }
  unint64_t v29 = *(void *)(v27 + 16);
  unint64_t v28 = *(void *)(v27 + 24);
  if (v29 >= v28 >> 1) {
    uint64_t v27 = sub_100A6F1BC(v28 > 1, v29 + 1, 1, v27);
  }
  uint64_t v30 = *(void *)(v0 + 1008);
  uint64_t v31 = *(void *)(v0 + 936);
  uint64_t v32 = *(void *)(v0 + 896);
  uint64_t v33 = *(void *)(v0 + 888);
  uint64_t v34 = *(void *)(v0 + 760);
  uint64_t v35 = *(void *)(v0 + 752);
  uint64_t v36 = *(void *)(v0 + 720);
  *(void *)(v27 + 16) = v29 + 1;
  sub_10001D608(v34, v27+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v29, &qword_101657C30);
  sub_1007E0518(v36, v30, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_1007E0518(v31, v32, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  sub_1007E0518(v31, v33, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  BOOL v39 = os_log_type_enabled(v37, v38);
  uint64_t v40 = *(void *)(v0 + 1008);
  if (v39)
  {
    uint64_t v78 = *(void *)(v0 + 936);
    uint64_t v72 = *(void *)(v0 + 896);
    uint64_t v74 = *(void *)(v0 + 856);
    uint64_t v75 = *(void *)(v0 + 888);
    uint64_t v77 = *(void *)(v0 + 816);
    uint64_t v41 = swift_slowAlloc();
    uint64_t v80 = swift_slowAlloc();
    *(_DWORD *)uint64_t v41 = 141559043;
    *(void *)(v0 + 488) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v41 + 12) = 2081;
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 496) = sub_1008FA0F0(v42, v43, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v40, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v41 + 22) = 2160;
    *(void *)(v0 + 504) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v41 + 32) = 2081;
    uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 512) = sub_1008FA0F0(v44, v45, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v72, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    *(_WORD *)(v41 + 42) = 2080;
    uint64_t v46 = (uint64_t *)(v75 + *(int *)(v74 + 24));
    uint64_t v47 = *v46;
    unint64_t v48 = v46[1];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 520) = sub_1008FA0F0(v47, v48, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v75, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Participant for shareId: %{private,mask.hash}s,\nmemberId: %{private,mask.hash}s\nneeds to update displayIdentifier: %s.", (uint8_t *)v41, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1007E0580(v77, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
    uint64_t v49 = v78;
  }
  else
  {
    uint64_t v50 = *(void *)(v0 + 936);
    uint64_t v51 = *(void *)(v0 + 896);
    uint64_t v52 = *(void *)(v0 + 888);
    uint64_t v53 = *(void *)(v0 + 816);

    sub_1007E0580(v52, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    sub_1007E0580(v51, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
    sub_1007E0580(v40, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    sub_1007E0580(v53, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
    uint64_t v49 = v50;
  }
  sub_1007E0580(v49, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
  uint64_t v54 = *(void *)(v0 + 1168) + 1;
  if (v54 == *(void *)(v0 + 1152))
  {
LABEL_16:
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1328) = v79;
    *(void *)(v0 + 1320) = v27;
    uint64_t v55 = (void *)swift_task_alloc();
    *(void *)(v0 + 1336) = v55;
    *uint64_t v55 = v0;
    v55[1] = sub_1007D9310;
    uint64_t v56 = *(void *)(v0 + 1072);
    uint64_t v57 = *(void *)(v0 + 720);
    uint64_t v58 = *(void *)(v0 + 712);
    return sub_1007DC948(v27, v57, v58, v56);
  }
  else
  {
    while (1)
    {
      *(void *)(v0 + 1184) = v79;
      *(void *)(v0 + 1176) = v27;
      *(void *)(v0 + 1168) = v54;
      uint64_t v60 = *(void *)(v0 + 936);
      uint64_t v61 = *(void *)(v0 + 856);
      sub_1007E0518(*(void *)(v0 + 712)+ ((*(unsigned __int8 *)(v0 + 1376) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1376))+ *(void *)(v0 + 1160) * v54, v60, type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
      if ((*(unsigned char *)(v60 + *(int *)(v61 + 20)) & 1) == 0)
      {
        uint64_t v62 = *(void *)(v0 + 848);
        uint64_t v63 = *(void *)(v0 + 832);
        uint64_t v64 = *(void *)(v0 + 824);
        uint64_t v65 = *(void *)(v0 + 720) + *(int *)(*(void *)(v0 + 944) + 32);
        uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16);
        *(void *)(v0 + 1192) = v66;
        *(void *)(v0 + 1200) = (v63 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v66(v62, v65, v64);
        sub_1007E02E4((unint64_t *)&qword_10163B8F0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v67 = dispatch thunk of static Equatable.== infix(_:_:)();
        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
        if ((v67 & 1) == 0) {
          break;
        }
      }
      sub_1007E0580(*(void *)(v0 + 936), type metadata accessor for SharingCircleKeyManager.SharingCircleContent.Member);
      uint64_t v54 = *(void *)(v0 + 1168) + 1;
      if (v54 == *(void *)(v0 + 1152)) {
        goto LABEL_16;
      }
    }
    uint64_t v68 = *(void *)(v0 + 1048);
    return _swift_task_switch(sub_1007D56B4, v68, 0);
  }
}

uint64_t sub_1007DAAE4()
{
  uint64_t v21 = v0;
  uint64_t v1 = *(void *)(v0 + 968);
  uint64_t v2 = *(void *)(v0 + 720);
  uint64_t v3 = *(void *)(*(void *)(v2 + *(int *)(*(void *)(v0 + 944) + 36)) + 16);
  sub_1007E0518(v2, *(void *)(v0 + 976), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_1007E0518(v2, v1, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void *)(v0 + 976);
    uint64_t v17 = *(void *)(v0 + 968);
    BOOL v18 = *(void *)(v0 + 1152) == v3 + 1;
    uint64_t v7 = swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 141559299;
    *(void *)(v0 + 632) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2081;
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v8 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 480) = sub_1008FA0F0(v8, v9, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v6, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v7 + 22) = 2160;
    *(void *)(v0 + 472) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 32) = 2081;
    uint64_t v10 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 400) = sub_1008FA0F0(v10, v11, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v17, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v7 + 42) = 1024;
    *(_DWORD *)(v0 + 1364) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 48) = 2112;
    swift_errorRetain();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 416) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v19 = v12;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to delete previous circle for share-id: %{private,mask.hash}s,\nbeaconId: %{private,mask.hash}s,\nallMembersAccepted: %{BOOL}d. %@.", (uint8_t *)v7, 0x3Au);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

    swift_errorRelease();
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 976);
    uint64_t v14 = *(void *)(v0 + 968);
    swift_release();
    swift_errorRelease();
    sub_1007E0580(v13, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    sub_1007E0580(v14, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_1007DB09C(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  uint64_t v3 = type metadata accessor for MemberSharingCircle();
  v2[14] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[15] = v4;
  v2[16] = *(void *)(v4 + 64);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  sub_10000588C(&qword_10164DBB0);
  v2[19] = swift_task_alloc();
  return _swift_task_switch(sub_1007DB1A4, v1, 0);
}

uint64_t sub_1007DB1A4()
{
  sub_10001CD44((void *)(v0[13] + 112), *(void *)(v0[13] + 136));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[20] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1007DB24C;
  uint64_t v2 = v0[12];
  return sub_100C2A2FC(v2);
}

uint64_t sub_1007DB24C(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  os_log_type_t v5 = (void *)*v2;
  v4[21] = a1;
  v4[22] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = v4[13];
    return _swift_task_switch(sub_1007DB4FC, v6, 0);
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    v4[23] = v7;
    *uint64_t v7 = v5;
    v7[1] = sub_1007DB3D4;
    uint64_t v8 = v4[12];
    return sub_1007D3AB0(a1, v8, 0);
  }
}

uint64_t sub_1007DB3D4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v4 = sub_1007DBC14;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 104);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1007DBA1C;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1007DB4FC()
{
  uint64_t v28 = v0;
  uint64_t v1 = *(void *)(v0 + 176);
  if (qword_101636888 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = type metadata accessor for Logger();
  sub_100010324(v5, (uint64_t)qword_10170D788);
  sub_1007E0518(v3, v4, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void *)(v0 + 136);
  if (v8)
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 141558531;
    *(void *)(v0 + 56) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 12) = 2081;
    type metadata accessor for UUID();
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 64) = sub_1008FA0F0(v11, v12, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v9, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v10 + 22) = 2082;
    swift_getErrorValue();
    uint64_t v13 = Error.localizedDescription.getter();
    *(void *)(v0 + 88) = sub_1008FA0F0(v13, v14, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to restore keys for circle: %{private,mask.hash}s,\nerror: %{public}s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = (void *)(v0 + 80);
    swift_slowDealloc();
  }
  else
  {
    sub_1007E0580(*(void *)(v0 + 136), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    swift_errorRelease();
    swift_errorRelease();
  }

  *uint64_t v2 = v1;
  swift_errorRetain();
  swift_errorRetain();
  sub_10000588C(&qword_101638D40);
  if (swift_dynamicCast() && *(unsigned char *)(v0 + 48) == 1 && *(void *)(v0 + 40) > 5uLL)
  {
    uint64_t v16 = *(void *)(v0 + 144);
    uint64_t v15 = *(void *)(v0 + 152);
    uint64_t v17 = *(void *)(v0 + 120);
    uint64_t v19 = *(void *)(v0 + 96);
    uint64_t v18 = *(void *)(v0 + 104);
    uint64_t v20 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v15, 1, 1, v20);
    sub_1007E0518(v19, v16, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    uint64_t v22 = sub_1007E02E4(&qword_10164E180, v21, (void (*)(uint64_t))type metadata accessor for ShareKeysDownloadUseCase);
    unint64_t v23 = (*(unsigned __int8 *)(v17 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = v18;
    v24[3] = v22;
    v24[4] = v18;
    sub_1007E0480(v16, (uint64_t)v24 + v23, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    swift_retain_n();
    sub_1008F5E44(v15, (uint64_t)&unk_10164E188, (uint64_t)v24);
    swift_errorRelease();
    swift_errorRelease();
    swift_release();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_1007DBA1C()
{
  sub_10001CD44((void *)(v0[13] + 160), *(void *)(v0[13] + 184));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[25] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1007DBAC4;
  uint64_t v2 = v0[12];
  return sub_1010BEF20(v2);
}

uint64_t sub_1007DBAC4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1007DBC14()
{
  uint64_t v28 = v0;
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 192);
  if (qword_101636888 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = type metadata accessor for Logger();
  sub_100010324(v5, (uint64_t)qword_10170D788);
  sub_1007E0518(v3, v4, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void *)(v0 + 136);
  if (v8)
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 141558531;
    *(void *)(v0 + 56) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 12) = 2081;
    type metadata accessor for UUID();
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 64) = sub_1008FA0F0(v11, v12, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v9, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v10 + 22) = 2082;
    swift_getErrorValue();
    uint64_t v13 = Error.localizedDescription.getter();
    *(void *)(v0 + 88) = sub_1008FA0F0(v13, v14, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to restore keys for circle: %{private,mask.hash}s,\nerror: %{public}s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = (void *)(v0 + 80);
    swift_slowDealloc();
  }
  else
  {
    sub_1007E0580(*(void *)(v0 + 136), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    swift_errorRelease();
    swift_errorRelease();
  }

  *uint64_t v2 = v1;
  swift_errorRetain();
  swift_errorRetain();
  sub_10000588C(&qword_101638D40);
  if (swift_dynamicCast() && *(unsigned char *)(v0 + 48) == 1 && *(void *)(v0 + 40) > 5uLL)
  {
    uint64_t v16 = *(void *)(v0 + 144);
    uint64_t v15 = *(void *)(v0 + 152);
    uint64_t v17 = *(void *)(v0 + 120);
    uint64_t v19 = *(void *)(v0 + 96);
    uint64_t v18 = *(void *)(v0 + 104);
    uint64_t v20 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v15, 1, 1, v20);
    sub_1007E0518(v19, v16, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    uint64_t v22 = sub_1007E02E4(&qword_10164E180, v21, (void (*)(uint64_t))type metadata accessor for ShareKeysDownloadUseCase);
    unint64_t v23 = (*(unsigned __int8 *)(v17 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = v18;
    v24[3] = v22;
    v24[4] = v18;
    sub_1007E0480(v16, (uint64_t)v24 + v23, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    swift_retain_n();
    sub_1008F5E44(v15, (uint64_t)&unk_10164E188, (uint64_t)v24);
    swift_errorRelease();
    swift_errorRelease();
    swift_release();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_1007DC13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_1007DC15C, a4, 0);
}

uint64_t sub_1007DC15C()
{
  sub_10001CD44((void *)(v0[2] + 160), *(void *)(v0[2] + 184));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1003D2A00;
  uint64_t v2 = v0[3];
  return sub_1010BCDFC(v2);
}

uint64_t type metadata accessor for ShareKeysDownloadUseCase()
{
  return self;
}

BOOL sub_1007DC228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  BOOL v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v15 - v9;
  uint64_t v11 = type metadata accessor for MemberSharingCircle();
  unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, a1 + *(int *)(v11 + 28), v4);
  v12(v8, a2 + *(int *)(v11 + 28), v4);
  sub_1007E02E4((unint64_t *)&qword_10163B8F0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
  LOBYTE(a2) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  v13(v10, v4);
  return (a2 & 1) == 0;
}

uint64_t sub_1007DC3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[6] = v5;
  v3[7] = *(void *)(v5 + 64);
  v3[8] = swift_task_alloc();
  v3[9] = sub_10000588C((uint64_t *)&unk_10163B890);
  v3[10] = swift_task_alloc();
  return _swift_task_switch(sub_1007DC4E0, 0, 0);
}

uint64_t sub_1007DC4E0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) + 152);
  *(void *)(v0 + 88) = v1;
  return _swift_task_switch(sub_1007DC504, v1, 0);
}

uint64_t sub_1007DC504()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[3];
  v0[12] = *(void *)(v1 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  v0[13] = v7;
  *(void *)(v7 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v7 + v6, v2, v3);
  swift_retain();
  return _swift_task_switch(sub_1007DC5F8, 0, 0);
}

uint64_t sub_1007DC5F8()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[14] = v3;
  v3[2] = v2;
  v3[3] = sub_1007E0330;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[15] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007DC6FC;
  uint64_t v6 = v0[9];
  uint64_t v5 = v0[10];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1007E0D10, v3, v6);
}

uint64_t sub_1007DC6FC()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1007DC830, 0, 0);
}

uint64_t sub_1007DC830()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = type metadata accessor for MemberPeerTrust();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    sub_10001DAB4(v1, (uint64_t *)&unk_10163B890);
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = (uint64_t *)(v1 + *(int *)(v2 + 32));
    uint64_t v3 = *v5;
    uint64_t v4 = v5[1];
    swift_bridgeObjectRetain();
    sub_1007E0580(v1, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
  }
  uint64_t v6 = (void *)v0[2];
  *uint64_t v6 = v3;
  v6[1] = v4;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1007DC948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[19] = a4;
  v5[20] = v4;
  v5[17] = a2;
  v5[18] = a3;
  v5[16] = a1;
  uint64_t v6 = sub_10000588C(&qword_101657C30);
  v5[21] = v6;
  v5[22] = *(void *)(v6 - 8);
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  uint64_t v7 = sub_10000588C(&qword_10163AAD0);
  v5[26] = v7;
  v5[27] = *(void *)(v7 - 8);
  v5[28] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  v5[29] = v8;
  v5[30] = *(void *)(v8 - 8);
  v5[31] = swift_task_alloc();
  sub_10000588C(&qword_101639E88);
  v5[32] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for UUID();
  v5[33] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[34] = v10;
  v5[35] = *(void *)(v10 + 64);
  v5[36] = swift_task_alloc();
  v5[37] = sub_10000588C((uint64_t *)&unk_10163B7C0);
  v5[38] = swift_task_alloc();
  uint64_t v11 = sub_10000588C(&qword_10163BA20);
  v5[39] = v11;
  v5[40] = *(void *)(v11 - 8);
  v5[41] = swift_task_alloc();
  v5[42] = swift_task_alloc();
  v5[43] = swift_task_alloc();
  v5[44] = swift_task_alloc();
  v5[45] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for MemberSharingCircle();
  v5[46] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v5[47] = v13;
  v5[48] = *(void *)(v13 + 64);
  v5[49] = swift_task_alloc();
  v5[50] = swift_task_alloc();
  v5[51] = swift_task_alloc();
  v5[52] = swift_task_alloc();
  v5[53] = swift_task_alloc();
  v5[54] = swift_task_alloc();
  return _swift_task_switch(sub_1007DCCEC, v4, 0);
}

uint64_t sub_1007DCCEC()
{
  uint64_t v42 = v0;
  *(void *)(v0 + 80) = _swiftEmptyArrayStorage;
  uint64_t v1 = (uint64_t *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 136);
  if (*(void *)(*(void *)(v0 + 144) + 16) != *(void *)(*(void *)(v2 + *(int *)(*(void *)(v0 + 368) + 36))
                                                              + 16)
                                                  + 1)
    goto LABEL_9;
  if (qword_101636888 != -1)
  {
    swift_once();
    uint64_t v2 = *(void *)(v0 + 136);
  }
  uint64_t v4 = *(void *)(v0 + 424);
  uint64_t v3 = *(void *)(v0 + 432);
  sub_100010324(*(void *)(v0 + 232), (uint64_t)qword_10170D788);
  sub_1007E0518(v2, v3, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_1007E0518(v2, v4, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 424);
  uint64_t v9 = *(void *)(v0 + 432);
  if (v7)
  {
    uint64_t v10 = swift_slowAlloc();
    v41[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 141558787;
    *(void *)(v0 + 96) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 12) = 2081;
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 104) = sub_1008FA0F0(v11, v12, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v9, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v10 + 22) = 2160;
    *(void *)(v0 + 112) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 32) = 2081;
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 120) = sub_1008FA0F0(v13, v14, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v8, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "All participant for shareId: %{private,mask.hash}s,\nbeaconId: %{private,mask.hash}s have accepted.", (uint8_t *)v10, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1007E0580(*(void *)(v0 + 432), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    sub_1007E0580(v8, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  }

  uint64_t v15 = *(void *)(v0 + 152);
  uint64_t v16 = *(void *)(v15 + 16);
  *(void *)(v0 + 440) = v16;
  if (v16)
  {
    uint64_t v17 = *(void *)(v0 + 376);
    uint64_t v18 = *(_DWORD **)(v0 + 312);
    uint64_t v19 = *(void *)(*(void *)(v0 + 160) + 152);
    *(void *)(v0 + 448) = v19;
    int v20 = *(_DWORD *)(v17 + 80);
    *(_DWORD *)(v0 + 624) = v20;
    *(void *)(v0 + 456) = *(void *)(v17 + 72);
    *(void *)(v0 + 464) = 0;
    uint64_t v21 = *(void *)(v0 + 416);
    uint64_t v22 = v15 + ((v20 + 32) & ~(unint64_t)v20);
    swift_bridgeObjectRetain();
    sub_1007E0518(v22, v21, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_DWORD *)(v0 + 628) = v18[12];
    *(_DWORD *)(v0 + 632) = v18[16];
    *(_DWORD *)(v0 + 636) = v18[20];
    *(_DWORD *)(v0 + 640) = v18[24];
    unint64_t v23 = sub_1007DD2A0;
    uint64_t v24 = v19;
  }
  else
  {
LABEL_9:
    uint64_t v25 = *(void *)(v0 + 128);
    uint64_t v26 = *(void *)(v25 + 16);
    *(void *)(v0 + 520) = v26;
    if (v26)
    {
      uint64_t v27 = *(void *)(v0 + 176);
      uint64_t v28 = v25 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
      uint64_t v29 = *(void *)(v27 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1007DEE7C(v28);
        v28 += v29;
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease();
    }
    uint64_t v30 = *v1;
    uint64_t v31 = *(void *)(*v1 + 16);
    if (v31)
    {
      uint64_t v32 = *(void *)(v0 + 320);
      uint64_t v33 = *(void *)(v0 + 328);
      unint64_t v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      uint64_t v35 = *(void *)(v32 + 72);
      swift_bridgeObjectRetain_n();
      sub_10001D074(v30 + v34, v33, &qword_10163BA20);
      sub_1007DF2EC(v33);
      sub_10001DAB4(v33, &qword_10163BA20);
      uint64_t v36 = v31 - 1;
      if (v36)
      {
        uint64_t v37 = v30 + v35 + v34;
        do
        {
          uint64_t v38 = *(void *)(v0 + 328);
          sub_10001D074(v37, v38, &qword_10163BA20);
          sub_1007DF2EC(v38);
          sub_10001DAB4(v38, &qword_10163BA20);
          v37 += v35;
          --v36;
        }
        while (v36);
      }
      swift_bridgeObjectRelease_n();
    }
    *(void *)(v0 + 528) = 0;
    uint64_t v39 = *(void *)(v0 + 368);
    uint64_t v24 = *(void *)(*(void *)(v0 + 160) + 152);
    *(void *)(v0 + 536) = v24;
    *(_DWORD *)(v0 + 644) = *(_DWORD *)(v39 + 20);
    unint64_t v23 = sub_1007DDB48;
  }
  return _swift_task_switch(v23, v24, 0);
}

uint64_t sub_1007DD2A0()
{
  uint64_t v1 = *(void *)(v0 + 448);
  uint64_t v3 = *(void *)(v0 + 408);
  uint64_t v2 = *(void *)(v0 + 416);
  unint64_t v4 = (*(unsigned __int8 *)(v0 + 624) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 624);
  *(void *)(v0 + 472) = *(void *)(v1 + 136);
  sub_1007E0518(v2, v3, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 480) = v5;
  *(void *)(v5 + 16) = v1;
  sub_1007E0480(v3, v5 + v4, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  swift_retain();
  return _swift_task_switch(sub_1007DD39C, 0, 0);
}

uint64_t sub_1007DD39C()
{
  uint64_t v2 = v0[59];
  uint64_t v1 = v0[60];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[61] = v3;
  v3[2] = v2;
  v3[3] = sub_1007E0634;
  v3[4] = v1;
  unint64_t v4 = (void *)swift_task_alloc();
  v0[62] = v4;
  *unint64_t v4 = v0;
  v4[1] = sub_1007DD4A4;
  uint64_t v5 = v0[44];
  uint64_t v6 = v0[39];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1007E0660, v3, v6);
}

uint64_t sub_1007DD4A4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 448);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1007DD5F4, v1, 0);
}

uint64_t sub_1007DD5F4()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v3 = *(int **)(v0 + 312);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v5 = v2 + *(int *)(v0 + 632);
  uint64_t v6 = v2 + *(int *)(v0 + 628);
  uint64_t v7 = v1 + v3[12];
  uint64_t v8 = v1 + v3[16];
  *(void *)(v0 + 504) = *(void *)(v1 + v3[20]);
  *(void *)(v0 + 512) = *(void *)(v1 + v3[24]);
  sub_1007E0480(v1, v2, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_10001D608(v7, v6, (uint64_t *)&unk_101653D50);
  sub_10001D608(v8, v5, &qword_10163B9E0);
  return _swift_task_switch(sub_1007DD6E8, v4, 0);
}

uint64_t sub_1007DD6E8()
{
  uint64_t v2 = *(void *)(v0 + 504);
  uint64_t v1 = *(void *)(v0 + 512);
  uint64_t v3 = *(int *)(v0 + 640);
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v5 = *(void *)(v0 + 336);
  uint64_t v6 = *(void *)(v0 + 344);
  uint64_t v7 = *(int **)(v0 + 312);
  uint64_t v8 = v4 + *(int *)(v0 + 632);
  uint64_t v9 = v4 + *(int *)(v0 + 628);
  *(void *)(v4 + *(int *)(v0 + 636)) = v2;
  *(void *)(v4 + v3) = v1;
  uint64_t v10 = v6 + v7[12];
  uint64_t v11 = v6 + v7[16];
  uint64_t v49 = v11;
  uint64_t v50 = v8;
  uint64_t v12 = v7[20];
  uint64_t v48 = v7[24];
  sub_1007E0518(v4, v6, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_10001D074(v9, v10, (uint64_t *)&unk_101653D50);
  sub_10001D074(v50, v11, &qword_10163B9E0);
  *(void *)(v6 + v12) = v2;
  *(void *)(v6 + v48) = v1;
  uint64_t v13 = v5 + v7[12];
  uint64_t v14 = v5 + v7[16];
  uint64_t v15 = v7[20];
  uint64_t v16 = v7[24];
  sub_1007E0480(v6, v5, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_10001D608(v10, v13, (uint64_t *)&unk_101653D50);
  sub_10001D608(v49, v14, &qword_10163B9E0);
  *(void *)(v5 + v15) = v2;
  *(void *)(v5 + v16) = v1;
  unint64_t v17 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v17 = sub_100A6EDF8(0, *(void *)(v17 + 16) + 1, 1, v17);
  }
  unint64_t v19 = *(void *)(v17 + 16);
  unint64_t v18 = *(void *)(v17 + 24);
  if (v19 >= v18 >> 1) {
    unint64_t v17 = sub_100A6EDF8(v18 > 1, v19 + 1, 1, v17);
  }
  uint64_t v20 = *(void *)(v0 + 440);
  uint64_t v21 = *(void *)(v0 + 416);
  uint64_t v22 = *(void *)(v0 + 360);
  uint64_t v23 = *(void *)(v0 + 336);
  uint64_t v24 = *(void *)(v0 + 320);
  uint64_t v25 = *(void *)(v0 + 464) + 1;
  *(void *)(v17 + 16) = v19 + 1;
  sub_10001D608(v23, v17+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v19, &qword_10163BA20);
  *(void *)(v0 + 80) = v17;
  sub_10001DAB4(v22, &qword_10163BA20);
  sub_1007E0580(v21, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  if (v25 == v20)
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(v0 + 128);
    uint64_t v27 = *(void *)(v26 + 16);
    *(void *)(v0 + 520) = v27;
    if (v27)
    {
      uint64_t v28 = *(void *)(v0 + 176);
      uint64_t v29 = v26 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
      uint64_t v30 = *(void *)(v28 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1007DEE7C(v29);
        v29 += v30;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
    }
    uint64_t v37 = *(void *)(v0 + 80);
    uint64_t v38 = *(void *)(v37 + 16);
    if (v38)
    {
      uint64_t v39 = *(void *)(v0 + 320);
      uint64_t v40 = *(void *)(v0 + 328);
      unint64_t v41 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
      uint64_t v42 = *(void *)(v39 + 72);
      swift_bridgeObjectRetain_n();
      sub_10001D074(v37 + v41, v40, &qword_10163BA20);
      sub_1007DF2EC(v40);
      sub_10001DAB4(v40, &qword_10163BA20);
      uint64_t v43 = v38 - 1;
      if (v43)
      {
        uint64_t v44 = v37 + v42 + v41;
        do
        {
          uint64_t v45 = *(void *)(v0 + 328);
          sub_10001D074(v44, v45, &qword_10163BA20);
          sub_1007DF2EC(v45);
          sub_10001DAB4(v45, &qword_10163BA20);
          v44 += v42;
          --v43;
        }
        while (v43);
      }
      swift_bridgeObjectRelease_n();
    }
    *(void *)(v0 + 528) = 0;
    uint64_t v46 = *(void *)(v0 + 368);
    uint64_t v36 = *(void *)(*(void *)(v0 + 160) + 152);
    *(void *)(v0 + 536) = v36;
    *(_DWORD *)(v0 + 644) = *(_DWORD *)(v46 + 20);
    uint64_t v35 = sub_1007DDB48;
  }
  else
  {
    uint64_t v31 = *(void *)(v0 + 456);
    uint64_t v32 = *(void *)(v0 + 464) + 1;
    *(void *)(v0 + 464) = v32;
    uint64_t v33 = *(void *)(v0 + 448);
    unint64_t v34 = *(_DWORD **)(v0 + 312);
    sub_1007E0518(*(void *)(v0 + 152)+ ((*(unsigned __int8 *)(v0 + 624) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 624))+ v31 * v32, *(void *)(v0 + 416), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_DWORD *)(v0 + 628) = v34[12];
    *(_DWORD *)(v0 + 632) = v34[16];
    *(_DWORD *)(v0 + 636) = v34[20];
    *(_DWORD *)(v0 + 640) = v34[24];
    uint64_t v35 = sub_1007DD2A0;
    uint64_t v36 = v33;
  }
  return _swift_task_switch(v35, v36, 0);
}

uint64_t sub_1007DDB48()
{
  uint64_t v1 = *(void *)(v0 + 536);
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 264);
  uint64_t v4 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 136) + *(int *)(v0 + 644);
  *(void *)(v0 + 544) = *(void *)(v1 + 136);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  *(void *)(v0 + 552) = v6;
  *(void *)(v0 + 560) = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v5, v3);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 568) = v8;
  *(void *)(v8 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v2, v3);
  swift_retain();
  return _swift_task_switch(sub_1007DDC54, 0, 0);
}

uint64_t sub_1007DDC54()
{
  uint64_t v1 = v0[71];
  uint64_t v2 = v0[68];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[72] = v3;
  v3[2] = v2;
  v3[3] = sub_1007E05E4;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[73] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007DDD5C;
  uint64_t v6 = v0[37];
  uint64_t v5 = v0[38];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_100075020, v3, v6);
}

uint64_t sub_1007DDD5C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 160);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1007DDEAC, v1, 0);
}

uint64_t sub_1007DDEAC()
{
  uint64_t v1 = v0[66];
  uint64_t v2 = v0[38];
  uint64_t v3 = v0[32];
  uint64_t v4 = v0[16];
  uint64_t v5 = (void *)swift_task_alloc();
  v5[2] = v4;
  v5[3] = v0 + 10;
  v5[4] = v2;
  sub_100EE07C0((void (*)(uint64_t, _UNKNOWN **))sub_1007E0610, v3);
  if (v1)
  {
    sub_10001DAB4(v0[38], (uint64_t *)&unk_10163B7C0);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    uint64_t v8 = v0[67];
    swift_task_dealloc();
    return _swift_task_switch(sub_1007DE0C8, v8, 0);
  }
}

uint64_t sub_1007DE0C8()
{
  *(void *)(v0 + 592) = *(void *)(*(void *)(v0 + 536) + 128);
  return _swift_task_switch(sub_1007DE0F0, 0, 0);
}

uint64_t sub_1007DE0F0()
{
  uint64_t v1 = v0[74];
  uint64_t v2 = v0[32];
  uint64_t v3 = swift_task_alloc();
  v0[75] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[76] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007DE1E8;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000011, 0x80000001013F27F0, sub_100074FFC, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_1007DE1E8()
{
  *(void *)(*(void *)v1 + 616) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1007DEC80;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1007DE304;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1007DE304()
{
  return _swift_task_switch(sub_1007DE320, *(void *)(v0 + 160), 0);
}

uint64_t sub_1007DE320()
{
  uint64_t v75 = v0;
  p_ivar_base_size = &AnalyticsEvent.ivar_base_size;
  if (*(void *)(v0[10] + 16))
  {
    if (qword_101636888 != -1) {
      swift_once();
    }
    uint64_t v2 = v0[50];
    uint64_t v4 = v0[30];
    uint64_t v3 = v0[31];
    uint64_t v5 = v0[29];
    uint64_t v6 = v0[17];
    uint64_t v7 = sub_100010324(v5, (uint64_t)qword_10170D788);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v7, v5);
    sub_1007E0518(v6, v2, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v11 = v0[50];
    if (v10)
    {
      uint64_t v71 = v0[31];
      uint64_t v68 = v0[30];
      uint64_t v69 = v0[29];
      uint64_t v12 = swift_slowAlloc();
      uint64_t v74 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 141558531;
      v0[8] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v12 + 12) = 2081;
      sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[9] = sub_1008FA0F0(v13, v14, (uint64_t *)&v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1007E0580(v11, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
      *(_WORD *)(v12 + 22) = 2048;
      swift_beginAccess();
      v0[11] = *(void *)(v0[10] + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Deleted all previous shares for beaconId: %{private,mask.hash}s,\ncount: %ld.", (uint8_t *)v12, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      p_ivar_base_size = (_DWORD *)(&AnalyticsEvent + 8);
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v71, v69);
    }
    else
    {
      uint64_t v16 = v0[30];
      uint64_t v15 = v0[31];
      uint64_t v17 = v0[29];
      sub_1007E0580(v0[50], (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    }
  }
  if (*((void *)p_ivar_base_size + 273) != -1) {
    swift_once();
  }
  uint64_t v18 = v0[49];
  uint64_t v19 = v0[17];
  sub_100010324(v0[29], (uint64_t)qword_10170D788);
  sub_1007E0518(v19, v18, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  swift_bridgeObjectRetain_n();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    os_log_type_t v58 = v21;
    os_log_t log = v20;
    uint64_t v22 = v0[65];
    uint64_t v23 = v0[49];
    uint64_t v24 = swift_slowAlloc();
    uint64_t v73 = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 141558531;
    v0[5] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 12) = 2081;
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[6] = sub_1008FA0F0(v25, v26, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1007E0580(v23, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    uint64_t v59 = (uint8_t *)v24;
    *(_WORD *)(v24 + 22) = 2080;
    if (v22)
    {
      int64_t v27 = v0[65];
      uint64_t v63 = v0[26];
      uint64_t v64 = v0[27];
      uint64_t v28 = v0[22];
      uint64_t v62 = v0[21];
      uint64_t v29 = v0[16];
      uint64_t v74 = _swiftEmptyArrayStorage;
      sub_1000B71B0(0, v27, 0);
      uint64_t v30 = 0;
      uint64_t v31 = v29 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
      uint64_t v61 = *(void *)(v28 + 72);
      uint64_t v32 = v74;
      uint64_t v65 = v0;
      do
      {
        uint64_t v70 = v30;
        uint64_t v72 = v32;
        char v67 = (void (*)(uint64_t, uint64_t, uint64_t))v0[69];
        uint64_t v66 = v0[33];
        uint64_t v33 = v0[28];
        uint64_t v34 = v0[24];
        uint64_t v35 = v0[25];
        uint64_t v36 = v0[23];
        sub_10001D074(v31, v35, &qword_101657C30);
        uint64_t v37 = (void *)(v33 + *(int *)(v63 + 48));
        uint64_t v38 = *(int *)(v62 + 48);
        uint64_t v39 = (void *)(v34 + v38);
        uint64_t v40 = (void *)(v35 + v38);
        sub_1007E0518(v35, v34, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
        uint64_t v41 = v40[1];
        void *v39 = *v40;
        v39[1] = v41;
        uint64_t v42 = type metadata accessor for MemberPeerTrust();
        v67(v33, v34 + *(int *)(v42 + 20), v66);
        uint64_t v43 = v34;
        uint64_t v32 = v72;
        sub_1007E0580(v43, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
        uint64_t v44 = (void *)(v36 + *(int *)(v62 + 48));
        sub_1007E0518(v35, v36, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
        uint64_t v46 = *v40;
        uint64_t v45 = v40[1];
        *uint64_t v44 = *v40;
        v44[1] = v45;
        *uint64_t v37 = v46;
        v37[1] = v45;
        swift_bridgeObjectRetain();
        sub_1007E0580(v36, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
        sub_10001DAB4(v35, &qword_101657C30);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000B71B0(0, v72[2] + 1, 1);
          uint64_t v32 = v74;
        }
        unint64_t v48 = v32[2];
        unint64_t v47 = v32[3];
        uint64_t v0 = v65;
        if (v48 >= v47 >> 1)
        {
          sub_1000B71B0(v47 > 1, v48 + 1, 1);
          uint64_t v32 = v74;
        }
        uint64_t v49 = v65[65];
        uint64_t v50 = v65[28];
        uint64_t v30 = v70 + 1;
        v32[2] = v48 + 1;
        sub_10001D608(v50, (uint64_t)v32+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * v48, &qword_10163AAD0);
        v31 += v61;
      }
      while (v70 + 1 != v49);
    }
    uint64_t v52 = v0[32];
    uint64_t v53 = Array.description.getter();
    unint64_t v55 = v54;
    swift_bridgeObjectRelease();
    v0[7] = sub_1008FA0F0(v53, v55, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, v58, "Update members for shareId: %{private,mask.hash}s,\nupdates: %s.", v59, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v51 = v0[49];
    uint64_t v52 = v0[32];

    swift_bridgeObjectRelease_n();
    sub_1007E0580(v51, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  }
  sub_10001DAB4(v52, &qword_101639E88);
  sub_10001DAB4(v0[38], (uint64_t *)&unk_10163B7C0);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v56 = (uint64_t (*)(void))v0[1];
  return v56();
}

uint64_t sub_1007DEC80()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_task_dealloc();
  return _swift_task_switch(sub_1007DECEC, v1, 0);
}

uint64_t sub_1007DECEC()
{
  uint64_t v1 = v0[38];
  sub_10001DAB4(v0[32], &qword_101639E88);
  sub_10001DAB4(v1, (uint64_t *)&unk_10163B7C0);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

void sub_1007DEE7C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v41 = *(void *)(v2 - 8);
  uint64_t v42 = v2;
  __chkstk_darwin(v2);
  uint64_t v40 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000588C(&qword_101657C30);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  BOOL v10 = (char *)v37 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)v37 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v37 - v14;
  if (qword_101636888 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_100010324(v16, (uint64_t)qword_10170D788);
  uint64_t v17 = *(int *)(v4 + 48);
  uint64_t v18 = &v15[v17];
  uint64_t v19 = (void *)(a1 + v17);
  sub_1007E0518(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
  uint64_t v20 = v19[1];
  *(void *)uint64_t v18 = *v19;
  *((void *)v18 + 1) = v20;
  sub_10001D074((uint64_t)v15, (uint64_t)v13, &qword_101657C30);
  sub_10001D608((uint64_t)v15, (uint64_t)v10, &qword_101657C30);
  swift_bridgeObjectRetain();
  os_log_type_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    int v38 = v23;
    uint64_t v25 = v24;
    uint64_t v39 = swift_slowAlloc();
    uint64_t v45 = v39;
    *(_DWORD *)uint64_t v25 = 141558275;
    uint64_t v43 = 1752392040;
    v37[2] = &v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 12) = 2081;
    v37[1] = v25 + 14;
    uint64_t v26 = *(int *)(v4 + 48);
    int64_t v27 = &v7[v26];
    uint64_t v28 = &v13[v26];
    sub_1007E0518((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
    uint64_t v29 = *((void *)v28 + 1);
    *(void *)int64_t v27 = *(void *)v28;
    *((void *)v27 + 1) = v29;
    uint64_t v30 = type metadata accessor for MemberPeerTrust();
    uint64_t v31 = v40;
    uint64_t v32 = v41;
    uint64_t v33 = v42;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v40, &v7[*(int *)(v30 + 20)], v42);
    sub_1007E0580((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v36 = v35;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v33);
    uint64_t v43 = sub_1008FA0F0(v34, v36, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001DAB4((uint64_t)v10, &qword_101657C30);
    sub_10001DAB4((uint64_t)v13, &qword_101657C30);
    _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v38, "Data update on members process. Update %{private,mask.hash}s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10001DAB4((uint64_t)v10, &qword_101657C30);
    sub_10001DAB4((uint64_t)v13, &qword_101657C30);
  }
}

void sub_1007DF2EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v52 = v2;
  __chkstk_darwin(v2);
  uint64_t v50 = (char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (int *)sub_10000588C(&qword_10163BA20);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v49 = (uint64_t)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v55 = (uint64_t)v46 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v54 = (uint64_t)v46 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v46 - v11;
  if (qword_101636888 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v53 = sub_100010324(v13, (uint64_t)qword_10170D788);
  uint64_t v14 = v4[12];
  uint64_t v15 = (uint64_t)&v12[v14];
  uint64_t v16 = v4[16];
  uint64_t v17 = (uint64_t)&v12[v16];
  uint64_t v18 = v4[20];
  uint64_t v19 = v4[24];
  uint64_t v20 = a1 + v14;
  uint64_t v21 = a1 + v16;
  sub_1007E0518(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_10001D074(v20, v15, (uint64_t *)&unk_101653D50);
  sub_10001D074(v21, v17, &qword_10163B9E0);
  *(void *)&v12[v18] = *(void *)(a1 + v18);
  *(void *)&v12[v19] = *(void *)(a1 + v19);
  uint64_t v22 = v54;
  sub_10001D074((uint64_t)v12, v54, &qword_10163BA20);
  uint64_t v23 = v55;
  sub_10001D608((uint64_t)v12, v55, &qword_10163BA20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  int v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v27 = swift_slowAlloc();
    int v48 = v26;
    uint64_t v28 = v27;
    uint64_t v53 = swift_slowAlloc();
    uint64_t v58 = v53;
    *(_DWORD *)uint64_t v28 = 141558275;
    uint64_t v56 = 1752392040;
    v46[2] = &v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v28 + 12) = 2081;
    v46[1] = v28 + 14;
    uint64_t v29 = v4[12];
    uint64_t v30 = v49;
    os_log_t v47 = v24;
    uint64_t v31 = v49 + v29;
    uint64_t v32 = v4[16];
    uint64_t v33 = v49 + v32;
    uint64_t v34 = v4[20];
    uint64_t v35 = v4[24];
    uint64_t v36 = v22 + v29;
    uint64_t v37 = v22 + v32;
    sub_1007E0518(v22, v49, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    sub_10001D074(v36, v31, (uint64_t *)&unk_101653D50);
    sub_10001D074(v37, v33, &qword_10163B9E0);
    *(void *)(v30 + v34) = *(void *)(v22 + v34);
    *(void *)(v30 + v35) = *(void *)(v22 + v35);
    uint64_t v38 = type metadata accessor for MemberSharingCircle();
    uint64_t v40 = v50;
    uint64_t v39 = v51;
    uint64_t v41 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v30 + *(int *)(v38 + 20), v52);
    sub_1007E0580(v30, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    sub_10001DAB4(v33, &qword_10163B9E0);
    sub_10001DAB4(v31, (uint64_t *)&unk_101653D50);
    sub_1007E02E4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v44 = v43;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
    uint64_t v56 = sub_1008FA0F0(v42, v44, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001DAB4(v55, &qword_10163BA20);
    sub_10001DAB4(v22, &qword_10163BA20);
    os_log_t v45 = v47;
    _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v48, "Data update on members process. Delete %{private,mask.hash}s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10001DAB4(v23, &qword_10163BA20);
    sub_10001DAB4(v22, &qword_10163BA20);
  }
}

uint64_t sub_1007DF834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v56 = a5;
  uint64_t v10 = sub_10000588C((uint64_t *)&unk_10163B7C0);
  __chkstk_darwin(v10 - 8);
  uint64_t v57 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MemberSharingCircle();
  uint64_t v54 = *(void *)(v12 - 8);
  uint64_t v55 = v12;
  __chkstk_darwin(v12);
  uint64_t v51 = (uint64_t *)((char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void *)(a3 + 16);
  if (!v14)
  {
LABEL_6:
    uint64_t v21 = *a4;
    uint64_t v52 = *(void *)(v21 + 16);
    if (!v52)
    {
LABEL_28:
      uint64_t v43 = v57;
      sub_10001D074(v56, v57, (uint64_t *)&unk_10163B7C0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v43, 1, v55) == 1) {
        return sub_10001DAB4(v43, (uint64_t *)&unk_10163B7C0);
      }
      uint64_t v44 = v43;
      os_log_t v45 = v51;
      sub_1007E0480(v44, (uint64_t)v51, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
      swift_bridgeObjectRetain();
      sub_100EE29C8(v45, a1, a3);
      return sub_1007E0580((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    }
    uint64_t v22 = sub_10000588C(&qword_10163BA20);
    uint64_t v23 = v21
        + ((*(unsigned __int8 *)(*(void *)(v22 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v22 - 8) + 80));
    uint64_t v24 = *(void *)(*(void *)(v22 - 8) + 72);
    uint64_t v48 = v21;
    swift_bridgeObjectRetain();
    uint64_t v25 = 0;
    *(void *)&long long v26 = 134218240;
    long long v46 = v26;
    uint64_t v53 = v22;
    uint64_t v47 = a3;
    uint64_t v49 = v24;
    uint64_t v50 = v23;
    while (1)
    {
      uint64_t v27 = (uint64_t *)(v23 + v24 * v25);
      sub_100EE6764(v27);
      if (v6) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v28 = *(uint64_t *)((char *)v27 + *(int *)(v22 + 80));
      unint64_t v29 = *(void *)(v28 + 16);
      if (v29 >= 0xA) {
        break;
      }
      if (v29)
      {
        uint64_t v34 = *(void *)(type metadata accessor for SharingCircleSecret() - 8);
        uint64_t v35 = (uint64_t *)(v28
                        + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80)));
        uint64_t v36 = *(void *)(v34 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_100EE5828(v35);
          uint64_t v35 = (uint64_t *)((char *)v35 + v36);
          --v29;
        }
        while (v29);
        swift_bridgeObjectRelease();
        a3 = v47;
LABEL_20:
        uint64_t v22 = v53;
      }
      uint64_t v37 = *(uint64_t *)((char *)v27 + *(int *)(v22 + 96));
      uint64_t v38 = *(void *)(v37 + 16);
      if (v38)
      {
        uint64_t v39 = *(void *)(type metadata accessor for MemberPeerTrust() - 8);
        uint64_t v40 = (uint64_t *)(v37
                        + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80)));
        uint64_t v41 = *(void *)(v39 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_100EE5448(v40);
          uint64_t v40 = (uint64_t *)((char *)v40 + v41);
          --v38;
        }
        while (v38);
        swift_bridgeObjectRelease();
        uint64_t v22 = v53;
      }
      ++v25;
      uint64_t v24 = v49;
      uint64_t v23 = v50;
      if (v25 == v52)
      {
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
    }
    if (qword_101636888 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_100010324(v30, (uint64_t)qword_10170D788);
    swift_bridgeObjectRetain();
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = v46;
      *(void *)(v33 + 4) = 9;
      *(_WORD *)(v33 + 12) = 2048;
      *(void *)(v33 + 14) = v29;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "More than %ld shared secrets - leaving them orphaned for later cleanup. Count: %ld.", (uint8_t *)v33, 0x16u);
      a3 = v47;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    goto LABEL_20;
  }
  uint64_t v15 = sub_10000588C(&qword_101657C30);
  uint64_t v16 = (uint64_t *)(a3
                  + ((*(unsigned __int8 *)(*(void *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80)));
  uint64_t v17 = *(void *)(*(void *)(v15 - 8) + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v18 = (uint64_t *)((char *)v16 + *(int *)(v15 + 48));
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    swift_bridgeObjectRetain();
    sub_100EE43B4(v16, a1, v19, v20);
    if (v6) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v16 = (uint64_t *)((char *)v16 + v17);
    if (!--v14)
    {
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
}

uint64_t sub_1007DFE00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(int *)(type metadata accessor for MemberSharingCircle() + 36);
  uint64_t v9 = *(void **)(a1 + v8);
  uint64_t v10 = *(void *)(a2 + 16);
  if (!v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = v9;
LABEL_18:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + v8) = v15;
    return swift_bridgeObjectRelease();
  }
  uint64_t v30 = v8;
  uint64_t v32 = a1;
  uint64_t v11 = *(void *)(sub_10000588C(&qword_101657C30) - 8);
  uint64_t v12 = a2 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v34 = *(void *)(v11 + 72);
  uint64_t v13 = type metadata accessor for MemberPeerTrust();
  uint64_t v33 = v5;
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v35 = v13;
  uint64_t v36 = v5 + 16;
  uint64_t v14 = (void (**)(char *, uint64_t))(v5 + 8);
  swift_bridgeObjectRetain();
  uint64_t v31 = a2;
  swift_bridgeObjectRetain();
  uint64_t v15 = v9;
  while (1)
  {
    v37(v7, v12 + *(int *)(v35 + 20), v4);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = v15;
    unint64_t v18 = sub_1007240CC((uint64_t)v7);
    uint64_t v19 = v15[2];
    BOOL v20 = (v17 & 1) == 0;
    uint64_t v21 = v19 + v20;
    if (__OFADD__(v19, v20)) {
      break;
    }
    char v22 = v17;
    if (v15[3] >= v21)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v15 = v38;
        if (v17) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_100E80F5C();
        uint64_t v15 = v38;
        if (v22) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_100E6B2F8(v21, isUniquelyReferenced_nonNull_native);
      unint64_t v23 = sub_1007240CC((uint64_t)v7);
      if ((v22 & 1) != (v24 & 1)) {
        goto LABEL_21;
      }
      unint64_t v18 = v23;
      uint64_t v15 = v38;
      if (v22)
      {
LABEL_3:
        *(unsigned char *)(v15[7] + v18) = 1;
        goto LABEL_4;
      }
    }
    v15[(v18 >> 6) + 8] |= 1 << v18;
    v37((char *)(v15[6] + *(void *)(v33 + 72) * v18), (uint64_t)v7, v4);
    *(unsigned char *)(v15[7] + v18) = 1;
    uint64_t v25 = v15[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_20;
    }
    void v15[2] = v27;
LABEL_4:
    swift_bridgeObjectRelease();
    (*v14)(v7, v4);
    v12 += v34;
    if (!--v10)
    {
      swift_bridgeObjectRelease();
      a1 = v32;
      uint64_t v8 = v30;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1007E0130()
{
  uint64_t v2 = *(void *)(type metadata accessor for MemberSharingCircle() - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_10001D2E4;
  return _swift_task_switch(sub_1007DC15C, v3, 0);
}

BOOL sub_1007E0218(uint64_t a1)
{
  return sub_1007DC228(a1, *(void *)(v1 + 16));
}

uint64_t sub_1007E0238(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_10001D2E4;
  return sub_1007DC3E0(a1, a2, v2);
}

uint64_t sub_1007E02E4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1007E0330()
{
  return sub_1007E0B14((uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t (*)(uint64_t, uint64_t))sub_100E591C4);
}

uint64_t sub_1007E0360()
{
  uint64_t v2 = *(void *)(type metadata accessor for MemberSharingCircle() - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_100033F68;
  return _swift_task_switch(sub_1007D3A08, v3, 0);
}

uint64_t sub_1007E0448()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1007E0480(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1007E04EC()
{
  return sub_1007E0B14((uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t (*)(uint64_t, uint64_t))sub_100E5F4A8);
}

uint64_t sub_1007E0518(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1007E0580(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1007E05E4()
{
  return sub_1007E0B14((uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t (*)(uint64_t, uint64_t))sub_100E5ABA8);
}

uint64_t sub_1007E0610(uint64_t a1, uint64_t a2)
{
  return sub_1007DF834(a1, a2, *(void *)(v2 + 16), *(uint64_t **)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1007E0634()
{
  return sub_1007E0B14((uint64_t (*)(void))type metadata accessor for MemberSharingCircle, (uint64_t (*)(uint64_t, uint64_t))sub_100E5E1C0);
}

uint64_t sub_1007E0660(uint64_t a1)
{
  return sub_100129FEC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1007E0674()
{
  uint64_t v1 = (int *)(type metadata accessor for MemberSharingCircle() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v6 = v0 + v3;
  sub_10001CFB8(*(void *)(v0 + v3), *(void *)(v0 + v3 + 8));
  uint64_t v7 = v0 + v3 + v1[7];
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v6 + v1[8], v8);
  v9(v6 + v1[9], v8);
  v9(v6 + v1[10], v8);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1007E07E0()
{
  uint64_t v2 = *(void *)(type metadata accessor for MemberSharingCircle() - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_100033F68;
  return _swift_task_switch(sub_1007D3A08, v3, 0);
}

uint64_t sub_1007E08D4()
{
  uint64_t v1 = (int *)(type metadata accessor for MemberSharingCircle() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = v0 + v3;
  sub_10001CFB8(*(void *)(v0 + v3), *(void *)(v0 + v3 + 8));
  uint64_t v7 = v0 + v3 + v1[7];
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v6 + v1[8], v8);
  v9(v6 + v1[9], v8);
  v9(v6 + v1[10], v8);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1007E0A38()
{
  uint64_t v2 = *(void *)(type metadata accessor for MemberSharingCircle() - 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_10012E0C8;
  return sub_1007D0A20(v3, v4);
}

uint64_t sub_1007E0B14(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4, v5);
}

uint64_t sub_1007E0BA4(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

unsigned char *storeEnumTagSinglePayload for ShareKeysDownloadUseCase.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007E0C80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareKeysDownloadUseCase.Error()
{
  return &type metadata for ShareKeysDownloadUseCase.Error;
}

unint64_t sub_1007E0CBC()
{
  unint64_t result = qword_10164E1E8[0];
  if (!qword_10164E1E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10164E1E8);
  }
  return result;
}

uint64_t sub_1007E0D18()
{
  uint64_t result = type metadata accessor for VariableGroupingSequence();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1007E0E24()
{
  uint64_t v1 = *(uint64_t *)((char *)v0 + *(void *)(*v0 + 104));
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v2 = &v13;
  dispatch thunk of IteratorProtocol.next()();
  uint64_t result = swift_endAccess();
  uint64_t v4 = *v0;
  if (v14 == 1) {
    unint64_t v2 = (uint64_t *)((char *)v0 + *(void *)(v4 + 120));
  }
  uint64_t v5 = *v2;
  *(uint64_t *)((char *)v0 + *(void *)(v4 + 120)) = *v2;
  uint64_t v6 = *(void *)(*v0 + 112);
  uint64_t v7 = *(uint64_t *)((char *)v0 + v6);
  if (__OFADD__(v7, v5))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v7 + v5 < v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v13 = v1;
  type metadata accessor for Array();
  swift_getWitnessTable();
  RandomAccessCollection<>.indices.getter();
  uint64_t v8 = *(uint64_t *)((char *)v0 + v6);
  uint64_t v9 = 0;
  if (v8 < Array.count.getter())
  {
    Array.subscript.getter();
    type metadata accessor for ArraySlice();
    swift_getWitnessTable();
    uint64_t v9 = Array.init<A>(_:)();
  }
  sub_10000588C(&qword_10164E2F0);
  sub_1007E1F10();
  swift_getWitnessTable();
  uint64_t result = Collection.count.getter();
  uint64_t v10 = *(uint64_t *)((char *)v0 + v6);
  BOOL v11 = __OFADD__(v10, result);
  uint64_t v12 = v10 + result;
  if (!v11)
  {
    *(uint64_t *)((char *)v0 + v6) = v12;
    return v9;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1007E1134()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t v2 = type metadata accessor for VariableGroupingSequence();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 128);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v3, AssociatedTypeWitness);
  return v0;
}

uint64_t sub_1007E125C()
{
  sub_1007E1134();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VariableGroupingSequence.VariableGroupingSequenceIterator()
{
  return sub_1000103A0();
}

uint64_t type metadata accessor for VariableGroupingSequence()
{
  return sub_1000103A0();
}

uint64_t sub_1007E12E4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1007E1384(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    char v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_1007E1488(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_1007E14FC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  swift_bridgeObjectRetain();
  v5(v7, v8, v4);
  return a1;
}

void *sub_1007E158C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_1007E161C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_1007E168C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_1007E1714(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1007E18B4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 8) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1007E1B10);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
          BOOL v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

uint64_t sub_1007E1B38()
{
  return swift_getWitnessTable();
}

uint64_t sub_1007E1B54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1007E0E24();
  *a1 = result;
  return result;
}

uint64_t *sub_1007E1B80()
{
  type metadata accessor for VariableGroupingSequence.VariableGroupingSequenceIterator();
  return sub_1007E1EC8(v0);
}

uint64_t sub_1007E1BBC@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  unsigned int v5 = sub_1007E1B80();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v2, a1);
  *a2 = v5;
  return result;
}

uint64_t sub_1007E1C2C()
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)();
}

uint64_t *sub_1007E1C50(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 88);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(a1);
  unsigned int v8 = (char *)&v15 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  BOOL v11 = (char *)&v15 - v10;
  *(uint64_t *)((char *)v2 + *(void *)(v4 + 112)) = 0;
  uint64_t v12 = (uint64_t)v2 + *(void *)(*v2 + 104);
  uint64_t v13 = type metadata accessor for VariableGroupingSequence();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v12, a1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1 + *(int *)(v13 + 44), v5);
  dispatch thunk of Sequence.makeIterator()();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))((uint64_t)v2 + *(void *)(*v2 + 128), v11, AssociatedTypeWitness);
  *(uint64_t *)((char *)v2 + *(void *)(*v2 + 120)) = 0;
  return v2;
}

uint64_t *sub_1007E1EC8(uint64_t a1)
{
  return sub_1007E1C50(a1);
}

unint64_t sub_1007E1F10()
{
  unint64_t result = qword_10164E2F8;
  if (!qword_10164E2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164E2F8);
  }
  return result;
}

uint64_t *sub_1007E1F64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t sub_1007E2074(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1007E20FC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

void *sub_1007E21BC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_1007E2298(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *sub_1007E231C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_1007E23C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007E23DC);
}

uint64_t sub_1007E23DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1007E248C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007E24A0);
}

uint64_t sub_1007E24A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SearchpartyAccount()
{
  uint64_t result = qword_10164E358;
  if (!qword_10164E358) {
    return swift_getSingletonMetadata();
  }
  return result;
}

{
  return type metadata accessor for SearchpartyAccount();
}

uint64_t sub_1007E2594()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1007E2630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007E2644);
}

uint64_t sub_1007E2644(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FMNAccountType();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1007E26F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007E2708);
}

void *sub_1007E2708(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for FMNAccountType();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for AirPodsLostModeEndPoint()
{
  uint64_t result = qword_10164E3F0;
  if (!qword_10164E3F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1007E27FC()
{
  sub_10000588C(&qword_101639580);
  OS_dispatch_queue.sync<A>(execute:)();
  URLComponents.init()();
  URLComponents.scheme.setter();
  URLComponents.host.setter();
  URLComponents.path.setter();
  uint64_t v0 = (void (*)(uint64_t *, void))URLComponents.path.modify();
  v1._countAndFlagsBits = 0xD000000000000013;
  v1._object = (void *)0x8000000101408340;
  String.append(_:)(v1);
  v0(&v7, 0);
  if (qword_101637188 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_10170EE68;
  id v3 = [self sharedInstance];
  unsigned int v4 = [v3 isInternalBuild];

  if (v4)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [v2 stringForKey:v5];

    if (v6)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      URLComponents.host.setter();
    }
  }
}

uint64_t sub_1007E29E4(uint64_t a1)
{
  uint64_t v91 = sub_10000588C((uint64_t *)&unk_10164E720);
  uint64_t v2 = __chkstk_darwin(v91);
  uint64_t v75 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v74 = (uint64_t)&v68 - v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v73 = (char *)&v68 - v7;
  __chkstk_darwin(v6);
  uint64_t v90 = (uint64_t)&v68 - v8;
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (!v9) {
    return (uint64_t)v10;
  }
  uint64_t v93 = _swiftEmptyArrayStorage;
  sub_1000B812C(0, v9, 0);
  uint64_t result = sub_10080322C(a1);
  unint64_t v13 = result;
  uint64_t v14 = 0;
  uint64_t v15 = a1 + 64;
  uint64_t v76 = a1 + 80;
  uint64_t v72 = a1;
  int64_t v69 = v9;
  uint64_t v70 = v12;
  uint64_t v71 = a1 + 64;
  while ((v13 & 0x8000000000000000) == 0 && (uint64_t)v13 < 1 << *(unsigned char *)(a1 + 32))
  {
    if ((*(void *)(v15 + 8 * (v13 >> 6)) & (1 << v13)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v12) {
      goto LABEL_26;
    }
    uint64_t v78 = 1 << v13;
    unint64_t v79 = v13 >> 6;
    uint64_t v77 = v14;
    uint64_t v17 = v90;
    uint64_t v18 = v90 + *(int *)(v91 + 48);
    uint64_t v19 = *(void *)(a1 + 48);
    uint64_t v92 = type metadata accessor for UUID();
    uint64_t v86 = *(void **)(v92 - 8);
    uint64_t v20 = v19 + v86[9] * v13;
    uint64_t v88 = (void (*)(uint64_t, uint64_t, uint64_t))v86[2];
    uint64_t v89 = v86 + 2;
    v88(v17, v20, v92);
    uint64_t v21 = *(void *)(a1 + 56);
    int64_t v87 = v13;
    char v22 = (uint64_t *)(v21 + 104 * v13);
    uint64_t v23 = *v22;
    unsigned __int8 v24 = *((unsigned char *)v22 + 8);
    LODWORD(v85) = v24;
    uint64_t v26 = v22[2];
    uint64_t v25 = v22[3];
    uint64_t v28 = v22[4];
    uint64_t v27 = v22[5];
    uint64_t v30 = v22[6];
    uint64_t v29 = v22[7];
    unsigned __int8 v31 = *((unsigned char *)v22 + 64);
    LODWORD(v84) = v31;
    unsigned __int8 v32 = *((unsigned char *)v22 + 65);
    LODWORD(v83) = v32;
    uint64_t v34 = v22[9];
    uint64_t v33 = v22[10];
    uint64_t v81 = v22[11];
    uint64_t v35 = v81;
    uint64_t v82 = v33;
    LODWORD(v22) = *((unsigned __int8 *)v22 + 96);
    int v80 = (int)v22;
    *(void *)uint64_t v18 = v23;
    *(unsigned char *)(v18 + 8) = v24;
    *(void *)(v18 + 16) = v26;
    *(void *)(v18 + 24) = v25;
    *(void *)(v18 + 32) = v28;
    *(void *)(v18 + 40) = v27;
    *(void *)(v18 + 48) = v30;
    *(void *)(v18 + 56) = v29;
    *(unsigned char *)(v18 + 64) = v31;
    *(unsigned char *)(v18 + 65) = v32;
    *(void *)(v18 + 72) = v34;
    *(void *)(v18 + 80) = v33;
    *(void *)(v18 + 88) = v35;
    *(unsigned char *)(v18 + 96) = (_BYTE)v22;
    uint64_t v36 = (uint64_t)v73;
    v88((uint64_t)v73, v90, v92);
    uint64_t v37 = v36 + *(int *)(v91 + 48);
    *(void *)uint64_t v37 = v23;
    *(unsigned char *)(v37 + 8) = v85;
    *(void *)(v37 + 16) = v26;
    *(void *)(v37 + 24) = v25;
    *(void *)(v37 + 32) = v28;
    *(void *)(v37 + 40) = v27;
    *(void *)(v37 + 48) = v30;
    *(void *)(v37 + 56) = v29;
    *(unsigned char *)(v37 + 64) = v84;
    *(unsigned char *)(v37 + 65) = v83;
    uint64_t v38 = v82;
    *(void *)(v37 + 72) = v34;
    *(void *)(v37 + 80) = v38;
    *(void *)(v37 + 88) = v81;
    *(unsigned char *)(v37 + 96) = v80;
    uint64_t v39 = v74;
    sub_10001D608(v36, v74, (uint64_t *)&unk_10164E720);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_10001DAB4(v90, (uint64_t *)&unk_10164E720);
    uint64_t v40 = *(int *)(v91 + 48);
    uint64_t v41 = v75;
    uint64_t v42 = &v75[v40];
    uint64_t v43 = v39 + v40;
    v88((uint64_t)v75, v39, v92);
    *(void *)uint64_t v42 = *(void *)v43;
    uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
    os_log_t v45 = *(void **)(v43 + 24);
    uint64_t v46 = *(void *)(v43 + 32);
    uint64_t v47 = *(void *)(v43 + 40);
    uint64_t v48 = *(void *)(v43 + 48);
    uint64_t v49 = *(void *)(v43 + 56);
    int v50 = *(unsigned __int8 *)(v43 + 64);
    int v51 = *(unsigned __int8 *)(v43 + 65);
    uint64_t v53 = *(void *)(v43 + 72);
    uint64_t v52 = *(void *)(v43 + 80);
    uint64_t v54 = *(void *)(v43 + 88);
    int v55 = *(unsigned __int8 *)(v43 + 96);
    LODWORD(v89) = *(unsigned __int8 *)(v43 + 8);
    v42[8] = (char)v89;
    *((void *)v42 + 2) = v44;
    *((void *)v42 + 3) = v45;
    *((void *)v42 + 4) = v46;
    *((void *)v42 + 5) = v47;
    uint64_t v84 = v52;
    uint64_t v85 = v48;
    *((void *)v42 + 6) = v48;
    *((void *)v42 + 7) = v49;
    int v80 = v51;
    LODWORD(v81) = v50;
    v42[64] = v50;
    v42[65] = v51;
    *((void *)v42 + 9) = v53;
    *((void *)v42 + 10) = v52;
    uint64_t v83 = v54;
    *((void *)v42 + 11) = v54;
    LODWORD(v82) = v55;
    v42[96] = v55;
    uint64_t v56 = (void (*)(char *, uint64_t))v86[1];
    uint64_t v88 = v44;
    swift_bridgeObjectRetain();
    uint64_t v86 = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v56(v41, v92);
    sub_10001DAB4(v39, (uint64_t *)&unk_10164E720);
    uint64_t v10 = v93;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1000B812C(0, v10[2] + 1, 1);
      uint64_t v10 = v93;
    }
    unint64_t v58 = v10[2];
    unint64_t v57 = v10[3];
    if (v58 >= v57 >> 1)
    {
      uint64_t result = sub_1000B812C(v57 > 1, v58 + 1, 1);
      uint64_t v10 = v93;
    }
    v10[2] = v58 + 1;
    uint64_t v59 = &v10[12 * v58];
    *((unsigned char *)v59 + 32) = (_BYTE)v89;
    uint64_t v60 = v86;
    v59[5] = v88;
    v59[6] = v60;
    v59[7] = v46;
    v59[8] = v47;
    v59[9] = v85;
    v59[10] = v49;
    *((unsigned char *)v59 + 88) = v81;
    *((unsigned char *)v59 + 89) = v80;
    uint64_t v61 = v84;
    v59[12] = v53;
    v59[13] = v61;
    v59[14] = v83;
    *((unsigned char *)v59 + 120) = v82;
    a1 = v72;
    unint64_t v13 = 1 << *(unsigned char *)(v72 + 32);
    if (v87 >= (uint64_t)v13) {
      goto LABEL_27;
    }
    uint64_t v15 = v71;
    unint64_t v62 = v79;
    uint64_t v63 = *(void *)(v71 + 8 * v79);
    if ((v63 & v78) == 0) {
      goto LABEL_28;
    }
    LODWORD(v12) = v70;
    if (*(_DWORD *)(v72 + 36) != v70) {
      goto LABEL_29;
    }
    unint64_t v64 = v63 & (-2 << (v87 & 0x3F));
    if (v64)
    {
      unint64_t v13 = __clz(__rbit64(v64)) | v87 & 0xFFFFFFFFFFFFFFC0;
      int64_t v16 = v69;
    }
    else
    {
      unint64_t v65 = v79 + 1;
      unint64_t v66 = (v13 + 63) >> 6;
      int64_t v16 = v69;
      if (v79 + 1 < v66)
      {
        unint64_t v67 = *(void *)(v71 + 8 * v65);
        if (v67)
        {
LABEL_22:
          unint64_t v13 = __clz(__rbit64(v67)) + (v65 << 6);
        }
        else
        {
          while (v66 - 2 != v62)
          {
            unint64_t v67 = *(void *)(v76 + 8 * v62++);
            if (v67)
            {
              unint64_t v65 = v62 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v14 = v77 + 1;
    if (v77 + 1 == v16) {
      return (uint64_t)v10;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void *sub_1007E3024(uint64_t a1)
{
  uint64_t v47 = sub_10000588C((uint64_t *)&unk_10164E790);
  uint64_t v3 = *(void *)(v47 - 8);
  uint64_t v4 = __chkstk_darwin(v47);
  uint64_t v43 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v46 = (char *)v36 - v6;
  uint64_t v7 = sub_10000588C((uint64_t *)&unk_10164E7D0);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  __chkstk_darwin(v7);
  int64_t v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    v36[1] = v1;
    uint64_t v49 = _swiftEmptyArrayStorage;
    sub_1000B81AC(0, v10, 0);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v42 = *(void *)(v3 + 72);
    uint64_t v41 = type metadata accessor for UUID();
    uint64_t v13 = *(void *)(v41 - 8);
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v39 = v13 + 16;
    uint64_t v40 = v14;
    uint64_t v37 = v9;
    uint64_t v38 = (void (**)(uint64_t, char *, uint64_t))(v13 + 32);
    uint64_t v15 = (uint64_t *)&unk_10164E7D0;
    uint64_t v16 = (uint64_t)v43;
    do
    {
      int64_t v48 = v10;
      uint64_t v17 = v47;
      uint64_t v18 = *(int *)(v47 + 48);
      uint64_t v19 = v45;
      uint64_t v20 = *(int *)(v45 + 48);
      uint64_t v21 = v15;
      char v22 = v46;
      uint64_t v23 = v41;
      v40(v46, v12, v41);
      unsigned __int8 v24 = *(void **)(v12 + v20);
      uint64_t v25 = *(void **)(v12 + v18);
      uint64_t v26 = *(int *)(v17 + 48);
      uint64_t v27 = *(int *)(v19 + 48);
      uint64_t v28 = v22;
      uint64_t v15 = v21;
      (*v38)(v16, v28, v23);
      *(void *)(v16 + v27) = v24;
      uint64_t v29 = (uint64_t)v37;
      *(void *)(v16 + v26) = v25;
      sub_10001D074(v16, v29, v15);
      id v30 = v24;
      id v31 = v25;
      sub_10001DAB4(v16, (uint64_t *)&unk_10164E790);
      uint64_t v11 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000B81AC(0, v11[2] + 1, 1);
        uint64_t v11 = v49;
      }
      unint64_t v33 = v11[2];
      unint64_t v32 = v11[3];
      int64_t v34 = v48;
      if (v33 >= v32 >> 1)
      {
        sub_1000B81AC(v32 > 1, v33 + 1, 1);
        uint64_t v11 = v49;
      }
      v11[2] = v33 + 1;
      sub_10001D608(v29, (uint64_t)v11+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v33, v15);
      v12 += v42;
      int64_t v10 = v34 - 1;
    }
    while (v10);
  }
  return v11;
}

uint64_t sub_1007E3360()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10170E3B0);
  sub_100010324(v0, (uint64_t)qword_10170E3B0);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1007E33E8@<X0>(void *a1@<X8>)
{
  sub_10000588C(&qword_10164E718);
  uint64_t result = OSAllocatedUnfairLock.callAsFunction<A>(_:)();
  *a1 = v3;
  return result;
}

void *sub_1007E346C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  __chkstk_darwin(v2 - 8);
  swift_defaultActor_initialize();
  type metadata accessor for WorkItemQueue();
  v0[14] = 0;
  v0[15] = 0;
  UUID.init()();
  v0[16] = WorkItemQueue.__allocating_init(name:identifier:)();
  UUID.init()();
  v0[17] = WorkItemQueue.__allocating_init(name:identifier:)();
  v0[18] = 0;
  v0[19] = _swiftEmptyDictionarySingleton;
  sub_10000588C(&qword_10164E9C8);
  swift_allocObject();
  uint64_t v3 = sub_1007FDFA8();
  v1[20] = v3;
  *(_OWORD *)(v1 + 21) = 0u;
  *(_OWORD *)(v1 + 23) = 0u;
  *((unsigned char *)v1 + 200) = 0;
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = *(void *)(v3 + 40);
  *(void *)(v3 + 40) = sub_10080F0C8;
  *(void *)(v3 + 48) = v4;
  sub_1000A1534(v5);
  return v1;
}

uint64_t sub_1007E35D8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    type metadata accessor for Transaction();
    swift_retain();
    static Transaction.asyncTask(name:block:)();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1007E3670(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for UUID();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_1007E3700, 0, 0);
}

uint64_t sub_1007E3700()
{
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  swift_release();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1007E3814(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return _swift_task_switch(sub_1007E3834, 0, 0);
}

uint64_t sub_1007E3834()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 48) = Strong;
  if (Strong)
  {
    return _swift_task_switch(sub_1007E38F4, Strong, 0);
  }
  else
  {
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_1007E38F4()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = *(void *)(v1 + 144);
  v0[7] = v2;
  if (v2)
  {
    uint64_t v5 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of WorkItemQueue.WorkItem.cancel()
                           + async function pointer to dispatch thunk of WorkItemQueue.WorkItem.cancel());
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[8] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1007E3A00;
    return v5();
  }
  else
  {
    *(void *)(v1 + 144) = 0;
    sub_1007F1D44();
    sub_1007F67A0();
    return _swift_task_switch(sub_1005093B4, 0, 0);
  }
}

uint64_t sub_1007E3A00()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1007E3B2C, v1, 0);
}

uint64_t sub_1007E3B2C()
{
  *(void *)(*(void *)(v0 + 48) + 144) = 0;
  swift_release();
  sub_1007F1D44();
  sub_1007F67A0();
  return _swift_task_switch(sub_1005093B4, 0, 0);
}

uint64_t sub_1007E3BA4(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for UUID();
  v2[4] = swift_task_alloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v2[5] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1007E3C64;
  return sub_1007F2D60();
}

uint64_t sub_1007E3C64()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 48) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1007E3DA4;
  return sub_1007F1E58();
}

uint64_t sub_1007E3DA4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1007E3EA0, 0, 0);
}

uint64_t sub_1007E3EA0()
{
  uint64_t v1 = *(_OWORD **)(v0 + 24);
  type metadata accessor for WorkItemQueue.WorkItem();
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  long long v4 = v1[1];
  *(_OWORD *)(v3 + 24) = *v1;
  *(_OWORD *)(v3 + 40) = v4;
  long long v6 = v1[3];
  long long v5 = v1[4];
  long long v7 = *(_OWORD *)((char *)v1 + 73);
  *(_OWORD *)(v3 + 56) = v1[2];
  *(_OWORD *)(v3 + 97) = v7;
  *(_OWORD *)(v3 + 88) = v5;
  *(_OWORD *)(v3 + 72) = v6;
  swift_retain();
  sub_10048250C((uint64_t)v1);
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  swift_release();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1007E4000(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 160) = a1;
  *(void *)(v2 + 168) = a2;
  return _swift_task_switch(sub_1007E4020, 0, 0);
}

uint64_t sub_1007E4020()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[22] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[23] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1007E410C;
    return sub_1007E4D9C();
  }
  else
  {
    long long v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1007E410C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  swift_task_dealloc();
  return _swift_task_switch(sub_1007E421C, v1, 0);
}

uint64_t sub_1007E421C()
{
  sub_1007E4A80();
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1007E4360;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007E4360(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 176);
  *(void *)(*(void *)v1 + 200) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007E4478, v2, 0);
}

uint64_t sub_1007E4478()
{
  uint64_t v1 = *(void *)(v0 + 200);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 200);
    uint64_t v3 = sub_1007E4500;
  }
  else
  {
    uint64_t v3 = sub_1007E4820;
    uint64_t v2 = 0;
  }
  return _swift_task_switch(v3, v2, 0);
}

uint64_t sub_1007E4500()
{
  *(void *)(v0 + 208) = *(void *)(*(void *)(v0 + 200) + 136);
  swift_retain();
  return _swift_task_switch(sub_1007E4574, 0, 0);
}

uint64_t sub_1007E4574()
{
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[27] = v3;
  v3[2] = v1;
  v3[3] = sub_10080D6E4;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[28] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007E467C;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F7348, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_1007E467C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 200);
  return _swift_task_switch(sub_1007E47B8, v2, 0);
}

uint64_t sub_1007E47B8()
{
  swift_release();
  return _swift_task_switch(sub_10080F368, 0, 0);
}

uint64_t sub_1007E4820()
{
  uint64_t v15 = v0;
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[21];
  uint64_t v2 = type metadata accessor for Logger();
  sub_100010324(v2, (uint64_t)qword_10170E3B0);
  sub_10048250C(v1);
  sub_10048250C(v1);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[21];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 141558275;
    v0[18] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2081;
    unint64_t v7 = *(void *)(v5 + 48);
    uint64_t v8 = v0[21];
    if (v7)
    {
      uint64_t v9 = *(void *)(v8 + 40);
      unint64_t v10 = v7;
    }
    else
    {
      unint64_t v10 = 0xE700000000000000;
      uint64_t v9 = 0x6E776F6E6B6E75;
    }
    swift_bridgeObjectRetain();
    v0[19] = sub_1008FA0F0(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10048257C(v8);
    sub_10048257C(v8);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Finished adding connection for context %{private,mask.hash}s.", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v11 = v0[21];
    sub_10048257C(v11);
    sub_10048257C(v11);
  }
  swift_release();

  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

void sub_1007E4A80()
{
  if (*(void *)(v0 + 192))
  {
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100010324(v1, (uint64_t)qword_10170E3B0);
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Location monitor already started - no-op.", v3, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v4 = v0;
    *(unsigned char *)(v0 + 200) = 1;
    id v5 = objc_allocWithZone((Class)type metadata accessor for CurrentLocationMonitor());
    uint64_t v6 = (char *)CurrentLocationMonitor.init(mode:desiredAccuracy:)(0, *(uint64_t *)&kCLLocationAccuracyNearestTenMeters, 0);
    unint64_t v7 = &v6[OBJC_IVAR____TtC12searchpartyd22CurrentLocationMonitor_delegate];
    swift_beginAccess();
    *((void *)v7 + 1) = &off_1015D6990;
    swift_unknownObjectWeakAssign();
    CurrentLocationMonitor.startMonitor()();
    uint64_t v8 = *(void **)(v4 + 192);
    *(void *)(v4 + 192) = v6;
    uint64_t v9 = v6;

    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100010324(v10, (uint64_t)qword_10170E3B0);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Location monitor started.", v13, 2u);
      swift_slowDealloc();
    }

    uint64_t v14 = (void **)&v9[OBJC_IVAR____TtC12searchpartyd22CurrentLocationMonitor_currentLocation];
    swift_beginAccess();
    uint64_t v15 = *v14;
    if (*v14)
    {
      type metadata accessor for Transaction();
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = v4;
      *(void *)(v16 + 24) = v15;
      id v17 = v15;
      uint64_t v18 = v9;
      id v19 = v17;
      swift_retain();
      static Transaction.asyncTask(name:block:)();
      swift_release();
    }
    else
    {
    }
  }
}

uint64_t sub_1007E4D9C()
{
  v1[16] = v0;
  uint64_t v2 = type metadata accessor for Date();
  v1[17] = v2;
  v1[18] = *(void *)(v2 - 8);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  v1[22] = type metadata accessor for LocationFetchConfiguration();
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v1[25] = v3;
  v1[26] = *(void *)(v3 - 8);
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  sub_10000588C(&qword_101638CF0);
  v1[30] = swift_task_alloc();
  v1[31] = swift_task_alloc();
  return _swift_task_switch(sub_1007E4F70, v0, 0);
}

uint64_t sub_1007E4F70()
{
  if (*(void *)(v0[16] + 144))
  {
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100010324(v1, (uint64_t)qword_10170E3B0);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Fetch task pending, not creating a new fetch task.", v4, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    swift_retain();
    unint64_t v7 = (void *)swift_task_alloc();
    v0[32] = v7;
    uint64_t v8 = sub_10000588C(&qword_10164E718);
    *unint64_t v7 = v0;
    v7[1] = sub_1007E51C0;
    uint64_t v9 = v0[16];
    return unsafeBlocking<A>(_:)(v0 + 14, sub_100802CCC, v9, v8);
  }
}

uint64_t sub_1007E51C0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1007E52D8, v1, 0);
}

uint64_t sub_1007E52D8()
{
  uint64_t v150 = v0;
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v119 = *(void *)(v1 + 16);
  if (v119)
  {
    uint64_t v121 = *(void *)(v0 + 112);
    int v3 = *(unsigned __int8 *)(v1 + 32);
    uint64_t v2 = (void *)(v1 + 32);
    int v127 = v3;
    uint64_t v4 = (void *)v2[1];
    uint64_t v6 = (void *)v2[3];
    uint64_t v5 = (void *)v2[4];
    int v118 = v2;
    uint64_t v7 = qword_101636CF0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v132 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v7 != -1) {
      goto LABEL_86;
    }
LABEL_3:
    uint64_t v8 = type metadata accessor for Logger();
    *(void *)(v0 + 264) = sub_100010324(v8, (uint64_t)qword_10170E3B0);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Scheduling next fetch.", v11, 2u);
      swift_slowDealloc();
    }
    uint64_t v12 = *(void *)(v0 + 208);
    uint64_t v120 = *(void *)(v0 + 176);

    id v117 = self;
    unint64_t v13 = 0;
    uint64_t v14 = (void *)(v12 + 56);
    uint64_t v139 = (void (**)(void, void, void))(v12 + 32);
    uint64_t v140 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    uint64_t v122 = v12;
    uint64_t v145 = (void (**)(uint64_t, uint64_t))(v12 + 8);
    v141 = (void *)(v12 + 56);
    while (1)
    {
      if (v13 >= *(void *)(v121 + 16))
      {
        __break(1u);
LABEL_86:
        swift_once();
        goto LABEL_3;
      }
      id v129 = v6;
      unint64_t v125 = v13;
      uint64_t v18 = (unsigned __int8 *)&v118[12 * v13];
      int v123 = *v18;
      uint64_t v19 = *((void *)v18 + 1);
      uint64_t v20 = *((void *)v18 + 3);
      uint64_t v21 = *((void *)v18 + 4);
      unsigned __int8 v115 = v18[57];
      unsigned __int8 v116 = v18[56];
      uint64_t v22 = *((void *)v18 + 8);
      *(void *)(v0 + 272) = v22;
      uint64_t v135 = v4[2];
      sub_10080F07C(&qword_10163BC60, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v130 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v128 = v20;
      swift_bridgeObjectRetain();
      uint64_t v131 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v124 = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v146 = (unsigned char *)Set.init(minimumCapacity:)();
      if (v135)
      {
        uint64_t v23 = 0;
        uint64_t v133 = (char *)v4
             + ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
        uint64_t v24 = *(void *)(v122 + 72);
        uint64_t v25 = *(void (**)(uint64_t, char *, uint64_t))(v122 + 16);
        do
        {
          uint64_t v30 = *(void *)(v0 + 248);
          uint64_t v31 = *(void *)(v0 + 200);
          v25(v30, &v133[v23 * v24], v31);
          v142 = (void (*)(uint64_t, void, uint64_t, uint64_t))*v14;
          ((void (*)(uint64_t, void, uint64_t, uint64_t))*v14)(v30, 0, 1, v31);
          if ((*v140)(v30, 1, v31) == 1)
          {
            uint64_t v43 = v130;
            uint64_t v44 = v132;
            uint64_t v42 = v142;
            goto LABEL_24;
          }
          uint64_t v137 = v23;
          (*v139)(*(void *)(v0 + 232), *(void *)(v0 + 248), *(void *)(v0 + 200));
          swift_bridgeObjectRetain();
          uint64_t v32 = dispatch thunk of Hashable._rawHashValue(seed:)();
          uint64_t v33 = -1 << v146[32];
          unint64_t v34 = v32 & ~v33;
          if ((*(void *)&v146[((v34 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v34))
          {
            uint64_t v35 = ~v33;
            while (1)
            {
              uint64_t v36 = *(void *)(v0 + 224);
              uint64_t v37 = *(void *)(v0 + 200);
              v25(v36, (char *)(*((void *)v146 + 6) + v34 * v24), v37);
              sub_10080F07C((unint64_t *)&qword_10163B8F0, (void (*)(uint64_t))&type metadata accessor for UUID);
              char v38 = dispatch thunk of static Equatable.== infix(_:_:)();
              uint64_t v39 = *v145;
              (*v145)(v36, v37);
              if (v38) {
                break;
              }
              unint64_t v34 = (v34 + 1) & v35;
              if (((*(void *)&v146[((v34 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v34) & 1) == 0) {
                goto LABEL_11;
              }
            }
            uint64_t v40 = *(void *)(v0 + 232);
            uint64_t v41 = *(void *)(v0 + 200);
            swift_bridgeObjectRelease();
            v39(v40, v41);
          }
          else
          {
LABEL_11:
            uint64_t v26 = *(void *)(v0 + 224);
            uint64_t v27 = *(char **)(v0 + 232);
            uint64_t v28 = *(void *)(v0 + 200);
            swift_bridgeObjectRelease();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v25(v26, v27, v28);
            v149[0] = v146;
            sub_100DDDE60(v26, v34, isUniquelyReferenced_nonNull_native);
            uint64_t v146 = v149[0];
            swift_bridgeObjectRelease();
            (*v145)((uint64_t)v27, v28);
          }
          uint64_t v14 = v141;
          uint64_t v23 = v137 + 1;
        }
        while (v137 + 1 != v135);
        uint64_t v43 = v130;
        uint64_t v42 = v142;
      }
      else
      {
        uint64_t v42 = (void (*)(uint64_t, void, uint64_t, uint64_t))*v14;
        uint64_t v43 = v130;
      }
      v42(*(void *)(v0 + 248), 1, 1, *(void *)(v0 + 200));
      uint64_t v44 = v132;
LABEL_24:
      swift_bridgeObjectRelease();
      uint64_t v136 = *(void *)(v43 + 16);
      if (v136)
      {
        uint64_t v134 = v43 + ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
        uint64_t v45 = *(void *)(v122 + 72);
        uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 16);
        swift_bridgeObjectRetain();
        uint64_t v47 = 0;
        v143 = v42;
        do
        {
          uint64_t v52 = *(void *)(v0 + 240);
          uint64_t v53 = *(void *)(v0 + 200);
          v46(v52, v134 + v47 * v45, v53);
          v42(v52, 0, 1, v53);
          if ((*v140)(v52, 1, v53) == 1)
          {
            unint64_t v64 = v129;
            uint64_t v44 = v132;
            goto LABEL_39;
          }
          uint64_t v138 = v47;
          (*v139)(*(void *)(v0 + 216), *(void *)(v0 + 240), *(void *)(v0 + 200));
          swift_bridgeObjectRetain();
          uint64_t v54 = dispatch thunk of Hashable._rawHashValue(seed:)();
          uint64_t v55 = -1 << v146[32];
          unint64_t v56 = v54 & ~v55;
          if ((*(void *)&v146[((v56 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v56))
          {
            uint64_t v57 = ~v55;
            while (1)
            {
              uint64_t v58 = *(void *)(v0 + 224);
              uint64_t v59 = *(void *)(v0 + 200);
              v46(v58, *((void *)v146 + 6) + v56 * v45, v59);
              sub_10080F07C((unint64_t *)&qword_10163B8F0, (void (*)(uint64_t))&type metadata accessor for UUID);
              char v60 = dispatch thunk of static Equatable.== infix(_:_:)();
              uint64_t v61 = *v145;
              (*v145)(v58, v59);
              if (v60) {
                break;
              }
              unint64_t v56 = (v56 + 1) & v57;
              if (((*(void *)&v146[((v56 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v56) & 1) == 0) {
                goto LABEL_26;
              }
            }
            uint64_t v62 = *(void *)(v0 + 216);
            uint64_t v63 = *(void *)(v0 + 200);
            swift_bridgeObjectRelease();
            v61(v62, v63);
          }
          else
          {
LABEL_26:
            uint64_t v49 = *(void *)(v0 + 216);
            uint64_t v48 = *(void *)(v0 + 224);
            uint64_t v50 = *(void *)(v0 + 200);
            swift_bridgeObjectRelease();
            char v51 = swift_isUniquelyReferenced_nonNull_native();
            v46(v48, v49, v50);
            v149[0] = v146;
            sub_100DDDE60(v48, v56, v51);
            uint64_t v146 = v149[0];
            swift_bridgeObjectRelease();
            (*v145)(v49, v50);
          }
          uint64_t v42 = v143;
          uint64_t v47 = v138 + 1;
        }
        while (v138 + 1 != v136);
        uint64_t v44 = v132;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      v42(*(void *)(v0 + 240), 1, 1, *(void *)(v0 + 200));
      unint64_t v64 = v129;
LABEL_39:
      swift_bridgeObjectRelease();
      type metadata accessor for SPBeaconType(0);
      sub_10080F07C(&qword_101637E10, type metadata accessor for SPBeaconType);
      swift_bridgeObjectRetain();
      uint64_t v65 = Set.init(minimumCapacity:)();
      uint64_t v148 = v65;
      uint64_t v66 = v64[2];
      if (v66)
      {
        for (uint64_t i = 0; i != v66; ++i)
        {
          uint64_t v68 = (void *)v64[i + 4];
          sub_100DD0C34(v149, v68);
        }
        swift_bridgeObjectRelease();
        uint64_t v69 = v148;
      }
      else
      {
        uint64_t v69 = v65;
        swift_bridgeObjectRelease();
      }
      uint64_t v70 = *(void *)(v128 + 16);
      if (v70)
      {
        swift_bridgeObjectRetain();
        for (uint64_t j = 0; j != v70; ++j)
        {
          uint64_t v72 = *(void **)(v128 + 8 * j + 32);
          sub_100DD0C34(v149, v72);
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v144 = v69;
      sub_100483504();
      swift_bridgeObjectRetain();
      uint64_t v73 = Set.init(minimumCapacity:)();
      uint64_t v74 = (unsigned char *)v73;
      uint64_t v75 = v44[2];
      if (v75)
      {
        uint64_t v76 = 0;
        uint64_t v77 = v44 + 4;
        uint64_t v78 = (char *)(v73 + 56);
        while (1)
        {
          Swift::UInt v79 = *((unsigned __int8 *)v77 + v76++);
          Hasher.init(_seed:)();
          Hasher._combine(_:)(v79);
          Swift::Int v80 = Hasher._finalize()();
          uint64_t v81 = -1 << v74[32];
          unint64_t v82 = v80 & ~v81;
          if (((*(void *)&v78[(v82 >> 3) & 0xFFFFFFFFFFFFFF8] >> v82) & 1) == 0) {
            goto LABEL_57;
          }
          uint64_t v83 = *((void *)v74 + 6);
          if (*(unsigned __int8 *)(v83 + v82) == v79)
          {
LABEL_50:
            if (v76 == v75) {
              break;
            }
          }
          else
          {
            uint64_t v84 = ~v81;
            while (1)
            {
              unint64_t v82 = (v82 + 1) & v84;
              if (((*(void *)&v78[(v82 >> 3) & 0xFFFFFFFFFFFFFF8] >> v82) & 1) == 0) {
                break;
              }
              if (*(unsigned __int8 *)(v83 + v82) == v79) {
                goto LABEL_50;
              }
            }
LABEL_57:
            char v85 = swift_isUniquelyReferenced_nonNull_native();
            v149[0] = v74;
            sub_100DE5B28(v79, v82, v85);
            uint64_t v74 = v149[0];
            swift_bridgeObjectRelease();
            if (v76 == v75) {
              break;
            }
            uint64_t v78 = v74 + 56;
          }
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v86 = *(void *)(v131 + 16);
      if (!v86) {
        goto LABEL_71;
      }
      swift_bridgeObjectRetain();
      uint64_t v87 = 0;
      for (k = v74 + 56; ; k = v74 + 56)
      {
        while (1)
        {
          Swift::UInt v89 = *(unsigned __int8 *)(v131 + 32 + v87++);
          Hasher.init(_seed:)();
          Hasher._combine(_:)(v89);
          Swift::Int v90 = Hasher._finalize()();
          uint64_t v91 = -1 << v74[32];
          unint64_t v92 = v90 & ~v91;
          if (((*(void *)&k[(v92 >> 3) & 0xFFFFFFFFFFFFFF8] >> v92) & 1) == 0) {
            goto LABEL_68;
          }
          uint64_t v93 = *((void *)v74 + 6);
          if (*(unsigned __int8 *)(v93 + v92) != v89) {
            break;
          }
LABEL_61:
          if (v87 == v86) {
            goto LABEL_70;
          }
        }
        uint64_t v94 = ~v91;
        while (1)
        {
          unint64_t v92 = (v92 + 1) & v94;
          if (((*(void *)&k[(v92 >> 3) & 0xFFFFFFFFFFFFFF8] >> v92) & 1) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v93 + v92) == v89) {
            goto LABEL_61;
          }
        }
LABEL_68:
        char v95 = swift_isUniquelyReferenced_nonNull_native();
        v149[0] = v74;
        sub_100DE5B28(v89, v92, v95);
        uint64_t v74 = v149[0];
        swift_bridgeObjectRelease();
        if (v87 == v86) {
          break;
        }
      }
LABEL_70:
      swift_bridgeObjectRelease();
LABEL_71:
      uint64_t v96 = *(void *)(v0 + 184);
      uint64_t v97 = *(void *)(v0 + 192);
      int v98 = v127;
      sub_10113A364(v127, v97);
      double v99 = *(double *)(v97 + *(int *)(v120 + 32));
      sub_10080F01C(v97, (uint64_t (*)(void))type metadata accessor for LocationFetchConfiguration);
      sub_10113A364(v123, v96);
      double v100 = *(double *)(v96 + *(int *)(v120 + 32));
      sub_10080F01C(v96, (uint64_t (*)(void))type metadata accessor for LocationFetchConfiguration);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v100 < v99) {
        int v98 = v123;
      }
      int v127 = v98;
      uint64_t v4 = sub_1007100E0((uint64_t)v146);
      *(void *)(v0 + 280) = v4;
      swift_bridgeObjectRelease();
      uint64_t v6 = sub_100711214(v144);
      *(void *)(v0 + 288) = v6;
      swift_bridgeObjectRelease();
      uint64_t v132 = sub_100711134((uint64_t)v74);
      *(void *)(v0 + 296) = v132;
      swift_bridgeObjectRelease();
      id v101 = [v117 mainBundle];
      id v102 = [v101 bundleIdentifier];

      if (v102)
      {
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = v16;
      }
      else
      {
        uint64_t v15 = 0;
        uint64_t v17 = 0;
      }
      uint64_t v14 = v141;
      uint64_t v126 = v17;
      *(void *)(v0 + 304) = v17;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v13 = v125 + 1;
      if (v125 + 1 == v119)
      {
        uint64_t v103 = *(void *)(v0 + 192);
        uint64_t v104 = *(void *)(v0 + 160);
        uint64_t v105 = *(void *)(v0 + 144);
        uint64_t v147 = *(void *)(v0 + 136);
        swift_bridgeObjectRelease();
        *(unsigned char *)(v0 + 16) = v127;
        *(void *)(v0 + 24) = v4;
        *(void *)(v0 + 32) = _swiftEmptyArrayStorage;
        *(void *)(v0 + 40) = v6;
        *(void *)(v0 + 48) = v132;
        *(void *)(v0 + 56) = v15;
        *(void *)(v0 + 64) = v126;
        *(unsigned char *)(v0 + 72) = v116;
        *(unsigned char *)(v0 + 73) = v115;
        *(void *)(v0 + 88) = 0;
        *(void *)(v0 + 96) = 0;
        *(void *)(v0 + 80) = v124;
        *(unsigned char *)(v0 + 104) = 1;
        static Date.trustedNow.getter(v104);
        sub_10113A364(v127, v103);
        sub_10080F01C(v103, (uint64_t (*)(void))type metadata accessor for LocationFetchConfiguration);
        Date.addingTimeInterval(_:)();
        uint64_t v106 = *(void (**)(uint64_t, uint64_t))(v105 + 8);
        *(void *)(v0 + 312) = v106;
        *(void *)(v0 + 320) = (v105 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v106(v104, v147);
        uint64_t v107 = (void *)swift_task_alloc();
        *(void *)(v0 + 328) = v107;
        *uint64_t v107 = v0;
        v107[1] = sub_1007E6310;
        uint64_t v108 = *(void *)(v0 + 168);
        return sub_1007E66A8(v108, v0 + 16);
      }
    }
  }
  swift_bridgeObjectRelease();
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v110 = type metadata accessor for Logger();
  sub_100010324(v110, (uint64_t)qword_10170E3B0);
  uint64_t v111 = Logger.logObject.getter();
  os_log_type_t v112 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v111, v112))
  {
    uint64_t v113 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v113 = 0;
    _os_log_impl((void *)&_mh_execute_header, v111, v112, "Not scheduling next fetch. No subscriptions.", v113, 2u);
    swift_slowDealloc();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v114 = *(uint64_t (**)(void))(v0 + 8);
  return v114();
}

uint64_t sub_1007E6310()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1007E64C8, v1, 0);
}

uint64_t sub_1007E64C8()
{
  (*(void (**)(void, void, void))(v0[18] + 16))(v0[19], v0[21], v0[17]);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (void (*)(uint64_t, uint64_t))v0[39];
    uint64_t v4 = v0[19];
    uint64_t v5 = v0[17];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134217984;
    Date.timeIntervalSinceNow.getter();
    v0[15] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v3(v4, v5);
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Next fetch scheduled in %f seconds.", v6, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    uint64_t v8 = (void (*)(uint64_t, uint64_t))v0[39];
    uint64_t v9 = v0[19];
    uint64_t v10 = v0[17];

    v8(v9, v10);
  }
  ((void (*)(void, void))v0[39])(v0[21], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1007E66A8(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  type metadata accessor for UUID();
  v3[5] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Date();
  v3[6] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[7] = v5;
  v3[8] = *(void *)(v5 + 64);
  v3[9] = swift_task_alloc();
  return _swift_task_switch(sub_1007E67A0, v2, 0);
}

uint64_t sub_1007E67A0()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[4];
  uint64_t v7 = v0[2];
  uint64_t v6 = (_OWORD *)v0[3];
  type metadata accessor for WorkItemQueue.WorkItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v7, v3);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v9 = (v2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v10 + v8, v1, v3);
  *(void *)(v10 + v9) = v5;
  uint64_t v11 = (_OWORD *)(v10 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8));
  long long v12 = v6[1];
  *uint64_t v11 = *v6;
  v11[1] = v12;
  long long v14 = v6[3];
  long long v13 = v6[4];
  long long v15 = v6[2];
  *(_OWORD *)((char *)v11 + 73) = *(_OWORD *)((char *)v6 + 73);
  v11[3] = v14;
  v11[4] = v13;
  v11[2] = v15;
  swift_retain();
  sub_10048250C((uint64_t)v6);
  UUID.init()();
  uint64_t v16 = WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  v0[10] = v16;
  uint64_t v17 = *(void *)(v5 + 144);
  v0[11] = v17;
  if (v17)
  {
    uint64_t v21 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of WorkItemQueue.WorkItem.cancel()
                            + async function pointer to dispatch thunk of WorkItemQueue.WorkItem.cancel());
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[12] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1007E6A04;
    return v21();
  }
  else
  {
    *(void *)(v0[4] + 144) = v16;
    swift_retain();
    dispatch thunk of WorkItemQueue.enqueue(_:)();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t sub_1007E6A04()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1007E6B30, v1, 0);
}

uint64_t sub_1007E6B30()
{
  *(void *)(v0[4] + 144) = v0[10];
  swift_retain();
  swift_release();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1007E6BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for UUID();
  v4[6] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for ContinuousClock();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return _swift_task_switch(sub_1007E6CCC, 0, 0);
}

uint64_t sub_1007E6CCC()
{
  Date.timeIntervalSinceNow.getter();
  uint64_t v1 = static Duration.milliseconds(_:)();
  uint64_t v3 = v2;
  ContinuousClock.init()();
  uint64_t v6 = (char *)&dword_1016666E8 + dword_1016666E8;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007E6DC0;
  return ((uint64_t (*)(uint64_t, uint64_t, void, void, uint64_t))v6)(v1, v3, 0, 0, 1);
}

uint64_t sub_1007E6DC0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 72);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *(void *)(*v1 + 56);
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0)
  {
    uint64_t v6 = sub_1007E7150;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    *(void *)(v2 + 96) = type metadata accessor for WorkItemQueue.WorkItem();
    sub_10080F07C(&qword_10164E988, (void (*)(uint64_t))&type metadata accessor for WorkItemQueue.WorkItem);
    uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v11 = v10;
    uint64_t v6 = sub_1007E6FA0;
    uint64_t v7 = v9;
    uint64_t v8 = v11;
  }
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_1007E6FA0()
{
  *(unsigned char *)(v0 + 104) = dispatch thunk of WorkItemQueue.WorkItem.isCancelled.getter() & 1;
  return _swift_task_switch(sub_1007E7010, 0, 0);
}

uint64_t sub_1007E7010()
{
  if ((*(unsigned char *)(v0 + 104) & 1) == 0)
  {
    uint64_t v1 = *(_OWORD **)(v0 + 40);
    uint64_t v2 = *(void *)(v0 + 32);
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    long long v4 = v1[1];
    *(_OWORD *)(v3 + 24) = *v1;
    *(_OWORD *)(v3 + 40) = v4;
    long long v6 = v1[3];
    long long v5 = v1[4];
    long long v7 = *(_OWORD *)((char *)v1 + 73);
    *(_OWORD *)(v3 + 56) = v1[2];
    *(_OWORD *)(v3 + 97) = v7;
    *(_OWORD *)(v3 + 88) = v5;
    *(_OWORD *)(v3 + 72) = v6;
    swift_retain();
    sub_10048250C((uint64_t)v1);
    UUID.init()();
    WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
    dispatch thunk of WorkItemQueue.enqueue(_:)();
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1007E7150()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1007E71C0(uint64_t a1, uint64_t a2)
{
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_100030F18;
  v5[16] = a2;
  v5[17] = a1;
  return _swift_task_switch(sub_1007E7290, a1, 0);
}

uint64_t sub_1007E7270(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v1;
  return _swift_task_switch(sub_1007E7290, v1, 0);
}

uint64_t sub_1007E7290()
{
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v1;
  uint64_t v2 = sub_10000588C(&qword_10164E718);
  *uint64_t v1 = v0;
  v1[1] = sub_1007E7360;
  uint64_t v3 = *(void *)(v0 + 136);
  return unsafeBlocking<A>(_:)(v0 + 120, sub_100802CCC, v3, v2);
}

uint64_t sub_1007E7360()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 136);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1007E7478, v1, 0);
}

uint64_t sub_1007E7478()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 48;
    while (1)
    {
      uint64_t v5 = *(void *)(v3 + 32);
      if (v5)
      {
        if (*(void *)(v3 + 24) == 0xD000000000000017 && v5 == 0x8000000101408490) {
          break;
        }
        if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
          break;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        BOOL v4 = sub_10113BB28();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v4) {
          break;
        }
      }
      v3 += 96;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        uint64_t v0 = v17;
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRelease_n();
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100010324(v6, (uint64_t)qword_10170E3B0);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Location fetch service running fetch task - fetching locations.", v9, 2u);
      swift_slowDealloc();
    }

    sub_1007E4A80();
    uint64_t v10 = (void *)swift_task_alloc();
    v17[19] = v10;
    *uint64_t v10 = v17;
    v10[1] = sub_1007E7A10;
    return sub_1007F2D60();
  }
  else
  {
LABEL_18:
    swift_bridgeObjectRelease();
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100010324(v12, (uint64_t)qword_10170E3B0);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      long long v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Location fetch service fetch task running while all clients suspended - not fetching locations.", v15, 2u);
      swift_slowDealloc();
    }

    sub_1007F1D44();
    sub_1007F67A0();
    *(void *)(v0[17] + 144) = 0;
    swift_release();
    uint64_t v16 = (void *)swift_task_alloc();
    v0[28] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_1007E85A8;
    return sub_1007E4D9C();
  }
}

uint64_t sub_1007E7A10()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 136);
  swift_task_dealloc();
  return _swift_task_switch(sub_1007E7B20, v1, 0);
}

uint64_t sub_1007E7B20()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1007E7C5C;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007E7C5C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 136);
  *(void *)(*(void *)v1 + 168) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007E7D74, v2, 0);
}

uint64_t sub_1007E7D74()
{
  uint64_t v1 = v0[21];
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  if (v1)
  {
    uint64_t v2 = v0[21];
    return _swift_task_switch(sub_1007E7F2C, v2, 0);
  }
  else
  {
    uint64_t v3 = (void *)v0[17];
    uint64_t v4 = (int *)v3[14];
    v0[25] = v4;
    if (v4)
    {
      v0[26] = v3[15];
      uint64_t v9 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
      swift_retain();
      uint64_t v5 = (void *)swift_task_alloc();
      v0[27] = v5;
      void *v5 = v0;
      v5[1] = sub_1007E83BC;
      uint64_t v6 = v0[16];
      return v9(v6);
    }
    else
    {
      v3[18] = 0;
      swift_release();
      uint64_t v7 = (void *)swift_task_alloc();
      v0[28] = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_1007E85A8;
      return sub_1007E4D9C();
    }
  }
}

uint64_t sub_1007E7F2C()
{
  *(void *)(v0 + 176) = *(void *)(*(void *)(v0 + 168) + 136);
  swift_retain();
  return _swift_task_switch(sub_1007E7FA0, 0, 0);
}

uint64_t sub_1007E7FA0()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[23] = v3;
  v3[2] = v1;
  v3[3] = sub_10080D6E4;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[24] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007E80A8;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F7348, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_1007E80A8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 168);
  return _swift_task_switch(sub_1007E81E4, v2, 0);
}

uint64_t sub_1007E81E4()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_release();
  return _swift_task_switch(sub_1007E8250, v1, 0);
}

uint64_t sub_1007E8250()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = (int *)v1[14];
  v0[25] = v2;
  if (v2)
  {
    v0[26] = v1[15];
    uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[27] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1007E83BC;
    uint64_t v4 = v0[16];
    return v7(v4);
  }
  else
  {
    v1[18] = 0;
    swift_release();
    uint64_t v6 = (void *)swift_task_alloc();
    v0[28] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1007E85A8;
    return sub_1007E4D9C();
  }
}

uint64_t sub_1007E83BC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 200);
  uint64_t v2 = *(void *)(*(void *)v0 + 136);
  swift_task_dealloc();
  sub_1000A1534(v1);
  return _swift_task_switch(sub_1007E8508, v2, 0);
}

uint64_t sub_1007E8508()
{
  *(void *)(*(void *)(v0 + 136) + 144) = 0;
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1007E85A8;
  return sub_1007E4D9C();
}

uint64_t sub_1007E85A8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1007E869C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BeaconEstimatedLocation();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    sub_10001D010(a2, (uint64_t)v11);
    sub_10080E7F4(a1, (uint64_t)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
    unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v8;
    sub_10001CEB0(v11, v10 + 24);
    sub_10080ECB8((uint64_t)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
    swift_retain();
    unsafeFromAsyncTask<A>(_:)();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1007E8834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[122] = a4;
  v4[121] = a3;
  v4[120] = a2;
  uint64_t v6 = sub_10000588C((uint64_t *)&unk_10164E790);
  v4[123] = v6;
  v4[124] = *(void *)(v6 - 8);
  v4[125] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_101638D50);
  v4[126] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for BeaconEstimatedLocation();
  v4[127] = v7;
  v4[128] = *(void *)(v7 - 8);
  v4[129] = swift_task_alloc();
  v4[130] = swift_task_alloc();
  v4[131] = swift_task_alloc();
  v4[132] = swift_task_alloc();
  v4[133] = swift_task_alloc();
  v4[134] = swift_task_alloc();
  v4[135] = swift_task_alloc();
  v4[136] = swift_task_alloc();
  v4[137] = swift_task_alloc();
  v4[138] = swift_task_alloc();
  v4[139] = swift_task_alloc();
  sub_10000588C(&qword_101638CF0);
  v4[140] = swift_task_alloc();
  v4[141] = swift_task_alloc();
  v4[142] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  v4[143] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v4[144] = v9;
  v4[145] = *(void *)(v9 + 64);
  v4[146] = swift_task_alloc();
  v4[147] = swift_task_alloc();
  v4[148] = swift_task_alloc();
  v4[149] = swift_task_alloc();
  v4[150] = swift_task_alloc();
  v4[151] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Date();
  v4[152] = v10;
  v4[153] = *(void *)(v10 - 8);
  v4[154] = swift_task_alloc();
  return _swift_task_switch(sub_1007E8B58, a2, 0);
}

uint64_t sub_1007E8B58()
{
  *(unsigned char *)(v0 + 1592) = *(unsigned char *)(*(void *)(v0 + 960) + 200);
  return _swift_task_switch(sub_1007E8B80, 0, 0);
}

uint64_t sub_1007E8B80()
{
  uint64_t v18 = v0;
  if (*(unsigned char *)(v0 + 1592) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 960);
    return _swift_task_switch(sub_1007E8FB4, v1, 0);
  }
  else
  {
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v2 = *(void *)(v0 + 968);
    uint64_t v3 = type metadata accessor for Logger();
    sub_100010324(v3, (uint64_t)qword_10170E3B0);
    sub_10001D010(v2, v0 + 408);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = *(void *)(v0 + 1200);
      uint64_t v7 = *(void *)(v0 + 1152);
      uint64_t v8 = *(void *)(v0 + 1144);
      uint64_t v9 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 141558275;
      *(void *)(v0 + 912) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v9 + 12) = 2081;
      uint64_t v11 = *(void *)(v0 + 432);
      uint64_t v10 = *(void *)(v0 + 440);
      sub_10001CD44((void *)(v0 + 408), v11);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v10 + 8) + 8) + 32))(v11);
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v14 = v13;
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
      *(void *)(v0 + 904) = sub_1008FA0F0(v12, v14, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 408);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Ignoring beacon location updates while not processing - beacon: %{private,mask.hash}s.", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 408);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
}

uint64_t sub_1007E8FB4()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 248, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 272))
  {
    sub_10001CEB0((long long *)(v0 + 248), v0 + 168);
    sub_10001CD44((void *)(v0 + 168), *(void *)(v0 + 192));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 1240) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1007E90F0;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007E90F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 960);
  *(void *)(*(void *)v1 + 1248) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007E9208, v2, 0);
}

uint64_t sub_1007E9208()
{
  uint64_t v1 = (uint64_t)(v0 + 21);
  if (v0[156])
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[157] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1007E92E8;
    uint64_t v3 = v0[121];
    return sub_100E630C0(v3);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    return _swift_task_switch(sub_1007E9DD4, 0, 0);
  }
}

uint64_t sub_1007E92E8(double a1)
{
  *(double *)(*(void *)v1 + 1264) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1007E9404, 0, 0);
}

uint64_t sub_1007E9404()
{
  uint64_t v78 = v0;
  double v1 = *(double *)(v0 + 1264);
  uint64_t v2 = *(void *)(v0 + 1016);
  uint64_t v3 = *(void *)(v0 + 976);
  uint64_t v4 = *(void **)(v0 + 968);
  sub_10000588C((uint64_t *)&unk_10164E7A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101342130;
  *(void *)(inited + 56) = v2;
  *(void *)(inited + 64) = &off_1015BBDC8;
  uint64_t v6 = sub_10001D958((uint64_t *)(inited + 32));
  sub_10080E7F4(v3, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
  uint64_t v8 = v4[3];
  uint64_t v7 = v4[4];
  sub_10001CD44(v4, v8);
  uint64_t v9 = sub_10110171C(v8, v7);
  id v10 = sub_1011030EC(inited, v9, v1);
  *(void *)(v0 + 1272) = v10;
  swift_setDeallocating();
  sub_10000588C((uint64_t *)&unk_101657B00);
  swift_arrayDestroy();
  if (!v10)
  {
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v45 = *(void *)(v0 + 968);
    uint64_t v46 = type metadata accessor for Logger();
    sub_100010324(v46, (uint64_t)qword_10170E3B0);
    sub_10001D010(v45, v0 + 288);
    uint64_t v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = *(void *)(v0 + 1200);
      uint64_t v50 = *(void *)(v0 + 1152);
      uint64_t v75 = *(void *)(v0 + 1144);
      uint64_t v51 = swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      *(_DWORD *)uint64_t v51 = 141558275;
      *(void *)(v0 + 944) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v51 + 12) = 2081;
      uint64_t v53 = *(void *)(v0 + 312);
      uint64_t v52 = *(void *)(v0 + 320);
      sub_10001CD44((void *)(v0 + 288), v53);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v52 + 8) + 8) + 32))(v53);
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v54 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v56 = v55;
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v75);
      *(void *)(v0 + 936) = sub_1008FA0F0(v54, v56, &v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 288);
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "Could not produce filtered location for beacon %{private,mask.hash}s.", (uint8_t *)v51, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 288);
    }

    goto LABEL_18;
  }
  uint64_t v11 = *(void *)(v0 + 1232);
  uint64_t v12 = *(void *)(v0 + 1224);
  uint64_t v13 = *(void *)(v0 + 1152);
  uint64_t v74 = *(void *)(v0 + 1216);
  uint64_t v76 = *(void *)(v0 + 1144);
  uint64_t v14 = *(void *)(v0 + 1136);
  uint64_t v15 = *(void *)(v0 + 1016);
  uint64_t v16 = *(void *)(v0 + 976);
  uint64_t v73 = *(void **)(v0 + 968);
  id v17 = [v10 timestamp];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  [v10 coordinate];
  double v19 = v18;
  [v10 coordinate];
  double v21 = v20;
  [v10 horizontalAccuracy];
  double v23 = v22;
  uint64_t v24 = *(int *)(v15 + 44);
  *(_DWORD *)(v0 + 1584) = v24;
  uint64_t v25 = (void *)sub_101103478(*(unsigned char *)(v16 + v24));
  id v26 = objc_allocWithZone((Class)SPBeaconLocation);
  id v27 = v25;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  *(void *)(v0 + 1280) = [v26 initWithTimestamp:isa latitude:v27 longitude:v19 horizontalAccuracy:v21 source:v23];

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v74);
  uint64_t v29 = v4[3];
  uint64_t v30 = v4[4];
  sub_10001CD44(v73, v29);
  (*(void (**)(uint64_t, uint64_t))(v30 + 192))(v29, v30);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  *(void *)(v0 + 1288) = v31;
  *(void *)(v0 + 1296) = (v13 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v31(v14, 1, v76) == 1)
  {
    uint64_t v32 = (long long *)(v0 + 488);
    sub_10001DAB4(*(void *)(v0 + 1136), &qword_101638CF0);
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v33 = *(void *)(v0 + 968);
    uint64_t v34 = type metadata accessor for Logger();
    sub_100010324(v34, (uint64_t)qword_10170E3B0);
    sub_10001D010(v33, v0 + 448);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = *(void *)(v0 + 1200);
      uint64_t v38 = *(void *)(v0 + 1152);
      uint64_t v72 = *(void *)(v0 + 1144);
      uint64_t v39 = swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 141558275;
      *(void *)(v0 + 928) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v39 + 12) = 2081;
      uint64_t v41 = *(void *)(v0 + 472);
      uint64_t v40 = *(void *)(v0 + 480);
      sub_10001CD44((void *)(v0 + 448), v41);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v40 + 8) + 8) + 32))(v41);
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v44 = v43;
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v72);
      *(void *)(v0 + 920) = sub_1008FA0F0(v42, v44, &v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 448);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Updating location for subscribers - from beacon store update for beacon %{private,mask.hash}s.", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      uint64_t v32 = (long long *)(v0 + 488);
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 448);
    }

    uint64_t v63 = *(void **)(v0 + 1280);
    unint64_t v64 = *(void **)(v0 + 1272);
    uint64_t v65 = *(void *)(v0 + 968);
    uint64_t v66 = *(void *)(*(void *)(v0 + 960) + 160);
    char v67 = *(unsigned char *)(*(void *)(v0 + 976) + *(int *)(v0 + 1584));
    type metadata accessor for Transaction();
    sub_10001D010(v65, (uint64_t)v32);
    uint64_t v68 = swift_allocObject();
    sub_10001CEB0(v32, v68 + 16);
    *(void *)(v68 + 56) = v66;
    *(void *)(v68 + 64) = v63;
    *(unsigned char *)(v68 + 72) = v67;
    id v69 = v63;
    swift_retain();
    static Transaction.asyncTask(name:block:)();
    swift_release();

LABEL_18:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v70 = *(uint64_t (**)(void))(v0 + 8);
    return v70();
  }
  uint64_t v57 = *(void *)(v0 + 1208);
  uint64_t v58 = *(void *)(v0 + 1152);
  uint64_t v59 = *(void *)(v0 + 1144);
  uint64_t v60 = *(void *)(v0 + 1136);
  uint64_t v61 = *(void *)(v0 + 960);
  uint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32);
  *(void *)(v0 + 1304) = v62;
  *(void *)(v0 + 1312) = (v58 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v62(v57, v60, v59);
  return _swift_task_switch(sub_1007EA1B4, v61, 0);
}

uint64_t sub_1007E9DD4()
{
  id v17 = v0;
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[121];
  uint64_t v2 = type metadata accessor for Logger();
  sub_100010324(v2, (uint64_t)qword_10170E3B0);
  sub_10001D010(v1, (uint64_t)(v0 + 36));
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[150];
    uint64_t v6 = v0[144];
    uint64_t v7 = v0[143];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 141558275;
    v0[118] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2081;
    uint64_t v10 = v0[39];
    uint64_t v9 = v0[40];
    sub_10001CD44(v0 + 36, v10);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v9 + 8) + 8) + 32))(v10);
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v13 = v12;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    v0[117] = sub_1008FA0F0(v11, v13, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 36));
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Could not produce filtered location for beacon %{private,mask.hash}s.", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 36));
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1007EA1B4()
{
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 128, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 152))
  {
    sub_10001CEB0((long long *)(v0 + 128), v0 + 88);
    sub_10001CD44((void *)(v0 + 88), *(void *)(v0 + 112));
    uint64_t v3 = (uint64_t (*)(void))((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 1320) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1007EA2A0;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007EA2A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 960);
  *(void *)(*(void *)v1 + 1328) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007EA3B8, v2, 0);
}

uint64_t sub_1007EA3B8()
{
  uint64_t v1 = *(void *)(v0 + 1328);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 88);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 1328);
    uint64_t v3 = sub_1007EA440;
  }
  else
  {
    uint64_t v3 = sub_1007EB5A4;
    uint64_t v2 = 0;
  }
  return _swift_task_switch(v3, v2, 0);
}

uint64_t sub_1007EA440()
{
  uint64_t v1 = *(void *)(v0 + 1328);
  uint64_t v2 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 1304);
  uint64_t v3 = *(void *)(v0 + 1208);
  uint64_t v4 = *(void *)(v0 + 1200);
  uint64_t v5 = *(void *)(v0 + 1152);
  uint64_t v6 = *(void *)(v0 + 1144);
  *(void *)(v0 + 1336) = *(void *)(v1 + 136);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v5 += 16;
  *(void *)(v0 + 1344) = v7;
  *(void *)(v0 + 1352) = v5 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v4, v3, v6);
  int v8 = *(_DWORD *)(v5 + 64);
  *(_DWORD *)(v0 + 1588) = v8;
  unint64_t v9 = (v8 + 24) & ~(unint64_t)v8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v0 + 1360) = v10;
  *(void *)(v10 + 16) = v1;
  v2(v10 + v9, v4, v6);
  swift_retain();
  return _swift_task_switch(sub_1007EA554, 0, 0);
}

uint64_t sub_1007EA554()
{
  uint64_t v1 = v0[170];
  uint64_t v2 = v0[167];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[171] = v3;
  v3[2] = v2;
  v3[3] = sub_10080DE24;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[172] = v4;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_10164E7C0);
  *uint64_t v4 = v0;
  v4[1] = sub_1007EA670;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 81, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10080DE3C, v3, v5);
}

uint64_t sub_1007EA670()
{
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1007EA7C8, 0, 0);
}

uint64_t sub_1007EA7C8()
{
  uint64_t v95 = v0;
  if (!*(void *)(v0 + 672))
  {
    (*(void (**)(void, void))(*(void *)(v0 + 1152) + 8))(*(void *)(v0 + 1208), *(void *)(v0 + 1144));
    sub_10001DAB4(v0 + 648, (uint64_t *)&unk_10164E7C0);
    goto LABEL_38;
  }
  sub_10001CEB0((long long *)(v0 + 648), v0 + 608);
  uint64_t v1 = *(void *)(v0 + 632);
  uint64_t v2 = *(void *)(v0 + 640);
  sub_10001CD44((void *)(v0 + 608), v1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  *(void *)(v0 + 1384) = v3;
  char v4 = *(unsigned char *)(v3 + 32);
  *(unsigned char *)(v0 + 1593) = v4;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << v4;
  uint64_t v7 = *(void *)(v3 + 56);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  *(unsigned char *)(v0 + 1594) = 0;
  unint64_t v8 = v5 & v7;
  if (v8)
  {
    uint64_t v9 = 0;
    unint64_t v10 = __clz(__rbit64(v8));
    uint64_t v11 = (v8 - 1) & v8;
    goto LABEL_6;
  }
  unint64_t v19 = 63 - v6;
  if (v19 > 0x7F)
  {
    unint64_t v20 = *(void *)(v3 + 64);
    if (v20)
    {
      uint64_t v9 = 1;
LABEL_13:
      uint64_t v11 = (v20 - 1) & v20;
      unint64_t v10 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_6:
      *(void *)(v0 + 1400) = v11;
      *(void *)(v0 + 1392) = v9;
      uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1288);
      uint64_t v13 = *(void *)(v0 + 1152);
      uint64_t v14 = *(void *)(v0 + 1144);
      uint64_t v15 = *(void *)(v0 + 1128);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 1344))(v15, *(void *)(v3 + 48) + *(void *)(v13 + 72) * v10, v14);
      uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
      *(void *)(v0 + 1408) = v16;
      v16(v15, 0, 1, v14);
      if (v12(v15, 1, v14) != 1)
      {
        uint64_t v17 = *(void *)(v0 + 960);
        (*(void (**)(void, void, void))(v0 + 1304))(*(void *)(v0 + 1192), *(void *)(v0 + 1128), *(void *)(v0 + 1144));
        uint64_t v18 = sub_1007EBA78;
LABEL_47:
        return _swift_task_switch(v18, v17, 0);
      }
      goto LABEL_30;
    }
    if (v19 >= 0xC0)
    {
      unint64_t v20 = *(void *)(v3 + 72);
      if (v20)
      {
        uint64_t v9 = 2;
        goto LABEL_13;
      }
      if (v19 >= 0x100)
      {
        unint64_t v20 = *(void *)(v3 + 80);
        if (v20)
        {
          uint64_t v9 = 3;
          goto LABEL_13;
        }
        if (v19 >= 0x140)
        {
          unint64_t v20 = *(void *)(v3 + 88);
          if (v20)
          {
            uint64_t v9 = 4;
            goto LABEL_13;
          }
          uint64_t v21 = 0;
          uint64_t v22 = v19 >> 6;
          if (v22 <= 5) {
            uint64_t v22 = 5;
          }
          uint64_t v23 = v22 - 5;
          while (v23 != v21)
          {
            unint64_t v20 = *(void *)(v3 + 96 + 8 * v21++);
            if (v20)
            {
              uint64_t v9 = v21 + 4;
              goto LABEL_13;
            }
          }
        }
      }
    }
  }
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1152) + 56);
  v16(*(void *)(v0 + 1128), 1, 1, *(void *)(v0 + 1144));
LABEL_30:
  swift_release();
  *(void *)(v0 + 1472) = v16;
  if (*(unsigned char *)(v0 + 1594))
  {
    uint64_t v24 = *(void *)(v0 + 632);
    uint64_t v25 = *(void *)(v0 + 640);
    sub_10001CD44((void *)(v0 + 608), v24);
    uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25);
    *(void *)(v0 + 1480) = v26;
    char v27 = *(unsigned char *)(v26 + 32);
    *(unsigned char *)(v0 + 1595) = v27;
    uint64_t v28 = -1;
    uint64_t v29 = -1 << v27;
    uint64_t v30 = *(void *)(v26 + 56);
    if (-v29 < 64) {
      uint64_t v28 = ~(-1 << -(char)v29);
    }
    *(void *)(v0 + 1488) = _swiftEmptyArrayStorage;
    unint64_t v31 = v28 & v30;
    if (v31)
    {
      uint64_t v32 = 0;
      unint64_t v33 = __clz(__rbit64(v31));
      uint64_t v34 = (v31 - 1) & v31;
LABEL_35:
      *(void *)(v0 + 1504) = v34;
      *(void *)(v0 + 1496) = v32;
      uint64_t v35 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1472);
      os_log_type_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1288);
      uint64_t v37 = *(void *)(v0 + 1144);
      uint64_t v38 = *(void *)(v0 + 1120);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 1344))(v38, *(void *)(v26 + 48) + *(void *)(*(void *)(v0 + 1152) + 72) * v33, v37);
      v35(v38, 0, 1, v37);
      if (v36(v38, 1, v37) == 1) {
        goto LABEL_70;
      }
      uint64_t v17 = *(void *)(v0 + 960);
      (*(void (**)(void, void, void))(v0 + 1304))(*(void *)(v0 + 1176), *(void *)(v0 + 1120), *(void *)(v0 + 1144));
      uint64_t v18 = sub_1007EE094;
      goto LABEL_47;
    }
    unint64_t v61 = 63 - v29;
    if (v61 > 0x7F)
    {
      unint64_t v62 = *(void *)(v26 + 64);
      if (v62)
      {
        uint64_t v32 = 1;
LABEL_53:
        uint64_t v34 = (v62 - 1) & v62;
        unint64_t v33 = __clz(__rbit64(v62)) + (v32 << 6);
        goto LABEL_35;
      }
      if (v61 >= 0xC0)
      {
        unint64_t v62 = *(void *)(v26 + 72);
        if (v62)
        {
          uint64_t v32 = 2;
          goto LABEL_53;
        }
        if (v61 >= 0x100)
        {
          unint64_t v62 = *(void *)(v26 + 80);
          if (v62)
          {
            uint64_t v32 = 3;
            goto LABEL_53;
          }
          if (v61 >= 0x140)
          {
            unint64_t v62 = *(void *)(v26 + 88);
            if (v62)
            {
              uint64_t v32 = 4;
              goto LABEL_53;
            }
            uint64_t v63 = 0;
            uint64_t v64 = v61 >> 6;
            if (v64 <= 5) {
              uint64_t v64 = 5;
            }
            uint64_t v65 = v64 - 5;
            while (v65 != v63)
            {
              unint64_t v62 = *(void *)(v26 + 96 + 8 * v63++);
              if (v62)
              {
                uint64_t v32 = v63 + 4;
                goto LABEL_53;
              }
            }
          }
        }
      }
    }
    (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 1472))(*(void *)(v0 + 1120), 1, 1, *(void *)(v0 + 1144));
LABEL_70:
    swift_release();
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1344);
    uint64_t v67 = *(void *)(v0 + 1208);
    uint64_t v68 = *(void *)(v0 + 1184);
    uint64_t v69 = *(void *)(v0 + 1144);
    uint64_t v70 = *(void *)(v0 + 968);
    uint64_t v71 = type metadata accessor for Logger();
    sub_100010324(v71, (uint64_t)qword_10170E3B0);
    v66(v68, v67, v69);
    sub_10001D010(v70, v0 + 768);
    uint64_t v72 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v92 = *(void *)(v0 + 1200);
      uint64_t v93 = v72;
      uint64_t v74 = *(void *)(v0 + 1184);
      uint64_t v75 = *(void *)(v0 + 1152);
      uint64_t v76 = *(void *)(v0 + 1144);
      uint64_t v77 = swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      *(_DWORD *)uint64_t v77 = 141558787;
      *(void *)(v0 + 872) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v77 + 12) = 2081;
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v78 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 880) = sub_1008FA0F0(v78, v79, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      Swift::Int v80 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
      v80(v74, v76);
      *(_WORD *)(v77 + 22) = 2160;
      *(void *)(v0 + 888) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v77 + 32) = 2081;
      uint64_t v81 = *(void *)(v0 + 792);
      uint64_t v82 = *(void *)(v0 + 800);
      sub_10001CD44((void *)(v0 + 768), v81);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v82 + 8) + 8) + 32))(v81);
      uint64_t v83 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v85 = v84;
      v80(v92, v76);
      *(void *)(v0 + 896) = sub_1008FA0F0(v83, v85, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 768);
      uint64_t v72 = v93;
      _os_log_impl((void *)&_mh_execute_header, v93, v73, "Updating location for subscribers - from beacon store update for beacongroup: %{private,mask.hash}s, beacon: %{private,mask.hash}s.", (uint8_t *)v77, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      Swift::Int v80 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1152) + 8);
      v80(*(void *)(v0 + 1184), *(void *)(v0 + 1144));
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 768);
    }

    *(void *)(v0 + 1560) = v80;
    uint64_t v86 = *(void **)(v0 + 1280);
    uint64_t v87 = *(void *)(v0 + 968);
    uint64_t v88 = *(void *)(v0 + 960);
    sub_10001D010(v0 + 608, v0 + 808);
    sub_10001D010(v87, v0 + 208);
    Swift::UInt v89 = (void *)swift_allocObject();
    *(void *)(v0 + 1568) = v89;
    v89[2] = v88;
    v89[3] = _swiftEmptyArrayStorage;
    sub_10001CEB0((long long *)(v0 + 808), (uint64_t)(v89 + 4));
    sub_10001CEB0((long long *)(v0 + 208), (uint64_t)(v89 + 9));
    v89[14] = v86;
    id v90 = v86;
    swift_retain();
    uint64_t v91 = (void *)swift_task_alloc();
    *(void *)(v0 + 1576) = v91;
    *uint64_t v91 = v0;
    v91[1] = sub_1007EF5A4;
    return unsafeBlocking<A>(_:)(v91, sub_10080DEA0, v89, (char *)&type metadata for () + 8);
  }
  (*(void (**)(void, void))(*(void *)(v0 + 1152) + 8))(*(void *)(v0 + 1208), *(void *)(v0 + 1144));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 608);
LABEL_38:
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v39 = *(void *)(v0 + 968);
  uint64_t v40 = type metadata accessor for Logger();
  sub_100010324(v40, (uint64_t)qword_10170E3B0);
  sub_10001D010(v39, v0 + 448);
  uint64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = *(void *)(v0 + 1200);
    uint64_t v44 = *(void *)(v0 + 1152);
    uint64_t v45 = *(void *)(v0 + 1144);
    uint64_t v46 = swift_slowAlloc();
    uint64_t v94 = swift_slowAlloc();
    *(_DWORD *)uint64_t v46 = 141558275;
    *(void *)(v0 + 928) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v46 + 12) = 2081;
    uint64_t v48 = *(void *)(v0 + 472);
    uint64_t v47 = *(void *)(v0 + 480);
    sub_10001CD44((void *)(v0 + 448), v48);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v47 + 8) + 8) + 32))(v48);
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v51 = v50;
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
    *(void *)(v0 + 920) = sub_1008FA0F0(v49, v51, &v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 448);
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Updating location for subscribers - from beacon store update for beacon %{private,mask.hash}s.", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 448);
  }

  uint64_t v52 = *(void **)(v0 + 1280);
  uint64_t v53 = *(void **)(v0 + 1272);
  uint64_t v54 = *(void *)(v0 + 968);
  uint64_t v55 = *(void *)(*(void *)(v0 + 960) + 160);
  char v56 = *(unsigned char *)(*(void *)(v0 + 976) + *(int *)(v0 + 1584));
  type metadata accessor for Transaction();
  sub_10001D010(v54, v0 + 488);
  uint64_t v57 = swift_allocObject();
  sub_10001CEB0((long long *)(v0 + 488), v57 + 16);
  *(void *)(v57 + 56) = v55;
  *(void *)(v57 + 64) = v52;
  *(unsigned char *)(v57 + 72) = v56;
  id v58 = v52;
  swift_retain();
  static Transaction.asyncTask(name:block:)();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v59 = *(uint64_t (**)(void))(v0 + 8);
  return v59();
}

uint64_t sub_1007EB5A4()
{
  uint64_t v24 = v0;
  *(void *)(v0 + 680) = 0;
  *(_OWORD *)(v0 + 648) = 0u;
  *(_OWORD *)(v0 + 664) = 0u;
  (*(void (**)(void, void))(*(void *)(v0 + 1152) + 8))(*(void *)(v0 + 1208), *(void *)(v0 + 1144));
  sub_10001DAB4(v0 + 648, (uint64_t *)&unk_10164E7C0);
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 968);
  uint64_t v2 = type metadata accessor for Logger();
  sub_100010324(v2, (uint64_t)qword_10170E3B0);
  sub_10001D010(v1, v0 + 448);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void *)(v0 + 1200);
    uint64_t v6 = *(void *)(v0 + 1152);
    uint64_t v7 = *(void *)(v0 + 1144);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 141558275;
    *(void *)(v0 + 928) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2081;
    uint64_t v10 = *(void *)(v0 + 472);
    uint64_t v9 = *(void *)(v0 + 480);
    sub_10001CD44((void *)(v0 + 448), v10);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v9 + 8) + 8) + 32))(v10);
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v13 = v12;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    *(void *)(v0 + 920) = sub_1008FA0F0(v11, v13, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 448);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Updating location for subscribers - from beacon store update for beacon %{private,mask.hash}s.", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 448);
  }

  uint64_t v14 = *(void **)(v0 + 1280);
  uint64_t v15 = *(void **)(v0 + 1272);
  uint64_t v16 = *(void *)(v0 + 968);
  uint64_t v17 = *(void *)(*(void *)(v0 + 960) + 160);
  char v18 = *(unsigned char *)(*(void *)(v0 + 976) + *(int *)(v0 + 1584));
  type metadata accessor for Transaction();
  sub_10001D010(v16, v0 + 488);
  uint64_t v19 = swift_allocObject();
  sub_10001CEB0((long long *)(v0 + 488), v19 + 16);
  *(void *)(v19 + 56) = v17;
  *(void *)(v19 + 64) = v14;
  *(unsigned char *)(v19 + 72) = v18;
  id v20 = v14;
  swift_retain();
  static Transaction.asyncTask(name:block:)();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_1007EBA78()
{
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 328, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 352))
  {
    sub_10001CEB0((long long *)(v0 + 328), v0 + 368);
    sub_10001CD44((void *)(v0 + 368), *(void *)(v0 + 392));
    uint64_t v3 = (uint64_t (*)(void))((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 1416) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1007EBB64;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007EBB64(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 960);
  *(void *)(*(void *)v1 + 1424) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007EBC7C, v2, 0);
}

uint64_t sub_1007EBC7C()
{
  uint64_t v1 = *(void *)(v0 + 1424);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 368);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 1424);
    uint64_t v3 = sub_1007EBD04;
  }
  else
  {
    uint64_t v3 = sub_1007ED4B0;
    uint64_t v2 = 0;
  }
  return _swift_task_switch(v3, v2, 0);
}

uint64_t sub_1007EBD04()
{
  uint64_t v1 = *(void *)(v0 + 1424);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1344);
  uint64_t v3 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 1304);
  uint64_t v4 = *(void *)(v0 + 1200);
  uint64_t v5 = *(void *)(v0 + 1192);
  uint64_t v6 = *(void *)(v0 + 1144);
  unint64_t v7 = (*(unsigned __int8 *)(v0 + 1588) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1588);
  *(void *)(v0 + 1432) = *(void *)(v1 + 136);
  v2(v4, v5, v6);
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 1440) = v8;
  *(void *)(v8 + 16) = v1;
  v3(v8 + v7, v4, v6);
  swift_retain();
  return _swift_task_switch(sub_1007EBE00, 0, 0);
}

uint64_t sub_1007EBE00()
{
  uint64_t v1 = v0[180];
  uint64_t v2 = v0[179];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[181] = v3;
  v3[2] = v2;
  v3[3] = sub_10080DF5C;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[182] = v4;
  uint64_t v5 = sub_10000588C(&qword_101649718);
  *uint64_t v4 = v0;
  v4[1] = sub_1007EBF1C;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 119, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10080DFD0, v3, v5);
}

uint64_t sub_1007EBF1C()
{
  uint64_t v1 = (void *)*v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  v1[183] = v1[119];
  uint64_t v2 = v1[178];
  return _swift_task_switch(sub_1007EC088, v2, 0);
}

uint64_t sub_1007EC088()
{
  swift_release();
  return _swift_task_switch(sub_1007EC0F0, 0, 0);
}

uint64_t sub_1007EC0F0()
{
  uint64_t v167 = v0;
  v165 = (void *)(v0 + 608);
  uint64_t v1 = *(void *)(v0 + 1464);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(unsigned __int8 *)(*(void *)(v0 + 1024) + 80);
    uint64_t v4 = (v3 + 32) & ~v3;
    sub_10080E7F4(v1 + v4, *(void *)(v0 + 1104), (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
    swift_bridgeObjectRetain();
    uint64_t v5 = v2 - 1;
    if (v2 != 1)
    {
      uint64_t v83 = *(void *)(*(void *)(v0 + 1024) + 72);
      uint64_t v84 = v1 + v83 + v4;
      do
      {
        sub_10080E7F4(v84, *(void *)(v0 + 1096), (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
        if (static Date.< infix(_:_:)())
        {
          uint64_t v85 = *(void *)(v0 + 1104);
          uint64_t v86 = *(void *)(v0 + 1096);
          sub_10080F01C(v85, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
          sub_10080ECB8(v86, v85, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
        }
        else
        {
          sub_10080F01C(*(void *)(v0 + 1096), (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
        }
        v84 += v83;
        --v5;
      }
      while (v5);
    }
    uint64_t v6 = *(void *)(v0 + 1104);
    uint64_t v7 = *(void *)(v0 + 1024);
    uint64_t v8 = *(void *)(v0 + 1016);
    uint64_t v9 = *(void *)(v0 + 1008);
    swift_bridgeObjectRelease();
    sub_10080ECB8(v6, v9, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v8);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 1024) + 56))(*(void *)(v0 + 1008), 1, 1, *(void *)(v0 + 1016));
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v0 + 1016);
  uint64_t v11 = *(void *)(v0 + 1008);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1024) + 48))(v11, 1, v10) != 1)
  {
    uint64_t v28 = *(void *)(v0 + 1112);
    uint64_t v29 = *(void *)(v0 + 1088);
    uint64_t v30 = *(void *)(v0 + 1080);
    uint64_t v31 = *(void *)(v0 + 976);
    sub_10080ECB8(v11, v28, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
    uint64_t v32 = *(int *)(v10 + 28);
    double v33 = *(double *)(v31 + v32);
    double v34 = *(double *)(v28 + v32);
    sub_10080E7F4(v31, v29, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
    sub_10080E7F4(v28, v30, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
    uint64_t v35 = *(void *)(v0 + 1112);
    uint64_t v36 = *(void *)(v0 + 1088);
    uint64_t v37 = *(void *)(v0 + 1080);
    uint64_t v38 = *(void *)(v0 + 1072);
    uint64_t v39 = *(void *)(v0 + 1064);
    if (v33 == v34)
    {
      uint64_t v40 = *(void *)(v0 + 1016);
      uint64_t v41 = *(void *)(v0 + 976);
      double v42 = *(double *)(v36 + *(int *)(v40 + 32));
      sub_10080F01C(*(void *)(v0 + 1088), (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
      double v43 = *(double *)(v37 + *(int *)(v40 + 32));
      sub_10080F01C(v37, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
      sub_10080E7F4(v41, v38, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
      sub_10080E7F4(v35, v39, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
      if (v42 == v43)
      {
        uint64_t v44 = *(void *)(v0 + 1112);
        uint64_t v45 = *(void *)(v0 + 1072);
        uint64_t v46 = *(void *)(v0 + 1064);
        uint64_t v47 = *(void *)(v0 + 1056);
        uint64_t v48 = *(void *)(v0 + 1048);
        uint64_t v49 = *(void *)(v0 + 1016);
        uint64_t v50 = *(void *)(v0 + 976);
        double v51 = *(double *)(v45 + *(int *)(v49 + 36));
        sub_10080F01C(v45, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
        double v52 = *(double *)(v46 + *(int *)(v49 + 36));
        sub_10080F01C(v46, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
        sub_10080E7F4(v50, v47, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
        sub_10080E7F4(v44, v48, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
        if (v51 == v52)
        {
          uint64_t v53 = *(void *)(v0 + 1112);
          uint64_t v54 = *(void *)(v0 + 1056);
          uint64_t v55 = *(void *)(v0 + 1048);
          uint64_t v56 = *(void *)(v0 + 1040);
          uint64_t v57 = *(void *)(v0 + 1032);
          uint64_t v58 = *(void *)(v0 + 976);
          char v59 = static Date.== infix(_:_:)();
          sub_10080F01C(v55, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
          sub_10080F01C(v54, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
          sub_10080E7F4(v58, v56, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
          sub_10080E7F4(v53, v57, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
          if (v59)
          {
            uint64_t v60 = *(void *)(v0 + 1192);
            uint64_t v61 = *(void *)(v0 + 1152);
            uint64_t v62 = *(void *)(v0 + 1144);
            uint64_t v63 = *(void *)(v0 + 1112);
            uint64_t v64 = *(void *)(v0 + 1040);
            uint64_t v65 = *(void *)(v0 + 1032);
            uint64_t v66 = *(int *)(*(void *)(v0 + 1016) + 44);
            int v67 = *(unsigned __int8 *)(v64 + v66);
            int v68 = *(unsigned __int8 *)(v65 + v66);
            sub_10080F01C(v65, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
            sub_10080F01C(v64, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
            sub_10080F01C(v63, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
            uint64_t v69 = *(uint64_t (**)(uint64_t, uint64_t))(v61 + 8);
            uint64_t v70 = (void *)v69(v60, v62);
            if (v67 == v68)
            {
              unint64_t v74 = *(void *)(v0 + 1400);
              int64_t v75 = *(void *)(v0 + 1392);
              *(unsigned char *)(v0 + 1594) = 1;
              if (v74)
              {
                uint64_t v76 = (v74 - 1) & v74;
                unint64_t v77 = __clz(__rbit64(v74)) | (v75 << 6);
                uint64_t v78 = *(void *)(v0 + 1384);
                goto LABEL_21;
              }
              int64_t v129 = v75 + 1;
              if (__OFADD__(v75, 1))
              {
                __break(1u);
              }
              else
              {
                int64_t v130 = (unint64_t)((1 << *(unsigned char *)(v0 + 1593)) + 63) >> 6;
                uint64_t v78 = *(void *)(v0 + 1384);
                if (v129 >= v130) {
                  goto LABEL_75;
                }
                uint64_t v131 = v78 + 56;
                unint64_t v132 = *(void *)(v78 + 56 + 8 * v129);
                ++v75;
                if (v132)
                {
LABEL_58:
                  uint64_t v76 = (v132 - 1) & v132;
                  unint64_t v77 = __clz(__rbit64(v132)) + (v75 << 6);
LABEL_21:
                  *(void *)(v0 + 1400) = v76;
                  *(void *)(v0 + 1392) = v75;
                  unint64_t v79 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1288);
                  uint64_t v80 = *(void *)(v0 + 1152);
                  uint64_t v81 = *(void *)(v0 + 1144);
                  uint64_t v82 = *(void *)(v0 + 1128);
                  (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 1344))(v82, *(void *)(v78 + 48) + *(void *)(v80 + 72) * v77, v81);
                  unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56);
                  *(void *)(v0 + 1408) = v12;
                  v12(v82, 0, 1, v81);
                  if (v79(v82, 1, v81) != 1)
                  {
                    uint64_t v125 = *(void *)(v0 + 960);
                    (*(void (**)(void, void, void))(v0 + 1304))(*(void *)(v0 + 1192), *(void *)(v0 + 1128), *(void *)(v0 + 1144));
                    uint64_t v126 = sub_1007EBA78;
LABEL_43:
                    return _swift_task_switch(v126, v125, 0);
                  }
                  goto LABEL_76;
                }
                int64_t v75 = v129 + 1;
                if (v129 + 1 >= v130) {
                  goto LABEL_75;
                }
                unint64_t v132 = *(void *)(v131 + 8 * v75);
                if (v132) {
                  goto LABEL_58;
                }
                int64_t v75 = v129 + 2;
                if (v129 + 2 >= v130) {
                  goto LABEL_75;
                }
                unint64_t v132 = *(void *)(v131 + 8 * v75);
                if (v132) {
                  goto LABEL_58;
                }
                int64_t v133 = v129 + 3;
                if (v133 >= v130)
                {
LABEL_75:
                  unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1152) + 56);
                  v12(*(void *)(v0 + 1128), 1, 1, *(void *)(v0 + 1144));
LABEL_76:
                  swift_release();
                  goto LABEL_7;
                }
                unint64_t v132 = *(void *)(v131 + 8 * v133);
                if (v132)
                {
                  int64_t v75 = v133;
                  goto LABEL_58;
                }
                while (1)
                {
                  int64_t v75 = v133 + 1;
                  if (__OFADD__(v133, 1)) {
                    break;
                  }
                  if (v75 >= v130) {
                    goto LABEL_75;
                  }
                  unint64_t v132 = *(void *)(v131 + 8 * v75);
                  ++v133;
                  if (v132) {
                    goto LABEL_58;
                  }
                }
              }
              __break(1u);
              return unsafeBlocking<A>(_:)(v70, v71, v72, v73);
            }
LABEL_33:
            swift_release();
            v69(*(void *)(v0 + 1208), *(void *)(v0 + 1144));
            goto LABEL_34;
          }
LABEL_32:
          uint64_t v98 = *(void *)(v0 + 1192);
          uint64_t v99 = *(void *)(v0 + 1152);
          uint64_t v100 = *(void *)(v0 + 1144);
          uint64_t v101 = *(void *)(v0 + 1112);
          uint64_t v102 = *(void *)(v0 + 1040);
          sub_10080F01C(*(void *)(v0 + 1032), (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
          sub_10080F01C(v102, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
          sub_10080F01C(v101, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
          uint64_t v69 = *(uint64_t (**)(uint64_t, uint64_t))(v99 + 8);
          v69(v98, v100);
          goto LABEL_33;
        }
LABEL_31:
        uint64_t v93 = *(void *)(v0 + 1112);
        uint64_t v94 = *(void *)(v0 + 1056);
        uint64_t v95 = *(void *)(v0 + 1040);
        uint64_t v96 = *(void *)(v0 + 1032);
        uint64_t v97 = *(void *)(v0 + 976);
        sub_10080F01C(*(void *)(v0 + 1048), (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
        sub_10080F01C(v94, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
        sub_10080E7F4(v97, v95, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
        sub_10080E7F4(v93, v96, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v87 = *(void *)(v0 + 976);
      sub_10080F01C(*(void *)(v0 + 1080), (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
      sub_10080F01C(v36, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
      sub_10080E7F4(v87, v38, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
      sub_10080E7F4(v35, v39, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
    }
    uint64_t v88 = *(void *)(v0 + 1112);
    uint64_t v89 = *(void *)(v0 + 1072);
    uint64_t v90 = *(void *)(v0 + 1056);
    uint64_t v91 = *(void *)(v0 + 1048);
    uint64_t v92 = *(void *)(v0 + 976);
    sub_10080F01C(*(void *)(v0 + 1064), (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
    sub_10080F01C(v89, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
    sub_10080E7F4(v92, v90, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
    sub_10080E7F4(v88, v91, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
    goto LABEL_31;
  }
  (*(void (**)(void, void))(*(void *)(v0 + 1152) + 8))(*(void *)(v0 + 1192), *(void *)(v0 + 1144));
  swift_release();
  sub_10001DAB4(v11, (uint64_t *)&unk_101638D50);
  unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 1408);
LABEL_7:
  *(void *)(v0 + 1472) = v12;
  if (*(unsigned char *)(v0 + 1594))
  {
    uint64_t v13 = *(void *)(v0 + 632);
    uint64_t v14 = *(void *)(v0 + 640);
    sub_10001CD44(v165, v13);
    uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
    *(void *)(v0 + 1480) = v15;
    char v16 = *(unsigned char *)(v15 + 32);
    *(unsigned char *)(v0 + 1595) = v16;
    uint64_t v17 = -1;
    uint64_t v18 = -1 << v16;
    uint64_t v19 = *(void *)(v15 + 56);
    if (-v18 < 64) {
      uint64_t v17 = ~(-1 << -(char)v18);
    }
    *(void *)(v0 + 1488) = _swiftEmptyArrayStorage;
    unint64_t v20 = v17 & v19;
    if (v20)
    {
      uint64_t v21 = 0;
      unint64_t v22 = __clz(__rbit64(v20));
      uint64_t v23 = (v20 - 1) & v20;
LABEL_12:
      *(void *)(v0 + 1504) = v23;
      *(void *)(v0 + 1496) = v21;
      uint64_t v24 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1472);
      uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1288);
      uint64_t v26 = *(void *)(v0 + 1144);
      uint64_t v27 = *(void *)(v0 + 1120);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 1344))(v27, *(void *)(v15 + 48) + *(void *)(*(void *)(v0 + 1152) + 72) * v22, v26);
      v24(v27, 0, 1, v26);
      if (v25(v27, 1, v26) == 1) {
        goto LABEL_84;
      }
      uint64_t v125 = *(void *)(v0 + 960);
      (*(void (**)(void, void, void))(v0 + 1304))(*(void *)(v0 + 1176), *(void *)(v0 + 1120), *(void *)(v0 + 1144));
      uint64_t v126 = sub_1007EE094;
      goto LABEL_43;
    }
    unint64_t v127 = 63 - v18;
    if (v127 > 0x7F)
    {
      unint64_t v128 = *(void *)(v15 + 64);
      if (v128)
      {
        uint64_t v21 = 1;
LABEL_49:
        uint64_t v23 = (v128 - 1) & v128;
        unint64_t v22 = __clz(__rbit64(v128)) + (v21 << 6);
        goto LABEL_12;
      }
      if (v127 >= 0xC0)
      {
        unint64_t v128 = *(void *)(v15 + 72);
        if (v128)
        {
          uint64_t v21 = 2;
          goto LABEL_49;
        }
        if (v127 >= 0x100)
        {
          unint64_t v128 = *(void *)(v15 + 80);
          if (v128)
          {
            uint64_t v21 = 3;
            goto LABEL_49;
          }
          if (v127 >= 0x140)
          {
            unint64_t v128 = *(void *)(v15 + 88);
            if (v128)
            {
              uint64_t v21 = 4;
              goto LABEL_49;
            }
            uint64_t v134 = 0;
            uint64_t v135 = v127 >> 6;
            if (v135 <= 5) {
              uint64_t v135 = 5;
            }
            uint64_t v136 = v135 - 5;
            while (v136 != v134)
            {
              unint64_t v128 = *(void *)(v15 + 96 + 8 * v134++);
              if (v128)
              {
                uint64_t v21 = v134 + 4;
                goto LABEL_49;
              }
            }
          }
        }
      }
    }
    (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 1472))(*(void *)(v0 + 1120), 1, 1, *(void *)(v0 + 1144));
LABEL_84:
    swift_release();
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v137 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1344);
    uint64_t v138 = *(void *)(v0 + 1208);
    uint64_t v139 = *(void *)(v0 + 1184);
    uint64_t v140 = *(void *)(v0 + 1144);
    uint64_t v141 = *(void *)(v0 + 968);
    uint64_t v142 = type metadata accessor for Logger();
    sub_100010324(v142, (uint64_t)qword_10170E3B0);
    v137(v139, v138, v140);
    sub_10001D010(v141, v0 + 768);
    v143 = Logger.logObject.getter();
    os_log_type_t v144 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v143, v144))
    {
      os_log_t log = v143;
      uint64_t v162 = *(void *)(v0 + 1200);
      os_log_type_t type = v144;
      uint64_t v145 = *(void *)(v0 + 1184);
      uint64_t v146 = *(void *)(v0 + 1152);
      uint64_t v147 = *(void *)(v0 + 1144);
      uint64_t v148 = swift_slowAlloc();
      uint64_t v166 = swift_slowAlloc();
      *(_DWORD *)uint64_t v148 = 141558787;
      *(void *)(v0 + 872) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v148 + 12) = 2081;
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v149 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 880) = sub_1008FA0F0(v149, v150, &v166);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v151 = *(void (**)(uint64_t, uint64_t))(v146 + 8);
      v151(v145, v147);
      *(_WORD *)(v148 + 22) = 2160;
      *(void *)(v0 + 888) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v148 + 32) = 2081;
      uint64_t v152 = *(void *)(v0 + 792);
      uint64_t v153 = *(void *)(v0 + 800);
      sub_10001CD44((void *)(v0 + 768), v152);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v153 + 8) + 8) + 32))(v152);
      uint64_t v154 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v156 = v155;
      v151(v162, v147);
      *(void *)(v0 + 896) = sub_1008FA0F0(v154, v156, &v166);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 768);
      _os_log_impl((void *)&_mh_execute_header, log, type, "Updating location for subscribers - from beacon store update for beacongroup: %{private,mask.hash}s, beacon: %{private,mask.hash}s.", (uint8_t *)v148, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v151 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1152) + 8);
      v151(*(void *)(v0 + 1184), *(void *)(v0 + 1144));
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 768);
    }
    *(void *)(v0 + 1560) = v151;
    v157 = *(void **)(v0 + 1280);
    uint64_t v158 = *(void *)(v0 + 968);
    uint64_t v159 = *(void *)(v0 + 960);
    sub_10001D010((uint64_t)v165, v0 + 808);
    sub_10001D010(v158, v0 + 208);
    v160 = (void *)swift_allocObject();
    *(void *)(v0 + 1568) = v160;
    v160[2] = v159;
    v160[3] = _swiftEmptyArrayStorage;
    sub_10001CEB0((long long *)(v0 + 808), (uint64_t)(v160 + 4));
    sub_10001CEB0((long long *)(v0 + 208), (uint64_t)(v160 + 9));
    v160[14] = v157;
    id v161 = v157;
    swift_retain();
    uint64_t v70 = (void *)swift_task_alloc();
    *(void *)(v0 + 1576) = v70;
    void *v70 = v0;
    v70[1] = sub_1007EF5A4;
    os_log_type_t v73 = (char *)&type metadata for () + 8;
    uint64_t v71 = sub_10080DEA0;
    uint64_t v72 = v160;
    return unsafeBlocking<A>(_:)(v70, v71, v72, v73);
  }
  (*(void (**)(void, void))(*(void *)(v0 + 1152) + 8))(*(void *)(v0 + 1208), *(void *)(v0 + 1144));
LABEL_34:
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v165);
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v103 = *(void *)(v0 + 968);
  uint64_t v104 = type metadata accessor for Logger();
  sub_100010324(v104, (uint64_t)qword_10170E3B0);
  sub_10001D010(v103, v0 + 448);
  uint64_t v105 = Logger.logObject.getter();
  os_log_type_t v106 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v105, v106))
  {
    uint64_t v107 = *(void *)(v0 + 1200);
    uint64_t v108 = *(void *)(v0 + 1152);
    uint64_t v109 = *(void *)(v0 + 1144);
    uint64_t v110 = swift_slowAlloc();
    uint64_t v166 = swift_slowAlloc();
    *(_DWORD *)uint64_t v110 = 141558275;
    *(void *)(v0 + 928) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v110 + 12) = 2081;
    uint64_t v112 = *(void *)(v0 + 472);
    uint64_t v111 = *(void *)(v0 + 480);
    sub_10001CD44((void *)(v0 + 448), v112);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v111 + 8) + 8) + 32))(v112);
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v113 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v115 = v114;
    (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v107, v109);
    *(void *)(v0 + 920) = sub_1008FA0F0(v113, v115, &v166);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 448);
    _os_log_impl((void *)&_mh_execute_header, v105, v106, "Updating location for subscribers - from beacon store update for beacon %{private,mask.hash}s.", (uint8_t *)v110, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 448);
  }

  unsigned __int8 v116 = *(void **)(v0 + 1280);
  id v117 = *(void **)(v0 + 1272);
  uint64_t v118 = *(void *)(v0 + 968);
  uint64_t v119 = *(void *)(*(void *)(v0 + 960) + 160);
  char v120 = *(unsigned char *)(*(void *)(v0 + 976) + *(int *)(v0 + 1584));
  type metadata accessor for Transaction();
  sub_10001D010(v118, v0 + 488);
  uint64_t v121 = swift_allocObject();
  sub_10001CEB0((long long *)(v0 + 488), v121 + 16);
  *(void *)(v121 + 56) = v119;
  *(void *)(v121 + 64) = v116;
  *(unsigned char *)(v121 + 72) = v120;
  id v122 = v116;
  swift_retain();
  static Transaction.asyncTask(name:block:)();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v123 = *(uint64_t (**)(void))(v0 + 8);
  return v123();
}

uint64_t sub_1007ED4B0()
{
  uint64_t v77 = v0;
  uint64_t v1 = v0 + 608;
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 1024) + 56))(*(void *)(v0 + 1008), 1, 1, *(void *)(v0 + 1016));
  uint64_t v2 = *(void *)(v0 + 1008);
  (*(void (**)(void, void))(*(void *)(v0 + 1152) + 8))(*(void *)(v0 + 1192), *(void *)(v0 + 1144));
  swift_release();
  sub_10001DAB4(v2, (uint64_t *)&unk_101638D50);
  *(void *)(v0 + 1472) = *(void *)(v0 + 1408);
  if ((*(unsigned char *)(v0 + 1594) & 1) == 0)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 1152) + 8))(*(void *)(v0 + 1208), *(void *)(v0 + 1144));
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 608);
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v18 = *(void *)(v0 + 968);
    uint64_t v19 = type metadata accessor for Logger();
    sub_100010324(v19, (uint64_t)qword_10170E3B0);
    sub_10001D010(v18, v0 + 448);
    unint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = *(void *)(v0 + 1200);
      uint64_t v23 = *(void *)(v0 + 1152);
      uint64_t v24 = *(void *)(v0 + 1144);
      uint64_t v25 = swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 141558275;
      *(void *)(v0 + 928) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v25 + 12) = 2081;
      uint64_t v27 = *(void *)(v0 + 472);
      uint64_t v26 = *(void *)(v0 + 480);
      sub_10001CD44((void *)(v0 + 448), v27);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v26 + 8) + 8) + 32))(v27);
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v30 = v29;
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
      *(void *)(v0 + 920) = sub_1008FA0F0(v28, v30, &v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 448);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Updating location for subscribers - from beacon store update for beacon %{private,mask.hash}s.", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 448);
    }

    uint64_t v31 = *(void **)(v0 + 1280);
    uint64_t v32 = *(void **)(v0 + 1272);
    uint64_t v33 = *(void *)(v0 + 968);
    uint64_t v34 = *(void *)(*(void *)(v0 + 960) + 160);
    char v35 = *(unsigned char *)(*(void *)(v0 + 976) + *(int *)(v0 + 1584));
    type metadata accessor for Transaction();
    sub_10001D010(v33, v0 + 488);
    uint64_t v36 = swift_allocObject();
    sub_10001CEB0((long long *)(v0 + 488), v36 + 16);
    *(void *)(v36 + 56) = v34;
    *(void *)(v36 + 64) = v31;
    *(unsigned char *)(v36 + 72) = v35;
    id v37 = v31;
    swift_retain();
    static Transaction.asyncTask(name:block:)();
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
    return v38();
  }
  uint64_t v3 = *(void *)(v0 + 632);
  uint64_t v4 = *(void *)(v0 + 640);
  sub_10001CD44((void *)(v0 + 608), v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  *(void *)(v0 + 1480) = v5;
  char v6 = *(unsigned char *)(v5 + 32);
  *(unsigned char *)(v0 + 1595) = v6;
  uint64_t v7 = -1;
  uint64_t v8 = -1 << v6;
  uint64_t v9 = *(void *)(v5 + 56);
  if (-v8 < 64) {
    uint64_t v7 = ~(-1 << -(char)v8);
  }
  *(void *)(v0 + 1488) = _swiftEmptyArrayStorage;
  unint64_t v10 = v7 & v9;
  if (!v10)
  {
    unint64_t v41 = 63 - v8;
    if (v41 > 0x7F)
    {
      unint64_t v42 = *(void *)(v5 + 64);
      if (v42)
      {
        uint64_t v11 = 1;
LABEL_22:
        uint64_t v13 = (v42 - 1) & v42;
        unint64_t v12 = __clz(__rbit64(v42)) + (v11 << 6);
        goto LABEL_6;
      }
      if (v41 >= 0xC0)
      {
        unint64_t v42 = *(void *)(v5 + 72);
        if (v42)
        {
          uint64_t v11 = 2;
          goto LABEL_22;
        }
        if (v41 >= 0x100)
        {
          unint64_t v42 = *(void *)(v5 + 80);
          if (v42)
          {
            uint64_t v11 = 3;
            goto LABEL_22;
          }
          if (v41 >= 0x140)
          {
            unint64_t v42 = *(void *)(v5 + 88);
            if (v42)
            {
              uint64_t v11 = 4;
              goto LABEL_22;
            }
            uint64_t v43 = 0;
            uint64_t v44 = v41 >> 6;
            if (v44 <= 5) {
              uint64_t v44 = 5;
            }
            uint64_t v45 = v44 - 5;
            while (v45 != v43)
            {
              unint64_t v42 = *(void *)(v5 + 96 + 8 * v43++);
              if (v42)
              {
                uint64_t v11 = v43 + 4;
                goto LABEL_22;
              }
            }
          }
        }
      }
    }
    (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 1472))(*(void *)(v0 + 1120), 1, 1, *(void *)(v0 + 1144));
LABEL_39:
    swift_release();
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1344);
    uint64_t v47 = *(void *)(v0 + 1208);
    uint64_t v48 = *(void *)(v0 + 1184);
    uint64_t v49 = *(void *)(v0 + 1144);
    uint64_t v50 = *(void *)(v0 + 968);
    uint64_t v51 = type metadata accessor for Logger();
    sub_100010324(v51, (uint64_t)qword_10170E3B0);
    v46(v48, v47, v49);
    sub_10001D010(v50, v0 + 768);
    double v52 = Logger.logObject.getter();
    os_log_type_t v53 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v74 = *(void *)(v0 + 1200);
      os_log_type_t type = v53;
      uint64_t v54 = *(void *)(v0 + 1184);
      uint64_t v55 = *(void *)(v0 + 1152);
      uint64_t v56 = *(void *)(v0 + 1144);
      uint64_t v57 = swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      *(_DWORD *)uint64_t v57 = 141558787;
      *(void *)(v0 + 872) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v57 + 12) = 2081;
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v58 = dispatch thunk of CustomStringConvertible.description.getter();
      os_log_t log = v52;
      *(void *)(v0 + 880) = sub_1008FA0F0(v58, v59, &v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
      v60(v54, v56);
      *(_WORD *)(v57 + 22) = 2160;
      *(void *)(v0 + 888) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v57 + 32) = 2081;
      uint64_t v61 = *(void *)(v0 + 792);
      uint64_t v62 = *(void *)(v0 + 800);
      sub_10001CD44((void *)(v0 + 768), v61);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v62 + 8) + 8) + 32))(v61);
      uint64_t v63 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v65 = v64;
      uint64_t v66 = v56;
      uint64_t v1 = v0 + 608;
      v60(v74, v66);
      *(void *)(v0 + 896) = sub_1008FA0F0(v63, v65, &v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 768);
      _os_log_impl((void *)&_mh_execute_header, log, type, "Updating location for subscribers - from beacon store update for beacongroup: %{private,mask.hash}s, beacon: %{private,mask.hash}s.", (uint8_t *)v57, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v60 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1152) + 8);
      v60(*(void *)(v0 + 1184), *(void *)(v0 + 1144));
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 768);
    }
    *(void *)(v0 + 1560) = v60;
    int v67 = *(void **)(v0 + 1280);
    uint64_t v68 = *(void *)(v0 + 968);
    uint64_t v69 = *(void *)(v0 + 960);
    sub_10001D010(v1, v0 + 808);
    sub_10001D010(v68, v0 + 208);
    uint64_t v70 = (void *)swift_allocObject();
    *(void *)(v0 + 1568) = v70;
    v70[2] = v69;
    v70[3] = _swiftEmptyArrayStorage;
    sub_10001CEB0((long long *)(v0 + 808), (uint64_t)(v70 + 4));
    sub_10001CEB0((long long *)(v0 + 208), (uint64_t)(v70 + 9));
    v70[14] = v67;
    id v71 = v67;
    swift_retain();
    uint64_t v72 = (void *)swift_task_alloc();
    *(void *)(v0 + 1576) = v72;
    *uint64_t v72 = v0;
    v72[1] = sub_1007EF5A4;
    return unsafeBlocking<A>(_:)(v72, sub_10080DEA0, v70, (char *)&type metadata for () + 8);
  }
  uint64_t v11 = 0;
  unint64_t v12 = __clz(__rbit64(v10));
  uint64_t v13 = (v10 - 1) & v10;
LABEL_6:
  *(void *)(v0 + 1504) = v13;
  *(void *)(v0 + 1496) = v11;
  uint64_t v14 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1472);
  uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1288);
  uint64_t v16 = *(void *)(v0 + 1144);
  uint64_t v17 = *(void *)(v0 + 1120);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 1344))(v17, *(void *)(v5 + 48) + *(void *)(*(void *)(v0 + 1152) + 72) * v12, v16);
  v14(v17, 0, 1, v16);
  if (v15(v17, 1, v16) == 1) {
    goto LABEL_39;
  }
  uint64_t v40 = *(void *)(v0 + 960);
  (*(void (**)(void, void, void))(v0 + 1304))(*(void *)(v0 + 1176), *(void *)(v0 + 1120), *(void *)(v0 + 1144));
  return _swift_task_switch(sub_1007EE094, v40, 0);
}

uint64_t sub_1007EE094()
{
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 528, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 552))
  {
    sub_10001CEB0((long long *)(v0 + 528), v0 + 568);
    sub_10001CD44((void *)(v0 + 568), *(void *)(v0 + 592));
    uint64_t v3 = (uint64_t (*)(void))((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 1512) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1007EE180;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007EE180(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 960);
  *(void *)(*(void *)v1 + 1520) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007EE298, v2, 0);
}

uint64_t sub_1007EE298()
{
  uint64_t v1 = *(void *)(v0 + 1520);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 568);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 1520);
    uint64_t v3 = sub_1007EE320;
  }
  else
  {
    uint64_t v3 = sub_1007EEEE8;
    uint64_t v2 = 0;
  }
  return _swift_task_switch(v3, v2, 0);
}

uint64_t sub_1007EE320()
{
  uint64_t v1 = *(void *)(v0 + 1520);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1344);
  uint64_t v3 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 1304);
  uint64_t v4 = *(void *)(v0 + 1200);
  uint64_t v5 = *(void *)(v0 + 1176);
  uint64_t v6 = *(void *)(v0 + 1144);
  unint64_t v7 = (*(unsigned __int8 *)(v0 + 1588) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1588);
  *(void *)(v0 + 1528) = *(void *)(v1 + 136);
  v2(v4, v5, v6);
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 1536) = v8;
  *(void *)(v8 + 16) = v1;
  v3(v8 + v7, v4, v6);
  swift_retain();
  return _swift_task_switch(sub_1007EE41C, 0, 0);
}

uint64_t sub_1007EE41C()
{
  uint64_t v1 = v0[192];
  uint64_t v2 = v0[191];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[193] = v3;
  v3[2] = v2;
  v3[3] = sub_10080DEB8;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[194] = v4;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_10163BBE0);
  *uint64_t v4 = v0;
  v4[1] = sub_1007EE538;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 86, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10001CE50, v3, v5);
}

uint64_t sub_1007EE538()
{
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1007EE690, 0, 0);
}

uint64_t sub_1007EE690()
{
  uint64_t v74 = v0;
  if (*(void *)(v0 + 712))
  {
    uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1304);
    uint64_t v1 = *(void **)(v0 + 1280);
    uint64_t v2 = *(void *)(v0 + 1168);
    uint64_t v3 = *(void *)(v0 + 1144);
    uint64_t v4 = *(void *)(v0 + 1000);
    uint64_t v5 = *(void *)(v0 + 984);
    sub_10001CEB0((long long *)(v0 + 688), v0 + 728);
    uint64_t v6 = *(void *)(v0 + 752);
    uint64_t v7 = *(void *)(v0 + 760);
    sub_10001CD44((void *)(v0 + 728), v6);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v7 + 8) + 8) + 32))(v6);
    uint64_t v8 = *(void *)(v0 + 752);
    uint64_t v9 = *(void *)(v0 + 760);
    sub_10001CD44((void *)(v0 + 728), v8);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 176))(v8, v9);
    uint64_t v11 = *(int *)(v5 + 48);
    uint64_t v12 = *(int *)(sub_10000588C((uint64_t *)&unk_10164E7D0) + 48);
    v70(v4, v2, v3);
    *(void *)(v4 + v12) = v10;
    *(void *)(v4 + v11) = v1;
    id v13 = v1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v15 = *(void *)(v0 + 1488);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v15 = sub_100A71758(0, *(void *)(v15 + 16) + 1, 1, *(void *)(v0 + 1488));
    }
    unint64_t v17 = *(void *)(v15 + 16);
    unint64_t v16 = *(void *)(v15 + 24);
    if (v17 >= v16 >> 1) {
      unint64_t v15 = sub_100A71758(v16 > 1, v17 + 1, 1, v15);
    }
    uint64_t v18 = *(void *)(v0 + 1176);
    uint64_t v19 = *(void *)(v0 + 1152);
    uint64_t v20 = *(void *)(v0 + 1144);
    uint64_t v21 = *(void *)(v0 + 1000);
    uint64_t v22 = *(void *)(v0 + 992);
    *(void *)(v15 + 16) = v17 + 1;
    sub_10001D608(v21, v15+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v17, (uint64_t *)&unk_10164E790);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    uint64_t v23 = (void *)_s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 728);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 1152) + 8))(*(void *)(v0 + 1176), *(void *)(v0 + 1144));
    uint64_t v23 = (void *)sub_10001DAB4(v0 + 688, (uint64_t *)&unk_10163BBE0);
    unint64_t v15 = *(void *)(v0 + 1488);
  }
  unint64_t v27 = *(void *)(v0 + 1504);
  int64_t v28 = *(void *)(v0 + 1496);
  *(void *)(v0 + 1488) = v15;
  if (v27)
  {
    uint64_t v29 = (v27 - 1) & v27;
    unint64_t v30 = __clz(__rbit64(v27)) | (v28 << 6);
    uint64_t v31 = *(void *)(v0 + 1480);
    goto LABEL_10;
  }
  int64_t v37 = v28 + 1;
  if (__OFADD__(v28, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  int64_t v38 = (unint64_t)((1 << *(unsigned char *)(v0 + 1595)) + 63) >> 6;
  uint64_t v31 = *(void *)(v0 + 1480);
  if (v37 >= v38)
  {
LABEL_28:
    (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 1472))(*(void *)(v0 + 1120), 1, 1, *(void *)(v0 + 1144));
    goto LABEL_29;
  }
  uint64_t v39 = v31 + 56;
  unint64_t v40 = *(void *)(v31 + 56 + 8 * v37);
  ++v28;
  if (!v40)
  {
    int64_t v28 = v37 + 1;
    if (v37 + 1 < v38)
    {
      unint64_t v40 = *(void *)(v39 + 8 * v28);
      if (v40) {
        goto LABEL_17;
      }
      int64_t v28 = v37 + 2;
      if (v37 + 2 < v38)
      {
        unint64_t v40 = *(void *)(v39 + 8 * v28);
        if (v40) {
          goto LABEL_17;
        }
        int64_t v41 = v37 + 3;
        if (v41 < v38)
        {
          unint64_t v40 = *(void *)(v39 + 8 * v41);
          if (v40)
          {
            int64_t v28 = v41;
            goto LABEL_17;
          }
          while (1)
          {
            int64_t v28 = v41 + 1;
            if (__OFADD__(v41, 1)) {
              break;
            }
            if (v28 >= v38) {
              goto LABEL_28;
            }
            unint64_t v40 = *(void *)(v39 + 8 * v28);
            ++v41;
            if (v40) {
              goto LABEL_17;
            }
          }
LABEL_38:
          __break(1u);
          return unsafeBlocking<A>(_:)(v23, v24, v25, v26);
        }
      }
    }
    goto LABEL_28;
  }
LABEL_17:
  uint64_t v29 = (v40 - 1) & v40;
  unint64_t v30 = __clz(__rbit64(v40)) + (v28 << 6);
LABEL_10:
  *(void *)(v0 + 1504) = v29;
  *(void *)(v0 + 1496) = v28;
  uint64_t v32 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1472);
  uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1288);
  uint64_t v34 = *(void *)(v0 + 1144);
  uint64_t v35 = *(void *)(v0 + 1120);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 1344))(v35, *(void *)(v31 + 48) + *(void *)(*(void *)(v0 + 1152) + 72) * v30, v34);
  v32(v35, 0, 1, v34);
  if (v33(v35, 1, v34) == 1)
  {
LABEL_29:
    swift_release();
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    unint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1344);
    uint64_t v43 = *(void *)(v0 + 1208);
    uint64_t v44 = *(void *)(v0 + 1184);
    uint64_t v45 = *(void *)(v0 + 1144);
    uint64_t v46 = *(void *)(v0 + 968);
    uint64_t v47 = type metadata accessor for Logger();
    sub_100010324(v47, (uint64_t)qword_10170E3B0);
    v42(v44, v43, v45);
    sub_10001D010(v46, v0 + 768);
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v69 = *(void *)(v0 + 1200);
      os_log_type_t type = v49;
      uint64_t v50 = *(void *)(v0 + 1184);
      uint64_t v51 = *(void *)(v0 + 1152);
      unint64_t v72 = v15;
      uint64_t v52 = *(void *)(v0 + 1144);
      uint64_t v53 = swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      *(_DWORD *)uint64_t v53 = 141558787;
      *(void *)(v0 + 872) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v53 + 12) = 2081;
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v54 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 880) = sub_1008FA0F0(v54, v55, &v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
      v56(v50, v52);
      *(_WORD *)(v53 + 22) = 2160;
      *(void *)(v0 + 888) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v53 + 32) = 2081;
      uint64_t v57 = *(void *)(v0 + 792);
      uint64_t v58 = *(void *)(v0 + 800);
      sub_10001CD44((void *)(v0 + 768), v57);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v58 + 8) + 8) + 32))(v57);
      uint64_t v59 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v61 = v60;
      uint64_t v62 = v52;
      unint64_t v15 = v72;
      v56(v69, v62);
      *(void *)(v0 + 896) = sub_1008FA0F0(v59, v61, &v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 768);
      _os_log_impl((void *)&_mh_execute_header, v48, type, "Updating location for subscribers - from beacon store update for beacongroup: %{private,mask.hash}s, beacon: %{private,mask.hash}s.", (uint8_t *)v53, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v56 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1152) + 8);
      v56(*(void *)(v0 + 1184), *(void *)(v0 + 1144));
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 768);
    }
    *(void *)(v0 + 1560) = v56;
    uint64_t v63 = *(void **)(v0 + 1280);
    uint64_t v64 = *(void *)(v0 + 968);
    uint64_t v65 = *(void *)(v0 + 960);
    sub_10001D010(v0 + 608, v0 + 808);
    sub_10001D010(v64, v0 + 208);
    uint64_t v66 = (void *)swift_allocObject();
    *(void *)(v0 + 1568) = v66;
    v66[2] = v65;
    v66[3] = v15;
    sub_10001CEB0((long long *)(v0 + 808), (uint64_t)(v66 + 4));
    sub_10001CEB0((long long *)(v0 + 208), (uint64_t)(v66 + 9));
    v66[14] = v63;
    id v67 = v63;
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 1576) = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1007EF5A4;
    uint64_t v26 = (char *)&type metadata for () + 8;
    uint64_t v24 = sub_10080DEA0;
    uint64_t v25 = v66;
    return unsafeBlocking<A>(_:)(v23, v24, v25, v26);
  }
  uint64_t v36 = *(void *)(v0 + 960);
  (*(void (**)(void, void, void))(v0 + 1304))(*(void *)(v0 + 1176), *(void *)(v0 + 1120), *(void *)(v0 + 1144));
  return _swift_task_switch(sub_1007EE094, v36, 0);
}

uint64_t sub_1007EEEE8()
{
  uint64_t v52 = v0;
  *(void *)(v0 + 720) = 0;
  *(_OWORD *)(v0 + 688) = 0u;
  *(_OWORD *)(v0 + 704) = 0u;
  (*(void (**)(void, void))(*(void *)(v0 + 1152) + 8))(*(void *)(v0 + 1176), *(void *)(v0 + 1144));
  uint64_t v1 = (void *)sub_10001DAB4(v0 + 688, (uint64_t *)&unk_10163BBE0);
  uint64_t v5 = *(void *)(v0 + 1488);
  unint64_t v6 = *(void *)(v0 + 1504);
  int64_t v7 = *(void *)(v0 + 1496);
  if (v6)
  {
    uint64_t v8 = (v6 - 1) & v6;
    unint64_t v9 = __clz(__rbit64(v6)) | (v7 << 6);
    uint64_t v10 = *(void *)(v0 + 1480);
    goto LABEL_3;
  }
  int64_t v16 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  int64_t v17 = (unint64_t)((1 << *(unsigned char *)(v0 + 1595)) + 63) >> 6;
  uint64_t v10 = *(void *)(v0 + 1480);
  if (v16 >= v17)
  {
LABEL_21:
    (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 1472))(*(void *)(v0 + 1120), 1, 1, *(void *)(v0 + 1144));
    goto LABEL_22;
  }
  uint64_t v18 = v10 + 56;
  unint64_t v19 = *(void *)(v10 + 56 + 8 * v16);
  ++v7;
  if (!v19)
  {
    int64_t v7 = v16 + 1;
    if (v16 + 1 < v17)
    {
      unint64_t v19 = *(void *)(v18 + 8 * v7);
      if (v19) {
        goto LABEL_10;
      }
      int64_t v7 = v16 + 2;
      if (v16 + 2 < v17)
      {
        unint64_t v19 = *(void *)(v18 + 8 * v7);
        if (v19) {
          goto LABEL_10;
        }
        int64_t v20 = v16 + 3;
        if (v20 < v17)
        {
          unint64_t v19 = *(void *)(v18 + 8 * v20);
          if (v19)
          {
            int64_t v7 = v20;
            goto LABEL_10;
          }
          while (1)
          {
            int64_t v7 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              break;
            }
            if (v7 >= v17) {
              goto LABEL_21;
            }
            unint64_t v19 = *(void *)(v18 + 8 * v7);
            ++v20;
            if (v19) {
              goto LABEL_10;
            }
          }
LABEL_31:
          __break(1u);
          return unsafeBlocking<A>(_:)(v1, v2, v3, v4);
        }
      }
    }
    goto LABEL_21;
  }
LABEL_10:
  uint64_t v8 = (v19 - 1) & v19;
  unint64_t v9 = __clz(__rbit64(v19)) + (v7 << 6);
LABEL_3:
  *(void *)(v0 + 1504) = v8;
  *(void *)(v0 + 1496) = v7;
  uint64_t v11 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1472);
  uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1288);
  uint64_t v13 = *(void *)(v0 + 1144);
  uint64_t v14 = *(void *)(v0 + 1120);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 1344))(v14, *(void *)(v10 + 48) + *(void *)(*(void *)(v0 + 1152) + 72) * v9, v13);
  v11(v14, 0, 1, v13);
  if (v12(v14, 1, v13) == 1)
  {
LABEL_22:
    swift_release();
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1344);
    uint64_t v22 = *(void *)(v0 + 1208);
    uint64_t v23 = *(void *)(v0 + 1184);
    uint64_t v24 = *(void *)(v0 + 1144);
    uint64_t v25 = *(void *)(v0 + 968);
    uint64_t v26 = type metadata accessor for Logger();
    sub_100010324(v26, (uint64_t)qword_10170E3B0);
    v21(v23, v22, v24);
    sub_10001D010(v25, v0 + 768);
    unint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v48 = *(void *)(v0 + 1200);
      os_log_type_t type = v28;
      uint64_t v29 = *(void *)(v0 + 1184);
      uint64_t v30 = *(void *)(v0 + 1152);
      uint64_t v50 = v5;
      uint64_t v31 = *(void *)(v0 + 1144);
      uint64_t v32 = swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 141558787;
      *(void *)(v0 + 872) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v32 + 12) = 2081;
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 880) = sub_1008FA0F0(v33, v34, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v35(v29, v31);
      *(_WORD *)(v32 + 22) = 2160;
      *(void *)(v0 + 888) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v32 + 32) = 2081;
      uint64_t v36 = *(void *)(v0 + 792);
      uint64_t v37 = *(void *)(v0 + 800);
      sub_10001CD44((void *)(v0 + 768), v36);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v37 + 8) + 8) + 32))(v36);
      uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v40 = v39;
      uint64_t v41 = v31;
      uint64_t v5 = v50;
      v35(v48, v41);
      *(void *)(v0 + 896) = sub_1008FA0F0(v38, v40, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 768);
      _os_log_impl((void *)&_mh_execute_header, v27, type, "Updating location for subscribers - from beacon store update for beacongroup: %{private,mask.hash}s, beacon: %{private,mask.hash}s.", (uint8_t *)v32, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v35 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1152) + 8);
      v35(*(void *)(v0 + 1184), *(void *)(v0 + 1144));
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 768);
    }
    *(void *)(v0 + 1560) = v35;
    unint64_t v42 = *(void **)(v0 + 1280);
    uint64_t v43 = *(void *)(v0 + 968);
    uint64_t v44 = *(void *)(v0 + 960);
    sub_10001D010(v0 + 608, v0 + 808);
    sub_10001D010(v43, v0 + 208);
    uint64_t v45 = (void *)swift_allocObject();
    *(void *)(v0 + 1568) = v45;
    v45[2] = v44;
    v45[3] = v5;
    sub_10001CEB0((long long *)(v0 + 808), (uint64_t)(v45 + 4));
    sub_10001CEB0((long long *)(v0 + 208), (uint64_t)(v45 + 9));
    v45[14] = v42;
    id v46 = v42;
    swift_retain();
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 1576) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_1007EF5A4;
    uint64_t v4 = (char *)&type metadata for () + 8;
    uint64_t v2 = sub_10080DEA0;
    uint64_t v3 = v45;
    return unsafeBlocking<A>(_:)(v1, v2, v3, v4);
  }
  uint64_t v15 = *(void *)(v0 + 960);
  (*(void (**)(void, void, void))(v0 + 1304))(*(void *)(v0 + 1176), *(void *)(v0 + 1120), *(void *)(v0 + 1144));
  return _swift_task_switch(sub_1007EE094, v15, 0);
}

uint64_t sub_1007EF5A4()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1007EF6BC, 0, 0);
}

uint64_t sub_1007EF6BC()
{
  uint64_t v24 = v0;
  (*(void (**)(void, void))(v0 + 1560))(*(void *)(v0 + 1208), *(void *)(v0 + 1144));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 608);
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 968);
  uint64_t v2 = type metadata accessor for Logger();
  sub_100010324(v2, (uint64_t)qword_10170E3B0);
  sub_10001D010(v1, v0 + 448);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void *)(v0 + 1200);
    uint64_t v6 = *(void *)(v0 + 1152);
    uint64_t v7 = *(void *)(v0 + 1144);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 141558275;
    *(void *)(v0 + 928) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2081;
    uint64_t v10 = *(void *)(v0 + 472);
    uint64_t v9 = *(void *)(v0 + 480);
    sub_10001CD44((void *)(v0 + 448), v10);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v9 + 8) + 8) + 32))(v10);
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v13 = v12;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    *(void *)(v0 + 920) = sub_1008FA0F0(v11, v13, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 448);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Updating location for subscribers - from beacon store update for beacon %{private,mask.hash}s.", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 448);
  }

  uint64_t v14 = *(void **)(v0 + 1280);
  uint64_t v15 = *(void **)(v0 + 1272);
  uint64_t v16 = *(void *)(v0 + 968);
  uint64_t v17 = *(void *)(*(void *)(v0 + 960) + 160);
  char v18 = *(unsigned char *)(*(void *)(v0 + 976) + *(int *)(v0 + 1584));
  type metadata accessor for Transaction();
  sub_10001D010(v16, v0 + 488);
  uint64_t v19 = swift_allocObject();
  sub_10001CEB0((long long *)(v0 + 488), v19 + 16);
  *(void *)(v19 + 56) = v17;
  *(void *)(v19 + 64) = v14;
  *(unsigned char *)(v19 + 72) = v18;
  id v20 = v14;
  swift_retain();
  static Transaction.asyncTask(name:block:)();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_1007EFB80(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v9 = *(void *)(a1 + 160);
  sub_10000588C(&qword_10164E7E0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_101342130;
  sub_10001D010(a3, v10 + 32);
  uint64_t v11 = a4[3];
  uint64_t v12 = a4[4];
  sub_10001CD44(a4, v11);
  *(void *)(v10 + 72) = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 176))(v11, v12);
  *(void *)(v10 + 80) = a5;
  id v13 = a5;
  sub_10000588C(&qword_10164E7E8);
  OSAllocatedUnfairLock.callAsFunction<A>(_:)();
  uint64_t v14 = sub_1007E3024(a2);
  type metadata accessor for Transaction();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v9;
  *(void *)(v15 + 24) = v17;
  *(void *)(v15 + 32) = v14;
  *(unsigned char *)(v15 + 40) = 2;
  *(void *)(v15 + 48) = v10;
  *(void *)(v15 + 56) = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static Transaction.asyncTask(name:block:)();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1007EFD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[25] = a4;
  uint64_t v5 = type metadata accessor for BeaconEstimatedLocation();
  v4[26] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[27] = v6;
  v4[28] = *(void *)(v6 + 64);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  sub_10000588C(&qword_10163CF50);
  v4[31] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for ObservedAdvertisement.Location(0);
  v4[32] = v7;
  v4[33] = *(void *)(v7 - 8);
  v4[34] = swift_task_alloc();
  sub_10000588C(&qword_10164E760);
  v4[35] = swift_task_alloc();
  sub_10000588C(&qword_101638CF0);
  v4[36] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  v4[37] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v4[38] = v9;
  v4[39] = *(void *)(v9 + 64);
  v4[40] = swift_task_alloc();
  v4[41] = swift_task_alloc();
  v4[42] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for ObservedAdvertisement(0);
  v4[43] = v10;
  v4[44] = *(void *)(v10 - 8);
  v4[45] = swift_task_alloc();
  sub_10000588C(&qword_10163EB60);
  v4[46] = swift_task_alloc();
  uint64_t v11 = sub_10000588C(&qword_10164E768);
  v4[47] = v11;
  v4[48] = *(void *)(v11 - 8);
  v4[49] = swift_task_alloc();
  uint64_t v12 = sub_10000588C(&qword_10164E770);
  v4[50] = v12;
  v4[51] = *(void *)(v12 - 8);
  v4[52] = swift_task_alloc();
  uint64_t v13 = sub_10000588C(&qword_10164E778);
  v4[53] = v13;
  v4[54] = *(void *)(v13 - 8);
  v4[55] = swift_task_alloc();
  return _swift_task_switch(sub_1007F0118, 0, 0);
}

uint64_t sub_1007F0118()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_101639138 + dword_101639138);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1007F0254;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007F0254(uint64_t a1)
{
  *(void *)(*(void *)v1 + 456) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007F0354, 0, 0);
}

uint64_t sub_1007F0354()
{
  uint64_t v1 = (uint64_t)(v0 + 2);
  if (v0[57])
  {
    uint64_t v3 = v0[51];
    uint64_t v2 = v0[52];
    uint64_t v5 = v0[49];
    uint64_t v4 = v0[50];
    uint64_t v6 = v0[47];
    uint64_t v7 = v0[48];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v5, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v6);
    AsyncStream.init(_:bufferingPolicy:_:)();
    AsyncStream.makeAsyncIterator()();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[58] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1007F05A0;
    uint64_t v9 = v0[53];
    uint64_t v10 = v0[46];
    return AsyncStream.Iterator.next(isolation:)(v10, 0, 0, v9);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_1007F05A0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1007F069C, 0, 0);
}

uint64_t sub_1007F069C()
{
  uint64_t v1 = v0[46];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[44] + 48))(v1, 1, v0[43]) == 1)
  {
    (*(void (**)(void, void))(v0[54] + 8))(v0[55], v0[53]);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = v0[25];
    sub_10080ECB8(v1, v0[45], type metadata accessor for ObservedAdvertisement);
    return _swift_task_switch(sub_1007F0870, v4, 0);
  }
}

uint64_t sub_1007F0870()
{
  *(unsigned char *)(v0 + 576) = *(unsigned char *)(*(void *)(v0 + 200) + 200);
  return _swift_task_switch(sub_1007F0898, 0, 0);
}

uint64_t sub_1007F0898()
{
  uint64_t v61 = v0;
  uint64_t v1 = *(void *)(v0 + 360);
  if ((*(unsigned char *)(v0 + 576) & 1) == 0)
  {
    sub_10080F01C(v1, type metadata accessor for ObservedAdvertisement);
LABEL_8:
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 464) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1007F05A0;
    uint64_t v14 = *(void *)(v0 + 424);
    uint64_t v15 = *(void *)(v0 + 368);
    return AsyncStream.Iterator.next(isolation:)(v15, 0, 0, v14);
  }
  uint64_t v2 = *(void *)(v0 + 280);
  sub_10001D074(v1 + *(int *)(*(void *)(v0 + 344) + 52), v2, &qword_10164E760);
  uint64_t v3 = type metadata accessor for ObservedAdvertisement.BeaconIndexInformation(0);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3);
  uint64_t v5 = *(void *)(v0 + 296);
  uint64_t v6 = *(void *)(v0 + 304);
  uint64_t v8 = *(void *)(v0 + 280);
  uint64_t v7 = *(void *)(v0 + 288);
  if (v4 == 1)
  {
    sub_10001DAB4(*(void *)(v0 + 280), &qword_10164E760);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v7, 1, 1, v5);
LABEL_6:
    uint64_t v10 = *(void *)(v0 + 288);
    sub_10080F01C(*(void *)(v0 + 360), type metadata accessor for ObservedAdvertisement);
    uint64_t v11 = &qword_101638CF0;
    uint64_t v12 = v10;
LABEL_7:
    sub_10001DAB4(v12, v11);
    goto LABEL_8;
  }
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  *(void *)(v0 + 472) = v9;
  *(void *)(v0 + 480) = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v7, v8, v5);
  sub_10080F01C(v8, type metadata accessor for ObservedAdvertisement.BeaconIndexInformation);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v7, 0, 1, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1) {
    goto LABEL_6;
  }
  uint64_t v16 = *(void *)(v0 + 360);
  uint64_t v17 = *(void *)(v0 + 336);
  uint64_t v18 = *(void *)(v0 + 344);
  uint64_t v19 = *(void *)(v0 + 296);
  uint64_t v20 = *(void *)(v0 + 304);
  uint64_t v21 = *(void *)(v0 + 288);
  uint64_t v22 = *(void *)(v0 + 256);
  uint64_t v23 = *(void *)(v0 + 264);
  uint64_t v24 = *(void *)(v0 + 248);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
  *(void *)(v0 + 488) = v25;
  *(void *)(v0 + 496) = (v20 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v25(v17, v21, v19);
  sub_10001D074(v16 + *(int *)(v18 + 48), v24, &qword_10163CF50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v24, 1, v22) == 1)
  {
    uint64_t v26 = *(void *)(v0 + 360);
    uint64_t v27 = *(void *)(v0 + 248);
    (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 336), *(void *)(v0 + 296));
    sub_10080F01C(v26, type metadata accessor for ObservedAdvertisement);
    uint64_t v11 = &qword_10163CF50;
    uint64_t v12 = v27;
    goto LABEL_7;
  }
  uint64_t v28 = *(void *)(v0 + 336);
  uint64_t v29 = *(void *)(v0 + 296);
  uint64_t v30 = *(uint64_t **)(v0 + 272);
  uint64_t v31 = *(void *)(v0 + 256);
  uint64_t v32 = *(_OWORD **)(v0 + 240);
  uint64_t v33 = *(int **)(v0 + 208);
  sub_10080ECB8(*(void *)(v0 + 248), (uint64_t)v30, type metadata accessor for ObservedAdvertisement.Location);
  UUID.init()();
  v9((uint64_t)v32 + v33[6], v28, v29);
  uint64_t v34 = *v30;
  uint64_t v35 = v30[1];
  uint64_t v36 = v30[2];
  uint64_t v37 = (char *)v30 + *(int *)(v31 + 28);
  uint64_t v38 = (char *)v32 + v33[10];
  uint64_t v39 = type metadata accessor for Date();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v59 = v9;
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  v41(v38, v37, v39);
  unint64_t v42 = (char *)v32 + v33[12];
  v41(v42, v37, v39);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v42, 0, 1, v39);
  *uint64_t v32 = xmmword_101348180;
  *(void *)((char *)v32 + v33[7]) = v34;
  *(void *)((char *)v32 + v33[8]) = v35;
  *(void *)((char *)v32 + v33[9]) = v36;
  *((unsigned char *)v32 + v33[11]) = 2;
  *(void *)((char *)v32 + v33[13]) = 0;
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v43 = *(void *)(v0 + 328);
  uint64_t v44 = *(void *)(v0 + 336);
  uint64_t v45 = *(void *)(v0 + 296);
  uint64_t v46 = type metadata accessor for Logger();
  sub_100010324(v46, (uint64_t)qword_10170E3B0);
  v59(v43, v44, v45);
  uint64_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.info.getter();
  BOOL v49 = os_log_type_enabled(v47, v48);
  uint64_t v50 = *(void *)(v0 + 328);
  uint64_t v51 = *(void *)(v0 + 296);
  uint64_t v52 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 304) + 8);
  if (v49)
  {
    uint64_t v53 = swift_slowAlloc();
    uint64_t v60 = swift_slowAlloc();
    *(_DWORD *)uint64_t v53 = 141558275;
    *(void *)(v53 + 4) = 1752392040;
    *(_WORD *)(v53 + 12) = 2081;
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v54 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v53 + 14) = sub_1008FA0F0(v54, v55, &v60);
    swift_bridgeObjectRelease();
    uint64_t v56 = *v52;
    (*v52)(v50, v51);
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "Saving location for beacon - from observation store update: beacon: %{private,mask.hash}s.", (uint8_t *)v53, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v56 = *v52;
    (*v52)(*(void *)(v0 + 328), *(void *)(v0 + 296));
  }

  *(void *)(v0 + 504) = v56;
  uint64_t v57 = *(void *)(v0 + 200);
  return _swift_task_switch(sub_1007F0F1C, v57, 0);
}

uint64_t sub_1007F0F1C()
{
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 136, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 160))
  {
    sub_10001CEB0((long long *)(v0 + 136), v0 + 96);
    sub_10001CD44((void *)(v0 + 96), *(void *)(v0 + 120));
    uint64_t v3 = (uint64_t (*)(void))((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 512) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1007F1008;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007F1008(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 200);
  *(void *)(*(void *)v1 + 520) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007F1120, v2, 0);
}

uint64_t sub_1007F1120()
{
  uint64_t v1 = *(void *)(v0 + 520);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 96);
  if (v1)
  {
    uint64_t v2 = sub_1007F11D8;
  }
  else
  {
    sub_100802B3C();
    *(void *)(v0 + 568) = swift_allocError();
    *uint64_t v3 = 1;
    swift_willThrow();
    uint64_t v2 = sub_1007F17C8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1007F11D8()
{
  uint64_t v1 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 488);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v3 = *(void *)(v0 + 296);
  uint64_t v4 = *(void *)(v0 + 304);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 472))(v2, *(void *)(v0 + 336), v3);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 528) = v6;
  v1(v6 + v5, v2, v3);
  uint64_t v7 = *(void *)(v0 + 520);
  return _swift_task_switch(sub_1007F129C, v7, 0);
}

uint64_t sub_1007F129C()
{
  uint64_t v1 = (void (*)(uint64_t))v0[66];
  uint64_t v2 = v0[65];
  uint64_t v4 = v0[29];
  uint64_t v3 = v0[30];
  uint64_t v6 = v0[27];
  uint64_t v5 = v0[28];
  v0[67] = *(void *)(v2 + 136);
  sub_10080E7F4(v3, v4, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  v0[68] = v9;
  *(void *)(v9 + 16) = v2;
  sub_10080ECB8(v4, v9 + v7, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
  uint64_t v10 = (void (**)(uint64_t))(v9 + v8);
  *uint64_t v10 = sub_10080D784;
  v10[1] = v1;
  swift_retain();
  swift_retain();
  return _swift_task_switch(sub_1007F13C4, 0, 0);
}

uint64_t sub_1007F13C4()
{
  uint64_t v1 = v0[68];
  uint64_t v2 = v0[67];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[69] = v3;
  v3[2] = v2;
  v3[3] = sub_100802CC8;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[70] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007F14D0;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F7348, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_1007F14D0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 520);
  return _swift_task_switch(sub_1007F1620, v2, 0);
}

uint64_t sub_1007F1620()
{
  swift_release();
  swift_release();
  return _swift_task_switch(sub_1007F1694, 0, 0);
}

uint64_t sub_1007F1694()
{
  uint64_t v1 = v0[45];
  uint64_t v2 = v0[42];
  uint64_t v3 = v0[37];
  uint64_t v4 = v0[38];
  uint64_t v5 = v0[34];
  sub_10080F01C(v0[30], (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
  sub_10080F01C(v5, type metadata accessor for ObservedAdvertisement.Location);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_10080F01C(v1, type metadata accessor for ObservedAdvertisement);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[58] = (uint64_t)v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1007F05A0;
  uint64_t v7 = v0[53];
  uint64_t v8 = v0[46];
  return AsyncStream.Iterator.next(isolation:)(v8, 0, 0, v7);
}

uint64_t sub_1007F17C8()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[63];
  uint64_t v2 = v0[54];
  uint64_t v3 = v0[55];
  uint64_t v11 = v0[53];
  uint64_t v4 = v0[45];
  uint64_t v5 = v0[42];
  uint64_t v6 = v0[37];
  uint64_t v7 = v0[34];
  uint64_t v8 = v0[30];
  swift_release();
  sub_10080F01C(v8, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
  sub_10080F01C(v7, type metadata accessor for ObservedAdvertisement.Location);
  v1(v5, v6);
  sub_10080F01C(v4, type metadata accessor for ObservedAdvertisement);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

void sub_1007F1988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_1016428D8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v9 = &v25[-v8];
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_100010324(v14, (uint64_t)qword_10170E3B0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  sub_10001D074(a1, (uint64_t)v9, &qword_1016428D8);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.info.getter();
  int v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v27 = v4;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v28 = v20;
    *(_DWORD *)uint64_t v19 = 141558531;
    uint64_t v29 = 1752392040;
    uint64_t v30 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 12) = 2081;
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    int v26 = v17;
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v29 = sub_1008FA0F0(v21, v22, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
    *(_WORD *)(v19 + 22) = 2080;
    sub_10001D074((uint64_t)v9, (uint64_t)v7, &qword_1016428D8);
    uint64_t v23 = String.init<A>(describing:)();
    uint64_t v29 = sub_1008FA0F0(v23, v24, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001DAB4((uint64_t)v9, &qword_1016428D8);
    _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v26, "Done saving location for beacon (from observation store update): %{private,mask.hash}s,\nresult: %s.", (uint8_t *)v19, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
    sub_10001DAB4((uint64_t)v9, &qword_1016428D8);
  }
}

void sub_1007F1D44()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + 192);
  if (v2)
  {
    id v3 = v2;
    CurrentLocationMonitor.forceStopMonitor()();

    uint64_t v2 = *(void **)(v1 + 192);
  }
  *(void *)(v1 + 192) = 0;

  *(unsigned char *)(v1 + 200) = 0;
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100010324(v4, (uint64_t)qword_10170E3B0);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v5, "Location monitor stopped.", v6, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1007F1E58()
{
  v1[22] = v0;
  uint64_t v2 = type metadata accessor for UUID();
  v1[23] = v2;
  v1[24] = *(void *)(v2 - 8);
  v1[25] = swift_task_alloc();
  v1[26] = type metadata accessor for BeaconIdentifier();
  v1[27] = swift_task_alloc();
  return _swift_task_switch(sub_1007F1F48, v0, 0);
}

uint64_t sub_1007F1F48()
{
  uint64_t v9 = v0;
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170E3B0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    *(void *)(v0 + 168) = sub_1008FA0F0(0xD000000000000019, 0x80000001014085A0, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s.", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v7 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1007F21DC;
    return v7();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007F21DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 176);
  *(void *)(*(void *)v1 + 232) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007F22F4, v2, 0);
}

uint64_t sub_1007F22F4()
{
  uint64_t v1 = *(void *)(v0 + 232);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 232);
    return _swift_task_switch(sub_1007F23A8, v2, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_1007F23A8()
{
  *(void *)(v0 + 240) = *(void *)(*(void *)(v0 + 232) + 136);
  swift_retain();
  return _swift_task_switch(sub_1007F241C, 0, 0);
}

uint64_t sub_1007F241C()
{
  uint64_t v2 = v0[29];
  uint64_t v1 = v0[30];
  os_log_type_t v3 = (void *)swift_task_alloc();
  v0[31] = v3;
  v3[2] = v1;
  v3[3] = sub_1001D4090;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[32] = v4;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_101653DD0);
  *uint64_t v4 = v0;
  v4[1] = sub_1007F2534;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 20, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10080F36C, v3, v5);
}

uint64_t sub_1007F2534()
{
  uint64_t v1 = (void *)*v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  v1[33] = v1[20];
  uint64_t v2 = v1[29];
  return _swift_task_switch(sub_1007F2690, v2, 0);
}

uint64_t sub_1007F2690()
{
  uint64_t v1 = *(void *)(v0 + 176);
  swift_release();
  return _swift_task_switch(sub_1007F26FC, v1, 0);
}

uint64_t sub_1007F26FC()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = *(void *)(v1 + 16);
  v0[34] = v2;
  if (v2)
  {
    v0[35] = 0;
    uint64_t v3 = v0[27];
    uint64_t v5 = v0[24];
    uint64_t v4 = v0[25];
    uint64_t v6 = v0[23];
    sub_10001D010(v1 + 32, (uint64_t)(v0 + 12));
    uid_t v7 = getuid();
    sub_100DC5FC0(v7);
    uint64_t v8 = v0[15];
    uint64_t v9 = v0[16];
    sub_10001CD44(v0 + 12, v8);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v9 + 8) + 8) + 32))(v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, v4, v6);
    uint64_t v10 = v0[15];
    uint64_t v11 = v0[16];
    uint64_t v12 = sub_10001CD44(v0 + 12, v10);
    uint64_t v13 = (void *)swift_task_alloc();
    v0[36] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1007F28B4;
    uint64_t v14 = v0[27];
    uint64_t v15 = v0[22];
    return sub_100805F98(v14, (uint64_t)v12, v15, v10, v11);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    int v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t sub_1007F28B4()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  uint64_t v3 = v1[15];
  uint64_t v4 = v1[16];
  uint64_t v5 = sub_10001CD44(v1 + 12, v3);
  uint64_t v6 = (void *)swift_task_alloc();
  v1[37] = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1007F2A5C;
  uint64_t v7 = v1[22];
  uint64_t v8 = v1[27];
  return sub_10080A910(v8, (uint64_t)v5, v7, v3, v4);
}

uint64_t sub_1007F2A5C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  swift_task_dealloc();
  return _swift_task_switch(sub_1007F2B6C, v1, 0);
}

uint64_t sub_1007F2B6C()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[35] + 1;
  sub_10080F01C(v0[27], (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 12));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v0[35] + 1;
    v0[35] = v5;
    uint64_t v6 = v0[27];
    uint64_t v8 = v0[24];
    uint64_t v7 = v0[25];
    uint64_t v9 = v0[23];
    sub_10001D010(v0[33] + 40 * v5 + 32, (uint64_t)(v0 + 12));
    uid_t v10 = getuid();
    sub_100DC5FC0(v10);
    uint64_t v11 = v0[15];
    uint64_t v12 = v0[16];
    sub_10001CD44(v0 + 12, v11);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v12 + 8) + 8) + 32))(v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v7, v9);
    uint64_t v13 = v0[15];
    uint64_t v14 = v0[16];
    uint64_t v15 = sub_10001CD44(v0 + 12, v13);
    os_log_type_t v16 = (void *)swift_task_alloc();
    v0[36] = v16;
    *os_log_type_t v16 = v0;
    v16[1] = sub_1007F28B4;
    uint64_t v17 = v0[27];
    uint64_t v18 = v0[22];
    return sub_100805F98(v17, (uint64_t)v15, v18, v13, v14);
  }
}

uint64_t sub_1007F2D60()
{
  *(void *)(v1 + 120) = v0;
  sub_10000588C(&qword_10164DBB0);
  *(void *)(v1 + 128) = swift_task_alloc();
  return _swift_task_switch(sub_1007F2DF4, v0, 0);
}

uint64_t sub_1007F2DF4()
{
  uint64_t v1 = *(void *)(v0 + 120);
  if (*(void *)(v1 + 176))
  {
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100010324(v2, (uint64_t)qword_10170E3B0);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Already subscribed to device events.", v5, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 128);
    uint64_t v9 = type metadata accessor for TaskPriority();
    *(void *)(v0 + 136) = v9;
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    *(void *)(v0 + 144) = v11;
    *(void *)(v0 + 152) = (v10 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v11(v8, 1, 1, v9);
    uint64_t v12 = (void *)swift_allocObject();
    void v12[2] = 0;
    v12[3] = 0;
    v12[4] = v1;
    swift_retain();
    uint64_t v13 = sub_100128234(v8, (uint64_t)&unk_10164E890, (uint64_t)v12);
    sub_10001DAB4(v8, &qword_10164DBB0);
    *(void *)(v1 + 176) = v13;
    swift_release();
    if (qword_1016375E8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
    if (*(void *)(v0 + 80))
    {
      sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
      sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
      uint64_t v15 = (uint64_t (__cdecl *)())((char *)&dword_101639150 + dword_101639150);
      uint64_t v14 = (void *)swift_task_alloc();
      *(void *)(v0 + 160) = v14;
      *uint64_t v14 = v0;
      v14[1] = sub_1007F30F4;
      return v15();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1007F30F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 120);
  *(void *)(*(void *)v1 + 168) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007F320C, v2, 0);
}

uint64_t sub_1007F320C()
{
  uint64_t v1 = v0 + 16;
  uint64_t v2 = *(void *)(v0 + 168);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 120);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    if (!*(void *)(v3 + 184))
    {
      uint64_t v4 = *(void *)(v0 + 128);
      uint64_t v5 = *(void *)(v0 + 120);
      (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0 + 144))(v4, 1, 1, *(void *)(v0 + 136));
      uint64_t v6 = (void *)swift_allocObject();
      _OWORD v6[2] = 0;
      v6[3] = 0;
      v6[4] = v2;
      v6[5] = v5;
      swift_retain();
      uint64_t v7 = sub_100128234(v4, (uint64_t)&unk_10164E8A0, (uint64_t)v6);
      sub_10001DAB4(v4, &qword_10164DBB0);
      *(void *)(v3 + 184) = v7;
    }
    swift_release();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
  }
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1007F332C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[28] = a4;
  sub_10000588C((uint64_t *)&unk_10163B1D0);
  v4[29] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for LocalFindableAccessoryRecord();
  v4[30] = v5;
  v4[31] = *(void *)(v5 - 8);
  v4[32] = swift_task_alloc();
  v4[33] = type metadata accessor for BeaconIdentifier();
  v4[34] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DeviceEvent(0);
  v4[35] = v6;
  v4[36] = *(void *)(v6 - 8);
  v4[37] = swift_task_alloc();
  v4[38] = swift_task_alloc();
  v4[39] = swift_task_alloc();
  sub_10000588C(&qword_10163D030);
  v4[40] = swift_task_alloc();
  uint64_t v7 = sub_10000588C(&qword_10164E940);
  v4[41] = v7;
  v4[42] = *(void *)(v7 - 8);
  v4[43] = swift_task_alloc();
  uint64_t v8 = sub_10000588C(&qword_10164E948);
  v4[44] = v8;
  v4[45] = *(void *)(v8 - 8);
  v4[46] = swift_task_alloc();
  uint64_t v9 = sub_10000588C(&qword_10164E950);
  v4[47] = v9;
  v4[48] = *(void *)(v9 - 8);
  v4[49] = swift_task_alloc();
  return _swift_task_switch(sub_1007F3614, 0, 0);
}

uint64_t sub_1007F3614()
{
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 400) = sub_100010324(v1, (uint64_t)qword_10170E3B0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Location fetch service subscribing to device events.", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 224);

  return _swift_task_switch(sub_1007F3738, v5, 0);
}

uint64_t sub_1007F3738()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    os_log_type_t v3 = (uint64_t (__cdecl *)())((char *)&dword_101639138 + dword_101639138);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 408) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1007F3874;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007F3874(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 224);
  *(void *)(*(void *)v1 + 416) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007F398C, v2, 0);
}

uint64_t sub_1007F398C()
{
  uint64_t v1 = *(void *)(v0 + 416);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  if (v1)
  {
    uint64_t v2 = sub_1007F3A40;
  }
  else
  {
    sub_100802B3C();
    *(void *)(v0 + 424) = swift_allocError();
    *os_log_type_t v3 = 0;
    swift_willThrow();
    uint64_t v2 = sub_1007F3B98;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1007F3A40()
{
  uint64_t v2 = v0[45];
  uint64_t v1 = v0[46];
  uint64_t v3 = v0[44];
  (*(void (**)(void, void, void))(v0[42] + 104))(v0[43], enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v0[41]);
  AsyncStream.init(_:bufferingPolicy:_:)();
  swift_release();
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[54] = 0;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[55] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007F3DBC;
  uint64_t v5 = v0[47];
  uint64_t v6 = v0[40];
  return AsyncStream.Iterator.next(isolation:)(v6, 0, 0, v5);
}

uint64_t sub_1007F3B98()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 216) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to register for device events: %{public}@.", v3, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1007F3DBC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1007F3EB8, 0, 0);
}

uint64_t sub_1007F3EB8()
{
  uint64_t v28 = v0;
  uint64_t v1 = *(void *)(v0 + 320);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 288) + 48))(v1, 1, *(void *)(v0 + 280)) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 384) + 8))(*(void *)(v0 + 392), *(void *)(v0 + 376));
    os_log_type_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Ended stream of device events.", v4, 2u);
      swift_slowDealloc();
    }
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 312);
  sub_10080ECB8(v1, v5, type metadata accessor for DeviceEvent);
  sub_10080E7F4(v5, v6, type metadata accessor for DeviceEvent);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = *(void *)(v0 + 304);
  if (v9)
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 141558275;
    *(void *)(v11 + 4) = 1752392040;
    *(_WORD *)(v11 + 12) = 2081;
    type metadata accessor for UUID();
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    *(void *)(v0 + 200) = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 208) = v12;
    v13._countAndFlagsBits = 47;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    v14._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    *(void *)(v11 + 14) = sub_1008FA0F0(*(void *)(v0 + 200), *(void *)(v0 + 208), &v27);
    swift_bridgeObjectRelease();
    sub_10080F01C(v10, type metadata accessor for DeviceEvent);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Subscription updated device event for beacon: %{private,mask.hash}s.", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10080F01C(*(void *)(v0 + 304), type metadata accessor for DeviceEvent);
  }

  uint64_t v15 = *(void *)(v0 + 432);
  static Task<>.checkCancellation()();
  if (v15)
  {
    uint64_t v17 = *(void *)(v0 + 384);
    uint64_t v16 = *(void *)(v0 + 392);
    uint64_t v18 = *(void *)(v0 + 376);
    sub_10080F01C(*(void *)(v0 + 312), type metadata accessor for DeviceEvent);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v2 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138543362;
      swift_errorRetain();
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 216) = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v21 = v22;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v2, v19, "Failed to register for device events: %{public}@.", v20, 0xCu);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
LABEL_16:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
      return v25();
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
LABEL_15:

    goto LABEL_16;
  }
  sub_10080E7F4(*(void *)(v0 + 312) + *(int *)(*(void *)(v0 + 280) + 36), *(void *)(v0 + 272), (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 96, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 120))
  {
    sub_10001CEB0((long long *)(v0 + 96), v0 + 136);
    sub_10001CD44((void *)(v0 + 136), *(void *)(v0 + 160));
    int v26 = (uint64_t (__cdecl *)())((char *)&dword_101639150 + dword_101639150);
    unint64_t v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v24;
    *unint64_t v24 = v0;
    v24[1] = sub_1007F44DC;
    return v26();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007F44DC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 456) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007F45DC, 0, 0);
}

uint64_t sub_1007F45DC()
{
  uint64_t v24 = v0;
  uint64_t v1 = v0 + 136;
  if (*(void *)(v0 + 456))
  {
    uint64_t v2 = *(void *)(v0 + 264);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    *(_DWORD *)(v0 + 496) = *(_DWORD *)(v2 + 20);
    uint64_t v3 = *(void *)(v0 + 456);
    return _swift_task_switch(sub_1007F49E8, v3, 0);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    sub_100802B3C();
    swift_allocError();
    *uint64_t v4 = 2;
    swift_willThrow();
    sub_10080E7F4(*(void *)(v0 + 312), *(void *)(v0 + 296), type metadata accessor for DeviceEvent);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = *(void *)(v0 + 312);
    uint64_t v9 = *(void *)(v0 + 296);
    if (v7)
    {
      uint64_t v22 = *(void *)(v0 + 272);
      uint64_t v10 = swift_slowAlloc();
      uint64_t v21 = v8;
      uint64_t v11 = (void *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138543875;
      swift_errorRetain();
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v10 + 4) = v12;
      *uint64_t v11 = v12;
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v10 + 12) = 2160;
      *(void *)(v10 + 14) = 1752392040;
      *(_WORD *)(v10 + 22) = 2081;
      type metadata accessor for UUID();
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v10 + 24) = sub_1008FA0F0(v13, v14, &v23);
      swift_bridgeObjectRelease();
      sub_10080F01C(v9, type metadata accessor for DeviceEvent);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "No beacon found to update device event: %{public}@for beacon: %{private,mask.hash}s", (uint8_t *)v10, 0x20u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      sub_10080F01C(v22, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
      uint64_t v15 = v21;
    }
    else
    {
      uint64_t v16 = *(void *)(v0 + 272);

      sub_10080F01C(v9, type metadata accessor for DeviceEvent);
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      sub_10080F01C(v16, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
      uint64_t v15 = v8;
    }
    sub_10080F01C(v15, type metadata accessor for DeviceEvent);
    *(void *)(v0 + 432) = 0;
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 440) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1007F3DBC;
    uint64_t v18 = *(void *)(v0 + 376);
    uint64_t v19 = *(void *)(v0 + 320);
    return AsyncStream.Iterator.next(isolation:)(v19, 0, 0, v18);
  }
}

uint64_t sub_1007F49E8()
{
  uint64_t v1 = *(int *)(v0 + 496);
  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 464) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1007F4A98;
  uint64_t v4 = *(void *)(v0 + 232);
  return sub_100C12834(v4, v2 + v1);
}

uint64_t sub_1007F4A98()
{
  *(void *)(*(void *)v1 + 472) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1007F5034;
  }
  else {
    uint64_t v2 = sub_1007F4BAC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1007F4BAC()
{
  int v26 = v0;
  uint64_t v1 = v0[29];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[31] + 48))(v1, 1, v0[30]) == 1)
  {
    swift_release();
    sub_10001DAB4(v1, (uint64_t *)&unk_10163B1D0);
    sub_100802B3C();
    swift_allocError();
    *uint64_t v2 = 2;
    swift_willThrow();
    sub_10080E7F4(v0[39], v0[37], type metadata accessor for DeviceEvent);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v6 = v0[39];
    uint64_t v7 = v0[37];
    if (v5)
    {
      uint64_t v24 = v0[34];
      uint64_t v8 = swift_slowAlloc();
      uint64_t v23 = v6;
      uint64_t v9 = (void *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138543875;
      swift_errorRetain();
      uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v8 + 4) = v10;
      void *v9 = v10;
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v8 + 12) = 2160;
      *(void *)(v8 + 14) = 1752392040;
      *(_WORD *)(v8 + 22) = 2081;
      type metadata accessor for UUID();
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v8 + 24) = sub_1008FA0F0(v11, v12, &v25);
      swift_bridgeObjectRelease();
      sub_10080F01C(v7, type metadata accessor for DeviceEvent);
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "No beacon found to update device event: %{public}@for beacon: %{private,mask.hash}s", (uint8_t *)v8, 0x20u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      sub_10080F01C(v24, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
      uint64_t v13 = v23;
    }
    else
    {
      uint64_t v19 = v0[34];

      sub_10080F01C(v7, type metadata accessor for DeviceEvent);
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      sub_10080F01C(v19, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
      uint64_t v13 = v6;
    }
    sub_10080F01C(v13, type metadata accessor for DeviceEvent);
    v0[54] = 0;
    uint64_t v20 = (void *)swift_task_alloc();
    v0[55] = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_1007F3DBC;
    uint64_t v21 = v0[47];
    uint64_t v22 = v0[40];
    return AsyncStream.Iterator.next(isolation:)(v22, 0, 0, v21);
  }
  else
  {
    sub_10080ECB8(v1, v0[32], (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
    unint64_t v14 = (void *)swift_task_alloc();
    v0[60] = v14;
    *unint64_t v14 = v0;
    v14[1] = sub_1007F53B4;
    uint64_t v15 = v0[34];
    uint64_t v16 = v0[32];
    uint64_t v17 = v0[28];
    return sub_100803330(v15, v16, v17);
  }
}

uint64_t sub_1007F5034()
{
  uint64_t v20 = v0;
  swift_release();
  sub_10080E7F4(v0[39], v0[37], type metadata accessor for DeviceEvent);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  BOOL v3 = os_log_type_enabled(v1, v2);
  uint64_t v4 = v0[39];
  uint64_t v5 = v0[37];
  if (v3)
  {
    uint64_t v18 = v0[34];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v17 = v4;
    uint64_t v7 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138543875;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v6 + 4) = v8;
    *uint64_t v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v6 + 12) = 2160;
    *(void *)(v6 + 14) = 1752392040;
    *(_WORD *)(v6 + 22) = 2081;
    type metadata accessor for UUID();
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v6 + 24) = sub_1008FA0F0(v9, v10, &v19);
    swift_bridgeObjectRelease();
    sub_10080F01C(v5, type metadata accessor for DeviceEvent);
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "No beacon found to update device event: %{public}@for beacon: %{private,mask.hash}s", (uint8_t *)v6, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    sub_10080F01C(v18, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    uint64_t v11 = v17;
  }
  else
  {
    uint64_t v12 = v0[34];

    sub_10080F01C(v5, type metadata accessor for DeviceEvent);
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    sub_10080F01C(v12, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    uint64_t v11 = v4;
  }
  sub_10080F01C(v11, type metadata accessor for DeviceEvent);
  v0[54] = 0;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[55] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1007F3DBC;
  uint64_t v14 = v0[47];
  uint64_t v15 = v0[40];
  return AsyncStream.Iterator.next(isolation:)(v15, 0, 0, v14);
}

uint64_t sub_1007F53B4()
{
  uint64_t v1 = (void *)*v0;
  os_log_type_t v2 = (void *)*v0;
  swift_task_dealloc();
  BOOL v3 = (void *)swift_task_alloc();
  v1[61] = v3;
  *BOOL v3 = v2;
  v3[1] = sub_1007F5520;
  uint64_t v4 = v1[32];
  uint64_t v5 = v1[28];
  uint64_t v6 = v1[34];
  return sub_100808C24(v6, v4, v5);
}

uint64_t sub_1007F5520()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1007F561C, 0, 0);
}

uint64_t sub_1007F561C()
{
  uint64_t v1 = v0[39];
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[32];
  swift_release();
  sub_10080F01C(v3, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  sub_10080F01C(v2, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
  sub_10080F01C(v1, type metadata accessor for DeviceEvent);
  v0[54] = v0[59];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[55] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007F3DBC;
  uint64_t v5 = v0[47];
  uint64_t v6 = v0[40];
  return AsyncStream.Iterator.next(isolation:)(v6, 0, 0, v5);
}

uint64_t sub_1007F573C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[14] = a4;
  v5[15] = a5;
  v5[16] = type metadata accessor for BeaconIdentifier();
  v5[17] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10163B1D0);
  v5[18] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for LocalFindableAccessoryRecord();
  v5[19] = v7;
  v5[20] = *(void *)(v7 - 8);
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for CloudStorageStore.State(0);
  v5[23] = v8;
  v5[24] = *(void *)(v8 - 8);
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10164E8B0);
  v5[27] = swift_task_alloc();
  uint64_t v9 = sub_10000588C(&qword_101656E20);
  v5[28] = v9;
  v5[29] = *(void *)(v9 - 8);
  v5[30] = swift_task_alloc();
  uint64_t v10 = sub_10000588C(&qword_10164E8C0);
  v5[31] = v10;
  v5[32] = *(void *)(v10 - 8);
  v5[33] = swift_task_alloc();
  uint64_t v11 = sub_10000588C(&qword_10164E8C8);
  v5[34] = v11;
  v5[35] = *(void *)(v11 - 8);
  v5[36] = swift_task_alloc();
  return _swift_task_switch(sub_1007F5A2C, a4, 0);
}

uint64_t sub_1007F5A2C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 112) + 128);
  *(void *)(v0 + 296) = v1;
  return _swift_task_switch(sub_1007F5A50, v1, 0);
}

uint64_t sub_1007F5A50()
{
  uint64_t v2 = v0[29];
  uint64_t v1 = v0[30];
  uint64_t v3 = v0[28];
  swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v3);
  AsyncStream.init(_:bufferingPolicy:_:)();
  swift_release();
  return _swift_task_switch(sub_1007F5B58, 0, 0);
}

uint64_t sub_1007F5B58()
{
  uint64_t v2 = v0[32];
  uint64_t v1 = v0[33];
  uint64_t v3 = v0[31];
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[38] = 0;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[39] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007F5C38;
  uint64_t v5 = v0[34];
  uint64_t v6 = v0[27];
  return AsyncStream.Iterator.next(isolation:)(v6, 0, 0, v5);
}

uint64_t sub_1007F5C38()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1007F5D34, 0, 0);
}

uint64_t sub_1007F5D34()
{
  uint64_t v40 = v0;
  uint64_t v1 = v0[27];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[24] + 48))(v1, 1, v0[23]) == 1)
  {
    (*(void (**)(void, void))(v0[35] + 8))(v0[36], v0[34]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
LABEL_5:
    return v2();
  }
  uint64_t v3 = v0[38];
  sub_10080ECB8(v1, v0[26], type metadata accessor for CloudStorageStore.State);
  static Task<>.checkCancellation()();
  v0[40] = v3;
  if (v3)
  {
    uint64_t v5 = v0[35];
    uint64_t v4 = v0[36];
    uint64_t v6 = v0[34];
    sub_10080F01C(v0[26], type metadata accessor for CloudStorageStore.State);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    goto LABEL_5;
  }
  sub_10080E7F4(v0[26], v0[25], type metadata accessor for CloudStorageStore.State);
  if (swift_getEnumCaseMultiPayload())
  {
    uint64_t v8 = v0[25];
    sub_10080F01C(v0[26], type metadata accessor for CloudStorageStore.State);
    sub_10080F01C(v8, type metadata accessor for CloudStorageStore.State);
LABEL_16:
    v0[38] = v0[40];
    int v26 = (void *)swift_task_alloc();
    v0[39] = v26;
    *int v26 = v0;
    v26[1] = sub_1007F5C38;
    uint64_t v27 = v0[34];
    uint64_t v28 = v0[27];
    return AsyncStream.Iterator.next(isolation:)(v28, 0, 0, v27);
  }
  uint64_t v9 = v0[20];
  sub_10001CEB0((long long *)v0[25], (uint64_t)(v0 + 2));
  sub_10001D010((uint64_t)(v0 + 2), (uint64_t)(v0 + 7));
  sub_10000588C(&qword_10164E8D0);
  char v10 = swift_dynamicCast();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v9 + 56);
  if ((v10 & 1) == 0)
  {
    uint64_t v24 = v0[26];
    uint64_t v25 = v0[18];
    v11(v25, 1, 1, v0[19]);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
    sub_10080F01C(v24, type metadata accessor for CloudStorageStore.State);
    sub_10001DAB4(v25, (uint64_t *)&unk_10163B1D0);
    goto LABEL_16;
  }
  uint64_t v12 = v0[22];
  uint64_t v13 = v0[18];
  v11(v13, 0, 1, v0[19]);
  sub_10080ECB8(v13, v12, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v14 = v0[21];
  uint64_t v15 = v0[22];
  uint64_t v16 = type metadata accessor for Logger();
  sub_100010324(v16, (uint64_t)qword_10170E3B0);
  sub_10080E7F4(v15, v14, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v20 = v0[21];
  if (v19)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 141558275;
    v0[12] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 12) = 2081;
    type metadata accessor for UUID();
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[13] = sub_1008FA0F0(v22, v23, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10080F01C(v20, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Updating events for local findable record modified %{private,mask.hash}s.", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10080F01C(v0[21], (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  }

  uint64_t v29 = v0[22];
  uint64_t v31 = v0[16];
  uint64_t v30 = v0[17];
  uid_t v32 = getuid();
  sub_100DC5FC0(v32);
  uint64_t v33 = v30 + *(int *)(v31 + 20);
  uint64_t v34 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v33, v29, v34);
  uint64_t v35 = (void *)swift_task_alloc();
  v0[41] = v35;
  *uint64_t v35 = v0;
  v35[1] = sub_1007F6418;
  uint64_t v36 = v0[22];
  uint64_t v37 = v0[17];
  uint64_t v38 = v0[15];
  return sub_100803330(v37, v36, v38);
}

uint64_t sub_1007F6418()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[42] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1007F6584;
  uint64_t v4 = v1[22];
  uint64_t v5 = v1[15];
  uint64_t v6 = v1[17];
  return sub_100808C24(v6, v4, v5);
}

uint64_t sub_1007F6584()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1007F6680, 0, 0);
}

uint64_t sub_1007F6680()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[22];
  sub_10080F01C(v0[17], (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
  sub_10080F01C(v2, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  sub_10080F01C(v1, type metadata accessor for CloudStorageStore.State);
  v0[38] = v0[40];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[39] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1007F5C38;
  uint64_t v4 = v0[34];
  uint64_t v5 = v0[27];
  return AsyncStream.Iterator.next(isolation:)(v5, 0, 0, v4);
}

uint64_t sub_1007F67A0()
{
  uint64_t v1 = v0;
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100010324(v2, (uint64_t)qword_10170E3B0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    sub_1008FA0F0(0xD00000000000001FLL, 0x8000000101408580, &v7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s.", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (*(void *)(v1 + 176))
  {
    swift_retain();
    sub_10000588C(&qword_101638D40);
    Task.cancel()();
    swift_release();
  }
  *(void *)(v1 + 176) = 0;
  swift_release();
  if (*(void *)(v1 + 184))
  {
    swift_retain();
    sub_10000588C(&qword_101638D40);
    Task.cancel()();
    swift_release();
  }
  *(void *)(v1 + 184) = 0;
  return swift_release();
}

uint64_t sub_1007F69C8(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 56) = a6;
  *(void *)(v7 + 64) = a7;
  *(void *)(v7 + 48) = a5;
  *(double *)(v7 + 40) = a1;
  uint64_t v8 = type metadata accessor for ContinuousClock();
  *(void *)(v7 + 72) = v8;
  *(void *)(v7 + 80) = *(void *)(v8 - 8);
  *(void *)(v7 + 88) = swift_task_alloc();
  return _swift_task_switch(sub_1007F6A90, 0, 0);
}

uint64_t sub_1007F6A90()
{
  uint64_t v1 = static Duration.seconds(_:)();
  uint64_t v3 = v2;
  ContinuousClock.init()();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1016666E8 + dword_1016666E8);
  os_log_type_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v4;
  *os_log_type_t v4 = v0;
  v4[1] = sub_1007F6B6C;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_1007F6B6C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[10] + 8))(v2[11], v2[9]);
  if (v0) {
    uint64_t v3 = sub_1007F6F38;
  }
  else {
    uint64_t v3 = sub_1007F6CD4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1007F6CD4()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[14] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)v0[8];
    uint64_t v3 = v2[3];
    uint64_t v4 = v2[4];
    uint64_t v5 = sub_10001CD44(v2, v3);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[15] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1007F6E00;
    uint64_t v7 = v0[7];
    return sub_100805F98(v7, (uint64_t)v5, Strong, v3, v4);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_1007F6E00()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1007F6F38()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_1007F6F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_10000588C(&qword_10163CF20);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DeviceEvent.AttachmentInfo(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DeviceEvent(0);
  sub_10001D074(a1 + *(int *)(v12 + 32), (uint64_t)v7, &qword_10163CF20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10001DAB4((uint64_t)v7, &qword_10163CF20);
    id v13 = 0;
  }
  else
  {
    sub_10080ECB8((uint64_t)v7, (uint64_t)v11, type metadata accessor for DeviceEvent.AttachmentInfo);
    id v14 = objc_allocWithZone((Class)SPAttachmentInfo);
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    id v13 = [v14 initWithAttachedToDevice:isa];

    sub_10080F01C((uint64_t)v11, type metadata accessor for DeviceEvent.AttachmentInfo);
  }
  v16.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
  uint64_t v17 = qword_10136A2A0[*(char *)(a1 + 9)];
  if (a3)
  {
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v18 = 0;
  }
  id v19 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithTimestamp:v16.super.isa source:v17 attachmentInfo:v13 serialNumber:v18];

  sub_10080F01C(a1, type metadata accessor for DeviceEvent);
  return v19;
}

uint64_t sub_1007F7218(uint64_t a1, uint64_t a2)
{
  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  v3[22] = type metadata accessor for BeaconIdentifier();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  sub_10000588C(&qword_10163CF20);
  v3[25] = swift_task_alloc();
  sub_10000588C(&qword_10164E880);
  v3[26] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Date();
  v3[27] = v4;
  v3[28] = *(void *)(v4 - 8);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10163AC90);
  v3[31] = swift_task_alloc();
  sub_10000588C(&qword_101638CF0);
  v3[32] = swift_task_alloc();
  sub_10000588C(&qword_10163D030);
  v3[33] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for DeviceEvent(0);
  v3[34] = v5;
  v3[35] = *(void *)(v5 - 8);
  v3[36] = swift_task_alloc();
  return _swift_task_switch(sub_1007F7478, v2, 0);
}

uint64_t sub_1007F7478()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_101639138 + dword_101639138);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 296) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1007F75B4;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007F75B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 168);
  *(void *)(*(void *)v1 + 304) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007F76CC, v2, 0);
}

uint64_t sub_1007F76CC()
{
  uint64_t v24 = v0;
  uint64_t v1 = (uint64_t)(v0 + 2);
  if (v0[38])
  {
    uint64_t v2 = v0[32];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v3 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[39] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1007F7BB8;
    uint64_t v6 = v0[32];
    uint64_t v5 = v0[33];
    uint64_t v7 = v0[20];
    return sub_1011054BC(v5, v7, 8, v6);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    sub_100802B3C();
    swift_allocError();
    unsigned char *v9 = 0;
    swift_willThrow();
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v10 = v0[23];
    uint64_t v11 = v0[20];
    uint64_t v12 = type metadata accessor for Logger();
    sub_100010324(v12, (uint64_t)qword_10170E3B0);
    sub_10080E7F4(v11, v10, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    swift_errorRetain();
    swift_errorRetain();
    id v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v16 = v0[23];
    if (v15)
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 141558531;
      v0[15] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v17 + 12) = 2081;
      type metadata accessor for UUID();
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[16] = sub_1008FA0F0(v18, v19, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10080F01C(v16, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
      *(_WORD *)(v17 + 22) = 2114;
      swift_errorRetain();
      uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
      v0[17] = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v22 = v20;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "No device event for this device found. Beacon: %{private,mask.hash}s, error: %{public}@.", (uint8_t *)v17, 0x20u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      sub_10080F01C(v16, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[35] + 56))(v0[19], 1, 1, v0[34]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
}

uint64_t sub_1007F7BB8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 320) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 256);
  uint64_t v4 = *(void *)(v2 + 168);
  sub_10001DAB4(v3, &qword_101638CF0);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_1007F81D4;
  }
  else {
    uint64_t v5 = sub_1007F7D24;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_1007F7D24()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[35];
  uint64_t v3 = v0[33];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = v0[19];
    sub_10001DAB4(v3, &qword_10163D030);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v4, 1, 1, v1);
    goto LABEL_12;
  }
  uint64_t v5 = v0[36];
  sub_10080ECB8(v3, v5, type metadata accessor for DeviceEvent);
  if (*(unsigned char *)(v5 + 9) != 5)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[28] + 56))(v0[31], 1, 1, v0[27]);
LABEL_10:
    sub_10001DAB4(v0[31], (uint64_t *)&unk_10163AC90);
    goto LABEL_11;
  }
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  uint64_t v6 = v0[34];
  uint64_t v7 = v0[31];
  uint64_t v8 = v0[27];
  uint64_t v9 = v0[28];
  OS_dispatch_queue.sync<A>(execute:)();
  sub_1010AB6E4(v0[18]);
  swift_bridgeObjectRelease();
  Date.addingTimeInterval(_:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    goto LABEL_10;
  }
  uint64_t v10 = v0[30];
  uint64_t v11 = v0[31];
  uint64_t v12 = v0[27];
  uint64_t v13 = v0[28];
  static Date.trustedNow.getter(v10);
  Date.timeIntervalSince(_:)();
  double v15 = v14;
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v16(v10, v12);
  v16(v11, v12);
  if (v15 <= 0.0)
  {
    uint64_t v17 = v0[36];
    uint64_t v18 = (int *)v0[34];
    uint64_t v32 = v0[30];
    uint64_t v33 = v0[35];
    uint64_t v19 = v0[28];
    uint64_t v20 = v0[26];
    uint64_t v30 = v0[29];
    uint64_t v31 = v0[27];
    uint64_t v22 = v0[24];
    uint64_t v21 = v0[25];
    uint64_t v23 = v0[19];
    (*(void (**)(void))(v19 + 16))();
    sub_10001D074(v17 + v18[7], v20, &qword_10164E880);
    sub_10001D074(v17 + v18[8], v21, &qword_10163CF20);
    sub_10080E7F4(v17 + v18[9], v22, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    static Date.trustedNow.getter(v30);
    sub_10080F01C(v17, type metadata accessor for DeviceEvent);
    *(void *)uint64_t v23 = 0;
    *(_WORD *)(v23 + 8) = 513;
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32);
    v24(v23 + *(int *)(v6 + 24), v32, v31);
    sub_10001D608(v20, v23 + v18[7], &qword_10164E880);
    sub_10001D608(v21, v23 + v18[8], &qword_10163CF20);
    sub_10080ECB8(v22, v23 + v18[9], (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    v24(v23 + v18[10], v30, v31);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v33 + 56))(v23, 0, 1, v18);
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v25 = v0[35];
  uint64_t v26 = v0[34];
  uint64_t v27 = v0[19];
  sub_10080ECB8(v0[36], v27, type metadata accessor for DeviceEvent);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, v26);
LABEL_12:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_1007F81D4()
{
  uint64_t v16 = v0;
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[20];
  uint64_t v3 = type metadata accessor for Logger();
  sub_100010324(v3, (uint64_t)qword_10170E3B0);
  sub_10080E7F4(v2, v1, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[23];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    double v14 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 141558531;
    v0[15] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2081;
    type metadata accessor for UUID();
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[16] = sub_1008FA0F0(v9, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10080F01C(v7, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    *(_WORD *)(v8 + 22) = 2114;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[17] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *double v14 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "No device event for this device found. Beacon: %{private,mask.hash}s, error: %{public}@.", (uint8_t *)v8, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    sub_10080F01C(v7, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[35] + 56))(v0[19], 1, 1, v0[34]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1007F85BC(uint64_t a1, uint64_t a2)
{
  v3[30] = a2;
  v3[31] = v2;
  v3[29] = a1;
  v3[32] = type metadata accessor for BeaconIdentifier();
  v3[33] = swift_task_alloc();
  sub_10000588C(&qword_10163CBA0);
  v3[34] = swift_task_alloc();
  sub_10000588C(&qword_10164E860);
  v3[35] = swift_task_alloc();
  uint64_t v4 = sub_10000588C(&qword_10164E868);
  v3[36] = v4;
  v3[37] = *(void *)(v4 - 8);
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  sub_10000588C(&qword_10163B9F0);
  v3[40] = swift_task_alloc();
  sub_10000588C(&qword_101638CF0);
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v3[43] = v5;
  v3[44] = *(void *)(v5 - 8);
  v3[45] = swift_task_alloc();
  return _swift_task_switch(sub_1007F87F0, v2, 0);
}

uint64_t sub_1007F87F0()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 96, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 120))
  {
    sub_10001CEB0((long long *)(v0 + 96), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 368) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1007F892C;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007F892C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 248);
  *(void *)(*(void *)v1 + 376) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007F8A44, v2, 0);
}

uint64_t sub_1007F8A44()
{
  uint64_t v21 = v0;
  uint64_t v1 = v0[47];
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  if (v1)
  {
    uint64_t v2 = v0[47];
    return _swift_task_switch(sub_1007F8EC8, v2, 0);
  }
  else
  {
    sub_100802B3C();
    swift_allocError();
    *uint64_t v3 = 1;
    swift_willThrow();
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v4 = v0[33];
    uint64_t v5 = v0[30];
    uint64_t v6 = type metadata accessor for Logger();
    sub_100010324(v6, (uint64_t)qword_10170E3B0);
    sub_10080E7F4(v5, v4, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = v0[33];
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = (void *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 141558531;
      v0[25] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v10 + 12) = 2081;
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[28] = sub_1008FA0F0(v12, v13, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10080F01C(v9, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
      *(_WORD *)(v10 + 22) = 2114;
      swift_errorRetain();
      uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
      v0[26] = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v11 = v14;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "No connected device event for this device found. Beacon: %{private,mask.hash}s, error: %{public}@.", (uint8_t *)v10, 0x20u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      uint64_t v15 = v0[33];
      swift_errorRelease();
      sub_10080F01C(v15, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v16 = v0[29];
    uint64_t v17 = type metadata accessor for DeviceEvent(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_1007F8EC8()
{
  *(void *)(v0 + 384) = *(void *)(*(void *)(v0 + 376) + 136);
  swift_retain();
  return _swift_task_switch(sub_1007F8F3C, 0, 0);
}

uint64_t sub_1007F8F3C()
{
  uint64_t v2 = v0[47];
  uint64_t v1 = v0[48];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[49] = v3;
  v3[2] = v1;
  v3[3] = sub_1003CD95C;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[50] = v4;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_101660AA0);
  *uint64_t v4 = v0;
  v4[1] = sub_1007F9054;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 27, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1000909AC, v3, v5);
}

uint64_t sub_1007F9054()
{
  uint64_t v1 = (void *)*v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  v1[51] = v1[27];
  uint64_t v2 = v1[47];
  return _swift_task_switch(sub_1007F91B0, v2, 0);
}

uint64_t sub_1007F91B0()
{
  uint64_t v1 = *(void *)(v0 + 248);
  swift_release();
  return _swift_task_switch(sub_1007F921C, v1, 0);
}

uint64_t sub_1007F921C()
{
  uint64_t v1 = *(void *)(v0 + 408);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v4 = *(void *)(v3 - 8);
  if (v2)
  {
    sub_10080E7F4(v1+ ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80)), *(void *)(v0 + 320), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = *(void *)(v0 + 320);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v6, v5, 1, v3);
  swift_bridgeObjectRelease();
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v3);
  uint64_t v8 = *(void *)(v0 + 344);
  uint64_t v9 = *(void *)(v0 + 352);
  uint64_t v10 = *(void *)(v0 + 336);
  uint64_t v11 = *(void *)(v0 + 320);
  if (v7 == 1)
  {
    sub_10001DAB4(*(void *)(v0 + 320), &qword_10163B9F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v10, 1, 1, v8);
LABEL_7:
    sub_10001DAB4(*(void *)(v0 + 336), &qword_101638CF0);
    uint64_t v15 = *(void *)(v0 + 232);
    uint64_t v16 = type metadata accessor for DeviceEvent(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
  uint64_t v12 = v11 + *(int *)(v3 + 20);
  unint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  *(void *)(v0 + 416) = v13;
  *(void *)(v0 + 424) = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v13(v10, v12, v8);
  sub_10080F01C(v11, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  uint64_t v14 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56);
  *(void *)(v0 + 432) = v14;
  *(void *)(v0 + 440) = (v9 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v14(v10, 0, 1, v8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1) {
    goto LABEL_7;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 352) + 32))(*(void *)(v0 + 360), *(void *)(v0 + 336), *(void *)(v0 + 344));
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 136, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 160))
  {
    sub_10001CEB0((long long *)(v0 + 136), v0 + 56);
    sub_10001CD44((void *)(v0 + 56), *(void *)(v0 + 80));
    uint64_t v20 = (uint64_t (__cdecl *)())((char *)&dword_101639138 + dword_101639138);
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_1007F95E4;
    return v20();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007F95E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 248);
  *(void *)(*(void *)v1 + 456) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007F96FC, v2, 0);
}

uint64_t sub_1007F96FC()
{
  uint64_t v32 = v0;
  uint64_t v1 = (uint64_t)(v0 + 7);
  if (v0[57])
  {
    uint64_t v2 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[54];
    uint64_t v3 = (void (*)(uint64_t, uint64_t, uint64_t))v0[52];
    uint64_t v4 = v0[45];
    uint64_t v5 = v0[43];
    uint64_t v6 = v0[41];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    v3(v6, v4, v5);
    v2(v6, 0, 1, v5);
    int v7 = (void *)swift_task_alloc();
    v0[58] = v7;
    *int v7 = v0;
    v7[1] = sub_1007F9C14;
    uint64_t v8 = v0[41];
    uint64_t v9 = v0[34];
    uint64_t v10 = v0[30];
    return sub_101105688(v9, v10, v8);
  }
  else
  {
    uint64_t v13 = v0[44];
    uint64_t v12 = v0[45];
    uint64_t v14 = v0[43];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    sub_100802B3C();
    swift_allocError();
    *uint64_t v15 = 0;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v16 = v0[33];
    uint64_t v17 = v0[30];
    uint64_t v18 = type metadata accessor for Logger();
    sub_100010324(v18, (uint64_t)qword_10170E3B0);
    sub_10080E7F4(v17, v16, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = v0[33];
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 141558531;
      v0[25] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v22 + 12) = 2081;
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[28] = sub_1008FA0F0(v24, v25, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10080F01C(v21, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
      *(_WORD *)(v22 + 22) = 2114;
      swift_errorRetain();
      uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
      v0[26] = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v23 = v26;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "No connected device event for this device found. Beacon: %{private,mask.hash}s, error: %{public}@.", (uint8_t *)v22, 0x20u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      uint64_t v27 = v0[33];
      swift_errorRelease();
      sub_10080F01C(v27, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v28 = v0[29];
    uint64_t v29 = type metadata accessor for DeviceEvent(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = (uint64_t (*)(void))v0[1];
    return v30();
  }
}

uint64_t sub_1007F9C14()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 472) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 328);
  uint64_t v4 = *(void *)(v2 + 248);
  sub_10001DAB4(v3, &qword_101638CF0);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_1007FA3C4;
  }
  else {
    uint64_t v5 = sub_1007F9D80;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_1007F9D80()
{
  unint64_t v42 = v0;
  uint64_t v1 = v0[34];
  uint64_t v2 = sub_10000588C((uint64_t *)&unk_10164E870);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    uint64_t v3 = v0[36];
    uint64_t v4 = v0[37];
    uint64_t v5 = v0[35];
    (*(void (**)(void, void))(v0[44] + 8))(v0[45], v0[43]);
    sub_10001DAB4(v1, &qword_10163CBA0);
    uint64_t v40 = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v5, 1, 1, v3);
    sub_10001DAB4(v5, &qword_10164E860);
    goto LABEL_13;
  }
  uint64_t v6 = v0[59];
  uint64_t v7 = v0[36];
  char v8 = sub_100AA4198(v0[35] + *(int *)(v7 + 48));
  uint64_t v10 = v0[44];
  uint64_t v9 = v0[45];
  uint64_t v11 = v0[43];
  if (v6)
  {
    uint64_t v12 = v0[34];
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_10001DAB4(v12, (uint64_t *)&unk_10164E870);
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v13 = v0[33];
    uint64_t v14 = v0[30];
    uint64_t v15 = type metadata accessor for Logger();
    sub_100010324(v15, (uint64_t)qword_10170E3B0);
    sub_10080E7F4(v14, v13, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = v0[33];
      uint64_t v19 = swift_slowAlloc();
      os_log_type_t v20 = (void *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 141558531;
      v0[25] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v19 + 12) = 2081;
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[28] = sub_1008FA0F0(v21, v22, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10080F01C(v18, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
      *(_WORD *)(v19 + 22) = 2114;
      swift_errorRetain();
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      v0[26] = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *os_log_type_t v20 = v23;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "No connected device event for this device found. Beacon: %{private,mask.hash}s, error: %{public}@.", (uint8_t *)v19, 0x20u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      uint64_t v40 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      goto LABEL_13;
    }
    uint64_t v35 = v0[33];
    swift_errorRelease();
    sub_10080F01C(v35, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    unint64_t v25 = (unsigned char *)v0[38];
    uint64_t v24 = (unsigned char *)v0[39];
    uint64_t v26 = v0[36];
    uint64_t v27 = v0[37];
    uint64_t v29 = v0[34];
    uint64_t v28 = (unsigned char *)v0[35];
    uint64_t v30 = (uint64_t)&v24[*(int *)(v7 + 48)];
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    unsigned char *v28 = v8 & 1;
    sub_10001DAB4(v29, (uint64_t *)&unk_10164E870);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v27 + 56))(v28, 0, 1, v26);
    uint64_t v31 = (uint64_t)&v28[*(int *)(v7 + 48)];
    LODWORD(v26) = *v28;
    *uint64_t v24 = v26;
    sub_10080ECB8(v31, v30, type metadata accessor for DeviceEvent);
    uint64_t v32 = (uint64_t)&v25[*(int *)(v7 + 48)];
    *unint64_t v25 = v26;
    sub_10080E7F4(v30, v32, type metadata accessor for DeviceEvent);
    sub_10080F01C(v32, type metadata accessor for DeviceEvent);
    if (v26 == 1)
    {
      uint64_t v33 = v0[29];
      uint64_t v34 = v0[38] + *(int *)(v7 + 48);
      sub_10080ECB8(v30, v34, type metadata accessor for DeviceEvent);
      sub_10080ECB8(v34, v33, type metadata accessor for DeviceEvent);
      uint64_t v40 = 0;
      goto LABEL_13;
    }
    sub_10001DAB4(v0[39], &qword_10164E868);
  }
  uint64_t v40 = 1;
LABEL_13:
  uint64_t v36 = v0[29];
  uint64_t v37 = type metadata accessor for DeviceEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, v40, 1, v37);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = (uint64_t (*)(void))v0[1];
  return v38();
}

uint64_t sub_1007FA3C4()
{
  uint64_t v18 = v0;
  (*(void (**)(void, void))(v0[44] + 8))(v0[45], v0[43]);
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[30];
  uint64_t v3 = type metadata accessor for Logger();
  sub_100010324(v3, (uint64_t)qword_10170E3B0);
  sub_10080E7F4(v2, v1, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[33];
    uint64_t v7 = swift_slowAlloc();
    char v8 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 141558531;
    v0[25] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2081;
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[28] = sub_1008FA0F0(v9, v10, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10080F01C(v6, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    *(_WORD *)(v7 + 22) = 2114;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[26] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *char v8 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "No connected device event for this device found. Beacon: %{private,mask.hash}s, error: %{public}@.", (uint8_t *)v7, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    uint64_t v12 = v0[33];
    swift_errorRelease();
    sub_10080F01C(v12, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v13 = v0[29];
  uint64_t v14 = type metadata accessor for DeviceEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1007FA7DC()
{
  sub_1000A1534(*(void *)(v0 + 112));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1007FA84C()
{
  sub_1007FA7DC();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for LocationFetchService()
{
  return self;
}

uint64_t sub_1007FA89C(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for UUID();
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1007FA92C, 0, 0);
}

uint64_t sub_1007FA92C()
{
  uint64_t v1 = *(void **)(v0 + 24);
  type metadata accessor for WorkItemQueue.WorkItem();
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  id v4 = v1;
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  swift_release();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_release();
  swift_task_dealloc();
  os_log_type_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1007FAA64(uint64_t a1, uint64_t a2)
{
  v2[50] = a1;
  v2[51] = a2;
  uint64_t v3 = type metadata accessor for UUID();
  v2[52] = v3;
  v2[53] = *(void *)(v3 - 8);
  v2[54] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for BeaconEstimatedLocation();
  v2[55] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[56] = v5;
  v2[57] = *(void *)(v5 + 64);
  v2[58] = swift_task_alloc();
  v2[59] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Date();
  v2[60] = v6;
  v2[61] = *(void *)(v6 - 8);
  v2[62] = swift_task_alloc();
  return _swift_task_switch(sub_1007FABF4, 0, 0);
}

uint64_t sub_1007FABF4()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 504) = Strong;
  if (Strong)
  {
    return _swift_task_switch(sub_1007FACE8, Strong, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_1007FACE8()
{
  *(unsigned char *)(v0 + 696) = *(unsigned char *)(*(void *)(v0 + 504) + 200);
  return _swift_task_switch(sub_1007FAD10, 0, 0);
}

uint64_t sub_1007FAD10()
{
  uint64_t v25 = v0;
  if (*(unsigned char *)(v0 + 696) == 1)
  {
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v1 = *(void **)(v0 + 408);
    uint64_t v2 = type metadata accessor for Logger();
    *(void *)(v0 + 512) = sub_100010324(v2, (uint64_t)qword_10170E3B0);
    id v3 = v1;
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = *(void *)(v0 + 408);
      uint64_t v7 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136446466;
      if (v6) {
        uint64_t v8 = 0x61636F6C20736168;
      }
      else {
        uint64_t v8 = 7104878;
      }
      if (v6) {
        unint64_t v9 = 0xEC0000006E6F6974;
      }
      else {
        unint64_t v9 = 0xE300000000000000;
      }
      *(void *)(v0 + 384) = sub_1008FA0F0(v8, v9, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2048;
      if (v6)
      {
        uint64_t v11 = *(void *)(v0 + 488);
        uint64_t v10 = *(void *)(v0 + 496);
        uint64_t v12 = *(void *)(v0 + 480);
        id v13 = [v3 timestamp];
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        Date.timeIntervalSinceNow.getter();
        double v15 = v14;
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
      }
      else
      {
        double v15 = 1.0;
      }
      *(double *)(v0 + 392) = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Location monitor did update location: %{public}s,age: %f.", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v20 = *(void *)(v0 + 504);
    if (*(void *)(v0 + 408))
    {
      id v21 = v3;
      return _swift_task_switch(sub_1007FB128, v20, 0);
    }
    goto LABEL_25;
  }
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_100010324(v16, (uint64_t)qword_10170E3B0);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v17, v18))
  {

LABEL_25:
    swift_release();
    goto LABEL_26;
  }
  uint64_t v19 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v19 = 0;
  _os_log_impl((void *)&_mh_execute_header, v17, v18, "Ignoring location updates while not processing.", v19, 2u);
  swift_slowDealloc();
  swift_release();

LABEL_26:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_1007FB128()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 136, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 160))
  {
    sub_10001CEB0((long long *)(v0 + 136), v0 + 56);
    sub_10001CD44((void *)(v0 + 56), *(void *)(v0 + 80));
    id v3 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 520) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1007FB264;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007FB264(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 504);
  *(void *)(*(void *)v1 + 528) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007FB37C, v2, 0);
}

uint64_t sub_1007FB37C()
{
  uint64_t v1 = *(void *)(v0 + 528);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 528);
    id v3 = sub_1007FB43C;
  }
  else
  {
    sub_100802B3C();
    *(void *)(v0 + 600) = swift_allocError();
    *uint64_t v4 = 1;
    swift_willThrow();
    id v3 = sub_1007FB978;
    uint64_t v2 = 0;
  }
  return _swift_task_switch(v3, v2, 0);
}

uint64_t sub_1007FB43C()
{
  *(void *)(v0 + 536) = *(void *)(*(void *)(v0 + 528) + 136);
  swift_retain();
  return _swift_task_switch(sub_1007FB4B0, 0, 0);
}

uint64_t sub_1007FB4B0()
{
  uint64_t v1 = v0[67];
  uint64_t v2 = v0[66];
  id v3 = (void *)swift_task_alloc();
  v0[68] = v3;
  v3[2] = v1;
  v3[3] = sub_1001D4090;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[69] = v4;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_101653DD0);
  v0[70] = v5;
  *uint64_t v4 = v0;
  v4[1] = sub_1007FB5D0;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 43, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1001D4098, v3, v5);
}

uint64_t sub_1007FB5D0()
{
  uint64_t v1 = (void *)*v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  v1[71] = v1[43];
  uint64_t v2 = v1[66];
  return _swift_task_switch(sub_1007FB72C, v2, 0);
}

uint64_t sub_1007FB72C()
{
  swift_release();
  return _swift_task_switch(sub_1007FB794, 0, 0);
}

uint64_t sub_1007FB794()
{
  v0[44] = v0[71];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[72] = v1;
  unint64_t v2 = sub_100802C28();
  *uint64_t v1 = v0;
  v1[1] = sub_1007FB858;
  uint64_t v3 = v0[70];
  uint64_t v4 = v0[63];
  return Sequence.asyncFilter(_:)(&unk_10164E708, v4, v3, v2);
}

uint64_t sub_1007FB858(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 584) = a1;
  *(void *)(v3 + 592) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_1007FD1E0;
  }
  else {
    uint64_t v4 = sub_1007FBA14;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1007FB978()
{
  uint64_t v1 = *(void **)(v0 + 408);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1007FBA14()
{
  uint64_t v38 = v0;
  uint64_t v1 = v0[73];
  uint64_t v2 = *(void *)(v1 + 16);
  v0[76] = v2;
  if (v2)
  {
    uint64_t v3 = v0[54];
    uint64_t v4 = (int *)v0[55];
    v0[78] = 0;
    uint64_t v5 = (char *)v0[59];
    uint64_t v6 = v0[61];
    uint64_t v7 = v0[53];
    uint64_t v35 = v0[60];
    uint64_t v36 = v0[52];
    uint64_t v8 = (void *)v0[51];
    sub_10001D010(v1 + 32, (uint64_t)(v0 + 32));
    UUID.init()();
    uint64_t v9 = v0[35];
    uint64_t v10 = v0[36];
    sub_10001CD44(v0 + 32, v9);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v10 + 8) + 8) + 32))(v9);
    [v8 coordinate];
    uint64_t v12 = v11;
    [v8 coordinate];
    uint64_t v14 = v13;
    [v8 horizontalAccuracy];
    uint64_t v16 = v15;
    id v17 = [v8 timestamp];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    os_log_type_t v18 = &v5[v4[12]];
    id v19 = [v8 timestamp];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v35);
    *(_OWORD *)uint64_t v5 = xmmword_101348180;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(&v5[v4[5]], v3, v36);
    *(void *)&v5[v4[7]] = v12;
    *(void *)&v5[v4[8]] = v14;
    *(void *)&v5[v4[9]] = v16;
    v5[v4[11]] = 2;
    *(void *)&v5[v4[13]] = 0;
    uint64_t v20 = v0 + 27;
    sub_10001D010((uint64_t)(v0 + 32), (uint64_t)(v0 + 27));
    id v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = v0[53];
      uint64_t v24 = v0[54];
      uint64_t v25 = v0[52];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 141558275;
      v0[46] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v26 + 12) = 2081;
      uint64_t v27 = v0[30];
      uint64_t v28 = v0[31];
      sub_10001CD44(v20, v27);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v28 + 8) + 8) + 32))(v27);
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v31 = v30;
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v25);
      v0[47] = sub_1008FA0F0(v29, v31, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v20);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Saving location for connected beacons - from location monitor update:beacon: %{private,mask.hash}s.", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v20);
    }

    uint64_t v32 = v0[63];
    uint64_t v33 = sub_1007FC4E8;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = v0[63];
    uint64_t v33 = sub_1007FBE40;
  }
  return _swift_task_switch(v33, v32, 0);
}

uint64_t sub_1007FBE40()
{
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 616) = v1;
  uint64_t v2 = sub_10000588C(&qword_10164E718);
  *uint64_t v1 = v0;
  v1[1] = sub_1007FBF10;
  uint64_t v3 = *(void *)(v0 + 504);
  return unsafeBlocking<A>(_:)(v0 + 360, sub_100802CCC, v3, v2);
}

uint64_t sub_1007FBF10()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 504);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1007FC028, v1, 0);
}

uint64_t sub_1007FC028()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 360) + 16);
  if (v1)
  {
    uint64_t v2 = *(void *)(v14 + 592);
    uint64_t v3 = swift_bridgeObjectRetain() + 48;
    do
    {
      uint64_t v5 = *(void *)(v3 + 32);
      if (v5)
      {
        if (*(void *)(v3 + 24) == 0xD000000000000017 && v5 == 0x8000000101408490
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
LABEL_16:
          swift_bridgeObjectRelease_n();
          uint64_t v12 = sub_1007FC44C;
          goto LABEL_18;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        BOOL v6 = sub_10113BB28();
        if (v2)
        {
          swift_errorRetain();
          swift_errorRetain();
          uint64_t v7 = Logger.logObject.getter();
          os_log_type_t v8 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v7, v8))
          {
            uint64_t v9 = swift_slowAlloc();
            uint64_t v10 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v9 = 138543362;
            swift_errorRetain();
            uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
            *(void *)(v9 + 4) = v11;
            *uint64_t v10 = v11;
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v7, v8, "RunningBoardProcess threw an error: %{public}@", (uint8_t *)v9, 0xCu);
            sub_10000588C((uint64_t *)&unk_101638EA0);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            swift_errorRelease();
          }
          else
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_errorRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          BOOL v4 = v6;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v4) {
            goto LABEL_16;
          }
        }
        uint64_t v2 = 0;
      }
      v3 += 96;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease_n();
    uint64_t v12 = sub_10080F378;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1007FC370;
  }
LABEL_18:
  return _swift_task_switch(v12, 0, 0);
}

uint64_t sub_1007FC370()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "                    No more running clients. Pausing location updates.", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = *(void *)(v0 + 504);

  return _swift_task_switch(sub_1007FD174, v4, 0);
}

uint64_t sub_1007FC44C()
{
  uint64_t v1 = *(void **)(v0 + 408);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1007FC4E8()
{
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 176, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 200))
  {
    sub_10001CEB0((long long *)(v0 + 176), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (*)(void))((char *)&dword_1016390D8 + dword_1016390D8);
    os_log_type_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 632) = v2;
    *os_log_type_t v2 = v0;
    v2[1] = sub_1007FC5D4;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007FC5D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 504);
  *(void *)(*(void *)v1 + 640) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007FC6EC, v2, 0);
}

uint64_t sub_1007FC6EC()
{
  uint64_t v1 = v0 + 16;
  if (*(void *)(v0 + 640))
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v2 = sub_1007FC7B4;
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    sub_100802B3C();
    *(void *)(v0 + 688) = swift_allocError();
    *uint64_t v3 = 1;
    swift_willThrow();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1007FD0AC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1007FC7B4()
{
  sub_10001D010(v0 + 256, v0 + 96);
  uint64_t v1 = swift_allocObject();
  *(void *)(v0 + 648) = v1;
  sub_10001CEB0((long long *)(v0 + 96), v1 + 16);
  uint64_t v2 = *(void *)(v0 + 640);
  return _swift_task_switch(sub_1007FC848, v2, 0);
}

uint64_t sub_1007FC848()
{
  uint64_t v1 = (void (*)(uint64_t))v0[81];
  uint64_t v2 = v0[80];
  uint64_t v4 = v0[58];
  uint64_t v3 = v0[59];
  uint64_t v6 = v0[56];
  uint64_t v5 = v0[57];
  v0[82] = *(void *)(v2 + 136);
  sub_10080E7F4(v3, v4, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  v0[83] = v9;
  *(void *)(v9 + 16) = v2;
  sub_10080ECB8(v4, v9 + v7, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
  uint64_t v10 = (void (**)(uint64_t))(v9 + v8);
  *uint64_t v10 = sub_100802CBC;
  v10[1] = v1;
  swift_retain();
  swift_retain();
  return _swift_task_switch(sub_1007FC970, 0, 0);
}

uint64_t sub_1007FC970()
{
  uint64_t v1 = v0[83];
  uint64_t v2 = v0[82];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[84] = v3;
  v3[2] = v2;
  v3[3] = sub_100802CC8;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[85] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007FCA7C;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10001D74C, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_1007FCA7C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 640);
  return _swift_task_switch(sub_1007FCBCC, v2, 0);
}

uint64_t sub_1007FCBCC()
{
  swift_release();
  swift_release();
  return _swift_task_switch(sub_1007FCC40, 0, 0);
}

uint64_t sub_1007FCC40()
{
  uint64_t v39 = v0;
  uint64_t v1 = v0[76];
  uint64_t v2 = v0[78] + 1;
  sub_10080F01C(v0[59], (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 32));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = v0[63];
    uint64_t v4 = sub_1007FBE40;
  }
  else
  {
    uint64_t v5 = v0[78] + 1;
    v0[78] = v5;
    uint64_t v6 = v0[61];
    unint64_t v7 = (char *)v0[59];
    uint64_t v9 = v0[54];
    unint64_t v8 = (int *)v0[55];
    uint64_t v10 = v0[53];
    uint64_t v36 = v0[60];
    uint64_t v37 = v0[52];
    uint64_t v11 = (void *)v0[51];
    sub_10001D010(v0[73] + 40 * v5 + 32, (uint64_t)(v0 + 32));
    UUID.init()();
    uint64_t v12 = v0[35];
    uint64_t v13 = v0[36];
    sub_10001CD44(v0 + 32, v12);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v13 + 8) + 8) + 32))(v12);
    [v11 coordinate];
    uint64_t v15 = v14;
    [v11 coordinate];
    uint64_t v17 = v16;
    [v11 horizontalAccuracy];
    uint64_t v19 = v18;
    id v20 = [v11 timestamp];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    id v21 = &v7[v8[12]];
    id v22 = [v11 timestamp];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v21, 0, 1, v36);
    *(_OWORD *)unint64_t v7 = xmmword_101348180;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(&v7[v8[5]], v9, v37);
    *(void *)&v7[v8[7]] = v15;
    *(void *)&v7[v8[8]] = v17;
    *(void *)&v7[v8[9]] = v19;
    v7[v8[11]] = 2;
    *(void *)&v7[v8[13]] = 0;
    uint64_t v23 = v0 + 27;
    sub_10001D010((uint64_t)(v0 + 32), (uint64_t)(v0 + 27));
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = v0[53];
      uint64_t v27 = v0[54];
      uint64_t v28 = v0[52];
      uint64_t v29 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 141558275;
      v0[46] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v29 + 12) = 2081;
      uint64_t v30 = v0[30];
      uint64_t v31 = v0[31];
      sub_10001CD44(v23, v30);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v31 + 8) + 8) + 32))(v30);
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v34 = v33;
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v28);
      v0[47] = sub_1008FA0F0(v32, v34, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v23);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Saving location for connected beacons - from location monitor update:beacon: %{private,mask.hash}s.", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v23);
    }

    uint64_t v3 = v0[63];
    uint64_t v4 = sub_1007FC4E8;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1007FD0AC()
{
  uint64_t v1 = v0[59];
  uint64_t v2 = (void *)v0[51];
  swift_release();

  sub_10080F01C(v1, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 32));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1007FD174()
{
  sub_1007F1D44();
  sub_1007F67A0();
  return _swift_task_switch(sub_10080F364, 0, 0);
}

uint64_t sub_1007FD1E0()
{
  uint64_t v1 = *(void **)(v0 + 408);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1007FD27C(uint64_t a1, uint64_t a2)
{
  v2[15] = a1;
  v2[16] = a2;
  uint64_t v4 = type metadata accessor for UUID();
  v2[17] = v4;
  v2[18] = *(void *)(v4 - 8);
  v2[19] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10163AC90);
  v2[20] = swift_task_alloc();
  return _swift_task_switch(sub_1007FD370, a2, 0);
}

uint64_t sub_1007FD370()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1007FD4AC;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007FD4AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 128);
  *(void *)(*(void *)v1 + 176) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007FD5C4, v2, 0);
}

uint64_t sub_1007FD5C4()
{
  uint64_t v1 = *(void *)(v0 + 176);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  if (v1)
  {
    uint64_t v2 = sub_1007FD67C;
  }
  else
  {
    sub_100802B3C();
    *(void *)(v0 + 192) = swift_allocError();
    *uint64_t v3 = 1;
    swift_willThrow();
    uint64_t v2 = sub_1007FD978;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1007FD67C()
{
  uint64_t v1 = (void *)v0[15];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10001CD44(v1, v2);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 8) + 8) + 32))(v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[23] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007FD760;
  uint64_t v6 = v0[19];
  uint64_t v5 = v0[20];
  return sub_100E61454(v5, v6, 1);
}

uint64_t sub_1007FD760(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 160);
  uint64_t v3 = *(void *)(*(void *)v1 + 152);
  uint64_t v4 = *(void *)(*(void *)v1 + 144);
  uint64_t v5 = *(void *)(*(void *)v1 + 136);
  *(unsigned char *)(*(void *)v1 + 200) = a1;
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_10001DAB4(v2, (uint64_t *)&unk_10163AC90);
  return _swift_task_switch(sub_1007FD908, 0, 0);
}

uint64_t sub_1007FD908()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 200);
  return v1(v2);
}

uint64_t sub_1007FD978()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

void sub_1007FD9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000588C(&qword_1016428D8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v28 - v12;
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_100010324(v14, (uint64_t)qword_10170E3B0);
  sub_10001D010(a2, (uint64_t)v33);
  sub_10001D074(a1, (uint64_t)v13, &qword_1016428D8);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.info.getter();
  int v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v18 = swift_slowAlloc();
    v28[2] = v8;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v30 = v20;
    *(_DWORD *)uint64_t v19 = 141558531;
    uint64_t v31 = 1752392040;
    uint64_t v32 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 12) = 2081;
    v28[1] = v19 + 14;
    int v29 = v17;
    uint64_t v22 = v34;
    uint64_t v21 = v35;
    sub_10001CD44(v33, v34);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v21 + 8) + 8) + 32))(v22);
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v31 = sub_1008FA0F0(v23, v25, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v33);
    *(_WORD *)(v19 + 22) = 2080;
    sub_10001D074((uint64_t)v13, (uint64_t)v11, &qword_1016428D8);
    uint64_t v26 = String.init<A>(describing:)();
    uint64_t v31 = sub_1008FA0F0(v26, v27, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001DAB4((uint64_t)v13, &qword_1016428D8);
    _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v29, "Done saving location for connected beacon: %{private,mask.hash}s, result: %s.", (uint8_t *)v19, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v33);
    sub_10001DAB4((uint64_t)v13, &qword_1016428D8);
  }
}

uint64_t sub_1007FDDD0(uint64_t a1, uint64_t a2, void *a3)
{
  type metadata accessor for Transaction();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = a3;
  id v6 = a3;
  swift_retain();
  static Transaction.asyncTask(name:block:)();

  return swift_release();
}

uint64_t sub_1007FDE74()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100033F68;
  return sub_1007FA89C(v2, v3);
}

uint64_t sub_1007FDF10()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100033F68;
  return sub_1007FAA64(v2, v3);
}

uint64_t sub_1007FDFA8()
{
  uint64_t v1 = type metadata accessor for UUID();
  __chkstk_darwin(v1 - 8);
  v0[5] = 0;
  v0[6] = 0;
  sub_10000588C((uint64_t *)&unk_101638CE0);
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 0;
  v0[7] = v2;
  type metadata accessor for WorkItemQueue();
  swift_retain();
  UUID.init()();
  v0[8] = WorkItemQueue.__allocating_init(name:identifier:)();
  UUID.init()();
  v0[9] = WorkItemQueue.__allocating_init(name:identifier:)();
  v0[10] = _swiftEmptyDictionarySingleton;
  uint64_t v3 = swift_release();
  return sub_100F36EDC(v3);
}

uint64_t sub_1007FE0C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 284) = a4;
  *(void *)(v4 + 152) = a2;
  *(void *)(v4 + 160) = a3;
  *(void *)(v4 + 144) = a1;
  sub_10000588C(&qword_101638CF0);
  *(void *)(v4 + 168) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  *(void *)(v4 + 176) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v4 + 184) = v8;
  *(void *)(v4 + 192) = *(void *)(v8 + 64);
  *(void *)(v4 + 200) = swift_task_alloc();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 208) = v9;
  void *v9 = v4;
  v9[1] = sub_1007FE200;
  return sub_1007FED6C(a1, a2);
}

uint64_t sub_1007FE200(uint64_t a1)
{
  *(void *)(*(void *)v1 + 216) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007FE300, 0, 0);
}

uint64_t sub_1007FE300()
{
  uint64_t v53 = v0;
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void **)(v0 + 160);
  uint64_t v3 = type metadata accessor for Logger();
  sub_100010324(v3, (uint64_t)qword_10170E3B0);
  sub_10001D010(v1, v0 + 16);
  id v4 = v2;
  swift_bridgeObjectRetain_n();
  id v5 = v4;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void *)(v0 + 216);
  if (v8)
  {
    os_log_type_t v50 = v7;
    uint64_t v10 = *(void *)(v0 + 200);
    os_log_t log = v6;
    uint64_t v11 = *(void *)(v0 + 184);
    uint64_t v43 = *(void *)(v0 + 176);
    uint64_t v12 = *(void **)(v0 + 160);
    char v45 = *(unsigned char *)(v0 + 284);
    uint64_t v13 = swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 141559299;
    *(void *)(v0 + 96) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2081;
    uint64_t v15 = *(void *)(v0 + 40);
    uint64_t v14 = *(void *)(v0 + 48);
    sub_10001CD44((void *)(v0 + 16), v15);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v14 + 8) + 8) + 32))(v15);
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v18 = v17;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v43);
    *(void *)(v0 + 104) = sub_1008FA0F0(v16, v18, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
    *(_WORD *)(v13 + 22) = 2048;
    uint64_t v19 = *(void *)(v9 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 112) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 32) = 2049;
    [v12 latitude];
    *(void *)(v0 + 120) = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v13 + 42) = 2049;
    [v12 longitude];
    *(void *)(v0 + 128) = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v13 + 52) = 2080;
    unint64_t v22 = sub_10041F334(v45);
    *(void *)(v0 + 136) = sub_1008FA0F0(v22, v23, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v50, "Update location for beacon: %{private,mask.hash}s,\nclientBeaconIdentifiers %ld,\nLoc: lat: %{private}f, lon: %{private}f source: %s.", (uint8_t *)v13, 0x3Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    unint64_t v24 = *(void **)(v0 + 160);
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
    swift_bridgeObjectRelease();
  }
  uint64_t v25 = *(void *)(v0 + 216);
  uint64_t v26 = *(void *)(v25 + 16);
  *(void *)(v0 + 224) = v26;
  uint64_t v27 = *(void *)(v0 + 184);
  if (v26)
  {
    int v28 = *(_DWORD *)(v27 + 80);
    *(_DWORD *)(v0 + 280) = v28;
    *(void *)(v0 + 232) = *(void *)(v27 + 72);
    int v29 = *(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 16);
    *(void *)(v0 + 240) = v29;
    *(void *)(v0 + 248) = 0;
    uint64_t v30 = *(void *)(v0 + 168);
    uint64_t v31 = *(void *)(v0 + 176);
    v29(v30, v25 + ((v28 + 32) & ~(unint64_t)v28), v31);
    uint64_t v32 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56);
    *(void *)(v0 + 256) = v32;
    v32(v30, 0, 1, v31);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v30, 1, v31) != 1)
    {
      uint64_t v44 = *(void *)(v0 + 176);
      uint64_t v46 = *(void *)(v0 + 200);
      char v51 = *(unsigned char *)(v0 + 284);
      uint64_t v33 = *(void *)(v0 + 144);
      uint64_t v47 = *(void *)(v0 + 152);
      os_log_t loga = *(os_log_t *)(v0 + 160);
      unint64_t v34 = (*(unsigned __int8 *)(v0 + 280) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 280);
      unint64_t v35 = (*(void *)(v0 + 192) + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v36 = *(void (**)(void))(*(void *)(v0 + 184) + 32);
      v36();
      sub_10001D010(v33, v0 + 56);
      uint64_t v37 = swift_allocObject();
      *(void *)(v0 + 264) = v37;
      *(void *)(v37 + 16) = v47;
      ((void (*)(unint64_t, uint64_t, uint64_t))v36)(v37 + v34, v46, v44);
      sub_10001CEB0((long long *)(v0 + 56), v37 + v35);
      unint64_t v38 = v37 + ((v35 + 47) & 0xFFFFFFFFFFFFFFF8);
      *(void *)unint64_t v38 = loga;
      *(unsigned char *)(v38 + 8) = v51;
      uint64_t v39 = loga;
      swift_retain();
      uint64_t v40 = (void *)swift_task_alloc();
      *(void *)(v0 + 272) = v40;
      *uint64_t v40 = v0;
      v40[1] = sub_1007FE988;
      return unsafeBlocking<A>(_:)(v40, sub_10080E470, v37, (char *)&type metadata for () + 8);
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v27 + 56))(*(void *)(v0 + 168), 1, 1, *(void *)(v0 + 176));
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
  return v41();
}

uint64_t sub_1007FE988()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1007FEAA0, 0, 0);
}

uint64_t sub_1007FEAA0()
{
  uint64_t v1 = *(void *)(v0 + 248) + 1;
  if (v1 == *(void *)(v0 + 224))
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 256))(*(void *)(v0 + 168), 1, 1, *(void *)(v0 + 176));
LABEL_4:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  *(void *)(v0 + 248) = v1;
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 168);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 240))(v4, *(void *)(v0 + 216)+ ((*(unsigned __int8 *)(v0 + 280) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 280))+ *(void *)(v0 + 232) * v1, v2);
  id v5 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56);
  *(void *)(v0 + 256) = v5;
  v5(v4, 0, 1, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1) {
    goto LABEL_4;
  }
  uint64_t v16 = *(void *)(v0 + 176);
  uint64_t v17 = *(void *)(v0 + 200);
  char v20 = *(unsigned char *)(v0 + 284);
  uint64_t v8 = *(void *)(v0 + 144);
  uint64_t v18 = *(void *)(v0 + 152);
  uint64_t v19 = *(void **)(v0 + 160);
  unint64_t v9 = (*(unsigned __int8 *)(v0 + 280) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 280);
  unint64_t v10 = (*(void *)(v0 + 192) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void (**)(void))(*(void *)(v0 + 184) + 32);
  v11();
  sub_10001D010(v8, v0 + 56);
  uint64_t v12 = swift_allocObject();
  *(void *)(v0 + 264) = v12;
  *(void *)(v12 + 16) = v18;
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v12 + v9, v17, v16);
  sub_10001CEB0((long long *)(v0 + 56), v12 + v10);
  unint64_t v13 = v12 + ((v10 + 47) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v13 = v19;
  *(unsigned char *)(v13 + 8) = v20;
  id v14 = v19;
  swift_retain();
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_1007FE988;
  return unsafeBlocking<A>(_:)(v15, sub_10080E470, v12, (char *)&type metadata for () + 8);
}

uint64_t sub_1007FED6C(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = type metadata accessor for UUID();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return _swift_task_switch(sub_1007FEE2C, 0, 0);
}

uint64_t sub_1007FEE2C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void **)(v0 + 16);
  sub_10000588C(&qword_10163BC50);
  *(void *)(v0 + 56) = *(void *)(v1 + 72);
  *(_DWORD *)(v0 + 80) = *(_DWORD *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 64) = v3;
  *(_OWORD *)(v3 + 16) = xmmword_101342130;
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  sub_10001CD44(v2, v4);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v5 + 8) + 8) + 32))(v4);
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  sub_10001CD44(v2, v6);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88))(v6, v7))
  {
    unint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10164E850 + dword_10164E850);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1007FEFEC;
    uint64_t v9 = *(void *)(v0 + 48);
    uint64_t v10 = *(void *)(v0 + 16);
    return v13(v9, v10);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v12(v3);
  }
}

uint64_t sub_1007FEFEC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1007FF0E8, 0, 0);
}

uint64_t sub_1007FF0E8()
{
  uint64_t v1 = *(void *)(v0 + 64);
  unint64_t v3 = *(void *)(v1 + 16);
  unint64_t v2 = *(void *)(v1 + 24);
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_100A6F668(v2 > 1, v3 + 1, 1, *(void *)(v0 + 64));
  }
  uint64_t v4 = *(unsigned __int8 *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = *(void *)(v0 + 40);
  *(void *)(v1 + 16) = v3 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v1 + ((v4 + 32) & ~v4) + v6 * v3, v5, v7);
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v9(v1);
}

uint64_t sub_1007FF1B8(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5)
{
  sub_10000588C(&qword_10164E838);
  uint64_t v10 = (int *)(sub_10000588C((uint64_t *)&unk_10164E790) - 8);
  unint64_t v11 = (*(unsigned __int8 *)(*(void *)v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_101342130;
  unint64_t v13 = v12 + v11;
  uint64_t v14 = v10[14];
  uint64_t v15 = *(int *)(sub_10000588C((uint64_t *)&unk_10164E7D0) + 48);
  uint64_t v16 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v13, a2, v16);
  uint64_t v17 = a3[3];
  uint64_t v18 = a3[4];
  sub_10001CD44(a3, v17);
  *(void *)(v13 + v15) = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 176))(v17, v18);
  *(void *)(v13 + v14) = a4;
  id v19 = a4;
  sub_10000588C(&qword_10164E7E8);
  OSAllocatedUnfairLock.callAsFunction<A>(_:)();
  char v20 = sub_1007E3024(v12);
  type metadata accessor for Transaction();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a1;
  *(void *)(v21 + 24) = v23;
  *(void *)(v21 + 32) = v20;
  *(unsigned char *)(v21 + 40) = a5;
  *(void *)(v21 + 48) = _swiftEmptyArrayStorage;
  *(void *)(v21 + 56) = v12;
  swift_retain();
  swift_bridgeObjectRetain();
  static Transaction.asyncTask(name:block:)();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1007FF414(uint64_t a1, uint64_t a2)
{
  v2[15] = a1;
  v2[16] = a2;
  uint64_t v3 = type metadata accessor for UUID();
  v2[17] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[18] = v4;
  v2[19] = *(void *)(v4 + 64);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = sub_10000588C(&qword_101638CF0);
  v2[23] = swift_task_alloc();
  return _swift_task_switch(sub_1007FF520, 0, 0);
}

uint64_t sub_1007FF520()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
    unint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v2;
    *unint64_t v2 = v0;
    v2[1] = sub_1007FF65C;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007FF65C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 200) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007FF75C, 0, 0);
}

uint64_t sub_1007FF75C()
{
  uint64_t v1 = (void *)v0[16];
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10001CD44(v1, v2);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v2, v3))
  {
    if (v0[25])
    {
      uint64_t v4 = v1[3];
      uint64_t v5 = v1[4];
      sub_10001CD44((void *)v0[16], v4);
      uint64_t v6 = *(void *)(*(void *)(v5 + 8) + 8);
      uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 32);
      swift_retain();
      v7(v4, v6);
      uint64_t v8 = v0[25];
      return _swift_task_switch(sub_1007FF934, v8, 0);
    }
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[23], 1, 1, v0[17]);
    sub_10001DAB4(v0[23], &qword_101638CF0);
  }
  uint64_t v9 = (void *)v0[16];
  uint64_t v10 = v9[3];
  uint64_t v11 = v9[4];
  sub_10001CD44(v9, v10);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v11 + 8) + 8) + 32))(v10);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1007FF934()
{
  uint64_t v1 = v0[25];
  uint64_t v3 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[17];
  v0[26] = *(void *)(v1 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v5);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  v0[27] = v7;
  *(void *)(v7 + 16) = v1;
  uint64_t v8 = *(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32);
  v0[28] = v8;
  v0[29] = (v4 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v8(v7 + v6, v3, v5);
  swift_retain();
  return _swift_task_switch(sub_1007FFA34, 0, 0);
}

uint64_t sub_1007FFA34()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[30] = v3;
  v3[2] = v2;
  v3[3] = sub_10080E538;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[31] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007FFB38;
  uint64_t v6 = v0[22];
  uint64_t v5 = v0[23];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10080E5AC, v3, v6);
}

uint64_t sub_1007FFB38()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168);
  uint64_t v2 = *(void *)(*(void *)v0 + 144);
  uint64_t v3 = *(void *)(*(void *)v0 + 136);
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1007FFCEC, 0, 0);
}

uint64_t sub_1007FFCEC()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[17];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[18] + 48))(v1, 1, v2) == 1)
  {
    sub_10001DAB4(v1, &qword_101638CF0);
    uint64_t v3 = (void *)v0[16];
    uint64_t v4 = v3[3];
    uint64_t v5 = v3[4];
    sub_10001CD44(v3, v4);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v5 + 8) + 8) + 32))(v4);
    swift_release();
  }
  else
  {
    uint64_t v6 = (void (*)(uint64_t, uint64_t, uint64_t))v0[28];
    uint64_t v7 = v0[15];
    swift_release();
    v6(v7, v1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1007FFE14(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 48) = a6;
  *(unsigned char *)(v6 + 64) = a4;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 16) = a1;
  type metadata accessor for UUID();
  *(void *)(v6 + 56) = swift_task_alloc();
  return _swift_task_switch(sub_1007FFEB0, 0, 0);
}

uint64_t sub_1007FFEB0()
{
  uint64_t v1 = *(void *)(v0 + 48);
  char v2 = *(unsigned char *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 24);
  type metadata accessor for WorkItemQueue.WorkItem();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  *(unsigned char *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = v3;
  *(void *)(v6 + 48) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1007FFFEC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  *(unsigned char *)(v5 + 193) = a3;
  *(void *)(v5 + 40) = a1;
  *(void *)(v5 + 48) = a2;
  uint64_t v6 = sub_10000588C((uint64_t *)&unk_10164E720);
  *(void *)(v5 + 72) = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)(v5 + 80) = v7;
  *(void *)(v5 + 88) = *(void *)(v7 + 64);
  *(void *)(v5 + 96) = swift_task_alloc();
  *(void *)(v5 + 104) = swift_task_alloc();
  *(void *)(v5 + 112) = swift_task_alloc();
  *(void *)(v5 + 120) = swift_task_alloc();
  *(void *)(v5 + 128) = swift_task_alloc();
  *(void *)(v5 + 136) = swift_task_alloc();
  return _swift_task_switch(sub_100800100, 0, 0);
}

uint64_t sub_100800100()
{
  uint64_t v73 = v0 + 4;
  uint64_t v1 = v0[5];
  char v2 = *(unsigned char *)(v1 + 32);
  *((unsigned char *)v0 + 194) = v2;
  uint64_t v3 = 1 << v2;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  uint64_t v6 = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v74 = v0;
  uint64_t v84 = 0;
  if (!v5) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v11 = __clz(__rbit64(v5));
  uint64_t v12 = (v5 - 1) & v5;
  unint64_t v13 = v11 | (v10 << 6);
  uint64_t v14 = v0[5];
  while (1)
  {
    unint64_t v75 = v12;
    int64_t v76 = v10;
    v0[18] = v10;
    v0[19] = v12;
    uint64_t v20 = v0[16];
    uint64_t v21 = v0[17];
    uint64_t v87 = v0[15];
    uint64_t v22 = v0[9];
    char v94 = *((unsigned char *)v0 + 193);
    uint64_t v79 = v0[14];
    uint64_t v81 = v0[7];
    uint64_t v77 = v0[6];
    uint64_t v23 = *(void *)(v14 + 48);
    uint64_t v99 = type metadata accessor for UUID();
    uint64_t v24 = *(void *)(v99 - 8);
    uint64_t v98 = *(void (**)(void))(v24 + 16);
    ((void (*)(uint64_t, unint64_t, uint64_t))v98)(v21, v23 + *(void *)(v24 + 72) * v13, v99);
    uint64_t v25 = v22;
    uint64_t v92 = v22;
    uint64_t v26 = *(void *)(v14 + 56) + 104 * v13;
    uint64_t v27 = v21 + *(int *)(v22 + 48);
    uint64_t v28 = *(void *)v26;
    char v29 = *(unsigned char *)(v26 + 8);
    char v97 = v29;
    uint64_t v30 = *(void *)(v26 + 24);
    uint64_t v102 = *(void *)(v26 + 16);
    uint64_t v31 = *(void *)(v26 + 32);
    uint64_t v32 = *(void *)(v26 + 40);
    uint64_t v33 = *(void *)(v26 + 48);
    uint64_t v34 = *(void *)(v26 + 56);
    char v35 = *(unsigned char *)(v26 + 64);
    char v96 = v35;
    char v36 = *(unsigned char *)(v26 + 65);
    uint64_t v100 = *(void *)(v26 + 72);
    uint64_t v95 = *(void *)(v26 + 80);
    uint64_t v104 = *(void *)(v26 + 88);
    char v103 = *(unsigned char *)(v26 + 96);
    *(void *)uint64_t v27 = *(void *)v26;
    uint64_t v83 = v28;
    *(unsigned char *)(v27 + 8) = v29;
    *(void *)(v27 + 16) = v102;
    *(void *)(v27 + 24) = v30;
    uint64_t v37 = v30;
    *(void *)(v27 + 32) = v31;
    *(void *)(v27 + 40) = v32;
    *(void *)(v27 + 48) = v33;
    *(void *)(v27 + 56) = v34;
    uint64_t v101 = v34;
    *(unsigned char *)(v27 + 64) = v35;
    *(unsigned char *)(v27 + 65) = v36;
    *(void *)(v27 + 72) = v100;
    *(void *)(v27 + 80) = v95;
    *(void *)(v27 + 88) = v104;
    *(unsigned char *)(v27 + 96) = v103;
    uint64_t v38 = v20;
    uint64_t v90 = v20;
    uint64_t v39 = v20 + *(int *)(v25 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v38, v21, v99);
    *(void *)uint64_t v39 = v28;
    *(unsigned char *)(v39 + 8) = v97;
    *(void *)(v39 + 16) = v102;
    *(void *)(v39 + 24) = v37;
    *(void *)(v39 + 32) = v31;
    *(void *)(v39 + 40) = v32;
    *(void *)(v39 + 48) = v33;
    *(void *)(v39 + 56) = v34;
    *(unsigned char *)(v39 + 64) = v96;
    *(unsigned char *)(v39 + 65) = v36;
    *(void *)(v39 + 72) = v100;
    *(void *)(v39 + 80) = v95;
    *(void *)(v39 + 88) = v104;
    *(unsigned char *)(v39 + 96) = v103;
    uint64_t v40 = v87 + *(int *)(v92 + 48);
    v98();
    *(void *)uint64_t v40 = v28;
    *(unsigned char *)(v40 + 8) = v97;
    *(void *)(v40 + 16) = v102;
    *(void *)(v40 + 24) = v37;
    *(void *)(v40 + 32) = v31;
    *(void *)(v40 + 40) = v32;
    *(void *)(v40 + 48) = v33;
    *(void *)(v40 + 56) = v34;
    *(unsigned char *)(v40 + 64) = v96;
    *(unsigned char *)(v40 + 65) = v36;
    *(void *)(v40 + 72) = v100;
    *(void *)(v40 + 80) = v95;
    *(void *)(v40 + 88) = v104;
    *(unsigned char *)(v40 + 96) = v103;
    uint64_t v41 = swift_task_alloc();
    *(void *)(v41 + 16) = v87;
    *(unsigned char *)(v41 + 24) = v94;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v42 = v84;
    uint64_t v85 = sub_1000A4B44((uint64_t (*)(char *))sub_10080E1C8, (void *)v41, v77);
    uint64_t v43 = v28;
    swift_task_dealloc();
    sub_10001DAB4(v87, (uint64_t *)&unk_10164E720);
    uint64_t v44 = v79 + *(int *)(v92 + 48);
    ((void (*)(uint64_t, uint64_t, uint64_t))v98)(v79, v90, v99);
    *(void *)uint64_t v44 = v43;
    *(unsigned char *)(v44 + 8) = v97;
    *(void *)(v44 + 16) = v102;
    *(void *)(v44 + 24) = v37;
    *(void *)(v44 + 32) = v31;
    *(void *)(v44 + 40) = v32;
    *(void *)(v44 + 48) = v33;
    *(void *)(v44 + 56) = v34;
    *(unsigned char *)(v44 + 64) = v96;
    *(unsigned char *)(v44 + 65) = v36;
    *(void *)(v44 + 72) = v100;
    *(void *)(v44 + 80) = v95;
    *(void *)(v44 + 88) = v104;
    *(unsigned char *)(v44 + 96) = v103;
    uint64_t v45 = swift_task_alloc();
    *(void *)(v45 + 16) = v79;
    *(unsigned char *)(v45 + 24) = v94;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v91 = v37;
    swift_bridgeObjectRetain();
    uint64_t v93 = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_1000A4E08((uint64_t)sub_10080E1EC, v45, v81);
    swift_task_dealloc();
    sub_10001DAB4(v79, (uint64_t *)&unk_10164E720);
    uint64_t v47 = *(void *)(v85 + 16);
    swift_bridgeObjectRelease();
    if (v47 || *(void *)(v46 + 16))
    {
      uint64_t v48 = v74[13];
      uint64_t v80 = v74[16];
      uint64_t v82 = v74[12];
      uint64_t v78 = v74[9];
      uint64_t v86 = v42;
      uint64_t v49 = v74[8];
      uint64_t v50 = v43;
      uint64_t v51 = v48 + *(int *)(v78 + 48);
      ((void (*)(uint64_t))v98)(v48);
      *(void *)uint64_t v51 = v50;
      *(unsigned char *)(v51 + 8) = v97;
      *(void *)(v51 + 16) = v102;
      *(void *)(v51 + 24) = v91;
      *(void *)(v51 + 32) = v93;
      *(void *)(v51 + 40) = v32;
      *(void *)(v51 + 48) = v33;
      *(void *)(v51 + 56) = v34;
      *(unsigned char *)(v51 + 64) = v96;
      *(unsigned char *)(v51 + 65) = v36;
      *(void *)(v51 + 72) = v100;
      *(void *)(v51 + 80) = v95;
      *(void *)(v51 + 88) = v104;
      *(unsigned char *)(v51 + 96) = v103;
      uint64_t v52 = swift_task_alloc();
      *(void *)(v52 + 16) = v48;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v88 = sub_10080D25C(v49, (uint64_t (*)(char *, uint64_t, void, void))sub_10080E288, v52);
      swift_task_dealloc();
      sub_10001DAB4(v48, (uint64_t *)&unk_10164E720);
      uint64_t v53 = v82 + *(int *)(v78 + 48);
      ((void (*)(uint64_t, uint64_t, uint64_t))v98)(v82, v80, v99);
      *(void *)uint64_t v53 = v50;
      *(unsigned char *)(v53 + 8) = v97;
      *(void *)(v53 + 16) = v102;
      *(void *)(v53 + 24) = v91;
      *(void *)(v53 + 32) = v93;
      *(void *)(v53 + 40) = v32;
      *(void *)(v53 + 48) = v33;
      *(void *)(v53 + 56) = v34;
      *(unsigned char *)(v53 + 64) = v96;
      *(unsigned char *)(v53 + 65) = v36;
      *(void *)(v53 + 72) = v100;
      *(void *)(v53 + 80) = v95;
      *(void *)(v53 + 88) = v104;
      *(unsigned char *)(v53 + 96) = v103;
      uint64_t v54 = swift_task_alloc();
      *(void *)(v54 + 16) = v82;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v55 = sub_10080D478(v46, (uint64_t (*)(char *, void *, void, void))sub_10080E290, v54);
      swift_task_dealloc();
      sub_10001DAB4(v82, (uint64_t *)&unk_10164E720);
      swift_bridgeObjectRelease();
      sub_100445BA0((uint64_t)v55);
      if (v88[2])
      {
        sub_10000588C((uint64_t *)&unk_10164E810);
        uint64_t v56 = (void *)static _DictionaryStorage.allocate(capacity:)();
      }
      else
      {
        uint64_t v56 = _swiftEmptyDictionarySingleton;
      }
      v74[4] = v56;
      uint64_t v57 = swift_bridgeObjectRetain();
      sub_100802CD4(v57, 1, v73);
      v74[20] = v86;
      uint64_t v89 = v74[16];
      uint64_t v58 = v74[13];
      uint64_t v60 = v74[10];
      uint64_t v59 = v74[11];
      uint64_t v61 = v74[9];
      swift_bridgeObjectRelease();
      id v62 = objc_allocWithZone((Class)SPLocationFetchResult);
      sub_10001D4B0(0, (unint64_t *)&qword_101638DB0);
      sub_10080F07C(&qword_10163BC60, (void (*)(uint64_t))&type metadata accessor for UUID);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_release();
      id v64 = [v62 initWithResults:isa];
      v74[21] = v64;

      uint64_t v65 = *(int *)(v61 + 48);
      ((void (*)(uint64_t, uint64_t, uint64_t))v98)(v58, v89, v99);
      unint64_t v66 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
      uint64_t v67 = v58 + v65;
      *(void *)uint64_t v67 = v83;
      *(unsigned char *)(v67 + 8) = v97;
      *(void *)(v67 + 16) = v102;
      *(void *)(v67 + 24) = v91;
      *(void *)(v67 + 32) = v93;
      *(void *)(v67 + 40) = v32;
      *(void *)(v67 + 48) = v33;
      *(void *)(v67 + 56) = v101;
      *(unsigned char *)(v67 + 64) = v96;
      *(unsigned char *)(v67 + 65) = v36;
      *(void *)(v67 + 72) = v100;
      *(void *)(v67 + 80) = v95;
      *(void *)(v67 + 88) = v104;
      *(unsigned char *)(v67 + 96) = v103;
      uint64_t v68 = swift_allocObject();
      v74[22] = v68;
      sub_10001D608(v58, v68 + v66, (uint64_t *)&unk_10164E720);
      *(void *)(v68 + ((v59 + v66 + 7) & 0xFFFFFFFFFFFFFFF8)) = v64;
      id v69 = v64;
      uint64_t v70 = (void *)swift_task_alloc();
      v74[23] = v70;
      uint64_t v9 = sub_10000588C((uint64_t *)&unk_101638DC0);
      void *v70 = v74;
      v70[1] = sub_100800CB4;
      uint64_t v7 = sub_10080E3D4;
      uint64_t v6 = (uint64_t)(v74 + 24);
      uint64_t v8 = v68;
      return unsafeBlocking<A>(_:)(v6, v7, v8, v9);
    }
    uint64_t v0 = v74;
    sub_10001DAB4(v74[16], (uint64_t *)&unk_10164E720);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = swift_release();
    unint64_t v5 = v75;
    int64_t v10 = v76;
    uint64_t v84 = v42;
    if (v75) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    int64_t v16 = (unint64_t)((1 << *((unsigned char *)v0 + 194)) + 63) >> 6;
    uint64_t v14 = v0[5];
    if (v15 >= v16) {
      goto LABEL_30;
    }
    uint64_t v17 = v14 + 64;
    unint64_t v18 = *(void *)(v14 + 64 + 8 * v15);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v16) {
        goto LABEL_30;
      }
      unint64_t v18 = *(void *)(v17 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v16) {
          goto LABEL_30;
        }
        unint64_t v18 = *(void *)(v17 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_19:
    uint64_t v12 = (v18 - 1) & v18;
    unint64_t v13 = __clz(__rbit64(v18)) + (v10 << 6);
  }
  int64_t v19 = v15 + 3;
  if (v19 < v16)
  {
    unint64_t v18 = *(void *)(v17 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        int64_t v10 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          break;
        }
        if (v10 >= v16) {
          goto LABEL_30;
        }
        unint64_t v18 = *(void *)(v17 + 8 * v10);
        ++v19;
        if (v18) {
          goto LABEL_19;
        }
      }
LABEL_34:
      __break(1u);
      return unsafeBlocking<A>(_:)(v6, v7, v8, v9);
    }
    int64_t v10 = v19;
    goto LABEL_19;
  }
LABEL_30:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v71 = (uint64_t (*)(void))v0[1];
  return v71();
}

uint64_t sub_100800CB4()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100800DCC, 0, 0);
}

uint64_t sub_100800DCC()
{
  id v71 = v0 + 4;
  uint64_t v70 = (uint64_t)(v0 + 24);
  uint64_t v1 = v0[16];

  uint64_t v2 = sub_10001DAB4(v1, (uint64_t *)&unk_10164E720);
  unint64_t v6 = v0[19];
  int64_t v7 = v0[18];
  unint64_t v72 = v0;
  uint64_t v82 = v0[20];
  if (!v6) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v8 = __clz(__rbit64(v6));
  uint64_t v9 = (v6 - 1) & v6;
  unint64_t v10 = v8 | (v7 << 6);
  uint64_t v11 = v0[5];
  while (1)
  {
    unint64_t v73 = v9;
    int64_t v74 = v7;
    v0[18] = v7;
    v0[19] = v9;
    uint64_t v17 = v0[16];
    uint64_t v18 = v0[17];
    uint64_t v86 = v0[15];
    uint64_t v19 = v0[9];
    char v92 = *((unsigned char *)v0 + 193);
    uint64_t v77 = v0[14];
    uint64_t v79 = v0[7];
    uint64_t v75 = v0[6];
    uint64_t v20 = *(void *)(v11 + 48);
    uint64_t v97 = type metadata accessor for UUID();
    uint64_t v21 = *(void *)(v97 - 8);
    char v96 = *(void (**)(void))(v21 + 16);
    ((void (*)(uint64_t, unint64_t, uint64_t))v96)(v18, v20 + *(void *)(v21 + 72) * v10, v97);
    uint64_t v22 = v19;
    uint64_t v90 = v19;
    uint64_t v23 = *(void *)(v11 + 56) + 104 * v10;
    uint64_t v24 = v18 + *(int *)(v19 + 48);
    uint64_t v25 = *(void *)v23;
    char v26 = *(unsigned char *)(v23 + 8);
    char v95 = v26;
    uint64_t v27 = *(void *)(v23 + 24);
    uint64_t v28 = *(void *)(v23 + 32);
    uint64_t v29 = *(void *)(v23 + 40);
    uint64_t v31 = *(void *)(v23 + 48);
    uint64_t v30 = *(void *)(v23 + 56);
    char v102 = *(unsigned char *)(v23 + 64);
    char v32 = *(unsigned char *)(v23 + 65);
    uint64_t v98 = *(void *)(v23 + 72);
    uint64_t v99 = *(void *)(v23 + 16);
    uint64_t v93 = *(void *)(v23 + 80);
    uint64_t v101 = *(void *)(v23 + 88);
    char v100 = *(unsigned char *)(v23 + 96);
    *(void *)uint64_t v24 = *(void *)v23;
    uint64_t v81 = v25;
    *(unsigned char *)(v24 + 8) = v26;
    *(void *)(v24 + 16) = v99;
    *(void *)(v24 + 24) = v27;
    uint64_t v33 = v27;
    *(void *)(v24 + 32) = v28;
    *(void *)(v24 + 40) = v29;
    *(void *)(v24 + 48) = v31;
    *(void *)(v24 + 56) = v30;
    *(unsigned char *)(v24 + 64) = v102;
    *(unsigned char *)(v24 + 65) = v32;
    char v94 = v32;
    *(void *)(v24 + 72) = v98;
    *(void *)(v24 + 80) = v93;
    *(void *)(v24 + 88) = v101;
    *(unsigned char *)(v24 + 96) = v100;
    uint64_t v34 = v17;
    uint64_t v88 = v17;
    uint64_t v35 = v17 + *(int *)(v22 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v34, v18, v97);
    *(void *)uint64_t v35 = v25;
    *(unsigned char *)(v35 + 8) = v95;
    *(void *)(v35 + 16) = v99;
    *(void *)(v35 + 24) = v33;
    *(void *)(v35 + 32) = v28;
    *(void *)(v35 + 40) = v29;
    uint64_t v85 = v31;
    *(void *)(v35 + 48) = v31;
    *(void *)(v35 + 56) = v30;
    *(unsigned char *)(v35 + 64) = v102;
    *(unsigned char *)(v35 + 65) = v32;
    *(void *)(v35 + 72) = v98;
    *(void *)(v35 + 80) = v93;
    *(void *)(v35 + 88) = v101;
    *(unsigned char *)(v35 + 96) = v100;
    uint64_t v36 = v86 + *(int *)(v90 + 48);
    v96();
    *(void *)uint64_t v36 = v25;
    *(unsigned char *)(v36 + 8) = v95;
    *(void *)(v36 + 16) = v99;
    *(void *)(v36 + 24) = v33;
    *(void *)(v36 + 32) = v28;
    *(void *)(v36 + 40) = v29;
    *(void *)(v36 + 48) = v31;
    *(void *)(v36 + 56) = v30;
    *(unsigned char *)(v36 + 64) = v102;
    *(unsigned char *)(v36 + 65) = v32;
    *(void *)(v36 + 72) = v98;
    *(void *)(v36 + 80) = v93;
    *(void *)(v36 + 88) = v101;
    *(unsigned char *)(v36 + 96) = v100;
    uint64_t v37 = swift_task_alloc();
    *(void *)(v37 + 16) = v86;
    *(unsigned char *)(v37 + 24) = v92;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v38 = v82;
    uint64_t v83 = sub_1000A4B44((uint64_t (*)(char *))sub_10080E1C8, (void *)v37, v75);
    uint64_t v39 = v25;
    swift_task_dealloc();
    sub_10001DAB4(v86, (uint64_t *)&unk_10164E720);
    uint64_t v40 = v77 + *(int *)(v90 + 48);
    ((void (*)(uint64_t, uint64_t, uint64_t))v96)(v77, v88, v97);
    *(void *)uint64_t v40 = v39;
    *(unsigned char *)(v40 + 8) = v95;
    *(void *)(v40 + 16) = v99;
    *(void *)(v40 + 24) = v33;
    *(void *)(v40 + 32) = v28;
    *(void *)(v40 + 40) = v29;
    *(void *)(v40 + 48) = v31;
    *(void *)(v40 + 56) = v30;
    *(unsigned char *)(v40 + 64) = v102;
    *(unsigned char *)(v40 + 65) = v32;
    *(void *)(v40 + 72) = v98;
    *(void *)(v40 + 80) = v93;
    *(void *)(v40 + 88) = v101;
    *(unsigned char *)(v40 + 96) = v100;
    uint64_t v41 = swift_task_alloc();
    *(void *)(v41 + 16) = v77;
    *(unsigned char *)(v41 + 24) = v92;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v89 = v33;
    swift_bridgeObjectRetain();
    uint64_t v91 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_1000A4E08((uint64_t)sub_10080E1EC, v41, v79);
    swift_task_dealloc();
    sub_10001DAB4(v77, (uint64_t *)&unk_10164E720);
    uint64_t v43 = *(void *)(v83 + 16);
    swift_bridgeObjectRelease();
    if (v43 || *(void *)(v42 + 16)) {
      break;
    }
    uint64_t v0 = v72;
    sub_10001DAB4(v72[16], (uint64_t *)&unk_10164E720);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = swift_release();
    unint64_t v6 = v73;
    int64_t v7 = v74;
    uint64_t v82 = v38;
    if (v73) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v12 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    int64_t v13 = (unint64_t)((1 << *((unsigned char *)v0 + 194)) + 63) >> 6;
    uint64_t v11 = v0[5];
    if (v12 >= v13) {
      goto LABEL_31;
    }
    uint64_t v14 = v11 + 64;
    unint64_t v15 = *(void *)(v11 + 64 + 8 * v12);
    ++v7;
    if (!v15)
    {
      int64_t v7 = v12 + 1;
      if (v12 + 1 >= v13) {
        goto LABEL_31;
      }
      unint64_t v15 = *(void *)(v14 + 8 * v7);
      if (!v15)
      {
        int64_t v7 = v12 + 2;
        if (v12 + 2 >= v13) {
          goto LABEL_31;
        }
        unint64_t v15 = *(void *)(v14 + 8 * v7);
        if (!v15)
        {
          int64_t v16 = v12 + 3;
          if (v16 >= v13)
          {
LABEL_31:
            swift_release();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            id v69 = (uint64_t (*)(void))v0[1];
            return v69();
          }
          unint64_t v15 = *(void *)(v14 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              int64_t v7 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                break;
              }
              if (v7 >= v13) {
                goto LABEL_31;
              }
              unint64_t v15 = *(void *)(v14 + 8 * v7);
              ++v16;
              if (v15) {
                goto LABEL_16;
              }
            }
LABEL_35:
            __break(1u);
            return unsafeBlocking<A>(_:)(v2, v3, v4, v5);
          }
          int64_t v7 = v16;
        }
      }
    }
LABEL_16:
    uint64_t v9 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v7 << 6);
  }
  uint64_t v44 = v72[13];
  uint64_t v78 = v72[16];
  uint64_t v80 = v72[12];
  uint64_t v76 = v72[9];
  uint64_t v84 = v38;
  uint64_t v45 = v72[8];
  uint64_t v46 = v39;
  uint64_t v47 = v44 + *(int *)(v76 + 48);
  ((void (*)(uint64_t))v96)(v44);
  *(void *)uint64_t v47 = v46;
  *(unsigned char *)(v47 + 8) = v95;
  *(void *)(v47 + 16) = v99;
  *(void *)(v47 + 24) = v89;
  *(void *)(v47 + 32) = v91;
  *(void *)(v47 + 40) = v29;
  *(void *)(v47 + 48) = v31;
  *(void *)(v47 + 56) = v30;
  *(unsigned char *)(v47 + 64) = v102;
  *(unsigned char *)(v47 + 65) = v32;
  *(void *)(v47 + 72) = v98;
  *(void *)(v47 + 80) = v93;
  *(void *)(v47 + 88) = v101;
  *(unsigned char *)(v47 + 96) = v100;
  uint64_t v48 = swift_task_alloc();
  *(void *)(v48 + 16) = v44;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v87 = sub_10080D25C(v45, (uint64_t (*)(char *, uint64_t, void, void))sub_10080E288, v48);
  swift_task_dealloc();
  sub_10001DAB4(v44, (uint64_t *)&unk_10164E720);
  uint64_t v49 = v80 + *(int *)(v76 + 48);
  ((void (*)(uint64_t, uint64_t, uint64_t))v96)(v80, v78, v97);
  *(void *)uint64_t v49 = v46;
  *(unsigned char *)(v49 + 8) = v95;
  *(void *)(v49 + 16) = v99;
  *(void *)(v49 + 24) = v89;
  *(void *)(v49 + 32) = v91;
  *(void *)(v49 + 40) = v29;
  *(void *)(v49 + 48) = v31;
  *(void *)(v49 + 56) = v30;
  *(unsigned char *)(v49 + 64) = v102;
  *(unsigned char *)(v49 + 65) = v32;
  *(void *)(v49 + 72) = v98;
  *(void *)(v49 + 80) = v93;
  *(void *)(v49 + 88) = v101;
  *(unsigned char *)(v49 + 96) = v100;
  uint64_t v50 = swift_task_alloc();
  *(void *)(v50 + 16) = v80;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v51 = sub_10080D478(v42, (uint64_t (*)(char *, void *, void, void))sub_10080E290, v50);
  swift_task_dealloc();
  sub_10001DAB4(v80, (uint64_t *)&unk_10164E720);
  swift_bridgeObjectRelease();
  sub_100445BA0((uint64_t)v51);
  if (v87[2])
  {
    sub_10000588C((uint64_t *)&unk_10164E810);
    uint64_t v52 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v52 = _swiftEmptyDictionarySingleton;
  }
  v72[4] = v52;
  uint64_t v53 = swift_bridgeObjectRetain();
  sub_100802CD4(v53, 1, v71);
  v72[20] = v84;
  if (!v84)
  {
    uint64_t v55 = v72[16];
    uint64_t v56 = v72[13];
    uint64_t v58 = v72[10];
    uint64_t v57 = v72[11];
    uint64_t v59 = v72[9];
    swift_bridgeObjectRelease();
    id v60 = objc_allocWithZone((Class)SPLocationFetchResult);
    sub_10001D4B0(0, (unint64_t *)&qword_101638DB0);
    sub_10080F07C(&qword_10163BC60, (void (*)(uint64_t))&type metadata accessor for UUID);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_release();
    id v62 = [v60 initWithResults:isa];
    v72[21] = v62;

    uint64_t v63 = *(int *)(v59 + 48);
    ((void (*)(uint64_t, uint64_t, uint64_t))v96)(v56, v55, v97);
    unint64_t v64 = (*(unsigned __int8 *)(v58 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    uint64_t v65 = v56 + v63;
    *(void *)uint64_t v65 = v81;
    *(unsigned char *)(v65 + 8) = v95;
    *(void *)(v65 + 16) = v99;
    *(void *)(v65 + 24) = v89;
    *(void *)(v65 + 32) = v91;
    *(void *)(v65 + 40) = v29;
    *(void *)(v65 + 48) = v85;
    *(void *)(v65 + 56) = v30;
    *(unsigned char *)(v65 + 64) = v102;
    *(unsigned char *)(v65 + 65) = v94;
    *(void *)(v65 + 72) = v98;
    *(void *)(v65 + 80) = v93;
    *(void *)(v65 + 88) = v101;
    *(unsigned char *)(v65 + 96) = v100;
    uint64_t v66 = swift_allocObject();
    v72[22] = v66;
    sub_10001D608(v56, v66 + v64, (uint64_t *)&unk_10164E720);
    *(void *)(v66 + ((v57 + v64 + 7) & 0xFFFFFFFFFFFFFFF8)) = v62;
    id v67 = v62;
    uint64_t v68 = (void *)swift_task_alloc();
    v72[23] = v68;
    uint64_t v5 = sub_10000588C((uint64_t *)&unk_101638DC0);
    *uint64_t v68 = v72;
    v68[1] = sub_100800CB4;
    uint64_t v3 = sub_10080E3D4;
    uint64_t v2 = v70;
    uint64_t v4 = v66;
    return unsafeBlocking<A>(_:)(v2, v3, v4, v5);
  }
  return swift_unexpectedError();
}

uint64_t sub_100801968(uint64_t a1, uint64_t a2, BOOL a3)
{
  sub_10000588C((uint64_t *)&unk_10164E720);
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_10164E7D0);
  return sub_10113A798(a1, *(void *)(a1 + *(int *)(v5 + 48)), a3) & 1;
}

id sub_100801A0C(char *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v103 = a5;
  id v113 = a4;
  uint64_t v107 = a1;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v93 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000588C((uint64_t *)&unk_10164E720);
  uint64_t v11 = __chkstk_darwin(v10);
  char v92 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v111 = (uint64_t)&v91 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  char v102 = (uint64_t *)((char *)&v91 - v16);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v91 - v17;
  uint64_t v19 = sub_10000588C((uint64_t *)&unk_10164E7D0);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v105 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v110 = (uint64_t)&v91 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v109 = (uint64_t)&v91 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v91 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v31 = (char *)&v91 - v30;
  uint64_t v101 = (char *)v29;
  uint64_t v32 = *(int *)(v29 + 48);
  uint64_t v106 = v8;
  uint64_t v33 = a2;
  uint64_t v34 = v8 + 16;
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v35((char *)&v91 - v30, v33, v7);
  uint64_t v104 = v32;
  *(void *)&v31[v32] = a3;
  uint64_t v36 = qword_101636CF0;
  id v100 = a3;
  if (v36 != -1) {
    swift_once();
  }
  uint64_t v37 = type metadata accessor for Logger();
  uint64_t v99 = sub_100010324(v37, (uint64_t)qword_10170E3B0);
  uint64_t v38 = *(int *)(v10 + 48);
  uint64_t v39 = &v18[v38];
  uint64_t v40 = v103 + v38;
  uint64_t v41 = (void (*)(char *, char *, uint64_t))v35;
  ((void (*)(char *))v35)(v18);
  uint64_t v108 = v35;
  uint64_t v97 = *(void (**)(char *, char *, uint64_t))v40;
  *(void *)uint64_t v39 = v97;
  char v42 = *(unsigned char *)(v40 + 8);
  uint64_t v43 = *(void *)(v40 + 24);
  uint64_t v94 = *(void *)(v40 + 16);
  uint64_t v44 = v94;
  uint64_t v46 = *(void *)(v40 + 32);
  uint64_t v45 = *(NSObject **)(v40 + 40);
  uint64_t v95 = v43;
  uint64_t v96 = v46;
  os_log_t v98 = v45;
  uint64_t v47 = v7;
  uint64_t v48 = *(void *)(v40 + 48);
  uint64_t v49 = *(void *)(v40 + 56);
  char v50 = *(unsigned char *)(v40 + 64);
  char v51 = *(unsigned char *)(v40 + 65);
  uint64_t v52 = *(void *)(v40 + 72);
  char v53 = *(unsigned char *)(v40 + 96);
  v39[8] = v42;
  *((void *)v39 + 2) = v44;
  *((void *)v39 + 3) = v43;
  *((void *)v39 + 4) = v46;
  *((void *)v39 + 5) = v45;
  *((void *)v39 + 6) = v48;
  *((void *)v39 + 7) = v49;
  v39[64] = v50;
  v39[65] = v51;
  *((void *)v39 + 9) = v52;
  *((_OWORD *)v39 + 5) = *(_OWORD *)(v40 + 80);
  v39[96] = v53;
  uint64_t v54 = (void (*)(void, void))v102;
  sub_10001D074((uint64_t)v18, (uint64_t)v102, (uint64_t *)&unk_10164E720);
  uint64_t v55 = (uint64_t)v18;
  uint64_t v56 = v111;
  sub_10001D608(v55, v111, (uint64_t *)&unk_10164E720);
  uint64_t v57 = *((int *)v101 + 12);
  uint64_t v112 = v47;
  uint64_t v103 = v34;
  v41(v28, v31, v47);
  uint64_t v58 = v100;
  *(void *)&v28[v57] = v100;
  uint64_t v59 = v109;
  sub_10001D074((uint64_t)v28, v109, (uint64_t *)&unk_10164E7D0);
  uint64_t v60 = (uint64_t)v28;
  uint64_t v61 = v110;
  sub_10001D608(v60, v110, (uint64_t *)&unk_10164E7D0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v62 = v113;
  id v63 = v58;
  id v113 = v62;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v64 = Logger.logObject.getter();
  os_log_type_t v65 = static os_log_type_t.info.getter();
  int v66 = v65;
  BOOL v67 = os_log_type_enabled(v64, v65);
  uint64_t v68 = v59;
  id v69 = v108;
  if (v67)
  {
    uint64_t v70 = (uint64_t)v54;
    uint64_t v71 = swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    id v100 = (id)v72;
    *(_DWORD *)uint64_t v71 = 141559299;
    uint64_t v114 = 1752392040;
    v115[0] = v72;
    uint64_t v101 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v71 + 12) = 2081;
    unint64_t v73 = v92;
    v69(v92, v70, v112);
    uint64_t v74 = v106;
    LODWORD(v99) = v66;
    uint64_t v97 = *(void (**)(char *, char *, uint64_t))(v106 + 32);
    os_log_t v98 = v64;
    uint64_t v75 = v93;
    v97(v93, v73, v112);
    sub_10001DAB4(v70, (uint64_t *)&unk_10164E720);
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v76 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v78 = v77;
    char v102 = *(uint64_t **)(v74 + 8);
    ((void (*)(char *, uint64_t))v102)(v75, v112);
    uint64_t v114 = sub_1008FA0F0(v76, v78, v115);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001DAB4(v111, (uint64_t *)&unk_10164E720);
    *(_WORD *)(v71 + 22) = 2160;
    uint64_t v114 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v71 + 32) = 2081;
    uint64_t v111 = v71 + 34;
    uint64_t v79 = v105;
    uint64_t v80 = v109;
    v108(v105, v109, v112);
    v97(v75, v79, v112);
    uint64_t v81 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v83 = v82;
    ((void (*)(char *, uint64_t))v102)(v75, v112);
    uint64_t v114 = sub_1008FA0F0(v81, v83, v115);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001DAB4(v110, (uint64_t *)&unk_10164E7D0);
    sub_10001DAB4(v80, (uint64_t *)&unk_10164E7D0);
    *(_WORD *)(v71 + 42) = 2049;
    [v113 latitude];
    uint64_t v114 = v84;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v71 + 52) = 2049;
    [v113 longitude];
    uint64_t v114 = v85;
    uint64_t v31 = v101;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    os_log_t v86 = v98;
    _os_log_impl((void *)&_mh_execute_header, v98, (os_log_type_t)v99, "Received location update for subscription: %{private,mask.hash}s, beaconID: %{private,mask.hash}s.\nLoc: lat: %{private}f, lon: %{private}f.", (uint8_t *)v71, 0x3Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10001DAB4((uint64_t)v54, (uint64_t *)&unk_10164E720);
    sub_10001DAB4(v56, (uint64_t *)&unk_10164E720);
    sub_10001DAB4(v61, (uint64_t *)&unk_10164E7D0);
    sub_10001DAB4(v68, (uint64_t *)&unk_10164E7D0);

    uint64_t v79 = v105;
    uint64_t v74 = v106;
  }
  uint64_t v87 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
  uint64_t v88 = v112;
  v87(v79, v31, v112);

  v87(v107, v79, v88);
  id v89 = v113;

  return v89;
}

id sub_1008022E0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  id v71 = a4;
  uint64_t v67 = a1;
  uint64_t v68 = (void *)a2;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  os_log_type_t v65 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000588C((uint64_t *)&unk_10164E720);
  uint64_t v10 = __chkstk_darwin(v9);
  os_log_t v62 = (os_log_t)((char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v70 = (uint64_t)v59 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v69 = (uint64_t)v59 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v59 - v16;
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v66 = sub_100010324(v18, (uint64_t)qword_10170E3B0);
  uint64_t v19 = *(int *)(v9 + 48);
  uint64_t v20 = &v17[v19];
  uint64_t v21 = a5 + v19;
  uint64_t v60 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v61 = v7 + 16;
  v60(v17, a5, v6);
  uint64_t v63 = v6;
  uint64_t v64 = v7;
  *(void *)uint64_t v20 = *(void *)v21;
  uint64_t v22 = *(void *)(v21 + 16);
  uint64_t v23 = *(void *)(v21 + 24);
  uint64_t v25 = *(void *)(v21 + 32);
  uint64_t v24 = *(void *)(v21 + 40);
  uint64_t v26 = *(void *)(v21 + 48);
  uint64_t v27 = *(void *)(v21 + 56);
  char v28 = *(unsigned char *)(v21 + 64);
  char v29 = *(unsigned char *)(v21 + 65);
  uint64_t v30 = *(void *)(v21 + 72);
  char v31 = *(unsigned char *)(v21 + 96);
  v20[8] = *(unsigned char *)(v21 + 8);
  *((void *)v20 + 2) = v22;
  *((void *)v20 + 3) = v23;
  *((void *)v20 + 4) = v25;
  *((void *)v20 + 5) = v24;
  *((void *)v20 + 6) = v26;
  *((void *)v20 + 7) = v27;
  v20[64] = v28;
  v20[65] = v29;
  *((void *)v20 + 9) = v30;
  *((_OWORD *)v20 + 5) = *(_OWORD *)(v21 + 80);
  v20[96] = v31;
  sub_10001D074((uint64_t)v17, v69, (uint64_t *)&unk_10164E720);
  sub_10001D608((uint64_t)v17, v70, (uint64_t *)&unk_10164E720);
  uint64_t v32 = v68;
  sub_10001D010((uint64_t)v68, (uint64_t)v74);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v71 = v71;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.info.getter();
  int v35 = v34;
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v36 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v66 = v37;
    *(_DWORD *)uint64_t v36 = 141559299;
    uint64_t v72 = 1752392040;
    uint64_t v73 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v36 + 12) = 2081;
    v59[1] = v36 + 14;
    os_log_t v39 = v62;
    uint64_t v38 = v63;
    uint64_t v40 = v69;
    v60((char *)v62, v69, v63);
    uint64_t v41 = v64;
    char v42 = v65;
    (*(void (**)(char *, os_log_t, uint64_t))(v64 + 32))(v65, v39, v38);
    sub_10001DAB4(v40, (uint64_t *)&unk_10164E720);
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    LODWORD(v69) = v35;
    os_log_t v62 = v33;
    uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v45 = v44;
    uint64_t v46 = *(void (**)(char *, uint64_t))(v41 + 8);
    v46(v42, v38);
    uint64_t v72 = sub_1008FA0F0(v43, v45, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001DAB4(v70, (uint64_t *)&unk_10164E720);
    *(_WORD *)(v36 + 22) = 2160;
    uint64_t v72 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v36 + 32) = 2081;
    uint64_t v70 = v36 + 34;
    uint64_t v47 = v75;
    uint64_t v48 = v76;
    sub_10001CD44(v74, v75);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v48);
    uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v51 = v50;
    v46(v42, v38);
    uint64_t v32 = v68;
    uint64_t v72 = sub_1008FA0F0(v49, v51, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v74);
    *(_WORD *)(v36 + 42) = 2049;
    [v71 latitude];
    uint64_t v72 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v36 + 52) = 2049;
    [v71 longitude];
    uint64_t v72 = v53;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    os_log_t v54 = v62;
    _os_log_impl((void *)&_mh_execute_header, v62, (os_log_type_t)v69, "Received location update for subscription: %{private,mask.hash}s, beaconGroupID: %{private,mask.hash}s.\nLoc: lat: %{private}f, lon: %{private}f.", (uint8_t *)v36, 0x3Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10001DAB4(v69, (uint64_t *)&unk_10164E720);
    sub_10001DAB4(v70, (uint64_t *)&unk_10164E720);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v74);
  }
  uint64_t v55 = v32[3];
  uint64_t v56 = v32[4];
  sub_10001CD44(v32, v55);
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v56);
  id v57 = v71;

  return v57;
}

BOOL sub_1008029A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C((uint64_t *)&unk_10164E720);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(int *)(v5 + 56);
  uint64_t v9 = &v7[v8];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v7, a1, v11);
  *(void *)uint64_t v9 = *(void *)v10;
  char v13 = *(unsigned char *)(v10 + 64);
  char v14 = *(unsigned char *)(v10 + 65);
  uint64_t v15 = *(void *)(v10 + 72);
  char v16 = *(unsigned char *)(v10 + 96);
  v9[8] = *(unsigned char *)(v10 + 8);
  long long v17 = *(_OWORD *)(v10 + 32);
  *((_OWORD *)v9 + 1) = *(_OWORD *)(v10 + 16);
  *((_OWORD *)v9 + 2) = v17;
  *((_OWORD *)v9 + 3) = *(_OWORD *)(v10 + 48);
  v9[64] = v13;
  v9[65] = v14;
  *((void *)v9 + 9) = v15;
  *((_OWORD *)v9 + 5) = *(_OWORD *)(v10 + 80);
  v9[96] = v16;
  swift_retain();
  XPCSession.proxy.getter();
  swift_release();
  id v18 = v21;
  if (v21)
  {
    [v21 receivedUpdatedLocation:a2];
    swift_unknownObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v11);
  return v18 == 0;
}

unint64_t sub_100802B3C()
{
  unint64_t result = qword_10164E6F0;
  if (!qword_10164E6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164E6F0);
  }
  return result;
}

uint64_t sub_100802B90(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10012E0C8;
  return sub_1007FD27C(a1, v1);
}

unint64_t sub_100802C28()
{
  unint64_t result = qword_10164E710;
  if (!qword_10164E710)
  {
    sub_10000592C((uint64_t *)&unk_101653DD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164E710);
  }
  return result;
}

uint64_t sub_100802C84()
{
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

void sub_100802CBC(uint64_t a1)
{
  sub_1007FD9E8(a1, v1 + 16);
}

uint64_t sub_100802CCC@<X0>(void *a1@<X8>)
{
  return sub_1007E33E8(a1);
}

uint64_t sub_100802CD4(uint64_t a1, int a2, void *a3)
{
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C((uint64_t *)&unk_10164E820);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    return swift_bridgeObjectRelease();
  }
  LODWORD(v59) = a2;
  uint64_t v17 = *(int *)(v12 + 48);
  v56[0] = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v56[1] = v3;
  uint64_t v18 = a1 + v56[0];
  uint64_t v61 = *(void *)(v13 + 72);
  uint64_t v58 = a1;
  swift_bridgeObjectRetain();
  sub_10001D074(v18, (uint64_t)v15, (uint64_t *)&unk_10164E820);
  uint64_t v57 = v8;
  uint64_t v19 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v62 = v7;
  uint64_t v63 = v19;
  v19((unint64_t)v10, v15, v7);
  uint64_t v60 = v17;
  uint64_t v20 = *(void **)&v15[v17];
  uint64_t v64 = a3;
  uint64_t v21 = *a3;
  unint64_t v23 = sub_1007240CC((uint64_t)v10);
  uint64_t v24 = *(void *)(v21 + 16);
  BOOL v25 = (v22 & 1) == 0;
  uint64_t v26 = v24 + v25;
  if (__OFADD__(v24, v25)) {
    goto LABEL_24;
  }
  char v27 = v22;
  if (*(void *)(v21 + 24) >= v26)
  {
    if (v59)
    {
      if (v22) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_100E7E098();
      if (v27) {
        goto LABEL_10;
      }
    }
LABEL_13:
    os_log_type_t v34 = (void *)*v64;
    *(void *)(*v64 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    uint64_t v35 = v34[6];
    uint64_t v59 = *(void *)(v57 + 72);
    uint64_t v36 = v62;
    v63(v35 + v59 * v23, v10, v62);
    *(void *)(v34[7] + 8 * v23) = v20;
    uint64_t v37 = v34[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v34[2] = v39;
    uint64_t v40 = v16 - 1;
    if (v16 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    uint64_t v41 = v58 + v61 + v56[0];
    while (1)
    {
      sub_10001D074(v41, (uint64_t)v15, (uint64_t *)&unk_10164E820);
      v63((unint64_t)v10, v15, v36);
      uint64_t v20 = *(void **)&v15[v60];
      char v42 = (void *)*v64;
      unint64_t v44 = sub_1007240CC((uint64_t)v10);
      uint64_t v45 = v42[2];
      BOOL v46 = (v43 & 1) == 0;
      uint64_t v47 = v45 + v46;
      if (__OFADD__(v45, v46)) {
        break;
      }
      char v48 = v43;
      if (v42[3] < v47)
      {
        sub_100E64D60(v47, 1);
        unint64_t v49 = sub_1007240CC((uint64_t)v10);
        if ((v48 & 1) != (v50 & 1)) {
          goto LABEL_26;
        }
        unint64_t v44 = v49;
      }
      if (v48) {
        goto LABEL_10;
      }
      unint64_t v51 = (void *)*v64;
      *(void *)(*v64 + 8 * (v44 >> 6) + 64) |= 1 << v44;
      uint64_t v36 = v62;
      v63(v51[6] + v59 * v44, v10, v62);
      *(void *)(v51[7] + 8 * v44) = v20;
      uint64_t v52 = v51[2];
      BOOL v38 = __OFADD__(v52, 1);
      uint64_t v53 = v52 + 1;
      if (v38) {
        goto LABEL_25;
      }
      v51[2] = v53;
      v41 += v61;
      if (!--v40) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_100E64D60(v26, v59 & 1);
  unint64_t v28 = sub_1007240CC((uint64_t)v10);
  if ((v27 & 1) == (v29 & 1))
  {
    unint64_t v23 = v28;
    if ((v27 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v31 = swift_allocError();
    swift_willThrow();
    uint64_t v67 = v31;
    swift_errorRetain();
    sub_10000588C(&qword_101638D40);
    char v32 = swift_dynamicCast();
    uint64_t v33 = v62;
    if ((v32 & 1) == 0)
    {

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v10, v33);
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    goto LABEL_27;
  }
LABEL_26:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_27:
  uint64_t v65 = 0;
  unint64_t v66 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v54._object = (void *)0x8000000101408560;
  v54._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v54);
  _print_unlocked<A, B>(_:_:)();
  v55._countAndFlagsBits = 39;
  v55._object = (void *)0xE100000000000000;
  String.append(_:)(v55);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10080322C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1008032B4@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1007E29E4(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_100803330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[51] = a1;
  v3[52] = a3;
  type metadata accessor for String.Encoding();
  v3[53] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10163B1D0);
  v3[54] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for LocalFindableAccessoryRecord();
  v3[55] = v6;
  v3[56] = *(void *)(v6 - 8);
  v3[57] = swift_task_alloc();
  sub_10000588C(&qword_10163CF20);
  v3[58] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for BeaconIdentifier();
  v3[59] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[60] = v8;
  v3[61] = *(void *)(v8 + 64);
  v3[62] = swift_task_alloc();
  sub_10000588C(&qword_10164DBB0);
  v3[63] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for UUID();
  v3[64] = v9;
  v3[65] = *(void *)(v9 - 8);
  v3[66] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Date();
  v3[67] = v10;
  v3[68] = *(void *)(v10 - 8);
  v3[69] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10163AC90);
  v3[70] = swift_task_alloc();
  sub_10000588C(&qword_10163D030);
  v3[71] = swift_task_alloc();
  uint64_t v11 = swift_task_alloc();
  v3[72] = v11;
  uint64_t v12 = type metadata accessor for DeviceEvent(0);
  v3[73] = v12;
  v3[74] = *(void *)(v12 - 8);
  v3[75] = swift_task_alloc();
  v3[76] = swift_task_alloc();
  v3[77] = swift_task_alloc();
  v3[78] = swift_task_alloc();
  v3[79] = swift_task_alloc();
  v3[80] = swift_task_alloc();
  v3[81] = swift_task_alloc();
  v3[5] = v6;
  v3[6] = sub_10080F07C(&qword_101642930, (void (*)(uint64_t))type metadata accessor for LocalFindableAccessoryRecord);
  uint64_t v13 = sub_10001D958(v3 + 2);
  v3[82] = (uint64_t)v13;
  sub_10080E7F4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  uint64_t v14 = (void *)swift_task_alloc();
  v3[83] = (uint64_t)v14;
  *uint64_t v14 = v3;
  v14[1] = sub_1008037B4;
  return sub_1007F85BC(v11, a1);
}

uint64_t sub_1008037B4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 416);
  swift_task_dealloc();
  return _swift_task_switch(sub_1008038C4, v1, 0);
}

uint64_t sub_1008038C4()
{
  uint64_t v107 = v0;
  uint64_t v1 = v0[74];
  uint64_t v2 = v0[73];
  uint64_t v3 = v0[72];
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  v0[84] = (uint64_t)v4;
  v0[85] = (v1 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v3, 1, v2) == 1)
  {
    sub_10001DAB4(v3, &qword_10163D030);
    char v5 = (void *)swift_task_alloc();
    v0[86] = (uint64_t)v5;
    void *v5 = v0;
    v5[1] = sub_100804708;
    uint64_t v6 = v0[71];
    uint64_t v7 = v0[51];
    return sub_1007F7218(v6, v7);
  }
  uint64_t v9 = (uint64_t)(v0 + 2);
  uint64_t v10 = v0 + 22;
  sub_10080ECB8(v3, v0[80], type metadata accessor for DeviceEvent);
  uint64_t v11 = v0[81];
  sub_10080ECB8(v0[80], v11, type metadata accessor for DeviceEvent);
  if (*(unsigned char *)(v11 + 9) == 5)
  {
    if (qword_101636CD8 != -1) {
      swift_once();
    }
    uint64_t v12 = v0[70];
    uint64_t v13 = v0[68];
    uint64_t v14 = v0[67];
    OS_dispatch_queue.sync<A>(execute:)();
    sub_1010AB6E4(v0[48]);
    swift_bridgeObjectRelease();
    Date.addingTimeInterval(_:)();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v12, 0, 1, v14);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v12, 1, v14) != 1)
    {
      uint64_t v15 = v0[70];
      uint64_t v16 = v0[69];
      uint64_t v17 = v0[68];
      uint64_t v18 = v0[67];
      static Date.trustedNow.getter(v16);
      Date.timeIntervalSince(_:)();
      double v20 = v19;
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v21(v16, v18);
      v21(v15, v18);
      if (v20 > 0.0)
      {
        uint64_t v103 = v11;
        uint64_t v99 = (long long *)(v0 + 7);
        uint64_t v22 = v0[51] + *(int *)(v0[59] + 20);
        uint64_t v23 = v0[52] + 152;
        swift_beginAccess();
        if (*(void *)(*(void *)v23 + 16))
        {
          swift_bridgeObjectRetain();
          sub_1007240CC(v22);
          if (v24)
          {
            swift_retain();
            swift_bridgeObjectRelease();
            sub_10000588C(&qword_101638D40);
            Task.cancel()();
            swift_release();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v83 = v0[65];
        uint64_t v84 = v0[63];
        uint64_t v97 = v0[66];
        uint64_t v98 = v0[64];
        uint64_t v85 = v0[62];
        uint64_t v96 = v0[61];
        uint64_t v86 = v0[60];
        uint64_t v87 = v0[51];
        (*(void (**)(void))(v83 + 16))();
        uint64_t v88 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v84, 1, 1, v88);
        uint64_t v89 = swift_allocObject();
        swift_weakInit();
        sub_10080E7F4(v87, v85, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
        uint64_t v9 = (uint64_t)(v0 + 2);
        sub_10001D010((uint64_t)(v0 + 2), (uint64_t)v99);
        unint64_t v90 = (*(unsigned __int8 *)(v86 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
        uint64_t v91 = swift_allocObject();
        *(void *)(v91 + 16) = 0;
        *(void *)(v91 + 24) = 0;
        *(double *)(v91 + 32) = v20;
        *(void *)(v91 + 40) = v89;
        sub_10080ECB8(v85, v91 + v90, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
        sub_10001CEB0(v99, v91 + ((v96 + v90 + 7) & 0xFFFFFFFFFFFFFFF8));
        uint64_t v92 = sub_100885EBC(v84, (uint64_t)&unk_10164E928, v91);
        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v106[0] = *(void *)v23;
        *(void *)uint64_t v23 = 0x8000000000000000;
        sub_1001706FC(v92, v97, isUniquelyReferenced_nonNull_native);
        *(void *)uint64_t v23 = v106[0];
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v97, v98);
        swift_endAccess();
        uint64_t v11 = v103;
        uint64_t v10 = v0 + 22;
      }
      goto LABEL_15;
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[68] + 56))(v0[70], 1, 1, v0[67]);
  }
  sub_10001DAB4(v0[70], (uint64_t *)&unk_10163AC90);
LABEL_15:
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v25 = v0[81];
  uint64_t v26 = v0[78];
  uint64_t v27 = v0[77];
  uint64_t v28 = v0[76];
  uint64_t v29 = type metadata accessor for Logger();
  sub_100010324(v29, (uint64_t)qword_10170E3B0);
  sub_10001D010(v9, (uint64_t)v10);
  sub_10080E7F4(v25, v26, type metadata accessor for DeviceEvent);
  sub_10080E7F4(v25, v27, type metadata accessor for DeviceEvent);
  sub_10080E7F4(v25, v28, type metadata accessor for DeviceEvent);
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  BOOL v32 = os_log_type_enabled(v30, v31);
  uint64_t v33 = v0[78];
  if (v32)
  {
    os_log_type_t v100 = v31;
    os_log_t log = v30;
    uint64_t v102 = v9;
    uint64_t v104 = v11;
    uint64_t v34 = v0[66];
    uint64_t v35 = v0[65];
    uint64_t v36 = v0[64];
    uint64_t v37 = swift_slowAlloc();
    v106[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 141559299;
    v0[42] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v37 + 12) = 2081;
    BOOL v38 = sub_10001CD44(v10, v0[25]);
    uint64_t v95 = *(void (**)(uint64_t, void *, uint64_t))(v35 + 16);
    v95(v34, v38, v36);
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v41 = v40;
    uint64_t v94 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v94(v34, v36);
    v0[43] = sub_1008FA0F0(v39, v41, v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v10);
    *(_WORD *)(v37 + 22) = 2082;
    unint64_t v42 = 0xE800000000000000;
    uint64_t v43 = 0x6E776F6E6B6E752ELL;
    switch(*(unsigned char *)(v33 + 9))
    {
      case 1:
        uint64_t v43 = 0x7463656E6E6F632ELL;
        break;
      case 2:
        unint64_t v42 = 0xEB00000000746365;
        uint64_t v43 = 0x6E6E6F637369642ELL;
        break;
      case 3:
        unint64_t v42 = 0xE700000000000000;
        unsigned int v46 = 1953784110;
        goto LABEL_24;
      case 4:
        unint64_t v42 = 0xE700000000000000;
        unsigned int v46 = 1952801838;
LABEL_24:
        uint64_t v43 = v46 | 0x68636100000000;
        break;
      case 5:
        unint64_t v42 = 0xEF79627261654E64;
        uint64_t v43 = 0x657463657465642ELL;
        break;
      case 6:
        unint64_t v42 = 0xEC00000064657261;
        uint64_t v43 = 0x657070617369642ELL;
        break;
      case 7:
        unint64_t v42 = 0xE500000000000000;
        uint64_t v43 = 0x726961702ELL;
        break;
      default:
        break;
    }
    uint64_t v47 = v0[78];
    uint64_t v48 = v0[77];
    uint64_t v49 = v0[76];
    uint64_t v50 = v0[73];
    uint64_t v51 = v0[58];
    v0[41] = sub_1008FA0F0(v43, v42, v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10080F01C(v47, type metadata accessor for DeviceEvent);
    *(_WORD *)(v37 + 32) = 2082;
    sub_10080F07C((unint64_t *)&qword_101638DA0, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[45] = sub_1008FA0F0(v52, v53, v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10080F01C(v48, type metadata accessor for DeviceEvent);
    *(_WORD *)(v37 + 42) = 2160;
    v0[46] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v37 + 52) = 2081;
    sub_10001D074(v49 + *(int *)(v50 + 32), v51, &qword_10163CF20);
    uint64_t v54 = type metadata accessor for DeviceEvent.AttachmentInfo(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v51, 1, v54) == 1)
    {
      sub_10001DAB4(v0[58], &qword_10163CF20);
      unint64_t v55 = 0xE400000000000000;
      uint64_t v56 = 1701736302;
    }
    else
    {
      uint64_t v57 = v0[66];
      uint64_t v58 = v0[64];
      uint64_t v59 = v0[58];
      v95(v57, (void *)v59, v58);
      sub_10080F01C(v59, type metadata accessor for DeviceEvent.AttachmentInfo);
      uint64_t v56 = UUID.uuidString.getter();
      unint64_t v55 = v60;
      v94(v57, v58);
    }
    uint64_t v11 = v104;
    uint64_t v61 = v0[76];
    v0[47] = sub_1008FA0F0(v56, v55, v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10080F01C(v61, type metadata accessor for DeviceEvent);
    _os_log_impl((void *)&_mh_execute_header, log, v100, "Update device event; beacon: %{private,mask.hash}s source: %{public}s, timestamp: %{public}s, attached to: %{private,mask.hash}s.",
      (uint8_t *)v37,
      0x3Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v9 = v102;
  }
  else
  {
    uint64_t v44 = v0[77];
    uint64_t v45 = v0[76];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v10);
    sub_10080F01C(v33, type metadata accessor for DeviceEvent);
    sub_10080F01C(v44, type metadata accessor for DeviceEvent);
    sub_10080F01C(v45, type metadata accessor for DeviceEvent);
  }
  uint64_t v62 = v0[56];
  sub_10001D010(v9, (uint64_t)(v0 + 12));
  sub_10000588C((uint64_t *)&unk_10164DBF0);
  int v63 = swift_dynamicCast();
  uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56);
  if (v63)
  {
    uint64_t v65 = v0[57];
    uint64_t v67 = v0[54];
    uint64_t v66 = v0[55];
    v64(v67, 0, 1, v66);
    sub_10080ECB8(v67, v65, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
    uint64_t v68 = (uint64_t *)(v65 + *(int *)(v66 + 28));
    uint64_t v69 = *v68;
    unint64_t v70 = v68[1];
    sub_1000361E0(*v68, v70);
    static String.Encoding.utf8.getter();
    uint64_t v71 = String.init(data:encoding:)();
    if (!v72) {
      uint64_t v71 = Data.hexString.getter();
    }
    uint64_t v73 = v71;
    uint64_t v74 = v72;
    sub_10001CFB8(v69, v70);
    sub_10080F01C(v0[57], (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  }
  else
  {
    uint64_t v75 = v0[54];
    v64(v75, 1, 1, v0[55]);
    sub_10001DAB4(v75, (uint64_t *)&unk_10163B1D0);
    uint64_t v73 = 0;
    uint64_t v74 = 0;
  }
  uint64_t v76 = v0[81];
  uint64_t v77 = v0[75];
  uint64_t v78 = *(void *)(v0[52] + 160);
  sub_10001D4B0(0, (unint64_t *)&qword_10164E908);
  sub_10080E7F4(v76, v77, type metadata accessor for DeviceEvent);
  id v79 = sub_1007F6F9C(v77, v73, v74);
  v0[87] = (uint64_t)v79;
  unint64_t v80 = 0x10F0F0F0F040200uLL >> (8 * *(unsigned char *)(v11 + 9));
  uint64_t v105 = (uint64_t (*)(id, uint64_t, unint64_t, uint64_t))((char *)&dword_10164E910 + dword_10164E910);
  uint64_t v81 = (void *)swift_task_alloc();
  v0[88] = (uint64_t)v81;
  *uint64_t v81 = v0;
  v81[1] = sub_100805CE4;
  uint64_t v82 = v0[82];
  return v105(v79, v82, v80, v78);
}

uint64_t sub_100804708()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 416);
  swift_task_dealloc();
  return _swift_task_switch(sub_100804818, v1, 0);
}

uint64_t sub_100804818()
{
  uint64_t v129 = v0;
  uint64_t v1 = *(void *)(v0 + 568);
  uint64_t v126 = v0 + 16;
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0 + 672))(v1, 1, *(void *)(v0 + 584)) == 1)
  {
    sub_10001DAB4(v1, &qword_10163D030);
    sub_100802B3C();
    uint64_t v2 = swift_allocError();
    *uint64_t v3 = 3;
    swift_willThrow();
    *(void *)(v0 + 400) = v2;
    swift_errorRetain();
    swift_errorRetain();
    sub_10000588C(&qword_101638D40);
    if (swift_dynamicCast() && *(unsigned char *)(v0 + 712) == 3)
    {
      if (qword_101636CF0 != -1) {
        swift_once();
      }
      uint64_t v4 = type metadata accessor for Logger();
      sub_100010324(v4, (uint64_t)qword_10170E3B0);
      sub_10001D010(v0 + 16, v0 + 216);
      char v5 = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.info.getter();
      if (!os_log_type_enabled(v5, v6))
      {
        swift_errorRelease();
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 216);

        goto LABEL_31;
      }
      os_log_type_t v125 = v6;
      uint64_t v7 = *(void *)(v0 + 528);
      uint64_t v8 = *(void *)(v0 + 520);
      uint64_t v9 = *(void *)(v0 + 512);
      uint64_t v10 = swift_slowAlloc();
      v128[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 141558275;
      *(void *)(v0 + 304) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v10 + 12) = 2081;
      uint64_t v11 = sub_10001CD44((void *)(v0 + 216), *(void *)(v0 + 240));
      (*(void (**)(uint64_t, void *, uint64_t))(v8 + 16))(v7, v11, v9);
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v14 = v13;
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
      *(void *)(v0 + 312) = sub_1008FA0F0(v12, v14, v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 216);
      _os_log_impl((void *)&_mh_execute_header, v5, v125, "No device events for beacon: %{private,mask.hash}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      if (qword_101636CF0 != -1) {
        swift_once();
      }
      uint64_t v30 = type metadata accessor for Logger();
      sub_100010324(v30, (uint64_t)qword_10170E3B0);
      sub_10001D010(v0 + 16, v0 + 136);
      swift_errorRetain();
      swift_errorRetain();
      os_log_type_t v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v31, v32))
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 136);

        goto LABEL_31;
      }
      os_log_t v120 = *(os_log_t *)(v0 + 528);
      uint64_t v33 = *(void *)(v0 + 520);
      uint64_t v116 = *(void *)(v0 + 512);
      uint64_t v34 = swift_slowAlloc();
      id v122 = (void *)swift_slowAlloc();
      v128[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 138543875;
      os_log_type_t type = v32;
      swift_errorRetain();
      uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 320) = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v122 = v35;
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v34 + 12) = 2160;
      *(void *)(v0 + 392) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v34 + 22) = 2081;
      uint64_t v36 = sub_10001CD44((void *)(v0 + 136), *(void *)(v0 + 160));
      (*(void (**)(os_log_t, void *, uint64_t))(v33 + 16))(v120, v36, v116);
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v39 = v38;
      (*(void (**)(os_log_t, uint64_t))(v33 + 8))(v120, v116);
      *(void *)(v0 + 352) = sub_1008FA0F0(v37, v39, v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 136);
      _os_log_impl((void *)&_mh_execute_header, v31, type, "Failed to send the attach event: %{public}@ for beacon: %{private,mask.hash}s", (uint8_t *)v34, 0x20u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    swift_errorRelease();
LABEL_31:
    swift_errorRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v126);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v62 = *(uint64_t (**)(void))(v0 + 8);
    return v62();
  }
  uint64_t v15 = (void *)(v0 + 176);
  sub_10080ECB8(v1, *(void *)(v0 + 632), type metadata accessor for DeviceEvent);
  uint64_t v16 = *(void *)(v0 + 648);
  sub_10080ECB8(*(void *)(v0 + 632), v16, type metadata accessor for DeviceEvent);
  if (*(unsigned char *)(v16 + 9) == 5)
  {
    if (qword_101636CD8 != -1) {
      swift_once();
    }
    uint64_t v17 = *(void *)(v0 + 560);
    uint64_t v18 = *(void *)(v0 + 544);
    uint64_t v19 = *(void *)(v0 + 536);
    OS_dispatch_queue.sync<A>(execute:)();
    sub_1010AB6E4(*(void *)(v0 + 384));
    swift_bridgeObjectRelease();
    Date.addingTimeInterval(_:)();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v17, 0, 1, v19);
    uint64_t v15 = (void *)(v0 + 176);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v17, 1, v19) != 1)
    {
      uint64_t v20 = *(void *)(v0 + 560);
      uint64_t v21 = *(void *)(v0 + 552);
      uint64_t v22 = *(void *)(v0 + 544);
      uint64_t v23 = *(void *)(v0 + 536);
      static Date.trustedNow.getter(v21);
      Date.timeIntervalSince(_:)();
      double v25 = v24;
      uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v26(v21, v23);
      v26(v20, v23);
      if (v25 > 0.0)
      {
        uint64_t v119 = (long long *)(v0 + 56);
        uint64_t v27 = *(void *)(v0 + 408) + *(int *)(*(void *)(v0 + 472) + 20);
        uint64_t v28 = *(void *)(v0 + 416) + 152;
        swift_beginAccess();
        if (*(void *)(*(void *)v28 + 16))
        {
          swift_bridgeObjectRetain();
          sub_1007240CC(v27);
          if (v29)
          {
            swift_retain();
            swift_bridgeObjectRelease();
            sub_10000588C(&qword_101638D40);
            Task.cancel()();
            swift_release();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v101 = *(void *)(v0 + 520);
        uint64_t v102 = *(void *)(v0 + 504);
        uint64_t v115 = *(void *)(v0 + 528);
        uint64_t v118 = *(void *)(v0 + 512);
        uint64_t v103 = *(void *)(v0 + 496);
        uint64_t v114 = *(void *)(v0 + 488);
        uint64_t v104 = *(void *)(v0 + 480);
        uint64_t v105 = *(void *)(v0 + 408);
        (*(void (**)(void))(v101 + 16))();
        uint64_t v106 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v102, 1, 1, v106);
        uint64_t v107 = swift_allocObject();
        swift_weakInit();
        sub_10080E7F4(v105, v103, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
        sub_10001D010(v126, (uint64_t)v119);
        unint64_t v108 = (*(unsigned __int8 *)(v104 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
        uint64_t v109 = swift_allocObject();
        *(void *)(v109 + 16) = 0;
        *(void *)(v109 + 24) = 0;
        *(double *)(v109 + 32) = v25;
        *(void *)(v109 + 40) = v107;
        sub_10080ECB8(v103, v109 + v108, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
        sub_10001CEB0(v119, v109 + ((v114 + v108 + 7) & 0xFFFFFFFFFFFFFFF8));
        uint64_t v110 = sub_100885EBC(v102, (uint64_t)&unk_10164E928, v109);
        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v128[0] = *(void *)v28;
        *(void *)uint64_t v28 = 0x8000000000000000;
        sub_1001706FC(v110, v115, isUniquelyReferenced_nonNull_native);
        *(void *)uint64_t v28 = v128[0];
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v115, v118);
        swift_endAccess();
        uint64_t v15 = (void *)(v0 + 176);
      }
      goto LABEL_23;
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 544) + 56))(*(void *)(v0 + 560), 1, 1, *(void *)(v0 + 536));
  }
  sub_10001DAB4(*(void *)(v0 + 560), (uint64_t *)&unk_10163AC90);
LABEL_23:
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v40 = *(void *)(v0 + 648);
  uint64_t v41 = *(void *)(v0 + 624);
  uint64_t v42 = *(void *)(v0 + 616);
  uint64_t v43 = *(void *)(v0 + 608);
  uint64_t v44 = type metadata accessor for Logger();
  sub_100010324(v44, (uint64_t)qword_10170E3B0);
  sub_10001D010(v126, (uint64_t)v15);
  sub_10080E7F4(v40, v41, type metadata accessor for DeviceEvent);
  sub_10080E7F4(v40, v42, type metadata accessor for DeviceEvent);
  sub_10080E7F4(v40, v43, type metadata accessor for DeviceEvent);
  uint64_t v45 = Logger.logObject.getter();
  os_log_type_t v46 = static os_log_type_t.default.getter();
  BOOL v47 = os_log_type_enabled(v45, v46);
  uint64_t v48 = *(void *)(v0 + 624);
  if (v47)
  {
    os_log_type_t v117 = v46;
    uint64_t v121 = v45;
    uint64_t v123 = v16;
    uint64_t v49 = *(void *)(v0 + 528);
    uint64_t v50 = *(void *)(v0 + 520);
    uint64_t v51 = *(void *)(v0 + 512);
    uint64_t v52 = swift_slowAlloc();
    v128[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v52 = 141559299;
    *(void *)(v0 + 336) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v52 + 12) = 2081;
    unint64_t v53 = sub_10001CD44(v15, *(void *)(v0 + 200));
    id v113 = *(void (**)(uint64_t, void *, uint64_t))(v50 + 16);
    v113(v49, v53, v51);
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v54 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v56 = v55;
    uint64_t v112 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
    v112(v49, v51);
    *(void *)(v0 + 344) = sub_1008FA0F0(v54, v56, v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v15);
    *(_WORD *)(v52 + 22) = 2082;
    unint64_t v57 = 0xE800000000000000;
    uint64_t v58 = 0x6E776F6E6B6E752ELL;
    switch(*(unsigned char *)(v48 + 9))
    {
      case 1:
        uint64_t v58 = 0x7463656E6E6F632ELL;
        break;
      case 2:
        unint64_t v57 = 0xEB00000000746365;
        uint64_t v58 = 0x6E6E6F637369642ELL;
        break;
      case 3:
        unint64_t v57 = 0xE700000000000000;
        unsigned int v64 = 1953784110;
        goto LABEL_37;
      case 4:
        unint64_t v57 = 0xE700000000000000;
        unsigned int v64 = 1952801838;
LABEL_37:
        uint64_t v58 = v64 | 0x68636100000000;
        break;
      case 5:
        unint64_t v57 = 0xEF79627261654E64;
        uint64_t v58 = 0x657463657465642ELL;
        break;
      case 6:
        unint64_t v57 = 0xEC00000064657261;
        uint64_t v58 = 0x657070617369642ELL;
        break;
      case 7:
        unint64_t v57 = 0xE500000000000000;
        uint64_t v58 = 0x726961702ELL;
        break;
      default:
        break;
    }
    uint64_t v65 = *(void *)(v0 + 624);
    uint64_t v66 = *(void *)(v0 + 616);
    uint64_t v67 = *(void *)(v0 + 608);
    uint64_t v68 = *(void *)(v0 + 584);
    uint64_t v69 = *(void *)(v0 + 464);
    *(void *)(v0 + 328) = sub_1008FA0F0(v58, v57, v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10080F01C(v65, type metadata accessor for DeviceEvent);
    *(_WORD *)(v52 + 32) = 2082;
    sub_10080F07C((unint64_t *)&qword_101638DA0, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 360) = sub_1008FA0F0(v70, v71, v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10080F01C(v66, type metadata accessor for DeviceEvent);
    *(_WORD *)(v52 + 42) = 2160;
    *(void *)(v0 + 368) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v52 + 52) = 2081;
    sub_10001D074(v67 + *(int *)(v68 + 32), v69, &qword_10163CF20);
    uint64_t v72 = type metadata accessor for DeviceEvent.AttachmentInfo(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 48))(v69, 1, v72) == 1)
    {
      sub_10001DAB4(*(void *)(v0 + 464), &qword_10163CF20);
      unint64_t v73 = 0xE400000000000000;
      uint64_t v74 = 1701736302;
    }
    else
    {
      uint64_t v75 = *(void *)(v0 + 528);
      uint64_t v76 = *(void *)(v0 + 512);
      uint64_t v77 = *(void *)(v0 + 464);
      v113(v75, (void *)v77, v76);
      sub_10080F01C(v77, type metadata accessor for DeviceEvent.AttachmentInfo);
      uint64_t v74 = UUID.uuidString.getter();
      unint64_t v73 = v78;
      v112(v75, v76);
    }
    uint64_t v61 = v0 + 16;
    uint64_t v16 = v123;
    uint64_t v79 = *(void *)(v0 + 608);
    *(void *)(v0 + 376) = sub_1008FA0F0(v74, v73, v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10080F01C(v79, type metadata accessor for DeviceEvent);
    _os_log_impl((void *)&_mh_execute_header, v121, v117, "Update device event; beacon: %{private,mask.hash}s source: %{public}s, timestamp: %{public}s, attached to: %{private,mask.hash}s.",
      (uint8_t *)v52,
      0x3Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v59 = *(void *)(v0 + 616);
    uint64_t v60 = *(void *)(v0 + 608);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v15);
    sub_10080F01C(v48, type metadata accessor for DeviceEvent);
    sub_10080F01C(v59, type metadata accessor for DeviceEvent);
    sub_10080F01C(v60, type metadata accessor for DeviceEvent);

    uint64_t v61 = v0 + 16;
  }
  uint64_t v80 = *(void *)(v0 + 448);
  sub_10001D010(v61, v0 + 96);
  sub_10000588C((uint64_t *)&unk_10164DBF0);
  int v81 = swift_dynamicCast();
  uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56);
  if (v81)
  {
    uint64_t v83 = *(void *)(v0 + 456);
    uint64_t v85 = *(void *)(v0 + 432);
    uint64_t v84 = *(void *)(v0 + 440);
    v82(v85, 0, 1, v84);
    sub_10080ECB8(v85, v83, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
    uint64_t v86 = (uint64_t *)(v83 + *(int *)(v84 + 28));
    uint64_t v87 = *v86;
    unint64_t v88 = v86[1];
    sub_1000361E0(*v86, v88);
    static String.Encoding.utf8.getter();
    uint64_t v89 = String.init(data:encoding:)();
    if (!v90) {
      uint64_t v89 = Data.hexString.getter();
    }
    uint64_t v91 = v89;
    uint64_t v92 = v90;
    sub_10001CFB8(v87, v88);
    sub_10080F01C(*(void *)(v0 + 456), (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  }
  else
  {
    uint64_t v93 = *(void *)(v0 + 432);
    v82(v93, 1, 1, *(void *)(v0 + 440));
    sub_10001DAB4(v93, (uint64_t *)&unk_10163B1D0);
    uint64_t v91 = 0;
    uint64_t v92 = 0;
  }
  uint64_t v94 = *(void *)(v0 + 648);
  uint64_t v95 = *(void *)(v0 + 600);
  uint64_t v96 = *(void *)(*(void *)(v0 + 416) + 160);
  sub_10001D4B0(0, (unint64_t *)&qword_10164E908);
  sub_10080E7F4(v94, v95, type metadata accessor for DeviceEvent);
  id v97 = sub_1007F6F9C(v95, v91, v92);
  *(void *)(v0 + 696) = v97;
  unint64_t v98 = 0x10F0F0F0F040200uLL >> (8 * *(unsigned char *)(v16 + 9));
  unint64_t v127 = (uint64_t (*)(id, uint64_t, unint64_t, uint64_t))((char *)&dword_10164E910 + dword_10164E910);
  uint64_t v99 = (void *)swift_task_alloc();
  *(void *)(v0 + 704) = v99;
  void *v99 = v0;
  v99[1] = sub_100805CE4;
  uint64_t v100 = *(void *)(v0 + 656);
  return v127(v97, v100, v98, v96);
}

uint64_t sub_100805CE4()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 696);
  uint64_t v2 = *(void *)(*(void *)v0 + 416);
  swift_task_dealloc();

  return _swift_task_switch(sub_100805E0C, v2, 0);
}

uint64_t sub_100805E0C()
{
  sub_10080F01C(*(void *)(v0 + 648), type metadata accessor for DeviceEvent);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100805F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[53] = a4;
  v5[54] = a5;
  v5[51] = a1;
  v5[52] = a3;
  type metadata accessor for String.Encoding();
  v5[55] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10163B1D0);
  v5[56] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for LocalFindableAccessoryRecord();
  v5[57] = v9;
  v5[58] = *(void *)(v9 - 8);
  v5[59] = swift_task_alloc();
  sub_10000588C(&qword_10163CF20);
  v5[60] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for BeaconIdentifier();
  v5[61] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v5[62] = v11;
  v5[63] = *(void *)(v11 + 64);
  v5[64] = swift_task_alloc();
  sub_10000588C(&qword_10164DBB0);
  v5[65] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for UUID();
  v5[66] = v12;
  v5[67] = *(void *)(v12 - 8);
  v5[68] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for Date();
  v5[69] = v13;
  v5[70] = *(void *)(v13 - 8);
  v5[71] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10163AC90);
  v5[72] = swift_task_alloc();
  sub_10000588C(&qword_10163D030);
  v5[73] = swift_task_alloc();
  uint64_t v14 = swift_task_alloc();
  v5[74] = v14;
  uint64_t v15 = type metadata accessor for DeviceEvent(0);
  v5[75] = v15;
  v5[76] = *(void *)(v15 - 8);
  v5[77] = swift_task_alloc();
  v5[78] = swift_task_alloc();
  v5[79] = swift_task_alloc();
  v5[80] = swift_task_alloc();
  v5[81] = swift_task_alloc();
  v5[82] = swift_task_alloc();
  v5[83] = swift_task_alloc();
  v5[5] = a4;
  v5[6] = a5;
  v5[84] = (uint64_t)sub_10001D958(v5 + 2);
  (*(void (**)(void))(*(void *)(a4 - 8) + 16))();
  uint64_t v16 = (void *)swift_task_alloc();
  v5[85] = (uint64_t)v16;
  *uint64_t v16 = v5;
  v16[1] = sub_1008063F8;
  return sub_1007F85BC(v14, a1);
}

uint64_t sub_1008063F8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 416);
  swift_task_dealloc();
  return _swift_task_switch(sub_100806508, v1, 0);
}

uint64_t sub_100806508()
{
  uint64_t v109 = v0;
  uint64_t v1 = v0[76];
  uint64_t v2 = v0[75];
  uint64_t v3 = v0[74];
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  v0[86] = (uint64_t)v4;
  v0[87] = (v1 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v3, 1, v2) == 1)
  {
    sub_10001DAB4(v3, &qword_10163D030);
    char v5 = (void *)swift_task_alloc();
    v0[88] = (uint64_t)v5;
    void *v5 = v0;
    v5[1] = sub_100807364;
    uint64_t v6 = v0[73];
    uint64_t v7 = v0[51];
    return sub_1007F7218(v6, v7);
  }
  uint64_t v9 = (uint64_t)(v0 + 2);
  uint64_t v10 = v0 + 22;
  sub_10080ECB8(v3, v0[82], type metadata accessor for DeviceEvent);
  uint64_t v11 = v0[83];
  sub_10080ECB8(v0[82], v11, type metadata accessor for DeviceEvent);
  if (*(unsigned char *)(v11 + 9) == 5)
  {
    if (qword_101636CD8 != -1) {
      swift_once();
    }
    uint64_t v12 = v0[72];
    uint64_t v13 = v0[70];
    uint64_t v14 = v0[69];
    OS_dispatch_queue.sync<A>(execute:)();
    sub_1010AB6E4(v0[48]);
    swift_bridgeObjectRelease();
    Date.addingTimeInterval(_:)();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v12, 0, 1, v14);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v12, 1, v14) != 1)
    {
      uint64_t v15 = v0[72];
      uint64_t v16 = v0[71];
      uint64_t v17 = v0[70];
      uint64_t v18 = v0[69];
      static Date.trustedNow.getter(v16);
      Date.timeIntervalSince(_:)();
      double v20 = v19;
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v21(v16, v18);
      v21(v15, v18);
      if (v20 > 0.0)
      {
        os_log_t log = (long long *)(v0 + 7);
        uint64_t v105 = v11;
        uint64_t v22 = v0[51] + *(int *)(v0[61] + 20);
        uint64_t v23 = v0[52] + 152;
        swift_beginAccess();
        if (*(void *)(*(void *)v23 + 16))
        {
          swift_bridgeObjectRetain();
          sub_1007240CC(v22);
          if (v24)
          {
            swift_retain();
            swift_bridgeObjectRelease();
            sub_10000588C(&qword_101638D40);
            Task.cancel()();
            swift_release();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v86 = v0[67];
        uint64_t v99 = v0[68];
        uint64_t v101 = v0[66];
        uint64_t v87 = v0[65];
        uint64_t v88 = v0[64];
        uint64_t v98 = v0[63];
        uint64_t v89 = v0[62];
        uint64_t v90 = v0[51];
        (*(void (**)(void))(v86 + 16))();
        uint64_t v91 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v87, 1, 1, v91);
        uint64_t v92 = swift_allocObject();
        swift_weakInit();
        sub_10080E7F4(v90, v88, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
        sub_10001D010((uint64_t)(v0 + 2), (uint64_t)log);
        unint64_t v93 = (*(unsigned __int8 *)(v89 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
        uint64_t v94 = swift_allocObject();
        *(void *)(v94 + 16) = 0;
        *(void *)(v94 + 24) = 0;
        *(double *)(v94 + 32) = v20;
        *(void *)(v94 + 40) = v92;
        sub_10080ECB8(v88, v94 + v93, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
        uint64_t v9 = (uint64_t)(v0 + 2);
        sub_10001CEB0(log, v94 + ((v98 + v93 + 7) & 0xFFFFFFFFFFFFFFF8));
        uint64_t v95 = sub_100885EBC(v87, (uint64_t)&unk_10164E938, v94);
        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v108[0] = *(void *)v23;
        *(void *)uint64_t v23 = 0x8000000000000000;
        sub_1001706FC(v95, v99, isUniquelyReferenced_nonNull_native);
        *(void *)uint64_t v23 = v108[0];
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v99, v101);
        swift_endAccess();
        uint64_t v11 = v105;
        uint64_t v10 = v0 + 22;
      }
      goto LABEL_15;
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[70] + 56))(v0[72], 1, 1, v0[69]);
  }
  sub_10001DAB4(v0[72], (uint64_t *)&unk_10163AC90);
LABEL_15:
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v25 = v0[83];
  uint64_t v26 = v0[80];
  uint64_t v27 = v0[79];
  uint64_t v28 = v0[78];
  uint64_t v29 = type metadata accessor for Logger();
  sub_100010324(v29, (uint64_t)qword_10170E3B0);
  sub_10001D010(v9, (uint64_t)v10);
  sub_10080E7F4(v25, v26, type metadata accessor for DeviceEvent);
  sub_10080E7F4(v25, v27, type metadata accessor for DeviceEvent);
  sub_10080E7F4(v25, v28, type metadata accessor for DeviceEvent);
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  BOOL v32 = os_log_type_enabled(v30, v31);
  uint64_t v33 = v0[80];
  if (v32)
  {
    os_log_type_t v100 = v31;
    os_log_t loga = v30;
    uint64_t v104 = v9;
    uint64_t v106 = v11;
    uint64_t v34 = v0[68];
    uint64_t v35 = v0[67];
    uint64_t v36 = v0[66];
    uint64_t v38 = v0[53];
    uint64_t v37 = v0[54];
    uint64_t v39 = swift_slowAlloc();
    v108[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 141559299;
    v0[42] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v39 + 12) = 2081;
    sub_10001CD44(v10, v0[25]);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v37 + 8) + 8) + 32))(v38);
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v42 = v41;
    id v97 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v97(v34, v36);
    v0[43] = sub_1008FA0F0(v40, v42, v108);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v10);
    *(_WORD *)(v39 + 22) = 2082;
    unint64_t v43 = 0xE800000000000000;
    uint64_t v44 = 0x6E776F6E6B6E752ELL;
    switch(*(unsigned char *)(v33 + 9))
    {
      case 1:
        uint64_t v44 = 0x7463656E6E6F632ELL;
        break;
      case 2:
        unint64_t v43 = 0xEB00000000746365;
        uint64_t v44 = 0x6E6E6F637369642ELL;
        break;
      case 3:
        unint64_t v43 = 0xE700000000000000;
        unsigned int v47 = 1953784110;
        goto LABEL_24;
      case 4:
        unint64_t v43 = 0xE700000000000000;
        unsigned int v47 = 1952801838;
LABEL_24:
        uint64_t v44 = v47 | 0x68636100000000;
        break;
      case 5:
        unint64_t v43 = 0xEF79627261654E64;
        uint64_t v44 = 0x657463657465642ELL;
        break;
      case 6:
        unint64_t v43 = 0xEC00000064657261;
        uint64_t v44 = 0x657070617369642ELL;
        break;
      case 7:
        unint64_t v43 = 0xE500000000000000;
        uint64_t v44 = 0x726961702ELL;
        break;
      default:
        break;
    }
    uint64_t v48 = v0[80];
    uint64_t v49 = v0[79];
    uint64_t v50 = v0[78];
    uint64_t v51 = v0[75];
    uint64_t v52 = v0[60];
    v0[41] = sub_1008FA0F0(v44, v43, v108);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10080F01C(v48, type metadata accessor for DeviceEvent);
    *(_WORD *)(v39 + 32) = 2082;
    sub_10080F07C((unint64_t *)&qword_101638DA0, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[45] = sub_1008FA0F0(v53, v54, v108);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10080F01C(v49, type metadata accessor for DeviceEvent);
    *(_WORD *)(v39 + 42) = 2160;
    v0[46] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v39 + 52) = 2081;
    sub_10001D074(v50 + *(int *)(v51 + 32), v52, &qword_10163CF20);
    uint64_t v55 = type metadata accessor for DeviceEvent.AttachmentInfo(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 48))(v52, 1, v55) == 1)
    {
      sub_10001DAB4(v0[60], &qword_10163CF20);
      unint64_t v56 = 0xE400000000000000;
      uint64_t v57 = 1701736302;
    }
    else
    {
      uint64_t v58 = v0[68];
      uint64_t v59 = v0[66];
      uint64_t v60 = v0[60];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[67] + 16))(v58, v60, v59);
      sub_10080F01C(v60, type metadata accessor for DeviceEvent.AttachmentInfo);
      uint64_t v57 = UUID.uuidString.getter();
      unint64_t v56 = v61;
      v97(v58, v59);
    }
    uint64_t v11 = v106;
    uint64_t v62 = v0[78];
    v0[47] = sub_1008FA0F0(v57, v56, v108);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10080F01C(v62, type metadata accessor for DeviceEvent);
    _os_log_impl((void *)&_mh_execute_header, loga, v100, "Update device event; beacon: %{private,mask.hash}s source: %{public}s, timestamp: %{public}s, attached to: %{private,mask.hash}s.",
      (uint8_t *)v39,
      0x3Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v9 = v104;
  }
  else
  {
    uint64_t v45 = v0[79];
    uint64_t v46 = v0[78];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v10);
    sub_10080F01C(v33, type metadata accessor for DeviceEvent);
    sub_10080F01C(v45, type metadata accessor for DeviceEvent);
    sub_10080F01C(v46, type metadata accessor for DeviceEvent);
  }
  uint64_t v63 = v0[58];
  sub_10001D010(v9, (uint64_t)(v0 + 12));
  sub_10000588C((uint64_t *)&unk_10164DBF0);
  int v64 = swift_dynamicCast();
  uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56);
  if (v64)
  {
    uint64_t v66 = v0[59];
    uint64_t v68 = v0[56];
    uint64_t v67 = v0[57];
    v65(v68, 0, 1, v67);
    sub_10080ECB8(v68, v66, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
    uint64_t v69 = (uint64_t *)(v66 + *(int *)(v67 + 28));
    uint64_t v70 = *v69;
    unint64_t v71 = v69[1];
    sub_1000361E0(*v69, v71);
    static String.Encoding.utf8.getter();
    uint64_t v72 = String.init(data:encoding:)();
    if (!v73) {
      uint64_t v72 = Data.hexString.getter();
    }
    uint64_t v74 = v72;
    uint64_t v75 = v73;
    sub_10001CFB8(v70, v71);
    sub_10080F01C(v0[59], (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  }
  else
  {
    uint64_t v76 = v0[56];
    v65(v76, 1, 1, v0[57]);
    sub_10001DAB4(v76, (uint64_t *)&unk_10163B1D0);
    uint64_t v74 = 0;
    uint64_t v75 = 0;
  }
  uint64_t v77 = v0[83];
  uint64_t v78 = v0[77];
  uint64_t v79 = *(void *)(v0[52] + 160);
  sub_10001D4B0(0, (unint64_t *)&qword_10164E908);
  sub_10080E7F4(v77, v78, type metadata accessor for DeviceEvent);
  id v80 = sub_1007F6F9C(v78, v74, v75);
  v0[89] = (uint64_t)v80;
  unint64_t v81 = 0x10F0F0F0F040200uLL >> (8 * *(unsigned char *)(v11 + 9));
  uint64_t v107 = (uint64_t (*)(id, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10165B1B0
                                                                                          + dword_10165B1B0);
  uint64_t v82 = (void *)swift_task_alloc();
  v0[90] = (uint64_t)v82;
  *uint64_t v82 = v0;
  v82[1] = sub_100808970;
  uint64_t v83 = v0[84];
  uint64_t v84 = v0[53];
  uint64_t v85 = v0[54];
  return v107(v80, v83, v81, v79, v84, v85);
}

uint64_t sub_100807364()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 416);
  swift_task_dealloc();
  return _swift_task_switch(sub_100807474, v1, 0);
}

uint64_t sub_100807474()
{
  uint64_t v134 = v0;
  uint64_t v1 = *(void *)(v0 + 584);
  uint64_t v131 = v0 + 16;
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0 + 688))(v1, 1, *(void *)(v0 + 600)) == 1)
  {
    sub_10001DAB4(v1, &qword_10163D030);
    sub_100802B3C();
    uint64_t v2 = swift_allocError();
    *uint64_t v3 = 3;
    swift_willThrow();
    *(void *)(v0 + 400) = v2;
    swift_errorRetain();
    swift_errorRetain();
    sub_10000588C(&qword_101638D40);
    if (swift_dynamicCast() && *(unsigned char *)(v0 + 728) == 3)
    {
      if (qword_101636CF0 != -1) {
        swift_once();
      }
      uint64_t v4 = type metadata accessor for Logger();
      sub_100010324(v4, (uint64_t)qword_10170E3B0);
      sub_10001D010(v0 + 16, v0 + 216);
      char v5 = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.info.getter();
      if (!os_log_type_enabled(v5, v6))
      {
        swift_errorRelease();
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 216);

        goto LABEL_31;
      }
      os_log_type_t type = v6;
      uint64_t v7 = *(void *)(v0 + 544);
      uint64_t v8 = *(void *)(v0 + 536);
      uint64_t v9 = *(void *)(v0 + 528);
      uint64_t v124 = *(void *)(v0 + 432);
      os_log_t log = *(os_log_t *)(v0 + 424);
      uint64_t v10 = swift_slowAlloc();
      v133[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 141558275;
      *(void *)(v0 + 304) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v10 + 12) = 2081;
      sub_10001CD44((void *)(v0 + 216), *(void *)(v0 + 240));
      (*(void (**)(os_log_t))(*(void *)(*(void *)(v124 + 8) + 8) + 32))(log);
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v13 = v12;
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
      *(void *)(v0 + 312) = sub_1008FA0F0(v11, v13, v133);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 216);
      _os_log_impl((void *)&_mh_execute_header, v5, type, "No device events for beacon: %{private,mask.hash}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      if (qword_101636CF0 != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for Logger();
      sub_100010324(v29, (uint64_t)qword_10170E3B0);
      sub_10001D010(v0 + 16, v0 + 136);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v30, v31))
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 136);

        goto LABEL_31;
      }
      os_log_type_t v129 = v31;
      uint64_t v32 = *(void *)(v0 + 544);
      os_log_t v122 = *(os_log_t *)(v0 + 528);
      uint64_t v125 = *(void *)(v0 + 536);
      uint64_t v116 = *(void *)(v0 + 432);
      uint64_t v118 = *(void *)(v0 + 424);
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      v133[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 138543875;
      os_log_t loga = v30;
      swift_errorRetain();
      uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 320) = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v34 = v35;
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v33 + 12) = 2160;
      *(void *)(v0 + 392) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v33 + 22) = 2081;
      sub_10001CD44((void *)(v0 + 136), *(void *)(v0 + 160));
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v116 + 8) + 8) + 32))(v118);
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v38 = v37;
      (*(void (**)(uint64_t, os_log_t))(v125 + 8))(v32, v122);
      *(void *)(v0 + 352) = sub_1008FA0F0(v36, v38, v133);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 136);
      _os_log_impl((void *)&_mh_execute_header, loga, v129, "Failed to send the attach event: %{public}@ for beacon: %{private,mask.hash}s", (uint8_t *)v33, 0x20u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    swift_errorRelease();
LABEL_31:
    swift_errorRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v131);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v62 = *(uint64_t (**)(void))(v0 + 8);
    return v62();
  }
  uint64_t v14 = (void *)(v0 + 176);
  sub_10080ECB8(v1, *(void *)(v0 + 648), type metadata accessor for DeviceEvent);
  uint64_t v15 = *(void *)(v0 + 664);
  sub_10080ECB8(*(void *)(v0 + 648), v15, type metadata accessor for DeviceEvent);
  if (*(unsigned char *)(v15 + 9) == 5)
  {
    if (qword_101636CD8 != -1) {
      swift_once();
    }
    uint64_t v16 = *(void *)(v0 + 576);
    uint64_t v17 = *(void *)(v0 + 560);
    uint64_t v18 = *(void *)(v0 + 552);
    OS_dispatch_queue.sync<A>(execute:)();
    sub_1010AB6E4(*(void *)(v0 + 384));
    swift_bridgeObjectRelease();
    Date.addingTimeInterval(_:)();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v16, 0, 1, v18);
    uint64_t v14 = (void *)(v0 + 176);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v16, 1, v18) != 1)
    {
      uint64_t v19 = *(void *)(v0 + 576);
      uint64_t v20 = *(void *)(v0 + 568);
      uint64_t v21 = *(void *)(v0 + 560);
      uint64_t v22 = *(void *)(v0 + 552);
      static Date.trustedNow.getter(v20);
      Date.timeIntervalSince(_:)();
      double v24 = v23;
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v25(v20, v22);
      v25(v19, v22);
      if (v24 > 0.0)
      {
        uint64_t v121 = (long long *)(v0 + 56);
        uint64_t v26 = *(void *)(v0 + 408) + *(int *)(*(void *)(v0 + 488) + 20);
        uint64_t v27 = *(void *)(v0 + 416) + 152;
        swift_beginAccess();
        if (*(void *)(*(void *)v27 + 16))
        {
          swift_bridgeObjectRetain();
          sub_1007240CC(v26);
          if (v28)
          {
            swift_retain();
            swift_bridgeObjectRelease();
            sub_10000588C(&qword_101638D40);
            Task.cancel()();
            swift_release();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v103 = *(void *)(v0 + 536);
        uint64_t v117 = *(void *)(v0 + 544);
        uint64_t v120 = *(void *)(v0 + 528);
        uint64_t v104 = *(void *)(v0 + 520);
        uint64_t v105 = *(void *)(v0 + 512);
        uint64_t v115 = *(void *)(v0 + 504);
        uint64_t v106 = *(void *)(v0 + 496);
        uint64_t v107 = *(void *)(v0 + 408);
        (*(void (**)(void))(v103 + 16))();
        uint64_t v108 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v104, 1, 1, v108);
        uint64_t v109 = swift_allocObject();
        swift_weakInit();
        sub_10080E7F4(v107, v105, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
        sub_10001D010(v131, (uint64_t)v121);
        unint64_t v110 = (*(unsigned __int8 *)(v106 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
        uint64_t v111 = swift_allocObject();
        *(void *)(v111 + 16) = 0;
        *(void *)(v111 + 24) = 0;
        *(double *)(v111 + 32) = v24;
        *(void *)(v111 + 40) = v109;
        sub_10080ECB8(v105, v111 + v110, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
        sub_10001CEB0(v121, v111 + ((v115 + v110 + 7) & 0xFFFFFFFFFFFFFFF8));
        uint64_t v112 = sub_100885EBC(v104, (uint64_t)&unk_10164E938, v111);
        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v133[0] = *(void *)v27;
        *(void *)uint64_t v27 = 0x8000000000000000;
        sub_1001706FC(v112, v117, isUniquelyReferenced_nonNull_native);
        *(void *)uint64_t v27 = v133[0];
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v117, v120);
        swift_endAccess();
        uint64_t v14 = (void *)(v0 + 176);
      }
      goto LABEL_23;
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 560) + 56))(*(void *)(v0 + 576), 1, 1, *(void *)(v0 + 552));
  }
  sub_10001DAB4(*(void *)(v0 + 576), (uint64_t *)&unk_10163AC90);
LABEL_23:
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v39 = *(void *)(v0 + 664);
  uint64_t v40 = *(void *)(v0 + 640);
  uint64_t v41 = *(void *)(v0 + 632);
  uint64_t v42 = *(void *)(v0 + 624);
  uint64_t v43 = type metadata accessor for Logger();
  sub_100010324(v43, (uint64_t)qword_10170E3B0);
  sub_10001D010(v131, (uint64_t)v14);
  sub_10080E7F4(v39, v40, type metadata accessor for DeviceEvent);
  sub_10080E7F4(v39, v41, type metadata accessor for DeviceEvent);
  sub_10080E7F4(v39, v42, type metadata accessor for DeviceEvent);
  uint64_t v44 = Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.default.getter();
  BOOL v46 = os_log_type_enabled(v44, v45);
  uint64_t v47 = *(void *)(v0 + 640);
  if (v46)
  {
    os_log_type_t v119 = v45;
    uint64_t v123 = v44;
    uint64_t v126 = v15;
    uint64_t v48 = *(void *)(v0 + 544);
    uint64_t v49 = *(void *)(v0 + 536);
    uint64_t v50 = *(void *)(v0 + 528);
    uint64_t v51 = *(void *)(v0 + 424);
    uint64_t v52 = *(void *)(v0 + 432);
    uint64_t v53 = swift_slowAlloc();
    v133[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v53 = 141559299;
    *(void *)(v0 + 336) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v53 + 12) = 2081;
    sub_10001CD44(v14, *(void *)(v0 + 200));
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v52 + 8) + 8) + 32))(v51);
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v54 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v56 = v55;
    uint64_t v114 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
    v114(v48, v50);
    *(void *)(v0 + 344) = sub_1008FA0F0(v54, v56, v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v14);
    *(_WORD *)(v53 + 22) = 2082;
    unint64_t v57 = 0xE800000000000000;
    uint64_t v58 = 0x6E776F6E6B6E752ELL;
    switch(*(unsigned char *)(v47 + 9))
    {
      case 1:
        uint64_t v58 = 0x7463656E6E6F632ELL;
        break;
      case 2:
        unint64_t v57 = 0xEB00000000746365;
        uint64_t v58 = 0x6E6E6F637369642ELL;
        break;
      case 3:
        unint64_t v57 = 0xE700000000000000;
        unsigned int v64 = 1953784110;
        goto LABEL_37;
      case 4:
        unint64_t v57 = 0xE700000000000000;
        unsigned int v64 = 1952801838;
LABEL_37:
        uint64_t v58 = v64 | 0x68636100000000;
        break;
      case 5:
        unint64_t v57 = 0xEF79627261654E64;
        uint64_t v58 = 0x657463657465642ELL;
        break;
      case 6:
        unint64_t v57 = 0xEC00000064657261;
        uint64_t v58 = 0x657070617369642ELL;
        break;
      case 7:
        unint64_t v57 = 0xE500000000000000;
        uint64_t v58 = 0x726961702ELL;
        break;
      default:
        break;
    }
    uint64_t v65 = *(void *)(v0 + 640);
    uint64_t v66 = *(void *)(v0 + 632);
    uint64_t v67 = *(void *)(v0 + 624);
    uint64_t v68 = *(void *)(v0 + 600);
    uint64_t v69 = *(void *)(v0 + 480);
    *(void *)(v0 + 328) = sub_1008FA0F0(v58, v57, v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10080F01C(v65, type metadata accessor for DeviceEvent);
    *(_WORD *)(v53 + 32) = 2082;
    sub_10080F07C((unint64_t *)&qword_101638DA0, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 360) = sub_1008FA0F0(v70, v71, v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10080F01C(v66, type metadata accessor for DeviceEvent);
    *(_WORD *)(v53 + 42) = 2160;
    *(void *)(v0 + 368) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v53 + 52) = 2081;
    sub_10001D074(v67 + *(int *)(v68 + 32), v69, &qword_10163CF20);
    uint64_t v72 = type metadata accessor for DeviceEvent.AttachmentInfo(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 48))(v69, 1, v72) == 1)
    {
      sub_10001DAB4(*(void *)(v0 + 480), &qword_10163CF20);
      unint64_t v73 = 0xE400000000000000;
      uint64_t v74 = 1701736302;
    }
    else
    {
      uint64_t v75 = *(void *)(v0 + 544);
      uint64_t v76 = *(void *)(v0 + 528);
      uint64_t v77 = *(void *)(v0 + 480);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 536) + 16))(v75, v77, v76);
      sub_10080F01C(v77, type metadata accessor for DeviceEvent.AttachmentInfo);
      uint64_t v74 = UUID.uuidString.getter();
      unint64_t v73 = v78;
      v114(v75, v76);
    }
    uint64_t v61 = v0 + 16;
    uint64_t v15 = v126;
    uint64_t v79 = *(void *)(v0 + 624);
    *(void *)(v0 + 376) = sub_1008FA0F0(v74, v73, v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10080F01C(v79, type metadata accessor for DeviceEvent);
    _os_log_impl((void *)&_mh_execute_header, v123, v119, "Update device event; beacon: %{private,mask.hash}s source: %{public}s, timestamp: %{public}s, attached to: %{private,mask.hash}s.",
      (uint8_t *)v53,
      0x3Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v59 = *(void *)(v0 + 632);
    uint64_t v60 = *(void *)(v0 + 624);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v14);
    sub_10080F01C(v47, type metadata accessor for DeviceEvent);
    sub_10080F01C(v59, type metadata accessor for DeviceEvent);
    sub_10080F01C(v60, type metadata accessor for DeviceEvent);

    uint64_t v61 = v0 + 16;
  }
  uint64_t v80 = *(void *)(v0 + 464);
  sub_10001D010(v61, v0 + 96);
  sub_10000588C((uint64_t *)&unk_10164DBF0);
  int v81 = swift_dynamicCast();
  uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56);
  if (v81)
  {
    uint64_t v83 = *(void *)(v0 + 472);
    uint64_t v85 = *(void *)(v0 + 448);
    uint64_t v84 = *(void *)(v0 + 456);
    v82(v85, 0, 1, v84);
    sub_10080ECB8(v85, v83, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
    uint64_t v86 = (uint64_t *)(v83 + *(int *)(v84 + 28));
    uint64_t v87 = *v86;
    unint64_t v88 = v86[1];
    sub_1000361E0(*v86, v88);
    static String.Encoding.utf8.getter();
    uint64_t v89 = String.init(data:encoding:)();
    if (!v90) {
      uint64_t v89 = Data.hexString.getter();
    }
    uint64_t v91 = v89;
    uint64_t v92 = v90;
    sub_10001CFB8(v87, v88);
    sub_10080F01C(*(void *)(v0 + 472), (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  }
  else
  {
    uint64_t v93 = *(void *)(v0 + 448);
    v82(v93, 1, 1, *(void *)(v0 + 456));
    sub_10001DAB4(v93, (uint64_t *)&unk_10163B1D0);
    uint64_t v91 = 0;
    uint64_t v92 = 0;
  }
  uint64_t v94 = *(void *)(v0 + 664);
  uint64_t v95 = *(void *)(v0 + 616);
  uint64_t v96 = *(void *)(*(void *)(v0 + 416) + 160);
  sub_10001D4B0(0, (unint64_t *)&qword_10164E908);
  sub_10080E7F4(v94, v95, type metadata accessor for DeviceEvent);
  id v97 = sub_1007F6F9C(v95, v91, v92);
  *(void *)(v0 + 712) = v97;
  unint64_t v98 = 0x10F0F0F0F040200uLL >> (8 * *(unsigned char *)(v15 + 9));
  unint64_t v132 = (uint64_t (*)(id, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10165B1B0
                                                                                          + dword_10165B1B0);
  uint64_t v99 = (void *)swift_task_alloc();
  *(void *)(v0 + 720) = v99;
  void *v99 = v0;
  v99[1] = sub_100808970;
  uint64_t v100 = *(void *)(v0 + 672);
  uint64_t v101 = *(void *)(v0 + 424);
  uint64_t v102 = *(void *)(v0 + 432);
  return v132(v97, v100, v98, v96, v101, v102);
}

uint64_t sub_100808970()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 712);
  uint64_t v2 = *(void *)(*(void *)v0 + 416);
  swift_task_dealloc();

  return _swift_task_switch(sub_100808A98, v2, 0);
}

uint64_t sub_100808A98()
{
  sub_10080F01C(*(void *)(v0 + 664), type metadata accessor for DeviceEvent);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100808C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[43] = a1;
  v3[44] = a3;
  v3[45] = type metadata accessor for BeaconIdentifier();
  v3[46] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_101638D50);
  v3[47] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for BeaconEstimatedLocation();
  v3[48] = v6;
  v3[49] = *(void *)(v6 - 8);
  v3[50] = swift_task_alloc();
  sub_10000588C(&qword_10164E880);
  v3[51] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DeviceEvent.Location(0);
  v3[52] = v7;
  v3[53] = *(void *)(v7 - 8);
  v3[54] = swift_task_alloc();
  sub_10000588C(&qword_101638CF0);
  v3[55] = swift_task_alloc();
  sub_10000588C(&qword_10163D030);
  v3[56] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for DeviceEvent(0);
  v3[57] = v8;
  v3[58] = *(void *)(v8 - 8);
  v3[59] = swift_task_alloc();
  v3[5] = type metadata accessor for LocalFindableAccessoryRecord();
  v3[6] = sub_10080F07C(&qword_101642930, (void (*)(uint64_t))type metadata accessor for LocalFindableAccessoryRecord);
  uint64_t v9 = sub_10001D958(v3 + 2);
  sub_10080E7F4(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  return _swift_task_switch(sub_100808F0C, a3, 0);
}

uint64_t sub_100808F0C()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 136, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 160))
  {
    sub_10001CEB0((long long *)(v0 + 136), v0 + 56);
    sub_10001CD44((void *)(v0 + 56), *(void *)(v0 + 80));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_101639138 + dword_101639138);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 480) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100809048;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100809048(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 352);
  *(void *)(*(void *)v1 + 488) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100809160, v2, 0);
}

uint64_t sub_100809160()
{
  double v24 = v0;
  uint64_t v1 = (uint64_t)(v0 + 7);
  if (v0[61])
  {
    uint64_t v2 = v0[55];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v3 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[62] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10080962C;
    uint64_t v6 = v0[55];
    uint64_t v5 = v0[56];
    uint64_t v7 = v0[43];
    return sub_1011054BC(v5, v7, 8, v6);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    sub_100802B3C();
    swift_allocError();
    unsigned char *v9 = 0;
    swift_willThrow();
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v10 = v0[46];
    uint64_t v11 = v0[43];
    uint64_t v12 = type metadata accessor for Logger();
    sub_100010324(v12, (uint64_t)qword_10170E3B0);
    sub_10080E7F4(v11, v10, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v16 = v0[46];
    if (v15)
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = (void *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 138543875;
      swift_errorRetain();
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      v0[41] = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v18 = v19;
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v17 + 12) = 2160;
      v0[42] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v17 + 22) = 2081;
      type metadata accessor for UUID();
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[40] = sub_1008FA0F0(v20, v21, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10080F01C(v16, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Failed to send the updated location from a device event: %{public}@for beacon: %{private,mask.hash}s", (uint8_t *)v17, 0x20u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      sub_10080F01C(v16, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    }
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
}

uint64_t sub_10080962C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 504) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 440);
  uint64_t v4 = *(void *)(v2 + 352);
  sub_10001DAB4(v3, &qword_101638CF0);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_100809AD0;
  }
  else {
    uint64_t v5 = sub_100809798;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_100809798()
{
  uint64_t v1 = *(void *)(v0 + 456);
  uint64_t v2 = *(void *)(v0 + 448);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 464) + 48))(v2, 1, v1) == 1)
  {
    uint64_t v3 = &qword_10163D030;
LABEL_5:
    sub_10001DAB4(v2, v3);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  uint64_t v4 = *(void *)(v0 + 472);
  uint64_t v5 = *(void *)(v0 + 416);
  uint64_t v6 = *(void *)(v0 + 424);
  uint64_t v7 = *(void *)(v0 + 408);
  sub_10080ECB8(v2, v4, type metadata accessor for DeviceEvent);
  sub_10001D074(v4 + *(int *)(v1 + 28), v7, &qword_10164E880);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  uint64_t v9 = *(void *)(v0 + 472);
  if (v8 == 1)
  {
    uint64_t v2 = *(void *)(v0 + 408);
    sub_10080F01C(*(void *)(v0 + 472), type metadata accessor for DeviceEvent);
    uint64_t v3 = &qword_10164E880;
    goto LABEL_5;
  }
  sub_10080ECB8(*(void *)(v0 + 408), *(void *)(v0 + 432), type metadata accessor for DeviceEvent.Location);
  unint64_t v12 = 0x10F0F0F0F040200uLL >> (8 * *(unsigned char *)(v9 + 9));
  *(unsigned char *)(v0 + 556) = v12;
  unint64_t v13 = *(double **)(v0 + 432);
  *(_DWORD *)(v0 + 552) = *(_DWORD *)(*(void *)(v0 + 416) + 28);
  double v14 = *v13;
  double v15 = v13[1];
  double v16 = v13[2];
  uint64_t v17 = (void *)sub_101103478(v12);
  id v18 = objc_allocWithZone((Class)SPBeaconLocation);
  id v19 = v17;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  *(void *)(v0 + 512) = [v18 initWithTimestamp:isa latitude:v19 longitude:v14 horizontalAccuracy:v15 source:v16];

  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 176, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 200))
  {
    sub_10001CEB0((long long *)(v0 + 176), v0 + 256);
    sub_10001CD44((void *)(v0 + 256), *(void *)(v0 + 280));
    uint64_t v22 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
    unint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 520) = v21;
    *unint64_t v21 = v0;
    v21[1] = sub_100809E98;
    return v22();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100809AD0()
{
  double v16 = v0;
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[46];
  uint64_t v2 = v0[43];
  uint64_t v3 = type metadata accessor for Logger();
  sub_100010324(v3, (uint64_t)qword_10170E3B0);
  sub_10080E7F4(v2, v1, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[46];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138543875;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[41] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v9 = v10;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v8 + 12) = 2160;
    v0[42] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 22) = 2081;
    type metadata accessor for UUID();
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[40] = sub_1008FA0F0(v11, v12, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10080F01C(v7, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to send the updated location from a device event: %{public}@for beacon: %{private,mask.hash}s", (uint8_t *)v8, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    sub_10080F01C(v7, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
  }
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_100809E98(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 352);
  *(void *)(*(void *)v1 + 528) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100809FB0, v2, 0);
}

uint64_t sub_100809FB0()
{
  uint64_t v25 = v0;
  uint64_t v1 = (uint64_t)(v0 + 32);
  if (v0[66])
  {
    uint64_t v2 = v0[45];
    uint64_t v3 = v0[43];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v4 = v3 + *(int *)(v2 + 20);
    os_log_type_t v5 = (void *)swift_task_alloc();
    v0[67] = v5;
    void *v5 = v0;
    v5[1] = sub_10080A488;
    return sub_100E62DA0(v4);
  }
  else
  {
    uint64_t v7 = (void *)v0[64];
    uint64_t v8 = v0[59];
    uint64_t v9 = v0[54];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    sub_100802B3C();
    swift_allocError();
    *uint64_t v10 = 1;
    swift_willThrow();

    sub_10080F01C(v9, type metadata accessor for DeviceEvent.Location);
    sub_10080F01C(v8, type metadata accessor for DeviceEvent);
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v11 = v0[46];
    uint64_t v12 = v0[43];
    uint64_t v13 = type metadata accessor for Logger();
    sub_100010324(v13, (uint64_t)qword_10170E3B0);
    sub_10080E7F4(v12, v11, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    swift_errorRetain();
    swift_errorRetain();
    double v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = v0[46];
    if (v16)
    {
      uint64_t v18 = swift_slowAlloc();
      id v19 = (void *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 138543875;
      swift_errorRetain();
      uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
      v0[41] = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v19 = v20;
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v18 + 12) = 2160;
      v0[42] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v18 + 22) = 2081;
      type metadata accessor for UUID();
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[40] = sub_1008FA0F0(v21, v22, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10080F01C(v17, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Failed to send the updated location from a device event: %{public}@for beacon: %{private,mask.hash}s", (uint8_t *)v18, 0x20u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      sub_10080F01C(v17, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    }
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
}

uint64_t sub_10080A488(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 352);
  *(void *)(*(void *)v1 + 544) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10080A5BC, v2, 0);
}

uint64_t sub_10080A5BC()
{
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v3 = *(void *)(v0 + 376);
  sub_100E4CD4C(*(void *)(v0 + 544), v3);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = *(void **)(v0 + 512);
    char v5 = *(unsigned char *)(v0 + 556);
    uint64_t v6 = *(void *)(v0 + 472);
    uint64_t v7 = *(void *)(v0 + 432);
    uint64_t v8 = *(void *)(v0 + 352);
    sub_10001DAB4(*(void *)(v0 + 376), (uint64_t *)&unk_101638D50);
    uint64_t v9 = *(void *)(v8 + 160);
    type metadata accessor for Transaction();
    sub_10001D010(v0 + 16, v0 + 96);
    uint64_t v10 = swift_allocObject();
    sub_10001CEB0((long long *)(v0 + 96), v10 + 16);
    *(void *)(v10 + 56) = v9;
    *(void *)(v10 + 64) = v4;
    *(unsigned char *)(v10 + 72) = v5;
    id v11 = v4;
    swift_retain();
    static Transaction.asyncTask(name:block:)();
    swift_release();
  }
  else
  {
    sub_10080ECB8(*(void *)(v0 + 376), *(void *)(v0 + 400), (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
    char v12 = static Date.> infix(_:_:)();
    uint64_t v13 = *(void **)(v0 + 512);
    if (v12)
    {
      char v14 = *(unsigned char *)(v0 + 556);
      uint64_t v6 = *(void *)(v0 + 472);
      uint64_t v7 = *(void *)(v0 + 432);
      uint64_t v22 = *(void *)(v0 + 400);
      uint64_t v15 = *(void *)(*(void *)(v0 + 352) + 160);
      type metadata accessor for Transaction();
      sub_10001D010(v0 + 16, v0 + 216);
      uint64_t v16 = swift_allocObject();
      sub_10001CEB0((long long *)(v0 + 216), v16 + 16);
      *(void *)(v16 + 56) = v15;
      *(void *)(v16 + 64) = v13;
      *(unsigned char *)(v16 + 72) = v14;
      id v17 = v13;
      swift_retain();
      static Transaction.asyncTask(name:block:)();
      swift_release();

      uint64_t v18 = v22;
    }
    else
    {
      uint64_t v6 = *(void *)(v0 + 472);
      uint64_t v7 = *(void *)(v0 + 432);
      uint64_t v19 = *(void *)(v0 + 400);

      uint64_t v18 = v19;
    }
    sub_10080F01C(v18, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
  }
  sub_10080F01C(v7, type metadata accessor for DeviceEvent.Location);
  sub_10080F01C(v6, type metadata accessor for DeviceEvent);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_10080A910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[43] = a1;
  v5[44] = a3;
  v5[45] = type metadata accessor for BeaconIdentifier();
  v5[46] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_101638D50);
  v5[47] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for BeaconEstimatedLocation();
  v5[48] = v10;
  v5[49] = *(void *)(v10 - 8);
  v5[50] = swift_task_alloc();
  sub_10000588C(&qword_10164E880);
  v5[51] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for DeviceEvent.Location(0);
  v5[52] = v11;
  v5[53] = *(void *)(v11 - 8);
  v5[54] = swift_task_alloc();
  sub_10000588C(&qword_101638CF0);
  v5[55] = swift_task_alloc();
  sub_10000588C(&qword_10163D030);
  v5[56] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for DeviceEvent(0);
  v5[57] = v12;
  v5[58] = *(void *)(v12 - 8);
  v5[59] = swift_task_alloc();
  v5[5] = a4;
  v5[6] = a5;
  uint64_t v13 = sub_10001D958(v5 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v13, a2, a4);
  return _swift_task_switch(sub_10080ABD8, a3, 0);
}

uint64_t sub_10080ABD8()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 136, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 160))
  {
    sub_10001CEB0((long long *)(v0 + 136), v0 + 56);
    sub_10001CD44((void *)(v0 + 56), *(void *)(v0 + 80));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_101639138 + dword_101639138);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 480) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10080AD14;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10080AD14(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 352);
  *(void *)(*(void *)v1 + 488) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10080AE2C, v2, 0);
}

uint64_t sub_10080AE2C()
{
  uint64_t v24 = v0;
  uint64_t v1 = (uint64_t)(v0 + 7);
  if (v0[61])
  {
    uint64_t v2 = v0[55];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v3 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[62] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10080B2F8;
    uint64_t v6 = v0[55];
    uint64_t v5 = v0[56];
    uint64_t v7 = v0[43];
    return sub_1011054BC(v5, v7, 8, v6);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    sub_100802B3C();
    swift_allocError();
    unsigned char *v9 = 0;
    swift_willThrow();
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v10 = v0[46];
    uint64_t v11 = v0[43];
    uint64_t v12 = type metadata accessor for Logger();
    sub_100010324(v12, (uint64_t)qword_10170E3B0);
    sub_10080E7F4(v11, v10, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v16 = v0[46];
    if (v15)
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = (void *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 138543875;
      swift_errorRetain();
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      v0[41] = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v18 = v19;
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v17 + 12) = 2160;
      v0[42] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v17 + 22) = 2081;
      type metadata accessor for UUID();
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[40] = sub_1008FA0F0(v20, v21, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10080F01C(v16, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Failed to send the updated location from a device event: %{public}@for beacon: %{private,mask.hash}s", (uint8_t *)v17, 0x20u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      sub_10080F01C(v16, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    }
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
}

uint64_t sub_10080B2F8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 504) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 440);
  uint64_t v4 = *(void *)(v2 + 352);
  sub_10001DAB4(v3, &qword_101638CF0);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_10080F370;
  }
  else {
    uint64_t v5 = sub_10080B464;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_10080B464()
{
  uint64_t v1 = *(void *)(v0 + 456);
  uint64_t v2 = *(void *)(v0 + 448);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 464) + 48))(v2, 1, v1) == 1)
  {
    uint64_t v3 = &qword_10163D030;
LABEL_5:
    sub_10001DAB4(v2, v3);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  uint64_t v4 = *(void *)(v0 + 472);
  uint64_t v5 = *(void *)(v0 + 416);
  uint64_t v6 = *(void *)(v0 + 424);
  uint64_t v7 = *(void *)(v0 + 408);
  sub_10080ECB8(v2, v4, type metadata accessor for DeviceEvent);
  sub_10001D074(v4 + *(int *)(v1 + 28), v7, &qword_10164E880);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  uint64_t v9 = *(void *)(v0 + 472);
  if (v8 == 1)
  {
    uint64_t v2 = *(void *)(v0 + 408);
    sub_10080F01C(*(void *)(v0 + 472), type metadata accessor for DeviceEvent);
    uint64_t v3 = &qword_10164E880;
    goto LABEL_5;
  }
  sub_10080ECB8(*(void *)(v0 + 408), *(void *)(v0 + 432), type metadata accessor for DeviceEvent.Location);
  unint64_t v12 = 0x10F0F0F0F040200uLL >> (8 * *(unsigned char *)(v9 + 9));
  *(unsigned char *)(v0 + 556) = v12;
  uint64_t v13 = *(double **)(v0 + 432);
  *(_DWORD *)(v0 + 552) = *(_DWORD *)(*(void *)(v0 + 416) + 28);
  double v14 = *v13;
  double v15 = v13[1];
  double v16 = v13[2];
  uint64_t v17 = (void *)sub_101103478(v12);
  id v18 = objc_allocWithZone((Class)SPBeaconLocation);
  id v19 = v17;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  *(void *)(v0 + 512) = [v18 initWithTimestamp:isa latitude:v19 longitude:v14 horizontalAccuracy:v15 source:v16];

  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 176, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 200))
  {
    sub_10001CEB0((long long *)(v0 + 176), v0 + 256);
    sub_10001CD44((void *)(v0 + 256), *(void *)(v0 + 280));
    uint64_t v22 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
    unint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 520) = v21;
    *unint64_t v21 = v0;
    v21[1] = sub_10080B79C;
    return v22();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10080B79C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 352);
  *(void *)(*(void *)v1 + 528) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10080B8B4, v2, 0);
}

uint64_t sub_10080B8B4()
{
  uint64_t v25 = v0;
  uint64_t v1 = (uint64_t)(v0 + 32);
  if (v0[66])
  {
    uint64_t v2 = v0[45];
    uint64_t v3 = v0[43];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v4 = v3 + *(int *)(v2 + 20);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[67] = v5;
    void *v5 = v0;
    v5[1] = sub_10080BD8C;
    return sub_100E62DA0(v4);
  }
  else
  {
    uint64_t v7 = (void *)v0[64];
    uint64_t v8 = v0[59];
    uint64_t v9 = v0[54];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    sub_100802B3C();
    swift_allocError();
    *uint64_t v10 = 1;
    swift_willThrow();

    sub_10080F01C(v9, type metadata accessor for DeviceEvent.Location);
    sub_10080F01C(v8, type metadata accessor for DeviceEvent);
    if (qword_101636CF0 != -1) {
      swift_once();
    }
    uint64_t v11 = v0[46];
    uint64_t v12 = v0[43];
    uint64_t v13 = type metadata accessor for Logger();
    sub_100010324(v13, (uint64_t)qword_10170E3B0);
    sub_10080E7F4(v12, v11, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    swift_errorRetain();
    swift_errorRetain();
    double v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = v0[46];
    if (v16)
    {
      uint64_t v18 = swift_slowAlloc();
      id v19 = (void *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 138543875;
      swift_errorRetain();
      uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
      v0[41] = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v19 = v20;
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v18 + 12) = 2160;
      v0[42] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v18 + 22) = 2081;
      type metadata accessor for UUID();
      sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[40] = sub_1008FA0F0(v21, v22, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10080F01C(v17, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Failed to send the updated location from a device event: %{public}@for beacon: %{private,mask.hash}s", (uint8_t *)v18, 0x20u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      sub_10080F01C(v17, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
    }
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
}

uint64_t sub_10080BD8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 352);
  *(void *)(*(void *)v1 + 544) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10080BEC0, v2, 0);
}

uint64_t sub_10080BEC0()
{
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v3 = *(void *)(v0 + 376);
  sub_100E4CD4C(*(void *)(v0 + 544), v3);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = *(void **)(v0 + 512);
    char v5 = *(unsigned char *)(v0 + 556);
    uint64_t v6 = *(void *)(v0 + 472);
    uint64_t v7 = *(void *)(v0 + 432);
    uint64_t v8 = *(void *)(v0 + 352);
    sub_10001DAB4(*(void *)(v0 + 376), (uint64_t *)&unk_101638D50);
    uint64_t v9 = *(void *)(v8 + 160);
    type metadata accessor for Transaction();
    sub_10001D010(v0 + 16, v0 + 96);
    uint64_t v10 = swift_allocObject();
    sub_10001CEB0((long long *)(v0 + 96), v10 + 16);
    *(void *)(v10 + 56) = v9;
    *(void *)(v10 + 64) = v4;
    *(unsigned char *)(v10 + 72) = v5;
    id v11 = v4;
    swift_retain();
    static Transaction.asyncTask(name:block:)();
    swift_release();
  }
  else
  {
    sub_10080ECB8(*(void *)(v0 + 376), *(void *)(v0 + 400), (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
    char v12 = static Date.> infix(_:_:)();
    uint64_t v13 = *(void **)(v0 + 512);
    if (v12)
    {
      char v14 = *(unsigned char *)(v0 + 556);
      uint64_t v6 = *(void *)(v0 + 472);
      uint64_t v7 = *(void *)(v0 + 432);
      uint64_t v22 = *(void *)(v0 + 400);
      uint64_t v15 = *(void *)(*(void *)(v0 + 352) + 160);
      type metadata accessor for Transaction();
      sub_10001D010(v0 + 16, v0 + 216);
      uint64_t v16 = swift_allocObject();
      sub_10001CEB0((long long *)(v0 + 216), v16 + 16);
      *(void *)(v16 + 56) = v15;
      *(void *)(v16 + 64) = v13;
      *(unsigned char *)(v16 + 72) = v14;
      id v17 = v13;
      swift_retain();
      static Transaction.asyncTask(name:block:)();
      swift_release();

      uint64_t v18 = v22;
    }
    else
    {
      uint64_t v6 = *(void *)(v0 + 472);
      uint64_t v7 = *(void *)(v0 + 432);
      uint64_t v19 = *(void *)(v0 + 400);

      uint64_t v18 = v19;
    }
    sub_10080F01C(v18, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
  }
  sub_10080F01C(v7, type metadata accessor for DeviceEvent.Location);
  sub_10080F01C(v6, type metadata accessor for DeviceEvent);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_10080C214(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(unsigned char *)(v4 + 300) = a3;
  *(void *)(v4 + 168) = a1;
  *(void *)(v4 + 176) = a4;
  sub_10000588C(&qword_101638CF0);
  *(void *)(v4 + 184) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  *(void *)(v4 + 192) = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)(v4 + 200) = v7;
  *(void *)(v4 + 208) = *(void *)(v7 + 64);
  *(void *)(v4 + 216) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for LocalFindableAccessoryRecord();
  uint64_t v9 = swift_task_alloc();
  *(void *)(v4 + 224) = v9;
  *(void *)(v4 + 40) = v8;
  *(void *)(v4 + 48) = sub_10080F07C(&qword_101642930, (void (*)(uint64_t))type metadata accessor for LocalFindableAccessoryRecord);
  uint64_t v10 = sub_10001D958((uint64_t *)(v4 + 16));
  sub_10080E7F4(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  sub_10080E7F4((uint64_t)v10, v9, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  return _swift_task_switch(sub_10080C3D4, 0, 0);
}

uint64_t sub_10080C3D4()
{
  uint64_t v62 = v0;
  uint64_t v1 = v0 + 16;
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 200);
  sub_10000588C(&qword_10163BC50);
  *(void *)(v0 + 232) = *(void *)(v4 + 72);
  int v5 = *(_DWORD *)(v4 + 80);
  *(_DWORD *)(v0 + 296) = v5;
  unint64_t v6 = (v5 + 32) & ~(unint64_t)v5;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_101342130;
  unint64_t v8 = v7 + v6;
  uint64_t v9 = *(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 16);
  *(void *)(v0 + 240) = v9;
  *(void *)(v0 + 248) = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v8, v2, v3);
  sub_10080F01C(v2, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v10 = *(void **)(v0 + 168);
  uint64_t v11 = type metadata accessor for Logger();
  sub_100010324(v11, (uint64_t)qword_10170E3B0);
  sub_10001D010(v0 + 16, v0 + 56);
  id v12 = v10;
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    os_log_type_t v56 = v14;
    os_log_t log = v13;
    unint64_t v15 = *(void *)(v0 + 216);
    uint64_t v16 = *(void *)(v0 + 192);
    uint64_t v17 = *(void *)(v0 + 200);
    id v54 = *(id *)(v0 + 168);
    uint64_t v18 = swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 141558787;
    *(void *)(v0 + 136) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 12) = 2081;
    uint64_t v19 = sub_10001CD44((void *)(v0 + 56), *(void *)(v0 + 80));
    v9(v15, (uint64_t)v19, v16);
    sub_10080F07C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v22 = v21;
    uint64_t v23 = *(void (**)(unint64_t, uint64_t))(v17 + 8);
    swift_bridgeObjectRetain();
    v23(v15, v16);
    *(void *)(v0 + 144) = sub_1008FA0F0(v20, v22, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
    *(_WORD *)(v18 + 22) = 2082;
    [v54 source];
    uint64_t v25 = *(void **)(v0 + 168);
    *(void *)(v0 + 152) = sub_1008FA0F0(0x6E776F6E6B6E752ELL, 0xE800000000000000, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v18 + 32) = 2048;
    *(void *)(v0 + 160) = *(void *)(v7 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v56, "Update device event for beacon: %{private,mask.hash}s, source: %{public}s,\nclientBeaconIdentifiers %ld].", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v1 = v0 + 16;
  }
  else
  {
    uint64_t v24 = *(void **)(v0 + 168);
    swift_bridgeObjectRetain();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);

    swift_bridgeObjectRelease();
  }
  uint64_t v26 = sub_101158244(v7);
  *(void *)(v0 + 256) = v26;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  char v27 = *(unsigned char *)(v26 + 32);
  *(unsigned char *)(v0 + 301) = v27;
  uint64_t v28 = -1;
  uint64_t v29 = -1 << v27;
  if (-v29 < 64) {
    uint64_t v28 = ~(-1 << -(char)v29);
  }
  unint64_t v30 = v28 & *(void *)(v26 + 56);
  if (v30)
  {
    uint64_t v31 = 0;
    unint64_t v32 = __clz(__rbit64(v30));
    uint64_t v33 = (v30 - 1) & v30;
    uint64_t v34 = *(void **)(v0 + 256);
    goto LABEL_10;
  }
  unint64_t v46 = 63 - v29;
  uint64_t v34 = *(void **)(v0 + 256);
  if ((unint64_t)(63 - v29) <= 0x7F) {
    goto LABEL_43;
  }
  unint64_t v47 = v34[8];
  if (!v47)
  {
    if (v46 >= 0xC0)
    {
      unint64_t v47 = v34[9];
      if (v47)
      {
        uint64_t v31 = 2;
        goto LABEL_17;
      }
      if (v46 >= 0x100)
      {
        unint64_t v47 = v34[10];
        if (v47)
        {
          uint64_t v31 = 3;
          goto LABEL_17;
        }
        if (v46 >= 0x140)
        {
          unint64_t v47 = v34[11];
          if (v47)
          {
            uint64_t v31 = 4;
            goto LABEL_17;
          }
          if (v46 >= 0x180)
          {
            unint64_t v47 = v34[12];
            if (v47)
            {
              uint64_t v31 = 5;
              goto LABEL_17;
            }
            if (v46 >= 0x1C0)
            {
              uint64_t v48 = v1;
              unint64_t v47 = v34[13];
              if (v47)
              {
                uint64_t v31 = 6;
LABEL_33:
                uint64_t v1 = v48;
                goto LABEL_17;
              }
              if (v46 >= 0x200)
              {
                unint64_t v47 = v34[14];
                if (v47)
                {
                  uint64_t v31 = 7;
                  goto LABEL_33;
                }
                uint64_t v49 = 0;
                uint64_t v50 = v46 >> 6;
                if (v46 >> 6 <= 8) {
                  uint64_t v50 = 8;
                }
                uint64_t v51 = v50 - 8;
                while (1)
                {
                  uint64_t v1 = v48;
                  if (v51 == v49) {
                    break;
                  }
                  unint64_t v47 = v34[v49++ + 15];
                  if (v47)
                  {
                    uint64_t v31 = v49 + 7;
                    goto LABEL_33;
                  }
                }
              }
            }
          }
        }
      }
    }
LABEL_43:
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 200) + 56))(*(void *)(v0 + 184), 1, 1, *(void *)(v0 + 192));
    goto LABEL_44;
  }
  uint64_t v31 = 1;
LABEL_17:
  uint64_t v33 = (v47 - 1) & v47;
  unint64_t v32 = __clz(__rbit64(v47)) + (v31 << 6);
LABEL_10:
  *(void *)(v0 + 264) = v31;
  *(void *)(v0 + 272) = v33;
  uint64_t v35 = *(void *)(v0 + 192);
  uint64_t v36 = *(void *)(v0 + 200);
  uint64_t v37 = *(void *)(v0 + 184);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 240))(v37, v34[6] + *(void *)(v0 + 232) * v32, v35);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v37, 1, v35) != 1)
  {
    uint64_t v55 = *(void *)(v0 + 216);
    uint64_t v38 = *(void *)(v0 + 192);
    char v60 = *(unsigned char *)(v0 + 300);
    os_log_t loga = *(os_log_t *)(v0 + 176);
    uint64_t v59 = *(void **)(v0 + 168);
    unint64_t v39 = (*(unsigned __int8 *)(v0 + 296) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 296);
    unint64_t v40 = (*(void *)(v0 + 208) + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v41 = *(void (**)(void))(*(void *)(v0 + 200) + 32);
    v41();
    sub_10001D010(v1, v0 + 96);
    uint64_t v42 = swift_allocObject();
    *(void *)(v0 + 280) = v42;
    *(void *)(v42 + 16) = loga;
    ((void (*)(unint64_t, uint64_t, uint64_t))v41)(v42 + v39, v55, v38);
    sub_10001CEB0((long long *)(v0 + 96), v42 + v40);
    unint64_t v43 = v42 + ((v40 + 47) & 0xFFFFFFFFFFFFFFF8);
    *(void *)unint64_t v43 = v59;
    *(unsigned char *)(v43 + 8) = v60;
    id v44 = v59;
    swift_retain();
    os_log_type_t v45 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v45;
    *os_log_type_t v45 = v0;
    v45[1] = sub_10080CCC4;
    return unsafeBlocking<A>(_:)(v45, sub_10080EBD8, v42, (char *)&type metadata for () + 8);
  }
LABEL_44:
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v52 = *(uint64_t (**)(void))(v0 + 8);
  return v52();
}

uint64_t sub_10080CCC4()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10080CDDC, 0, 0);
}

uint64_t sub_10080CDDC(void *a1, uint64_t (*a2)(), uint64_t a3, char *a4)
{
  uint64_t v8 = v7 + 16;
  int64_t v9 = *(void *)(v7 + 264);
  int64_t v10 = *(void *)(v7 + 272);
  if (v10)
  {
    uint64_t v11 = (v10 - 1) & v10;
    unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
    uint64_t v6 = *(void *)(v7 + 256);
    goto LABEL_3;
  }
  int64_t v23 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 301)) + 63) >> 6;
  uint64_t v6 = *(void *)(v7 + 256);
  if (v23 >= v10) {
    goto LABEL_28;
  }
  uint64_t v4 = v6 + 56;
  unint64_t v24 = *(void *)(v6 + 56 + 8 * v23);
  ++v9;
  if (!v24)
  {
    int64_t v9 = v23 + 1;
    if (v23 + 1 < v10)
    {
      unint64_t v24 = *(void *)(v4 + 8 * v9);
      if (v24) {
        goto LABEL_10;
      }
      int64_t v9 = v23 + 2;
      if (v23 + 2 < v10)
      {
        unint64_t v24 = *(void *)(v4 + 8 * v9);
        if (v24) {
          goto LABEL_10;
        }
        int64_t v9 = v23 + 3;
        if (v23 + 3 < v10)
        {
          unint64_t v24 = *(void *)(v4 + 8 * v9);
          if (v24) {
            goto LABEL_10;
          }
          int64_t v9 = v23 + 4;
          if (v23 + 4 < v10)
          {
            unint64_t v24 = *(void *)(v4 + 8 * v9);
            if (v24) {
              goto LABEL_10;
            }
            int64_t v9 = v23 + 5;
            if (v23 + 5 < v10)
            {
              unint64_t v24 = *(void *)(v4 + 8 * v9);
              if (v24) {
                goto LABEL_10;
              }
              v23 += 6;
              if (v23 < v10)
              {
                uint64_t v5 = v7 + 16;
                unint64_t v24 = *(void *)(v4 + 8 * v23);
                if (!v24)
                {
                  while (1)
                  {
                    int64_t v9 = v23 + 1;
                    if (__OFADD__(v23, 1)) {
                      break;
                    }
                    uint64_t v8 = v5;
                    if (v9 >= v10) {
                      goto LABEL_28;
                    }
LABEL_25:
                    unint64_t v24 = *(void *)(v4 + 8 * v9);
                    ++v23;
                    if (v24) {
                      goto LABEL_10;
                    }
                  }
                  __break(1u);
                  return unsafeBlocking<A>(_:)(a1, a2, a3, a4);
                }
                int64_t v9 = v23;
                goto LABEL_10;
              }
            }
          }
        }
      }
    }
LABEL_28:
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v7 + 200) + 56))(*(void *)(v7 + 184), 1, 1, *(void *)(v7 + 192));
    goto LABEL_29;
  }
LABEL_10:
  uint64_t v11 = (v24 - 1) & v24;
  unint64_t v12 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_3:
  *(void *)(v7 + 264) = v9;
  *(void *)(v7 + 272) = v11;
  uint64_t v13 = *(void *)(v7 + 192);
  uint64_t v14 = *(void *)(v7 + 200);
  uint64_t v15 = *(void *)(v7 + 184);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 240))(v15, *(void *)(v6 + 48) + *(void *)(v7 + 232) * v12, v13);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v15, 0, 1, v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13) != 1)
  {
    uint64_t v27 = *(void *)(v7 + 192);
    uint64_t v28 = *(void *)(v7 + 216);
    uint64_t v16 = *(void *)(v7 + 176);
    char v30 = *(unsigned char *)(v7 + 300);
    unint64_t v17 = (*(unsigned __int8 *)(v7 + 296) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 296);
    unint64_t v18 = (*(void *)(v7 + 208) + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v29 = *(void **)(v7 + 168);
    uint64_t v19 = *(void (**)(void))(*(void *)(v7 + 200) + 32);
    v19();
    sub_10001D010(v8, v7 + 96);
    uint64_t v20 = swift_allocObject();
    *(void *)(v7 + 280) = v20;
    *(void *)(v20 + 16) = v16;
    ((void (*)(unint64_t, uint64_t, uint64_t))v19)(v20 + v17, v28, v27);
    sub_10001CEB0((long long *)(v7 + 96), v20 + v18);
    unint64_t v21 = v20 + ((v18 + 47) & 0xFFFFFFFFFFFFFFF8);
    *(void *)unint64_t v21 = v29;
    *(unsigned char *)(v21 + 8) = v30;
    id v22 = v29;
    swift_retain();
    a1 = (void *)swift_task_alloc();
    *(void *)(v7 + 288) = a1;
    *a1 = v7;
    a1[1] = sub_10080CCC4;
    a4 = (char *)&type metadata for () + 8;
    a2 = sub_10080EBD8;
    a3 = v20;
    return unsafeBlocking<A>(_:)(a1, a2, a3, a4);
  }
LABEL_29:
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v7 + 8);
  return v25();
}

uint64_t sub_10080D1A8()
{
  sub_10000588C(&qword_10164B280);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10134CDE0;
  uint64_t v1 = (void *)SPBeaconTypeDurian;
  uint64_t v2 = (void *)SPBeaconTypeAccessory;
  *(void *)(v0 + 32) = SPBeaconTypeDurian;
  *(void *)(v0 + 40) = v2;
  uint64_t v3 = (void *)SPBeaconTypeHele;
  uint64_t v4 = (void *)SPBeaconTypeSelfBeaconing;
  *(void *)(v0 + 48) = SPBeaconTypeHele;
  *(void *)(v0 + 56) = v4;
  uint64_t v5 = (void *)SPBeaconTypeVirtualMeDevice;
  *(void *)(v0 + 64) = SPBeaconTypeVirtualMeDevice;
  id v6 = v1;
  id v7 = v2;
  id v8 = v3;
  id v9 = v4;
  id v10 = v5;
  return v0;
}

void *sub_10080D25C(uint64_t a1, uint64_t (*a2)(char *, uint64_t, void, void), uint64_t a3)
{
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v19 = sub_10000588C((uint64_t *)&unk_10164E820);
  uint64_t v5 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  id v9 = _swiftEmptyArrayStorage;
  if (v8)
  {
    v17[1] = v3;
    id v22 = _swiftEmptyArrayStorage;
    sub_1000B81DC(0, v8, 0);
    id v9 = v22;
    uint64_t v18 = sub_10000588C((uint64_t *)&unk_10164E790);
    uint64_t v10 = a1
        + ((*(unsigned __int8 *)(*(void *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v18 - 8) + 80));
    uint64_t v11 = *(void *)(*(void *)(v18 - 8) + 72);
    do
    {
      uint64_t v12 = sub_10000588C((uint64_t *)&unk_10164E7D0);
      uint64_t v13 = *(int *)(v19 + 48);
      *(void *)&v7[v13] = v20(v7, v10, *(void *)(v10 + *(int *)(v12 + 48)), *(void *)(v10 + *(int *)(v18 + 48)));
      id v22 = v9;
      unint64_t v15 = v9[2];
      unint64_t v14 = v9[3];
      if (v15 >= v14 >> 1)
      {
        sub_1000B81DC(v14 > 1, v15 + 1, 1);
        id v9 = v22;
      }
      void v9[2] = v15 + 1;
      sub_10001D608((uint64_t)v7, (uint64_t)v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v15, (uint64_t *)&unk_10164E820);
      v10 += v11;
      --v8;
    }
    while (v8);
  }
  return v9;
}

void *sub_10080D478(uint64_t a1, uint64_t (*a2)(char *, void *, void, void), uint64_t a3)
{
  unint64_t v17 = a2;
  uint64_t v18 = a3;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_10164E820);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v16[1] = v3;
    uint64_t v19 = _swiftEmptyArrayStorage;
    sub_1000B81DC(0, v9, 0);
    uint64_t v10 = v19;
    uint64_t v11 = (void *)(a1 + 80);
    do
    {
      uint64_t v12 = *(int *)(v5 + 48);
      *(void *)&v8[v12] = v17(v8, v11 - 6, *(v11 - 1), *v11);
      uint64_t v19 = v10;
      unint64_t v14 = v10[2];
      unint64_t v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        sub_1000B81DC(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v19;
      }
      v10[2] = v14 + 1;
      sub_10001D608((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14, (uint64_t *)&unk_10164E820);
      v11 += 7;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_10080D614@<X0>(uint64_t *a1@<X8>)
{
  return sub_1008032B4(a1);
}

uint64_t sub_10080D634()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100033F68;
  v3[20] = v2;
  v3[21] = v0 + 24;
  return _swift_task_switch(sub_1007E4020, 0, 0);
}

uint64_t sub_10080D6E4()
{
  return sub_100E5FA2C();
}

uint64_t sub_10080D6EC(uint64_t a1)
{
  return sub_10110B578(a1, v1);
}

uint64_t sub_10080D6F4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10080D784(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_1007F1988(a1, v4);
}

uint64_t sub_10080D7F8()
{
  uint64_t v1 = (int *)type metadata accessor for BeaconEstimatedLocation();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v13 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  sub_10001CFB8(*(void *)(v0 + v3), *(void *)(v0 + v3 + 8));
  uint64_t v4 = v0 + v3 + v1[5];
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(v0 + v3 + v1[6], v5);
  uint64_t v7 = v0 + v3 + v1[10];
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  uint64_t v11 = v0 + v3 + v1[12];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8)) {
    v10(v11, v8);
  }
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, ((v13 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_10080D9F0()
{
  uint64_t v1 = *(void *)(type metadata accessor for BeaconEstimatedLocation() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + v3);
  uint64_t v6 = *(void *)(v0 + v3 + 8);

  return sub_100E5FAC8(v4, v0 + v2, v5, v6);
}

uint64_t sub_10080DA94()
{
  uint64_t v1 = (int *)type metadata accessor for BeaconEstimatedLocation();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 64) & ~v2;
  uint64_t v13 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 24);
  sub_10001CFB8(*(void *)(v0 + v3), *(void *)(v0 + v3 + 8));
  uint64_t v4 = v0 + v3 + v1[5];
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(v0 + v3 + v1[6], v5);
  uint64_t v7 = v0 + v3 + v1[10];
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  uint64_t v11 = v0 + v3 + v1[12];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8)) {
    v10(v11, v8);
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v13, v2 | 7);
}

uint64_t sub_10080DC7C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for BeaconEstimatedLocation() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + 24;
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10001D2E4;
  return sub_1007E8834(a1, v5, v6, v7);
}

uint64_t sub_10080DD70()
{
  uint64_t v2 = v0 + 16;
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  char v5 = *(unsigned char *)(v0 + 72);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_100033F68;
  return sub_1007FE0C4(v2, v3, v4, v5);
}

uint64_t sub_10080DE24()
{
  return sub_10080DED0((uint64_t (*)(uint64_t, uint64_t))sub_100E5FAA0);
}

uint64_t sub_10080DE3C(uint64_t a1)
{
  return sub_10012A40C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10080DE48()
{
  swift_release();
  swift_bridgeObjectRelease();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 32);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 72);

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_10080DEA0()
{
  return sub_1007EFB80(*(void *)(v0 + 16), *(void *)(v0 + 24), v0 + 32, (void *)(v0 + 72), *(void **)(v0 + 112));
}

uint64_t sub_10080DEB8()
{
  return sub_10080DED0((uint64_t (*)(uint64_t, uint64_t))sub_100E5EE58);
}

uint64_t sub_10080DED0(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3, v4);
}

uint64_t sub_10080DF5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100E63070(v4, a1);
}

uint64_t sub_10080DFD0(uint64_t a1)
{
  return sub_100129D7C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10080DFDC@<X0>(void *a1@<X8>)
{
  return sub_10080E488(a1);
}

uint64_t sub_10080DFF8()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 56);
  char v7 = *(unsigned char *)(v0 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_100033F68;
  return sub_1007FFE14(v2, v3, v4, v7, v5, v6);
}

uint64_t sub_10080E0BC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10080E10C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  char v6 = *(unsigned char *)(v0 + 32);
  char v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *char v7 = v1;
  v7[1] = sub_100033F68;
  return sub_1007FFFEC(v2, v3, v6, v4, v5);
}

uint64_t sub_10080E1C8(uint64_t a1)
{
  return sub_100801968(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24)) & 1;
}

uint64_t sub_10080E1EC(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(v1 + 24);
  sub_10000588C((uint64_t *)&unk_10164E720);
  return sub_10113AC0C(a1, v3, *(void *)(a1 + 40)) & 1;
}

id sub_10080E288(char *a1, uint64_t a2, void *a3, void *a4)
{
  return sub_100801A0C(a1, a2, a3, a4, *(void *)(v4 + 16));
}

id sub_10080E290(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1008022E0(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_10080E298()
{
  uint64_t v1 = *(void *)(sub_10000588C((uint64_t *)&unk_10164E720) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v5 + 8, v4);
}

BOOL sub_10080E3D4@<W0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_10000588C((uint64_t *)&unk_10164E720) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  BOOL result = sub_1008029A4(v1 + v4, *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
  *a1 = result;
  return result;
}

uint64_t sub_10080E470()
{
  return sub_10080EBF0((uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))sub_1007FF1B8);
}

uint64_t sub_10080E488@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  *a1 = *(void *)(v1 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10080E4DC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10080E538()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100E61304(v2, v3);
}

uint64_t sub_10080E5AC(uint64_t a1)
{
  return sub_10012A3DC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10080E5B8()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10080E5F8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100033F68;
  return sub_1007F332C(a1, v4, v5, v6);
}

uint64_t sub_10080E6AC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10080E6F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100033F68;
  return sub_1007F573C(a1, v4, v5, v7, v6);
}

uint64_t sub_10080E7B4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10080E7EC(uint64_t a1)
{
  return sub_100C16BDC(a1);
}

uint64_t sub_10080E7F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10080E868(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for BeaconIdentifier() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *((void *)v1 + 2);
  uint64_t v7 = *((void *)v1 + 3);
  double v8 = v1[4];
  uint64_t v9 = *((void *)v1 + 5);
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (uint64_t)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_100033F68;
  return sub_1007F69C8(v8, a1, v6, v7, v9, v10, v11);
}

uint64_t sub_10080E9A8()
{
  uint64_t v1 = (int *)(type metadata accessor for BeaconIdentifier() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  double v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v6 + v1[7], v7);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + v5);

  return _swift_deallocObject(v0, v5 + 40, v4);
}

uint64_t sub_10080EAE0()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + v6);

  return _swift_deallocObject(v0, v7 + 9, v5);
}

uint64_t sub_10080EBD8()
{
  return sub_10080EBF0((uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))sub_100BEAEA4);
}

uint64_t sub_10080EBF0(uint64_t (*a1)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = *(unsigned __int8 *)(v1 + v5 + 8);

  return a1(v6, v1 + v3, v1 + v4, v7, v8);
}

uint64_t sub_10080ECB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10080ED20(uint64_t a1)
{
  return sub_10110B7BC(a1, v1);
}

uint64_t sub_10080ED30()
{
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  swift_release();

  return _swift_deallocObject(v0, 73, 7);
}

uint64_t sub_10080ED78()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6 + 89, v5);
}

uint64_t sub_10080EE60(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + v6);
  uint64_t v9 = v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10001D2E4;
  return sub_1007E6BDC(a1, v7, v8, v9);
}

uint64_t sub_10080EF80()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100033F68;
  return sub_1007E71C0(v2, v0 + 24);
}

uint64_t sub_10080F01C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10080F07C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10080F0C8()
{
  return sub_1007E35D8();
}

uint64_t sub_10080F0D0()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100033F68;
  return sub_1007E3670(v0);
}

uint64_t sub_10080F160()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100033F68;
  v2[5] = v0;
  return _swift_task_switch(sub_1007E3834, 0, 0);
}

unsigned char *storeEnumTagSinglePayload for LocationFetchService.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10080F2D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationFetchService.Error()
{
  return &type metadata for LocationFetchService.Error;
}

unint64_t sub_10080F310()
{
  unint64_t result = qword_10164EA00;
  if (!qword_10164EA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164EA00);
  }
  return result;
}

uint64_t sub_10080F380()
{
  uint64_t result = 0x746867696C666E69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6574656C706D6F63;
      break;
    case 2:
      uint64_t result = 0x64656C696166;
      break;
    case 3:
      uint64_t result = 0x676E69766F6D6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10080F40C()
{
  _StringGuts.grow(_:)(31);
  swift_bridgeObjectRelease();
  uint64_t v1 = type metadata accessor for SecureLocationsSubscription();
  type metadata accessor for Date();
  sub_100813840((unint64_t *)&qword_101638DA0, (void (*)(uint64_t))&type metadata accessor for Date);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 0x2065646F6D20;
  v3._object = (void *)0xE600000000000000;
  String.append(_:)(v3);
  unint64_t v4 = 0xE900000000000065;
  unint64_t v5 = 0x76697463616F7270;
  switch(*(void *)(v0 + *(int *)(v1 + 24)))
  {
    case 0:
      break;
    case 1:
      unint64_t v4 = 0xE700000000000000;
      unint64_t v5 = 0x776F6C6C616873;
      break;
    case 2:
      unint64_t v4 = 0xE400000000000000;
      unint64_t v5 = 1702259052;
      break;
    case 3:
      unint64_t v4 = 0xE500000000000000;
      unint64_t v5 = 0x72656E776FLL;
      break;
    case 4:
      unint64_t v4 = 0xEE00657669746361;
      unint64_t v5 = 0x6F725072656E776FLL;
      break;
    case 5:
      unint64_t v4 = 0x8000000101405BA0;
      unint64_t v5 = 0xD000000000000013;
      break;
    default:
      unint64_t v4 = 0xE700000000000000;
      unint64_t v5 = 0x6E776F6E6B6E75;
      break;
  }
  unint64_t v6 = v4;
  String.append(_:)(*(Swift::String *)&v5);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 0x20657461747320;
  v7._object = (void *)0xE700000000000000;
  String.append(_:)(v7);
  unint64_t v8 = 0xE600000000000000;
  uint64_t v9 = 0x64656C696166;
  switch(*(unsigned char *)(v0 + *(int *)(v1 + 28)))
  {
    case 1:
      uint64_t v9 = 0x6574656C706D6F63;
      unint64_t v8 = 0xE900000000000064;
      break;
    case 2:
      break;
    case 3:
      unint64_t v8 = 0xE800000000000000;
      uint64_t v9 = 0x676E69766F6D6572;
      break;
    default:
      unint64_t v8 = 0xE800000000000000;
      uint64_t v9 = 0x746867696C666E69;
      break;
  }
  unint64_t v10 = v8;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 93;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  return 0x617453656D69745BLL;
}

uint64_t sub_10080F6E8()
{
  _StringGuts.grow(_:)(43);
  swift_bridgeObjectRelease();
  uint64_t v1 = *v0;
  Swift::String v2 = (void *)v0[1];
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 0x617453656D697420;
  v4._object = (void *)0xEB0000000020706DLL;
  String.append(_:)(v4);
  uint64_t v5 = type metadata accessor for SecureLocationsSubscription();
  type metadata accessor for Date();
  sub_100813840((unint64_t *)&qword_101638DA0, (void (*)(uint64_t))&type metadata accessor for Date);
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 0x2065646F6D20;
  v7._object = (void *)0xE600000000000000;
  String.append(_:)(v7);
  unint64_t v8 = 0xE900000000000065;
  unint64_t v9 = 0x76697463616F7270;
  switch(*(uint64_t *)((char *)v0 + *(int *)(v5 + 24)))
  {
    case 0:
      break;
    case 1:
      unint64_t v8 = 0xE700000000000000;
      unint64_t v9 = 0x776F6C6C616873;
      break;
    case 2:
      unint64_t v8 = 0xE400000000000000;
      unint64_t v9 = 1702259052;
      break;
    case 3:
      unint64_t v8 = 0xE500000000000000;
      unint64_t v9 = 0x72656E776FLL;
      break;
    case 4:
      unint64_t v8 = 0xEE00657669746361;
      unint64_t v9 = 0x6F725072656E776FLL;
      break;
    case 5:
      unint64_t v8 = 0x8000000101405BA0;
      unint64_t v9 = 0xD000000000000013;
      break;
    default:
      unint64_t v8 = 0xE700000000000000;
      unint64_t v9 = 0x6E776F6E6B6E75;
      break;
  }
  unint64_t v10 = v8;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0x20657461747320;
  v11._object = (void *)0xE700000000000000;
  String.append(_:)(v11);
  unint64_t v12 = 0xE600000000000000;
  uint64_t v13 = 0x64656C696166;
  switch(*((unsigned char *)v0 + *(int *)(v5 + 28)))
  {
    case 1:
      uint64_t v13 = 0x6574656C706D6F63;
      unint64_t v12 = 0xE900000000000064;
      break;
    case 2:
      break;
    case 3:
      unint64_t v12 = 0xE800000000000000;
      uint64_t v13 = 0x676E69766F6D6572;
      break;
    default:
      unint64_t v12 = 0xE800000000000000;
      uint64_t v13 = 0x746867696C666E69;
      break;
  }
  unint64_t v14 = v12;
  String.append(_:)(*(Swift::String *)&v13);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 93;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  return 0x49794D646E69665BLL;
}

void sub_10080FA10(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, unsigned char *a5@<X8>)
{
  uint64_t v59 = a5;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v56 = v9;
  __chkstk_darwin(v9);
  uint64_t v57 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C(&qword_10163CBB8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SecureLocationsSubscription();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v58 = (uint64_t)&v54 - v18;
  uint64_t v19 = sub_1008133C8(a2, a3, a4);
  unint64_t v21 = v20;
  swift_beginAccess();
  uint64_t v22 = *(void *)(a1 + 24);
  if (!*(void *)(v22 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_100723FF4(v19, v21);
  if (v24)
  {
    sub_1008135D8(*(void *)(v22 + 56) + *(void *)(v15 + 72) * v23, (uint64_t)v13);
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v25 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, v25, 1, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    sub_100813698((uint64_t)v13);
    if (qword_101637070 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_100010324(v26, (uint64_t)qword_10170EC30);
    swift_bridgeObjectRetain_n();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      *(void *)&v63[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 141558275;
      *(void *)&v62[0] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v29 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(void *)&v62[0] = sub_1008FA0F0(a2, (unint64_t)a3, (uint64_t *)v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "subscribeAndFetch - no cached subscription for %{private,mask.hash}s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_38;
  }
  uint64_t v30 = (uint64_t)v13;
  uint64_t v31 = v58;
  sub_1008136F8(v30, v58);
  switch(*(unsigned char *)(v31 + *(int *)(v14 + 28)))
  {
    case 1:
      static Date.trustedNow.getter(v57);
      Date.timeIntervalSince1970.getter();
      double v37 = v36;
      Date.timeIntervalSince1970.getter();
      double v39 = v37 - v38;
      if (qword_101637080 != -1) {
        swift_once();
      }
      swift_retain();
      OS_dispatch_queue.sync<A>(execute:)();
      swift_release();
      long long v71 = v62[10];
      long long v72 = v62[11];
      long long v73 = v62[12];
      long long v67 = v62[6];
      long long v68 = v62[7];
      long long v69 = v62[8];
      long long v70 = v62[9];
      v63[2] = v62[2];
      long long v64 = v62[3];
      long long v65 = v62[4];
      long long v66 = v62[5];
      v63[0] = v62[0];
      v63[1] = v62[1];
      sub_100551984((uint64_t)v63);
      if (v39 >= *(double *)&v64)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v57, v56);
        goto LABEL_37;
      }
      if (qword_101637070 != -1) {
        swift_once();
      }
      uint64_t v40 = type metadata accessor for Logger();
      sub_100010324(v40, (uint64_t)qword_10170EC30);
      uint64_t v41 = v54;
      sub_1008135D8(v31, v54);
      swift_bridgeObjectRetain();
      uint64_t v42 = Logger.logObject.getter();
      os_log_type_t v43 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v42, v43))
      {

        sub_10081363C(v41);
        swift_bridgeObjectRelease_n();
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v57, v56);
        goto LABEL_40;
      }
      uint64_t v44 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      *(void *)&v62[0] = v60;
      *(_DWORD *)uint64_t v44 = 136315650;
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_1008FA0F0(v19, v21, (uint64_t *)v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 12) = 2080;
      unint64_t v45 = 0xE800000000000000;
      uint64_t v46 = 0x746867696C666E69;
      switch(*(unsigned char *)(v54 + *(int *)(v14 + 28)))
      {
        case 1:
          unint64_t v45 = 0xE900000000000064;
          uint64_t v46 = 0x6574656C706D6F63;
          break;
        case 2:
          unint64_t v45 = 0xE600000000000000;
          uint64_t v46 = 0x64656C696166;
          break;
        case 3:
          uint64_t v46 = 0x676E69766F6D6572;
          break;
        default:
          break;
      }
      uint64_t v61 = sub_1008FA0F0(v46, v45, (uint64_t *)v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10081363C(v54);
      *(_WORD *)(v44 + 22) = 2048;
      uint64_t v61 = *(void *)&v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "subscribeAndFetch - should proceed is false for %s %s as time since last subscribe is within threshold %f", (uint8_t *)v44, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v57, v56);
      uint64_t v53 = v58;
      goto LABEL_41;
    case 2:
      swift_bridgeObjectRelease();
      if (qword_101637070 != -1) {
        swift_once();
      }
      uint64_t v47 = type metadata accessor for Logger();
      sub_100010324(v47, (uint64_t)qword_10170EC30);
      uint64_t v48 = Logger.logObject.getter();
      os_log_type_t v49 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v48, v49)) {
        goto LABEL_35;
      }
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      uint64_t v51 = "subscribeAndFetch - should proceed is true because the subscription previously failed";
      break;
    case 3:
      swift_bridgeObjectRelease();
      if (qword_101637070 != -1) {
        swift_once();
      }
      uint64_t v52 = type metadata accessor for Logger();
      sub_100010324(v52, (uint64_t)qword_10170EC30);
      uint64_t v48 = Logger.logObject.getter();
      os_log_type_t v49 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v48, v49)) {
        goto LABEL_35;
      }
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      uint64_t v51 = "subscribeAndFetch - should proceed is true because we are currently removing the subscription";
      break;
    default:
      swift_bridgeObjectRelease();
      if (qword_101637070 != -1) {
        swift_once();
      }
      uint64_t v32 = type metadata accessor for Logger();
      sub_100010324(v32, (uint64_t)qword_10170EC30);
      uint64_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "subscribeAndFetch - should proceed is false because the subscription is already in flight", v35, 2u);
        swift_slowDealloc();
      }

LABEL_40:
      uint64_t v53 = v31;
LABEL_41:
      sub_10081363C(v53);
      unsigned char *v59 = 0;
      return;
  }
  _os_log_impl((void *)&_mh_execute_header, v48, v49, v51, v50, 2u);
  swift_slowDealloc();
LABEL_35:

LABEL_37:
  sub_10081363C(v31);
LABEL_38:
  unsigned char *v59 = 1;
}

uint64_t sub_1008104A4(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v39 = a1;
  uint64_t v9 = sub_10000588C(&qword_10163CBB8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)type metadata accessor for SecureLocationsSubscription();
  uint64_t v13 = *((void *)v12 - 1);
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = sub_1008133C8(a2, a3, a4);
  unint64_t v17 = v16;
  uint64_t v18 = (uint64_t)v15 + v12[5];
  swift_bridgeObjectRetain();
  static Date.trustedNow.getter(v18);
  id v19 = [a4 subscriptionMode];
  *uint64_t v15 = a2;
  v15[1] = (uint64_t)a3;
  *(uint64_t *)((char *)v15 + v12[6]) = (uint64_t)v19;
  uint64_t v20 = v12[7];
  uint64_t v38 = a5;
  *((unsigned char *)v15 + v20) = a5;
  unint64_t v21 = (uint64_t *)((char *)v15 + v12[8]);
  *unint64_t v21 = 0;
  v21[1] = 0;
  swift_bridgeObjectRetain();
  id v22 = [a4 pushIdentifiers];
  sub_10000588C(&qword_101654A30);
  uint64_t v23 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (*(void *)(v23 + 16) && (uint64_t v24 = sub_100723FF4(a2, (uint64_t)a3), (v25 & 1) != 0))
  {
    uint64_t v26 = *(void **)(*(void *)(v23 + 56) + 8 * v24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v26[2])
    {
      uint64_t v28 = v26[4];
      uint64_t v27 = v26[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *unint64_t v21 = v28;
      v21[1] = v27;
      goto LABEL_7;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v29 = v40;
  sub_1008135D8((uint64_t)v15, (uint64_t)v11);
  (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v11, 0, 1, v12);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_10015F164((uint64_t)v11, v29, v17);
  swift_endAccess();
  if (qword_101637070 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  sub_100010324(v30, (uint64_t)qword_10170EC30);
  swift_bridgeObjectRetain();
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    v42[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_1008FA0F0(v29, v17, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v33 + 12) = 2080;
    unint64_t v34 = 0xE800000000000000;
    uint64_t v35 = 0x746867696C666E69;
    switch((char)v38)
    {
      case 1:
        unint64_t v34 = 0xE900000000000064;
        uint64_t v35 = 0x6574656C706D6F63;
        break;
      case 2:
        unint64_t v34 = 0xE600000000000000;
        uint64_t v35 = 0x64656C696166;
        break;
      case 3:
        uint64_t v35 = 0x676E69766F6D6572;
        break;
      default:
        break;
    }
    uint64_t v41 = sub_1008FA0F0(v35, v34, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "SubscribeAndFetch - set subscription state %s to %s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return sub_10081363C((uint64_t)v15);
}

void sub_10081097C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = sub_10000588C(&qword_10163CBB8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v18[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1008133C8(a2, a3, a4);
  unint64_t v12 = v11;
  swift_beginAccess();
  sub_100164E78(v10, v12, (uint64_t)v9);
  sub_100813698((uint64_t)v9);
  swift_endAccess();
  if (qword_101637070 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100010324(v13, (uint64_t)qword_10170EC30);
  swift_bridgeObjectRetain();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    unint64_t v16 = (uint8_t *)swift_slowAlloc();
    v18[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v16 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1008FA0F0(v10, v12, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "SubscribeAndFetch - removed subscription %s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_100810BC0@<X0>(id a1@<X3>, uint64_t a2@<X0>, uint64_t a3@<X1>, void *a4@<X2>, uint64_t a5@<X8>)
{
  uint64_t v7 = sub_1008133C8(a3, a4, a1);
  uint64_t v9 = v8;
  swift_beginAccess();
  uint64_t v10 = *(void *)(a2 + 24);
  if (*(void *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_100723FF4(v7, v9);
    if (v12)
    {
      uint64_t v13 = v11;
      uint64_t v14 = *(void *)(v10 + 56);
      uint64_t v15 = type metadata accessor for SecureLocationsSubscription();
      uint64_t v16 = *(void *)(v15 - 8);
      sub_1008135D8(v14 + *(void *)(v16 + 72) * v13, a5);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(a5, 0, 1, v15);
    }
    else
    {
      uint64_t v18 = type metadata accessor for SecureLocationsSubscription();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a5, 1, 1, v18);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = type metadata accessor for SecureLocationsSubscription();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a5, 1, 1, v17);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100810D7C@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v62 = type metadata accessor for SecureLocationsSubscription();
  uint64_t v60 = *(void *)(v62 - 8);
  uint64_t v3 = __chkstk_darwin(v62);
  uint64_t v56 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v55 = (uint64_t *)((char *)&v53 - v6);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v53 - v7;
  uint64_t v9 = sub_10000588C(&qword_10164EC00);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  char v12 = (uint64_t *)((char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v14 = (uint64_t *)((char *)&v53 - v13);
  unsigned __int8 v65 = 0;
  swift_beginAccess();
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v58 = v15 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v59 = (unint64_t)(v17 + 63) >> 6;
  int64_t v54 = v59 - 1;
  uint64_t v61 = v15;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  if (!v19) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v21 << 6);
LABEL_5:
  uint64_t v24 = *(void *)(v61 + 56);
  char v25 = (void *)(*(void *)(v61 + 48) + 16 * v23);
  uint64_t v26 = v25[1];
  *char v12 = *v25;
  v12[1] = v26;
  uint64_t v27 = v24 + *(void *)(v60 + 72) * v23;
  uint64_t v28 = sub_10000588C(&qword_10164EC08);
  sub_1008135D8(v27, (uint64_t)v12 + *(int *)(v28 + 48));
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v12, 0, 1, v28);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_10001D608((uint64_t)v12, (uint64_t)v14, &qword_10164EC00);
    uint64_t v33 = sub_10000588C(&qword_10164EC08);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v14, 1, v33) == 1)
    {
      swift_release();
      goto LABEL_35;
    }
    uint64_t v35 = *v14;
    unint64_t v34 = v14[1];
    sub_1008136F8((uint64_t)v14 + *(int *)(v33 + 48), (uint64_t)v8);
    if (*(void *)&v8[*(int *)(v62 + 24)] == 1)
    {
      if (qword_101637070 != -1) {
        swift_once();
      }
      uint64_t v36 = type metadata accessor for Logger();
      sub_100010324(v36, (uint64_t)qword_10170EC30);
      uint64_t v37 = v55;
      sub_1008135D8((uint64_t)v8, (uint64_t)v55);
      uint64_t v38 = v56;
      sub_1008135D8((uint64_t)v8, v56);
      swift_bridgeObjectRetain();
      uint64_t v39 = Logger.logObject.getter();
      os_log_type_t v40 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        uint64_t v62 = v42;
        *(_DWORD *)uint64_t v41 = 141559043;
        uint64_t v63 = 1752392040;
        v64[0] = v42;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v41 + 12) = 2081;
        swift_bridgeObjectRetain();
        uint64_t v63 = sub_1008FA0F0(v35, v34, v64);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v41 + 22) = 2160;
        uint64_t v63 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v41 + 32) = 2081;
        uint64_t v43 = *v37;
        unint64_t v44 = v37[1];
        swift_bridgeObjectRetain();
        uint64_t v63 = sub_1008FA0F0(v43, v44, v64);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10081363C((uint64_t)v37);
        *(_WORD *)(v41 + 42) = 2082;
        uint64_t v45 = v56;
        uint64_t v46 = sub_10080F40C();
        uint64_t v63 = sub_1008FA0F0(v46, v47, v64);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10081363C(v45);
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "SubscribeAndFetch - Found an active shallow subscription with key %{private,mask.hash}s -> %{private,mask.hash}s  %{public}s", (uint8_t *)v41, 0x34u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        sub_10081363C(v38);
        sub_10081363C((uint64_t)v37);
        swift_bridgeObjectRelease_n();
      }
      sub_10081363C((uint64_t)v8);
      swift_release();
      unsigned __int8 v65 = 1;
LABEL_35:
      if (qword_101637070 != -1) {
        goto LABEL_40;
      }
      goto LABEL_36;
    }
    sub_10081363C((uint64_t)v8);
    uint64_t result = swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v29 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v29 < v59)
    {
      unint64_t v30 = *(void *)(v58 + 8 * v29);
      if (v30) {
        goto LABEL_9;
      }
      int64_t v31 = v21 + 2;
      ++v21;
      if (v29 + 1 < v59)
      {
        unint64_t v30 = *(void *)(v58 + 8 * v31);
        if (v30) {
          goto LABEL_12;
        }
        int64_t v21 = v29 + 1;
        if (v29 + 2 < v59)
        {
          unint64_t v30 = *(void *)(v58 + 8 * (v29 + 2));
          if (v30)
          {
            v29 += 2;
            goto LABEL_9;
          }
          int64_t v31 = v29 + 3;
          int64_t v21 = v29 + 2;
          if (v29 + 3 < v59)
          {
            unint64_t v30 = *(void *)(v58 + 8 * v31);
            if (!v30)
            {
              while (1)
              {
                int64_t v29 = v31 + 1;
                if (__OFADD__(v31, 1)) {
                  break;
                }
                if (v29 >= v59)
                {
                  int64_t v21 = v54;
                  goto LABEL_23;
                }
                unint64_t v30 = *(void *)(v58 + 8 * v29);
                ++v31;
                if (v30) {
                  goto LABEL_9;
                }
              }
              __break(1u);
              return result;
            }
LABEL_12:
            int64_t v29 = v31;
LABEL_9:
            unint64_t v19 = (v30 - 1) & v30;
            unint64_t v23 = __clz(__rbit64(v30)) + (v29 << 6);
            int64_t v21 = v29;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    uint64_t v32 = sub_10000588C(&qword_10164EC08);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v12, 1, 1, v32);
    unint64_t v19 = 0;
  }
  __break(1u);
LABEL_40:
  swift_once();
LABEL_36:
  uint64_t v48 = type metadata accessor for Logger();
  sub_100010324(v48, (uint64_t)qword_10170EC30);
  int v49 = v65;
  uint64_t v50 = Logger.logObject.getter();
  os_log_type_t v51 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v52 = 67109120;
    LODWORD(v64[0]) = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "SubscribeAndFetch - hasActiveShallowSubscriptions %{BOOL}d", v52, 8u);
    swift_slowDealloc();
  }

  uint64_t result = swift_beginAccess();
  *uint64_t v57 = v65;
  return result;
}

uint64_t sub_100811554(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(NSObject **)(v4 + 16);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = v4;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1008137A4;
  *(void *)(v10 + 24) = v9;
  v14[4] = sub_100132424;
  v14[5] = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_1000A70B0;
  v14[3] = &unk_1015D6FB0;
  uint64_t v11 = _Block_copy(v14);
  swift_bridgeObjectRetain();
  id v12 = a3;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1008116CC(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v34 = a4;
  uint64_t v7 = sub_10000588C(&qword_10163CBB8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for SecureLocationsSubscription();
  uint64_t v33 = *((void *)v10 - 1);
  __chkstk_darwin(v10);
  id v12 = (uint64_t *)((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_101637070 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = sub_100010324(v13, (uint64_t)qword_10170EC30);
  swift_bridgeObjectRetain_n();
  id v15 = a3;
  uint64_t v32 = v14;
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  uint64_t v18 = &selRef_fetchEncryptedPayloadForUnknownBeacon_completion_;
  if (os_log_type_enabled(v16, v17))
  {
    unint64_t v30 = v9;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v29 = v20;
    *(_DWORD *)uint64_t v19 = 141558531;
    uint64_t v35 = 1752392040;
    v36[0] = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 12) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v31 = a1;
    uint64_t v35 = sub_1008FA0F0(a1, a2, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 22) = 2082;
    [v15 subscriptionMode];
    uint64_t v35 = sub_1008FA0F0(0x6E776F6E6B6E75, 0xE700000000000000, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "SubscribeAndFetch - adding pending key subscription %{private,mask.hash}s in mode %{public}s", (uint8_t *)v19, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v9 = v30;
    a1 = v31;
    uint64_t v18 = &selRef_fetchEncryptedPayloadForUnknownBeacon_completion_;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v21 = (uint64_t)v12 + v10[5];
  swift_bridgeObjectRetain();
  static Date.trustedNow.getter(v21);
  id v22 = [v15 v18[387]];
  *id v12 = a1;
  v12[1] = a2;
  *(uint64_t *)((char *)v12 + v10[6]) = (uint64_t)v22;
  *((unsigned char *)v12 + v10[7]) = 0;
  unint64_t v23 = (uint64_t *)((char *)v12 + v10[8]);
  *unint64_t v23 = 0;
  v23[1] = 0;
  switch((unint64_t)[v15 v18[387]])
  {
    case 0uLL:
    case 1uLL:
    case 5uLL:
      sub_1008135D8((uint64_t)v12, (uint64_t)v9);
      (*(void (**)(char *, void, uint64_t, int *))(v33 + 56))(v9, 0, 1, v10);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_10015F164((uint64_t)v9, a1, a2);
      swift_endAccess();
      break;
    case 2uLL:
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v24, v25)) {
        goto LABEL_13;
      }
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      uint64_t v27 = "SubscribeAndFetch - key request in live - we don't currently do this. This is an anomaly";
      goto LABEL_12;
    default:
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v26 = 0;
        uint64_t v27 = "SubscribeAndFetch unknown mode specified";
LABEL_12:
        _os_log_impl((void *)&_mh_execute_header, v24, v25, v27, v26, 2u);
        swift_slowDealloc();
      }
LABEL_13:

      break;
  }
  return sub_10081363C((uint64_t)v12);
}

uint64_t sub_100811CD8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, char *a5@<X8>)
{
  unint64_t v83 = a4;
  uint64_t v80 = a2;
  uint64_t v82 = a5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v76 = *(void *)(v7 - 8);
  uint64_t v77 = v7;
  __chkstk_darwin(v7);
  uint64_t v75 = (uint64_t)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SecureLocationsSubscription();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v78 = (uint64_t)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000588C(&qword_10163CBB8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v74 = (uint64_t)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  os_log_type_t v17 = (char *)&v72 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v72 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  unint64_t v23 = (char *)&v72 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = *(void (**)(void))(v10 + 56);
  uint64_t v81 = (uint64_t)&v72 - v25;
  v24();
  unint64_t v79 = a1;
  if (a1 == 5)
  {
LABEL_4:
    uint64_t v26 = v80;
    swift_beginAccess();
    uint64_t v27 = *(void *)(v26 + 32);
    if (*(void *)(v27 + 16))
    {
      unint64_t v28 = v83;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_100723FF4(a3, v28);
      if (v30)
      {
        sub_1008135D8(*(void *)(v27 + 56) + *(void *)(v10 + 72) * v29, (uint64_t)v23);
        uint64_t v31 = v23;
        uint64_t v32 = 0;
      }
      else
      {
        uint64_t v31 = v23;
        uint64_t v32 = 1;
      }
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v24)(v31, v32, 1, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v24)(v23, 1, 1, v9);
LABEL_19:
    unint64_t v28 = v83;
    goto LABEL_22;
  }
  if (a1 != 1)
  {
    if (a1)
    {
      if (qword_101637070 != -1) {
        swift_once();
      }
      uint64_t v41 = type metadata accessor for Logger();
      sub_100010324(v41, (uint64_t)qword_10170EC30);
      uint64_t v42 = Logger.logObject.getter();
      os_log_type_t v43 = static os_log_type_t.error.getter();
      BOOL v44 = os_log_type_enabled(v42, v43);
      uint64_t v45 = v81;
      if (!v44) {
        goto LABEL_54;
      }
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      v86[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 136446210;
      uint64_t v47 = 0x76697463616F7270;
      unint64_t v48 = 0xE900000000000065;
      switch(v79)
      {
        case 0uLL:
          break;
        case 2uLL:
          unint64_t v48 = 0xE400000000000000;
          uint64_t v47 = 1702259052;
          break;
        case 3uLL:
          unint64_t v48 = 0xE500000000000000;
          uint64_t v47 = 0x72656E776FLL;
          break;
        case 4uLL:
          uint64_t v47 = 0x6F725072656E776FLL;
          unint64_t v48 = 0xEE00657669746361;
          break;
        case 5uLL:
          unint64_t v48 = 0x8000000101405BA0;
          uint64_t v47 = 0xD000000000000013;
          break;
        default:
          unint64_t v48 = 0xE700000000000000;
          uint64_t v47 = 0x6E776F6E6B6E75;
          break;
      }
      v84[0] = sub_1008FA0F0(v47, v48, v86);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "SubscribeAndFetch hasPendingSubscription - unexpected subscription mode %{public}s", v46, 0xCu);
      swift_arrayDestroy();
      goto LABEL_53;
    }
    goto LABEL_4;
  }
  uint64_t v33 = v80;
  swift_beginAccess();
  uint64_t v34 = *(void *)(v33 + 40);
  if (!*(void *)(v34 + 16))
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v24)(v20, 1, 1, v9);
    unint64_t v23 = v20;
    goto LABEL_19;
  }
  uint64_t v35 = a3;
  uint64_t v36 = v83;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v73 = v35;
  uint64_t v37 = sub_100723FF4(v35, v36);
  if (v38)
  {
    sub_1008135D8(*(void *)(v34 + 56) + *(void *)(v10 + 72) * v37, (uint64_t)v20);
    uint64_t v39 = v20;
    uint64_t v40 = 0;
  }
  else
  {
    uint64_t v39 = v20;
    uint64_t v40 = 1;
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v24)(v39, v40, 1, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v23 = v20;
  unint64_t v28 = v36;
  a3 = v73;
LABEL_22:
  uint64_t v45 = v81;
  sub_100813698(v81);
  sub_10001D608((uint64_t)v23, v45, &qword_10163CBB8);
  sub_1008137D8(v45, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v17, 1, v9) == 1)
  {
    uint64_t v73 = a3;
    sub_100813698((uint64_t)v17);
    if (qword_101637070 != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Logger();
    sub_100010324(v49, (uint64_t)qword_10170EC30);
    swift_bridgeObjectRetain_n();
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v42, v50))
    {
      swift_bridgeObjectRelease_n();
LABEL_54:

      goto LABEL_64;
    }
    uint64_t v51 = swift_slowAlloc();
    v84[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v51 = 136446723;
    uint64_t v52 = 0x76697463616F7270;
    unint64_t v53 = 0xE900000000000065;
    switch(v79)
    {
      case 0uLL:
        break;
      case 1uLL:
        unint64_t v53 = 0xE700000000000000;
        uint64_t v52 = 0x776F6C6C616873;
        break;
      case 2uLL:
        unint64_t v53 = 0xE400000000000000;
        uint64_t v52 = 1702259052;
        break;
      case 3uLL:
        unint64_t v53 = 0xE500000000000000;
        uint64_t v52 = 0x72656E776FLL;
        break;
      case 4uLL:
        uint64_t v52 = 0x6F725072656E776FLL;
        unint64_t v53 = 0xEE00657669746361;
        break;
      case 5uLL:
        unint64_t v53 = 0x8000000101405BA0;
        uint64_t v52 = 0xD000000000000013;
        break;
      default:
        unint64_t v53 = 0xE700000000000000;
        uint64_t v52 = 0x6E776F6E6B6E75;
        break;
    }
    uint64_t v85 = sub_1008FA0F0(v52, v53, v84);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 12) = 2160;
    uint64_t v85 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v51 + 22) = 2081;
    unint64_t v70 = v83;
    swift_bridgeObjectRetain();
    uint64_t v85 = sub_1008FA0F0(v73, v70, v84);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v42, v50, "SubscribeAndFetch - no pendingKeyRequest in %{public}s for %{private,mask.hash}s", (uint8_t *)v51, 0x20u);
    swift_arrayDestroy();
LABEL_53:
    swift_slowDealloc();
    swift_slowDealloc();
    goto LABEL_54;
  }
  uint64_t v54 = v78;
  sub_1008136F8((uint64_t)v17, v78);
  uint64_t v55 = v75;
  static Date.trustedNow.getter(v75);
  Date.timeIntervalSince1970.getter();
  double v57 = v56;
  (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v55, v77);
  Date.timeIntervalSince1970.getter();
  double v59 = v57 - v58;
  switch(*(void *)(v54 + *(int *)(v9 + 24)))
  {
    case 0:
      double v60 = 86400.0;
      goto LABEL_35;
    case 1:
      double v60 = 240.0;
      goto LABEL_35;
    case 2:
    case 3:
      double v60 = 120.0;
LABEL_35:
      if (v59 > v60) {
        goto LABEL_36;
      }
      goto LABEL_32;
    default:
      if (v59 <= 0.0)
      {
LABEL_32:
        sub_10081363C(v54);
        uint64_t result = sub_100813698(v45);
        char v62 = 1;
        goto LABEL_65;
      }
LABEL_36:
      uint64_t v63 = a3;
      if (qword_101637070 != -1) {
        swift_once();
      }
      uint64_t v64 = type metadata accessor for Logger();
      sub_100010324(v64, (uint64_t)qword_10170EC30);
      swift_bridgeObjectRetain_n();
      unsigned __int8 v65 = Logger.logObject.getter();
      os_log_type_t v66 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v65, v66))
      {
        uint64_t v67 = swift_slowAlloc();
        v84[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v67 = 136446723;
        uint64_t v68 = 0x76697463616F7270;
        unint64_t v69 = 0xE900000000000065;
        switch(v79)
        {
          case 0uLL:
            break;
          case 1uLL:
            unint64_t v69 = 0xE700000000000000;
            uint64_t v68 = 0x776F6C6C616873;
            break;
          case 2uLL:
            unint64_t v69 = 0xE400000000000000;
            uint64_t v68 = 1702259052;
            break;
          case 3uLL:
            unint64_t v69 = 0xE500000000000000;
            uint64_t v68 = 0x72656E776FLL;
            break;
          case 4uLL:
            uint64_t v68 = 0x6F725072656E776FLL;
            unint64_t v69 = 0xEE00657669746361;
            break;
          case 5uLL:
            unint64_t v69 = 0x8000000101405BA0;
            uint64_t v68 = 0xD000000000000013;
            break;
          default:
            unint64_t v69 = 0xE700000000000000;
            uint64_t v68 = 0x6E776F6E6B6E75;
            break;
        }
        uint64_t v85 = sub_1008FA0F0(v68, v69, v84);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v67 + 12) = 2160;
        uint64_t v85 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v67 + 22) = 2081;
        unint64_t v28 = v83;
        swift_bridgeObjectRetain();
        uint64_t v85 = sub_1008FA0F0(v63, v28, v84);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v65, v66, "SubscribeAndFetch - pendingKeyRequest in %{public}s for %{private,mask.hash}s is outside of expirationWindow - removing it", (uint8_t *)v67, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v54 = v78;
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      if (v79 <= 1)
      {
        swift_beginAccess();
        uint64_t v71 = v74;
        sub_100164E78(v63, v28, v74);
        sub_100813698(v71);
        swift_endAccess();
      }
      sub_10081363C(v54);
      break;
  }
LABEL_64:
  uint64_t result = sub_100813698(v45);
  char v62 = 0;
LABEL_65:
  *uint64_t v82 = v62;
  return result;
}

uint64_t sub_1008129B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SecureLocationsSubscriptionManager()
{
  return self;
}

void *sub_100812A2C(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(void *)((char *)v4 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *((unsigned char *)v4 + v13) = *((unsigned char *)a2 + v13);
    uint64_t v14 = a3[8];
    uint64_t v15 = (void *)((char *)v4 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100812B50(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *sub_100812BE0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100812CB4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v10 = a3[8];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_100812D9C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

void *sub_100812E48(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100812F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100812F20);
}

uint64_t sub_100812F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100812FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100812FE4);
}

uint64_t sub_100812FE4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SecureLocationsSubscription()
{
  uint64_t result = qword_10164EBB8;
  if (!qword_10164EBB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1008130D8()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_100813190()
{
  uint64_t v1 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v1);
  uint64_t v2 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000584C();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v3);
  static DispatchQoS.unspecified.getter();
  v8[1] = _swiftEmptyArrayStorage;
  sub_100813840((unint64_t *)&qword_101638CC0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000588C((uint64_t *)&unk_1016376F0);
  sub_1000058D0();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v0[2] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v0[3] = _swiftEmptyDictionarySingleton;
  v0[4] = _swiftEmptyDictionarySingleton;
  v0[5] = _swiftEmptyDictionarySingleton;
  return v0;
}

uint64_t sub_1008133C8(uint64_t a1, void *a2, id a3)
{
  id v6 = [a3 clientApp];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = 12079;
  v8._object = (void *)0xE200000000000000;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  id v9 = [a3 subscriptionMode];
  uint64_t v10 = (void *)0xE900000000000065;
  uint64_t v11 = 0x76697463616F7270;
  switch((unint64_t)v9)
  {
    case 0uLL:
      break;
    case 1uLL:
      uint64_t v10 = (void *)0xE700000000000000;
      uint64_t v11 = 0x776F6C6C616873;
      break;
    case 2uLL:
      uint64_t v10 = (void *)0xE400000000000000;
      uint64_t v11 = 1702259052;
      break;
    case 3uLL:
      uint64_t v10 = (void *)0xE500000000000000;
      uint64_t v11 = 0x72656E776FLL;
      break;
    case 4uLL:
      uint64_t v10 = (void *)0xEE00657669746361;
      uint64_t v11 = 0x6F725072656E776FLL;
      break;
    case 5uLL:
      uint64_t v10 = (void *)0x8000000101405BA0;
      uint64_t v11 = 0xD000000000000013;
      break;
    default:
      uint64_t v10 = (void *)0xE700000000000000;
      uint64_t v11 = 0x6E776F6E6B6E75;
      break;
  }
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = v11;
  v12._object = v10;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = 12079;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v14._countAndFlagsBits = a1;
  v14._object = a2;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1008135D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SecureLocationsSubscription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10081363C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SecureLocationsSubscription();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100813698(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_10163CBB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1008136F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SecureLocationsSubscription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10081375C()
{
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1008137A4()
{
  return sub_1008116CC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1008137B0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1008137C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1008137D0()
{
  return swift_release();
}

uint64_t sub_1008137D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_10163CBB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100813840(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SecureLocationsSubscriptionRequestState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100813954);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureLocationsSubscriptionRequestState()
{
  return &type metadata for SecureLocationsSubscriptionRequestState;
}

unint64_t sub_100813990()
{
  unint64_t result = qword_10164EC10;
  if (!qword_10164EC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164EC10);
  }
  return result;
}

uint64_t sub_1008139E4(uint64_t a1, uint64_t a2)
{
  uint64_t v50 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v52 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SharedBeaconRecord(0);
  uint64_t v47 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v48 = v11;
  uint64_t v49 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v39 - v17;
  if (!*(void *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v40 = v16;
  uint64_t v41 = v15;
  uint64_t v42 = v8;
  os_log_type_t v43 = v6;
  uint64_t v44 = v7;
  uint64_t v45 = v4;
  uint64_t v46 = v3;
  type metadata accessor for CryptoKeys();
  DateInterval.start.getter();
  LODWORD(v39) = static os_log_type_t.default.getter();
  if (qword_101637258 != -1) {
LABEL_5:
  }
    swift_once();
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_101347BA0;
  uint64_t v20 = v50;
  uint64_t v21 = UUID.uuidString.getter();
  uint64_t v23 = v22;
  *(void *)(v19 + 56) = &type metadata for String;
  unint64_t v24 = sub_10000B4CC();
  *(void *)(v19 + 64) = v24;
  *(void *)(v19 + 32) = v21;
  *(void *)(v19 + 40) = v23;
  sub_1008174BC((unint64_t *)&qword_101638DA0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v25 = v41;
  uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
  *(void *)(v19 + 96) = &type metadata for String;
  *(void *)(v19 + 104) = v24;
  *(void *)(v19 + 72) = v26;
  *(void *)(v19 + 80) = v27;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v28 = v51;
  uint64_t v39 = *(void *)(v51 + 24);
  uint64_t v29 = v49;
  sub_100817868(v20, v49, type metadata accessor for SharedBeaconRecord);
  uint64_t v30 = v40;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v40, v18, v25);
  unint64_t v31 = (*(unsigned __int8 *)(v47 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  unint64_t v32 = (v48 + *(unsigned __int8 *)(v13 + 80) + v31) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v28;
  sub_10055ABB0(v29, v33 + v31);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 32))(v33 + v32, v30, v25);
  aBlock[4] = sub_1008173D4;
  aBlock[5] = v33;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015D7090;
  uint64_t v34 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v35 = v52;
  static DispatchQoS.unspecified.getter();
  unint64_t v53 = _swiftEmptyArrayStorage;
  sub_1008174BC((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v36 = v43;
  uint64_t v37 = v46;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v34);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v36, v37);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v44);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v25);
  return swift_release();
}

uint64_t sub_100814004(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v68 = a3;
  uint64_t v67 = type metadata accessor for CryptoKeyStreamInspector.Event(0);
  __chkstk_darwin(v67);
  unsigned int v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SharedBeaconRecord(0);
  uint64_t v8 = v7 - 8;
  uint64_t v64 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v65 = v9;
  uint64_t v66 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000588C(&qword_10163C6C8);
  __chkstk_darwin(v10 - 8);
  double v60 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_10000588C(&qword_10164EDB8);
  uint64_t v59 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v13 = (uint64_t *)((char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_10000588C(&qword_10164EDC0);
  uint64_t v62 = *(void *)(v14 - 8);
  uint64_t v63 = v14;
  __chkstk_darwin(v14);
  uint64_t v61 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(int *)(v8 + 28);
  uint64_t v70 = a2;
  uint64_t v21 = a2 + v20;
  swift_beginAccess();
  if (!*(void *)(a1[4] + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  sub_1007240CC(v21);
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v52 = sub_10000588C(&qword_10164EDC8);
    swift_allocObject();
    uint64_t v23 = PassthroughSubject.init()();
    unint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    uint64_t v57 = v17 + 16;
    double v58 = v24;
    uint64_t v55 = v19;
    uint64_t v50 = v21;
    v24(v19, v21, v16);
    swift_beginAccess();
    swift_retain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v71 = a1[4];
    a1[4] = 0x8000000000000000;
    uint64_t v53 = v23;
    sub_100170A50(v23, (uint64_t)v19, isUniquelyReferenced_nonNull_native);
    a1[4] = v71;
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    uint64_t v51 = v17 + 8;
    double v56 = v26;
    v26((uint64_t)v19, v16);
    swift_endAccess();
    uint64_t v72 = v23;
    uint64_t v27 = v13;
    uint64_t v28 = (char *)v13 + *(int *)(sub_10000588C(&qword_10164EDD0) + 48);
    uint64_t v54 = v16;
    uint64_t v29 = (void *)a1[3];
    *uint64_t v13 = v29;
    uint64_t v30 = (char *)a1 + OBJC_IVAR____TtC12searchpartyd24CryptoKeyStreamInspector_delay;
    uint64_t v31 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v28, v30, v31);
    uint64_t v32 = v59;
    (*(void (**)(void *, void, uint64_t))(v59 + 104))(v27, enum case for Publishers.TimeGroupingStrategy.byTime<A>(_:), v69);
    uint64_t v33 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v34 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v60, 1, 1, v33);
    sub_10000584C();
    sub_100062734(&qword_10164EDD8, &qword_10164EDC8);
    sub_1008174BC((unint64_t *)&qword_10166C020, (void (*)(uint64_t))sub_10000584C);
    id v35 = v29;
    uint64_t v36 = v61;
    uint64_t v37 = v70;
    Publisher.collect<A>(_:options:)();
    sub_10001DAB4(v34, &qword_10163C6C8);
    (*(void (**)(void *, uint64_t))(v32 + 8))(v27, v69);
    swift_release();
    uint64_t v38 = v66;
    sub_100817868(v37, v66, type metadata accessor for SharedBeaconRecord);
    unint64_t v39 = (*(unsigned __int8 *)(v64 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = a1;
    sub_10055ABB0(v38, v40 + v39);
    sub_100062734(&qword_10164EDE0, &qword_10164EDC0);
    swift_retain();
    uint64_t v41 = v63;
    uint64_t v42 = Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v36, v41);
    uint64_t v43 = (uint64_t)v55;
    uint64_t v44 = v54;
    v58(v55, v50, v54);
    swift_beginAccess();
    swift_retain();
    char v45 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v71 = a1[5];
    a1[5] = 0x8000000000000000;
    sub_100170A10(v42, v43, v45);
    a1[5] = v71;
    swift_bridgeObjectRelease();
    v56(v43, v44);
    swift_endAccess();
    swift_release();
    goto LABEL_6;
  }
  swift_retain();
  swift_bridgeObjectRelease();
LABEL_6:
  sub_100817868(v70, (uint64_t)v6, type metadata accessor for SharedBeaconRecord);
  uint64_t v46 = &v6[*(int *)(v67 + 20)];
  uint64_t v47 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v46, v68, v47);
  PassthroughSubject.send(_:)();
  swift_release();
  return sub_100817808((uint64_t)v6, type metadata accessor for CryptoKeyStreamInspector.Event);
}

uint64_t sub_100814838(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v4 = type metadata accessor for SharedBeaconRecord(0);
  __chkstk_darwin(v4);
  unsigned int v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for CryptoKeyStreamInspector.Event(0);
  uint64_t v7 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000588C((uint64_t *)&unk_10163AC90);
  __chkstk_darwin(v10 - 8);
  uint64_t v36 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v42 - 8);
  uint64_t v13 = __chkstk_darwin(v42);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v18 = *a1;
  int64_t v19 = *(void *)(*a1 + 16);
  uint64_t v20 = _swiftEmptyArrayStorage;
  uint64_t v37 = v7;
  uint64_t v35 = v18;
  if (v19)
  {
    uint64_t v32 = (char *)&v32 - v16;
    uint64_t v33 = v4;
    uint64_t v34 = v6;
    uint64_t v43 = _swiftEmptyArrayStorage;
    sub_1000B823C(0, v19, 0);
    uint64_t v21 = v18 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v40 = *(void *)(v7 + 72);
    uint64_t v22 = v42;
    do
    {
      sub_100817868(v21, (uint64_t)v9, type metadata accessor for CryptoKeyStreamInspector.Event);
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, &v9[*(int *)(v41 + 20)], v22);
      sub_100817808((uint64_t)v9, type metadata accessor for CryptoKeyStreamInspector.Event);
      uint64_t v20 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000B823C(0, v20[2] + 1, 1);
        uint64_t v20 = v43;
      }
      unint64_t v24 = v20[2];
      unint64_t v23 = v20[3];
      if (v24 >= v23 >> 1)
      {
        sub_1000B823C(v23 > 1, v24 + 1, 1);
        uint64_t v20 = v43;
      }
      v20[2] = v24 + 1;
      uint64_t v22 = v42;
      (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))((unint64_t)v20+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v24, v15, v42);
      uint64_t v43 = v20;
      v21 += v40;
      --v19;
    }
    while (v19);
    uint64_t v25 = v38;
    uint64_t v4 = v33;
    unsigned int v6 = v34;
    uint64_t v17 = v32;
  }
  else
  {
    uint64_t v25 = v38;
  }
  uint64_t v26 = v36;
  sub_1002A1124((uint64_t)v20, v36);
  swift_bridgeObjectRelease();
  uint64_t v27 = v42;
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v26, 1, v42);
  uint64_t v29 = v37;
  if (v28 == 1) {
    return sub_10001DAB4((uint64_t)v26, (uint64_t *)&unk_10163AC90);
  }
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v17, v26, v27);
  if (*(void *)(v35 + 16))
  {
    sub_100817868(v35 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80)), (uint64_t)v6, type metadata accessor for SharedBeaconRecord);
    uint64_t v31 = v25 + *(int *)(v4 + 20);
    swift_beginAccess();
    sub_100165080(v31);
    swift_endAccess();
    swift_release();
    swift_unownedRetainStrong();
    sub_100524D94((uint64_t)v6, (uint64_t)v17);
    swift_release();
    sub_100817808((uint64_t)v6, type metadata accessor for SharedBeaconRecord);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v27);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100814CF4()
{
  swift_unownedRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC12searchpartyd24CryptoKeyStreamInspector_delay;
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100814DB4()
{
  return type metadata accessor for CryptoKeyStreamInspector(0);
}

uint64_t type metadata accessor for CryptoKeyStreamInspector(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_10164EC48);
}

uint64_t sub_100814DDC()
{
  uint64_t result = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100814E94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v35 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *a2;
    unint64_t v7 = a2[1];
    sub_1000361E0(*a2, v7);
    *a1 = v6;
    a1[1] = v7;
    uint64_t v8 = (int *)type metadata accessor for SharedBeaconRecord(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID();
    uint64_t v55 = *(void *)(v12 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
    v13(v10, v11, v12);
    uint64_t v49 = v13;
    v13((char *)a1 + v8[6], (char *)a2 + v8[6], v12);
    uint64_t v14 = v8[7];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    *uint64_t v15 = *v16;
    uint64_t v53 = *((void *)v16 + 2);
    *((void *)v15 + 1) = *((void *)v16 + 1);
    *((void *)v15 + 2) = v53;
    uint64_t v17 = v8[8];
    uint64_t v18 = (uint64_t *)((char *)a1 + v17);
    int64_t v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v51 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v51;
    uint64_t v20 = v8[9];
    uint64_t v21 = (uint64_t *)((char *)a1 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = v8[10];
    uint64_t v25 = (uint64_t *)((char *)a1 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    *(uint64_t *)((char *)a1 + v8[11]) = *(uint64_t *)((char *)a2 + v8[11]);
    *(uint64_t *)((char *)a1 + v8[12]) = *(uint64_t *)((char *)a2 + v8[12]);
    *((unsigned char *)a1 + v8[13]) = *((unsigned char *)a2 + v8[13]);
    *((unsigned char *)a1 + v8[14]) = *((unsigned char *)a2 + v8[14]);
    *(uint64_t *)((char *)a1 + v8[15]) = *(uint64_t *)((char *)a2 + v8[15]);
    *((unsigned char *)a1 + v8[16]) = *((unsigned char *)a2 + v8[16]);
    *(uint64_t *)((char *)a1 + v8[17]) = *(uint64_t *)((char *)a2 + v8[17]);
    uint64_t v28 = v8[18];
    uint64_t v50 = (char *)a1 + v28;
    uint64_t v47 = (char *)a2 + v28;
    uint64_t v29 = type metadata accessor for Date();
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v52 = v30;
    v30(v50, v47, v29);
    uint64_t v31 = v8[19];
    uint64_t v32 = (char *)a1 + v31;
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
    if (v48((char *)a2 + v31, 1, v12))
    {
      uint64_t v34 = sub_10000588C(&qword_101638CF0);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      v49(v32, v33, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v32, 0, 1, v12);
    }
    uint64_t v36 = v8[20];
    uint64_t v37 = (_DWORD *)((char *)a1 + v36);
    uint64_t v38 = (_DWORD *)((char *)a2 + v36);
    uint64_t v39 = type metadata accessor for SharedBeaconRecord.PropertyListContent(0);
    uint64_t v40 = *(void *)(v39 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      uint64_t v41 = sub_10000588C((uint64_t *)&unk_101653D30);
      memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      *uint64_t v37 = *v38;
      uint64_t v42 = *(int *)(v39 + 20);
      uint64_t v43 = (char *)v37 + v42;
      uint64_t v44 = (char *)v38 + v42;
      if (v48(v44, 1, v12))
      {
        uint64_t v45 = sub_10000588C(&qword_101638CF0);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        v49(v43, v44, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v43, 0, 1, v12);
      }
      (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    v52((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20), v29);
  }
  return a1;
}

uint64_t sub_100815354(uint64_t a1, uint64_t a2)
{
  sub_10001CFB8(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v4 = (int *)type metadata accessor for SharedBeaconRecord(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(a1 + v4[6], v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + v4[18];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v18(v9, v10);
  uint64_t v11 = a1 + v4[19];
  uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v12(v11, 1, v6)) {
    v8(v11, v6);
  }
  uint64_t v13 = a1 + v4[20];
  uint64_t v14 = type metadata accessor for SharedBeaconRecord.PropertyListContent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v15 = v13 + *(int *)(v14 + 20);
    if (!v12(v15, 1, v6)) {
      v8(v15, v6);
    }
  }
  uint64_t v16 = a1 + *(int *)(a2 + 20);

  return ((uint64_t (*)(uint64_t, uint64_t))v18)(v16, v10);
}

uint64_t *sub_10081559C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  unint64_t v6 = a2[1];
  sub_1000361E0(*a2, v6);
  *a1 = v5;
  a1[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for SharedBeaconRecord(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v53 = *(void *)(v11 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  v12(v9, v10, v11);
  uint64_t v47 = v12;
  v12((char *)a1 + v7[6], (char *)a2 + v7[6], v11);
  uint64_t v13 = v7[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *uint64_t v14 = *v15;
  uint64_t v51 = *((void *)v15 + 2);
  *((void *)v14 + 1) = *((void *)v15 + 1);
  *((void *)v14 + 2) = v51;
  uint64_t v16 = v7[8];
  uint64_t v17 = (uint64_t *)((char *)a1 + v16);
  uint64_t v18 = (uint64_t *)((char *)a2 + v16);
  uint64_t v49 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v49;
  uint64_t v19 = v7[9];
  uint64_t v20 = (uint64_t *)((char *)a1 + v19);
  uint64_t v21 = (uint64_t *)((char *)a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = v7[10];
  uint64_t v24 = (uint64_t *)((char *)a1 + v23);
  uint64_t v25 = (uint64_t *)((char *)a2 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  *(uint64_t *)((char *)a1 + v7[11]) = *(uint64_t *)((char *)a2 + v7[11]);
  *(uint64_t *)((char *)a1 + v7[12]) = *(uint64_t *)((char *)a2 + v7[12]);
  *((unsigned char *)a1 + v7[13]) = *((unsigned char *)a2 + v7[13]);
  *((unsigned char *)a1 + v7[14]) = *((unsigned char *)a2 + v7[14]);
  *(uint64_t *)((char *)a1 + v7[15]) = *(uint64_t *)((char *)a2 + v7[15]);
  *((unsigned char *)a1 + v7[16]) = *((unsigned char *)a2 + v7[16]);
  *(uint64_t *)((char *)a1 + v7[17]) = *(uint64_t *)((char *)a2 + v7[17]);
  uint64_t v27 = v7[18];
  uint64_t v48 = (char *)a1 + v27;
  uint64_t v45 = (char *)a2 + v27;
  uint64_t v28 = type metadata accessor for Date();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v50 = v29;
  v29(v48, v45, v28);
  uint64_t v30 = v7[19];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
  if (v46((char *)a2 + v30, 1, v11))
  {
    uint64_t v33 = sub_10000588C(&qword_101638CF0);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    v47(v31, v32, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v31, 0, 1, v11);
  }
  uint64_t v34 = v7[20];
  uint64_t v35 = (_DWORD *)((char *)a1 + v34);
  uint64_t v36 = (_DWORD *)((char *)a2 + v34);
  uint64_t v37 = type metadata accessor for SharedBeaconRecord.PropertyListContent(0);
  uint64_t v38 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    uint64_t v39 = sub_10000588C((uint64_t *)&unk_101653D30);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    *uint64_t v35 = *v36;
    uint64_t v40 = *(int *)(v37 + 20);
    uint64_t v41 = (char *)v35 + v40;
    uint64_t v42 = (char *)v36 + v40;
    if (v46(v42, 1, v11))
    {
      uint64_t v43 = sub_10000588C(&qword_101638CF0);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      v47(v41, v42, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v41, 0, 1, v11);
    }
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  v50((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20), v28);
  return a1;
}

uint64_t *sub_100815A0C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  unint64_t v6 = a2[1];
  sub_1000361E0(*a2, v6);
  uint64_t v7 = *a1;
  unint64_t v8 = a1[1];
  *a1 = v5;
  a1[1] = v6;
  sub_10001CFB8(v7, v8);
  uint64_t v9 = (int *)type metadata accessor for SharedBeaconRecord(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v14 + 24);
  v15(v11, v12, v13);
  double v58 = v15;
  v15((char *)a1 + v9[6], (char *)a2 + v9[6], v13);
  uint64_t v16 = v9[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *uint64_t v17 = *v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  *((void *)v17 + 2) = *((void *)v18 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = v9[8];
  uint64_t v20 = (uint64_t *)((char *)a1 + v19);
  uint64_t v21 = (uint64_t *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v9[9];
  uint64_t v23 = (uint64_t *)((char *)a1 + v22);
  uint64_t v24 = (uint64_t *)((char *)a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = v9[10];
  uint64_t v26 = (uint64_t *)((char *)a1 + v25);
  uint64_t v27 = (uint64_t *)((char *)a2 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)a1 + v9[11]) = *(uint64_t *)((char *)a2 + v9[11]);
  *(uint64_t *)((char *)a1 + v9[12]) = *(uint64_t *)((char *)a2 + v9[12]);
  *((unsigned char *)a1 + v9[13]) = *((unsigned char *)a2 + v9[13]);
  *((unsigned char *)a1 + v9[14]) = *((unsigned char *)a2 + v9[14]);
  *(uint64_t *)((char *)a1 + v9[15]) = *(uint64_t *)((char *)a2 + v9[15]);
  *((unsigned char *)a1 + v9[16]) = *((unsigned char *)a2 + v9[16]);
  *(uint64_t *)((char *)a1 + v9[17]) = *(uint64_t *)((char *)a2 + v9[17]);
  uint64_t v28 = v9[18];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = type metadata accessor for Date();
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 24);
  v62(v29, v30, v31);
  uint64_t v32 = v9[19];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v61 = v14;
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v15) = v35((char *)a1 + v32, 1, v13);
  double v60 = v35;
  int v36 = v35(v34, 1, v13);
  if (v15)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v33, v34, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v33, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v33, v13);
LABEL_6:
    uint64_t v37 = sub_10000588C(&qword_101638CF0);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_7;
  }
  v58(v33, v34, v13);
LABEL_7:
  uint64_t v38 = v9[20];
  uint64_t v39 = (_DWORD *)((char *)a1 + v38);
  uint64_t v40 = (_DWORD *)((char *)a2 + v38);
  uint64_t v41 = type metadata accessor for SharedBeaconRecord.PropertyListContent(0);
  uint64_t v59 = *(void *)(v41 - 8);
  uint64_t v42 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v59 + 48);
  int v43 = v42(v39, 1, v41);
  int v44 = v42(v40, 1, v41);
  if (!v43)
  {
    if (!v44)
    {
      _DWORD *v39 = *v40;
      uint64_t v51 = *(int *)(v41 + 20);
      uint64_t v52 = (char *)v39 + v51;
      uint64_t v53 = (char *)v40 + v51;
      int v54 = v60(v52, 1, v13);
      int v55 = v60(v53, 1, v13);
      if (v54)
      {
        uint64_t v48 = a3;
        if (!v55)
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v52, v53, v13);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v52, 0, 1, v13);
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v48 = a3;
        if (!v55)
        {
          v58(v52, v53, v13);
          goto LABEL_23;
        }
        (*(void (**)(char *, uint64_t))(v61 + 8))(v52, v13);
      }
      uint64_t v56 = sub_10000588C(&qword_101638CF0);
      memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
      goto LABEL_23;
    }
    sub_100817808((uint64_t)v39, type metadata accessor for SharedBeaconRecord.PropertyListContent);
    goto LABEL_13;
  }
  if (v44)
  {
LABEL_13:
    uint64_t v50 = sub_10000588C((uint64_t *)&unk_101653D30);
    memcpy(v39, v40, *(void *)(*(void *)(v50 - 8) + 64));
    uint64_t v48 = a3;
    goto LABEL_23;
  }
  _DWORD *v39 = *v40;
  uint64_t v45 = *(int *)(v41 + 20);
  uint64_t v46 = (char *)v39 + v45;
  uint64_t v47 = (char *)v40 + v45;
  uint64_t v48 = a3;
  if (v60(v47, 1, v13))
  {
    uint64_t v49 = sub_10000588C(&qword_101638CF0);
    memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v46, v47, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v46, 0, 1, v13);
  }
  (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v59 + 56))(v39, 0, 1, v41);
LABEL_23:
  v62((char *)a1 + *(int *)(v48 + 20), (char *)a2 + *(int *)(v48 + 20), v31);
  return a1;
}

char *sub_10081606C(char *a1, char *a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v5 = (int *)type metadata accessor for SharedBeaconRecord(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = &a1[v6];
  unint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  uint64_t v11 = v7;
  uint64_t v12 = *(void *)(v9 - 8);
  v10(v11, v8, v9);
  v10(&a1[v5[6]], &a2[v5[6]], v9);
  uint64_t v13 = v5[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((void *)v14 + 2) = *((void *)v15 + 2);
  *(_OWORD *)&a1[v5[8]] = *(_OWORD *)&a2[v5[8]];
  *(_OWORD *)&a1[v5[9]] = *(_OWORD *)&a2[v5[9]];
  *(_OWORD *)&a1[v5[10]] = *(_OWORD *)&a2[v5[10]];
  *(void *)&a1[v5[11]] = *(void *)&a2[v5[11]];
  *(void *)&a1[v5[12]] = *(void *)&a2[v5[12]];
  a1[v5[13]] = a2[v5[13]];
  a1[v5[14]] = a2[v5[14]];
  *(void *)&a1[v5[15]] = *(void *)&a2[v5[15]];
  a1[v5[16]] = a2[v5[16]];
  *(void *)&a1[v5[17]] = *(void *)&a2[v5[17]];
  uint64_t v16 = v5[18];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v38 = *(void (**)(char *, char *))(*(void *)(v19 - 8) + 32);
  uint64_t v39 = v19;
  v38(v17, v18);
  uint64_t v20 = v5[19];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v35 = v10;
  uint64_t v36 = v12;
  if (v37(&a2[v20], 1, v9))
  {
    uint64_t v23 = sub_10000588C(&qword_101638CF0);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v10(v21, v22, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v9);
  }
  uint64_t v24 = v5[20];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = type metadata accessor for SharedBeaconRecord.PropertyListContent(0);
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = sub_10000588C((uint64_t *)&unk_101653D30);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
    uint64_t v30 = *(int *)(v27 + 20);
    uint64_t v31 = &v25[v30];
    uint64_t v32 = &v26[v30];
    if (v37(v32, 1, v9))
    {
      uint64_t v33 = sub_10000588C(&qword_101638CF0);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      v35(v31, v32, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v31, 0, 1, v9);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  ((void (*)(char *, char *, uint64_t))v38)(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v39);
  return a1;
}

uint64_t *sub_100816470(uint64_t *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_10001CFB8(v5, v6);
  uint64_t v7 = (int *)type metadata accessor for SharedBeaconRecord(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 40);
  v13(v9, v10, v11);
  uint64_t v64 = v13;
  v13((char *)a1 + v7[6], &a2[v7[6]], v11);
  uint64_t v14 = v7[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = &a2[v14];
  *uint64_t v15 = *v16;
  uint64_t v18 = *((void *)v16 + 1);
  uint64_t v17 = *((void *)v16 + 2);
  *((void *)v15 + 1) = v18;
  *((void *)v15 + 2) = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = v7[8];
  uint64_t v20 = (uint64_t *)((char *)a1 + v19);
  uint64_t v21 = (uint64_t *)&a2[v19];
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = v7[9];
  uint64_t v25 = (uint64_t *)((char *)a1 + v24);
  uint64_t v26 = (uint64_t *)&a2[v24];
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = v7[10];
  uint64_t v30 = (uint64_t *)((char *)a1 + v29);
  uint64_t v31 = (uint64_t *)&a2[v29];
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  void *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)a1 + v7[11]) = *(void *)&a2[v7[11]];
  *(uint64_t *)((char *)a1 + v7[12]) = *(void *)&a2[v7[12]];
  *((unsigned char *)a1 + v7[13]) = a2[v7[13]];
  *((unsigned char *)a1 + v7[14]) = a2[v7[14]];
  *(uint64_t *)((char *)a1 + v7[15]) = *(void *)&a2[v7[15]];
  *((unsigned char *)a1 + v7[16]) = a2[v7[16]];
  *(uint64_t *)((char *)a1 + v7[17]) = *(void *)&a2[v7[17]];
  uint64_t v34 = v7[18];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = &a2[v34];
  uint64_t v37 = type metadata accessor for Date();
  uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40);
  v68(v35, v36, v37);
  uint64_t v38 = v7[19];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = &a2[v38];
  uint64_t v67 = v12;
  uint64_t v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  LODWORD(v13) = v41((char *)a1 + v38, 1, v11);
  uint64_t v66 = v41;
  int v42 = v41(v40, 1, v11);
  if (v13)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v39, v40, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v39, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v39, v11);
LABEL_6:
    uint64_t v43 = sub_10000588C(&qword_101638CF0);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_7;
  }
  v64(v39, v40, v11);
LABEL_7:
  uint64_t v44 = v7[20];
  uint64_t v45 = (char *)a1 + v44;
  uint64_t v46 = &a2[v44];
  uint64_t v47 = type metadata accessor for SharedBeaconRecord.PropertyListContent(0);
  uint64_t v65 = *(void *)(v47 - 8);
  uint64_t v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
  int v49 = v48(v45, 1, v47);
  int v50 = v48(v46, 1, v47);
  if (!v49)
  {
    if (!v50)
    {
      *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
      uint64_t v57 = *(int *)(v47 + 20);
      double v58 = &v45[v57];
      uint64_t v59 = &v46[v57];
      int v60 = v66(v58, 1, v11);
      int v61 = v66(v59, 1, v11);
      if (v60)
      {
        uint64_t v54 = a3;
        if (!v61)
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v58, v59, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v58, 0, 1, v11);
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v54 = a3;
        if (!v61)
        {
          v64(v58, v59, v11);
          goto LABEL_23;
        }
        (*(void (**)(char *, uint64_t))(v67 + 8))(v58, v11);
      }
      uint64_t v62 = sub_10000588C(&qword_101638CF0);
      memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
      goto LABEL_23;
    }
    sub_100817808((uint64_t)v45, type metadata accessor for SharedBeaconRecord.PropertyListContent);
    goto LABEL_13;
  }
  if (v50)
  {
LABEL_13:
    uint64_t v56 = sub_10000588C((uint64_t *)&unk_101653D30);
    memcpy(v45, v46, *(void *)(*(void *)(v56 - 8) + 64));
    uint64_t v54 = a3;
    goto LABEL_23;
  }
  *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
  uint64_t v51 = *(int *)(v47 + 20);
  uint64_t v52 = &v45[v51];
  uint64_t v53 = &v46[v51];
  uint64_t v54 = a3;
  if (v66(v53, 1, v11))
  {
    uint64_t v55 = sub_10000588C(&qword_101638CF0);
    memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v52, v53, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v52, 0, 1, v11);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v45, 0, 1, v47);
LABEL_23:
  v68((char *)a1 + *(int *)(v54 + 20), &a2[*(int *)(v54 + 20)], v37);
  return a1;
}

uint64_t sub_100816A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100816A9C);
}

uint64_t sub_100816A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SharedBeaconRecord(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100816B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100816BA8);
}

uint64_t sub_100816BA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SharedBeaconRecord(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for CryptoKeyStreamInspector.Event(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_10164ED80);
}

uint64_t sub_100816CCC()
{
  uint64_t result = type metadata accessor for SharedBeaconRecord(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_100816D94(uint64_t a1)
{
  uint64_t v14 = a1;
  uint64_t v2 = type metadata accessor for DispatchTimeInterval();
  uint64_t v12 = *(void *)(v2 - 8);
  uint64_t v13 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (uint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000584C();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v7);
  static DispatchQoS.unspecified.getter();
  uint64_t v15 = _swiftEmptyArrayStorage;
  sub_1008174BC((unint64_t *)&qword_101638CC0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000588C((uint64_t *)&unk_1016376F0);
  sub_100062734((unint64_t *)&qword_101638CD0, (uint64_t *)&unk_1016376F0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v1[3] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v1[4] = _swiftEmptyDictionarySingleton;
  v1[5] = _swiftEmptyDictionarySingleton;
  *uint64_t v4 = 60;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v4, enum case for DispatchTimeInterval.seconds(_:), v13);
  OS_dispatch_queue.SchedulerTimeType.Stride.init(_:)();
  v1[2] = v14;
  swift_unownedRetain();
  return v1;
}

uint64_t sub_1008170C0()
{
  unint64_t v1 = (int *)type metadata accessor for SharedBeaconRecord(0);
  uint64_t v23 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v21 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v19 = *(void *)(v3 + 64);
  swift_release();
  uint64_t v24 = v0;
  uint64_t v22 = (v23 + 24) & ~v23;
  uint64_t v4 = v0 + v22;
  sub_10001CFB8(*(void *)v4, *(void *)(v4 + 8));
  uint64_t v5 = v0 + v22 + v1[5];
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  uint64_t v18 = v8;
  v8(v4 + v1[6], v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v9(v4 + v1[18], v2);
  uint64_t v10 = v4 + v1[19];
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v11(v10, 1, v6)) {
    v18(v10, v6);
  }
  uint64_t v12 = v4 + v1[20];
  uint64_t v13 = type metadata accessor for SharedBeaconRecord.PropertyListContent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    uint64_t v14 = v12 + *(int *)(v13 + 20);
    if (!v11(v14, 1, v6)) {
      v18(v14, v6);
    }
  }
  uint64_t v15 = (v22 + v21 + v20) & ~v20;
  uint64_t v16 = v15 + v19;
  v9(v24 + v15, v2);

  return _swift_deallocObject(v24, v16, v23 | v20 | 7);
}

uint64_t sub_1008173D4()
{
  uint64_t v1 = *(void *)(type metadata accessor for SharedBeaconRecord(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v5 = *(void **)(v0 + 16);
  uint64_t v6 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_100814004(v5, v0 + v2, v6);
}

uint64_t sub_1008174A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1008174B4()
{
  return swift_release();
}

uint64_t sub_1008174BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100817504()
{
  uint64_t v1 = (int *)type metadata accessor for SharedBeaconRecord(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v16 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v3 = v0 + ((v2 + 24) & ~v2);
  sub_10001CFB8(*(void *)v3, *(void *)(v3 + 8));
  uint64_t v4 = v3 + v1[5];
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v7(v3 + v1[6], v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v3 + v1[18];
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v3 + v1[19];
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v11(v10, 1, v5)) {
    v7(v10, v5);
  }
  uint64_t v12 = v3 + v1[20];
  uint64_t v13 = type metadata accessor for SharedBeaconRecord.PropertyListContent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    uint64_t v14 = v12 + *(int *)(v13 + 20);
    if (!v11(v14, 1, v5)) {
      v7(v14, v5);
    }
  }

  return _swift_deallocObject(v0, ((v2 + 24) & ~v2) + v16, v2 | 7);
}

uint64_t sub_100817794(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SharedBeaconRecord(0) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100814838(a1, v4, v5);
}

uint64_t sub_100817808(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100817868(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t SPPlaySoundContext.description.getter()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1008179C4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10170E3C8);
  sub_100010324(v0, (uint64_t)qword_10170E3C8);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100817A44()
{
  return SPPlaySoundContext.description.getter();
}

void sub_100817A4C()
{
  qword_10170E3E0 = (uint64_t)&off_1015A2A58;
}

unint64_t sub_100817A60@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100849D74(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100817A8C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100817AEC()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100817B3C()
{
  uint64_t result = 0x65755179616C702ELL;
  switch(*v0)
  {
    case 1:
      uint64_t v2 = 0x4979616C702ELL;
      return v2 & 0xFFFFFFFFFFFFLL | 0x696E000000000000;
    case 2:
      return 0x6E755279616C702ELL;
    case 3:
      uint64_t v3 = 0x4379616C702ELL;
      goto LABEL_8;
    case 4:
      uint64_t v2 = 0x49706F74732ELL;
      return v2 & 0xFFFFFFFFFFFFLL | 0x696E000000000000;
    case 5:
      uint64_t v3 = 0x43706F74732ELL;
LABEL_8:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6D6F000000000000;
      break;
    case 6:
      uint64_t result = 0x74756F656D69742ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100817C30()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10164EDE8);
  uint64_t v1 = sub_100010324(v0, (uint64_t)qword_10164EDE8);
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100010324(v0, (uint64_t)qword_10170E3C8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_100817CF8()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager____lazy_storage___commandManager);
  if (*(void *)(v0 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager____lazy_storage___commandManager))
  {
    id v2 = *(id *)(v0 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager____lazy_storage___commandManager);
  }
  else
  {
    id v3 = [objc_allocWithZone((Class)CLFindMyAccessoryManager) initWithDelegate:v0 delegateQueue:*(void *)(v0 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue)];
    *uint64_t v1 = v3;
    v1[1] = &off_10160D900;
    id v2 = v3;
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  return v2;
}

id sub_100817D98(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v3 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue;
  unint64_t v29 = sub_10000584C();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v5);
  uint64_t v10 = v2;
  static DispatchQoS.unspecified.getter();
  uint64_t v33 = _swiftEmptyArrayStorage;
  sub_10084B9A8((unint64_t *)&qword_101638CC0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000588C((uint64_t *)&unk_1016376F0);
  sub_100062734((unint64_t *)&qword_101638CD0, (uint64_t *)&unk_1016376F0);
  uint64_t v11 = v9;
  uint64_t v12 = v2;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  *(void *)&v2[v11] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v10[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_playSoundSubjects] = _swiftEmptyDictionarySingleton;
  *(void *)&v10[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_stopSoundSubjects] = _swiftEmptyDictionarySingleton;
  *(void *)&v10[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_coordinators] = _swiftEmptyDictionarySingleton;
  uint64_t v13 = &v10[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager____lazy_storage___commandManager];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_100010324(v14, (uint64_t)qword_10170E3C8);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Init SoundPlaybackManager", v17, 2u);
    swift_slowDealloc();
  }

  uint64_t v18 = v30;
  *(void *)&v10[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_beaconStore] = v30;
  uint64_t v19 = *(void **)&v12[v11];
  uint64_t v20 = type metadata accessor for OwnerCommandManager();
  swift_allocObject();
  swift_retain();
  uint64_t v21 = v31;
  swift_retain();
  id v22 = v19;
  uint64_t v23 = sub_10063D534(v18, v21, v19);
  swift_release();

  uint64_t v24 = &v10[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_findMyCommandManager];
  *((void *)v24 + 3) = v20;
  *((void *)v24 + 4) = &off_1015CE0D8;
  *(void *)uint64_t v24 = v23;
  swift_retain();

  uint64_t v25 = (objc_class *)type metadata accessor for SoundPlaybackManager();
  v32.receiver = v10;
  v32.super_class = v25;
  id v26 = [super init];
  v23[6] = &off_1015D71F0;
  swift_unknownObjectWeakAssign();
  id v27 = v26;
  sub_1008181EC();
  swift_release();

  swift_release();
  swift_release();
  return v27;
}

uint64_t sub_1008181EC()
{
  uint64_t v1 = type metadata accessor for BeaconObservation();
  uint64_t v68 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  uint64_t v69 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for WildModeAssociationRecord(0);
  uint64_t v75 = *(void *)(v73 - 8);
  uint64_t v3 = __chkstk_darwin(v73);
  uint64_t v74 = (uint64_t)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v72 = (uint64_t)&v67 - v6;
  __chkstk_darwin(v5);
  uint64_t v71 = (char *)&v67 - v7;
  uint64_t v77 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v77 - 8);
  uint64_t v9 = __chkstk_darwin(v77);
  uint64_t v76 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v67 - v11;
  uint64_t v70 = *(void *)(v0 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_beaconStore);
  uint64_t v13 = sub_100AD2AD4();
  uint64_t v14 = v13;
  uint64_t v15 = _swiftEmptyArrayStorage;
  uint64_t v84 = _swiftEmptyArrayStorage;
  uint64_t v16 = *(void *)(v13 + 16);
  if (v16)
  {
    uint64_t v67 = v12;
    unint64_t v17 = 0;
    uint64_t v18 = v13 + 32;
    while (v17 < *(void *)(v14 + 16))
    {
      sub_10001D010(v18, (uint64_t)&v81);
      uint64_t v20 = v82;
      uint64_t v19 = v83;
      sub_10001CD44(&v81, v82);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 112))(v20, v19))
      {
        sub_10001CEB0(&v81, (uint64_t)v78);
        uint64_t v21 = v84;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000B7570(0, v21[2] + 1, 1);
          uint64_t v21 = v84;
        }
        uint64_t v22 = v14;
        unint64_t v24 = v21[2];
        unint64_t v23 = v21[3];
        if (v24 >= v23 >> 1) {
          sub_1000B7570(v23 > 1, v24 + 1, 1);
        }
        uint64_t v25 = v79;
        uint64_t v26 = v80;
        uint64_t v27 = sub_1000BD078((uint64_t)v78, v79);
        __chkstk_darwin(v27);
        unint64_t v29 = (char *)&v67 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v30 + 16))(v29);
        sub_1006985B0(v24, (uint64_t)v29, (uint64_t *)&v84, v25, v26);
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v78);
        uint64_t v14 = v22;
      }
      else
      {
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v81);
      }
      ++v17;
      v18 += 40;
      if (v16 == v17)
      {
        uint64_t v15 = v84;
        uint64_t v12 = v67;
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_50;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  int64_t v31 = v15[2];
  if (v31)
  {
    v78[0] = _swiftEmptyArrayStorage;
    sub_1000B7034(0, v31, 0);
    uint64_t v32 = (uint64_t)(v15 + 4);
    do
    {
      sub_10001D010(v32, (uint64_t)&v81);
      uint64_t v33 = v82;
      uint64_t v34 = v83;
      sub_10001CD44(&v81, v82);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v34 + 8) + 8) + 32))(v33);
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v81);
      uint64_t v35 = (void *)v78[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000B7034(0, v35[2] + 1, 1);
        uint64_t v35 = (void *)v78[0];
      }
      unint64_t v37 = v35[2];
      unint64_t v36 = v35[3];
      if (v37 >= v36 >> 1)
      {
        sub_1000B7034(v36 > 1, v37 + 1, 1);
        uint64_t v35 = (void *)v78[0];
      }
      v35[2] = v37 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))((unint64_t)v35+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v37, v12, v77);
      v78[0] = v35;
      v32 += 40;
      --v31;
    }
    while (v31);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v35 = _swiftEmptyArrayStorage;
  }
  *(void *)&long long v81 = v35;
  uint64_t v38 = sub_100AE35FC();
  v78[0] = _swiftEmptyArrayStorage;
  uint64_t v39 = v38[2];
  uint64_t v40 = v77;
  uint64_t v41 = (uint64_t)v71;
  if (v39)
  {
    unint64_t v42 = 0;
    uint64_t v43 = _swiftEmptyArrayStorage;
    while (v42 < v38[2])
    {
      unint64_t v44 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
      uint64_t v45 = *(void *)(v75 + 72);
      sub_10084B940((uint64_t)v38 + v44 + v45 * v42, v41, type metadata accessor for WildModeAssociationRecord);
      if (*(unsigned char *)(v41 + *(int *)(v73 + 52)) == 3)
      {
        sub_100849DCC(v41, v72, type metadata accessor for WildModeAssociationRecord);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000B7CB0(0, v43[2] + 1, 1);
        }
        uint64_t v43 = (void *)v78[0];
        unint64_t v47 = *(void *)(v78[0] + 16);
        unint64_t v46 = *(void *)(v78[0] + 24);
        if (v47 >= v46 >> 1)
        {
          sub_1000B7CB0(v46 > 1, v47 + 1, 1);
          uint64_t v43 = (void *)v78[0];
        }
        v43[2] = v47 + 1;
        sub_100849DCC(v72, (uint64_t)v43 + v44 + v47 * v45, type metadata accessor for WildModeAssociationRecord);
        uint64_t v41 = (uint64_t)v71;
      }
      else
      {
        sub_100849E34(v41, type metadata accessor for WildModeAssociationRecord);
      }
      if (v39 == ++v42)
      {
        uint64_t v48 = (void *)v78[0];
        goto LABEL_35;
      }
    }
LABEL_50:
    __break(1u);
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
    return result;
  }
  uint64_t v48 = _swiftEmptyArrayStorage;
LABEL_35:
  swift_bridgeObjectRelease();
  int64_t v49 = v48[2];
  if (v49)
  {
    v78[0] = _swiftEmptyArrayStorage;
    sub_1000B7034(0, v49, 0);
    int v50 = v76;
    uint64_t v51 = *(unsigned __int8 *)(v75 + 80);
    uint64_t v73 = (uint64_t)v48;
    uint64_t v52 = (uint64_t)v48 + ((v51 + 32) & ~v51);
    uint64_t v53 = *(void *)(v75 + 72);
    do
    {
      uint64_t v54 = v74;
      sub_10084B940(v52, v74, type metadata accessor for WildModeAssociationRecord);
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v50, v54, v40);
      sub_100849E34(v54, type metadata accessor for WildModeAssociationRecord);
      uint64_t v55 = (void *)v78[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000B7034(0, v55[2] + 1, 1);
        uint64_t v55 = (void *)v78[0];
      }
      unint64_t v57 = v55[2];
      unint64_t v56 = v55[3];
      double v58 = v76;
      if (v57 >= v56 >> 1)
      {
        sub_1000B7034(v56 > 1, v57 + 1, 1);
        double v58 = v76;
        uint64_t v55 = (void *)v78[0];
      }
      v55[2] = v57 + 1;
      unint64_t v59 = (unint64_t)v55
          + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
          + *(void *)(v8 + 72) * v57;
      int v50 = v58;
      uint64_t v40 = v77;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v59, v58, v77);
      v78[0] = v55;
      v52 += v53;
      --v49;
    }
    while (v49);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v55 = _swiftEmptyArrayStorage;
  }
  sub_100442D9C((uint64_t)v55);
  uint64_t v60 = swift_bridgeObjectRetain();
  int v61 = sub_100846178(v60, &off_1015A1F00);
  swift_bridgeObjectRelease();
  uint64_t v62 = v61[2];
  uint64_t v63 = (uint64_t)v69;
  if (v62)
  {
    uint64_t v64 = (uint64_t)v61 + ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80));
    uint64_t v65 = *(void *)(v68 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_10084B940(v64, v63, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      sub_100819128(v63);
      sub_100849E34(v63, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      v64 += v65;
      --v62;
    }
    while (v62);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_100A9E7EC(10);
}

uint64_t sub_100818B08@<X0>(size_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  uint64_t v8 = sub_10000588C((uint64_t *)&unk_101655530);
  __chkstk_darwin(v8 - 8);
  uint64_t v51 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BeaconObservation();
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v56 = (uint64_t)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v45 - v14;
  __chkstk_darwin(v13);
  uint64_t v48 = (uint64_t)&v45 - v16;
  if (qword_101636CB8 != -1) {
LABEL_36:
  }
    swift_once();
  sub_10000588C(&qword_101655540);
  OS_dispatch_queue.sync<A>(execute:)();
  unint64_t v49 = v4;
  uint64_t v17 = v61;
  if (*(void *)(v61 + 16) && (unint64_t v18 = sub_1007240CC(a1), (v19 & 1) != 0))
  {
    uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_1007100C0(v20);
    swift_bridgeObjectRelease();
    a1 = sub_100B752E8((uint64_t)v21);
    swift_release();
    uint64_t v22 = _swiftEmptyArrayStorage;
    uint64_t v62 = _swiftEmptyArrayStorage;
    uint64_t v55 = *(void *)(a1 + 16);
    if (v55)
    {
      unint64_t v46 = a2;
      uint64_t v47 = a3;
      unint64_t v23 = 0;
      a3 = -1;
      a2 = qword_10136A7D0;
      uint64_t v53 = v15;
      uint64_t v54 = v10;
      size_t v52 = a1;
      while (1)
      {
        if (v23 >= *(void *)(a1 + 16))
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v24 = *(void *)(v57 + 72);
        unint64_t v59 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
        unint64_t v60 = v23 + 1;
        uint64_t v58 = v24;
        sub_10084B940(a1 + v59 + v24 * v23, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        sub_1004DCCB0();
        uint64_t v25 = Set.init(minimumCapacity:)();
        uint64_t v26 = 0;
        for (uint64_t i = v25 + 56; ; uint64_t i = v25 + 56)
        {
          while (1)
          {
            uint64_t v28 = *((char *)&off_10159F648 + v26++ + 32);
            Hasher.init(_seed:)();
            Swift::UInt v29 = qword_10136A7D0[v28];
            Hasher._combine(_:)(v29);
            Swift::Int v30 = Hasher._finalize()();
            uint64_t v31 = -1 << *(unsigned char *)(v25 + 32);
            unint64_t v4 = v30 & ~v31;
            if (((*(void *)(i + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
              goto LABEL_17;
            }
            uint64_t v32 = *(void *)(v25 + 48);
            if (qword_10136A7D0[*(char *)(v32 + v4)] != v29) {
              break;
            }
LABEL_10:
            if (v26 == 7) {
              goto LABEL_19;
            }
          }
          uint64_t v33 = ~v31;
          while (1)
          {
            unint64_t v4 = (v4 + 1) & v33;
            if (((*(void *)(i + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
              break;
            }
            if (qword_10136A7D0[*(char *)(v32 + v4)] == v29) {
              goto LABEL_10;
            }
          }
LABEL_17:
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v61 = v25;
          sub_100DE20D8(v28, v4, isUniquelyReferenced_nonNull_native);
          uint64_t v25 = v61;
          swift_bridgeObjectRelease();
          if (v26 == 7) {
            break;
          }
        }
LABEL_19:
        uint64_t v15 = v53;
        uint64_t v10 = v54;
        BOOL v35 = sub_100DC7BFC(v53[*(int *)(v54 + 24)], v25);
        swift_bridgeObjectRelease();
        if (v35)
        {
          sub_100849DCC((uint64_t)v15, v56, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          unint64_t v36 = v62;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1000B77F0(0, v36[2] + 1, 1);
            unint64_t v36 = v62;
          }
          uint64_t v37 = v58;
          unint64_t v4 = v59;
          unint64_t v39 = v36[2];
          unint64_t v38 = v36[3];
          if (v39 >= v38 >> 1)
          {
            sub_1000B77F0(v38 > 1, v39 + 1, 1);
            unint64_t v36 = v62;
          }
          void v36[2] = v39 + 1;
          sub_100849DCC(v56, (uint64_t)v36 + v4 + v39 * v37, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        }
        else
        {
          sub_100849E34((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        }
        a1 = v52;
        unint64_t v23 = v60;
        if (v60 == v55)
        {
          uint64_t v22 = v62;
          a3 = v47;
          a2 = v46;
          break;
        }
      }
    }
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = _swiftEmptyArrayStorage;
  }
  uint64_t v40 = v51;
  sub_100E4D5E0((uint64_t)v22, v51);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v40, 1, v10) == 1)
  {
    sub_10001DAB4(v40, (uint64_t *)&unk_101655530);
LABEL_33:
    uint64_t v43 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56))(a3, v43, 1, v10);
  }
  uint64_t v41 = v40;
  uint64_t v42 = v48;
  sub_100849DCC(v41, v48, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  if (!sub_1002738F8(*(unsigned __int8 *)(v42 + *(int *)(v10 + 24)), (uint64_t)a2))
  {
    sub_100849E34(v42, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    goto LABEL_33;
  }
  sub_100849DCC(v42, a3, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  uint64_t v43 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56))(a3, v43, 1, v10);
}

uint64_t sub_100819128(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for BeaconObservation();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  uint64_t v35 = v4;
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v36 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v11;
  uint64_t v13 = *(void (**)(void))(v11 + 16);
  uint64_t v38 = v14;
  uint64_t v33 = v13;
  v13();
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_100010324(v15, (uint64_t)qword_10170E3C8);
  sub_10084B940(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    unint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v31 = v7;
    uint64_t v40 = v19;
    *(_DWORD *)unint64_t v18 = 136315138;
    uint64_t v32 = v1;
    uint64_t v20 = sub_10096C440();
    uint64_t v39 = sub_1008FA0F0(v20, v21, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100849E34((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Found %s. Force completion so we're not stuck forever", v18, 0xCu);
    swift_arrayDestroy();
    uint64_t v7 = v31;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100849E34((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  }

  if (qword_101636CB8 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_10170E330;
  unint64_t v23 = v36;
  uint64_t v24 = v38;
  ((void (*)(char *, char *, uint64_t))v33)(v7, v36, v38);
  uint64_t v25 = v34;
  static Date.trustedNow.getter((uint64_t)&v7[*(int *)(v34 + 20)]);
  v7[*(int *)(v25 + 24)] = 29;
  sub_10000588C(&qword_10163A778);
  unint64_t v26 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_101342130;
  sub_10084B940((uint64_t)v7, v27 + v26, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  uint64_t v28 = type metadata accessor for Transaction();
  __chkstk_darwin(v28);
  *(&v30 - 4) = v22;
  *(&v30 - 3) = v27;
  *(&v30 - 2) = 0;
  *(&v30 - 1) = 0;
  static Transaction.named<A>(_:with:)();
  swift_bridgeObjectRelease();
  sub_100849E34((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v23, v24);
}

uint64_t sub_1008195DC(void (*a1)(void, void), void (*a2)(void, void), void (*a3)(void *), void (*a4)(void *))
{
  uint64_t v141 = a3;
  uint64_t v142 = a4;
  uint64_t v134 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v145 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  uint64_t v131 = &v112[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v132 = *(void *)(v7 - 8);
  uint64_t v133 = v7;
  __chkstk_darwin(v7);
  uint64_t v130 = &v112[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10000588C(&qword_10163B9F0);
  __chkstk_darwin(v9 - 8);
  os_log_t v122 = &v112[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v126 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v129 = *(void *)(v126 - 8);
  uint64_t v11 = __chkstk_darwin(v126);
  uint64_t v118 = &v112[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v123 = &v112[-v14];
  uint64_t v117 = v15;
  __chkstk_darwin(v13);
  uint64_t v124 = &v112[-v16];
  uint64_t v17 = sub_10000588C(&qword_10163BB20);
  __chkstk_darwin(v17 - 8);
  uint64_t v136 = &v112[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v143 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v135 = *(void *)(v143 - 8);
  uint64_t v19 = __chkstk_darwin(v143);
  uint64_t v116 = &v112[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  uint64_t v22 = &v112[-v21];
  uint64_t v23 = type metadata accessor for UUID();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v121 = &v112[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = __chkstk_darwin(v25);
  unint64_t v128 = &v112[-v28];
  uint64_t v29 = __chkstk_darwin(v27);
  os_log_type_t v119 = &v112[-v30];
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = &v112[-v32];
  uint64_t v127 = v34;
  __chkstk_darwin(v31);
  unint64_t v36 = &v112[-v35];
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v37 = type metadata accessor for Logger();
  uint64_t v38 = sub_100010324(v37, (uint64_t)qword_10170E3C8);
  uint64_t v39 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v137 = a1;
  v39(v36, (uint64_t)a1, v23);
  uint64_t v139 = v24 + 16;
  uint64_t v140 = a2;
  uint64_t v138 = v39;
  v39(v33, (uint64_t)a2, v23);
  uint64_t v120 = v38;
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.default.getter();
  int v42 = v41;
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v43 = swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    uint64_t v114 = v44;
    *(_DWORD *)uint64_t v43 = 141558531;
    uint64_t v146 = 1752392040;
    id aBlock = (void *)v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v43 + 12) = 2081;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v125 = v22;
    int v113 = v42;
    uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v146 = sub_1008FA0F0(v45, v46, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v115 = v24;
    uint64_t v47 = *(void (**)(unsigned char *, uint64_t))(v24 + 8);
    v47(v36, v23);
    *(_WORD *)(v43 + 22) = 2082;
    uint64_t v22 = v125;
    uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v146 = sub_1008FA0F0(v48, v49, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v47(v33, v23);
    int v50 = v47;
    _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v113, "Connect to %{private,mask.hash}s commandId: %{public}s.", (uint8_t *)v43, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v51 = v145;
    swift_slowDealloc();

    uint64_t v24 = v115;
  }
  else
  {
    int v50 = *(void (**)(unsigned char *, uint64_t))(v24 + 8);
    v50(v36, v23);
    v50(v33, v23);

    uint64_t v51 = v145;
  }
  size_t v52 = v144;
  uint64_t v53 = v136;
  uint64_t v54 = v137;
  sub_100AE75E0((uint64_t)v137, (uint64_t)v136);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v135 + 48))(v53, 1, v143) == 1)
  {
    sub_10001DAB4((uint64_t)v53, &qword_10163BB20);
    uint64_t v143 = *(void *)&v52[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue];
    uint64_t v55 = v128;
    uint64_t v56 = v138;
    v138(v128, (uint64_t)v54, v23);
    uint64_t v57 = v121;
    v56(v121, (uint64_t)v140, v23);
    uint64_t v58 = *(unsigned __int8 *)(v24 + 80);
    uint64_t v59 = (v58 + 24) & ~v58;
    uint64_t v60 = (v127 + v58 + v59) & ~v58;
    uint64_t v61 = v24;
    uint64_t v62 = v23;
    unint64_t v63 = (v127 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v64 = swift_allocObject();
    *(void *)(v64 + 16) = v52;
    uint64_t v65 = v64 + v59;
    uint64_t v66 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v61 + 32);
    v66(v65, v55, v62);
    v66(v64 + v60, v57, v62);
    uint64_t v67 = (void (**)(void *))(v64 + v63);
    uint64_t v68 = v142;
    char *v67 = v141;
    v67[1] = v68;
    uint64_t v151 = sub_10084B378;
    uint64_t v152 = v64;
    id aBlock = _NSConcreteStackBlock;
    uint64_t v148 = 1107296256;
    uint64_t v149 = sub_1004B5480;
    unint64_t v150 = &unk_1015D7E98;
    uint64_t v69 = _Block_copy(&aBlock);
    uint64_t v70 = v52;
    swift_retain();
    uint64_t v71 = v130;
    static DispatchQoS.unspecified.getter();
    uint64_t v146 = (uint64_t)_swiftEmptyArrayStorage;
    sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    uint64_t v72 = v131;
    uint64_t v73 = v134;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v69);
    (*(void (**)(unsigned char *, uint64_t))(v51 + 8))(v72, v73);
    (*(void (**)(unsigned char *, uint64_t))(v132 + 8))(v71, v133);
    return swift_release();
  }
  sub_100849DCC((uint64_t)v53, (uint64_t)v22, type metadata accessor for OwnedBeaconGroup);
  uint64_t v74 = v122;
  sub_100AA33CC((uint64_t)v22, (uint64_t)v122);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v129 + 48))(v74, 1, v126) != 1)
  {
    uint64_t v125 = v22;
    uint64_t v81 = (uint64_t)v74;
    uint64_t v82 = v124;
    sub_100849DCC(v81, (uint64_t)v124, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    sub_10084B940((uint64_t)v82, (uint64_t)v123, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v83 = v119;
    v138(v119, (uint64_t)v140, v23);
    uint64_t v84 = Logger.logObject.getter();
    os_log_type_t v85 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v84, v85))
    {
      uint64_t v86 = swift_slowAlloc();
      uint64_t v87 = swift_slowAlloc();
      uint64_t v143 = v87;
      *(_DWORD *)uint64_t v86 = 141558531;
      uint64_t v146 = 1752392040;
      id aBlock = (void *)v87;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v86 + 12) = 2081;
      unint64_t v88 = v123;
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v137 = (void (*)(void, void))v50;
      uint64_t v115 = v24;
      uint64_t v89 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v146 = sub_1008FA0F0(v89, v90, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100849E34((uint64_t)v88, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      *(_WORD *)(v86 + 22) = 2082;
      uint64_t v91 = v119;
      uint64_t v24 = v115;
      uint64_t v92 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v146 = sub_1008FA0F0(v92, v93, (uint64_t *)&aBlock);
      size_t v52 = v144;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v137(v91, v23);
      _os_log_impl((void *)&_mh_execute_header, v84, v85, "Connect to primary beacon %{private,mask.hash}s commandId: %{public}s.", (uint8_t *)v86, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100849E34((uint64_t)v123, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      v50(v83, v23);
    }

    os_log_type_t v144 = *(char **)&v52[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue];
    uint64_t v96 = v124;
    id v97 = v118;
    sub_10084B940((uint64_t)v124, (uint64_t)v118, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    unint64_t v98 = v128;
    v138(v128, (uint64_t)v140, v23);
    unint64_t v99 = (*(unsigned __int8 *)(v129 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80);
    unint64_t v100 = (v117 + *(unsigned __int8 *)(v24 + 80) + v99) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    uint64_t v101 = v24;
    uint64_t v102 = v23;
    unint64_t v103 = (v127 + v100 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v104 = swift_allocObject();
    *(void *)(v104 + 16) = v52;
    sub_100849DCC((uint64_t)v97, v104 + v99, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v101 + 32))(v104 + v100, v98, v102);
    uint64_t v105 = (void (**)(void *))(v104 + v103);
    uint64_t v106 = v142;
    *uint64_t v105 = v141;
    v105[1] = v106;
    uint64_t v151 = sub_10084B840;
    uint64_t v152 = v104;
    id aBlock = _NSConcreteStackBlock;
    uint64_t v148 = 1107296256;
    uint64_t v149 = sub_1004B5480;
    unint64_t v150 = &unk_1015D7EE8;
    uint64_t v107 = _Block_copy(&aBlock);
    uint64_t v108 = v52;
    swift_retain();
    uint64_t v109 = v130;
    static DispatchQoS.unspecified.getter();
    uint64_t v146 = (uint64_t)_swiftEmptyArrayStorage;
    sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    unint64_t v110 = v131;
    uint64_t v111 = v134;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v107);
    (*(void (**)(unsigned char *, uint64_t))(v145 + 8))(v110, v111);
    (*(void (**)(unsigned char *, uint64_t))(v132 + 8))(v109, v133);
    sub_100849E34((uint64_t)v96, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    sub_100849E34((uint64_t)v125, type metadata accessor for OwnedBeaconGroup);
    return swift_release();
  }
  sub_10001DAB4((uint64_t)v74, &qword_10163B9F0);
  uint64_t v75 = v116;
  sub_10084B940((uint64_t)v22, (uint64_t)v116, type metadata accessor for OwnedBeaconGroup);
  uint64_t v76 = Logger.logObject.getter();
  os_log_type_t v77 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v76, v77))
  {
    uint64_t v78 = (uint8_t *)swift_slowAlloc();
    id aBlock = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v78 = 136446210;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v79 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v146 = sub_1008FA0F0(v79, v80, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100849E34((uint64_t)v75, type metadata accessor for OwnedBeaconGroup);
    _os_log_impl((void *)&_mh_execute_header, v76, v77, "No primary beacon for group %{public}s. Cannot connect!", v78, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100849E34((uint64_t)v75, type metadata accessor for OwnedBeaconGroup);
  }

  type metadata accessor for CommandError(0);
  uint64_t v146 = 3;
  sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
  sub_10084B9A8((unint64_t *)&unk_101651190, type metadata accessor for CommandError);
  _BridgedStoredNSError.init(_:userInfo:)();
  uint64_t v94 = aBlock;
  v141(aBlock);

  return sub_100849E34((uint64_t)v22, type metadata accessor for OwnedBeaconGroup);
}

uint64_t sub_10081A868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_10001CD44((void *)(a1 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_findMyCommandManager), *(void *)(a1 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_findMyCommandManager + 24));
  uint64_t v9 = type metadata accessor for OwnedBeaconRecord();
  return sub_10063B560(a2 + *(int *)(v9 + 20), a3, a4, a5);
}

uint64_t sub_10081A8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a3;
  uint64_t v33 = a4;
  uint64_t v31 = a1;
  uint64_t v36 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v35 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v31 - v15;
  uint64_t v34 = *(void *)&v4[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue];
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v17((char *)&v31 - v15, v31, v10);
  v17(v14, a2, v10);
  uint64_t v18 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v19 = (v18 + 24) & ~v18;
  uint64_t v20 = (v12 + v18 + v19) & ~v18;
  unint64_t v21 = (v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v4;
  uint64_t v23 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  v23(v22 + v19, v16, v10);
  v23(v22 + v20, v14, v10);
  uint64_t v24 = (void *)(v22 + v21);
  uint64_t v25 = v33;
  *uint64_t v24 = v32;
  v24[1] = v25;
  aBlock[4] = sub_10084AF88;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015D7DF8;
  uint64_t v26 = _Block_copy(aBlock);
  uint64_t v27 = v4;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v40 = _swiftEmptyArrayStorage;
  sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v29 = v35;
  uint64_t v28 = v36;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v28);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v38);
  return swift_release();
}

uint64_t sub_10081ACF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v29 = a5;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v27 - v15;
  uint64_t v28 = *sub_10001CD44((void *)(a1 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_findMyCommandManager), *(void *)(a1 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_findMyCommandManager + 24));
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a4;
  *(void *)(v17 + 24) = a5;
  uint64_t v30 = type metadata accessor for Transaction();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v18(v16, a2, v10);
  v18(v14, a3, v10);
  uint64_t v19 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v20 = (v19 + 24) & ~v19;
  unint64_t v21 = (v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = (v19 + v21 + 16) & ~v19;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v28;
  uint64_t v24 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  v24(v23 + v20, v16, v10);
  uint64_t v25 = (uint64_t (**)(uint64_t))(v23 + v21);
  *uint64_t v25 = sub_10063C7B0;
  v25[1] = (uint64_t (*)(uint64_t))v17;
  v24(v23 + v22, v14, v10);
  swift_retain();
  swift_retain();
  swift_retain();
  static Transaction.asyncTask(name:block:)();
  swift_release();
  return swift_release();
}

uint64_t sub_10081AF4C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), void *a5, double a6)
{
  v171 = a5;
  uint64_t v166 = a4;
  uint64_t v168 = a3;
  uint64_t v165 = type metadata accessor for BeaconObservation();
  uint64_t v167 = *(void *)(v165 - 8);
  uint64_t v10 = __chkstk_darwin(v165);
  v170 = (char *)v141 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v161 = (uint64_t)v141 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v162 = (char *)v141 - v15;
  __chkstk_darwin(v14);
  uint64_t v151 = (uint64_t)v141 - v16;
  uint64_t v17 = sub_10000588C((uint64_t *)&unk_101655530);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  v163 = (char *)v141 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v154 = (char *)v141 - v21;
  __chkstk_darwin(v20);
  uint64_t v157 = (uint64_t)v141 - v22;
  uint64_t v23 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v23 - 8);
  unint64_t v156 = (unint64_t)v141 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = type metadata accessor for UUID();
  uint64_t v164 = *(void *)(v169 - 8);
  uint64_t v25 = __chkstk_darwin(v169);
  uint64_t v153 = (char *)v141 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  unint64_t v150 = (char *)v141 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v152 = (char *)v141 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v159 = (char *)v141 - v32;
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)v141 - v33;
  uint64_t v35 = sub_10000588C(&qword_10163BB20);
  __chkstk_darwin(v35 - 8);
  uint64_t v37 = (char *)v141 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v155 = (uint64_t)v141 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v44 = (char *)v141 - v43;
  __chkstk_darwin(v42);
  unint64_t v46 = (char *)v141 - v45;
  sub_100AE75E0(a2, (uint64_t)v37);
  uint64_t v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  v160 = (char *)v38;
  if (v47(v37, 1, v38) == 1)
  {
    sub_10001DAB4((uint64_t)v37, &qword_10163BB20);
    return sub_10081C928(a1, a2, v168, (uint64_t)v166, v171, a6);
  }
  uint64_t v149 = v6;
  uint64_t v146 = a2;
  unint64_t v49 = v171;
  uint64_t v158 = a1;
  sub_100849DCC((uint64_t)v37, (uint64_t)v46, type metadata accessor for OwnedBeaconGroup);
  int v50 = v46;
  if (qword_101636CF8 != -1) {
    goto LABEL_77;
  }
LABEL_4:
  uint64_t v51 = type metadata accessor for Logger();
  uint64_t v52 = sub_100010324(v51, (uint64_t)qword_10170E3C8);
  sub_10084B940((uint64_t)v50, (uint64_t)v44, type metadata accessor for OwnedBeaconGroup);
  uint64_t v53 = v164;
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v164 + 16);
  uint64_t v55 = v169;
  uint64_t v144 = v164 + 16;
  uint64_t v143 = v54;
  v54(v34, v158, v169);
  uint64_t v147 = v52;
  uint64_t v56 = Logger.logObject.getter();
  os_log_type_t v57 = static os_log_type_t.default.getter();
  BOOL v58 = os_log_type_enabled(v56, v57);
  uint64_t v148 = v50;
  if (v58)
  {
    uint64_t v59 = swift_slowAlloc();
    uint64_t v142 = (char *)swift_slowAlloc();
    v172 = v142;
    *(_DWORD *)uint64_t v59 = 136446722;
    uint64_t v145 = (void (*)(char *, uint64_t))sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v60 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v173 = sub_1008FA0F0(v60, v61, (uint64_t *)&v172);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100849E34((uint64_t)v44, type metadata accessor for OwnedBeaconGroup);
    *(_WORD *)(v59 + 12) = 2080;
    unint64_t v62 = 0xE800000000000000;
    uint64_t v63 = 0x746C75616665642ELL;
    uint64_t v64 = v164;
    uint64_t v65 = v149;
    switch(v168)
    {
      case 0:
        break;
      case 1:
        uint64_t v63 = 0x676E69676E61722ELL;
        break;
      case 2:
        unint64_t v62 = 0xE900000000000067;
        goto LABEL_13;
      case 3:
        unint64_t v62 = 0x80000001013FD5F0;
        uint64_t v63 = 0xD000000000000010;
        break;
      case 4:
        unint64_t v62 = 0xEF64656D7269666ELL;
        uint64_t v63 = 0x6F4365756575712ELL;
        break;
      case 5:
        unint64_t v62 = 0xEE0074726F685367;
LABEL_13:
        uint64_t v63 = 0x6E696B636172742ELL;
        break;
      default:
        unint64_t v62 = 0xE700000000000000;
        uint64_t v63 = 0x6E776F6E6B6E75;
        uint64_t v64 = v164;
        uint64_t v65 = v149;
        break;
    }
    uint64_t v173 = sub_1008FA0F0(v63, v62, (uint64_t *)&v172);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v59 + 22) = 2082;
    uint64_t v66 = v169;
    uint64_t v67 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v173 = sub_1008FA0F0(v67, v68, (uint64_t *)&v172);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v145 = *(void (**)(char *, uint64_t))(v64 + 8);
    v145(v34, v66);
    _os_log_impl((void *)&_mh_execute_header, v56, v57, "Play sound for group %{public}s with context %s. CommandId %{public}s", (uint8_t *)v59, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v49 = v171;
    int v50 = v148;
  }
  else
  {
    sub_100849E34((uint64_t)v44, type metadata accessor for OwnedBeaconGroup);
    uint64_t v145 = *(void (**)(char *, uint64_t))(v53 + 8);
    v145(v34, v55);

    uint64_t v64 = v53;
    uint64_t v65 = v149;
  }
  uint64_t v69 = sub_1004D1434();
  id v70 = v65;
  char v71 = sub_100846CF8(v69, (uint64_t)v70);
  swift_bridgeObjectRelease();

  uint64_t v34 = v170;
  if ((v71 & 1) == 0)
  {
    uint64_t v81 = (uint64_t)v50;
    uint64_t v82 = v155;
    sub_10084B940((uint64_t)v50, v155, type metadata accessor for OwnedBeaconGroup);
    uint64_t v83 = Logger.logObject.getter();
    os_log_type_t v84 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v83, v84))
    {
      os_log_type_t v85 = (uint8_t *)swift_slowAlloc();
      v172 = (char *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v85 = 136446210;
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v86 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v173 = sub_1008FA0F0(v86, v87, (uint64_t *)&v172);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100849E34(v82, type metadata accessor for OwnedBeaconGroup);
      _os_log_impl((void *)&_mh_execute_header, v83, v84, "Queue not needed for group %{public}s", v85, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100849E34(v82, type metadata accessor for OwnedBeaconGroup);
    }

    sub_10081E5B4(v158, v81, v168, (uint64_t)v166, (uint64_t)v171, a6);
    uint64_t v114 = v81;
    return sub_100849E34(v114, type metadata accessor for OwnedBeaconGroup);
  }
  uint64_t v72 = sub_1004D1434();
  uint64_t v73 = v156;
  sub_10115B15C(v72, v156);
  swift_bridgeObjectRelease();
  uint64_t v74 = v169;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v73, 1, v169) == 1)
  {
    sub_10001DAB4(v73, &qword_101638CF0);
    uint64_t v75 = v153;
    v143(v153, v146, v74);
    uint64_t v76 = Logger.logObject.getter();
    os_log_type_t v77 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = (uint8_t *)swift_slowAlloc();
      v172 = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v78 = 136315138;
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v79 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v173 = sub_1008FA0F0(v79, v80, (uint64_t *)&v172);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v145(v75, v74);
      _os_log_impl((void *)&_mh_execute_header, v76, v77, "Group %s has no member!", v78, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v145(v75, v74);
    }

    uint64_t v115 = v166;
    type metadata accessor for CommandError(0);
    uint64_t v173 = 0;
    sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
    sub_10084B9A8((unint64_t *)&unk_101651190, type metadata accessor for CommandError);
    _BridgedStoredNSError.init(_:userInfo:)();
    uint64_t v116 = v172;
    v115(v172);

LABEL_50:
    uint64_t v114 = (uint64_t)v148;
    return sub_100849E34(v114, type metadata accessor for OwnedBeaconGroup);
  }
  v141[1] = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v159, v73, v74);
  if (qword_101636CB8 != -1) {
    swift_once();
  }
  sub_10000588C(&qword_101655540);
  OS_dispatch_queue.sync<A>(execute:)();
  unint64_t v88 = v172;
  uint64_t v89 = v157;
  uint64_t v90 = (uint64_t)v154;
  if (!*((void *)v172 + 2))
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = (char *)_swiftEmptyArrayStorage;
    uint64_t v92 = (uint64_t)v163;
    goto LABEL_55;
  }
  unint64_t v91 = sub_1007240CC((uint64_t)v159);
  uint64_t v92 = (uint64_t)v163;
  if ((v93 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_55;
  }
  uint64_t v94 = *(void *)(v88[7] + 8 * v91);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v95 = sub_1007100C0(v94);
  swift_bridgeObjectRelease();
  size_t v96 = sub_100B752E8((uint64_t)v95);
  swift_release();
  uint64_t v44 = (char *)_swiftEmptyArrayStorage;
  uint64_t v173 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v153 = *(char **)(v96 + 16);
  if (v153)
  {
    id v97 = 0;
    int v50 = qword_10136A7D0;
    unint64_t v49 = v162;
    uint64_t v149 = (void *)v96;
    while (1)
    {
      if ((unint64_t)v97 >= *(void *)(v96 + 16))
      {
        __break(1u);
LABEL_77:
        swift_once();
        goto LABEL_4;
      }
      unint64_t v98 = (*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80);
      uint64_t v99 = *(void *)(v167 + 72);
      v160 = v97 + 1;
      unint64_t v156 = v98;
      uint64_t v155 = v99;
      sub_10084B940(v96 + v98 + v99 * (void)v97, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      sub_1004DCCB0();
      uint64_t v44 = (char *)Set.init(minimumCapacity:)();
      uint64_t v100 = 0;
      for (uint64_t i = v44 + 56; ; uint64_t i = v44 + 56)
      {
        while (1)
        {
          uint64_t v102 = *((char *)&off_1015A17B0 + v100++ + 32);
          Hasher.init(_seed:)();
          Swift::UInt v103 = qword_10136A7D0[v102];
          Hasher._combine(_:)(v103);
          Swift::Int v104 = Hasher._finalize()();
          uint64_t v105 = -1 << v44[32];
          unint64_t v106 = v104 & ~v105;
          if (((*(void *)&i[(v106 >> 3) & 0xFFFFFFFFFFFFFF8] >> v106) & 1) == 0) {
            goto LABEL_38;
          }
          uint64_t v107 = *((void *)v44 + 6);
          if (qword_10136A7D0[*(char *)(v107 + v106)] != v103) {
            break;
          }
LABEL_31:
          if (v100 == 7) {
            goto LABEL_40;
          }
        }
        uint64_t v108 = ~v105;
        while (1)
        {
          unint64_t v106 = (v106 + 1) & v108;
          if (((*(void *)&i[(v106 >> 3) & 0xFFFFFFFFFFFFFF8] >> v106) & 1) == 0) {
            break;
          }
          if (qword_10136A7D0[*(char *)(v107 + v106)] == v103) {
            goto LABEL_31;
          }
        }
LABEL_38:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v172 = v44;
        sub_100DE20D8(v102, v106, isUniquelyReferenced_nonNull_native);
        uint64_t v44 = v172;
        swift_bridgeObjectRelease();
        if (v100 == 7) {
          break;
        }
      }
LABEL_40:
      unint64_t v49 = v162;
      BOOL v110 = sub_100DC7BFC(v162[*(int *)(v165 + 24)], (uint64_t)v44);
      swift_bridgeObjectRelease();
      if (v110)
      {
        sub_100849DCC((uint64_t)v49, v161, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        uint64_t v44 = (char *)v173;
        char v111 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v34 = v170;
        size_t v96 = (size_t)v149;
        if ((v111 & 1) == 0)
        {
          sub_1000B77F0(0, *((void *)v44 + 2) + 1, 1);
          uint64_t v44 = (char *)v173;
        }
        unint64_t v113 = *((void *)v44 + 2);
        unint64_t v112 = *((void *)v44 + 3);
        if (v113 >= v112 >> 1)
        {
          sub_1000B77F0(v112 > 1, v113 + 1, 1);
          uint64_t v44 = (char *)v173;
        }
        *((void *)v44 + 2) = v113 + 1;
        sub_100849DCC(v161, (uint64_t)&v44[v156 + v113 * v155], (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        uint64_t v92 = (uint64_t)v163;
      }
      else
      {
        sub_100849E34((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        uint64_t v92 = (uint64_t)v163;
        uint64_t v34 = v170;
        size_t v96 = (size_t)v149;
      }
      id v97 = v160;
      if (v160 == v153)
      {
        uint64_t v44 = (char *)v173;
        unint64_t v49 = v171;
        int v50 = v148;
        uint64_t v74 = v169;
        uint64_t v89 = v157;
        uint64_t v90 = (uint64_t)v154;
        break;
      }
    }
  }
  swift_release();
LABEL_55:
  sub_100E4D5E0((uint64_t)v44, v89);
  swift_bridgeObjectRelease();
  sub_10001D074(v89, v90, (uint64_t *)&unk_101655530);
  uint64_t v117 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48);
  uint64_t v118 = v165;
  v167 += 48;
  if (v117(v90, 1, v165) == 1)
  {
    sub_10001DAB4(v90, (uint64_t *)&unk_101655530);
  }
  else
  {
    uint64_t v119 = v151;
    sub_100849DCC(v90, v151, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    sub_10084B940(v119, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    uint64_t v120 = Logger.logObject.getter();
    os_log_type_t v121 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v120, v121))
    {
      os_log_t v122 = (uint8_t *)swift_slowAlloc();
      v172 = (char *)swift_slowAlloc();
      *(_DWORD *)os_log_t v122 = 136315138;
      uint64_t v123 = sub_10096C440();
      uint64_t v173 = sub_1008FA0F0(v123, v124, (uint64_t *)&v172);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100849E34((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      _os_log_impl((void *)&_mh_execute_header, v120, v121, "Found observation %s", v122, 0xCu);
      swift_arrayDestroy();
      uint64_t v89 = v157;
      swift_slowDealloc();
      uint64_t v92 = (uint64_t)v163;
      swift_slowDealloc();

      uint64_t v125 = v151;
    }
    else
    {

      sub_100849E34((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      uint64_t v125 = v119;
    }
    sub_100849E34(v125, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    int v50 = v148;
    uint64_t v74 = v169;
    uint64_t v118 = v165;
  }
  sub_10001D074(v89, v92, (uint64_t *)&unk_101655530);
  if (v117(v92, 1, v118) == 1)
  {
    sub_10001DAB4(v92, (uint64_t *)&unk_101655530);
    uint64_t v126 = v146;
    uint64_t v127 = v145;
    size_t v128 = (size_t)v152;
    goto LABEL_67;
  }
  int v129 = *(unsigned __int8 *)(v92 + *(int *)(v118 + 24));
  sub_100849E34(v92, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  BOOL v130 = v129 == 23;
  uint64_t v126 = v146;
  uint64_t v127 = v145;
  size_t v128 = (size_t)v152;
  if (v130)
  {
    uint64_t v131 = v150;
    v143(v150, v146, v74);
    uint64_t v132 = Logger.logObject.getter();
    os_log_type_t v133 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v132, v133))
    {
      uint64_t v134 = (uint8_t *)swift_slowAlloc();
      v172 = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v134 = 136315138;
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v135 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v173 = sub_1008FA0F0(v135, v136, (uint64_t *)&v172);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v127(v131, v74);
      _os_log_impl((void *)&_mh_execute_header, v132, v133, "Play Sound has already been queued for groupIdentifier: %s", v134, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v127(v131, v74);
    }

    uint64_t v139 = v166;
    type metadata accessor for CommandError(0);
    uint64_t v173 = 11;
    sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
    sub_10084B9A8((unint64_t *)&unk_101651190, type metadata accessor for CommandError);
    _BridgedStoredNSError.init(_:userInfo:)();
    uint64_t v140 = v172;
    v139(v172);

    sub_10001DAB4(v157, (uint64_t *)&unk_101655530);
    v127(v159, v74);
    goto LABEL_50;
  }
LABEL_67:
  v143((char *)v128, v126, v74);
  if (v168 == 4)
  {
    v127((char *)v128, v74);
    sub_100848B98(v126);
    goto LABEL_71;
  }
  BOOL v137 = sub_1008486BC(v128);
  v127((char *)v128, v74);
  if (v137)
  {
    type metadata accessor for CommandError(0);
    uint64_t v173 = 10;
    sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
    sub_10084B9A8((unint64_t *)&unk_101651190, type metadata accessor for CommandError);
    _BridgedStoredNSError.init(_:userInfo:)();
    uint64_t v138 = v172;
    v166(v172);

    sub_10001DAB4(v157, (uint64_t *)&unk_101655530);
    v127(v159, v74);
  }
  else
  {
LABEL_71:
    sub_10081E5B4(v158, (uint64_t)v50, v168, (uint64_t)v166, (uint64_t)v49, a6);
    sub_10001DAB4(v157, (uint64_t *)&unk_101655530);
    v127(v159, v74);
  }
  uint64_t v114 = (uint64_t)v50;
  return sub_100849E34(v114, type metadata accessor for OwnedBeaconGroup);
}

uint64_t sub_10081C928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, double a6)
{
  uint64_t v183 = a4;
  uint64_t v184 = a3;
  uint64_t v181 = a1;
  uint64_t v167 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v166 = *(void *)(v167 - 8);
  __chkstk_darwin(v167);
  uint64_t v164 = (char *)&v149 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = type metadata accessor for DispatchQoS();
  uint64_t v168 = *(void *)(v169 - 8);
  __chkstk_darwin(v169);
  uint64_t v165 = (char *)&v149 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v162 = *(void *)(v163 - 8);
  __chkstk_darwin(v163);
  uint64_t v161 = (char *)&v149 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for BeaconObservation();
  uint64_t v182 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v180 = (uint64_t)&v149 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v177 = (uint64_t)&v149 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  v185 = (char *)&v149 - v18;
  __chkstk_darwin(v17);
  v160 = (char *)&v149 - v19;
  uint64_t v20 = sub_10000588C((uint64_t *)&unk_101655530);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v157 = (uint64_t)&v149 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v156 = (uint64_t)&v149 - v24;
  __chkstk_darwin(v23);
  uint64_t v170 = (uint64_t)&v149 - v25;
  uint64_t v26 = sub_10000588C(&qword_1016511E0);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (char *)&v149 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for UUID();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v159 = (char *)&v149 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v154 = (char *)&v149 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v155 = (char *)&v149 - v36;
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v149 - v37;
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v39 = type metadata accessor for Logger();
  uint64_t v40 = sub_100010324(v39, (uint64_t)qword_10170E3C8);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  uint64_t v174 = v30 + 16;
  uint64_t v173 = v41;
  v41(v38, a2, v29);
  uint64_t v176 = v40;
  uint64_t v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.default.getter();
  BOOL v44 = os_log_type_enabled(v42, v43);
  uint64_t v175 = v29;
  uint64_t v172 = v30;
  if (v44)
  {
    uint64_t v178 = v12;
    uint64_t v179 = a2;
    uint64_t v158 = a5;
    uint64_t v45 = swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 136315650;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v192 = sub_1008FA0F0(v46, v47, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v48 = *(void (**)(char *, uint64_t))(v30 + 8);
    v48(v38, v29);
    *(_WORD *)(v45 + 12) = 2080;
    v171 = v48;
    uint64_t v49 = 0x746C75616665642ELL;
    unint64_t v50 = 0xE800000000000000;
    uint64_t v51 = (uint64_t)v185;
    switch(v184)
    {
      case 0:
        break;
      case 1:
        uint64_t v49 = 0x676E69676E61722ELL;
        break;
      case 2:
        uint64_t v49 = 0x6E696B636172742ELL;
        unint64_t v50 = 0xE900000000000067;
        break;
      case 3:
        unint64_t v50 = 0x80000001013FD5F0;
        uint64_t v49 = 0xD000000000000010;
        break;
      case 4:
        unint64_t v50 = 0xEF64656D7269666ELL;
        uint64_t v49 = 0x6F4365756575712ELL;
        break;
      case 5:
        unint64_t v50 = 0xEE0074726F685367;
        uint64_t v49 = 0x6E696B636172742ELL;
        break;
      default:
        unint64_t v50 = 0xE700000000000000;
        uint64_t v49 = 0x6E776F6E6B6E75;
        uint64_t v51 = (uint64_t)v185;
        break;
    }
    uint64_t v192 = sub_1008FA0F0(v49, v50, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 22) = 2048;
    uint64_t v192 = *(void *)&a6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "playSoundSingle %s context %s timeout %f", (uint8_t *)v45, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a5 = v158;
    a2 = v179;
    uint64_t v12 = v178;
  }
  else
  {
    v171 = *(void (**)(char *, uint64_t))(v30 + 8);
    v171(v38, v29);

    uint64_t v51 = (uint64_t)v185;
  }
  sub_100ACCD98(a2, (uint64_t)&aBlock);
  uint64_t v52 = v189;
  sub_10001DAB4((uint64_t)&aBlock, (uint64_t *)&unk_10163BBE0);
  if (v52)
  {
    if (sub_1008254E4(a2)) {
      return sub_100833FB4(v181, a2, v184, v183, (uint64_t)a5, a6);
    }
    uint64_t v63 = v181;
    uint64_t v64 = a2;
    uint64_t v65 = v184;
    return sub_1008348F0(v63, a6, v64, v65, v183, (uint64_t)a5);
  }
  sub_100AE381C(a2, (uint64_t)v28);
  uint64_t v54 = type metadata accessor for WildModeAssociationRecord(0);
  int v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v28, 1, v54);
  sub_10001DAB4((uint64_t)v28, &qword_1016511E0);
  if (v55 == 1)
  {
    uint64_t v56 = v159;
    uint64_t v57 = v175;
    v173(v159, a2, v175);
    BOOL v58 = Logger.logObject.getter();
    os_log_type_t v59 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v60 = 136315138;
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v61 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v192 = sub_1008FA0F0(v61, v62, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v171(v56, v57);
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "Invalid beacon %s", v60, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v171(v56, v57);
    }

    sub_10000584C();
    uint64_t v95 = v162;
    size_t v96 = v161;
    uint64_t v97 = v163;
    (*(void (**)(char *, void, uint64_t))(v162 + 104))(v161, enum case for DispatchQoS.QoSClass.default(_:), v163);
    unint64_t v98 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v96, v97);
    uint64_t v99 = swift_allocObject();
    *(void *)(v99 + 16) = v183;
    *(void *)(v99 + 24) = a5;
    v190 = sub_10084A298;
    uint64_t v191 = v99;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v187 = 1107296256;
    uint64_t v100 = &unk_1015D7970;
LABEL_82:
    v188 = sub_1004B5480;
    v189 = v100;
    uint64_t v145 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v146 = v165;
    static DispatchQoS.unspecified.getter();
    uint64_t v192 = (uint64_t)_swiftEmptyArrayStorage;
    sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    uint64_t v147 = v164;
    uint64_t v148 = v167;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v145);

    (*(void (**)(char *, uint64_t))(v166 + 8))(v147, v148);
    (*(void (**)(char *, uint64_t))(v168 + 8))(v146, v169);
    return swift_release();
  }
  uint64_t v66 = (uint64_t)v160;
  if (v184 != 2)
  {
    if (v184 == 5)
    {
      uint64_t v63 = v181;
      uint64_t v64 = a2;
      uint64_t v65 = 5;
      return sub_1008348F0(v63, a6, v64, v65, v183, (uint64_t)a5);
    }
    if (v184 != 4)
    {
      uint64_t v101 = Logger.logObject.getter();
      os_log_type_t v102 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v101, v102))
      {
        Swift::UInt v103 = (uint8_t *)swift_slowAlloc();
        uint64_t aBlock = swift_slowAlloc();
        *(_DWORD *)Swift::UInt v103 = 136315138;
        uint64_t v104 = 0x746C75616665642ELL;
        unint64_t v105 = 0xE800000000000000;
        switch(v184)
        {
          case 0:
            break;
          case 1:
            uint64_t v104 = 0x676E69676E61722ELL;
            break;
          case 2:
            uint64_t v104 = 0x6E696B636172742ELL;
            unint64_t v105 = 0xE900000000000067;
            break;
          case 3:
            unint64_t v105 = 0x80000001013FD5F0;
            uint64_t v104 = 0xD000000000000010;
            break;
          default:
            unint64_t v105 = 0xE700000000000000;
            uint64_t v104 = 0x6E776F6E6B6E75;
            break;
        }
        uint64_t v192 = sub_1008FA0F0(v104, v105, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v101, v102, "Invalid context for UT play sound %s", v103, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      sub_10000584C();
      uint64_t v141 = v162;
      uint64_t v142 = v161;
      uint64_t v143 = v163;
      (*(void (**)(char *, void, uint64_t))(v162 + 104))(v161, enum case for DispatchQoS.QoSClass.default(_:), v163);
      unint64_t v98 = (void *)static OS_dispatch_queue.global(qos:)();
      (*(void (**)(char *, uint64_t))(v141 + 8))(v142, v143);
      uint64_t v144 = swift_allocObject();
      *(void *)(v144 + 16) = v183;
      *(void *)(v144 + 24) = a5;
      v190 = sub_10084BBC0;
      uint64_t v191 = v144;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v187 = 1107296256;
      uint64_t v100 = &unk_1015D79C0;
      goto LABEL_82;
    }
  }
  if (qword_101636CB8 != -1) {
    goto LABEL_85;
  }
LABEL_25:
  sub_10000588C(&qword_101655540);
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v67 = aBlock;
  uint64_t v68 = *(void *)(aBlock + 16);
  uint64_t v158 = a5;
  if (!v68)
  {
    swift_bridgeObjectRelease();
    uint64_t v75 = _swiftEmptyArrayStorage;
    uint64_t v70 = v180;
    goto LABEL_58;
  }
  unint64_t v69 = sub_1007240CC(a2);
  uint64_t v70 = v180;
  if ((v71 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v75 = _swiftEmptyArrayStorage;
    goto LABEL_58;
  }
  uint64_t v72 = *(void *)(*(void *)(v67 + 56) + 8 * v69);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v73 = sub_1007100C0(v72);
  swift_bridgeObjectRelease();
  size_t v74 = sub_100B752E8((uint64_t)v73);
  swift_release();
  uint64_t v75 = _swiftEmptyArrayStorage;
  uint64_t v192 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v151 = *(char **)(v74 + 16);
  if (v151)
  {
    uint64_t v76 = 0;
    uint64_t v66 = -1;
    a5 = qword_10136A7D0;
    uint64_t v179 = a2;
    uint64_t v178 = v12;
    size_t v150 = v74;
    while (1)
    {
      if ((unint64_t)v76 >= *(void *)(v74 + 16))
      {
        __break(1u);
LABEL_85:
        swift_once();
        goto LABEL_25;
      }
      unint64_t v77 = (*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80);
      uint64_t v78 = *(void *)(v182 + 72);
      uint64_t v159 = v76 + 1;
      unint64_t v153 = v77;
      uint64_t v152 = v78;
      sub_10084B940(v74 + v77 + v78 * (void)v76, v51, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      sub_1004DCCB0();
      uint64_t v79 = Set.init(minimumCapacity:)();
      uint64_t v80 = 0;
      for (uint64_t i = v79 + 56; ; uint64_t i = v79 + 56)
      {
        while (1)
        {
          uint64_t v82 = *((char *)&off_1015A1788 + v80++ + 32);
          Hasher.init(_seed:)();
          Swift::UInt v83 = qword_10136A7D0[v82];
          Hasher._combine(_:)(v83);
          Swift::Int v84 = Hasher._finalize()();
          uint64_t v85 = -1 << *(unsigned char *)(v79 + 32);
          unint64_t v86 = v84 & ~v85;
          if (((*(void *)(i + ((v86 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v86) & 1) == 0) {
            goto LABEL_40;
          }
          uint64_t v87 = *(void *)(v79 + 48);
          if (qword_10136A7D0[*(char *)(v87 + v86)] != v83) {
            break;
          }
LABEL_33:
          if (v80 == 7) {
            goto LABEL_42;
          }
        }
        uint64_t v88 = ~v85;
        while (1)
        {
          unint64_t v86 = (v86 + 1) & v88;
          if (((*(void *)(i + ((v86 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v86) & 1) == 0) {
            break;
          }
          if (qword_10136A7D0[*(char *)(v87 + v86)] == v83) {
            goto LABEL_33;
          }
        }
LABEL_40:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t aBlock = v79;
        sub_100DE20D8(v82, v86, isUniquelyReferenced_nonNull_native);
        uint64_t v79 = aBlock;
        swift_bridgeObjectRelease();
        if (v80 == 7) {
          break;
        }
      }
LABEL_42:
      uint64_t v12 = v178;
      uint64_t v51 = (uint64_t)v185;
      BOOL v90 = sub_100DC7BFC(v185[*(int *)(v178 + 24)], v79);
      swift_bridgeObjectRelease();
      if (v90)
      {
        sub_100849DCC(v51, v177, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        uint64_t v91 = v192;
        char v92 = swift_isUniquelyReferenced_nonNull_native();
        a2 = v179;
        if ((v92 & 1) == 0)
        {
          sub_1000B77F0(0, *(void *)(v91 + 16) + 1, 1);
          uint64_t v91 = v192;
        }
        unint64_t v94 = *(void *)(v91 + 16);
        unint64_t v93 = *(void *)(v91 + 24);
        if (v94 >= v93 >> 1)
        {
          sub_1000B77F0(v93 > 1, v94 + 1, 1);
          uint64_t v91 = v192;
        }
        *(void *)(v91 + 16) = v94 + 1;
        sub_100849DCC(v177, v91 + v153 + v94 * v152, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      }
      else
      {
        sub_100849E34(v51, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        a2 = v179;
      }
      uint64_t v70 = v180;
      size_t v74 = v150;
      uint64_t v76 = v159;
      if (v159 == v151)
      {
        uint64_t v75 = (void *)v192;
        uint64_t v66 = (uint64_t)v160;
        break;
      }
    }
  }
  swift_release();
LABEL_58:
  uint64_t v106 = v170;
  sub_100E4D5E0((uint64_t)v75, v170);
  swift_bridgeObjectRelease();
  uint64_t v107 = v156;
  sub_10001D074(v106, v156, (uint64_t *)&unk_101655530);
  uint64_t v108 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v182 + 48);
  v182 += 48;
  if (v108(v107, 1, v12) == 1)
  {
    sub_10001DAB4(v107, (uint64_t *)&unk_101655530);
  }
  else
  {
    sub_100849DCC(v107, v66, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    sub_10084B940(v66, v70, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    uint64_t v109 = Logger.logObject.getter();
    os_log_type_t v110 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v109, v110))
    {
      char v111 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      uint64_t v179 = a2;
      *(_DWORD *)char v111 = 136315138;
      uint64_t v112 = sub_10096C440();
      uint64_t v192 = sub_1008FA0F0(v112, v113, &aBlock);
      a2 = v179;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100849E34(v180, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      _os_log_impl((void *)&_mh_execute_header, v109, v110, "Found observation %s", v111, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v114 = (uint64_t)v160;
    }
    else
    {

      sub_100849E34(v70, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      uint64_t v114 = v66;
    }
    sub_100849E34(v114, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  }
  uint64_t v115 = v157;
  sub_10001D074(v170, v157, (uint64_t *)&unk_101655530);
  if (v108(v115, 1, v12) == 1)
  {
    sub_10001DAB4(v115, (uint64_t *)&unk_101655530);
    uint64_t v116 = (uint64_t)v158;
    uint64_t v117 = v175;
    goto LABEL_69;
  }
  int v118 = *(unsigned __int8 *)(v115 + *(int *)(v12 + 24));
  sub_100849E34(v115, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  uint64_t v116 = (uint64_t)v158;
  uint64_t v117 = v175;
  if (v118 == 23)
  {
    uint64_t v119 = v154;
    v173(v154, a2, v175);
    uint64_t v120 = Logger.logObject.getter();
    os_log_type_t v121 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v120, v121))
    {
      os_log_t v122 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)os_log_t v122 = 136315138;
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v123 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v192 = sub_1008FA0F0(v123, v124, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v171(v119, v117);
      _os_log_impl((void *)&_mh_execute_header, v120, v121, "Play Sound has already been queued for: %s", v122, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v171(v119, v117);
    }

    sub_10000584C();
    uint64_t v133 = v162;
    uint64_t v134 = v161;
    uint64_t v135 = v163;
    (*(void (**)(char *, void, uint64_t))(v162 + 104))(v161, enum case for DispatchQoS.QoSClass.default(_:), v163);
    BOOL v130 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v133 + 8))(v134, v135);
    uint64_t v136 = swift_allocObject();
    *(void *)(v136 + 16) = v183;
    *(void *)(v136 + 24) = v116;
    v190 = sub_10084A2D8;
    uint64_t v191 = v136;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v187 = 1107296256;
    uint64_t v132 = &unk_1015D7A60;
LABEL_76:
    v188 = sub_1004B5480;
    v189 = v132;
    BOOL v137 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v138 = v165;
    static DispatchQoS.unspecified.getter();
    uint64_t v192 = (uint64_t)_swiftEmptyArrayStorage;
    sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    uint64_t v139 = v164;
    uint64_t v140 = v167;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v137);

    (*(void (**)(char *, uint64_t))(v166 + 8))(v139, v140);
    (*(void (**)(char *, uint64_t))(v168 + 8))(v138, v169);
    sub_10001DAB4(v170, (uint64_t *)&unk_101655530);
    return swift_release();
  }
  else
  {
LABEL_69:
    size_t v125 = (size_t)v155;
    v173(v155, a2, v117);
    if (v184 == 4)
    {
      v171((char *)v125, v117);
      sub_100848B98(a2);
    }
    else
    {
      BOOL v126 = sub_1008486BC(v125);
      v171((char *)v125, v117);
      if (v126)
      {
        sub_10000584C();
        uint64_t v127 = v162;
        size_t v128 = v161;
        uint64_t v129 = v163;
        (*(void (**)(char *, void, uint64_t))(v162 + 104))(v161, enum case for DispatchQoS.QoSClass.default(_:), v163);
        BOOL v130 = (void *)static OS_dispatch_queue.global(qos:)();
        (*(void (**)(char *, uint64_t))(v127 + 8))(v128, v129);
        uint64_t v131 = swift_allocObject();
        *(void *)(v131 + 16) = v183;
        *(void *)(v131 + 24) = v116;
        v190 = sub_10084A2B8;
        uint64_t v191 = v131;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        uint64_t v187 = 1107296256;
        uint64_t v132 = &unk_1015D7A10;
        goto LABEL_76;
      }
    }
    sub_100833FB4(v181, a2, 2, v183, v116, a6);
    return sub_10001DAB4(v170, (uint64_t *)&unk_101655530);
  }
}

uint64_t sub_10081E5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v7 = v6;
  uint64_t v102 = a5;
  uint64_t v101 = a4;
  uint64_t v100 = a3;
  uint64_t v99 = a1;
  uint64_t v108 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v107 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v106 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for DispatchQoS();
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  Swift::UInt v103 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  size_t v96 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v109 = *(void *)(v13 - 8);
  __chkstk_darwin(v13 - 8);
  uint64_t v110 = v14;
  char v111 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v15 - 8);
  uint64_t v114 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_10000588C((uint64_t *)&unk_10163AC90);
  __chkstk_darwin(v117);
  uint64_t v18 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = type metadata accessor for Date();
  uint64_t v139 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  BOOL v137 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = type metadata accessor for BeaconObservation();
  uint64_t v128 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v127 = (char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for UUID();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v141 = (char *)&v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v95 - v25;
  uint64_t v27 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v27 - 8);
  uint64_t v133 = (char *)&v95 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1004D1434();
  uint64_t v30 = v7;
  uint64_t v31 = 0;
  char v32 = sub_100846CF8(v29, (uint64_t)v30);
  swift_bridgeObjectRelease();
  uint64_t v112 = v30;

  if (v32) {
    int v33 = 23;
  }
  else {
    int v33 = 24;
  }
  int v125 = v33;
  uint64_t v113 = a2;
  uint64_t v34 = sub_1004D1434();
  uint64_t v35 = *(void *)(v34 + 56);
  uint64_t v120 = v34 + 56;
  uint64_t v36 = 1 << *(unsigned char *)(v34 + 32);
  uint64_t v37 = -1;
  if (v36 < 64) {
    uint64_t v37 = ~(-1 << v36);
  }
  unint64_t v38 = v37 & v35;
  int64_t v121 = (unint64_t)(v36 + 63) >> 6;
  uint64_t v142 = v22 + 16;
  uint64_t v132 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  uint64_t v130 = v22 + 48;
  uint64_t v140 = (void (**)(char *, char *, uint64_t))(v22 + 32);
  uint64_t v116 = (unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48);
  uint64_t v136 = (void (**)(char *, char *, uint64_t))(v139 + 32);
  unsigned int v122 = enum case for Feature.FindMy.trustedNowUsesReferenceClock(_:);
  uint64_t v131 = v22;
  unint64_t v124 = (uint64_t (**)(char *, uint64_t))(v22 + 8);
  uint64_t v134 = v34;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v40 = 0;
  int v118 = (char *)&type metadata for () + 8;
  long long v123 = xmmword_101342130;
  BOOL v126 = v26;
  uint64_t v115 = v18;
  while (1)
  {
    if (v38)
    {
      uint64_t v139 = (v38 - 1) & v38;
      unint64_t v48 = __clz(__rbit64(v38)) | (v40 << 6);
      uint64_t v49 = v133;
      goto LABEL_26;
    }
    if (__OFADD__(v40++, 1))
    {
      __break(1u);
      goto LABEL_61;
    }
    uint64_t v49 = v133;
    if (v40 >= v121) {
      goto LABEL_57;
    }
    unint64_t v51 = *(void *)(v120 + 8 * v40);
    if (!v51) {
      break;
    }
LABEL_25:
    uint64_t v139 = (v51 - 1) & v51;
    unint64_t v48 = __clz(__rbit64(v51)) + (v40 << 6);
LABEL_26:
    uint64_t v53 = v131;
    uint64_t v54 = *(void (**)(char *, unint64_t, uint64_t))(v131 + 16);
    v54(v49, *(void *)(v134 + 48) + *(void *)(v131 + 72) * v48, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v49, 0, 1, v21);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v49, 1, v21) == 1)
    {
      uint64_t v119 = v31;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v71 = (uint64_t)v111;
      uint64_t v72 = v110;
      uint64_t v73 = v109;
LABEL_58:
      size_t v74 = v112;
      sub_100A9E7EC(10);
      uint64_t v75 = *(NSObject **)&v74[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue];
      uint64_t v76 = v113;
      sub_10084B940(v113, v71, type metadata accessor for OwnedBeaconGroup);
      unint64_t v77 = (*(unsigned __int8 *)(v73 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
      unint64_t v78 = (v72 + v77 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v79 = swift_allocObject();
      sub_100849DCC(v71, v79 + v77, type metadata accessor for OwnedBeaconGroup);
      *(void *)(v79 + v78) = v74;
      uint64_t v80 = swift_allocObject();
      *(void *)(v80 + 16) = sub_100848F30;
      *(void *)(v80 + 24) = v79;
      uint64_t v152 = (uint64_t)sub_100132424;
      uint64_t v153 = v80;
      double aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
      uint64_t v149 = 1107296256;
      size_t v150 = sub_1000A70B0;
      uint64_t v151 = &unk_1015D7650;
      uint64_t v81 = _Block_copy(&aBlock);
      uint64_t v82 = v74;
      swift_retain();
      swift_release();
      dispatch_sync(v75, v81);
      _Block_release(v81);
      LOBYTE(v75) = swift_isEscapingClosureAtFileLocation();
      uint64_t result = swift_release();
      if ((v75 & 1) == 0)
      {
        uint64_t v83 = type metadata accessor for Transaction();
        __chkstk_darwin(v83);
        *(&v95 - 6) = (uint64_t)v82;
        *(&v95 - 5) = v76;
        *((double *)&v95 - 4) = a6;
        uint64_t v84 = v100;
        *(&v95 - 3) = v99;
        *(&v95 - 2) = v84;
        static Transaction.named<A>(_:with:)();
        sub_10000584C();
        uint64_t v85 = v97;
        unint64_t v86 = v96;
        uint64_t v87 = v98;
        (*(void (**)(char *, void, uint64_t))(v97 + 104))(v96, enum case for DispatchQoS.QoSClass.default(_:), v98);
        uint64_t v88 = (void *)static OS_dispatch_queue.global(qos:)();
        (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v87);
        uint64_t v89 = swift_allocObject();
        uint64_t v90 = v102;
        *(void *)(v89 + 16) = v101;
        *(void *)(v89 + 24) = v90;
        uint64_t v152 = (uint64_t)sub_1003C6214;
        uint64_t v153 = v89;
        double aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
        uint64_t v149 = 1107296256;
        size_t v150 = sub_1004B5480;
        uint64_t v151 = &unk_1015D76A0;
        uint64_t v91 = _Block_copy(&aBlock);
        swift_retain();
        char v92 = v103;
        static DispatchQoS.unspecified.getter();
        uint64_t v147 = _swiftEmptyArrayStorage;
        sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10000588C((uint64_t *)&unk_10163F350);
        sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
        unint64_t v93 = v106;
        uint64_t v94 = v108;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v91);

        (*(void (**)(char *, uint64_t))(v107 + 8))(v93, v94);
        (*(void (**)(char *, uint64_t))(v104 + 8))(v92, v105);
        swift_release();
        return swift_release();
      }
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    int v55 = *v140;
    (*v140)(v26, v49, v21);
    if (qword_101636CB8 != -1) {
      swift_once();
    }
    uint64_t v138 = qword_10170E330;
    v54(v141, (unint64_t)v26, v21);
    if (qword_1016371D8 != -1) {
      swift_once();
    }
    double aBlock = 7.45683732e247;
    *(double *)&uint64_t v149 = -5.98008217e197;
    SynchronousCache.cachedValue<A>(key:computeBlock:)();
    swift_bridgeObjectRelease();
    if (v147 == 1)
    {
      id v56 = [self sharedInstance];
      unsigned int v57 = [v56 isInternalBuild];

      if (v57)
      {
        if (qword_101636818 != -1) {
          swift_once();
        }
        uint64_t v58 = sub_100010324(v117, (uint64_t)qword_101638DF0);
        swift_beginAccess();
        sub_10001D074(v58, (uint64_t)v18, (uint64_t *)&unk_10163AC90);
        uint64_t v42 = v135;
        if ((*v116)(v18, 1, v135) != 1)
        {
          uint64_t v41 = v137;
          (*v136)(v137, v18, v42);
          goto LABEL_8;
        }
        sub_10001DAB4((uint64_t)v18, (uint64_t *)&unk_10163AC90);
      }
    }
    uint64_t My = type metadata accessor for Feature.FindMy();
    uint64_t v151 = (void *)My;
    uint64_t v152 = sub_10084B9A8((unint64_t *)&qword_101653E00, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
    uint64_t v60 = sub_10001D958((uint64_t *)&aBlock);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v60, v122, My);
    LOBYTE(My) = isFeatureEnabled(_:)();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&aBlock);
    if ((My & 1) == 0)
    {
      uint64_t v41 = v137;
      Date.init()();
      uint64_t v42 = v135;
      goto LABEL_8;
    }
    sub_100F46C4C();
    double Current = CFAbsoluteTimeGetCurrent();
    uint64_t v41 = v137;
    if (qword_101637200 != -1) {
      swift_once();
    }
    sub_10000588C(&qword_101639450);
    OSAllocatedUnfairLock.callAsFunction<A>(_:)();
    if (Current - aBlock - *(double *)&v149 > 86400.0)
    {
      OSAllocatedUnfairLock.callAsFunction<A>(_:)();
      uint64_t v119 = v31;
      uint64_t v62 = type metadata accessor for TaskPriority();
      uint64_t v63 = *(void *)(v62 - 8);
      uint64_t v64 = (uint64_t)v114;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v114, 1, 1, v62);
      uint64_t v65 = swift_allocObject();
      *(void *)(v65 + 16) = 0;
      uint64_t v66 = (void *)(v65 + 16);
      *(void *)(v65 + 24) = 0;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v64, 1, v62) == 1)
      {
        sub_10001DAB4(v64, &qword_10164DBB0);
        if (*v66) {
          goto LABEL_43;
        }
LABEL_47:
        uint64_t v67 = 0;
        uint64_t v69 = 0;
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v64, v62);
        if (!*v66) {
          goto LABEL_47;
        }
LABEL_43:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v67 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v69 = v68;
        swift_unknownObjectRelease();
      }
      uint64_t v42 = v135;
      uint64_t v70 = swift_allocObject();
      *(void *)(v70 + 16) = &unk_10164F030;
      *(void *)(v70 + 24) = v65;
      if (v69 | v67)
      {
        uint64_t v143 = 0;
        uint64_t v144 = 0;
        uint64_t v145 = v67;
        uint64_t v146 = v69;
      }
      uint64_t v18 = v115;
      uint64_t v41 = v137;
      swift_task_create();
      swift_release();
      uint64_t v31 = v119;
      goto LABEL_51;
    }
    uint64_t v42 = v135;
LABEL_51:
    Date.init(timeIntervalSinceReferenceDate:)();
LABEL_8:
    uint64_t v43 = (uint64_t)v127;
    v55(v127, v141, v21);
    uint64_t v44 = v129;
    (*v136)((char *)(v43 + *(int *)(v129 + 20)), v41, v42);
    *(unsigned char *)(v43 + *(int *)(v44 + 24)) = v125;
    sub_10000588C(&qword_10163A778);
    unint64_t v45 = (*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80);
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = v123;
    sub_10084B940(v43, v46 + v45, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    uint64_t v47 = type metadata accessor for Transaction();
    __chkstk_darwin(v47);
    *(&v95 - 4) = v138;
    *(&v95 - 3) = v46;
    *(&v95 - 2) = 0;
    *(&v95 - 1) = 0;
    static Transaction.named<A>(_:with:)();
    swift_bridgeObjectRelease();
    sub_100849E34(v43, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    uint64_t v26 = v126;
    uint64_t result = (*v124)(v126, v21);
    unint64_t v38 = v139;
  }
  int64_t v52 = v40 + 1;
  if (v40 + 1 >= v121) {
    goto LABEL_57;
  }
  unint64_t v51 = *(void *)(v120 + 8 * v52);
  if (v51) {
    goto LABEL_24;
  }
  int64_t v52 = v40 + 2;
  if (v40 + 2 >= v121) {
    goto LABEL_57;
  }
  unint64_t v51 = *(void *)(v120 + 8 * v52);
  if (v51) {
    goto LABEL_24;
  }
  int64_t v52 = v40 + 3;
  if (v40 + 3 >= v121) {
    goto LABEL_57;
  }
  unint64_t v51 = *(void *)(v120 + 8 * v52);
  if (v51) {
    goto LABEL_24;
  }
  int64_t v52 = v40 + 4;
  if (v40 + 4 >= v121) {
    goto LABEL_57;
  }
  unint64_t v51 = *(void *)(v120 + 8 * v52);
  if (v51) {
    goto LABEL_24;
  }
  int64_t v52 = v40 + 5;
  if (v40 + 5 >= v121)
  {
LABEL_57:
    uint64_t v119 = v31;
    uint64_t v71 = (uint64_t)v111;
    uint64_t v72 = v110;
    uint64_t v73 = v109;
    (*v132)(v133, 1, 1, v21);
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_58;
  }
  unint64_t v51 = *(void *)(v120 + 8 * v52);
  if (v51)
  {
LABEL_24:
    int64_t v40 = v52;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v40 = v52 + 1;
    if (__OFADD__(v52, 1)) {
      break;
    }
    if (v40 >= v121) {
      goto LABEL_57;
    }
    unint64_t v51 = *(void *)(v120 + 8 * v40);
    ++v52;
    if (v51) {
      goto LABEL_25;
    }
  }
LABEL_62:
  __break(1u);
  return result;
}

uint64_t sub_10081FA30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v46 = a4;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v44 = *(void *)(v10 - 8);
  uint64_t v45 = v10;
  __chkstk_darwin(v10);
  uint64_t v43 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000588C(&qword_10163BB20);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v37 - v20;
  sub_100AE75E0(a2, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_10001DAB4((uint64_t)v14, &qword_10163BB20);
    return sub_10081FF44(a1, a2, a3, v46, a5);
  }
  else
  {
    uint64_t v41 = v5;
    uint64_t v42 = a3;
    sub_100849DCC((uint64_t)v14, (uint64_t)v21, type metadata accessor for OwnedBeaconGroup);
    if (qword_101636CF8 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_100010324(v23, (uint64_t)qword_10170E3C8);
    sub_10084B940((uint64_t)v21, (uint64_t)v19, type metadata accessor for OwnedBeaconGroup);
    uint64_t v25 = v43;
    uint64_t v24 = v44;
    uint64_t v26 = a1;
    uint64_t v27 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, a1, v45);
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.default.getter();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      int64_t v40 = v21;
      uint64_t v32 = v31;
      uint64_t v39 = swift_slowAlloc();
      uint64_t v48 = v39;
      *(_DWORD *)uint64_t v32 = 136315394;
      uint64_t v37 = v32 + 4;
      int v38 = v30;
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v47 = sub_1008FA0F0(v33, v34, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100849E34((uint64_t)v19, type metadata accessor for OwnedBeaconGroup);
      *(_WORD *)(v32 + 12) = 2080;
      uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v47 = sub_1008FA0F0(v35, v36, &v48);
      uint64_t v26 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
      _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v38, "Stop sound for group %s. CommandId %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v21 = v40;
      swift_slowDealloc();
    }
    else
    {
      sub_100849E34((uint64_t)v19, type metadata accessor for OwnedBeaconGroup);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v27);
    }

    sub_100820384(v26, (uint64_t)v21, v42, v46, a5);
    return sub_100849E34((uint64_t)v21, type metadata accessor for OwnedBeaconGroup);
  }
}

uint64_t sub_10081FF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  uint64_t v45 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v48 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v44 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v47 = v10;
  __chkstk_darwin(v10);
  int64_t v40 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = __chkstk_darwin(v12);
  int v38 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v37 - v16;
  uint64_t v43 = *(void *)(v5 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v18((char *)&v37 - v16, a2, v12);
  v18((char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  uint64_t v19 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v20 = (v19 + 16) & ~v19;
  unint64_t v21 = (v14 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = (v19 + 16 + v23) & ~v19;
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
  v26(v25 + v20, v17, v12);
  *(double *)(v25 + v21) = a5;
  uint64_t v27 = v38;
  uint64_t v28 = v39;
  *(void *)(v25 + v22) = v39;
  os_log_type_t v29 = (void *)(v25 + v23);
  uint64_t v30 = v42;
  *os_log_type_t v29 = v41;
  v29[1] = v30;
  v26(v25 + v24, v27, v12);
  aBlock[4] = sub_100848194;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015D74E8;
  uint64_t v31 = _Block_copy(aBlock);
  id v32 = v28;
  swift_retain();
  uint64_t v33 = v40;
  static DispatchQoS.unspecified.getter();
  uint64_t v49 = _swiftEmptyArrayStorage;
  sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v35 = v44;
  uint64_t v34 = v45;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v31);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v34);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v47);
  return swift_release();
}

uint64_t sub_100820384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v42 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v45 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v43 = *(void *)(v10 - 8);
  uint64_t v44 = v10;
  __chkstk_darwin(v10);
  uint64_t v37 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = *(void *)(v5 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue);
  sub_10084B940(a2, (uint64_t)v19, type metadata accessor for OwnedBeaconGroup);
  uint64_t v20 = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  unint64_t v21 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v22 = (v18 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (*(unsigned __int8 *)(v13 + 80) + v23 + 8) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v25 = (v14 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  sub_100849DCC((uint64_t)v19, v26 + v21, type metadata accessor for OwnedBeaconGroup);
  uint64_t v27 = v36;
  *(void *)(v26 + v22) = v36;
  *(double *)(v26 + v23) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v26 + v24, v15, v20);
  uint64_t v28 = (void *)(v26 + v25);
  uint64_t v29 = v40;
  void *v28 = v39;
  v28[1] = v29;
  aBlock[4] = sub_10084754C;
  aBlock[5] = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015D7240;
  uint64_t v30 = _Block_copy(aBlock);
  id v31 = v27;
  swift_retain();
  id v32 = v37;
  static DispatchQoS.unspecified.getter();
  uint64_t v46 = _swiftEmptyArrayStorage;
  sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v34 = v41;
  uint64_t v33 = v42;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v30);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v34, v33);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v44);
  return swift_release();
}

uint64_t sub_100820838@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v47 = v8;
  __chkstk_darwin(v8);
  uint64_t v45 = (uint64_t)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000588C(&qword_10163BB20);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100AE75E0(a2, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10001DAB4((uint64_t)v12, &qword_10163BB20);
    uint64_t result = (uint64_t)sub_100820E08(a2);
    id v18 = (id)result;
  }
  else
  {
    sub_100849DCC((uint64_t)v12, (uint64_t)v16, type metadata accessor for OwnedBeaconGroup);
    uint64_t v19 = sub_1004D1434();
    id v20 = a1;
    unint64_t v21 = (unint64_t)sub_100848434(v19, (uint64_t)v20, (uint64_t)v50, (void (*)(char *))sub_100820E08);
    swift_bridgeObjectRelease();

    uint64_t v44 = a3;
    if (v21 >> 62) {
      goto LABEL_43;
    }
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v22; uint64_t v22 = _CocoaArrayWrapper.endIndex.getter())
    {
      unint64_t v23 = v21 & 0xC000000000000001;
      uint64_t v24 = 4;
      do
      {
        if (v23) {
          id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v25 = *(id *)(v21 + 8 * v24);
        }
        id v18 = v25;
        uint64_t v26 = v24 - 3;
        if (__OFADD__(v24 - 4, 1))
        {
          __break(1u);
          goto LABEL_40;
        }
        if (![v25 state])
        {
LABEL_37:
          swift_bridgeObjectRelease();
          sub_100849E34((uint64_t)v16, type metadata accessor for OwnedBeaconGroup);
          uint64_t result = swift_bridgeObjectRelease();
          goto LABEL_45;
        }

        ++v24;
      }
      while (v26 != v22);
      uint64_t v27 = 4;
      while (1)
      {
        id v28 = v23 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v21 + 8 * v27);
        id v18 = v28;
        uint64_t v29 = v27 - 3;
        if (__OFADD__(v27 - 4, 1)) {
          break;
        }
        if ([v28 state] == (id)1) {
          goto LABEL_37;
        }

        ++v27;
        if (v29 == v22)
        {
          uint64_t v30 = 4;
          while (1)
          {
            id v31 = v23 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v21 + 8 * v30);
            id v18 = v31;
            uint64_t v32 = v30 - 3;
            if (__OFADD__(v30 - 4, 1)) {
              goto LABEL_41;
            }
            if ([v31 state] == (id)4) {
              goto LABEL_37;
            }

            ++v30;
            if (v32 == v22)
            {
              uint64_t v33 = 4;
              uint64_t v42 = v4;
              uint64_t v43 = v16;
              while (1)
              {
                id v35 = v23 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v21 + 8 * v33);
                id v18 = v35;
                uint64_t v16 = (char *)(v33 - 3);
                if (__OFADD__(v33 - 4, 1)) {
                  goto LABEL_42;
                }
                id v36 = [v35 error];
                if (v36
                  && (id v49 = v36,
                      sub_10000588C(&qword_101638D40),
                      type metadata accessor for CommandError(0),
                      (swift_dynamicCast() & 1) != 0))
                {
                  uint64_t v37 = v48;
                  sub_10084B9A8((unint64_t *)&unk_101651190, type metadata accessor for CommandError);
                  _BridgedStoredNSError.code.getter();

                  if (v49 == (id)10)
                  {
                    swift_bridgeObjectRelease_n();
                    uint64_t result = sub_100849E34((uint64_t)v43, type metadata accessor for OwnedBeaconGroup);
                    goto LABEL_45;
                  }

                  uint64_t v4 = v42;
                }
                else
                {
                }
                ++v33;
                BOOL v34 = v16 == (char *)v22;
                uint64_t v16 = v43;
                if (v34) {
                  goto LABEL_44;
                }
              }
            }
          }
        }
      }
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      swift_bridgeObjectRetain();
    }
LABEL_44:
    swift_bridgeObjectRelease_n();
    id v38 = SPBeaconTaskNamePlaySound;
    uint64_t v39 = v45;
    static Date.trustedNow.getter(v45);
    id v40 = objc_allocWithZone((Class)SPBeaconTaskInformation);
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v18 = [v40 initWithName:v38 lastUpdated:isa error:0 state:2];

    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v39, v47);
    uint64_t result = sub_100849E34((uint64_t)v16, type metadata accessor for OwnedBeaconGroup);
LABEL_45:
    a3 = v44;
  }
  *a3 = v18;
  return result;
}

id sub_100820E08(uint64_t a1)
{
  uint64_t v307 = a1;
  uint64_t v2 = sub_10000588C(&qword_10163B9F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (void (*)(uint64_t))((char *)&v267 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v281 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v280 = *(void *)(v281 - 8);
  uint64_t v5 = __chkstk_darwin(v281);
  v274 = (void (*)(uint64_t))((char *)&v267 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v267 - v7;
  uint64_t v9 = sub_10000588C(&qword_10163CBC8);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v295 = (uint64_t)&v267 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  v293 = (char *)&v267 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v278 = (uint64_t)&v267 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v271 = (uint64_t)&v267 - v17;
  __chkstk_darwin(v16);
  uint64_t v283 = (uint64_t)&v267 - v18;
  uint64_t v303 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  uint64_t v304 = *(void *)(v303 - 8);
  uint64_t v19 = __chkstk_darwin(v303);
  uint64_t v291 = (uint64_t)&v267 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v289 = (uint64_t)&v267 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v273 = (uint64_t)&v267 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  v275 = (char *)&v267 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v276 = (uint64_t)&v267 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v268 = (uint64_t)&v267 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v269 = (uint64_t)&v267 - v32;
  __chkstk_darwin(v31);
  uint64_t v282 = (uint64_t)&v267 - v33;
  uint64_t v34 = sub_10000588C(&qword_10163BB20);
  __chkstk_darwin(v34 - 8);
  uint64_t v287 = (uint64_t)&v267 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v286 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v285 = *(void *)(v286 - 8);
  __chkstk_darwin(v286);
  uint64_t v284 = (uint64_t)&v267 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10000588C(&qword_101638CF0);
  uint64_t v38 = __chkstk_darwin(v37 - 8);
  v294 = (char *)&v267 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v290 = (char *)&v267 - v40;
  uint64_t v302 = type metadata accessor for UUID();
  v305 = *(char **)(v302 - 8);
  uint64_t v41 = __chkstk_darwin(v302);
  v296 = (char *)&v267 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  v270 = (char *)&v267 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  v272 = (char *)&v267 - v46;
  __chkstk_darwin(v45);
  v288 = (char *)&v267 - v47;
  uint64_t v48 = sub_10000588C((uint64_t *)&unk_101655530);
  __chkstk_darwin(v48 - 8);
  v301 = (char *)&v267 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v314 = type metadata accessor for BeaconObservation();
  uint64_t v313 = *(void *)(v314 - 8);
  uint64_t v50 = __chkstk_darwin(v314);
  os_log_t v311 = (os_log_t)((char *)&v267 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v52 = __chkstk_darwin(v50);
  v312 = (int *)((char *)&v267 - v53);
  __chkstk_darwin(v52);
  uint64_t v292 = (uint64_t)&v267 - v54;
  uint64_t v55 = type metadata accessor for Date();
  uint64_t v56 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t i = (char *)&v267 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for DispatchPredicate();
  uint64_t v60 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v62 = (uint64_t *)((char *)&v267 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  v298 = v1;
  uint64_t v63 = *(void **)&v1[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue];
  *uint64_t v62 = v63;
  (*(void (**)(void *, void, uint64_t))(v60 + 104))(v62, enum case for DispatchPredicate.onQueue(_:), v59);
  id v64 = v63;
  LOBYTE(v63) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v60 + 8))(v62, v59);
  if (v63)
  {
    Date.init()();
    uint64_t v327 = 2;
    if (qword_101636CB8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  sub_10000588C(&qword_101655540);
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v279 = 0;
  uint64_t v65 = v318;
  uint64_t v66 = *(void *)(v318 + 16);
  v277 = v8;
  uint64_t v300 = v56;
  uint64_t v299 = v55;
  v306 = i;
  if (v66)
  {
    unint64_t v67 = sub_1007240CC(v307);
    uint64_t v68 = v314;
    unint64_t v69 = (unint64_t)v301;
    if (v70)
    {
      uint64_t v71 = *(void *)(*(void *)(v65 + 56) + 8 * v67);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v72 = sub_1007100C0(v71);
      swift_bridgeObjectRelease();
      uint64_t v73 = (__objc2_class *)sub_100B752E8((uint64_t)v72);
      swift_release();
      size_t v74 = _swiftEmptyArrayStorage;
      *(void *)&long long v324 = _swiftEmptyArrayStorage;
      id cache = v73->cache;
      if (cache)
      {
        id v75 = 0;
        uint64_t v76 = &off_10159FBC0;
        uint64_t p_ivar_base_size = -1;
        unint64_t v78 = qword_10136A7D0;
        uint64_t v79 = v312;
        v309 = v4;
        v308 = v73;
        while (1)
        {
          if (v75 >= v73->cache)
          {
            __break(1u);
            goto LABEL_123;
          }
          unint64_t v80 = (*(unsigned __int8 *)(v313 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v313 + 80);
          uint64_t v81 = *(void *)(v313 + 72);
          id v317 = (char *)v75 + 1;
          uint64_t v316 = v80;
          uint64_t v315 = v81;
          sub_10084B940((uint64_t)v73 + v80 + v81 * (void)v75, (uint64_t)v79, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          sub_1004DCCB0();
          uint64_t v82 = Set.init(minimumCapacity:)();
          unint64_t v69 = 0;
          for (uint64_t i = (char *)(v82 + 56); ; uint64_t i = (char *)(v82 + 56))
          {
            while (1)
            {
              uint64_t v83 = *((char *)&off_10159FBC0 + v69++ + 32);
              Hasher.init(_seed:)();
              Swift::UInt v84 = qword_10136A7D0[v83];
              uint64_t v72 = &v318;
              Hasher._combine(_:)(v84);
              Swift::Int v85 = Hasher._finalize()();
              uint64_t v86 = -1 << *(unsigned char *)(v82 + 32);
              unint64_t v87 = v85 & ~v86;
              if (((*(void *)&i[(v87 >> 3) & 0xFFFFFFFFFFFFFF8] >> v87) & 1) == 0) {
                goto LABEL_18;
              }
              uint64_t v88 = *(void *)(v82 + 48);
              if (qword_10136A7D0[*(char *)(v88 + v87)] != v84) {
                break;
              }
LABEL_11:
              if (v69 == 7) {
                goto LABEL_20;
              }
            }
            uint64_t v89 = ~v86;
            while (1)
            {
              unint64_t v87 = (v87 + 1) & v89;
              if (((*(void *)&i[(v87 >> 3) & 0xFFFFFFFFFFFFFF8] >> v87) & 1) == 0) {
                break;
              }
              if (qword_10136A7D0[*(char *)(v88 + v87)] == v84) {
                goto LABEL_11;
              }
            }
LABEL_18:
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v318 = v82;
            uint64_t v72 = &v318;
            sub_100DE20D8(v83, v87, isUniquelyReferenced_nonNull_native);
            uint64_t v82 = v318;
            swift_bridgeObjectRelease();
            if (v69 == 7) {
              break;
            }
          }
LABEL_20:
          uint64_t v79 = v312;
          BOOL v91 = sub_100DC7BFC(*((unsigned char *)v312 + *(int *)(v314 + 24)), v82);
          swift_bridgeObjectRelease();
          if (v91)
          {
            sub_100849DCC((uint64_t)v79, (uint64_t)v311, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
            uint64_t v92 = v324;
            char v93 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v4 = v309;
            if ((v93 & 1) == 0)
            {
              uint64_t v72 = &v324;
              sub_1000B77F0(0, *(void *)(v92 + 16) + 1, 1);
              uint64_t v92 = v324;
            }
            uint64_t i = (char *)v316;
            unint64_t v69 = *(void *)(v92 + 16);
            unint64_t v94 = *(void *)(v92 + 24);
            if (v69 >= v94 >> 1)
            {
              uint64_t v72 = &v324;
              sub_1000B77F0(v94 > 1, v69 + 1, 1);
              uint64_t v92 = v324;
            }
            *(void *)(v92 + 16) = v69 + 1;
            sub_100849DCC((uint64_t)v311, (uint64_t)&i[v92 + v69 * v315], (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          }
          else
          {
            sub_100849E34((uint64_t)v79, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
            uint64_t v4 = v309;
          }
          uint64_t v73 = v308;
          id v75 = v317;
          if (v317 == cache)
          {
            size_t v74 = (void *)v324;
            uint64_t v56 = v300;
            uint64_t v55 = v299;
            uint64_t i = v306;
            uint64_t v68 = v314;
            unint64_t v69 = (unint64_t)v301;
            break;
          }
        }
      }
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      size_t v74 = _swiftEmptyArrayStorage;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    size_t v74 = _swiftEmptyArrayStorage;
    uint64_t v68 = v314;
    unint64_t v69 = (unint64_t)v301;
  }
  sub_100E4D5E0((uint64_t)v74, v69);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v313 + 48))(v69, 1, v68) == 1)
  {
    sub_10001DAB4(v69, (uint64_t *)&unk_101655530);
    goto LABEL_41;
  }
  (*(void (**)(char *, uint64_t))(v56 + 8))(i, v55);
  uint64_t v95 = v292;
  sub_100849DCC(v69, v292, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  int v96 = *(unsigned __int8 *)(v95 + *(int *)(v68 + 24));
  if (v96 == 23)
  {
    uint64_t v97 = 4;
LABEL_39:
    uint64_t v327 = v97;
    goto LABEL_40;
  }
  if (v96 == 24)
  {
    uint64_t v97 = 1;
    goto LABEL_39;
  }
  if (v96 != 25)
  {
    uint64_t v97 = 2;
    goto LABEL_39;
  }
  uint64_t v327 = 0;
LABEL_40:
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(i, v95 + *(int *)(v68 + 20), v55);
  sub_100849E34(v95, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
LABEL_41:
  uint64_t v98 = v298;
  sub_100ACCD98(v307, (uint64_t)&v324);
  uint64_t v73 = _TtC12searchpartyd14ConnectionPair;
  uint64_t p_ivar_base_size = (uint64_t)&AnalyticsEvent.ivar_base_size;
  uint64_t v99 = v305;
  uint64_t v79 = (int *)v303;
  if (!v325)
  {
    sub_10001DAB4((uint64_t)&v324, (uint64_t *)&unk_10163BBE0);
    goto LABEL_47;
  }
  sub_10001CEB0(&v324, (uint64_t)&v318);
  uint64_t v100 = v319;
  uint64_t v101 = v320;
  sub_10001CD44(&v318, v319);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v101 + 120))(v100, v101) & 1) == 0)
  {
LABEL_45:
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v318);
LABEL_47:
    uint64_t v106 = (uint64_t)v293;
    goto LABEL_48;
  }
  uint64_t v102 = v319;
  uint64_t v103 = v320;
  sub_10001CD44(&v318, v319);
  uint64_t v104 = v102;
  uint64_t v105 = (uint64_t)v290;
  (*(void (**)(uint64_t, uint64_t))(v103 + 192))(v104, v103);
  uint64_t v76 = (_UNKNOWN **)v302;
  if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v99 + 6))(v105, 1, v302) == 1)
  {
    sub_10001DAB4(v105, &qword_101638CF0);
    goto LABEL_45;
  }
  uint64_t v143 = v105;
  uint64_t v144 = (uint64_t)v288;
  (*((void (**)(char *, uint64_t, _UNKNOWN **))v99 + 4))(v288, v143, v76);
  uint64_t v145 = v287;
  sub_100AE75E0(v144, v287);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v285 + 48))(v145, 1, v286) == 1)
  {
    (*((void (**)(uint64_t, _UNKNOWN **))v99 + 1))(v144, v76);
    sub_10001DAB4(v145, &qword_10163BB20);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v318);
    uint64_t v106 = (uint64_t)v293;
    uint64_t p_ivar_base_size = (uint64_t)&AnalyticsEvent.ivar_base_size;
    uint64_t v73 = _TtC12searchpartyd14ConnectionPair;
    goto LABEL_48;
  }
  uint64_t v146 = v284;
  sub_100849DCC(v145, v284, type metadata accessor for OwnedBeaconGroup);
  uint64_t v147 = &v98[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_coordinators];
  swift_beginAccess();
  uint64_t v148 = *(void *)v147;
  uint64_t p_ivar_base_size = (uint64_t)&AnalyticsEvent.ivar_base_size;
  if (*(void *)(*(void *)v147 + 16))
  {
    uint64_t v316 = (uint64_t)v147;
    uint64_t v149 = (uint64_t)v4;
    swift_bridgeObjectRetain();
    unint64_t v150 = sub_1007240CC(v307);
    uint64_t v152 = v304;
    if (v151)
    {
      uint64_t v153 = v283;
      sub_10084B940(*(void *)(v148 + 56) + *(void *)(v304 + 72) * v150, v283, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      uint64_t v154 = *(void **)(v152 + 56);
      uint64_t v155 = v153;
      uint64_t v156 = 0;
    }
    else
    {
      uint64_t v154 = *(void **)(v304 + 56);
      uint64_t v153 = v283;
      uint64_t v155 = v283;
      uint64_t v156 = 1;
    }
    id v317 = v154;
    ((void (*)(uint64_t, uint64_t, uint64_t, int *))v154)(v155, v156, 1, v79);
    uint64_t v73 = _TtC12searchpartyd14ConnectionPair;
    swift_bridgeObjectRelease();
    v160 = *(unsigned int (**)(void, void, void))(v152 + 48);
    uint64_t v159 = v152 + 48;
    uint64_t v158 = v160;
    if (v160(v153, 1, v79) == 1) {
      goto LABEL_93;
    }
    uint64_t v314 = (uint64_t)v158;
    uint64_t v315 = v159;
    sub_100849DCC(v153, v282, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    sub_100AA33CC(v146, v149);
    uint64_t v162 = v281;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v280 + 48))(v149, 1, v281) == 1)
    {
      sub_10001DAB4(v149, &qword_10163B9F0);
    }
    else
    {
      uint64_t v163 = (uint64_t)v277;
      sub_100849DCC(v149, (uint64_t)v277, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      uint64_t v164 = (void *)(v163 + *(int *)(v162 + 20));
      sub_10084B9A8((unint64_t *)&qword_10163B8F0, (void (*)(uint64_t))&type metadata accessor for UUID);
      if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
      {
        uint64_t v178 = sub_100AA881C(v146);
        __chkstk_darwin(v178);
        *(&v267 - 2) = v163;
        unint64_t v78 = (void *)sub_100E4F2AC(sub_100847340, (uint64_t)(&v267 - 4), (uint64_t)v178);
        swift_bridgeObjectRelease();
        if (!v78) {
          unint64_t v78 = &_swiftEmptySetSingleton;
        }
        if (qword_101636CF8 != -1) {
          swift_once();
        }
        id v317 = v164;
        uint64_t v179 = type metadata accessor for Logger();
        uint64_t v180 = sub_100010324(v179, (uint64_t)qword_10170E3C8);
        uint64_t i = v305;
        unint64_t v69 = (unint64_t)v272;
        (*((void (**)(char *, uint64_t, _UNKNOWN **))v305 + 2))(v272, v307, v76);
        uint64_t v181 = v163;
        uint64_t v4 = v274;
        sub_10084B940(v181, (uint64_t)v274, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        swift_bridgeObjectRetain_n();
        uint64_t v313 = v180;
        uint64_t v72 = Logger.logObject.getter();
        os_log_type_t v182 = static os_log_type_t.info.getter();
        int v183 = v182;
        if (os_log_type_enabled(v72, v182))
        {
          uint64_t v184 = swift_slowAlloc();
          v312 = (int *)swift_slowAlloc();
          *(void *)&long long v324 = v312;
          *(_DWORD *)uint64_t v184 = 141559299;
          uint64_t v322 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v184 + 12) = 2081;
          v309 = (void (*)(uint64_t))&type metadata accessor for UUID;
          sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
          os_log_t v311 = v72;
          uint64_t v185 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v322 = sub_1008FA0F0(v185, v186, (uint64_t *)&v324);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          LODWORD(cache) = v183;
          uint64_t v187 = (void (*)(unint64_t, uint64_t))*((void *)v305 + 1);
          v187(v69, v302);
          *(_WORD *)(v184 + 22) = 2160;
          uint64_t v322 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v184 + 32) = 2081;
          uint64_t v188 = (uint64_t)v274;
          uint64_t v189 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v322 = sub_1008FA0F0(v189, v190, (uint64_t *)&v324);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100849E34(v188, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
          *(_WORD *)(v184 + 42) = 2160;
          uint64_t v322 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v184 + 52) = 2081;
          sub_10084B9A8(&qword_10163BC60, v309);
          swift_bridgeObjectRetain();
          uint64_t v191 = Set.description.getter();
          unint64_t v193 = v192;
          swift_bridgeObjectRelease();
          uint64_t v322 = sub_1008FA0F0(v191, v193, (uint64_t *)&v324);
          uint64_t v79 = (int *)v303;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          uint64_t v76 = (_UNKNOWN **)v302;
          swift_bridgeObjectRelease();
          os_log_t v194 = v311;
          _os_log_impl((void *)&_mh_execute_header, v311, (os_log_type_t)cache, "device: %{private,mask.hash}s, primaryBeacon: %{private,mask.hash}s, nearbyPeers: %{private,mask.hash}s", (uint8_t *)v184, 0x3Eu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
LABEL_123:
          uint64_t v187 = (void (*)(unint64_t, uint64_t))*((void *)i + 1);
          v187(v69, (uint64_t)v76);
          sub_100849E34((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);

          swift_bridgeObjectRelease_n();
        }
        uint64_t v221 = v282;
        char v222 = sub_100DC7280(v307, (uint64_t)v78);
        swift_bridgeObjectRelease();
        if ((v222 & 1) == 0)
        {
          sub_100849E34(v221, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
          sub_100849E34(v284, type metadata accessor for OwnedBeaconGroup);
          v187((unint64_t)v288, (uint64_t)v76);
          sub_100849E34((uint64_t)v277, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
          goto LABEL_95;
        }
        uint64_t v223 = *(void *)v316;
        uint64_t v224 = *(void *)(*(void *)v316 + 16);
        uint64_t v225 = v284;
        v312 = (int *)v187;
        if (v224)
        {
          swift_bridgeObjectRetain();
          unint64_t v226 = sub_1007240CC((uint64_t)v317);
          if (v227)
          {
            uint64_t v228 = v304;
            uint64_t v229 = v271;
            sub_10084B940(*(void *)(v223 + 56) + *(void *)(v304 + 72) * v226, v271, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
            uint64_t v230 = 0;
            v231 = v288;
          }
          else
          {
            uint64_t v230 = 1;
            v231 = v288;
            uint64_t v228 = v304;
            uint64_t v229 = v271;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v228 + 56))(v229, v230, 1, v79);
          swift_bridgeObjectRelease();
          int v234 = ((uint64_t (*)(uint64_t, uint64_t, int *))v314)(v229, 1, v79);
          uint64_t v233 = v229;
          uint64_t v225 = v284;
          if (v234 != 1)
          {
            uint64_t v235 = v269;
            sub_100849DCC(v233, v269, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
            v236 = (void *)sub_100820E08(v235 + v79[5]);
            sub_10001D010((uint64_t)&v318, (uint64_t)&v324);
            uint64_t v237 = v268;
            sub_10084B940(v235, v268, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
            id v317 = v236;
            v238 = Logger.logObject.getter();
            os_log_type_t v239 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v238, v239))
            {
              uint64_t v240 = swift_slowAlloc();
              uint64_t v316 = swift_slowAlloc();
              uint64_t v323 = v316;
              *(_DWORD *)uint64_t v240 = 141559299;
              uint64_t v322 = 1752392040;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v240 + 12) = 2081;
              uint64_t v242 = v325;
              uint64_t v241 = v326;
              sub_10001CD44(&v324, v325);
              v243 = v270;
              (*(void (**)(uint64_t))(*(void *)(*(void *)(v241 + 8) + 8) + 32))(v242);
              sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
              uint64_t v244 = v302;
              uint64_t v245 = dispatch thunk of CustomStringConvertible.description.getter();
              unint64_t v247 = v246;
              ((void (*)(char *, uint64_t))v312)(v243, v244);
              uint64_t v322 = sub_1008FA0F0(v245, v247, &v323);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v324);
              *(_WORD *)(v240 + 22) = 2082;
              swift_beginAccess();
              unint64_t v248 = 0xE800000000000000;
              uint64_t v249 = 0x676E696E6E75722ELL;
              switch(v327)
              {
                case -1:
                  uint64_t v249 = 0x6E776F6E6B6E752ELL;
                  break;
                case 0:
                  break;
                case 1:
                  uint64_t v249 = 0x676E69646E65702ELL;
                  break;
                case 2:
                  unint64_t v248 = 0xE500000000000000;
                  uint64_t v249 = 0x656C64692ELL;
                  break;
                case 3:
                  unint64_t v248 = 0xE600000000000000;
                  uint64_t v249 = 0x726F7272652ELL;
                  break;
                case 4:
                  unint64_t v248 = 0xE700000000000000;
                  uint64_t v249 = 0x6465756575712ELL;
                  break;
                default:
                  unint64_t v248 = 0x8000000101408870;
                  uint64_t v249 = 0xD000000000000010;
                  break;
              }
              uint64_t v321 = sub_1008FA0F0(v249, v248, &v323);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              *(_WORD *)(v240 + 32) = 2082;
              v259 = (char *)[v317 state] + 1;
              unint64_t v260 = 0xE800000000000000;
              uint64_t v261 = 0x676E696E6E75722ELL;
              switch((unint64_t)v259)
              {
                case 0uLL:
                  uint64_t v261 = 0x6E776F6E6B6E752ELL;
                  break;
                case 1uLL:
                  break;
                case 2uLL:
                  uint64_t v261 = 0x676E69646E65702ELL;
                  break;
                case 3uLL:
                  unint64_t v260 = 0xE500000000000000;
                  uint64_t v261 = 0x656C64692ELL;
                  break;
                case 4uLL:
                  unint64_t v260 = 0xE600000000000000;
                  uint64_t v261 = 0x726F7272652ELL;
                  break;
                case 5uLL:
                  unint64_t v260 = 0xE700000000000000;
                  uint64_t v261 = 0x6465756575712ELL;
                  break;
                default:
                  unint64_t v260 = 0x8000000101408870;
                  uint64_t v261 = 0xD000000000000010;
                  break;
              }
              uint64_t v321 = sub_1008FA0F0(v261, v260, &v323);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              id v262 = v317;

              swift_bridgeObjectRelease();
              *(_WORD *)(v240 + 42) = 2160;
              uint64_t v321 = 1752392040;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v240 + 52) = 2081;
              uint64_t v263 = v268;
              uint64_t v264 = v302;
              uint64_t v265 = dispatch thunk of CustomStringConvertible.description.getter();
              uint64_t v321 = sub_1008FA0F0(v265, v266, &v323);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              sub_100849E34(v263, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
              _os_log_impl((void *)&_mh_execute_header, v238, v239, "Beacon: %{private,mask.hash}s has state: %{public}s, -- taking playSound taskInfo state %{public}s from primary %{private,mask.hash}s.", (uint8_t *)v240, 0x3Eu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              sub_100849E34(v269, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
              sub_100849E34(v282, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
              sub_100849E34(v284, type metadata accessor for OwnedBeaconGroup);
              ((void (*)(char *, uint64_t))v312)(v288, v264);
            }
            else
            {

              sub_100849E34(v237, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
              id v250 = v317;

              _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v324);
              sub_100849E34(v235, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
              sub_100849E34(v221, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
              sub_100849E34(v225, type metadata accessor for OwnedBeaconGroup);
              ((void (*)(char *, uint64_t))v312)(v288, v302);
            }
            (*(void (**)(char *, uint64_t))(v300 + 8))(v306, v299);
            sub_100849E34((uint64_t)v277, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
            goto LABEL_154;
          }
        }
        else
        {
          uint64_t v233 = v271;
          (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v304 + 56))(v271, 1, 1, v79);
          v231 = v288;
        }
        sub_100849E34(v221, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
        sub_100849E34(v225, type metadata accessor for OwnedBeaconGroup);
        ((void (*)(char *, _UNKNOWN **))v312)(v231, v76);
        sub_100849E34((uint64_t)v277, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        uint64_t v161 = v233;
        goto LABEL_94;
      }
      sub_100849E34(v163, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    }
    uint64_t v165 = sub_1004D1434();
    sub_10000588C(&qword_10163BC50);
    uint64_t v166 = swift_allocObject();
    *(_OWORD *)(v166 + 16) = xmmword_101342130;
    uint64_t v168 = v319;
    uint64_t v167 = v320;
    sub_10001CD44(&v318, v319);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v167 + 8) + 8) + 32))(v168);
    uint64_t v169 = sub_1008A48BC(v166, v165);
    swift_setDeallocating();
    uint64_t v170 = v302;
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v171 = v298;
    uint64_t v172 = sub_100846694((uint64_t)v169, (uint64_t)v171);
    swift_release();

    uint64_t v173 = v172[2];
    uint64_t v79 = (int *)v303;
    if (v173)
    {
      uint64_t v174 = (uint64_t)v172
           + ((*(unsigned __int8 *)(v304 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v304 + 80));
      uint64_t v175 = *(void *)(v304 + 72);
      swift_bridgeObjectRetain();
      uint64_t v176 = (uint64_t)v275;
      while (1)
      {
        sub_10084B940(v174, v176, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
        if (*(unsigned char *)(v176 + v79[10]) == 1) {
          break;
        }
        sub_100849E34(v176, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
        v174 += v175;
        if (!--v173)
        {
          swift_bridgeObjectRelease();
          uint64_t v170 = v302;
          goto LABEL_105;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v195 = v176;
      uint64_t v177 = v278;
      sub_100849DCC(v195, v278, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      ((void (*)(uint64_t, void, uint64_t, int *))v317)(v177, 0, 1, v79);
      uint64_t v170 = v302;
    }
    else
    {
LABEL_105:
      uint64_t v177 = v278;
      ((void (*)(uint64_t, uint64_t, uint64_t, int *))v317)(v278, 1, 1, v79);
    }
    swift_bridgeObjectRelease();
    int v196 = ((uint64_t (*)(uint64_t, uint64_t, int *))v314)(v177, 1, v79);
    v197 = v305;
    uint64_t v198 = v284;
    uint64_t v199 = v282;
    if (v196 == 1)
    {
      sub_100849E34(v282, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      sub_100849E34(v198, type metadata accessor for OwnedBeaconGroup);
      (*((void (**)(char *, uint64_t))v197 + 1))(v288, v170);
      uint64_t v161 = v177;
      goto LABEL_94;
    }
    uint64_t v200 = v177;
    uint64_t v201 = v276;
    sub_100849DCC(v200, v276, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    if ((static UUID.== infix(_:_:)() & 1) == 0)
    {
      sub_100849E34(v201, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      sub_100849E34(v199, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      sub_100849E34(v198, type metadata accessor for OwnedBeaconGroup);
      (*((void (**)(char *, uint64_t))v197 + 1))(v288, v170);
      goto LABEL_95;
    }
    v202 = (void *)sub_100820E08(v201 + v79[5]);
    if (qword_101636CF8 != -1) {
      swift_once();
    }
    uint64_t v203 = type metadata accessor for Logger();
    sub_100010324(v203, (uint64_t)qword_10170E3C8);
    sub_10001D010((uint64_t)&v318, (uint64_t)&v324);
    uint64_t v204 = v273;
    sub_10084B940(v201, v273, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    id v317 = v202;
    v205 = Logger.logObject.getter();
    os_log_type_t v206 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v205, v206))
    {
      uint64_t v207 = swift_slowAlloc();
      uint64_t v316 = swift_slowAlloc();
      uint64_t v323 = v316;
      *(_DWORD *)uint64_t v207 = 141559299;
      uint64_t v322 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v207 + 12) = 2081;
      uint64_t v209 = v325;
      uint64_t v208 = v326;
      sub_10001CD44(&v324, v325);
      v210 = v270;
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v208 + 8) + 8) + 32))(v209);
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v211 = v302;
      uint64_t v212 = dispatch thunk of CustomStringConvertible.description.getter();
      v213 = v197;
      unint64_t v215 = v214;
      v216 = (void (*)(char *, uint64_t))*((void *)v213 + 1);
      uint64_t v217 = v211;
      v305 = v213 + 8;
      v218 = v216;
      v216(v210, v217);
      uint64_t v322 = sub_1008FA0F0(v212, v215, &v323);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v324);
      *(_WORD *)(v207 + 22) = 2082;
      swift_beginAccess();
      unint64_t v219 = 0xE800000000000000;
      uint64_t v220 = 0x676E696E6E75722ELL;
      switch(v327)
      {
        case -1:
          uint64_t v220 = 0x6E776F6E6B6E752ELL;
          break;
        case 0:
          break;
        case 1:
          uint64_t v220 = 0x676E69646E65702ELL;
          break;
        case 2:
          unint64_t v219 = 0xE500000000000000;
          uint64_t v220 = 0x656C64692ELL;
          break;
        case 3:
          unint64_t v219 = 0xE600000000000000;
          uint64_t v220 = 0x726F7272652ELL;
          break;
        case 4:
          unint64_t v219 = 0xE700000000000000;
          uint64_t v220 = 0x6465756575712ELL;
          break;
        default:
          unint64_t v219 = 0x8000000101408870;
          uint64_t v220 = 0xD000000000000010;
          break;
      }
      uint64_t v321 = sub_1008FA0F0(v220, v219, &v323);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v207 + 32) = 2082;
      v251 = (char *)[v317 state] + 1;
      unint64_t v252 = 0xE800000000000000;
      uint64_t v253 = 0x676E696E6E75722ELL;
      switch((unint64_t)v251)
      {
        case 0uLL:
          uint64_t v253 = 0x6E776F6E6B6E752ELL;
          break;
        case 1uLL:
          break;
        case 2uLL:
          uint64_t v253 = 0x676E69646E65702ELL;
          break;
        case 3uLL:
          unint64_t v252 = 0xE500000000000000;
          uint64_t v253 = 0x656C64692ELL;
          break;
        case 4uLL:
          unint64_t v252 = 0xE600000000000000;
          uint64_t v253 = 0x726F7272652ELL;
          break;
        case 5uLL:
          unint64_t v252 = 0xE700000000000000;
          uint64_t v253 = 0x6465756575712ELL;
          break;
        default:
          unint64_t v252 = 0x8000000101408870;
          uint64_t v253 = 0xD000000000000010;
          break;
      }
      uint64_t v321 = sub_1008FA0F0(v253, v252, &v323);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v254 = v317;

      swift_bridgeObjectRelease();
      *(_WORD *)(v207 + 42) = 2160;
      uint64_t v321 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v207 + 52) = 2081;
      uint64_t v255 = v273;
      uint64_t v256 = v302;
      uint64_t v257 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v321 = sub_1008FA0F0(v257, v258, &v323);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100849E34(v255, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      _os_log_impl((void *)&_mh_execute_header, v205, v206, "Beacon: %{private,mask.hash}s has state: %{public}s, -- taking playSound taskInfo state %{public}s from %{private,mask.hash}s.", (uint8_t *)v207, 0x3Eu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100849E34(v276, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      sub_100849E34(v282, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      sub_100849E34(v284, type metadata accessor for OwnedBeaconGroup);
      v218(v288, v256);
    }
    else
    {

      sub_100849E34(v204, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      id v232 = v317;

      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v324);
      sub_100849E34(v201, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      sub_100849E34(v199, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      sub_100849E34(v198, type metadata accessor for OwnedBeaconGroup);
      (*((void (**)(char *, uint64_t))v197 + 1))(v288, v302);
    }
    (*(void (**)(char *, uint64_t))(v300 + 8))(v306, v299);
LABEL_154:
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v318);
    return v317;
  }
  uint64_t v153 = v283;
  (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v304 + 56))(v283, 1, 1, v79);
  uint64_t v73 = _TtC12searchpartyd14ConnectionPair;
LABEL_93:
  sub_100849E34(v146, type metadata accessor for OwnedBeaconGroup);
  (*((void (**)(char *, _UNKNOWN **))v305 + 1))(v288, v76);
  uint64_t v161 = v153;
LABEL_94:
  sub_10001DAB4(v161, &qword_10163CBC8);
LABEL_95:
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v318);
  uint64_t v106 = (uint64_t)v293;
  uint64_t v98 = v298;
LABEL_48:
  uint64_t v107 = &v98[(unint64_t)v73[90].vtable];
  swift_beginAccess();
  uint64_t v108 = *(void *)v107;
  if (*(void *)(*(void *)v107 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v109 = sub_1007240CC(v307);
    uint64_t v111 = v304;
    if (v110)
    {
      sub_10084B940(*(void *)(v108 + 56) + *(void *)(v304 + 72) * v109, v106, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      uint64_t v112 = *(void (**)(uint64_t, void, uint64_t, int *))(v111 + 56);
      v112(v106, 0, 1, v79);
    }
    else
    {
      uint64_t v112 = *(void (**)(uint64_t, void, uint64_t, int *))(v304 + 56);
      v112(v106, 1, 1, v79);
    }
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v111 + 48))(v106, 1, v79) != 1)
    {
      uint64_t v114 = v289;
      sub_100849DCC(v106, v289, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      uint64_t v113 = *(void *)(v114 + v79[9]);
      swift_errorRetain();
      sub_100849E34(v114, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      if (v113) {
        uint64_t v327 = 3;
      }
      goto LABEL_57;
    }
  }
  else
  {
    uint64_t v112 = *(void (**)(uint64_t, void, uint64_t, int *))(v304 + 56);
    v112(v106, 1, 1, v79);
  }
  sub_10001DAB4(v106, &qword_10163CBC8);
  uint64_t v113 = 0;
LABEL_57:
  uint64_t v115 = v327;
  id v116 = SPBeaconTaskNamePlaySound;
  swift_errorRetain();
  v117.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
  if (v113)
  {
    int v118 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
  }
  else
  {
    int v118 = 0;
  }
  id v317 = [objc_allocWithZone((Class)SPBeaconTaskInformation) initWithName:v116 lastUpdated:v117.super.isa error:v118 state:v115];

  uint64_t v119 = *(void *)v107;
  if (*(void *)(*(void *)v107 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v120 = sub_1007240CC(v307);
    uint64_t v121 = v302;
    uint64_t v122 = v303;
    uint64_t v123 = v295;
    uint64_t v124 = v304;
    if (v125)
    {
      sub_10084B940(*(void *)(v119 + 56) + *(void *)(v304 + 72) * v120, v295, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      uint64_t v126 = v123;
      uint64_t v127 = 0;
    }
    else
    {
      uint64_t v126 = v295;
      uint64_t v127 = 1;
    }
    v112(v126, v127, 1, (int *)v122);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v124 = v304;
    uint64_t v123 = v295;
    uint64_t v122 = v303;
    v112(v295, 1, 1, (int *)v303);
    uint64_t v121 = v302;
  }
  int v128 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v124 + 48))(v123, 1, v122);
  uint64_t v129 = v305;
  if (v128)
  {
    sub_10001DAB4(v123, &qword_10163CBC8);
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v129 + 7))(v294, 1, 1, v121);
    Class isa = 0;
    uint64_t v131 = v296;
  }
  else
  {
    uint64_t v132 = v291;
    sub_10084B940(v123, v291, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    sub_10001DAB4(v123, &qword_10163CBC8);
    uint64_t v133 = v294;
    (*((void (**)(char *, uint64_t, uint64_t))v129 + 2))(v294, v132, v121);
    sub_100849E34(v132, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    (*((void (**)(char *, void, uint64_t, uint64_t))v129 + 7))(v133, 0, 1, v121);
    int v134 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v129 + 6))(v133, 1, v121);
    uint64_t v131 = v296;
    if (v134 == 1)
    {
      Class isa = 0;
    }
    else
    {
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*((void (**)(char *, uint64_t))v129 + 1))(v133, v121);
    }
  }
  [v317 setCommandIdentifier:isa];

  if (*(void *)(p_ivar_base_size + 3320) != -1) {
    swift_once();
  }
  uint64_t v135 = type metadata accessor for Logger();
  sub_100010324(v135, (uint64_t)qword_10170E3C8);
  (*((void (**)(char *, uint64_t, uint64_t))v129 + 2))(v131, v307, v121);
  uint64_t v136 = Logger.logObject.getter();
  os_log_type_t v137 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v136, v137))
  {
    uint64_t v138 = swift_slowAlloc();
    uint64_t v316 = swift_slowAlloc();
    uint64_t v322 = v316;
    *(_DWORD *)uint64_t v138 = 141558531;
    *(void *)&long long v324 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v138 + 12) = 2081;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v139 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&long long v324 = sub_1008FA0F0(v139, v140, &v322);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*((void (**)(char *, uint64_t))v129 + 1))(v131, v121);
    *(_WORD *)(v138 + 22) = 2082;
    swift_beginAccess();
    uint64_t v141 = 0x676E696E6E75722ELL;
    unint64_t v142 = 0xE800000000000000;
    switch(v327)
    {
      case -1:
        uint64_t v141 = 0x6E776F6E6B6E752ELL;
        break;
      case 0:
        break;
      case 1:
        uint64_t v141 = 0x676E69646E65702ELL;
        break;
      case 2:
        unint64_t v142 = 0xE500000000000000;
        uint64_t v141 = 0x656C64692ELL;
        break;
      case 3:
        unint64_t v142 = 0xE600000000000000;
        uint64_t v141 = 0x726F7272652ELL;
        break;
      case 4:
        unint64_t v142 = 0xE700000000000000;
        uint64_t v141 = 0x6465756575712ELL;
        break;
      default:
        unint64_t v142 = 0x8000000101408870;
        uint64_t v141 = 0xD000000000000010;
        break;
    }
    uint64_t v323 = sub_1008FA0F0(v141, v142, &v322);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v136, v137, "TaskInfo for Beacon: %{private,mask.hash}s has state: %{public}s.", (uint8_t *)v138, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    (*((void (**)(char *, uint64_t))v129 + 1))(v131, v121);
  }
  (*(void (**)(char *, uint64_t))(v300 + 8))(v306, v299);
  return v317;
}

uint64_t sub_100824190@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v35 = a3;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000588C(&qword_10163BB20);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100AE75E0(a2, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10001DAB4((uint64_t)v11, &qword_10163BB20);
    uint64_t result = (uint64_t)sub_1008245D8(a2);
    id v17 = (id)result;
  }
  else
  {
    sub_100849DCC((uint64_t)v11, (uint64_t)v15, type metadata accessor for OwnedBeaconGroup);
    uint64_t v18 = sub_1004D1434();
    id v19 = a1;
    unint64_t v20 = (unint64_t)sub_100848434(v18, (uint64_t)v19, (uint64_t)v36, (void (*)(char *))sub_1008245D8);
    swift_bridgeObjectRelease();

    uint64_t v32 = v3;
    if (v20 >> 62) {
      goto LABEL_26;
    }
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v21; uint64_t v21 = _CocoaArrayWrapper.endIndex.getter())
    {
      unint64_t v22 = v20 & 0xC000000000000001;
      uint64_t v23 = 4;
      do
      {
        if (v22) {
          id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v24 = *(id *)(v20 + 8 * v23);
        }
        id v17 = v24;
        uint64_t v25 = v23 - 3;
        if (__OFADD__(v23 - 4, 1))
        {
          __break(1u);
          goto LABEL_25;
        }
        if (![v24 state])
        {
          swift_bridgeObjectRelease();
          sub_100849E34((uint64_t)v15, type metadata accessor for OwnedBeaconGroup);
          uint64_t result = swift_bridgeObjectRelease();
          goto LABEL_23;
        }

        ++v23;
      }
      while (v25 != v21);
      uint64_t v26 = 4;
      while (1)
      {
        id v27 = v22 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v20 + 8 * v26);
        id v17 = v27;
        uint64_t v28 = v26 - 3;
        if (__OFADD__(v26 - 4, 1)) {
          break;
        }
        if ([v27 state] == (id)1)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_22;
        }

        ++v26;
        if (v28 == v21) {
          goto LABEL_19;
        }
      }
LABEL_25:
      __break(1u);
LABEL_26:
      swift_bridgeObjectRetain();
    }
LABEL_19:
    swift_bridgeObjectRelease_n();
    id v29 = SPBeaconTaskNameStopSound;
    static Date.trustedNow.getter((uint64_t)v8);
    id v30 = objc_allocWithZone((Class)SPBeaconTaskInformation);
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v17 = [v30 initWithName:v29 lastUpdated:isa error:0 state:2];

    (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v34);
LABEL_22:
    uint64_t result = sub_100849E34((uint64_t)v15, type metadata accessor for OwnedBeaconGroup);
  }
LABEL_23:
  *uint64_t v35 = v17;
  return result;
}

id sub_1008245D8(uint64_t a1)
{
  uint64_t v102 = a1;
  uint64_t v2 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v2 - 8);
  uint64_t i = (char *)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000588C(&qword_10163CBC8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v99 = (uint64_t)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v97 = (uint64_t)&v90 - v8;
  uint64_t v104 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  uint64_t v103 = *(void *)(v104 - 8);
  uint64_t v9 = __chkstk_darwin(v104);
  uint64_t v95 = (uint64_t)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v94 = (uint64_t)&v90 - v11;
  uint64_t v12 = sub_10000588C((uint64_t *)&unk_101655530);
  __chkstk_darwin(v12 - 8);
  uint64_t v100 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for BeaconObservation();
  uint64_t v110 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v108 = (uint64_t)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v109 = (char *)&v90 - v18;
  __chkstk_darwin(v17);
  uint64_t v96 = (uint64_t)&v90 - v19;
  unint64_t v20 = (_UNKNOWN **)type metadata accessor for Date();
  uint64_t v101 = (uint64_t)*(v20 - 1);
  __chkstk_darwin(v20);
  unint64_t v22 = (unint64_t)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DispatchPredicate();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (void **)((char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v98 = v1;
  id v27 = *(void **)(v1 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue);
  *uint64_t v26 = v27;
  (*(void (**)(void *, void, uint64_t))(v24 + 104))(v26, enum case for DispatchPredicate.onQueue(_:), v23);
  id v28 = v27;
  char v29 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v24 + 8))(v26, v23);
  if ((v29 & 1) == 0)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  Date.init()();
  if (qword_101636CB8 != -1) {
LABEL_57:
  }
    swift_once();
  sub_10000588C(&qword_101655540);
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v31 = v114;
  uint64_t v32 = (uint64_t)v100;
  if (*(void *)(v114 + 16) && (unint64_t v33 = sub_1007240CC(v102), (v34 & 1) != 0))
  {
    uint64_t v35 = *(void *)(*(void *)(v31 + 56) + 8 * v33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_1007100C0(v35);
    swift_bridgeObjectRelease();
    size_t v37 = sub_100B752E8((uint64_t)v36);
    swift_release();
    uint64_t v38 = _swiftEmptyArrayStorage;
    uint64_t v115 = _swiftEmptyArrayStorage;
    uint64_t v107 = *(void *)(v37 + 16);
    if (v107)
    {
      uint64_t v90 = v30;
      unint64_t v91 = v22;
      uint64_t v92 = v20;
      char v93 = i;
      unint64_t v39 = 0;
      unint64_t v20 = &off_10159FBE8;
      uint64_t v40 = (uint64_t)v109;
      size_t v105 = v37;
      uint64_t v106 = v14;
      while (1)
      {
        if (v39 >= *(void *)(v37 + 16))
        {
          __break(1u);
          goto LABEL_56;
        }
        unint64_t v41 = *(void *)(v110 + 72);
        unint64_t v112 = (*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
        unint64_t v113 = v39 + 1;
        unint64_t v111 = v41;
        sub_10084B940(v37 + v112 + v41 * v39, v40, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        sub_1004DCCB0();
        uint64_t v42 = Set.init(minimumCapacity:)();
        uint64_t v43 = 0;
        for (uint64_t i = (char *)(v42 + 56); ; uint64_t i = (char *)(v42 + 56))
        {
          while (1)
          {
            uint64_t v44 = *((char *)&off_10159FBE8 + v43++ + 32);
            Hasher.init(_seed:)();
            Swift::UInt v45 = qword_10136A7D0[v44];
            Hasher._combine(_:)(v45);
            Swift::Int v46 = Hasher._finalize()();
            uint64_t v47 = -1 << *(unsigned char *)(v42 + 32);
            unint64_t v22 = v46 & ~v47;
            if (((*(void *)&i[(v22 >> 3) & 0xFFFFFFFFFFFFFF8] >> v22) & 1) == 0) {
              goto LABEL_18;
            }
            uint64_t v48 = *(void *)(v42 + 48);
            if (qword_10136A7D0[*(char *)(v48 + v22)] != v45) {
              break;
            }
LABEL_11:
            if (v43 == 7) {
              goto LABEL_20;
            }
          }
          uint64_t v49 = ~v47;
          while (1)
          {
            unint64_t v22 = (v22 + 1) & v49;
            if (((*(void *)&i[(v22 >> 3) & 0xFFFFFFFFFFFFFF8] >> v22) & 1) == 0) {
              break;
            }
            if (qword_10136A7D0[*(char *)(v48 + v22)] == v45) {
              goto LABEL_11;
            }
          }
LABEL_18:
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v114 = v42;
          sub_100DE20D8(v44, v22, isUniquelyReferenced_nonNull_native);
          uint64_t v42 = v114;
          swift_bridgeObjectRelease();
          if (v43 == 7) {
            break;
          }
        }
LABEL_20:
        uint64_t v14 = v106;
        uint64_t v40 = (uint64_t)v109;
        BOOL v51 = sub_100DC7BFC(v109[*(int *)(v106 + 24)], v42);
        swift_bridgeObjectRelease();
        if (v51)
        {
          sub_100849DCC(v40, v108, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          uint64_t v52 = v115;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1000B77F0(0, v52[2] + 1, 1);
            uint64_t v52 = v115;
          }
          unint64_t v22 = v111;
          uint64_t i = (char *)v112;
          unint64_t v54 = v52[2];
          unint64_t v53 = v52[3];
          if (v54 >= v53 >> 1)
          {
            sub_1000B77F0(v53 > 1, v54 + 1, 1);
            uint64_t v52 = v115;
          }
          v52[2] = v54 + 1;
          sub_100849DCC(v108, (uint64_t)&i[(void)v52 + v54 * v22], (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        }
        else
        {
          sub_100849E34(v40, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        }
        size_t v37 = v105;
        unint64_t v39 = v113;
        if (v113 == v107)
        {
          uint64_t v38 = v115;
          uint64_t i = v93;
          unint64_t v20 = v92;
          unint64_t v22 = v91;
          uint64_t v32 = (uint64_t)v100;
          id v30 = v90;
          break;
        }
      }
    }
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = _swiftEmptyArrayStorage;
  }
  sub_100E4D5E0((uint64_t)v38, v32);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v32, 1, v14) == 1)
  {
    sub_10001DAB4(v32, (uint64_t *)&unk_101655530);
    uint64_t v55 = 2;
  }
  else
  {
    uint64_t v56 = v101;
    (*(void (**)(unint64_t, _UNKNOWN **))(v101 + 8))(v22, v20);
    uint64_t v57 = v96;
    sub_100849DCC(v32, v96, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    uint64_t v55 = 2 * (*(unsigned char *)(v57 + *(int *)(v14 + 24)) != 26);
    (*(void (**)(unint64_t, uint64_t, _UNKNOWN **))(v56 + 16))(v22, v57 + *(int *)(v14 + 20), v20);
    sub_100849E34(v57, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  }
  uint64_t v58 = (uint64_t *)(v98 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_coordinators);
  swift_beginAccess();
  uint64_t v59 = *v58;
  if (!*(void *)(*v58 + 16))
  {
    uint64_t v60 = v20;
    uint64_t v61 = i;
    uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56);
    uint64_t v65 = v97;
    v66(v97, 1, 1, v104);
LABEL_38:
    sub_10001DAB4(v65, &qword_10163CBC8);
    uint64_t v70 = 0;
    goto LABEL_41;
  }
  uint64_t v60 = v20;
  uint64_t v61 = i;
  swift_bridgeObjectRetain();
  unint64_t v62 = sub_1007240CC(v102);
  uint64_t v64 = v103;
  if (v63)
  {
    uint64_t v65 = v97;
    sub_10084B940(*(void *)(v59 + 56) + *(void *)(v103 + 72) * v62, v97, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
    uint64_t v67 = v65;
    uint64_t v68 = 0;
  }
  else
  {
    uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56);
    uint64_t v65 = v97;
    uint64_t v67 = v97;
    uint64_t v68 = 1;
  }
  uint64_t v69 = v104;
  v66(v67, v68, 1, v104);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v65, 1, v69) == 1) {
    goto LABEL_38;
  }
  uint64_t v71 = v94;
  sub_100849DCC(v65, v94, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  uint64_t v70 = *(void *)(v71 + *(int *)(v69 + 36));
  swift_errorRetain();
  sub_100849E34(v71, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  if (v70) {
    uint64_t v55 = 3;
  }
LABEL_41:
  id v72 = SPBeaconTaskNameStopSound;
  swift_errorRetain();
  v73.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
  if (v70)
  {
    size_t v74 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
  }
  else
  {
    size_t v74 = 0;
  }
  id v75 = [objc_allocWithZone((Class)SPBeaconTaskInformation) initWithName:v72 lastUpdated:v73.super.isa error:v74 state:v55];

  uint64_t v76 = *v58;
  if (*(void *)(*v58 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v77 = sub_1007240CC(v102);
    uint64_t v78 = v99;
    uint64_t v79 = v104;
    uint64_t v80 = v103;
    if (v81)
    {
      sub_10084B940(*(void *)(v76 + 56) + *(void *)(v103 + 72) * v77, v99, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      uint64_t v82 = v78;
      uint64_t v83 = 0;
    }
    else
    {
      uint64_t v82 = v99;
      uint64_t v83 = 1;
    }
    v66(v82, v83, 1, v79);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v80 = v103;
    uint64_t v78 = v99;
    uint64_t v79 = v104;
    v66(v99, 1, 1, v104);
  }
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
  {
    sub_10001DAB4(v78, &qword_10163CBC8);
    uint64_t v84 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v61, 1, 1, v84);
    Class isa = 0;
  }
  else
  {
    uint64_t v86 = v95;
    sub_10084B940(v78, v95, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    sub_10001DAB4(v78, &qword_10163CBC8);
    uint64_t v87 = type metadata accessor for UUID();
    uint64_t v88 = *(void *)(v87 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v61, v86, v87);
    sub_100849E34(v86, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v61, 0, 1, v87);
    Class isa = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v61, 1, v87) != 1)
    {
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v88 + 8))(v61, v87);
    }
  }
  [v75 setCommandIdentifier:isa v90 v91 v92 v93];

  swift_errorRelease();
  (*(void (**)(unint64_t, _UNKNOWN **))(v101 + 8))(v22, v60);
  return v75;
}

id sub_100825414()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SoundPlaybackManager();
  return [super dealloc];
}

uint64_t sub_1008254E4(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_1016511E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WildModeAssociationRecord(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100AE381C(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10001DAB4((uint64_t)v4, &qword_1016511E0);
    sub_100ACCD98(a1, (uint64_t)v22);
    uint64_t v9 = v23;
    if (v23)
    {
      uint64_t v10 = v24;
      sub_10001CD44(v22, v23);
      uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 176))(v9, v10);
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v22);
      uint64_t v12 = (void *)SPBeaconTypeHele;
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;
      if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
        char v17 = 1;
      }
      else {
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      id v19 = v12;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10001DAB4((uint64_t)v22, (uint64_t *)&unk_10163BBE0);
      char v17 = 0;
    }
  }
  else
  {
    sub_100849DCC((uint64_t)v4, (uint64_t)v8, type metadata accessor for WildModeAssociationRecord);
    int v18 = v8[*(int *)(v5 + 52)];
    sub_100849E34((uint64_t)v8, type metadata accessor for WildModeAssociationRecord);
    char v17 = v18 == 3;
  }
  return v17 & 1;
}

uint64_t sub_100825760(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  __chkstk_darwin(v2);
  uint64_t v31 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000588C(&qword_10163BBB0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BeaconProductInfoRecord();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C(&qword_1016511E0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for WildModeAssociationRecord(0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  char v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100AE381C(a1, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_10001DAB4((uint64_t)v13, &qword_1016511E0);
    sub_100ACCD98(a1, (uint64_t)&v34);
    if (v35)
    {
      sub_10001CEB0(&v34, (uint64_t)v36);
      sub_100AE311C(a1, (uint64_t)v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_10001DAB4((uint64_t)v6, &qword_10163BBB0);
        uint64_t v19 = v37;
        uint64_t v18 = v38;
        sub_10001CD44(v36, v37);
        LOBYTE(v19) = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 96))(v19, v18);
      }
      else
      {
        sub_100849DCC((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
        LODWORD(v19) = (*(_DWORD *)&v10[*(int *)(v7 + 68)] >> 8) & 1;
        sub_100849E34((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
      }
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v36);
    }
    else
    {
      sub_10001DAB4((uint64_t)&v34, (uint64_t *)&unk_10163BBE0);
      if (qword_101636D08 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_100010324(v20, (uint64_t)qword_10164EDE8);
      unint64_t v22 = v31;
      uint64_t v21 = v32;
      uint64_t v23 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v31, a1, v33);
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = swift_slowAlloc();
        v36[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 141558275;
        *(void *)&long long v34 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v26 + 12) = 2081;
        sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)&long long v34 = sub_1008FA0F0(v27, v28, v36);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v23);
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Missing beacon record for %{private,mask.hash}s!", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v23);
      }

      LOBYTE(v19) = 0;
    }
  }
  else
  {
    sub_100849DCC((uint64_t)v13, (uint64_t)v17, type metadata accessor for WildModeAssociationRecord);
    LOBYTE(v19) = sub_100293DF4();
    sub_100849E34((uint64_t)v17, type metadata accessor for WildModeAssociationRecord);
  }
  return v19 & 1;
}

void sub_100825D34(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1004D1434();
  id v4 = a2;
  sub_100844B20(v3, (uint64_t)v4);
  swift_bridgeObjectRelease();
}

uint64_t sub_100825DA4(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v39 = a1;
  uint64_t v40 = a5;
  uint64_t v35 = a2;
  uint64_t v36 = a4;
  uint64_t v42 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v45 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  unint64_t v41 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v43 = *(void *)(v10 - 8);
  uint64_t v44 = v10;
  __chkstk_darwin(v10);
  uint64_t v37 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v33 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  long long v34 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = *(void *)&a2[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue];
  sub_10084B940(a3, (uint64_t)v18, type metadata accessor for OwnedBeaconGroup);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v36, v12);
  unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v20 = (v17 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (*(unsigned __int8 *)(v13 + 80) + v21 + 8) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v23 = (v14 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  sub_100849DCC((uint64_t)v18, v24 + v19, type metadata accessor for OwnedBeaconGroup);
  os_log_type_t v25 = v34;
  uint64_t v26 = v35;
  *(void *)(v24 + v20) = v35;
  *(double *)(v24 + v21) = a6;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v24 + v22, v25, v33);
  *(void *)(v24 + v23) = v40;
  *(void *)(v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8)) = v39;
  aBlock[4] = sub_10084926C;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015D7740;
  uint64_t v27 = _Block_copy(aBlock);
  id v28 = v26;
  swift_retain();
  char v29 = v37;
  static DispatchQoS.unspecified.getter();
  Swift::Int v46 = _swiftEmptyArrayStorage;
  sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v30 = v41;
  uint64_t v31 = v42;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v30, v31);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v44);
  return swift_release();
}

uint64_t sub_100826270(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v267 = a5;
  uint64_t v262 = a4;
  uint64_t v266 = a3;
  unint64_t v234 = sub_10000588C(&qword_10164EF08);
  v274 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v234 - 8);
  __chkstk_darwin(v234);
  uint64_t v233 = (char *)&v207 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v232 = sub_10000588C(&qword_10164EF10);
  uint64_t v230 = *(void *)(v232 - 8);
  __chkstk_darwin(v232);
  v231 = (char *)&v207 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C(&qword_10163C6C8);
  __chkstk_darwin(v11 - 8);
  v251 = (char *)&v207 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v244 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v242 = *(void *)(v244 - 8);
  __chkstk_darwin(v244);
  uint64_t v240 = (char *)&v207 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v239 = sub_10000588C(&qword_10164EF18);
  uint64_t v237 = *(void *)(v239 - 8);
  __chkstk_darwin(v239);
  v236 = (char *)&v207 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v243 = sub_10000588C(&qword_10164EF20);
  uint64_t v241 = *(void *)(v243 - 8);
  __chkstk_darwin(v243);
  v238 = (char *)&v207 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v247 = sub_10000588C(&qword_10164EF28);
  uint64_t v246 = *(void *)(v247 - 8);
  __chkstk_darwin(v247);
  uint64_t v245 = (char *)&v207 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v250 = sub_10000588C(&qword_10164EF30);
  uint64_t v249 = *(void *)(v250 - 8);
  __chkstk_darwin(v250);
  unint64_t v248 = (char *)&v207 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v253 = sub_10000588C(&qword_10164EF38);
  uint64_t v252 = *(void *)(v253 - 8);
  __chkstk_darwin(v253);
  uint64_t v257 = (char *)&v207 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000588C(&qword_10163B9F0);
  __chkstk_darwin(v19 - 8);
  uint64_t v258 = (uint64_t)&v207 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v215 = *(void *)(v216 - 8);
  __chkstk_darwin(v216);
  v213 = (char *)&v207 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = type metadata accessor for DispatchQoS();
  uint64_t v212 = *(void *)(v214 - 8);
  __chkstk_darwin(v214);
  uint64_t v211 = (char *)&v207 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v24 = v23 - 8;
  id v254 = *(void (**)(char *, char *, uint64_t))(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v261 = v25;
  uint64_t v269 = (uint64_t)&v207 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v221 = type metadata accessor for DispatchTime();
  uint64_t v222 = *(void *)(v221 - 8);
  uint64_t v26 = __chkstk_darwin(v221);
  v210 = (char *)&v207 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v220 = (char *)&v207 - v28;
  uint64_t v219 = type metadata accessor for Date();
  uint64_t v218 = *(void *)(v219 - 8);
  __chkstk_darwin(v219);
  uint64_t v217 = (uint64_t)&v207 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10000588C(&qword_10163CBC8);
  __chkstk_darwin(v30 - 8);
  uint64_t v228 = (uint64_t)&v207 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v229 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  uint64_t v227 = *(void *)(v229 - 8);
  uint64_t v32 = __chkstk_darwin(v229);
  uint64_t v225 = (uint64_t)&v207 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v209 = (uint64_t)&v207 - v35;
  __chkstk_darwin(v34);
  uint64_t v226 = (uint64_t)&v207 - v36;
  uint64_t v37 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v37 - 8);
  uint64_t v276 = (uint64_t)&v207 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for UUID();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v256 = (char *)&v207 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v223 = (char *)&v207 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v268 = (char *)&v207 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  v275 = (uint64_t (*)(uint64_t))((char *)&v207 - v48);
  uint64_t v49 = __chkstk_darwin(v47);
  BOOL v51 = (char *)&v207 - v50;
  uint64_t v52 = __chkstk_darwin(v49);
  unint64_t v54 = (char *)&v207 - v53;
  uint64_t v260 = v55;
  __chkstk_darwin(v52);
  uint64_t v57 = (char *)&v207 - v56;
  uint64_t v58 = a1 + *(int *)(v24 + 32);
  uint64_t v272 = v40;
  uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  uint64_t v59 = v40 + 16;
  uint64_t v60 = v61;
  v61((char *)&v207 - v56, (char *)v58, v39);
  uint64_t v270 = a1;
  uint64_t v62 = sub_1004D1434();
  char v63 = a2;
  int v64 = sub_100846CF8(v62, (uint64_t)v63);
  v277 = 0;
  swift_bridgeObjectRelease();
  uint64_t v273 = (void (*)(char *, uint64_t))v63;

  LODWORD(v263) = v64;
  uint64_t v65 = 0x6575657551;
  if ((v64 & 1) == 0) {
    uint64_t v65 = 0;
  }
  uint64_t v255 = v65;
  if (v64) {
    unint64_t v66 = 0xE500000000000000;
  }
  else {
    unint64_t v66 = 0xE000000000000000;
  }
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v67 = type metadata accessor for Logger();
  uint64_t v68 = sub_100010324(v67, (uint64_t)qword_10170E3C8);
  v60(v54, v57, v39);
  uint64_t v69 = v266;
  uint64_t v265 = v59;
  uint64_t v264 = (void (*)(char *, uint64_t, uint64_t))v60;
  v60(v51, (char *)v266, v39);
  swift_bridgeObjectRetain_n();
  unint64_t v70 = v66;
  uint64_t v224 = v68;
  uint64_t v71 = Logger.logObject.getter();
  os_log_type_t v72 = static os_log_type_t.default.getter();
  int v73 = v72;
  BOOL v74 = os_log_type_enabled(v71, v72);
  uint64_t v271 = v57;
  unint64_t v235 = v70;
  if (v74)
  {
    uint64_t v75 = swift_slowAlloc();
    uint64_t v208 = (void (*)(unint64_t, char *, uint64_t))swift_slowAlloc();
    aBlock[0] = (uint64_t)v208;
    *(_DWORD *)uint64_t v75 = 136446978;
    LODWORD(v207) = v73;
    swift_bridgeObjectRetain();
    uint64_t v279 = sub_1008FA0F0(v255, v70, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v75 + 12) = 2082;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v76 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v279 = sub_1008FA0F0(v76, v77, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v78 = *(void (**)(char *, uint64_t))(v272 + 8);
    v78(v54, v39);
    *(_WORD *)(v75 + 22) = 2048;
    uint64_t v279 = *(void *)&a6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v75 + 32) = 2082;
    uint64_t v69 = v266;
    uint64_t v79 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v279 = sub_1008FA0F0(v79, v80, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v78(v51, v39);
    uint64_t v81 = v270;
    _os_log_impl((void *)&_mh_execute_header, v71, (os_log_type_t)v207, "%{public}s playSound for group %{public}s with timeout %f. CommandId %{public}s", (uint8_t *)v75, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v82 = v272;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v82 = v272;
    uint64_t v78 = *(void (**)(char *, uint64_t))(v272 + 8);
    v78(v54, v39);
    v78(v51, v39);

    uint64_t v81 = v270;
  }
  uint64_t v259 = v39;
  if ((v263 & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v83 = sub_1004D1434();
  uint64_t v84 = v276;
  sub_10115B15C(v83, v276);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v84, 1, v39) == 1)
  {
    sub_10001DAB4(v84, &qword_101638CF0);
LABEL_22:
    uint64_t v96 = v273;
    uint64_t v97 = v258;
    sub_100AA33CC(v81, v258);
    uint64_t v98 = (void (*)(char *, uint64_t))sub_100AA881C(v81);
    uint64_t v99 = v69;
    uint64_t v100 = _swiftEmptyArrayStorage;
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v101 = sub_1004D1434();
    __chkstk_darwin(v101);
    *(&v207 - 6) = (void (*)(char *, uint64_t))v97;
    *(&v207 - 5) = v98;
    *(&v207 - 4) = (void (*)(char *, uint64_t))aBlock;
    *(&v207 - 3) = v96;
    uint64_t v206 = v99;
    sub_100E08474((void (*)(char *))sub_10084938C, (uint64_t)(&v207 - 8), v101);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v277 = (void *)aBlock[0];
    uint64_t v276 = *(void *)(aBlock[0] + 16);
    if (v276)
    {
      uint64_t v281 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v102 = (uint64_t (*)(uint64_t))sub_100062734(&qword_10164EF50, &qword_10164EF40);
      uint64_t v103 = 0;
      v274 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)v274 + 8);
      v275 = v102;
      uint64_t v104 = (void (**)(char *, uint64_t))(v230 + 8);
      unint64_t v105 = v234;
      uint64_t v106 = v233;
      uint64_t v107 = v232;
      uint64_t v108 = v231;
      do
      {
        uint64_t v109 = v103 + 1;
        uint64_t v280 = v277[v103 + 4];
        swift_retain();
        sub_10000588C(&qword_10164EF40);
        sub_10000588C(&qword_10164EF48);
        Publisher.map<A>(_:)();
        sub_10000588C(&qword_10164EF58);
        sub_100062734(&qword_10164EF60, &qword_10164EF08);
        sub_100062734(&qword_10164EF68, &qword_10164EF58);
        Publisher.catch<A>(_:)();
        (*(void (**)(char *, unint64_t))v274)(v106, v105);
        sub_100062734(&qword_10164EF70, &qword_10164EF10);
        Publisher.eraseToAnyPublisher()();
        (*v104)(v108, v107);
        swift_release();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        uint64_t v103 = v109;
      }
      while (v276 != v109);
      uint64_t v100 = v281;
      swift_bridgeObjectRelease();
    }
    v277 = (void *)Transaction.subscriptionCleaner.getter();
    uint64_t v110 = swift_allocObject();
    uint64_t v276 = v110;
    *(void *)(v110 + 16) = 2;
    *(unsigned char *)(v110 + 24) = 1;
    uint64_t v281 = v100;
    sub_10000588C(&qword_10164EF78);
    sub_100062734(&qword_10164EF80, &qword_10164EF78);
    sub_100062734(&qword_10164EF88, &qword_10164EF90);
    unint64_t v111 = (void *)Sequence<>.merged()();
    swift_bridgeObjectRelease();
    uint64_t v281 = v111;
    sub_10000588C(&qword_10164EF90);
    sub_1008476D4();
    unint64_t v112 = v236;
    Publisher<>.setFailureType<A>(to:)();
    swift_release();
    unint64_t v113 = v240;
    static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
    uint64_t v281 = *(void **)((char *)v273 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue);
    id v114 = v281;
    uint64_t v115 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v116 = *(void *)(v115 - 8);
    v274 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56);
    v275 = (uint64_t (*)(uint64_t))(v116 + 56);
    uint64_t v117 = (uint64_t)v251;
    v274(v251, 1, 1, v115);
    unint64_t v234 = sub_10000584C();
    sub_100062734(&qword_10164EFA0, &qword_10164EF18);
    uint64_t v118 = sub_10084B9A8((unint64_t *)&qword_10166C020, (void (*)(uint64_t))sub_10000584C);
    uint64_t v119 = v114;
    uint64_t v206 = v118;
    unint64_t v120 = v238;
    uint64_t v121 = v239;
    Publisher.timeout<A>(_:scheduler:options:customError:)();
    sub_10001DAB4(v117, &qword_10163C6C8);

    (*(void (**)(char *, uint64_t))(v242 + 8))(v113, v244);
    (*(void (**)(char *, uint64_t))(v237 + 8))(v112, v121);
    sub_10000588C(&qword_10164EFA8);
    sub_100062734(&qword_10164EFB0, &qword_10164EF20);
    uint64_t v122 = v245;
    uint64_t v123 = v243;
    Publisher.map<A>(_:)();
    (*(void (**)(char *, uint64_t))(v241 + 8))(v120, v123);
    sub_10000588C(&qword_10164EFB8);
    sub_100062734(&qword_10164EFC0, &qword_10164EF28);
    sub_100062734(&qword_10164EFC8, &qword_10164EFB8);
    uint64_t v124 = v248;
    uint64_t v125 = v247;
    Publisher.catch<A>(_:)();
    (*(void (**)(char *, uint64_t))(v246 + 8))(v122, v125);
    uint64_t v281 = v119;
    v274((char *)v117, 1, 1, v115);
    sub_100062734(&qword_10164EFD0, &qword_10164EF30);
    uint64_t v126 = v119;
    unint64_t v127 = v250;
    Publisher.receive<A>(on:options:)();
    sub_10001DAB4(v117, &qword_10163C6C8);

    (*(void (**)(char *, unint64_t))(v249 + 8))(v124, v127);
    int v128 = v268;
    uint64_t v129 = v259;
    uint64_t v130 = v264;
    v264(v268, (uint64_t)v271, v259);
    uint64_t v131 = v129;
    v130(v256, v266, v129);
    v275 = type metadata accessor for OwnedBeaconGroup;
    sub_10084B940(v270, v269, type metadata accessor for OwnedBeaconGroup);
    uint64_t v132 = *(unsigned __int8 *)(v272 + 80);
    uint64_t v133 = v272;
    uint64_t v134 = (v132 + 32) & ~v132;
    v274 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((v134 + v260 + 7) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v135 = (v134 + v260 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v136 = (v132 + v135 + 8) & ~v132;
    uint64_t v137 = *((unsigned __int8 *)v254 + 80);
    uint64_t v138 = (v260 + v137 + v136) & ~v137;
    uint64_t v266 = v132 | v137 | 7;
    v251 = (char *)((v261 + v138 + 7) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v250 = (unint64_t)(v251 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v139 = swift_allocObject();
    unint64_t v140 = v277;
    *(void *)(v139 + 16) = v267;
    *(void *)(v139 + 24) = v140;
    uint64_t v141 = *(void (**)(uint64_t, char *, uint64_t))(v133 + 32);
    unint64_t v142 = v128;
    uint64_t v143 = v131;
    v141(v139 + v134, v142, v131);
    id v254 = (void (*)(char *, char *, uint64_t))v141;
    uint64_t v144 = (char *)v273;
    uint64_t v145 = (char *)v274 + v139;
    *(void *)uint64_t v145 = v276;
    LODWORD(v274) = v263 & 1;
    v145[8] = v263 & 1;
    *(void *)(v139 + v135) = v144;
    uint64_t v146 = v143;
    v141(v139 + v136, v256, v143);
    uint64_t v263 = type metadata accessor for OwnedBeaconGroup;
    uint64_t v147 = v269;
    sub_100849DCC(v269, v139 + v138, type metadata accessor for OwnedBeaconGroup);
    *(void *)&v251[v139] = v262;
    *(double *)(v139 + v250) = a6;
    uint64_t v256 = (char *)swift_allocObject();
    swift_unknownObjectWeakInit();
    v264(v268, (uint64_t)v271, v143);
    sub_10084B940(v270, v147, v275);
    uint64_t v148 = (v132 + 40) & ~v132;
    unint64_t v149 = (v260 + v148 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v150 = (v149 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v151 = (v150 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v152 = (v137 + v151 + 8) & ~v137;
    uint64_t v153 = v152 + v261;
    uint64_t v154 = (char *)swift_allocObject();
    uint64_t v155 = v255;
    *((void *)v154 + 2) = v256;
    *((void *)v154 + 3) = v155;
    *((void *)v154 + 4) = v235;
    v254(&v154[v148], v268, v146);
    *(void *)&v154[v149] = v276;
    *(double *)&v154[v150] = a6;
    *(void *)&v154[v151] = v262;
    sub_100849DCC(v269, (uint64_t)&v154[v152], v263);
    v154[v153] = (char)v274;
    sub_100062734(&qword_10164EFD8, &qword_10164EF38);
    swift_retain_n();
    uint64_t v156 = v273;
    swift_retain();
    swift_unknownObjectRetain();
    uint64_t v157 = v253;
    uint64_t v158 = v257;
    Publisher.sink(receiveCompletion:receiveValue:)();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v252 + 8))(v158, v157);
    AnyCancellable.store(in:)();
    swift_unknownObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v272 + 8))(v271, v259);
    sub_10001DAB4(v258, &qword_10163B9F0);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  Swift::Int v85 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t))(v82 + 32);
  uint64_t v86 = v275;
  v85(v275, v84, v39);
  uint64_t v87 = (char *)v273 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_coordinators;
  swift_beginAccess();
  uint64_t v88 = *(void *)v87;
  if (!*(void *)(*(void *)v87 + 16))
  {
    uint64_t v93 = v228;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v227 + 56))(v228, 1, 1, v229);
    uint64_t v90 = v86;
LABEL_20:
    v78((char *)v90, v39);
    sub_10001DAB4(v93, &qword_10163CBC8);
LABEL_21:
    uint64_t v69 = v266;
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  unint64_t v89 = sub_1007240CC((uint64_t)v86);
  uint64_t v90 = v86;
  uint64_t v208 = (void (*)(unint64_t, char *, uint64_t))v85;
  if (v91)
  {
    uint64_t v92 = v227;
    uint64_t v93 = v228;
    sub_10084B940(*(void *)(v88 + 56) + *(void *)(v227 + 72) * v89, v228, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    uint64_t v94 = 0;
    uint64_t v95 = v229;
  }
  else
  {
    uint64_t v94 = 1;
    uint64_t v95 = v229;
    uint64_t v93 = v228;
    uint64_t v92 = v227;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56))(v93, v94, 1, v95);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v93, 1, v95) == 1) {
    goto LABEL_20;
  }
  uint64_t v160 = v95;
  uint64_t v161 = v226;
  sub_100849DCC(v93, v226, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  uint64_t v162 = (void (*)(char *, char *, uint64_t))v264;
  if (!*(unsigned char *)(v161 + *(int *)(v160 + 24)))
  {
    uint64_t v174 = v217;
    static Date.trustedNow.getter(v217);
    Date.timeIntervalSince(_:)();
    uint64_t v176 = v175;
    (*(void (**)(uint64_t, uint64_t))(v218 + 8))(v174, v219);
    if (a6 * 0.5 >= *(double *)&v176)
    {
      swift_bridgeObjectRelease();
      uint64_t v177 = v161;
      uint64_t v178 = v209;
      sub_10084B940(v177, v209, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      uint64_t v179 = Logger.logObject.getter();
      os_log_type_t v180 = static os_log_type_t.error.getter();
      BOOL v181 = os_log_type_enabled(v179, v180);
      uint64_t v182 = v272;
      uint64_t v207 = v78;
      if (v181)
      {
        uint64_t v183 = v178;
        uint64_t v184 = swift_slowAlloc();
        v277 = (void *)swift_slowAlloc();
        aBlock[0] = (uint64_t)v277;
        *(_DWORD *)uint64_t v184 = 136446466;
        uint64_t v185 = Date.localISO8601.getter();
        uint64_t v281 = (void *)sub_1008FA0F0(v185, v186, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100849E34(v183, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
        *(_WORD *)(v184 + 12) = 2050;
        uint64_t v281 = v176;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v179, v180, "Last retry %{public}s.\nTime since: %{public}f. Defer retry", (uint8_t *)v184, 0x16u);
        swift_arrayDestroy();
        uint64_t v39 = v259;
        uint64_t v81 = v270;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100849E34(v178, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      }

      uint64_t v187 = v264;
      uint64_t v188 = v273;
      uint64_t v276 = *(void *)((char *)v273 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue);
      uint64_t v189 = v210;
      static DispatchTime.now()();
      + infix(_:_:)();
      unint64_t v190 = *(void **)(v222 + 8);
      v222 += 8;
      v277 = v190;
      ((void (*)(char *, uint64_t))v190)(v189, v221);
      uint64_t v191 = v268;
      v187(v268, v266, v39);
      uint64_t v192 = v269;
      sub_10084B940(v81, v269, type metadata accessor for OwnedBeaconGroup);
      unint64_t v193 = (*(unsigned __int8 *)(v182 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80);
      unint64_t v194 = (v260 + *((unsigned __int8 *)v254 + 80) + v193) & ~(unint64_t)*((unsigned __int8 *)v254 + 80);
      unint64_t v195 = (v261 + v194 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v196 = swift_allocObject();
      *(void *)(v196 + 16) = v188;
      v208(v196 + v193, v191, v39);
      sub_100849DCC(v192, v196 + v194, type metadata accessor for OwnedBeaconGroup);
      *(void *)(v196 + v195) = v262;
      *(double *)(v196 + ((v195 + 15) & 0xFFFFFFFFFFFFFFF8)) = a6;
      aBlock[4] = (uint64_t)sub_100849C58;
      aBlock[5] = v196;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1004B5480;
      aBlock[3] = (uint64_t)&unk_1015D7808;
      v197 = _Block_copy(aBlock);
      id v198 = v188;
      uint64_t v199 = v211;
      static DispatchQoS.unspecified.getter();
      uint64_t v281 = _swiftEmptyArrayStorage;
      sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000588C((uint64_t *)&unk_10163F350);
      sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
      uint64_t v200 = v213;
      uint64_t v201 = v216;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      v202 = v220;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v197);
      (*(void (**)(char *, uint64_t))(v215 + 8))(v200, v201);
      (*(void (**)(char *, uint64_t))(v212 + 8))(v199, v214);
      ((void (*)(char *, uint64_t))v277)(v202, v221);
      sub_100849E34(v226, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      uint64_t v203 = v207;
      v207((char *)v275, v39);
      v203(v271, v39);
      return swift_release();
    }
    sub_100849E34(v161, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    v78((char *)v275, v39);
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
  uint64_t v163 = v223;
  uint64_t v164 = v271;
  v162(v223, v271, v39);
  uint64_t v165 = v225;
  sub_10084B940(v161, v225, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  uint64_t v166 = Logger.logObject.getter();
  os_log_type_t v167 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v166, v167))
  {
    uint64_t v168 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v168 = 136315394;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v169 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v281 = (void *)sub_1008FA0F0(v169, v170, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v78(v163, v39);
    *(_WORD *)(v168 + 12) = 2080;
    unint64_t v171 = 0xEB00000000646575;
    uint64_t v172 = 0x65755179616C702ELL;
    switch(*(unsigned char *)(v165 + *(int *)(v229 + 24)))
    {
      case 1:
        uint64_t v173 = 0x4979616C702ELL;
        goto LABEL_41;
      case 2:
        unint64_t v171 = 0xEC000000676E696ELL;
        uint64_t v172 = 0x6E755279616C702ELL;
        break;
      case 3:
        uint64_t v204 = 0x4379616C702ELL;
        goto LABEL_43;
      case 4:
        uint64_t v173 = 0x49706F74732ELL;
LABEL_41:
        uint64_t v172 = v173 & 0xFFFFFFFFFFFFLL | 0x696E000000000000;
        unsigned int v205 = 1952541044;
        goto LABEL_44;
      case 5:
        uint64_t v204 = 0x43706F74732ELL;
LABEL_43:
        uint64_t v172 = v204 & 0xFFFFFFFFFFFFLL | 0x6D6F000000000000;
        unsigned int v205 = 1952803952;
LABEL_44:
        unint64_t v171 = v205 | 0xEE00646500000000;
        break;
      case 6:
        unint64_t v171 = 0xE800000000000000;
        uint64_t v172 = 0x74756F656D69742ELL;
        break;
      default:
        break;
    }
    uint64_t v281 = (void *)sub_1008FA0F0(v172, v171, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100849E34(v225, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    _os_log_impl((void *)&_mh_execute_header, v166, v167, "Cannot queue play sound for %s. Invalid state %s!", (uint8_t *)v168, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_100849E34(v226, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    v78((char *)v275, v39);
    return ((uint64_t (*)(char *, uint64_t))v78)(v271, v39);
  }
  else
  {

    sub_100849E34(v165, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    v78(v163, v39);
    sub_100849E34(v161, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    v78((char *)v275, v39);
    return ((uint64_t (*)(char *, uint64_t))v78)(v164, v39);
  }
}

uint64_t sub_10082897C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v74 = a6;
  uint64_t v75 = a5;
  uint64_t v76 = a1;
  uint64_t v65 = (unsigned char *)a3;
  uint64_t v8 = sub_10000588C(&qword_10163CBC8);
  __chkstk_darwin(v8 - 8);
  uint64_t v71 = &v61[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v68 = type metadata accessor for DispatchWorkItemFlags();
  __chkstk_darwin(v68);
  uint64_t v69 = &v61[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for UUID();
  unint64_t v66 = *(void **)(v11 - 8);
  uint64_t v12 = v66[8];
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v67 = &v61[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v13);
  unint64_t v70 = &v61[-v15];
  __chkstk_darwin(v14);
  int v64 = &v61[-v16];
  uint64_t v17 = sub_10000588C(&qword_10163B9F0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = &v61[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = &v61[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001D074(a2, (uint64_t)v19, &qword_10163B9F0);
  int v24 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20);
  uint64_t v72 = v11;
  if (v24 == 1)
  {
    sub_10001DAB4((uint64_t)v19, &qword_10163B9F0);
    uint64_t v25 = v76;
LABEL_5:
    sub_1008293A4(v25, v74, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(*(void *)a4 + 16) >= *(void *)(*(void *)a4 + 24) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v28 = v66;
    goto LABEL_22;
  }
  sub_100849DCC((uint64_t)v19, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  sub_10084B9A8((unint64_t *)&qword_10163B8F0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v26 = v76;
  uint64_t v27 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v25 = v26;
  if (v27)
  {
    sub_100849E34((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    goto LABEL_5;
  }
  __chkstk_darwin(v27);
  *(void *)&v61[-16] = v23;
  uint64_t v29 = v73;
  uint64_t v30 = sub_100E4F2AC(sub_100847340, (uint64_t)&v61[-32], (uint64_t)v65);
  uint64_t v73 = v29;
  if (v30) {
    uint64_t v31 = (void *)v30;
  }
  else {
    uint64_t v31 = &_swiftEmptySetSingleton;
  }
  char v32 = sub_100DC7280(v26, (uint64_t)v31);
  swift_bridgeObjectRelease();
  if (v32)
  {
    uint64_t v65 = v23;
    if (qword_101636CF8 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    sub_100010324(v33, (uint64_t)qword_10170E3C8);
    uint64_t v34 = v66;
    uint64_t v35 = v64;
    uint64_t v36 = v72;
    ((void (*)(unsigned char *, uint64_t, uint64_t))v66[2])(v64, v25, v72);
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.default.getter();
    int v39 = v38;
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v40 = v35;
      uint64_t v41 = swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      aBlock[0] = v63;
      *(_DWORD *)uint64_t v41 = 141558275;
      uint64_t v78 = 1752392040;
      int v62 = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v41 + 12) = 2081;
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v78 = sub_1008FA0F0(v42, v43, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      ((void (*)(unsigned char *, uint64_t))v34[1])(v40, v36);
      _os_log_impl((void *)&_mh_execute_header, v37, (os_log_type_t)v62, "Ignoring nearby non-primary beacon %{private,mask.hash}s", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      ((void (*)(unsigned char *, uint64_t))v34[1])(v35, v36);
    }

    uint64_t v28 = v34;
    uint64_t v23 = v65;
  }
  else
  {
    sub_1008293A4(v25, v74, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(*(void *)a4 + 16) >= *(void *)(*(void *)a4 + 24) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v28 = v66;
  }
  sub_100849E34((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
LABEL_22:
  uint64_t v65 = (unsigned char *)swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v44 = (void *)v28[2];
  unint64_t v66 = v44;
  uint64_t v45 = (uint64_t)v70;
  uint64_t v46 = v72;
  ((void (*)(unsigned char *, uint64_t, uint64_t))v44)(v70, v76, v72);
  uint64_t v47 = v67;
  ((void (*)(unsigned char *, uint64_t, uint64_t))v44)(v67, v74, v46);
  uint64_t v48 = *((unsigned __int8 *)v28 + 80);
  uint64_t v49 = (v48 + 16) & ~v48;
  uint64_t v50 = (v12 + v48 + v49) & ~v48;
  uint64_t v51 = swift_allocObject();
  uint64_t v52 = (void (*)(uint64_t, uint64_t, uint64_t))v28[4];
  v52(v51 + v49, v45, v46);
  v52(v51 + v50, (uint64_t)v47, v46);
  *(void *)(v51 + ((v12 + v50 + 7) & 0xFFFFFFFFFFFFFFF8)) = v65;
  aBlock[4] = (uint64_t)sub_100849EA4;
  aBlock[5] = v51;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1004B5480;
  aBlock[3] = (uint64_t)&unk_1015D78A8;
  _Block_copy(aBlock);
  uint64_t v78 = (uint64_t)_swiftEmptyArrayStorage;
  sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  swift_retain();
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for DispatchWorkItem();
  swift_allocObject();
  uint64_t v53 = DispatchWorkItem.init(flags:block:)();
  swift_release();
  swift_release();
  uint64_t v54 = v76;
  uint64_t v55 = (void (*)(uint64_t, uint64_t, uint64_t))v66;
  ((void (*)(uint64_t, uint64_t, uint64_t))v66)(v45, v76, v46);
  uint64_t v56 = (uint64_t)v71;
  v55((uint64_t)v71, v74, v46);
  uint64_t v57 = v55;
  uint64_t v58 = (int *)type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  v57(v56 + v58[5], v54, v46);
  uint64_t v59 = v56 + v58[8];
  swift_retain();
  static Date.trustedNow.getter(v59);
  *(unsigned char *)(v56 + v58[6]) = 0;
  *(void *)(v56 + v58[7]) = v53;
  *(void *)(v56 + v58[9]) = 0;
  *(unsigned char *)(v56 + v58[10]) = 0;
  (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v58 - 1) + 56))(v56, 0, 1, v58);
  swift_beginAccess();
  sub_10015E340(v56, v45);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1008293A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v71 = a3;
  uint64_t v64 = a2;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v63 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v66 = (char *)&v62 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v62 - v11;
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v67 = v3;
  uint64_t v17 = *(void **)(v3 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue);
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  char v19 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if (v19)
  {
    if (qword_101636CF8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v62 = type metadata accessor for Logger();
  sub_100010324(v62, (uint64_t)qword_10170E3C8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v21 = v12;
  uint64_t v69 = v6 + 16;
  uint64_t v70 = a1;
  uint64_t v68 = v20;
  v20((uint64_t)v12, a1, v5);
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    v72[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 141558531;
    uint64_t v73 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 12) = 2081;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v73 = sub_1008FA0F0(v25, v26, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v27 = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v65 = *(void (**)(char *, uint64_t))(v6 + 8);
    v65(v12, v5);
    *(_WORD *)(v24 + 22) = 2082;
    uint64_t v29 = (uint64_t)v66;
    uint64_t v28 = v67;
    uint64_t v30 = v27;
    unint64_t v31 = 0xE800000000000000;
    uint64_t v32 = 0x746C75616665642ELL;
    switch(v71)
    {
      case 0:
        break;
      case 1:
        uint64_t v32 = 0x676E69676E61722ELL;
        break;
      case 2:
        unint64_t v31 = 0xE900000000000067;
        goto LABEL_12;
      case 3:
        unint64_t v31 = 0x80000001013FD5F0;
        uint64_t v32 = 0xD000000000000010;
        break;
      case 4:
        unint64_t v31 = 0xEF64656D7269666ELL;
        uint64_t v32 = 0x6F4365756575712ELL;
        break;
      case 5:
        unint64_t v31 = 0xEE0074726F685367;
LABEL_12:
        uint64_t v32 = 0x6E696B636172742ELL;
        break;
      default:
        uint64_t v29 = (uint64_t)v66;
        uint64_t v28 = v67;
        uint64_t v30 = v27;
        unint64_t v31 = 0xE700000000000000;
        uint64_t v32 = 0x6E776F6E6B6E75;
        break;
    }
    uint64_t v73 = sub_1008FA0F0(v32, v31, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Calling play sound on device %{private,mask.hash}s with context %{public}s", (uint8_t *)v24, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v33 = v65;
    uint64_t v34 = v30;
  }
  else
  {
    uint64_t v29 = (uint64_t)v66;
    uint64_t v33 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v34 = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v33(v21, v5);

    uint64_t v28 = v67;
  }
  sub_10000588C(&qword_10164EFE0);
  swift_allocObject();
  uint64_t v35 = PassthroughSubject.init()();
  uint64_t v36 = v70;
  v68(v29, v70, v5);
  uint64_t v37 = (uint64_t *)(v28 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_playSoundSubjects);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v73 = *v37;
  *uint64_t v37 = 0x8000000000000000;
  uint64_t v67 = v35;
  sub_100170A90(v35, v29, isUniquelyReferenced_nonNull_native);
  *uint64_t v37 = v73;
  swift_bridgeObjectRelease();
  unint64_t v66 = (char *)v34;
  v33((char *)v29, v5);
  swift_endAccess();
  char v39 = sub_100825760(v36);
  uint64_t My = type metadata accessor for Feature.FindMy();
  v72[3] = My;
  v72[4] = sub_10084B9A8((unint64_t *)&qword_101653E00, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
  uint64_t v41 = sub_10001D958(v72);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v41, enum case for Feature.FindMy.spPlaySoundAll(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v72);
  if (My & 1) == 0 || (v39)
  {
    if (v71 == 5)
    {
      sub_100817CF8();
      uint64_t v54 = v53;
      swift_getObjectType();
      id v55 = [self shortSequence];
      (*(void (**)(void))(v54 + 56))();
    }
    else
    {
      if (v71 == 2)
      {
        sub_100817CF8();
        uint64_t v57 = v56;
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v36, ObjectType, v57);
        swift_unknownObjectRelease();
LABEL_31:
        v72[0] = v67;
        sub_100062734(&qword_10164EFE8, &qword_10164EFE0);
        uint64_t v52 = Publisher.eraseToAnyPublisher()();
        goto LABEL_32;
      }
      if (v71 == 1)
      {
        sub_100817CF8();
        uint64_t v50 = v49;
        swift_getObjectType();
        id v51 = [self rangingSequence];
      }
      else
      {
        sub_100817CF8();
        uint64_t v50 = v59;
        swift_getObjectType();
        id v51 = [self defaultSequence];
      }
      id v55 = v51;
      (*(void (**)(void))(v50 + 40))();
    }
    swift_unknownObjectRelease();

    goto LABEL_31;
  }
  uint64_t v65 = v33;
  uint64_t v42 = v71;
  if (qword_101636D08 != -1) {
    swift_once();
  }
  sub_100010324(v62, (uint64_t)qword_10164EDE8);
  unint64_t v43 = v63;
  v68((uint64_t)v63, v36, v5);
  uint64_t v44 = Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = swift_slowAlloc();
    v72[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v46 = 136315651;
    uint64_t v73 = sub_1008FA0F0(0xD000000000000024, 0x8000000101408A60, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v46 + 12) = 2160;
    uint64_t v73 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v46 + 22) = 2081;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v47 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v73 = sub_1008FA0F0(v47, v48, v72);
    uint64_t v42 = v71;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v65(v43, v5);
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "%s SPPlaySoundAll: %{private,mask.hash}s does NOT support ranging", (uint8_t *)v46, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v65(v43, v5);
  }

  uint64_t v52 = sub_10083E8E0(v70, v64, v42, v67);
LABEL_32:
  uint64_t v60 = v52;
  swift_release();
  return v60;
}

void sub_100829E80(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v91 = a3;
  int v90 = a2;
  uint64_t v98 = a1;
  uint64_t v5 = sub_10000588C(&qword_1016511E0);
  __chkstk_darwin(v5 - 8);
  uint64_t v95 = (uint64_t)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BeaconObservation();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v92 = v7;
  uint64_t v93 = v8;
  __chkstk_darwin(v7);
  uint64_t v94 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v87 = *(void *)(v10 - 8);
  uint64_t v88 = v10;
  __chkstk_darwin(v10);
  uint64_t v86 = (uint64_t)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v97 - 8);
  uint64_t v13 = __chkstk_darwin(v97);
  uint64_t v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  unint64_t v89 = (char *)&v78 - v17;
  __chkstk_darwin(v16);
  uint64_t v84 = (char *)&v78 - v18;
  uint64_t v19 = sub_10000588C(&qword_10163CBC8);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v85 = (uint64_t)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  os_log_type_t v23 = (char *)&v78 - v22;
  uint64_t v24 = (int *)type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  uint64_t v25 = *((void *)v24 - 1);
  __chkstk_darwin(v24);
  uint64_t v96 = (uint64_t)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for DispatchPredicate();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (uint64_t *)((char *)&v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v31 = *(void **)(v4 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue);
  void *v30 = v31;
  (*(void (**)(void *, void, uint64_t))(v28 + 104))(v30, enum case for DispatchPredicate.onQueue(_:), v27);
  id v32 = v31;
  LOBYTE(v31) = _dispatchPreconditionTest(_:)();
  uint64_t v34 = *(void (**)(void *, uint64_t))(v28 + 8);
  uint64_t v33 = v28 + 8;
  v34(v30, v27);
  if ((v31 & 1) == 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v35 = v4 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_coordinators;
  swift_beginAccess();
  uint64_t v36 = *(void *)v35;
  if (!*(void *)(*(void *)v35 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v25 + 56))(v23, 1, 1, v24);
    uint64_t v4 = v97;
    uint64_t v33 = v98;
    goto LABEL_8;
  }
  uint64_t v37 = v4;
  swift_bridgeObjectRetain();
  uint64_t v33 = v98;
  unint64_t v38 = sub_1007240CC(v98);
  if (v39)
  {
    sub_10084B940(*(void *)(v36 + 56) + *(void *)(v25 + 72) * v38, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    uint64_t v40 = *(void (**)(uint64_t, void, uint64_t, int *))(v25 + 56);
    uint64_t v41 = v23;
    uint64_t v42 = 0;
  }
  else
  {
    uint64_t v40 = *(void (**)(uint64_t, void, uint64_t, int *))(v25 + 56);
    uint64_t v41 = v23;
    uint64_t v42 = 1;
  }
  uint64_t v83 = v40;
  v40((uint64_t)v41, v42, 1, v24);
  uint64_t v4 = v97;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v25 + 48))(v23, 1, v24) == 1)
  {
LABEL_8:
    sub_10001DAB4((uint64_t)v23, &qword_10163CBC8);
    if (qword_101636CF8 == -1)
    {
LABEL_9:
      uint64_t v43 = type metadata accessor for Logger();
      sub_100010324(v43, (uint64_t)qword_10170E3C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v33, v4);
      uint64_t v44 = Logger.logObject.getter();
      os_log_type_t v45 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = swift_slowAlloc();
        v99[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v46 = 141558275;
        uint64_t v100 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v46 + 12) = 2081;
        sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v47 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v100 = sub_1008FA0F0(v47, v48, v99);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v4);
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "No coordinator for %{private,mask.hash}s. Cannot complete!", (uint8_t *)v46, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v4);
      }

      return;
    }
LABEL_28:
    swift_once();
    goto LABEL_9;
  }
  uint64_t v49 = (uint64_t)v23;
  uint64_t v50 = v96;
  sub_100849DCC(v49, v96, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v51 = type metadata accessor for Logger();
  sub_100010324(v51, (uint64_t)qword_10170E3C8);
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v53 = v84;
  uint64_t v97 = v12 + 16;
  uint64_t v81 = v52;
  v52(v84, v98, v4);
  uint64_t v54 = Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.default.getter();
  int v56 = v55;
  BOOL v57 = os_log_type_enabled(v54, v55);
  uint64_t v82 = v37;
  if (v57)
  {
    uint64_t v58 = swift_slowAlloc();
    uint64_t v80 = swift_slowAlloc();
    v99[0] = v80;
    *(_DWORD *)uint64_t v58 = 141558275;
    uint64_t v100 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v58 + 12) = 2081;
    uint64_t v78 = v58 + 14;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    int v79 = v56;
    uint64_t v59 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v100 = sub_1008FA0F0(v59, v60, v99);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v53, v4);
    _os_log_impl((void *)&_mh_execute_header, v54, (os_log_type_t)v79, "commandComplete %{private,mask.hash}s", (uint8_t *)v58, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v50 = v96;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v53, v4);
  }

  swift_retain();
  dispatch thunk of DispatchWorkItem.cancel()();
  swift_release();
  if (v90) {
    char v61 = 5;
  }
  else {
    char v61 = 3;
  }
  *(unsigned char *)(v50 + v24[6]) = v61;
  *(unsigned char *)(v50 + v24[10]) = 0;
  uint64_t v62 = v86;
  static Date.trustedNow.getter(v86);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 40))(v50 + v24[8], v62, v88);
  uint64_t v63 = v24[9];
  uint64_t v64 = v91;
  swift_errorRetain();
  swift_errorRelease();
  *(void *)(v50 + v63) = v64;
  uint64_t v65 = (uint64_t)v89;
  uint64_t v66 = v98;
  uint64_t v67 = v81;
  ((void (*)(char *))v81)(v89);
  uint64_t v68 = v85;
  sub_10084B940(v50, v85, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  v83(v68, 0, 1, v24);
  swift_beginAccess();
  sub_10015E340(v68, v65);
  swift_endAccess();
  if (qword_101636CB8 != -1) {
    swift_once();
  }
  uint64_t v69 = qword_10170E330;
  uint64_t v70 = (uint64_t)v94;
  uint64_t v71 = v66;
  v67(v94, v66, v4);
  uint64_t v72 = v92;
  static Date.trustedNow.getter(v70 + *(int *)(v92 + 20));
  *(unsigned char *)(v70 + *(int *)(v72 + 24)) = 29;
  sub_10000588C(&qword_10163A778);
  unint64_t v73 = (*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
  uint64_t v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = xmmword_101342130;
  sub_10084B940(v70, v74 + v73, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  uint64_t v75 = type metadata accessor for Transaction();
  __chkstk_darwin(v75);
  *(&v78 - 4) = v69;
  *(&v78 - 3) = v74;
  *(&v78 - 2) = 0;
  *(&v78 - 1) = 0;
  static Transaction.named<A>(_:with:)();
  swift_bridgeObjectRelease();
  sub_100849E34(v70, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  uint64_t v76 = v95;
  sub_100AE381C(v71, v95);
  uint64_t v77 = type metadata accessor for WildModeAssociationRecord(0);
  LODWORD(v74) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 48))(v76, 1, v77);
  sub_10001DAB4(v76, &qword_1016511E0);
  if (v74 == 1) {
    sub_100A9E7EC(10);
  }
  else {
    sub_100AA5514();
  }
  sub_100849E34(v50, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
}

uint64_t sub_10082AB50(unint64_t *a1)
{
  return sub_10083DFB0(a1, &qword_10164EF48);
}

void sub_10082AB5C(void *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_10082AB6C(unint64_t *a1)
{
  return sub_10083DFB0(a1, &qword_10164EFA8);
}

unint64_t sub_10082AB78(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v36 = a7;
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = a6 + 16;
  Transaction.capture()();
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_100010324(v20, (uint64_t)qword_10170E3C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a5, v16);
  swift_retain_n();
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v34 = a9;
    uint64_t v24 = v23;
    v38[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    uint64_t v35 = a8;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v39 = sub_1008FA0F0(v25, v26, v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    *(_WORD *)(v24 + 12) = 2082;
    swift_beginAccess();
    char v27 = *(unsigned char *)(a6 + 24);
    unint64_t v39 = *(void *)(a6 + 16);
    char v40 = v27;
    sub_100849E94(v39, v27);
    sub_10000588C(&qword_10164F040);
    uint64_t v28 = String.init<A>(describing:)();
    unint64_t v39 = sub_1008FA0F0(v28, v29, v38);
    a8 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "playSound for group %{public}s) completion. Result: %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a9 = v34;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);

    swift_release_n();
  }
  unint64_t result = swift_beginAccess();
  if (*(unsigned char *)(a6 + 24) == 1)
  {
    unint64_t v31 = *(void *)(a6 + 16);
    sub_100847D28(v31);
    if (v36)
    {
      sub_10082AF98(a9, a10, a11, a1);
      return sub_1008493EC(v31, 1);
    }
    else
    {
      uint64_t v32 = sub_1004D1434();
      sub_100849E94(v31, 1);
      id v33 = a8;
      sub_100845264(v32, (uint64_t)v33, v31);
      sub_1008493EC(v31, 1);

      sub_1008493EC(v31, 1);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10082AF98(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v93 = a1;
  uint64_t v94 = a3;
  uint64_t v104 = a2;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v98 = *(void *)(v6 - 8);
  uint64_t v99 = v6;
  __chkstk_darwin(v6);
  uint64_t v97 = (uint64_t)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000588C((uint64_t *)&unk_101655530);
  __chkstk_darwin(v8 - 8);
  uint64_t v101 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for BeaconObservation();
  uint64_t v108 = *(void *)(v106 - 8);
  uint64_t v10 = __chkstk_darwin(v106);
  uint64_t v100 = (uint64_t)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v107 = (uint64_t)&v87 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v87 - v15;
  __chkstk_darwin(v14);
  uint64_t v102 = (uint64_t)&v87 - v17;
  uint64_t v18 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v21 = type metadata accessor for UUID();
  unint64_t v105 = *(void *)(v21 - 8);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v95 = (char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v103 = (char *)&v87 - v25;
  __chkstk_darwin(v24);
  char v27 = (char *)&v87 - v26;
  uint64_t v28 = type metadata accessor for DispatchPredicate();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  unint64_t v31 = (uint64_t *)((char *)&v87 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v96 = v4;
  uint64_t v32 = *(void **)&v4[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue];
  *unint64_t v31 = v32;
  (*(void (**)(void *, void, uint64_t))(v29 + 104))(v31, enum case for DispatchPredicate.onQueue(_:), v28);
  id v33 = v32;
  uint64_t v34 = _dispatchPreconditionTest(_:)();
  int v36 = *(void (**)(void *, uint64_t))(v29 + 8);
  unint64_t v35 = v29 + 8;
  v36(v31, v28);
  if ((v34 & 1) == 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v37 = type metadata accessor for OwnedBeaconGroup(0);
  unint64_t v35 = v105;
  uint64_t v38 = v104 + *(int *)(v37 + 24);
  unint64_t v39 = *(void (**)(char *, uint64_t, unint64_t))(v105 + 16);
  unint64_t v92 = v105 + 16;
  uint64_t v91 = v39;
  v39(v27, v38, v21);
  uint64_t v40 = sub_1004D1434();
  sub_10115B15C(v40, (uint64_t)v20);
  swift_bridgeObjectRelease();
  uint64_t v34 = (uint64_t)v27;
  if ((*(unsigned int (**)(char *, uint64_t, unint64_t))(v35 + 48))(v20, 1, v21) == 1)
  {
    uint64_t v41 = &qword_101638CF0;
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, unint64_t))(v35 + 32))(v103, v20, v21);
  if (qword_101636CB8 != -1) {
    swift_once();
  }
  sub_10000588C(&qword_101655540);
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v90 = 0;
  uint64_t v43 = v110[0];
  uint64_t v44 = v106;
  if (*(void *)(v110[0] + 16) && (unint64_t v45 = sub_1007240CC((uint64_t)v103), (v46 & 1) != 0))
  {
    uint64_t v88 = v34;
    unint64_t v89 = v21;
    uint64_t v47 = *(void *)(*(void *)(v43 + 56) + 8 * v45);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v48 = sub_1007100C0(v47);
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_100B752E8((uint64_t)v48);
    swift_release();
    uint64_t v49 = _swiftEmptyArrayStorage;
    v110[0] = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v50 = *(void *)(v34 + 16);
    if (v50)
    {
      unint64_t v35 = 0;
      while (v35 < *(void *)(v34 + 16))
      {
        unint64_t v21 = (*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
        uint64_t v51 = *(void *)(v108 + 72);
        sub_10084B940(v34 + v21 + v51 * v35, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        if (v16[*(int *)(v44 + 24)] == 23)
        {
          sub_100849DCC((uint64_t)v16, v107, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1000B77F0(0, v49[2] + 1, 1);
          }
          uint64_t v49 = (void *)v110[0];
          unint64_t v53 = *(void *)(v110[0] + 16);
          unint64_t v52 = *(void *)(v110[0] + 24);
          if (v53 >= v52 >> 1)
          {
            sub_1000B77F0(v52 > 1, v53 + 1, 1);
            uint64_t v49 = (void *)v110[0];
          }
          v49[2] = v53 + 1;
          sub_100849DCC(v107, (uint64_t)v49 + v21 + v53 * v51, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          uint64_t v44 = v106;
        }
        else
        {
          sub_100849E34((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        }
        if (v50 == ++v35)
        {
          uint64_t v49 = (void *)v110[0];
          unint64_t v35 = v105;
          goto LABEL_21;
        }
      }
      __break(1u);
      goto LABEL_40;
    }
LABEL_21:
    swift_release();
    unint64_t v21 = v89;
    uint64_t v34 = v88;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v49 = _swiftEmptyArrayStorage;
  }
  uint64_t v20 = v101;
  sub_100E4D5E0((uint64_t)v49, (uint64_t)v20);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v20, 1, v44) == 1)
  {
    (*(void (**)(char *, unint64_t))(v35 + 8))(v103, v21);
    uint64_t v41 = (uint64_t *)&unk_101655530;
LABEL_24:
    sub_10001DAB4((uint64_t)v20, v41);
    if (qword_101636CF8 == -1)
    {
LABEL_25:
      uint64_t v54 = type metadata accessor for Logger();
      sub_100010324(v54, (uint64_t)qword_10170E3C8);
      os_log_type_t v55 = Logger.logObject.getter();
      os_log_type_t v56 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v55, v56))
      {
        BOOL v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)BOOL v57 = 0;
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "No playback observation found. Cannot retry", v57, 2u);
        swift_slowDealloc();
      }

      return (*(uint64_t (**)(uint64_t, unint64_t))(v35 + 8))(v34, v21);
    }
LABEL_41:
    swift_once();
    goto LABEL_25;
  }
  uint64_t v59 = v102;
  sub_100849DCC((uint64_t)v20, v102, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  uint64_t v60 = v97;
  static Date.trustedNow.getter(v97);
  Date.timeIntervalSince(_:)();
  double v62 = v61;
  (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v60, v99);
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v63 = type metadata accessor for Logger();
  sub_100010324(v63, (uint64_t)qword_10170E3C8);
  uint64_t v64 = v59;
  uint64_t v65 = v100;
  sub_10084B940(v64, v100, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  uint64_t v66 = Logger.logObject.getter();
  os_log_type_t v67 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    unint64_t v89 = v21;
    v110[0] = v69;
    *(_DWORD *)uint64_t v68 = 136446466;
    uint64_t v70 = Date.localISO8601.getter();
    uint64_t v109 = sub_1008FA0F0(v70, v71, v110);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100849E34(v65, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    *(_WORD *)(v68 + 12) = 2050;
    uint64_t v109 = *(void *)&v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "Queued at %{public}s. Time since: %{public}f", (uint8_t *)v68, 0x16u);
    swift_arrayDestroy();
    unint64_t v21 = v89;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100849E34(v65, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  }

  uint64_t v72 = v95;
  uint64_t v73 = v104;
  uint64_t v74 = v102;
  if (v62 >= 180.0)
  {
    v91(v95, v34, v21);
    uint64_t v78 = Logger.logObject.getter();
    os_log_type_t v79 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = swift_slowAlloc();
      uint64_t v108 = swift_slowAlloc();
      v110[0] = v108;
      *(_DWORD *)uint64_t v80 = 134218242;
      uint64_t v109 = 0x4066800000000000;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v80 + 12) = 2080;
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v81 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v109 = sub_1008FA0F0(v81, v82, v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v83 = *(void (**)(char *, unint64_t))(v105 + 8);
      v83(v72, v21);
      _os_log_impl((void *)&_mh_execute_header, v78, v79, "%f elapsed. Posting error alert for %s", (uint8_t *)v80, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v74 = v102;
      swift_slowDealloc();
    }
    else
    {
      uint64_t v83 = *(void (**)(char *, unint64_t))(v105 + 8);
      v83(v72, v21);
    }

    uint64_t v84 = v96;
    sub_10082E7E0(v34, 0);
    uint64_t v85 = sub_1004D1434();
    id v86 = v84;
    sub_100845A10(v85, (uint64_t)v86, 0);
    swift_bridgeObjectRelease();

    sub_100849E34(v74, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    v83(v103, v21);
    return ((uint64_t (*)(uint64_t, unint64_t))v83)(v34, v21);
  }
  else
  {
    uint64_t v75 = type metadata accessor for Transaction();
    __chkstk_darwin(v75);
    *(&v87 - 6) = (uint64_t)v96;
    *(&v87 - 5) = v73;
    *((double *)&v87 - 4) = a4;
    uint64_t v76 = v94;
    *(&v87 - 3) = v93;
    *(&v87 - 2) = v76;
    static Transaction.named<A>(_:with:)();
    sub_100849E34(v74, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    uint64_t v77 = *(void (**)(uint64_t, unint64_t))(v105 + 8);
    v77((uint64_t)v103, v21);
    return ((uint64_t (*)(uint64_t, unint64_t))v77)(v34, v21);
  }
}

void sub_10082BD68(uint64_t a1, double a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  unint64_t v120 = a8;
  uint64_t v121 = a9;
  uint64_t v124 = a7;
  uint64_t v127 = a6;
  unint64_t v119 = a5;
  uint64_t v117 = a4;
  uint64_t v125 = type metadata accessor for UUID();
  uint64_t v128 = *(void *)(v125 - 8);
  uint64_t v12 = __chkstk_darwin(v125);
  uint64_t v14 = &v109[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = &v109[-v16];
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = &v109[-v19];
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v118 = &v109[-v22];
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v122 = &v109[-v24];
  uint64_t v25 = __chkstk_darwin(v23);
  char v27 = &v109[-v26];
  __chkstk_darwin(v25);
  uint64_t v123 = &v109[-v28];
  uint64_t v29 = sub_10000588C(&qword_10164EF48);
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v32 = (unint64_t *)&v109[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v30);
  uint64_t v126 = &v109[-v33];
  uint64_t v34 = sub_10000588C(&qword_10164EFA8);
  __chkstk_darwin(v34);
  int v36 = (unint64_t *)&v109[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v38 = (void *)Strong;
    sub_10001D074(a1, (uint64_t)v36, &qword_10164EFA8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unint64_t v39 = *v36;
      uint64_t v40 = v128;
      if (*v36 == 3)
      {
        id v116 = v38;
        if (qword_101636CF8 != -1) {
          swift_once();
        }
        uint64_t v41 = type metadata accessor for Logger();
        sub_100010324(v41, (uint64_t)qword_10170E3C8);
        uint64_t v42 = v125;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v40 + 16))(v17, v127, v125);
        uint64_t v43 = Logger.logObject.getter();
        os_log_type_t v44 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v45 = swift_slowAlloc();
          v130[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v45 = 136446466;
          sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v131 = sub_1008FA0F0(v46, v47, v130);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v17, v42);
          *(_WORD *)(v45 + 12) = 2048;
          uint64_t v131 = *(void *)&a2;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v43, v44, "Play sound timed out for %{public}s after %f. CL should have completed by now", (uint8_t *)v45, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v17, v42);
        }
      }
      else
      {
        if (qword_101636CF8 != -1) {
          swift_once();
        }
        uint64_t v63 = type metadata accessor for Logger();
        sub_100010324(v63, (uint64_t)qword_10170E3C8);
        uint64_t v64 = v125;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v40 + 16))(v14, v127, v125);
        sub_100847D28(v39);
        sub_100847D28(v39);
        uint64_t v65 = Logger.logObject.getter();
        os_log_type_t v66 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v65, v66))
        {
          uint64_t v67 = v40;
          uint64_t v68 = swift_slowAlloc();
          uint64_t v69 = swift_slowAlloc();
          id v116 = v38;
          v130[0] = v69;
          *(_DWORD *)uint64_t v68 = 136446466;
          sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v131 = sub_1008FA0F0(v70, v71, v130);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v14, v64);
          *(_WORD *)(v68 + 12) = 2082;
          uint64_t v131 = v39;
          sub_100847D28(v39);
          uint64_t v72 = String.init<A>(describing:)();
          uint64_t v131 = sub_1008FA0F0(v72, v73, v130);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100847D38(v39);
          sub_100847D38(v39);
          _os_log_impl((void *)&_mh_execute_header, v65, v66, "Play sound failed for %{public}s with unexpected error %{public}s", (uint8_t *)v68, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v14, v64);
          sub_100847D38(v39);
          sub_100847D38(v39);
        }
        sub_100847D38(v39);
      }
    }
    else
    {
      unint64_t v48 = v126;
      sub_100847D48((uint64_t)v36, (uint64_t)v126);
      sub_10001D074((uint64_t)v48, (uint64_t)v32, &qword_10164EF48);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v50 = v128;
      if (EnumCaseMultiPayload == 1)
      {
        unint64_t v51 = *v32;
        uint64_t v52 = v125;
        if (qword_101636CF8 != -1) {
          swift_once();
        }
        uint64_t v53 = type metadata accessor for Logger();
        sub_100010324(v53, (uint64_t)qword_10170E3C8);
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v50 + 16))(v20, v127, v52);
        sub_100847D28(v51);
        sub_100847D28(v51);
        uint64_t v54 = Logger.logObject.getter();
        os_log_type_t v55 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v54, v55))
        {
          uint64_t v56 = v50;
          uint64_t v57 = swift_slowAlloc();
          uint64_t v58 = swift_slowAlloc();
          id v116 = v38;
          v130[0] = v58;
          *(_DWORD *)uint64_t v57 = 136446466;
          sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v59 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v131 = sub_1008FA0F0(v59, v60, v130);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          (*(void (**)(unsigned char *, uint64_t))(v56 + 8))(v20, v52);
          *(_WORD *)(v57 + 12) = 2082;
          uint64_t v131 = v51;
          sub_100847D28(v51);
          uint64_t v61 = String.init<A>(describing:)();
          uint64_t v131 = sub_1008FA0F0(v61, v62, v130);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100847D38(v51);
          sub_100847D38(v51);
          _os_log_impl((void *)&_mh_execute_header, v54, v55, "Play sound failed for %{public}s. Error %{public}s", (uint8_t *)v57, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          sub_100847D38(v51);
          sub_100847D38(v51);
          (*(void (**)(unsigned char *, uint64_t))(v50 + 8))(v20, v52);
        }
        sub_100847D38(v51);
        sub_10001DAB4((uint64_t)v126, &qword_10164EF48);
      }
      else
      {
        id v116 = v38;
        uint64_t v115 = v124 + 16;
        uint64_t v74 = (uint64_t)v123;
        uint64_t v75 = v125;
        (*(void (**)(unsigned char *, unint64_t *, uint64_t))(v128 + 32))(v123, v32, v125);
        if (qword_101636CF8 != -1) {
          swift_once();
        }
        char v76 = a10;
        uint64_t v77 = type metadata accessor for Logger();
        uint64_t v78 = sub_100010324(v77, (uint64_t)qword_10170E3C8);
        os_log_type_t v79 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v50 + 16);
        v79(v27, v74, v75);
        uint64_t v80 = v122;
        unint64_t v112 = v79;
        v79(v122, v127, v75);
        unint64_t v81 = v119;
        swift_bridgeObjectRetain_n();
        uint64_t v113 = v78;
        unint64_t v82 = Logger.logObject.getter();
        os_log_type_t v83 = static os_log_type_t.default.getter();
        int v84 = v83;
        id v114 = v82;
        if (os_log_type_enabled(v82, v83))
        {
          uint64_t v85 = swift_slowAlloc();
          uint64_t v111 = swift_slowAlloc();
          v130[0] = v111;
          *(_DWORD *)uint64_t v85 = 136446979;
          int v110 = v84;
          swift_bridgeObjectRetain();
          uint64_t v131 = sub_1008FA0F0(v117, v81, v130);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v85 + 12) = 2160;
          uint64_t v131 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v85 + 22) = 2081;
          sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v86 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v131 = sub_1008FA0F0(v86, v87, v130);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          LODWORD(v119) = a10;
          uint64_t v88 = *(unsigned char **)(v128 + 8);
          ((void (*)(unsigned char *, uint64_t))v88)(v27, v75);
          *(_WORD *)(v85 + 32) = 2082;
          unint64_t v89 = v122;
          uint64_t v74 = (uint64_t)v123;
          uint64_t v90 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v131 = sub_1008FA0F0(v90, v91, v130);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v122 = v88;
          ((void (*)(unsigned char *, uint64_t))v88)(v89, v75);
          char v76 = v119;
          unint64_t v92 = v114;
          _os_log_impl((void *)&_mh_execute_header, v114, (os_log_type_t)v110, "%{public}s play sound started for %{private,mask.hash}s. Group: %{public}s", (uint8_t *)v85, 0x2Au);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
          uint64_t v93 = *(unsigned char **)(v50 + 8);
          ((void (*)(unsigned char *, uint64_t))v93)(v27, v75);
          uint64_t v122 = v93;
          ((void (*)(unsigned char *, uint64_t))v93)(v80, v75);
        }
        swift_beginAccess();
        uint64_t v94 = v124;
        unint64_t v95 = *(void *)(v124 + 16);
        char v96 = *(unsigned char *)(v124 + 24);
        *(void *)(v124 + 16) = 0;
        *(unsigned char *)(v94 + 24) = 0;
        sub_1008493EC(v95, v96);
        id v97 = v116;
        sub_10082CE00(v74, v120, a2);
        uint64_t v98 = sub_1004D1434();
        __chkstk_darwin(v98);
        *(void *)&v109[-16] = v74;
        uint64_t v100 = sub_100B2AC68((uint64_t)sub_10084BBA0, (uint64_t)&v109[-32], v99);
        id v101 = v97;
        sub_100845600(v100, (uint64_t)v101);
        swift_release();

        if (v76)
        {
          uint64_t v102 = v118;
          v112(v118, v127, v75);
          uint64_t v103 = Logger.logObject.getter();
          os_log_type_t v104 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v103, v104))
          {
            unint64_t v105 = (uint8_t *)swift_slowAlloc();
            uint64_t v131 = swift_slowAlloc();
            *(_DWORD *)unint64_t v105 = 136446210;
            sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v106 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v129 = sub_1008FA0F0(v106, v107, &v131);
            uint64_t v74 = (uint64_t)v123;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            uint64_t v108 = (void (*)(uint64_t, uint64_t))v122;
            ((void (*)(unsigned char *, uint64_t))v122)(v102, v75);
            _os_log_impl((void *)&_mh_execute_header, v103, v104, "Posting success alert for %{public}s", v105, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            uint64_t v108 = (void (*)(uint64_t, uint64_t))v122;
            ((void (*)(unsigned char *, uint64_t))v122)(v102, v75);
          }

          sub_10082E7E0(v127, 1);
          sub_10001DAB4((uint64_t)v126, &qword_10164EF48);
          v108(v74, v75);
        }
        else
        {
          sub_10001DAB4((uint64_t)v126, &qword_10164EF48);

          ((void (*)(uint64_t, uint64_t))v122)(v74, v75);
        }
      }
    }
  }
}

uint64_t sub_10082CE00(uint64_t a1, unint64_t a2, double a3)
{
  uint64_t v4 = v3;
  unint64_t v160 = a2;
  uint64_t v177 = a1;
  uint64_t v173 = type metadata accessor for DispatchTime();
  uint64_t v172 = *(void *)(v173 - 8);
  uint64_t v6 = __chkstk_darwin(v173);
  unint64_t v170 = (char *)v144 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v171 = (char *)v144 - v8;
  uint64_t v9 = sub_10000588C(&qword_1016511E0);
  __chkstk_darwin(v9 - 8);
  uint64_t v168 = (uint64_t)v144 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = type metadata accessor for BeaconObservation();
  uint64_t v166 = *(void *)(v165 - 8);
  __chkstk_darwin(v165);
  os_log_type_t v167 = (char *)v144 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = type metadata accessor for Date();
  uint64_t v163 = *(void *)(v164 - 8);
  __chkstk_darwin(v164);
  uint64_t v162 = (uint64_t)v144 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000588C(&qword_10163B9F0);
  __chkstk_darwin(v13 - 8);
  uint64_t v159 = (char *)v144 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v157 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  uint64_t v154 = (uint64_t)v144 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000588C((uint64_t *)&unk_1016511A0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v144 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = type metadata accessor for BeaconStatus(0);
  __chkstk_darwin(v156);
  uint64_t v155 = (uint64_t)v144 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = type metadata accessor for UUID();
  uint64_t v175 = *(void *)(v174 - 8);
  uint64_t v20 = __chkstk_darwin(v174);
  uint64_t v22 = (char *)v144 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v153 = (char *)v144 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)v144 - v25;
  uint64_t v27 = sub_10000588C(&qword_10163CBC8);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v161 = (uint64_t)v144 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)v144 - v30;
  uint64_t v178 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  uint64_t v32 = *(void *)(v178 - 8);
  __chkstk_darwin(v178);
  uint64_t v176 = (uint64_t)v144 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for DispatchPredicate();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (void *)((char *)v144 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = *(void **)(v4 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue);
  *uint64_t v37 = v38;
  (*(void (**)(void *, void, uint64_t))(v35 + 104))(v37, enum case for DispatchPredicate.onQueue(_:), v34);
  id v169 = v38;
  uint64_t v39 = _dispatchPreconditionTest(_:)();
  uint64_t v41 = *(void (**)(void *, uint64_t))(v35 + 8);
  uint64_t v40 = (uint64_t *)(v35 + 8);
  v41(v37, v34);
  if ((v39 & 1) == 0)
  {
    __break(1u);
LABEL_64:
    swift_once();
    goto LABEL_10;
  }
  uint64_t v40 = (uint64_t *)(v4 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_coordinators);
  swift_beginAccess();
  uint64_t v42 = *v40;
  if (!*(void *)(*v40 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v31, 1, 1, v178);
    return sub_10001DAB4((uint64_t)v31, &qword_10163CBC8);
  }
  swift_bridgeObjectRetain();
  uint64_t v39 = v177;
  unint64_t v43 = sub_1007240CC(v177);
  if (v44)
  {
    sub_10084B940(*(void *)(v42 + 56) + *(void *)(v32 + 72) * v43, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    uint64_t v45 = 0;
  }
  else
  {
    uint64_t v45 = 1;
  }
  uint64_t v46 = *(void (**)(uint64_t, void, uint64_t, int *))(v32 + 56);
  uint64_t v47 = v178;
  uint64_t v152 = v32 + 56;
  unint64_t v151 = v46;
  v46((uint64_t)v31, v45, 1, (int *)v178);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v31, 1, v47) == 1) {
    return sub_10001DAB4((uint64_t)v31, &qword_10163CBC8);
  }
  uint64_t v145 = v22;
  sub_100849DCC((uint64_t)v31, v176, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  uint64_t v150 = *(void *)(v4 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_beaconStore);
  sub_100ACCD98(v39, (uint64_t)v186);
  if (qword_101636CF8 != -1) {
    goto LABEL_64;
  }
LABEL_10:
  uint64_t v148 = type metadata accessor for Logger();
  uint64_t v49 = sub_100010324(v148, (uint64_t)qword_10170E3C8);
  uint64_t v50 = v175;
  unint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v175 + 16);
  uint64_t v52 = v174;
  uint64_t v149 = v175 + 16;
  uint64_t v147 = v51;
  v51(v26, v39, v174);
  v144[1] = v49;
  uint64_t v53 = Logger.logObject.getter();
  os_log_type_t v54 = static os_log_type_t.default.getter();
  BOOL v55 = os_log_type_enabled(v53, v54);
  uint64_t v146 = v4;
  if (v55)
  {
    uint64_t v56 = swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    v144[0] = v40;
    uint64_t v183 = v57;
    *(_DWORD *)uint64_t v56 = 141558531;
    *(void *)&long long v181 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v56 + 12) = 2081;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v58 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&long long v181 = sub_1008FA0F0(v58, v59, &v183);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    unint64_t v60 = *(void (**)(char *, uint64_t))(v175 + 8);
    v60(v26, v52);
    *(_WORD *)(v56 + 22) = 2048;
    *(double *)&long long v181 = a3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v53, v54, "Play sound running: for %{private,mask.hash}s, timeout: %f.", (uint8_t *)v56, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v39 = v177;
    swift_slowDealloc();
  }
  else
  {
    unint64_t v60 = *(void (**)(char *, uint64_t))(v50 + 8);
    v60(v26, v52);
  }

  sub_10001D074((uint64_t)v186, (uint64_t)&v181, (uint64_t *)&unk_10163BBE0);
  uint64_t v61 = (int *)v178;
  if (!v182)
  {
    sub_10001DAB4((uint64_t)&v181, (uint64_t *)&unk_10163BBE0);
LABEL_19:
    uint64_t v68 = v176;
    *(unsigned char *)(v176 + v61[10]) = 0;
    uint64_t v69 = v147;
    goto LABEL_27;
  }
  unint64_t v62 = v60;
  sub_10001CEB0(&v181, (uint64_t)&v183);
  uint64_t v63 = v184;
  uint64_t v64 = v185;
  sub_10001CD44(&v183, v184);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v64 + 120))(v63, v64) & 1) == 0)
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v183);
    goto LABEL_19;
  }
  sub_100AE9138(v39, (uint64_t)v18);
  uint64_t v65 = sub_10000588C(&qword_1016511B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v65 - 8) + 48))(v18, 1, v65) == 1)
  {
    os_log_type_t v66 = (uint64_t *)&unk_1016511A0;
    uint64_t v67 = (uint64_t)v18;
  }
  else
  {
    uint64_t v70 = v155;
    sub_100849DCC((uint64_t)v18, v155, type metadata accessor for BeaconStatus);
    char v71 = *(unsigned char *)(v70 + *(int *)(v156 + 20));
    sub_100849E34(v70, type metadata accessor for BeaconStatus);
    unsigned int v72 = sub_1000D07F4(v71 & 0xB);
    sub_10001D010((uint64_t)&v183, (uint64_t)&v181);
    sub_10000588C((uint64_t *)&unk_10164DBF0);
    uint64_t v73 = (uint64_t)v159;
    uint64_t v74 = v158;
    char v75 = swift_dynamicCast();
    char v76 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v157 + 56);
    if (v75)
    {
      v76(v73, 0, 1, v74);
      uint64_t v77 = v154;
      sub_100849DCC(v73, v154, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      __int16 v78 = sub_100D1C588();
      uint64_t v68 = v176;
      if ((v78 & 0x100) != 0)
      {
        sub_100849E34(v77, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      }
      else
      {
        char v79 = v78;
        uint64_t v80 = v184;
        uint64_t v81 = v185;
        unint64_t v82 = sub_10001CD44(&v183, v184);
        os_log_type_t v83 = sub_100B43CC4((uint64_t)v82, (v72 >> 8) & 1, HIWORD(v72) & 1, HIBYTE(v72) & 1, v80, v81);
        BOOL v84 = v83[2] == 2 && (sub_100DC82C8(2u, (uint64_t)v83) || v79 == 2);
        uint64_t v39 = v177;
        uint64_t v130 = v174;
        uint64_t v131 = v153;
        *(unsigned char *)(v68 + v61[10]) = v84;
        v147(v131, v39, v130);
        swift_bridgeObjectRetain_n();
        uint64_t v132 = Logger.logObject.getter();
        os_log_type_t v133 = static os_log_type_t.default.getter();
        int v134 = v133;
        if (os_log_type_enabled(v132, v133))
        {
          uint64_t v135 = swift_slowAlloc();
          uint64_t v174 = swift_slowAlloc();
          unint64_t v180 = v174;
          *(_DWORD *)uint64_t v135 = 67110147;
          swift_beginAccess();
          LODWORD(v179) = *(unsigned __int8 *)(v68 + v61[10]);
          LODWORD(v159) = v134;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v135 + 8) = 2160;
          uint64_t v179 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v135 + 18) = 2081;
          sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v136 = v153;
          uint64_t v137 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v179 = sub_1008FA0F0(v137, v138, (uint64_t *)&v180);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v62(v136, v130);
          *(_WORD *)(v135 + 28) = 2048;
          uint64_t v139 = v83[2];
          swift_bridgeObjectRelease();
          uint64_t v179 = v139;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v135 + 38) = 2082;
          swift_bridgeObjectRetain();
          uint64_t v140 = Set.description.getter();
          unint64_t v142 = v141;
          swift_bridgeObjectRelease();
          uint64_t v143 = v140;
          uint64_t v61 = (int *)v178;
          uint64_t v179 = sub_1008FA0F0(v143, v142, (uint64_t *)&v180);
          uint64_t v39 = v177;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          uint64_t v68 = v176;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v132, (os_log_type_t)v159, "Play sound running: airPodPlayingSoundWithBothBudsInCase %{BOOL}d for %{private,mask.hash}s. Nearby Count: %ld, nearby: %{public}s.", (uint8_t *)v135, 0x30u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
          v62(v131, v130);
        }
        sub_100849E34(v154, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        uint64_t v52 = v130;
      }
      goto LABEL_26;
    }
    v76(v73, 1, 1, v74);
    os_log_type_t v66 = &qword_10163B9F0;
    uint64_t v67 = v73;
  }
  sub_10001DAB4(v67, v66);
  uint64_t v68 = v176;
LABEL_26:
  uint64_t v69 = v147;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v183);
LABEL_27:
  swift_beginAccess();
  *(unsigned char *)(v68 + v61[6]) = 2;
  uint64_t v85 = v162;
  static Date.trustedNow.getter(v162);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v163 + 40))(v68 + v61[8], v85, v164);
  swift_endAccess();
  uint64_t v86 = (uint64_t)v145;
  v69(v145, v39, v52);
  unint64_t v87 = v61;
  uint64_t v88 = v69;
  uint64_t v89 = v161;
  sub_10084B940(v68, v161, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  v151(v89, 0, 1, v87);
  swift_beginAccess();
  sub_10015E340(v89, v86);
  swift_endAccess();
  if (qword_101636CB8 != -1) {
    swift_once();
  }
  uint64_t v90 = qword_10170E330;
  uint64_t v91 = (uint64_t)v167;
  v88(v167, v39, v52);
  uint64_t v92 = v165;
  static Date.trustedNow.getter(v91 + *(int *)(v165 + 20));
  *(unsigned char *)(v91 + *(int *)(v92 + 24)) = 25;
  sub_10000588C(&qword_10163A778);
  unint64_t v93 = (*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80);
  uint64_t v94 = swift_allocObject();
  *(_OWORD *)(v94 + 16) = xmmword_101342130;
  sub_10084B940(v91, v94 + v93, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  uint64_t v95 = type metadata accessor for Transaction();
  __chkstk_darwin(v95);
  v144[-4] = v90;
  v144[-3] = v94;
  v144[-2] = 0;
  v144[-1] = 0;
  static Transaction.named<A>(_:with:)();
  swift_bridgeObjectRelease();
  uint64_t v96 = v177;
  sub_100849E34(v91, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  uint64_t v97 = v168;
  sub_100AE381C(v96, v168);
  uint64_t v98 = type metadata accessor for WildModeAssociationRecord(0);
  LODWORD(v94) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 48))(v97, 1, v98);
  sub_10001DAB4(v97, &qword_1016511E0);
  if (v94 == 1) {
    sub_100A9E7EC(10);
  }
  else {
    sub_100AA5514();
  }
  char v99 = sub_100825760(v96);
  uint64_t My = type metadata accessor for Feature.FindMy();
  uint64_t v184 = My;
  uint64_t v185 = sub_10084B9A8((unint64_t *)&qword_101653E00, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
  id v101 = sub_10001D958(&v183);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v101, enum case for Feature.FindMy.spPlaySoundAll(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v183);
  if (My & 1) == 0 || (v99) {
    goto LABEL_52;
  }
  if (v160 > 5)
  {
    if (qword_101636D08 != -1) {
      swift_once();
    }
    sub_100010324(v148, (uint64_t)qword_10164EDE8);
    uint64_t v111 = Logger.logObject.getter();
    os_log_type_t v112 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v111, v112))
    {
      uint64_t v113 = swift_slowAlloc();
      uint64_t v183 = swift_slowAlloc();
      *(_DWORD *)uint64_t v113 = 136315394;
      unint64_t v180 = sub_1008FA0F0(0xD000000000000029, 0x8000000101408A30, &v183);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v113 + 12) = 2048;
      unint64_t v180 = v160;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v111, v112, "%s Unexpected play sound context %ld!", (uint8_t *)v113, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10001D074((uint64_t)v186, (uint64_t)&v183, (uint64_t *)&unk_10163BBE0);
    uint64_t v114 = v184;
    if (v184)
    {
      uint64_t v115 = v185;
      sub_10001CD44(&v183, v184);
      os_log_type_t v104 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v115 + 176))(v114, v115);
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v183);
      unint64_t v105 = (void *)SPBeaconTypeHele;
      uint64_t v116 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v118 = v117;
      if (v116 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v118 == v119) {
        goto LABEL_39;
      }
      goto LABEL_48;
    }
LABEL_50:
    sub_10001DAB4((uint64_t)&v183, (uint64_t *)&unk_10163BBE0);
LABEL_51:
    a3 = 20.0;
    goto LABEL_52;
  }
  if (((1 << v160) & 0x1D) == 0)
  {
    a3 = 2.0;
    goto LABEL_52;
  }
  sub_10001D074((uint64_t)v186, (uint64_t)&v183, (uint64_t *)&unk_10163BBE0);
  uint64_t v102 = v184;
  if (!v184) {
    goto LABEL_50;
  }
  uint64_t v103 = v185;
  sub_10001CD44(&v183, v184);
  os_log_type_t v104 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v103 + 176))(v102, v103);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v183);
  unint64_t v105 = (void *)SPBeaconTypeHele;
  uint64_t v106 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v108 = v107;
  if (v106 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v108 != v109)
  {
LABEL_48:
    char v120 = _stringCompareWithSmolCheck(_:_:expecting:)();
    id v121 = v105;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a3 = 30.0;
    if (v120) {
      goto LABEL_52;
    }
    goto LABEL_51;
  }
LABEL_39:
  id v110 = v105;

  swift_bridgeObjectRelease_n();
  a3 = 30.0;
LABEL_52:
  if (qword_101636D08 != -1) {
    swift_once();
  }
  sub_100010324(v148, (uint64_t)qword_10164EDE8);
  uint64_t v122 = Logger.logObject.getter();
  os_log_type_t v123 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v122, v123))
  {
    uint64_t v124 = swift_slowAlloc();
    uint64_t v183 = swift_slowAlloc();
    *(_DWORD *)uint64_t v124 = 136315394;
    unint64_t v180 = sub_1008FA0F0(0xD000000000000029, 0x8000000101408A30, &v183);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v124 + 12) = 2048;
    unint64_t v180 = *(void *)&a3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v122, v123, "%s scheduling timeout block after %f seconds", (uint8_t *)v124, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v125 = v172;
  uint64_t v126 = v170;
  static DispatchTime.now()();
  uint64_t v127 = v171;
  + infix(_:_:)();
  uint64_t v128 = *(void (**)(char *, uint64_t))(v125 + 8);
  uint64_t v129 = v173;
  v128(v126, v173);
  swift_retain();
  OS_dispatch_queue.asyncAfter(deadline:execute:)();
  swift_release();
  v128(v127, v129);
  sub_10001DAB4((uint64_t)v186, (uint64_t *)&unk_10163BBE0);
  return sub_100849E34(v68, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
}

uint64_t sub_10082E7E0(uint64_t a1, int a2)
{
  int v54 = a2;
  uint64_t v53 = type metadata accessor for PlaySoundUserNotification();
  __chkstk_darwin(v53);
  BOOL v55 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for LocalizationUtility.Table();
  uint64_t v50 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v49 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000588C(&qword_10163BB20);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v8 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C(&qword_1016511E0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for WildModeAssociationRecord(0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100AE381C(a1, (uint64_t)v13);
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  uint64_t v56 = a1;
  if (v18 == 1)
  {
    sub_10001DAB4((uint64_t)v13, &qword_1016511E0);
    sub_100AE75E0(a1, (uint64_t)v7);
    uint64_t v19 = v52;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v52) == 1)
    {
      sub_10001DAB4((uint64_t)v7, &qword_10163BB20);
      uint64_t v20 = sub_100AAB5F8(a1);
      if (v21)
      {
        uint64_t v22 = v20;
        uint64_t v23 = v21;
      }
      else
      {
        uint64_t v27 = v50;
        uint64_t v28 = v49;
        uint64_t v29 = v51;
        (*(void (**)(char *, void, uint64_t))(v50 + 104))(v49, enum case for LocalizationUtility.Table.default(_:), v51);
        uint64_t v22 = static LocalizationUtility.localizedString(key:table:)();
        uint64_t v23 = v30;
        (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
      }
    }
    else
    {
      sub_100849DCC((uint64_t)v7, (uint64_t)v10, type metadata accessor for OwnedBeaconGroup);
      uint64_t v26 = (uint64_t *)&v10[*(int *)(v19 + 36)];
      uint64_t v22 = *v26;
      uint64_t v23 = v26[1];
      swift_bridgeObjectRetain();
      sub_100849E34((uint64_t)v10, type metadata accessor for OwnedBeaconGroup);
    }
    char v25 = 64;
  }
  else
  {
    sub_100849DCC((uint64_t)v13, (uint64_t)v17, type metadata accessor for WildModeAssociationRecord);
    uint64_t v22 = sub_1002934EC();
    uint64_t v23 = v24;
    sub_100849E34((uint64_t)v17, type metadata accessor for WildModeAssociationRecord);
    char v25 = 65;
  }
  uint64_t v31 = v55;
  char v32 = v54;
  uint64_t v33 = v53;
  uint64_t v34 = &v55[*(int *)(v53 + 36)];
  uint64_t v35 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v34, v56, v35);
  *uint64_t v31 = 1;
  v31[1] = v25;
  UUID.init()();
  uint64_t v36 = (uint64_t *)&v31[*(int *)(v33 + 28)];
  *uint64_t v36 = v22;
  v36[1] = v23;
  v31[*(int *)(v33 + 32)] = v32 & 1;
  if (qword_101637118 != -1) {
    swift_once();
  }
  v59[3] = v33;
  v59[4] = (uint64_t)&off_1015D8558;
  uint64_t v37 = sub_10001D958(v59);
  sub_10084B940((uint64_t)v31, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for PlaySoundUserNotification);
  id v38 = objc_allocWithZone((Class)UNUserNotificationCenter);
  NSString v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v40 = [v38 initWithBundleIdentifier:v39];

  id v41 = sub_1010980C0((uint64_t)v37);
  UUID.uuidString.getter();
  id v42 = v41;
  NSString v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v44 = [self requestWithIdentifier:v43 content:v42 trigger:0 destinations:7];

  sub_10001D010((uint64_t)v59, (uint64_t)v58);
  uint64_t v45 = swift_allocObject();
  sub_10001CEB0(v58, v45 + 16);
  *(void *)(v45 + 56) = 0;
  *(void *)(v45 + 64) = 0;
  aBlock[4] = sub_1002F6720;
  aBlock[5] = v45;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100769474;
  aBlock[3] = &unk_1015D7858;
  uint64_t v46 = _Block_copy(aBlock);
  swift_release();
  [v40 addNotificationRequest:v44 withCompletionHandler:v46];

  _Block_release(v46);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v59);
  return sub_100849E34((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for PlaySoundUserNotification);
}

uint64_t sub_10082EF38(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v164 = a5;
  uint64_t v168 = a4;
  uint64_t v10 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v10 - 8);
  uint64_t v179 = (char *)v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = sub_10000588C((uint64_t *)&unk_10163AC90);
  __chkstk_darwin(v182);
  uint64_t v181 = (uint64_t)v161 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = type metadata accessor for Date();
  uint64_t v194 = *(void *)(v202 - 8);
  __chkstk_darwin(v202);
  uint64_t v203 = (char *)v161 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = type metadata accessor for BeaconObservation();
  uint64_t v190 = *(void *)(v191 - 8);
  __chkstk_darwin(v191);
  uint64_t v189 = (char *)v161 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v173 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v170 = (char *)v161 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = type metadata accessor for DispatchQoS();
  uint64_t v171 = *(void *)(v172 - 8);
  __chkstk_darwin(v172);
  id v169 = (char *)v161 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v166 = *(void *)(v167 - 8);
  __chkstk_darwin(v167);
  uint64_t v165 = (char *)v161 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000588C(&qword_10163CBC8);
  __chkstk_darwin(v19 - 8);
  uint64_t v201 = (void (**)(char *, uint64_t, uint64_t))((char *)v161 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v193 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  *(void *)&long long v188 = *(void *)(v193 - 8);
  uint64_t v21 = __chkstk_darwin(v193);
  uint64_t v186 = (uint64_t)v161 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v187 = (uint64_t)v161 - v23;
  uint64_t v24 = sub_10000588C(&qword_101638CF0);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  v197 = ((char *)v161 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v25);
  unint64_t v195 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)v161 - v27);
  uint64_t v28 = type metadata accessor for UUID();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v206 = ((char *)v161 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v196 = (char *)v161 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v185 = (char *)v161 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v204 = (char *)v161 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  unsigned int v205 = (char *)v161 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  id v42 = (char *)v161 - v41;
  __chkstk_darwin(v40);
  id v44 = (char *)v161 - v43;
  uint64_t v45 = a1 + *(int *)(type metadata accessor for OwnedBeaconGroup(0) + 24);
  uint64_t v198 = v29;
  uint64_t v47 = v29 + 16;
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
  v46(v44, v45, v28);
  uint64_t v177 = a1;
  uint64_t v48 = sub_1004D1434();
  uint64_t v49 = a2;
  uint64_t v50 = 0;
  LODWORD(v200) = sub_100846CF8(v48, (uint64_t)v49);
  swift_bridgeObjectRelease();
  uint64_t v176 = v49;

  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v51 = type metadata accessor for Logger();
  uint64_t v52 = sub_100010324(v51, (uint64_t)qword_10170E3C8);
  uint64_t v175 = v44;
  v46(v42, (uint64_t)v44, v28);
  uint64_t v199 = v47;
  v46(v205, a3, v28);
  uint64_t v184 = (char *)v52;
  uint64_t v53 = Logger.logObject.getter();
  os_log_type_t v54 = static os_log_type_t.default.getter();
  int v55 = v54;
  BOOL v56 = os_log_type_enabled(v53, v54);
  uint64_t v192 = v46;
  uint64_t v57 = v42;
  uint64_t v174 = v15;
  uint64_t v163 = a3;
  if (v56)
  {
    uint64_t v58 = swift_slowAlloc();
    uint64_t v183 = (uint64_t (*)(char *, uint64_t))swift_slowAlloc();
    double aBlock = *(double *)&v183;
    *(_DWORD *)uint64_t v58 = 136315650;
    v161[1] = sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v59 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v207 = sub_1008FA0F0(v59, v60, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v162 = v53;
    uint64_t v61 = v198;
    LODWORD(v180) = v55;
    unint64_t v62 = *(void (**)(char *, uint64_t))(v198 + 8);
    v62(v57, v28);
    *(_WORD *)(v58 + 12) = 2048;
    uint64_t v207 = *(void *)&a6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v58 + 22) = 2080;
    uint64_t v63 = v205;
    uint64_t v64 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v207 = sub_1008FA0F0(v64, v65, (uint64_t *)&aBlock);
    os_log_type_t v66 = (void (*)(NSObject *, unint64_t, uint64_t))v192;
    uint64_t v67 = v62;
    uint64_t v68 = v61;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v67(v63, v28);
    os_log_t v69 = v162;
    _os_log_impl((void *)&_mh_execute_header, v162, (os_log_type_t)v180, "Stop sound %s timeout %f. CommandId %s", (uint8_t *)v58, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    os_log_type_t v66 = (void (*)(NSObject *, unint64_t, uint64_t))v46;
    uint64_t v68 = v198;
    uint64_t v67 = *(void (**)(char *, uint64_t))(v198 + 8);
    v67(v42, v28);
    v67(v205, v28);
  }
  uint64_t v70 = (uint64_t)v204;
  uint64_t v71 = (uint64_t)v201;
  uint64_t v183 = (uint64_t (*)(char *, uint64_t))v67;
  os_log_type_t v72 = v199;
  if ((v200 & 1) == 0) {
    goto LABEL_17;
  }
  uint64_t v73 = sub_1004D1434();
  uint64_t v74 = v195;
  sub_10115B15C(v73, (uint64_t)v195);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(void (**)(char *, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v68 + 48))(v74, 1, v28) == 1)
  {
    char v75 = &qword_101638CF0;
    uint64_t v76 = (uint64_t)v74;
LABEL_16:
    sub_10001DAB4(v76, v75);
LABEL_17:
    uint64_t v86 = sub_1004D1434();
    uint64_t v87 = *(void *)(v86 + 56);
    uint64_t v185 = (char *)(v86 + 56);
    uint64_t v88 = 1 << *(unsigned char *)(v86 + 32);
    uint64_t v89 = -1;
    if (v88 < 64) {
      uint64_t v89 = ~(-1 << v88);
    }
    unint64_t v90 = v89 & v87;
    uint64_t v186 = (unint64_t)(v88 + 63) >> 6;
    unint64_t v195 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56);
    uint64_t v193 = v68 + 48;
    unsigned int v205 = (char *)(v68 + 32);
    unint64_t v180 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v194 + 48);
    uint64_t v201 = (void (**)(char *, uint64_t, uint64_t))(v194 + 32);
    LODWORD(v187) = enum case for Feature.FindMy.trustedNowUsesReferenceClock(_:);
    uint64_t v194 = v68 + 8;
    uint64_t v200 = v86;
    swift_bridgeObjectRetain();
    uint64_t v91 = 0;
    uint64_t v184 = (char *)&type metadata for () + 8;
    long long v188 = xmmword_101342130;
    uint64_t v92 = v196;
    uint64_t v178 = v28;
    while (1)
    {
      uint64_t v100 = v197;
      if (v90)
      {
        unint64_t v101 = __clz(__rbit64(v90));
        v90 &= v90 - 1;
        unint64_t v102 = v101 | (v91 << 6);
      }
      else
      {
        if (__OFADD__(v91++, 1))
        {
          __break(1u);
LABEL_79:
          unint64_t v142 = 0xEC000000676E696ELL;
          uint64_t v143 = 0x6E755279616C702ELL;
          goto LABEL_87;
        }
        if (v91 >= v186) {
          goto LABEL_70;
        }
        unint64_t v104 = *(void *)&v185[8 * v91];
        if (!v104)
        {
          uint64_t v105 = v91 + 1;
          if (v91 + 1 >= v186) {
            goto LABEL_70;
          }
          unint64_t v104 = *(void *)&v185[8 * v105];
          if (!v104)
          {
            uint64_t v105 = v91 + 2;
            if (v91 + 2 >= v186) {
              goto LABEL_70;
            }
            unint64_t v104 = *(void *)&v185[8 * v105];
            if (!v104)
            {
              uint64_t v105 = v91 + 3;
              if (v91 + 3 >= v186) {
                goto LABEL_70;
              }
              unint64_t v104 = *(void *)&v185[8 * v105];
              if (!v104)
              {
                uint64_t v105 = v91 + 4;
                if (v91 + 4 >= v186) {
                  goto LABEL_70;
                }
                unint64_t v104 = *(void *)&v185[8 * v105];
                if (!v104)
                {
                  uint64_t v105 = v91 + 5;
                  if (v91 + 5 >= v186) {
                    goto LABEL_70;
                  }
                  unint64_t v104 = *(void *)&v185[8 * v105];
                  if (!v104)
                  {
                    while (1)
                    {
                      uint64_t v91 = v105 + 1;
                      if (__OFADD__(v105, 1))
                      {
                        __break(1u);
                        JUMPOUT(0x100830EF8);
                      }
                      if (v91 >= v186) {
                        break;
                      }
                      unint64_t v104 = *(void *)&v185[8 * v91];
                      ++v105;
                      if (v104) {
                        goto LABEL_38;
                      }
                    }
LABEL_70:
                    uint64_t v123 = v164;
                    (*v195)((char *)v197, 1, 1, v28);
                    swift_release();
                    swift_bridgeObjectRelease();
LABEL_71:
                    sub_10000584C();
                    uint64_t v124 = v166;
                    uint64_t v125 = v165;
                    uint64_t v126 = v167;
                    (*(void (**)(char *, void, uint64_t))(v166 + 104))(v165, enum case for DispatchQoS.QoSClass.default(_:), v167);
                    uint64_t v127 = (void *)static OS_dispatch_queue.global(qos:)();
                    (*(void (**)(char *, uint64_t))(v124 + 8))(v125, v126);
                    uint64_t v128 = swift_allocObject();
                    *(void *)(v128 + 16) = v168;
                    *(void *)(v128 + 24) = v123;
                    uint64_t v217 = (uint64_t)sub_10041ED88;
                    uint64_t v218 = v128;
                    double aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
                    uint64_t v214 = 1107296256;
                    uint64_t v215 = sub_1004B5480;
                    uint64_t v216 = &unk_1015D7290;
                    uint64_t v129 = _Block_copy(&aBlock);
                    swift_retain();
                    uint64_t v130 = v169;
                    static DispatchQoS.unspecified.getter();
                    uint64_t v212 = _swiftEmptyArrayStorage;
                    sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
                    sub_10000588C((uint64_t *)&unk_10163F350);
                    sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
                    uint64_t v131 = v170;
                    uint64_t v132 = v174;
                    dispatch thunk of SetAlgebra.init<A>(_:)();
                    OS_dispatch_queue.async(group:qos:flags:execute:)();
                    _Block_release(v129);

                    (*(void (**)(char *, uint64_t))(v173 + 8))(v131, v132);
                    (*(void (**)(char *, uint64_t))(v171 + 8))(v130, v172);
                    swift_release();
                    uint64_t v133 = type metadata accessor for Transaction();
                    __chkstk_darwin(v133);
                    int v134 = v176;
                    v161[-6] = v177;
                    v161[-5] = v134;
                    v161[-4] = v163;
                    *(double *)&v161[-3] = a6;
                    uint64_t v135 = v175;
                    v161[-2] = v175;
                    static Transaction.named<A>(_:with:)();
                    return v183(v135, v28);
                  }
                }
              }
            }
          }
          uint64_t v91 = v105;
        }
LABEL_38:
        unint64_t v90 = (v104 - 1) & v104;
        unint64_t v102 = __clz(__rbit64(v104)) + (v91 << 6);
      }
      v66(v197, *(void *)(v200 + 48) + *(void *)(v68 + 72) * v102, v28);
      (*(void (**)(NSObject *, void, uint64_t, uint64_t))(v68 + 56))(v100, 0, 1, v28);
      if ((*(unsigned int (**)(NSObject *, uint64_t, uint64_t))(v68 + 48))(v100, 1, v28) == 1)
      {
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v123 = v164;
        goto LABEL_71;
      }
      uint64_t v106 = *(void (**)(char *, char *, uint64_t))v205;
      (*(void (**)(char *, NSObject *, uint64_t))v205)(v92, v100, v28);
      if (qword_101636CB8 != -1) {
        swift_once();
      }
      uint64_t v204 = (char *)qword_10170E330;
      v66(v206, (unint64_t)v92, v28);
      if (qword_1016371D8 != -1) {
        swift_once();
      }
      double aBlock = 7.45683732e247;
      *(double *)&uint64_t v214 = -5.98008217e197;
      SynchronousCache.cachedValue<A>(key:computeBlock:)();
      swift_bridgeObjectRelease();
      if (v212 == 1)
      {
        id v107 = [self sharedInstance];
        unsigned int v108 = [v107 isInternalBuild];

        if (v108)
        {
          if (qword_101636818 != -1) {
            swift_once();
          }
          uint64_t v109 = sub_100010324(v182, (uint64_t)qword_101638DF0);
          swift_beginAccess();
          uint64_t v110 = v181;
          sub_10001D074(v109, v181, (uint64_t *)&unk_10163AC90);
          uint64_t v94 = v202;
          if ((*v180)(v110, 1, v202) != 1)
          {
            unint64_t v93 = v203;
            (*v201)(v203, v110, v94);
            goto LABEL_21;
          }
          sub_10001DAB4(v110, (uint64_t *)&unk_10163AC90);
        }
      }
      uint64_t My = type metadata accessor for Feature.FindMy();
      uint64_t v216 = (void *)My;
      uint64_t v217 = sub_10084B9A8((unint64_t *)&qword_101653E00, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
      os_log_type_t v112 = sub_10001D958((uint64_t *)&aBlock);
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v112, v187, My);
      LOBYTE(My) = isFeatureEnabled(_:)();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&aBlock);
      if ((My & 1) == 0)
      {
        unint64_t v93 = v203;
        Date.init()();
        uint64_t v94 = v202;
        goto LABEL_21;
      }
      sub_100F46C4C();
      double Current = CFAbsoluteTimeGetCurrent();
      unint64_t v93 = v203;
      if (qword_101637200 != -1) {
        swift_once();
      }
      sub_10000588C(&qword_101639450);
      OSAllocatedUnfairLock.callAsFunction<A>(_:)();
      if (Current - aBlock - *(double *)&v214 > 86400.0) {
        break;
      }
      uint64_t v94 = v202;
LABEL_64:
      Date.init(timeIntervalSinceReferenceDate:)();
LABEL_21:
      uint64_t v95 = (uint64_t)v189;
      v106(v189, (char *)v206, v28);
      uint64_t v96 = v191;
      (*v201)((char *)(v95 + *(int *)(v191 + 20)), (uint64_t)v93, v94);
      *(unsigned char *)(v95 + *(int *)(v96 + 24)) = 26;
      sub_10000588C(&qword_10163A778);
      unint64_t v97 = (*(unsigned __int8 *)(v190 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80);
      uint64_t v98 = swift_allocObject();
      *(_OWORD *)(v98 + 16) = v188;
      sub_10084B940(v95, v98 + v97, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      uint64_t v99 = type metadata accessor for Transaction();
      __chkstk_darwin(v99);
      v161[-4] = v204;
      v161[-3] = v98;
      v161[-2] = 0;
      v161[-1] = 0;
      static Transaction.named<A>(_:with:)();
      swift_bridgeObjectRelease();
      sub_100849E34(v95, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      uint64_t v92 = v196;
      v67(v196, v28);
      uint64_t v68 = v198;
      os_log_type_t v72 = v199;
      os_log_type_t v66 = (void (*)(NSObject *, unint64_t, uint64_t))v192;
    }
    OSAllocatedUnfairLock.callAsFunction<A>(_:)();
    uint64_t v114 = type metadata accessor for TaskPriority();
    uint64_t v115 = *(void *)(v114 - 8);
    uint64_t v116 = (uint64_t)v179;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v115 + 56))(v179, 1, 1, v114);
    uint64_t v117 = swift_allocObject();
    *(void *)(v117 + 16) = 0;
    uint64_t v118 = (void *)(v117 + 16);
    *(void *)(v117 + 24) = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v116, 1, v114) == 1)
    {
      sub_10001DAB4(v116, &qword_10164DBB0);
      if (*v118)
      {
LABEL_56:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v119 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v121 = v120;
        swift_unknownObjectRelease();
LABEL_61:
        uint64_t v94 = v202;
        uint64_t v122 = swift_allocObject();
        *(void *)(v122 + 16) = &unk_101639458;
        *(void *)(v122 + 24) = v117;
        if (v121 | v119)
        {
          uint64_t v208 = 0;
          uint64_t v209 = 0;
          uint64_t v210 = v119;
          uint64_t v211 = v121;
        }
        uint64_t v67 = (void (*)(char *, uint64_t))v183;
        unint64_t v93 = v203;
        swift_task_create();
        swift_release();
        uint64_t v28 = v178;
        goto LABEL_64;
      }
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v116, v114);
      if (*v118) {
        goto LABEL_56;
      }
    }
    uint64_t v119 = 0;
    uint64_t v121 = 0;
    goto LABEL_61;
  }
  (*(void (**)(uint64_t, void (**)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v68 + 32))(v70, v74, v28);
  uint64_t v77 = &v176[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_coordinators];
  swift_beginAccess();
  uint64_t v78 = *(void *)v77;
  if (!*(void *)(v78 + 16))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v188 + 56))(v71, 1, 1, v193);
LABEL_15:
    v67((char *)v70, v28);
    char v75 = &qword_10163CBC8;
    uint64_t v76 = v71;
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  unint64_t v79 = sub_1007240CC(v70);
  if (v80)
  {
    uint64_t v81 = v188;
    sub_10084B940(*(void *)(v78 + 56) + *(void *)(v188 + 72) * v79, v71, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    uint64_t v82 = 0;
  }
  else
  {
    uint64_t v82 = 1;
    uint64_t v81 = v188;
  }
  uint64_t v83 = v193;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v71, v82, 1, v193);
  uint64_t v84 = v83;
  swift_bridgeObjectRelease();
  int v85 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v71, 1, v83);
  uint64_t v70 = (uint64_t)v204;
  if (v85 == 1) {
    goto LABEL_15;
  }
  uint64_t v137 = v187;
  sub_100849DCC(v71, v187, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  if (*(unsigned char *)(v137 + *(int *)(v84 + 24)) != 4)
  {
    uint64_t v145 = sub_1004D1434();
    uint64_t v146 = v176;
    sub_100845600(v145, (uint64_t)v146);
    swift_bridgeObjectRelease();

    os_log_type_t v72 = v199;
    sub_100849E34(v137, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    v67((char *)v70, v28);
    goto LABEL_17;
  }
  unint64_t v138 = v185;
  v66(v185, (unint64_t)v175, v28);
  uint64_t v139 = v186;
  sub_10084B940(v137, v186, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  uint64_t v100 = Logger.logObject.getter();
  os_log_type_t v72 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v100, v72))
  {
    uint64_t v50 = swift_slowAlloc();
    double aBlock = COERCE_DOUBLE(swift_slowAlloc());
    *(_DWORD *)uint64_t v50 = 136315394;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v140 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v207 = sub_1008FA0F0(v140, v141, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v183(v138, v28);
    *(_WORD *)(v50 + 12) = 2080;
    unint64_t v142 = 0xEB00000000646575;
    uint64_t v143 = 0x65755179616C702ELL;
    switch(*(unsigned char *)(v139 + *(int *)(v193 + 24)))
    {
      case 1:
        uint64_t v144 = 0x4979616C702ELL;
        goto LABEL_82;
      case 2:
        goto LABEL_79;
      case 3:
        uint64_t v150 = 0x4379616C702ELL;
        goto LABEL_84;
      case 4:
        uint64_t v144 = 0x49706F74732ELL;
LABEL_82:
        uint64_t v143 = v144 & 0xFFFFFFFFFFFFLL | 0x696E000000000000;
        unsigned int v151 = 1952541044;
        goto LABEL_85;
      case 5:
        uint64_t v150 = 0x43706F74732ELL;
LABEL_84:
        uint64_t v143 = v150 & 0xFFFFFFFFFFFFLL | 0x6D6F000000000000;
        unsigned int v151 = 1952803952;
LABEL_85:
        unint64_t v142 = v151 | 0xEE00646500000000;
        break;
      case 6:
        unint64_t v142 = 0xE800000000000000;
        uint64_t v143 = 0x74756F656D69742ELL;
        break;
      default:
        break;
    }
LABEL_87:
    uint64_t v207 = sub_1008FA0F0(v143, v142, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100849E34(v186, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    _os_log_impl((void *)&_mh_execute_header, v100, v72, "Cannot stop sound for %s. Invalid state %s!", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v149 = v164;
    uint64_t v148 = (void (*)(char *, uint64_t))v183;
  }
  else
  {
    uint64_t v147 = v138;
    uint64_t v148 = (void (*)(char *, uint64_t))v183;
    v183(v147, v28);
    sub_100849E34(v139, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);

    uint64_t v149 = v164;
  }
  sub_10000584C();
  uint64_t v152 = v166;
  uint64_t v153 = v165;
  uint64_t v154 = v167;
  (*(void (**)(char *, void, uint64_t))(v166 + 104))(v165, enum case for DispatchQoS.QoSClass.default(_:), v167);
  uint64_t v155 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v152 + 8))(v153, v154);
  uint64_t v156 = swift_allocObject();
  *(void *)(v156 + 16) = v168;
  *(void *)(v156 + 24) = v149;
  uint64_t v217 = (uint64_t)sub_10084BBBC;
  uint64_t v218 = v156;
  double aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
  uint64_t v214 = 1107296256;
  uint64_t v215 = sub_1004B5480;
  uint64_t v216 = &unk_1015D7330;
  uint64_t v157 = _Block_copy(&aBlock);
  swift_retain();
  uint64_t v158 = v169;
  static DispatchQoS.unspecified.getter();
  uint64_t v207 = (uint64_t)_swiftEmptyArrayStorage;
  sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v159 = v170;
  uint64_t v160 = v174;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v157);

  (*(void (**)(char *, uint64_t))(v173 + 8))(v159, v160);
  (*(void (**)(char *, uint64_t))(v171 + 8))(v158, v172);
  sub_100849E34(v187, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  v148(v204, v28);
  v148(v175, v28);
  return swift_release();
}

uint64_t sub_100830F14(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v108 = a4;
  uint64_t v99 = a5;
  uint64_t v104 = a1;
  uint64_t v9 = sub_10000588C(&qword_10164EF08);
  uint64_t v106 = *(uint64_t (**)(uint64_t))(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000588C(&qword_10164EF10);
  uint64_t v105 = *(void (***)(char *, uint64_t))(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v94 = *(void *)(v15 - 8);
  __chkstk_darwin(v15 - 8);
  uint64_t v95 = v16;
  uint64_t v103 = (uint64_t)v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for UUID();
  uint64_t v102 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v93 = v17;
  unint64_t v97 = (char *)v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000588C(&qword_10163C6C8);
  __chkstk_darwin(v18 - 8);
  uint64_t v89 = (void (*)(uint64_t, char *, uint64_t))((char *)v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v78 = (char *)v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_10000588C(&qword_10164EF18);
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v74 = (char *)v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_10000588C(&qword_10164EF20);
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  char v75 = (char *)v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_10000588C(&qword_10164EF28);
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v82 = (char *)v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = (uint64_t (*)(void))sub_10000588C(&qword_10164EF30);
  unint64_t v87 = *((void *)v88 - 1);
  __chkstk_darwin(v88);
  uint64_t v86 = (char *)v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_10000588C(&qword_10164EF38);
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v96 = (char *)v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = _swiftEmptyArrayStorage;
  uint64_t v116 = _swiftEmptyArrayStorage;
  uint64_t v100 = a2;
  uint64_t v29 = sub_1004D1434();
  uint64_t v111 = &v116;
  os_log_type_t v112 = a3;
  unint64_t v101 = a3;
  uint64_t v30 = v109;
  uint64_t v113 = v108;
  sub_100E08474((void (*)(char *))sub_1008476A4, (uint64_t)v110, v29);
  uint64_t v90 = v30;
  swift_bridgeObjectRelease();
  uint64_t v109 = (uint64_t)v116;
  uint64_t v108 = v116[2];
  uint64_t v83 = v20;
  uint64_t v81 = v21;
  if (v108)
  {
    uint64_t v115 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v31 = sub_100062734(&qword_10164EF50, &qword_10164EF40);
    uint64_t v32 = 0;
    uint64_t v106 = (uint64_t (*)(uint64_t))((char *)v106 + 8);
    id v107 = (void (*)(char *, uint64_t, uint64_t))v31;
    ++v105;
    do
    {
      uint64_t v33 = v32 + 1;
      uint64_t v114 = *(void *)(v109 + 8 * v32 + 32);
      swift_retain();
      sub_10000588C(&qword_10164EF40);
      sub_10000588C(&qword_10164EF48);
      Publisher.map<A>(_:)();
      sub_10000588C(&qword_10164EF58);
      sub_100062734(&qword_10164EF60, &qword_10164EF08);
      sub_100062734(&qword_10164EF68, &qword_10164EF58);
      Publisher.catch<A>(_:)();
      (*(void (**)(char *, uint64_t))v106)(v11, v9);
      sub_100062734(&qword_10164EF70, &qword_10164EF10);
      Publisher.eraseToAnyPublisher()();
      (*v105)(v14, v12);
      swift_release();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      uint64_t v32 = v33;
    }
    while (v108 != v33);
    uint64_t v28 = v115;
    swift_bridgeObjectRelease();
  }
  uint64_t v109 = Transaction.subscriptionCleaner.getter();
  uint64_t v108 = swift_allocObject();
  *(unsigned char *)(v108 + 16) = 0;
  uint64_t v115 = v28;
  sub_10000588C(&qword_10164EF78);
  sub_100062734(&qword_10164EF80, &qword_10164EF78);
  sub_100062734(&qword_10164EF88, &qword_10164EF90);
  uint64_t v34 = (void *)Sequence<>.merged()();
  swift_bridgeObjectRelease();
  uint64_t v115 = v34;
  sub_10000588C(&qword_10164EF90);
  sub_1008476D4();
  uint64_t v35 = v74;
  Publisher<>.setFailureType<A>(to:)();
  swift_release();
  uint64_t v36 = v78;
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
  uint64_t v115 = *(void **)&v101[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue];
  id v37 = v115;
  uint64_t v38 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v106 = *(uint64_t (**)(uint64_t))(v39 + 56);
  id v107 = (void (*)(char *, uint64_t, uint64_t))(v39 + 56);
  uint64_t v40 = (uint64_t)v89;
  ((void (*)(void (*)(uint64_t, char *, uint64_t), uint64_t, uint64_t, uint64_t))v106)(v89, 1, 1, v38);
  v73[1] = sub_10000584C();
  sub_100062734(&qword_10164EFA0, &qword_10164EF18);
  uint64_t v105 = (void (**)(char *, uint64_t))sub_10084B9A8((unint64_t *)&qword_10166C020, (void (*)(uint64_t))sub_10000584C);
  uint64_t v41 = v37;
  id v42 = v75;
  uint64_t v43 = v77;
  Publisher.timeout<A>(_:scheduler:options:customError:)();
  sub_10001DAB4(v40, &qword_10163C6C8);

  (*(void (**)(char *, uint64_t))(v81 + 8))(v36, v83);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v35, v43);
  sub_10000588C(&qword_10164EFA8);
  sub_100062734(&qword_10164EFB0, &qword_10164EF20);
  id v44 = v82;
  uint64_t v45 = v80;
  Publisher.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v42, v45);
  sub_10000588C(&qword_10164EFB8);
  sub_100062734(&qword_10164EFC0, &qword_10164EF28);
  sub_100062734(&qword_10164EFC8, &qword_10164EFB8);
  uint64_t v46 = v86;
  uint64_t v47 = v85;
  Publisher.catch<A>(_:)();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v44, v47);
  uint64_t v115 = v41;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v106)(v40, 1, 1, v38);
  sub_100062734(&qword_10164EFD0, &qword_10164EF30);
  uint64_t v48 = v41;
  uint64_t v49 = v88;
  Publisher.receive<A>(on:options:)();
  sub_10001DAB4(v40, &qword_10163C6C8);

  (*(void (**)(char *, uint64_t (*)(void)))(v87 + 8))(v46, v49);
  uint64_t v50 = v102;
  id v107 = *(void (**)(char *, uint64_t, uint64_t))(v102 + 16);
  uint64_t v51 = v97;
  v107(v97, v99, v98);
  uint64_t v106 = type metadata accessor for OwnedBeaconGroup;
  sub_10084B940(v100, v103, type metadata accessor for OwnedBeaconGroup);
  uint64_t v52 = *(unsigned __int8 *)(v50 + 80);
  uint64_t v53 = (v52 + 32) & ~v52;
  uint64_t v105 = (void (**)(char *, uint64_t))(v93 + 7);
  unint64_t v54 = (v93 + 7 + v53) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = *(unsigned __int8 *)(v94 + 80);
  uint64_t v94 = v55 + 8;
  uint64_t v56 = (v55 + 8 + v54) & ~v55;
  uint64_t v93 = v52 | v55 | 7;
  v95 += 7;
  unint64_t v87 = (v95 + v56) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v57 = swift_allocObject();
  uint64_t v58 = v109;
  *(void *)(v57 + 16) = v104;
  *(void *)(v57 + 24) = v58;
  uint64_t v59 = v57 + v53;
  unint64_t v60 = *(void (**)(uint64_t, char *, uint64_t))(v50 + 32);
  uint64_t v102 = v50 + 32;
  uint64_t v89 = v60;
  uint64_t v61 = v98;
  v60(v59, v51, v98);
  *(void *)(v57 + v54) = v108;
  uint64_t v88 = type metadata accessor for OwnedBeaconGroup;
  uint64_t v62 = v103;
  sub_100849DCC(v103, v57 + v56, type metadata accessor for OwnedBeaconGroup);
  uint64_t v63 = v101;
  *(void *)(v57 + v87) = v101;
  v107(v51, v99, v61);
  sub_10084B940(v100, v62, v106);
  uint64_t v64 = (v52 + 16) & ~v52;
  unint64_t v65 = ((unint64_t)v105 + v64) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v94 + v65) & ~v55;
  unint64_t v67 = (v95 + v66) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v68 = swift_allocObject();
  v89(v68 + v64, v97, v61);
  *(void *)(v68 + v65) = v108;
  sub_100849DCC(v103, v68 + v66, v88);
  *(void *)(v68 + v67) = v63;
  *(double *)(v68 + ((v67 + 15) & 0xFFFFFFFFFFFFFFF8)) = a6;
  sub_100062734(&qword_10164EFD8, &qword_10164EF38);
  swift_retain_n();
  id v69 = v63;
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v70 = v92;
  uint64_t v71 = v96;
  Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v71, v70);
  AnyCancellable.store(in:)();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100831FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10000588C(&qword_10163CBC8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for DispatchWorkItemFlags();
  __chkstk_darwin(v30);
  uint64_t v31 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v32 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v32);
  uint64_t v34 = a1;
  uint64_t v35 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a4;
  sub_10083247C(a1, a4);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(*(void *)a2 + 16) >= *(void *)(*(void *)a2 + 24) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v29 = a3;
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v15 = v35;
  uint64_t v16 = v32;
  v28(v35, v34, v32);
  unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v18 + v17, v15, v16);
  *(void *)(v18 + ((v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = v14;
  aBlock[4] = sub_100847EAC;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015D7420;
  _Block_copy(aBlock);
  uint64_t aBlock[7] = _swiftEmptyArrayStorage;
  sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  swift_retain();
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for DispatchWorkItem();
  swift_allocObject();
  uint64_t v19 = DispatchWorkItem.init(flags:block:)();
  swift_release();
  swift_release();
  uint64_t v21 = v34;
  uint64_t v20 = (uint64_t)v35;
  uint64_t v22 = v28;
  v28(v35, v34, v16);
  v22(v10, v33, v16);
  uint64_t v23 = v22;
  uint64_t v24 = (int *)type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  v23(&v10[v24[5]], v21, v16);
  uint64_t v25 = (uint64_t)&v10[v24[8]];
  swift_retain();
  static Date.trustedNow.getter(v25);
  v10[v24[6]] = 4;
  *(void *)&v10[v24[7]] = v19;
  *(void *)&v10[v24[9]] = 0;
  v10[v24[10]] = 0;
  (*(void (**)(char *, void, uint64_t, int *))(*((void *)v24 - 1) + 56))(v10, 0, 1, v24);
  swift_beginAccess();
  sub_10015E340((uint64_t)v10, v20);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10083247C(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = a1;
  uint64_t v55 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v55 - 8);
  uint64_t v5 = __chkstk_darwin(v55);
  uint64_t v49 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v47 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v47 - v10;
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v52 = v2;
  uint64_t v16 = *(void **)(v2 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue);
  *uint64_t v15 = v16;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  id v17 = v16;
  char v18 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if (v18)
  {
    uint64_t v48 = a2;
    if (qword_101636CF8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v50 = v9;
  uint64_t v47 = type metadata accessor for Logger();
  sub_100010324(v47, (uint64_t)qword_10170E3C8);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v20 = v55;
  uint64_t v51 = v4 + 16;
  uint64_t v53 = v19;
  v19(v11, v56, v55);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    v57[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 141558275;
    uint64_t v58 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v23 + 12) = 2081;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v58 = sub_1008FA0F0(v24, v25, v57);
    uint64_t v20 = v55;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    unint64_t v54 = *(void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v26 = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v54(v11, v20);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Calling stop sound on device %{private,mask.hash}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v26 = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    unint64_t v54 = *(void (**)(char *, uint64_t))(v4 + 8);
    v54(v11, v20);
  }

  sub_10000588C(&qword_10164EFE0);
  swift_allocObject();
  uint64_t v27 = PassthroughSubject.init()();
  uint64_t v28 = (uint64_t)v50;
  uint64_t v29 = v56;
  v53(v50, v56, v20);
  uint64_t v30 = (uint64_t *)(v52 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_stopSoundSubjects);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v58 = *v30;
  uint64_t *v30 = 0x8000000000000000;
  sub_100170A90(v27, v28, isUniquelyReferenced_nonNull_native);
  uint64_t *v30 = v58;
  swift_bridgeObjectRelease();
  v54((char *)v28, v20);
  swift_endAccess();
  char v32 = sub_100825760(v29);
  uint64_t My = type metadata accessor for Feature.FindMy();
  v57[3] = My;
  v57[4] = sub_10084B9A8((unint64_t *)&qword_101653E00, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
  uint64_t v34 = sub_10001D958(v57);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v34, enum case for Feature.FindMy.spPlaySoundAll(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v57);
  if (My & 1) == 0 || (v32)
  {
    sub_100817CF8();
    uint64_t v42 = v41;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 64))(v56, ObjectType, v42);
    swift_unknownObjectRelease();
    v57[0] = v27;
    sub_100062734(&qword_10164EFE8, &qword_10164EFE0);
    uint64_t v44 = Publisher.eraseToAnyPublisher()();
  }
  else
  {
    if (qword_101636D08 != -1) {
      swift_once();
    }
    sub_100010324(v47, (uint64_t)qword_10164EDE8);
    uint64_t v35 = v49;
    v53(v49, v56, v20);
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      v57[0] = v55;
      *(_DWORD *)uint64_t v38 = 136315651;
      uint64_t v58 = sub_1008FA0F0(0xD00000000000001CLL, 0x8000000101408980, v57);
      uint64_t v53 = (void (*)(char *, uint64_t, uint64_t))v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v38 + 12) = 2160;
      uint64_t v58 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v38 + 22) = 2081;
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v58 = sub_1008FA0F0(v39, v40, v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v54(v35, v20);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "%s SPPlaySoundAll: %{private,mask.hash}s does NOT support ranging", (uint8_t *)v38, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v54(v35, v20);
    }

    uint64_t v44 = sub_100840760(v56, v48, v27);
  }
  uint64_t v45 = v44;
  swift_release();
  return v45;
}

void sub_100832CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100010324(v8, (uint64_t)qword_10170E3C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v18 = a1;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v17 = a2 + 16;
    uint64_t v12 = (uint8_t *)v11;
    v20[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v19 = sub_1008FA0F0(v13, v14, v20);
    a1 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Timed out stop sound waiting for CL. Beacon %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = (void *)Strong;
    sub_100829E80(a1, 0, 0);
  }
}

uint64_t sub_100832FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10001D074(a1, a2, &qword_10164EF48);
  sub_10000588C(&qword_10164EFA8);

  return swift_storeEnumTagMultiPayload();
}

void sub_100833008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  Transaction.capture()();
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_100010324(v15, (uint64_t)qword_10170E3C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a4, v11);
  swift_retain_n();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v26 = a7;
    uint64_t v19 = v18;
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v25 = a6;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v28 = sub_1008FA0F0(v20, v21, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    *(_WORD *)(v19 + 12) = 1024;
    swift_beginAccess();
    int v22 = *(unsigned __int8 *)(a5 + 16);
    swift_release();
    int v27 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Stop sound for group %s completion. Success? %{BOOL}d", (uint8_t *)v19, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a7 = v26;
    swift_slowDealloc();
  }
  else
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);

    swift_release();
  }
  uint64_t v23 = sub_1004D1434();
  id v24 = a7;
  sub_100845A10(v23, (uint64_t)v24, 1);
  swift_bridgeObjectRelease();
}

void sub_100833350(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, void *a5, double a6)
{
  uint64_t v87 = a4;
  id v88 = a5;
  uint64_t v85 = a3;
  uint64_t v90 = a2;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v91 = *(void *)(v8 - 8);
  uint64_t v92 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  unint64_t v14 = (char *)&v82 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v86 = (char *)&v82 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v82 - v18;
  __chkstk_darwin(v17);
  uint64_t v89 = ((char *)&v82 - v20);
  uint64_t v21 = sub_10000588C(&qword_10164EF48);
  uint64_t v22 = __chkstk_darwin(v21);
  id v24 = (unint64_t *)((char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v82 - v25;
  uint64_t v27 = sub_10000588C(&qword_10164EFA8);
  __chkstk_darwin(v27);
  uint64_t v29 = (unint64_t *)((char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001D074(a1, (uint64_t)v29, &qword_10164EFA8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v30 = *v29;
    if (*v29 == 3)
    {
      if (qword_101636CF8 != -1) {
        swift_once();
      }
      uint64_t v31 = type metadata accessor for Logger();
      sub_100010324(v31, (uint64_t)qword_10170E3C8);
      char v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v34 = 134217984;
        *(double *)uint64_t v93 = a6;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "Stop sound timed out after %f. CL should have completed by now", v34, 0xCu);
        swift_slowDealloc();
      }
    }
    else
    {
      if (qword_101636CF8 != -1) {
        swift_once();
      }
      uint64_t v48 = type metadata accessor for Logger();
      sub_100010324(v48, (uint64_t)qword_10170E3C8);
      uint64_t v49 = v91;
      uint64_t v50 = v92;
      (*(void (**)(char *, NSObject *, uint64_t))(v91 + 16))(v11, v90, v92);
      sub_100847D28(v30);
      sub_100847D28(v30);
      uint64_t v51 = Logger.logObject.getter();
      os_log_type_t v52 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = swift_slowAlloc();
        v93[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v53 = 136315394;
        sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v54 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v94 = sub_1008FA0F0(v54, v55, v93);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v49 + 8))(v11, v50);
        *(_WORD *)(v53 + 12) = 2080;
        uint64_t v94 = v30;
        sub_100847D28(v30);
        uint64_t v56 = String.init<A>(describing:)();
        uint64_t v94 = sub_1008FA0F0(v56, v57, v93);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100847D38(v30);
        sub_100847D38(v30);
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "Stop sound failed for %s with unexpected error %s", (uint8_t *)v53, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v49 + 8))(v11, v50);
        sub_100847D38(v30);
        sub_100847D38(v30);
      }

      sub_100847D38(v30);
    }
  }
  else
  {
    sub_100847D48((uint64_t)v29, (uint64_t)v26);
    sub_10001D074((uint64_t)v26, (uint64_t)v24, &qword_10164EF48);
    uint64_t v35 = (uint64_t)v26;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unint64_t v36 = *v24;
      uint64_t v37 = v91;
      if (qword_101636CF8 != -1) {
        swift_once();
      }
      uint64_t v38 = type metadata accessor for Logger();
      sub_100010324(v38, (uint64_t)qword_10170E3C8);
      uint64_t v39 = v92;
      (*(void (**)(char *, NSObject *, uint64_t))(v37 + 16))(v14, v90, v92);
      sub_100847D28(v36);
      sub_100847D28(v36);
      unint64_t v40 = Logger.logObject.getter();
      os_log_type_t v41 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = swift_slowAlloc();
        uint64_t v90 = v35;
        uint64_t v43 = v42;
        v93[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v43 = 136315394;
        sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v94 = sub_1008FA0F0(v44, v45, v93);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v39);
        *(_WORD *)(v43 + 12) = 2080;
        uint64_t v94 = v36;
        sub_100847D28(v36);
        uint64_t v46 = String.init<A>(describing:)();
        uint64_t v94 = sub_1008FA0F0(v46, v47, v93);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100847D38(v36);
        sub_100847D38(v36);
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "Stop sound failed for %s with error %s", (uint8_t *)v43, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_100847D38(v36);
        sub_10001DAB4((uint64_t)v90, &qword_10164EF48);
      }
      else
      {

        sub_100847D38(v36);
        sub_100847D38(v36);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v39);
        sub_100847D38(v36);
        sub_10001DAB4(v35, &qword_10164EF48);
      }
    }
    else
    {
      uint64_t v58 = v91;
      uint64_t v59 = v89;
      unint64_t v60 = v24;
      uint64_t v61 = v92;
      (*(void (**)(NSObject *, unint64_t *, uint64_t))(v91 + 32))(v89, v60, v92);
      if (qword_101636CF8 != -1) {
        swift_once();
      }
      v85 += 16;
      uint64_t v62 = type metadata accessor for Logger();
      sub_100010324(v62, (uint64_t)qword_10170E3C8);
      uint64_t v63 = *(void (**)(char *, NSObject *, uint64_t))(v58 + 16);
      v63(v19, v59, v61);
      uint64_t v64 = v86;
      v63(v86, v90, v61);
      unint64_t v65 = Logger.logObject.getter();
      os_log_type_t v66 = static os_log_type_t.default.getter();
      int v67 = v66;
      if (os_log_type_enabled(v65, v66))
      {
        uint64_t v68 = swift_slowAlloc();
        uint64_t v84 = swift_slowAlloc();
        v93[0] = v84;
        *(_DWORD *)uint64_t v68 = 136315394;
        int v83 = v67;
        sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        os_log_t v82 = v65;
        uint64_t v69 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v94 = sub_1008FA0F0(v69, v70, v93);
        uint64_t v71 = v64;
        uint64_t v90 = v35;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        os_log_type_t v72 = *(void (**)(char *, uint64_t))(v58 + 8);
        v72(v19, v92);
        *(_WORD *)(v68 + 12) = 2080;
        uint64_t v61 = v92;
        uint64_t v73 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v94 = sub_1008FA0F0(v73, v74, v93);
        uint64_t v35 = (uint64_t)v90;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v72(v71, v61);
        unint64_t v65 = v82;
        _os_log_impl((void *)&_mh_execute_header, v82, (os_log_type_t)v83, "Stop sound succeeded for %s. Group: %s", (uint8_t *)v68, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v59 = v89;
        swift_slowDealloc();
      }
      else
      {
        char v75 = *(void (**)(char *, uint64_t))(v58 + 8);
        v75(v19, v61);
        uint64_t v76 = v64;
        os_log_type_t v72 = v75;
        v75(v76, v61);
      }

      uint64_t v77 = v85;
      swift_beginAccess();
      unsigned char *v77 = 1;
      uint64_t v78 = sub_1004D1434();
      __chkstk_darwin(v78);
      *(&v82 - 2) = v59;
      uint64_t v80 = sub_100B2AC68((uint64_t)sub_100847DB0, (uint64_t)&(&v82)[-4], v79);
      id v81 = v88;
      sub_100845D80(v80, (uint64_t)v81);
      swift_release();

      sub_10001DAB4(v35, &qword_10164EF48);
      v72((char *)v59, v61);
    }
  }
}

BOOL sub_100833F20()
{
  return (dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0;
}

uint64_t sub_100833FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v63 = a5;
  uint64_t v62 = a4;
  uint64_t v61 = a3;
  uint64_t v60 = a1;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v68 = *(void *)(v9 - 8);
  uint64_t v69 = v9;
  __chkstk_darwin(v9);
  os_log_type_t v66 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for DispatchQoS();
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v64 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  unint64_t v57 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v71 = v15;
  os_log_type_t v72 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000588C(&qword_1016511E0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for BeaconObservation();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v74 = v6;
  if (sub_1008254E4(a2)) {
    char v23 = 23;
  }
  else {
    char v23 = 24;
  }
  if (qword_101636CB8 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_10170E330;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v73 = v13;
  unint64_t v70 = v25;
  v25(v22, a2, v13);
  static Date.trustedNow.getter((uint64_t)&v22[*(int *)(v19 + 20)]);
  v22[*(int *)(v19 + 24)] = v23;
  sub_10000588C(&qword_10163A778);
  unint64_t v26 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_101342130;
  sub_10084B940((uint64_t)v22, v27 + v26, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  uint64_t v28 = type metadata accessor for Transaction();
  uint64_t v29 = a2;
  __chkstk_darwin(v28);
  *(&v56 - 4) = v24;
  *(&v56 - 3) = v27;
  *(&v56 - 2) = 0;
  *(&v56 - 1) = 0;
  static Transaction.named<A>(_:with:)();
  swift_bridgeObjectRelease();
  sub_100849E34((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  unint64_t v30 = v74;
  sub_100AE381C(v29, (uint64_t)v18);
  uint64_t v31 = type metadata accessor for WildModeAssociationRecord(0);
  int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v18, 1, v31);
  sub_10001DAB4((uint64_t)v18, &qword_1016511E0);
  uint64_t v33 = v29;
  if (v32 == 1) {
    sub_100A9E7EC(10);
  }
  else {
    sub_100AA5514();
  }
  uint64_t v34 = *(NSObject **)&v30[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue];
  unint64_t v36 = v72;
  uint64_t v35 = v73;
  v70(v72, v33, v73);
  uint64_t v37 = v30;
  unint64_t v38 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v37;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v39 + v38, v36, v35);
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = sub_10084A7A4;
  *(void *)(v40 + 24) = v39;
  uint64_t v80 = sub_1003B7AE0;
  uint64_t v81 = v40;
  double aBlock = _NSConcreteStackBlock;
  uint64_t v77 = 1107296256;
  uint64_t v78 = sub_1000A70B0;
  uint64_t v79 = &unk_1015D7C40;
  os_log_type_t v41 = _Block_copy(&aBlock);
  id v42 = v37;
  swift_retain();
  swift_release();
  dispatch_sync(v34, v41);
  _Block_release(v41);
  LOBYTE(v34) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v34)
  {
    __break(1u);
  }
  else
  {
    uint64_t v44 = type metadata accessor for Transaction();
    __chkstk_darwin(v44);
    *(&v56 - 6) = (uint64_t)v42;
    *(&v56 - 5) = v33;
    *((double *)&v56 - 4) = a6;
    uint64_t v45 = v61;
    *(&v56 - 3) = v60;
    *(&v56 - 2) = v45;
    static Transaction.named<A>(_:with:)();
    sub_10000584C();
    uint64_t v46 = v58;
    unint64_t v47 = v57;
    uint64_t v48 = v59;
    (*(void (**)(char *, void, uint64_t))(v58 + 104))(v57, enum case for DispatchQoS.QoSClass.default(_:), v59);
    uint64_t v49 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
    uint64_t v50 = swift_allocObject();
    uint64_t v51 = v63;
    *(void *)(v50 + 16) = v62;
    *(void *)(v50 + 24) = v51;
    uint64_t v80 = sub_10041ED88;
    uint64_t v81 = v50;
    double aBlock = _NSConcreteStackBlock;
    uint64_t v77 = 1107296256;
    uint64_t v78 = sub_1004B5480;
    uint64_t v79 = &unk_1015D7C90;
    os_log_type_t v52 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v53 = v64;
    static DispatchQoS.unspecified.getter();
    char v75 = _swiftEmptyArrayStorage;
    sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    uint64_t v54 = v66;
    uint64_t v55 = v69;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v52);

    (*(void (**)(char *, uint64_t))(v68 + 8))(v54, v55);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v53, v67);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1008348F0(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  uint64_t v43 = a4;
  uint64_t v48 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v51 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  unint64_t v47 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v49 = *(void *)(v10 - 8);
  uint64_t v50 = v10;
  __chkstk_darwin(v10);
  id v42 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v40 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v39 = (char *)&v38 - v16;
  uint64_t v46 = *(void *)(v6 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue);
  uint64_t v17 = *(void (**)(void))(v13 + 16);
  v17();
  ((void (*)(char *, uint64_t, uint64_t))v17)((char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  uint64_t v18 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v19 = (v18 + 16) & ~v18;
  unint64_t v20 = (v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = (v18 + 16 + v23) & ~v18;
  uint64_t v25 = swift_allocObject();
  unint64_t v26 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
  v26(v25 + v19, v39, v12);
  uint64_t v27 = v44;
  *(void *)(v25 + v20) = v43;
  *(double *)(v25 + v21) = a2;
  uint64_t v28 = v40;
  uint64_t v29 = v41;
  *(void *)(v25 + v22) = v41;
  unint64_t v30 = (void *)(v25 + v23);
  uint64_t v31 = v45;
  void *v30 = v27;
  v30[1] = v31;
  v26(v25 + v24, v28, v12);
  aBlock[4] = sub_10084A3F8;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015D7AB0;
  int v32 = _Block_copy(aBlock);
  id v33 = v29;
  swift_retain();
  uint64_t v34 = v42;
  static DispatchQoS.unspecified.getter();
  os_log_type_t v52 = _swiftEmptyArrayStorage;
  sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  unint64_t v36 = v47;
  uint64_t v35 = v48;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v32);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v36, v35);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v34, v50);
  return swift_release();
}

void sub_100834D4C(void (*a1)())
{
  type metadata accessor for CommandError(0);
  sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
  sub_10084B9A8((unint64_t *)&unk_101651190, type metadata accessor for CommandError);
  _BridgedStoredNSError.init(_:userInfo:)();
  a1();
}

uint64_t sub_100834E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v154 = a6;
  uint64_t v143 = a5;
  uint64_t v137 = a4;
  uint64_t v155 = a3;
  uint64_t v10 = sub_10000588C(&qword_1016511E0);
  __chkstk_darwin(v10 - 8);
  uint64_t v135 = (uint64_t)&v122 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = type metadata accessor for BeaconObservation();
  uint64_t v133 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  int v134 = (char *)&v122 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v147 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  uint64_t v150 = (char *)&v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = type metadata accessor for DispatchQoS();
  uint64_t v145 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v144 = (char *)&v122 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v141 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v140 = (char *)&v122 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000588C(&qword_10163CBC8);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v131 = (char *)&v122 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v136 = (char *)&v122 - v19;
  uint64_t v153 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  uint64_t v149 = *(void *)(v153 - 8);
  uint64_t v20 = __chkstk_darwin(v153);
  uint64_t v124 = (uint64_t)&v122 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v127 = (uint64_t)&v122 - v22;
  uint64_t v23 = type metadata accessor for UUID();
  uint64_t v24 = *(void **)(v23 - 8);
  uint64_t v25 = v24[8];
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v129 = (char *)&v122 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v130 = (char *)&v122 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v126 = (char *)&v122 - v30;
  __chkstk_darwin(v29);
  int v32 = (char *)&v122 - v31;
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for Logger();
  uint64_t v34 = sub_100010324(v33, (uint64_t)qword_10170E3C8);
  uint64_t v35 = v24 + 2;
  uint64_t v139 = (void (*)(char *, uint64_t, uint64_t))v24[2];
  v139(v32, a1, v23);
  uint64_t v125 = v34;
  unint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.default.getter();
  BOOL v38 = os_log_type_enabled(v36, v37);
  uint64_t v152 = a1;
  uint64_t v148 = a2;
  unint64_t v138 = v24;
  if (v38)
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v122 = swift_slowAlloc();
    uint64_t aBlock = v122;
    *(_DWORD *)uint64_t v39 = 136446722;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v163 = sub_1008FA0F0(v40, v41, &aBlock);
    uint64_t v42 = v148;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v123 = (void (*)(char *, uint64_t))v24[1];
    v123(v32, v23);
    *(_WORD *)(v39 + 12) = 2082;
    unint64_t v43 = 0xE800000000000000;
    uint64_t v44 = 0x746C75616665642ELL;
    uint64_t v45 = (uint64_t)v136;
    switch(v42)
    {
      case 0:
        break;
      case 1:
        uint64_t v44 = 0x676E69676E61722ELL;
        break;
      case 2:
        unint64_t v43 = 0xE900000000000067;
        goto LABEL_12;
      case 3:
        unint64_t v43 = 0x80000001013FD5F0;
        uint64_t v44 = 0xD000000000000010;
        break;
      case 4:
        unint64_t v43 = 0xEF64656D7269666ELL;
        uint64_t v44 = 0x6F4365756575712ELL;
        break;
      case 5:
        unint64_t v43 = 0xEE0074726F685367;
LABEL_12:
        uint64_t v44 = 0x6E696B636172742ELL;
        break;
      default:
        unint64_t v43 = 0xE700000000000000;
        uint64_t v44 = 0x6E776F6E6B6E75;
        uint64_t v45 = (uint64_t)v136;
        break;
    }
    uint64_t v163 = sub_1008FA0F0(v44, v43, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 22) = 2048;
    uint64_t v163 = *(void *)&a7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "playSoundOneShot %{public}s context %{public}s timeout %f", (uint8_t *)v39, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a1 = v152;
  }
  else
  {
    uint64_t v123 = (void (*)(char *, uint64_t))v24[1];
    v123(v32, v23);

    uint64_t v45 = (uint64_t)v136;
  }
  uint64_t v46 = (char *)(v155 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_coordinators);
  swift_beginAccess();
  uint64_t v136 = v46;
  uint64_t v47 = *(void *)v46;
  uint64_t v48 = v149;
  if (!*(void *)(v47 + 16))
  {
    os_log_type_t v52 = v35;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v149 + 56))(v45, 1, 1, v153);
LABEL_20:
    sub_10001DAB4(v45, &qword_10163CBC8);
    uint64_t v54 = v139;
LABEL_21:
    uint64_t v55 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v56 = v130;
    uint64_t v128 = v52;
    v54(v130, a1, v23);
    unint64_t v57 = v129;
    v54(v129, v154, v23);
    uint64_t v58 = v138;
    uint64_t v59 = *((unsigned __int8 *)v138 + 80);
    uint64_t v60 = (v59 + 16) & ~v59;
    uint64_t v61 = (v25 + v59 + v60) & ~v59;
    unint64_t v62 = (v25 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v63 = swift_allocObject();
    uint64_t v64 = v63 + v60;
    uint64_t v65 = (void (*)(uint64_t, char *, uint64_t))v58[4];
    v65(v64, v56, v23);
    v65(v63 + v61, v57, v23);
    *(void *)(v63 + v62) = v55;
    uint64_t v161 = sub_10084A4BC;
    uint64_t v162 = v63;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v158 = 1107296256;
    uint64_t v159 = sub_1004B5480;
    uint64_t v160 = &unk_1015D7B00;
    _Block_copy(&aBlock);
    uint64_t v156 = _swiftEmptyArrayStorage;
    uint64_t v66 = sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    swift_retain();
    uint64_t v67 = sub_10000588C((uint64_t *)&unk_10163F350);
    sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    unint64_t v138 = (void *)v67;
    uint64_t v139 = (void (*)(char *, uint64_t, uint64_t))v66;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    type metadata accessor for DispatchWorkItem();
    swift_allocObject();
    uint64_t v68 = v152;
    uint64_t v69 = DispatchWorkItem.init(flags:block:)();
    swift_release();
    swift_release();
    uint64_t v70 = (uint64_t)v56;
    v54(v56, v68, v23);
    uint64_t v71 = (uint64_t)v131;
    v54(v131, v154, v23);
    os_log_type_t v72 = (int *)v153;
    v54((char *)(v71 + *(int *)(v153 + 20)), v68, v23);
    uint64_t v73 = v71 + v72[8];
    swift_retain();
    static Date.trustedNow.getter(v73);
    *(unsigned char *)(v71 + v72[6]) = 1;
    uint64_t v74 = v72[7];
    uint64_t v129 = (char *)v69;
    *(void *)(v71 + v74) = v69;
    *(void *)(v71 + v72[9]) = 0;
    *(unsigned char *)(v71 + v72[10]) = 0;
    (*(void (**)(uint64_t, void, uint64_t, int *))(v149 + 56))(v71, 0, 1, v72);
    swift_beginAccess();
    sub_10015E340(v71, v70);
    swift_endAccess();
    if (qword_101636CB8 != -1) {
      swift_once();
    }
    uint64_t v75 = qword_10170E330;
    uint64_t v76 = (uint64_t)v134;
    v54(v134, v68, v23);
    uint64_t v77 = v132;
    static Date.trustedNow.getter(v76 + *(int *)(v132 + 20));
    *(unsigned char *)(v76 + *(int *)(v77 + 24)) = 24;
    sub_10000588C(&qword_10163A778);
    unint64_t v78 = (*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80);
    uint64_t v79 = v68;
    uint64_t v80 = swift_allocObject();
    *(_OWORD *)(v80 + 16) = xmmword_101342130;
    sub_10084B940(v76, v80 + v78, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    uint64_t v81 = type metadata accessor for Transaction();
    __chkstk_darwin(v81);
    *(&v122 - 4) = v75;
    *(&v122 - 3) = v80;
    *(&v122 - 2) = 0;
    *(&v122 - 1) = 0;
    static Transaction.named<A>(_:with:)();
    swift_bridgeObjectRelease();
    sub_100849E34(v76, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    uint64_t v82 = v135;
    sub_100AE381C(v79, v135);
    uint64_t v83 = type metadata accessor for WildModeAssociationRecord(0);
    LODWORD(v80) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 48))(v82, 1, v83);
    sub_10001DAB4(v82, &qword_1016511E0);
    if (v80 == 1) {
      sub_100A9E7EC(10);
    }
    else {
      sub_100AA5514();
    }
    uint64_t v84 = v137;
    sub_10000584C();
    uint64_t v85 = v141;
    uint64_t v86 = v140;
    uint64_t v87 = v142;
    (*(void (**)(char *, void, uint64_t))(v141 + 104))(v140, enum case for DispatchQoS.QoSClass.default(_:), v142);
    id v88 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v87);
    uint64_t v89 = swift_allocObject();
    uint64_t v90 = v143;
    *(void *)(v89 + 16) = v84;
    *(void *)(v89 + 24) = v90;
    uint64_t v161 = sub_10041ED88;
    uint64_t v162 = v89;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v158 = 1107296256;
    uint64_t v159 = sub_1004B5480;
    uint64_t v160 = &unk_1015D7B50;
    uint64_t v91 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v92 = v144;
    static DispatchQoS.unspecified.getter();
    uint64_t v156 = _swiftEmptyArrayStorage;
    uint64_t v93 = v150;
    uint64_t v94 = v151;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v91);

    (*(void (**)(char *, uint64_t))(v147 + 8))(v93, v94);
    (*(void (**)(char *, uint64_t))(v145 + 8))(v92, v146);
    swift_release();
    uint64_t v95 = type metadata accessor for Transaction();
    __chkstk_darwin(v95);
    uint64_t v96 = v152;
    *(&v122 - 6) = v155;
    *(&v122 - 5) = v96;
    uint64_t v97 = v148;
    *(&v122 - 4) = v154;
    *(&v122 - 3) = v97;
    *((double *)&v122 - 2) = a7;
    static Transaction.named<A>(_:with:)();
    return swift_release();
  }
  swift_bridgeObjectRetain();
  unint64_t v49 = sub_1007240CC(a1);
  if (v50)
  {
    sub_10084B940(*(void *)(v47 + 56) + *(void *)(v48 + 72) * v49, v45, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    uint64_t v51 = 0;
  }
  else
  {
    uint64_t v51 = 1;
  }
  os_log_type_t v52 = v35;
  uint64_t v53 = v153;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(v45, v51, 1, v153);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v45, 1, v53) == 1) {
    goto LABEL_20;
  }
  uint64_t v99 = v127;
  sub_100849DCC(v45, v127, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  uint64_t v54 = v139;
  if (qword_101636D00 != -1) {
    swift_once();
  }
  if (sub_100272E58(*(unsigned __int8 *)(v99 + *(int *)(v153 + 24)), qword_10170E3E0))
  {
    sub_100849E34(v99, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    goto LABEL_21;
  }
  uint64_t v100 = v126;
  v54(v126, a1, v23);
  uint64_t v101 = v124;
  sub_10084B940(v99, v124, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  uint64_t v102 = Logger.logObject.getter();
  os_log_type_t v103 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v102, v103))
  {
    uint64_t v104 = swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v104 = 136315394;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v105 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v156 = (void *)sub_1008FA0F0(v105, v106, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v123(v100, v23);
    *(_WORD *)(v104 + 12) = 2080;
    unint64_t v107 = 0xEB00000000646575;
    uint64_t v108 = 0x65755179616C702ELL;
    switch(*(unsigned char *)(v101 + *(int *)(v153 + 24)))
    {
      case 1:
        uint64_t v109 = 0x4979616C702ELL;
        goto LABEL_38;
      case 2:
        unint64_t v107 = 0xEC000000676E696ELL;
        uint64_t v108 = 0x6E755279616C702ELL;
        break;
      case 3:
        uint64_t v110 = 0x4379616C702ELL;
        goto LABEL_40;
      case 4:
        uint64_t v109 = 0x49706F74732ELL;
LABEL_38:
        uint64_t v108 = v109 & 0xFFFFFFFFFFFFLL | 0x696E000000000000;
        unsigned int v111 = 1952541044;
        goto LABEL_41;
      case 5:
        uint64_t v110 = 0x43706F74732ELL;
LABEL_40:
        uint64_t v108 = v110 & 0xFFFFFFFFFFFFLL | 0x6D6F000000000000;
        unsigned int v111 = 1952803952;
LABEL_41:
        unint64_t v107 = v111 | 0xEE00646500000000;
        break;
      case 6:
        unint64_t v107 = 0xE800000000000000;
        uint64_t v108 = 0x74756F656D69742ELL;
        break;
      default:
        break;
    }
    uint64_t v156 = (void *)sub_1008FA0F0(v108, v107, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100849E34(v101, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    _os_log_impl((void *)&_mh_execute_header, v102, v103, "Cannot playSound for %s. Invalid state %s!", (uint8_t *)v104, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v123(v100, v23);
    sub_100849E34(v101, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  }

  sub_10000584C();
  uint64_t v112 = v141;
  uint64_t v113 = v140;
  uint64_t v114 = v142;
  (*(void (**)(char *, void, uint64_t))(v141 + 104))(v140, enum case for DispatchQoS.QoSClass.default(_:), v142);
  uint64_t v115 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v113, v114);
  uint64_t v116 = swift_allocObject();
  uint64_t v117 = v143;
  *(void *)(v116 + 16) = v137;
  *(void *)(v116 + 24) = v117;
  uint64_t v161 = sub_10084A500;
  uint64_t v162 = v116;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v158 = 1107296256;
  uint64_t v159 = sub_1004B5480;
  uint64_t v160 = &unk_1015D7BA0;
  uint64_t v118 = _Block_copy(&aBlock);
  swift_retain();
  uint64_t v119 = v144;
  static DispatchQoS.unspecified.getter();
  uint64_t v156 = _swiftEmptyArrayStorage;
  sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v120 = v150;
  uint64_t v121 = v151;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v118);

  (*(void (**)(char *, uint64_t))(v147 + 8))(v120, v121);
  (*(void (**)(char *, uint64_t))(v145 + 8))(v119, v146);
  sub_100849E34(v127, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  return swift_release();
}

void sub_10083652C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), const char *a5)
{
  unint64_t v36 = a5;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v37 = a3 + 16;
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_100010324(v16, (uint64_t)qword_10170E3C8);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v17(v15, a1, v9);
  v17(v13, a2, v9);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = a4();
  int v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v35 = a1;
    uint64_t v22 = v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v34 = v23;
    *(_DWORD *)uint64_t v22 = 141558531;
    uint64_t v38 = 1752392040;
    v39[0] = v23;
    int v33 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v22 + 12) = 2081;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    os_log_t v32 = v18;
    uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v38 = sub_1008FA0F0(v24, v25, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v10 + 8);
    v26(v15, v9);
    *(_WORD *)(v22 + 22) = 2082;
    uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v38 = sub_1008FA0F0(v27, v28, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v26(v13, v9);
    uint64_t v18 = v32;
    _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v33, v36, (uint8_t *)v22, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v35;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v29 = *(void (**)(char *, uint64_t))(v10 + 8);
    v29(v15, v9);
    v29(v13, v9);
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v31 = (void *)Strong;
    sub_100829E80(a1, 0, 0);
  }
}

uint64_t sub_1008368F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v65 = a1;
  uint64_t v66 = a5;
  uint64_t v60 = a3;
  uint64_t v73 = type metadata accessor for UUID();
  uint64_t v71 = *(void *)(v73 - 8);
  uint64_t v72 = *(void *)(v71 + 64);
  __chkstk_darwin(v73);
  uint64_t v70 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v62 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v53 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000588C(&qword_10163C6C8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10000588C(&qword_10164EFF0);
  uint64_t v56 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000588C(&qword_10164EFF8);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v58 = v18;
  uint64_t v59 = v19;
  __chkstk_darwin(v18);
  os_log_type_t v52 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_10000588C(&qword_10164F000);
  uint64_t v63 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v54 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10000588C(&qword_10164F008);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v68 = v22;
  uint64_t v69 = v23;
  __chkstk_darwin(v22);
  uint64_t v74 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = Transaction.subscriptionCleaner.getter();
  uint64_t v57 = a2;
  unint64_t v25 = (void *)sub_1008293A4(a3, a4, a5);
  id v75 = *(id *)(a2 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue);
  id v26 = v75;
  id v76 = v25;
  uint64_t v27 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v28 = *(void *)(v27 - 8);
  char v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  uint64_t v51 = v28 + 56;
  v50(v15, 1, 1, v27);
  id v29 = v26;
  sub_10000588C(&qword_10164EF40);
  unint64_t v49 = sub_10000584C();
  sub_100062734(&qword_10164EF50, &qword_10164EF40);
  sub_10084B9A8((unint64_t *)&qword_10166C020, (void (*)(uint64_t))sub_10000584C);
  Publisher.receive<A>(on:options:)();
  sub_10001DAB4((uint64_t)v15, &qword_10163C6C8);

  swift_release();
  uint64_t v30 = v53;
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
  id v76 = v29;
  v50(v15, 1, 1, v27);
  sub_100062734(&qword_10164F010, &qword_10164EFF0);
  id v31 = v29;
  os_log_t v32 = v52;
  uint64_t v33 = v55;
  Publisher.timeout<A>(_:scheduler:options:customError:)();
  sub_10001DAB4((uint64_t)v15, &qword_10163C6C8);

  (*(void (**)(char *, uint64_t))(v62 + 8))(v30, v64);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v17, v33);
  sub_10000588C(&qword_10164EF48);
  sub_100062734(&qword_10164F018, &qword_10164EFF8);
  uint64_t v34 = v54;
  uint64_t v35 = v58;
  Publisher.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v32, v35);
  sub_10000588C(&qword_10164EF58);
  sub_100062734(&qword_10164F020, &qword_10164F000);
  sub_100062734(&qword_10164EF68, &qword_10164EF58);
  uint64_t v36 = v61;
  Publisher.catch<A>(_:)();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v34, v36);
  uint64_t v37 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v39 = v70;
  uint64_t v38 = v71;
  uint64_t v40 = v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v70, v60, v73);
  uint64_t v41 = v38;
  unint64_t v42 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  unint64_t v43 = (v72 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = v37;
  *(void *)(v45 + 24) = v65;
  (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v45 + v42, v39, v40);
  *(double *)(v45 + v43) = a6;
  *(void *)(v45 + v44) = v66;
  *(void *)(v45 + ((v44 + 15) & 0xFFFFFFFFFFFFFFF8)) = v67;
  sub_100062734(&qword_10164F028, &qword_10164F008);
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v46 = v68;
  uint64_t v47 = v74;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v47, v46);
  AnyCancellable.store(in:)();
  swift_unknownObjectRelease();
  return swift_release();
}

unint64_t sub_1008371EC(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  unint64_t v44 = a6;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v41 - v14;
  uint64_t v16 = sub_10000588C(&qword_10164EF48);
  __chkstk_darwin(v16);
  uint64_t v18 = (void *)((char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  unint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v20 = (void *)result;
    Transaction.capture()();
    sub_10001D074(a1, (uint64_t)v18, &qword_10164EF48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v43 = a5;
      unint64_t v21 = *v18;
      if (qword_101636CF8 != -1) {
        swift_once();
      }
      uint64_t v22 = type metadata accessor for Logger();
      sub_100010324(v22, (uint64_t)qword_10170E3C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v43, v9);
      sub_100847D28(v21);
      sub_100847D28(v21);
      uint64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = swift_slowAlloc();
        unint64_t v44 = swift_slowAlloc();
        unint64_t v46 = v44;
        *(_DWORD *)uint64_t v25 = 136315394;
        sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v45 = sub_1008FA0F0(v26, v27, (uint64_t *)&v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
        *(_WORD *)(v25 + 12) = 2080;
        uint64_t v45 = v21;
        sub_100847D28(v21);
        uint64_t v28 = String.init<A>(describing:)();
        uint64_t v45 = sub_1008FA0F0(v28, v29, (uint64_t *)&v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100847D38(v21);
        sub_100847D38(v21);
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Play sound oneShot failed for %s. Error %s", (uint8_t *)v25, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
        sub_100847D38(v21);
        sub_100847D38(v21);
      }

      sub_1008476D4();
      uint64_t v37 = swift_allocError();
      *uint64_t v38 = v21;
      uint64_t v39 = swift_allocError();
      *uint64_t v40 = v37;
      sub_100847D28(v21);
      sub_100829E80(v43, 0, v39);

      swift_errorRelease();
      return sub_100847D38(v21);
    }
    else
    {
      if (qword_101636CF8 != -1) {
        swift_once();
      }
      uint64_t v30 = type metadata accessor for Logger();
      sub_100010324(v30, (uint64_t)qword_10170E3C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v15, a5, v9);
      id v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        uint64_t v43 = a5;
        uint64_t v34 = (uint8_t *)v33;
        uint64_t v42 = swift_slowAlloc();
        unint64_t v46 = v42;
        *(_DWORD *)uint64_t v34 = 136315138;
        v41[1] = v34 + 4;
        sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v45 = sub_1008FA0F0(v35, v36, (uint64_t *)&v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Play sound oneShot started successfully for %s", v34, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        a5 = v43;
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      }

      sub_10082CE00(a5, v44, a2);
      return sub_10001DAB4((uint64_t)v18, &qword_10164EF48);
    }
  }
  return result;
}

uint64_t sub_100837864(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10000588C(&qword_10163CBC8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v9 + 16))(v8, a2);
  uint64_t v10 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  swift_beginAccess();
  sub_10015E340((uint64_t)v5, (uint64_t)v8);
  return swift_endAccess();
}

uint64_t sub_1008379E8(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  id v45 = a2;
  uint64_t v37 = a1;
  uint64_t v38 = a5;
  uint64_t v35 = a4;
  uint64_t v41 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v44 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v40 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v42 = *(void *)(v10 - 8);
  uint64_t v43 = v10;
  __chkstk_darwin(v10);
  unint64_t v36 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v34 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v34 - v16;
  uint64_t v39 = *(void *)&a2[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue];
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v18((char *)&v34 - v16, a3, v12);
  v18((char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v12);
  uint64_t v19 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v20 = (v19 + 24) & ~v19;
  unint64_t v21 = (v14 + 7 + v20) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = (v19 + v21 + 8) & ~v19;
  unint64_t v23 = (v14 + 7 + v22) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v45;
  uint64_t v25 = v24 + v20;
  uint64_t v26 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
  v26(v25, v17, v12);
  *(double *)(v24 + v21) = a6;
  v26(v24 + v22, v34, v12);
  uint64_t v27 = v37;
  *(void *)(v24 + v23) = v38;
  *(void *)(v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8)) = v27;
  aBlock[4] = sub_10084A95C;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015D7CE0;
  uint64_t v28 = _Block_copy(aBlock);
  id v29 = v45;
  swift_retain();
  uint64_t v30 = v36;
  static DispatchQoS.unspecified.getter();
  unint64_t v46 = _swiftEmptyArrayStorage;
  sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  os_log_type_t v32 = v40;
  uint64_t v31 = v41;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v31);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v43);
  return swift_release();
}

uint64_t sub_100837E3C(char *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v213 = a5;
  uint64_t v215 = a4;
  uint64_t v223 = a3;
  uint64_t v201 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v200 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  uint64_t v198 = &v170[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_10000588C(&qword_10163C6C8);
  __chkstk_darwin(v10 - 8);
  uint64_t v192 = &v170[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v195 = sub_10000588C(&qword_10164EFF0);
  uint64_t v193 = *(void *)(v195 - 8);
  __chkstk_darwin(v195);
  uint64_t v191 = &v170[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v197 = sub_10000588C(&qword_10164EFF8);
  uint64_t v196 = *(void *)(v197 - 8);
  __chkstk_darwin(v197);
  uint64_t v194 = &v170[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v203 = sub_10000588C(&qword_10164F000);
  uint64_t v202 = *(void *)(v203 - 8);
  __chkstk_darwin(v203);
  uint64_t v199 = &v170[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v205 = sub_10000588C(&qword_10164F008);
  uint64_t v204 = *(void *)(v205 - 8);
  __chkstk_darwin(v205);
  uint64_t v212 = &v170[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v207 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v178 = *(void *)(v207 - 8);
  __chkstk_darwin(v207);
  uint64_t v208 = &v170[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v177 = type metadata accessor for DispatchQoS();
  uint64_t v176 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  uint64_t v175 = &v170[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v180 = type metadata accessor for DispatchTime();
  uint64_t v184 = *(void *)(v180 - 8);
  uint64_t v18 = __chkstk_darwin(v180);
  uint64_t v174 = &v170[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  uint64_t v179 = &v170[-v20];
  uint64_t v183 = type metadata accessor for Date();
  uint64_t v182 = *(void *)(v183 - 8);
  __chkstk_darwin(v183);
  uint64_t v181 = &v170[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = sub_10000588C(&qword_10163CBC8);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v190 = &v170[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  uint64_t v209 = &v170[-v25];
  uint64_t v210 = (int *)type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  uint64_t v211 = *((void *)v210 - 1);
  uint64_t v26 = __chkstk_darwin(v210);
  uint64_t v186 = &v170[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v173 = &v170[-v29];
  __chkstk_darwin(v28);
  uint64_t v189 = &v170[-v30];
  uint64_t v31 = type metadata accessor for UUID();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v185 = &v170[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v217 = &v170[-v36];
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v214 = &v170[-v38];
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v41 = &v170[-v40];
  uint64_t v206 = v42;
  __chkstk_darwin(v39);
  uint64_t v44 = &v170[-v43];
  uint64_t v222 = a1;
  int v45 = sub_1008254E4(a2);
  LODWORD(v216) = v45;
  if (v45) {
    uint64_t v46 = 0x6575657551;
  }
  else {
    uint64_t v46 = 0;
  }
  if (v45) {
    unint64_t v47 = 0xE500000000000000;
  }
  else {
    unint64_t v47 = 0xE000000000000000;
  }
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v48 = type metadata accessor for Logger();
  uint64_t v49 = sub_100010324(v48, (uint64_t)qword_10170E3C8);
  char v50 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v32 + 16);
  v50(v44, a2, v31);
  uint64_t v219 = v50;
  uint64_t v220 = v32 + 16;
  v50(v41, (uint64_t)v223, v31);
  swift_bridgeObjectRetain();
  uint64_t v188 = v49;
  uint64_t v51 = Logger.logObject.getter();
  os_log_type_t v52 = static os_log_type_t.default.getter();
  int v53 = v52;
  BOOL v54 = os_log_type_enabled(v51, v52);
  uint64_t v221 = a2;
  uint64_t v218 = v32;
  if (v54)
  {
    uint64_t v55 = swift_slowAlloc();
    uint64_t v172 = (void *)swift_slowAlloc();
    id aBlock = v172;
    *(_DWORD *)uint64_t v55 = 136447235;
    int v171 = v53;
    swift_bridgeObjectRetain();
    uint64_t v224 = sub_1008FA0F0(v46, v47, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v55 + 12) = 2160;
    uint64_t v224 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v55 + 22) = 2081;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v224 = sub_1008FA0F0(v56, v57, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v58 = *(void (**)(unsigned char *, uint64_t))(v32 + 8);
    v58(v44, v31);
    *(_WORD *)(v55 + 32) = 2048;
    uint64_t v224 = *(void *)&a6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v55 + 42) = 2082;
    uint64_t v59 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v224 = sub_1008FA0F0(v59, v60, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v61 = v31;
    v58(v41, v31);
    _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v171, "%{public}s playSoundSingle for %{private,mask.hash}s with timeout %f. CommandId %{public}s", (uint8_t *)v55, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v58 = *(void (**)(unsigned char *, uint64_t))(v32 + 8);
    v58(v44, v31);
    uint64_t v61 = v31;
    v58(v41, v31);
  }

  uint64_t v62 = v223;
  uint64_t v63 = v210;
  uint64_t v64 = (uint64_t)v209;
  if ((v216 & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v65 = &v222[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_coordinators];
  swift_beginAccess();
  uint64_t v66 = *(void *)v65;
  if (!*(void *)(*(void *)v65 + 16))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v211 + 56))(v64, 1, 1, v63);
LABEL_19:
    sub_10001DAB4(v64, &qword_10163CBC8);
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  unint64_t v67 = sub_1007240CC(v221);
  uint64_t v68 = v211;
  if (v69)
  {
    sub_10084B940(*(void *)(v66 + 56) + *(void *)(v211 + 72) * v67, v64, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    uint64_t v70 = 0;
  }
  else
  {
    uint64_t v70 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v68 + 56))(v64, v70, 1, v63);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v68 + 48))(v64, 1, v63) == 1) {
    goto LABEL_19;
  }
  uint64_t v122 = v189;
  sub_100849DCC(v64, (uint64_t)v189, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  if (!v122[v63[6]])
  {
    uint64_t v136 = v181;
    static Date.trustedNow.getter((uint64_t)v181);
    Date.timeIntervalSince(_:)();
    unint64_t v138 = v137;
    (*(void (**)(unsigned char *, uint64_t))(v182 + 8))(v136, v183);
    if (a6 * 0.5 >= *(double *)&v138)
    {
      uint64_t v140 = v173;
      sub_10084B940((uint64_t)v122, (uint64_t)v173, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      uint64_t v141 = Logger.logObject.getter();
      os_log_type_t v142 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v141, v142))
      {
        uint64_t v143 = (uint64_t)v140;
        uint64_t v144 = swift_slowAlloc();
        id aBlock = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v144 = 136446466;
        uint64_t v145 = Date.localISO8601.getter();
        uint64_t v225 = (void *)sub_1008FA0F0(v145, v146, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100849E34(v143, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
        *(_WORD *)(v144 + 12) = 2050;
        uint64_t v225 = v138;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v141, v142, "Last retry %{public}s.\nTime since: %{public}f. Defer retry", (uint8_t *)v144, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100849E34((uint64_t)v140, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      }

      uint64_t v147 = v222;
      uint64_t v213 = *(void *)&v222[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue];
      uint64_t v148 = v174;
      static DispatchTime.now()();
      + infix(_:_:)();
      uint64_t v149 = *(void (**)(unsigned char *, uint64_t))(v184 + 8);
      v184 += 8;
      uint64_t v216 = v149;
      v149(v148, v180);
      uint64_t v150 = v214;
      uint64_t v151 = v61;
      uint64_t v152 = v219;
      v219(v214, (uint64_t)v62, v61);
      uint64_t v153 = v217;
      v152(v217, v221, v61);
      uint64_t v154 = v218;
      uint64_t v155 = *(unsigned __int8 *)(v218 + 80);
      uint64_t v156 = (v155 + 24) & ~v155;
      unint64_t v157 = (unint64_t)&v206[v155 + v156] & ~v155;
      uint64_t v158 = v147;
      unint64_t v159 = (unint64_t)&v206[v157 + 7] & 0xFFFFFFFFFFFFFFF8;
      uint64_t v160 = swift_allocObject();
      *(void *)(v160 + 16) = v158;
      uint64_t v161 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v154 + 32);
      v161(v160 + v156, v150, v151);
      v161(v160 + v157, v153, v151);
      *(void *)(v160 + v159) = v215;
      *(double *)(v160 + ((v159 + 15) & 0xFFFFFFFFFFFFFFF8)) = a6;
      uint64_t v230 = sub_10084AE98;
      uint64_t v231 = v160;
      id aBlock = _NSConcreteStackBlock;
      uint64_t v227 = 1107296256;
      uint64_t v228 = sub_1004B5480;
      uint64_t v229 = &unk_1015D7DA8;
      uint64_t v162 = _Block_copy(&aBlock);
      id v163 = v158;
      uint64_t v164 = v175;
      static DispatchQoS.unspecified.getter();
      uint64_t v225 = _swiftEmptyArrayStorage;
      sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000588C((uint64_t *)&unk_10163F350);
      sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
      uint64_t v165 = v208;
      unint64_t v166 = v207;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v167 = v179;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v162);
      (*(void (**)(unsigned char *, unint64_t))(v178 + 8))(v165, v166);
      (*(void (**)(unsigned char *, uint64_t))(v176 + 8))(v164, v177);
      v216(v167, v180);
      sub_100849E34((uint64_t)v189, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      return swift_release();
    }
    sub_100849E34((uint64_t)v122, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
LABEL_20:
    uint64_t v71 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v72 = (uint64_t)v214;
    uint64_t v73 = v61;
    uint64_t v74 = (void (*)(unsigned char *, void *, uint64_t))v219;
    v219(v214, v221, v61);
    id v75 = v217;
    v74(v217, v62, v61);
    uint64_t v188 = *(unsigned __int8 *)(v218 + 80);
    uint64_t v76 = v218;
    uint64_t v77 = (v188 + 16) & ~v188;
    uint64_t v209 = (unsigned char *)(v188 | 7);
    unint64_t v78 = (unint64_t)&v206[v188 + v77] & ~v188;
    uint64_t v189 = v206 + 7;
    uint64_t v79 = v63;
    unint64_t v80 = (unint64_t)&v206[v78 + 7] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v81 = swift_allocObject();
    uint64_t v82 = v81 + v77;
    uint64_t v83 = *(char **)(v76 + 32);
    uint64_t v218 = v76 + 32;
    uint64_t v206 = v83;
    ((void (*)(uint64_t, uint64_t, uint64_t))v83)(v82, v72, v73);
    ((void (*)(unint64_t, unsigned char *, uint64_t))v83)(v81 + v78, v75, v73);
    *(void *)(v81 + v80) = v71;
    uint64_t v230 = sub_10084A4BC;
    uint64_t v231 = v81;
    id aBlock = _NSConcreteStackBlock;
    uint64_t v227 = 1107296256;
    uint64_t v228 = sub_1004B5480;
    uint64_t v229 = &unk_1015D7D30;
    _Block_copy(&aBlock);
    uint64_t v225 = _swiftEmptyArrayStorage;
    sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    swift_retain();
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    type metadata accessor for DispatchWorkItem();
    swift_allocObject();
    uint64_t v84 = DispatchWorkItem.init(flags:block:)();
    swift_release();
    swift_release();
    uint64_t v85 = v221;
    uint64_t v187 = v73;
    uint64_t v86 = (void (*)(unsigned char *, void *, uint64_t))v219;
    v219((unsigned char *)v72, v221, v73);
    uint64_t v87 = (uint64_t)v190;
    uint64_t v88 = (uint64_t)v223;
    v86(v190, v223, v73);
    v86((unsigned char *)(v87 + v79[5]), (void *)v85, v73);
    uint64_t v89 = v87 + v79[8];
    uint64_t v208 = (unsigned char *)v84;
    swift_retain();
    static Date.trustedNow.getter(v89);
    *(unsigned char *)(v87 + v79[6]) = 0;
    *(void *)(v87 + v79[7]) = v84;
    *(void *)(v87 + v79[9]) = 0;
    *(unsigned char *)(v87 + v79[10]) = 0;
    (*(void (**)(uint64_t, void, uint64_t, int *))(v211 + 56))(v87, 0, 1, v79);
    uint64_t v90 = v222;
    swift_beginAccess();
    sub_10015E340(v87, v72);
    swift_endAccess();
    uint64_t v211 = Transaction.subscriptionCleaner.getter();
    uint64_t v91 = (void *)sub_1008293A4(v85, v88, v215);
    uint64_t v92 = *(void **)&v90[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue];
    uint64_t v225 = v92;
    id aBlock = v91;
    uint64_t v93 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v94 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56);
    uint64_t v95 = (uint64_t)v192;
    v94(v192, 1, 1, v93);
    uint64_t v210 = v92;
    sub_10000588C(&qword_10164EF40);
    unint64_t v207 = sub_10000584C();
    sub_100062734(&qword_10164EF50, &qword_10164EF40);
    sub_10084B9A8((unint64_t *)&qword_10166C020, (void (*)(uint64_t))sub_10000584C);
    uint64_t v96 = v191;
    Publisher.receive<A>(on:options:)();
    sub_10001DAB4(v95, &qword_10163C6C8);

    swift_release();
    uint64_t v97 = v198;
    static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
    uint64_t v98 = v210;
    id aBlock = v210;
    v94((unsigned char *)v95, 1, 1, v93);
    sub_100062734(&qword_10164F010, &qword_10164EFF0);
    uint64_t v99 = v98;
    uint64_t v100 = v194;
    uint64_t v101 = v195;
    Publisher.timeout<A>(_:scheduler:options:customError:)();
    sub_10001DAB4(v95, &qword_10163C6C8);

    (*(void (**)(unsigned char *, uint64_t))(v200 + 8))(v97, v201);
    (*(void (**)(unsigned char *, uint64_t))(v193 + 8))(v96, v101);
    sub_10000588C(&qword_10164EF48);
    sub_100062734(&qword_10164F018, &qword_10164EFF8);
    uint64_t v102 = v199;
    uint64_t v103 = v197;
    Publisher.map<A>(_:)();
    (*(void (**)(unsigned char *, uint64_t))(v196 + 8))(v100, v103);
    sub_10000588C(&qword_10164EF58);
    sub_100062734(&qword_10164F020, &qword_10164F000);
    sub_100062734(&qword_10164EF68, &qword_10164EF58);
    uint64_t v104 = v203;
    Publisher.catch<A>(_:)();
    (*(void (**)(unsigned char *, uint64_t))(v202 + 8))(v102, v104);
    uint64_t v105 = swift_allocObject();
    swift_unknownObjectWeakInit();
    unint64_t v106 = v214;
    uint64_t v107 = v187;
    uint64_t v108 = (void (*)(unsigned char *, void *, uint64_t))v219;
    v219(v214, v221, v187);
    v108(v217, v223, v107);
    uint64_t v109 = v188;
    uint64_t v110 = (v109 + 32) & ~v109;
    unint64_t v111 = (unint64_t)&v189[v110] & 0xFFFFFFFFFFFFFFF8;
    unint64_t v112 = (v111 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v113 = (v109 + v112 + 9) & ~v109;
    unint64_t v114 = (unint64_t)&v189[v113] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v115 = swift_allocObject();
    uint64_t v116 = v213;
    *(void *)(v115 + 16) = v105;
    *(void *)(v115 + 24) = v116;
    uint64_t v117 = (void (*)(uint64_t, unsigned char *, uint64_t))v206;
    ((void (*)(uint64_t, unsigned char *, uint64_t))v206)(v115 + v110, v106, v107);
    *(double *)(v115 + v111) = a6;
    unint64_t v118 = v115 + v112;
    *(void *)unint64_t v118 = v215;
    *(unsigned char *)(v118 + 8) = v216 & 1;
    v117(v115 + v113, v217, v107);
    *(void *)(v115 + v114) = v211;
    sub_100062734(&qword_10164F028, &qword_10164F008);
    swift_retain();
    swift_unknownObjectRetain();
    uint64_t v119 = v205;
    uint64_t v120 = v212;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v204 + 8))(v120, v119);
    AnyCancellable.store(in:)();
    swift_release();
    swift_unknownObjectRelease();
    return swift_release();
  }
  uint64_t v123 = v58;
  uint64_t v124 = v185;
  uint64_t v125 = v61;
  v219(v185, v221, v61);
  uint64_t v126 = v186;
  sub_10084B940((uint64_t)v122, (uint64_t)v186, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  uint64_t v127 = v122;
  uint64_t v128 = Logger.logObject.getter();
  os_log_type_t v129 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v128, v129))
  {
    uint64_t v130 = swift_slowAlloc();
    uint64_t v223 = (void *)swift_slowAlloc();
    id aBlock = v223;
    *(_DWORD *)uint64_t v130 = 136315394;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v131 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v225 = (void *)sub_1008FA0F0(v131, v132, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v123(v124, v125);
    *(_WORD *)(v130 + 12) = 2080;
    unint64_t v133 = 0xEB00000000646575;
    uint64_t v134 = 0x65755179616C702ELL;
    switch(v126[v63[6]])
    {
      case 1:
        uint64_t v135 = 0x4979616C702ELL;
        goto LABEL_36;
      case 2:
        unint64_t v133 = 0xEC000000676E696ELL;
        uint64_t v134 = 0x6E755279616C702ELL;
        break;
      case 3:
        uint64_t v168 = 0x4379616C702ELL;
        goto LABEL_38;
      case 4:
        uint64_t v135 = 0x49706F74732ELL;
LABEL_36:
        uint64_t v134 = v135 & 0xFFFFFFFFFFFFLL | 0x696E000000000000;
        unsigned int v169 = 1952541044;
        goto LABEL_39;
      case 5:
        uint64_t v168 = 0x43706F74732ELL;
LABEL_38:
        uint64_t v134 = v168 & 0xFFFFFFFFFFFFLL | 0x6D6F000000000000;
        unsigned int v169 = 1952803952;
LABEL_39:
        unint64_t v133 = v169 | 0xEE00646500000000;
        break;
      case 6:
        unint64_t v133 = 0xE800000000000000;
        uint64_t v134 = 0x74756F656D69742ELL;
        break;
      default:
        break;
    }
    uint64_t v225 = (void *)sub_1008FA0F0(v134, v133, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100849E34((uint64_t)v126, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    _os_log_impl((void *)&_mh_execute_header, v128, v129, "Cannot queue play sound for %s. Invalid state %s!", (uint8_t *)v130, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v139 = v189;
  }
  else
  {

    sub_100849E34((uint64_t)v126, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    v123(v124, v125);
    uint64_t v139 = v127;
  }
  return sub_100849E34((uint64_t)v139, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
}

uint64_t sub_100839CDC()
{
  return static Transaction.named<A>(_:with:)();
}

void sub_100839D84(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, int a7, uint64_t a8)
{
  unint64_t v60 = (char *)a8;
  LODWORD(v63) = a7;
  unint64_t v62 = a6;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v64 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)v55 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v55 - v18;
  uint64_t v20 = sub_10000588C(&qword_10164EF48);
  __chkstk_darwin(v20);
  uint64_t v22 = (void *)((char *)v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v24 = (void *)Strong;
    Transaction.capture()();
    sub_10001D074(a1, (uint64_t)v22, &qword_10164EF48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unint64_t v25 = *v22;
      uint64_t v26 = v64;
      if (qword_101636CF8 != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      sub_100010324(v27, (uint64_t)qword_10170E3C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v14, a5, v11);
      sub_100847D28(v25);
      sub_100847D28(v25);
      uint64_t v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        uint64_t v61 = a5;
        uint64_t v59 = (void *)v31;
        uint64_t v66 = v31;
        *(_DWORD *)uint64_t v30 = 136315394;
        sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v65 = sub_1008FA0F0(v32, v33, &v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v11);
        *(_WORD *)(v30 + 12) = 2080;
        uint64_t v65 = v25;
        sub_100847D28(v25);
        uint64_t v34 = String.init<A>(describing:)();
        uint64_t v65 = sub_1008FA0F0(v34, v35, &v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100847D38(v25);
        sub_100847D38(v25);
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "Play sound single failed for %s. Error %s", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        a5 = v61;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v11);
        sub_100847D38(v25);
        sub_100847D38(v25);
      }

      if (v63)
      {
        sub_10083A604((uint64_t)v60, a5, v62, a2);
        sub_100847D38(v25);
      }
      else
      {
        sub_1008476D4();
        uint64_t v53 = swift_allocError();
        *BOOL v54 = v25;
        sub_100847D28(v25);
        sub_100829E80(a5, 0, v53);
        sub_100847D38(v25);

        swift_errorRelease();
      }
    }
    else
    {
      unint64_t v60 = v17;
      uint64_t v61 = a5;
      uint64_t v36 = v64;
      if (qword_101636CF8 != -1) {
        swift_once();
      }
      uint64_t v37 = type metadata accessor for Logger();
      uint64_t v38 = sub_100010324(v37, (uint64_t)qword_10170E3C8);
      unint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
      v57(v19, v61, v11);
      uint64_t v58 = v38;
      uint64_t v39 = Logger.logObject.getter();
      os_log_type_t v40 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = swift_slowAlloc();
        uint64_t v59 = v24;
        uint64_t v42 = (uint8_t *)v41;
        uint64_t v56 = swift_slowAlloc();
        uint64_t v66 = v56;
        *(_DWORD *)uint64_t v42 = 136315138;
        v55[1] = v42 + 4;
        sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v65 = sub_1008FA0F0(v43, v44, &v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        int v45 = *(void (**)(char *, uint64_t))(v36 + 8);
        v45(v19, v11);
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "Play sound single started successfully for %s", v42, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v24 = v59;
        swift_slowDealloc();
      }
      else
      {
        int v45 = *(void (**)(char *, uint64_t))(v36 + 8);
        v45(v19, v11);
      }

      uint64_t v46 = v61;
      sub_10082CE00(v61, v62, a2);
      uint64_t v47 = (uint64_t)v60;
      if (v63)
      {
        v57(v60, v46, v11);
        uint64_t v48 = Logger.logObject.getter();
        os_log_type_t v49 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v48, v49))
        {
          char v50 = (uint8_t *)swift_slowAlloc();
          uint64_t v66 = swift_slowAlloc();
          uint64_t v59 = v24;
          *(_DWORD *)char v50 = 136315138;
          uint64_t v63 = v50 + 4;
          sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v65 = sub_1008FA0F0(v51, v52, &v66);
          uint64_t v24 = v59;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v45((char *)v47, v11);
          _os_log_impl((void *)&_mh_execute_header, v48, v49, "Posting success alert for %s", v50, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          v45((char *)v47, v11);
        }

        sub_10082E7E0(v61, 1);
      }

      sub_10001DAB4((uint64_t)v22, &qword_10164EF48);
    }
  }
}

void sub_10083A604(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  size_t v5 = v4;
  uint64_t v76 = a1;
  uint64_t v77 = a3;
  uint64_t v88 = a2;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v82 = *(void *)(v7 - 8);
  uint64_t v83 = v7;
  __chkstk_darwin(v7);
  uint64_t v81 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v79 = *(void *)(v9 - 8);
  uint64_t v80 = v9;
  __chkstk_darwin(v9);
  uint64_t v78 = (uint64_t)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C((uint64_t *)&unk_101655530);
  __chkstk_darwin(v11 - 8);
  uint64_t v86 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for BeaconObservation();
  uint64_t v13 = *(void *)(v89 - 8);
  uint64_t v14 = __chkstk_darwin(v89);
  uint64_t v85 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v90 = (uint64_t)&v73 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v73 - v19;
  __chkstk_darwin(v18);
  uint64_t v87 = (char *)&v73 - v21;
  uint64_t v22 = type metadata accessor for DispatchPredicate();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  unint64_t v25 = (uint64_t *)((char *)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = *(void **)(v5 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue);
  *unint64_t v25 = v26;
  (*(void (**)(void *, void, uint64_t))(v23 + 104))(v25, enum case for DispatchPredicate.onQueue(_:), v22);
  id v27 = v26;
  char v28 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v23 + 8))(v25, v22);
  if ((v28 & 1) == 0) {
    goto LABEL_39;
  }
  if (qword_101636CB8 != -1) {
    goto LABEL_40;
  }
  while (1)
  {
    sub_10000588C(&qword_101655540);
    uint64_t v29 = 0;
    OS_dispatch_queue.sync<A>(execute:)();
    uint64_t v30 = v92[0];
    uint64_t v31 = v89;
    uint64_t v32 = (uint64_t)v86;
    if (!*(void *)(v92[0] + 16) || (unint64_t v33 = sub_1007240CC(v88), (v34 & 1) == 0))
    {
      uint64_t v44 = v13;
      swift_bridgeObjectRelease();
      uint64_t v37 = _swiftEmptyArrayStorage;
      uint64_t v45 = (uint64_t)v87;
      uint64_t v46 = (uint64_t)v85;
      goto LABEL_20;
    }
    uint64_t v75 = 0;
    size_t v74 = v5;
    uint64_t v35 = *(void *)(*(void *)(v30 + 56) + 8 * v33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_1007100C0(v35);
    swift_bridgeObjectRelease();
    size_t v5 = sub_100B752E8((uint64_t)v36);
    swift_release();
    uint64_t v37 = _swiftEmptyArrayStorage;
    v92[0] = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v38 = *(void *)(v5 + 16);
    if (!v38) {
      break;
    }
    unint64_t v39 = 0;
    while (v39 < *(void *)(v5 + 16))
    {
      unint64_t v40 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v41 = *(void *)(v13 + 72);
      sub_10084B940(v5 + v40 + v41 * v39, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      if (v20[*(int *)(v31 + 24)] == 23)
      {
        sub_100849DCC((uint64_t)v20, v90, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000B77F0(0, v37[2] + 1, 1);
        }
        uint64_t v37 = (void *)v92[0];
        unint64_t v43 = *(void *)(v92[0] + 16);
        unint64_t v42 = *(void *)(v92[0] + 24);
        if (v43 >= v42 >> 1)
        {
          sub_1000B77F0(v42 > 1, v43 + 1, 1);
          uint64_t v37 = (void *)v92[0];
        }
        v37[2] = v43 + 1;
        sub_100849DCC(v90, (uint64_t)v37 + v40 + v43 * v41, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        uint64_t v31 = v89;
      }
      else
      {
        sub_100849E34((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      }
      if (v38 == ++v39)
      {
        uint64_t v44 = v13;
        uint64_t v37 = (void *)v92[0];
        uint64_t v32 = (uint64_t)v86;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    swift_once();
  }
  uint64_t v44 = v13;
LABEL_19:
  swift_release();
  size_t v5 = v74;
  uint64_t v45 = (uint64_t)v87;
  uint64_t v46 = (uint64_t)v85;
  uint64_t v29 = v75;
LABEL_20:
  sub_100E4D5E0((uint64_t)v37, v32);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v32, 1, v31) == 1)
  {
    sub_10001DAB4(v32, (uint64_t *)&unk_101655530);
    if (qword_101636CF8 != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    sub_100010324(v47, (uint64_t)qword_10170E3C8);
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      char v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "No playback observation found. Cannot retry", v50, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_100849DCC(v32, v45, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    uint64_t v51 = v78;
    static Date.trustedNow.getter(v78);
    Date.timeIntervalSince(_:)();
    double v53 = v52;
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v51, v80);
    if (qword_101636CF8 != -1) {
      swift_once();
    }
    uint64_t v54 = type metadata accessor for Logger();
    sub_100010324(v54, (uint64_t)qword_10170E3C8);
    sub_10084B940(v45, v46, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    uint64_t v55 = Logger.logObject.getter();
    os_log_type_t v56 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = swift_slowAlloc();
      uint64_t v75 = v29;
      uint64_t v58 = v57;
      v92[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v58 = 136446466;
      uint64_t v59 = Date.localISO8601.getter();
      uint64_t v91 = sub_1008FA0F0(v59, v60, v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100849E34(v46, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      *(_WORD *)(v58 + 12) = 2050;
      uint64_t v91 = *(void *)&v53;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "Queued at %{public}s. Time since: %{public}f", (uint8_t *)v58, 0x16u);
      swift_arrayDestroy();
      uint64_t v45 = (uint64_t)v87;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100849E34(v46, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    }

    uint64_t v62 = v82;
    uint64_t v61 = v83;
    uint64_t v63 = v81;
    if (v53 >= 180.0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v81, v88, v83);
      unint64_t v67 = Logger.logObject.getter();
      os_log_type_t v68 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v67, v68))
      {
        uint64_t v69 = swift_slowAlloc();
        uint64_t v90 = swift_slowAlloc();
        v92[0] = v90;
        *(_DWORD *)uint64_t v69 = 134218242;
        uint64_t v91 = 0x4066800000000000;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v69 + 12) = 2080;
        sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v91 = sub_1008FA0F0(v70, v71, v92);
        uint64_t v45 = (uint64_t)v87;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v61);
        _os_log_impl((void *)&_mh_execute_header, v67, v68, "%f elapsed. Posting error alert for %s", (uint8_t *)v69, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v61);
      }

      uint64_t v72 = v88;
      sub_10082E7E0(v88, 0);
      sub_100829E80(v72, 0, 0);
    }
    else
    {
      uint64_t v64 = type metadata accessor for Transaction();
      __chkstk_darwin(v64);
      uint64_t v65 = v88;
      *(&v73 - 6) = v5;
      *(&v73 - 5) = v65;
      *((double *)&v73 - 4) = a4;
      uint64_t v66 = v77;
      *(&v73 - 3) = v76;
      *(&v73 - 2) = v66;
      static Transaction.named<A>(_:with:)();
    }
    sub_100849E34(v45, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  }
}

uint64_t sub_10083B1A8(void (*a1)(uint64_t, void, uint64_t, int *), char *a2, uint64_t a3, uint64_t a4, char *a5, double a6)
{
  uint64_t v234 = a4;
  uint64_t v233 = a3;
  unint64_t v248 = a2;
  uint64_t v224 = type metadata accessor for BeaconObservation();
  uint64_t v225 = *(void *)(v224 - 8);
  __chkstk_darwin(v224);
  uint64_t v227 = (char *)&v207 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v238 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v207 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v237 = type metadata accessor for DispatchQoS();
  uint64_t v236 = *(void *)(v237 - 8);
  __chkstk_darwin(v237);
  unint64_t v235 = (char *)&v207 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v232 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v231 = *(void *)(v232 - 8);
  __chkstk_darwin(v232);
  uint64_t v230 = (char *)&v207 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000588C(&qword_10163CBC8);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v223 = (char *)&v207 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v229 = (uint64_t)&v207 - v18;
  uint64_t v246 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  uint64_t v247 = *(void *)(v246 - 8);
  uint64_t v19 = __chkstk_darwin(v246);
  uint64_t v219 = (uint64_t)&v207 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v215 = (uint64_t)&v207 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v226 = (uint64_t)&v207 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v209 = (uint64_t)&v207 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v210 = (uint64_t)&v207 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v211 = (uint64_t)&v207 - v30;
  __chkstk_darwin(v29);
  uint64_t v212 = (uint64_t)&v207 - v31;
  uint64_t v32 = sub_10000588C(&qword_101638CF0);
  uint64_t v33 = __chkstk_darwin(v32 - 8);
  uint64_t v214 = (uint64_t)&v207 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v218 = ((char *)&v207 - v35);
  uint64_t v36 = type metadata accessor for UUID();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v243 = (char *)&v207 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v222 = (char *)&v207 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v244 = (uint64_t)&v207 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v46 = (char *)&v207 - v45;
  uint64_t v47 = __chkstk_darwin(v44);
  uint64_t v228 = (char *)&v207 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v208 = (char *)&v207 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  unint64_t v207 = (char *)&v207 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v213 = (char *)&v207 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v217 = (char *)&v207 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v249 = (char *)&v207 - v58;
  __chkstk_darwin(v57);
  unint64_t v60 = (char *)&v207 - v59;
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v242 = v12;
  uint64_t v61 = type metadata accessor for Logger();
  uint64_t v62 = sub_100010324(v61, (uint64_t)qword_10170E3C8);
  uint64_t v63 = *(void (**)(void, void, void))(v37 + 16);
  id v254 = a1;
  uint64_t v252 = v37 + 16;
  v63(v60, a1, v36);
  uint64_t v241 = v62;
  uint64_t v64 = Logger.logObject.getter();
  os_log_type_t v65 = static os_log_type_t.default.getter();
  BOOL v66 = os_log_type_enabled(v64, v65);
  unint64_t v250 = v63;
  uint64_t v240 = v10;
  uint64_t v245 = a5;
  uint64_t v216 = v46;
  if (v66)
  {
    uint64_t v67 = swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v67 = 141558531;
    *(void *)&long long v264 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v67 + 12) = 2081;
    uint64_t v68 = v37;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v69 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&long long v264 = sub_1008FA0F0(v69, v70, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    unint64_t v71 = v60;
    uint64_t v72 = v36;
    v251 = *(void (**)(char *, uint64_t))(v37 + 8);
    v251(v71, v36);
    *(_WORD *)(v67 + 22) = 2048;
    *(double *)&long long v264 = a6;
    uint64_t v63 = v250;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v64, v65, "stopSoundSingle %{private,mask.hash}s timeout %f", (uint8_t *)v67, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v73 = v60;
    uint64_t v72 = v36;
    v251 = *(void (**)(char *, uint64_t))(v37 + 8);
    v251(v73, v36);

    uint64_t v68 = v37;
  }
  size_t v74 = v248;
  uint64_t v75 = &v248[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_coordinators];
  swift_beginAccess();
  uint64_t v220 = v75;
  uint64_t v76 = *(void *)&v74[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_beaconStore];
  uint64_t v239 = *(void *)v75;
  swift_bridgeObjectRetain();
  sub_100ACCD98((uint64_t)v254, (uint64_t)&v264);
  uint64_t v221 = v76;
  uint64_t v253 = v68;
  if (!v265)
  {
    sub_10001DAB4((uint64_t)&v264, (uint64_t *)&unk_10163BBE0);
LABEL_12:
    uint64_t v85 = v72;
    goto LABEL_13;
  }
  sub_10001CEB0(&v264, (uint64_t)&aBlock);
  uint64_t v77 = v261;
  uint64_t v78 = v262;
  sub_10001CD44(&aBlock, (uint64_t)v261);
  if (((*((uint64_t (**)(void *, uint64_t (*)(void)))v78 + 15))(v77, v78) & 1) == 0)
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&aBlock);
    goto LABEL_12;
  }
  uint64_t v79 = v261;
  uint64_t v80 = v262;
  sub_10001CD44(&aBlock, (uint64_t)v261);
  os_log_t v81 = v218;
  (*((void (**)(void *, uint64_t (*)(void)))v80 + 24))(v79, v80);
  uint64_t v82 = v68;
  uint64_t v83 = *(unsigned int (**)(os_log_t, uint64_t, uint64_t))(v68 + 48);
  uint64_t v84 = (void (*)(uint64_t, void, uint64_t, int *))v72;
  if (v83(v81, 1, v72) == 1)
  {
    sub_10001DAB4((uint64_t)v81, &qword_101638CF0);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&aBlock);
    uint64_t v85 = v72;
    uint64_t v63 = v250;
    goto LABEL_13;
  }
  uint64_t v106 = (uint64_t)v217;
  uint64_t v218 = *(NSObject **)(v82 + 32);
  ((void (*)(char *, os_log_t, uint64_t))v218)(v217, v81, v72);
  sub_100AF03FC(v106, (uint64_t)&v256);
  if (!v257)
  {
    v251((char *)v106, v72);
    sub_10001DAB4((uint64_t)&v256, (uint64_t *)&unk_10164E7C0);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&aBlock);
    goto LABEL_23;
  }
  sub_10001CEB0(&v256, (uint64_t)&v264);
  uint64_t v107 = v265;
  uint64_t v108 = v266;
  sub_10001CD44(&v264, v265);
  uint64_t v109 = (*(uint64_t (**)(uint64_t, uint64_t))(v108 + 16))(v107, v108);
  sub_10000588C(&qword_10163BC50);
  uint64_t v110 = swift_allocObject();
  *(_OWORD *)(v110 + 16) = xmmword_101342130;
  unint64_t v112 = v261;
  unint64_t v111 = v262;
  sub_10001CD44(&aBlock, (uint64_t)v261);
  (*(void (**)(void *))(*(void *)(*((void *)v111 + 1) + 8) + 32))(v112);
  uint64_t v113 = sub_1008A48BC(v110, v109);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v114 = v214;
  sub_10115B15C((uint64_t)v113, v214);
  swift_release();
  if (v83((os_log_t)v114, 1, v72) == 1)
  {
    v251(v217, v72);
    sub_10001DAB4(v114, &qword_101638CF0);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v264);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&aBlock);
LABEL_23:
    uint64_t v63 = v250;
    uint64_t v85 = v72;
    goto LABEL_13;
  }
  uint64_t v115 = (uint64_t)v213;
  ((void (*)(char *, uint64_t, uint64_t))v218)(v213, v114, v72);
  uint64_t v63 = v250;
  if (!*(void *)(v239 + 16) || (unint64_t v116 = sub_1007240CC(v115), v117 = v239, (v118 & 1) == 0))
  {
    uint64_t v141 = v251;
    v251((char *)v115, v72);
    os_log_type_t v142 = v217;
    uint64_t v143 = v72;
    v251 = v141;
LABEL_36:
    v141(v142, v143);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v264);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&aBlock);
    uint64_t v85 = v72;
LABEL_13:
    uint64_t v86 = v228;
    v63(v228, v254, v85);
    uint64_t v87 = Logger.logObject.getter();
    os_log_type_t v88 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v87, v88))
    {
      uint64_t v89 = swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v89 = 141558275;
      *(void *)&long long v264 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v89 + 12) = 2081;
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v90 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&long long v264 = sub_1008FA0F0(v90, v91, &aBlock);
      uint64_t v92 = v251;
      uint64_t v63 = v250;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v251 = v92;
      v92(v86, v85);
      _os_log_impl((void *)&_mh_execute_header, v87, v88, "stopSoundSingle for %{private,mask.hash}s directly.", (uint8_t *)v89, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v251(v86, v85);
    }

    uint64_t v93 = v240;
    uint64_t v94 = (int *)v246;
    uint64_t v95 = v247;
    uint64_t v96 = v239;
    uint64_t v84 = (void (*)(uint64_t, void, uint64_t, int *))v85;
    uint64_t v97 = (uint64_t)v249;
    v63(v249, v254, v85);
    uint64_t v98 = v242;
    if (*(void *)(v96 + 16)) {
      goto LABEL_17;
    }
LABEL_39:
    uint64_t v99 = v84;
    goto LABEL_40;
  }
  uint64_t v119 = *(void *)(v247 + 72);
  uint64_t v120 = v211;
  sub_10084B940(*(void *)(v239 + 56) + v119 * v116, v211, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  uint64_t v121 = v120;
  uint64_t v122 = v212;
  sub_100849DCC(v121, v212, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  if (!*(void *)(v117 + 16) || (unint64_t v123 = sub_1007240CC((uint64_t)v254), (v124 & 1) == 0))
  {
    uint64_t v144 = v122;
LABEL_35:
    sub_100849E34(v144, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    uint64_t v141 = v251;
    v251((char *)v115, v72);
    os_log_type_t v142 = v217;
    uint64_t v143 = v72;
    goto LABEL_36;
  }
  uint64_t v125 = *(void *)(v239 + 56) + v123 * v119;
  uint64_t v126 = v209;
  sub_10084B940(v125, v209, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  uint64_t v127 = v210;
  sub_100849DCC(v126, v210, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  if ((static UUID.== infix(_:_:)() & 1) == 0 || *(unsigned char *)(v122 + *(int *)(v246 + 40)) != 1)
  {
    sub_100849E34(v127, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    uint64_t v144 = v122;
    goto LABEL_35;
  }
  uint64_t v97 = (uint64_t)v249;
  v63(v249, v115, v72);
  uint64_t v128 = v207;
  v63(v207, v254, v72);
  os_log_type_t v129 = v208;
  v63(v208, v115, v72);
  uint64_t v130 = Logger.logObject.getter();
  os_log_type_t v131 = static os_log_type_t.default.getter();
  int v132 = v131;
  if (os_log_type_enabled(v130, v131))
  {
    uint64_t v133 = swift_slowAlloc();
    id v254 = (void (*)(uint64_t, void, uint64_t, int *))swift_slowAlloc();
    *(void *)&long long v256 = v254;
    *(_DWORD *)uint64_t v133 = 141558787;
    uint64_t v255 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v133 + 12) = 2081;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    LODWORD(v228) = v132;
    uint64_t v134 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v255 = sub_1008FA0F0(v134, v135, (uint64_t *)&v256);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v251(v128, v72);
    *(_WORD *)(v133 + 22) = 2160;
    uint64_t v255 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v133 + 32) = 2081;
    uint64_t v218 = v130;
    uint64_t v136 = v208;
    uint64_t v137 = v251;
    uint64_t v138 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v255 = sub_1008FA0F0(v138, v139, (uint64_t *)&v256);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v137(v136, v72);
    os_log_t v140 = v218;
    _os_log_impl((void *)&_mh_execute_header, v218, (os_log_type_t)v228, "Overriding stopSoundSingle %{private,mask.hash}s because %{private,mask.hash}s is indicating it was playing both in-case.", (uint8_t *)v133, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v97 = (uint64_t)v249;
    swift_slowDealloc();

    sub_100849E34(v210, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    sub_100849E34(v212, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    v137((char *)v115, v72);
    v251 = v137;
    v137(v217, v72);
    uint64_t v63 = v250;
  }
  else
  {

    uint64_t v145 = v251;
    v251(v129, (uint64_t)v84);
    v145(v128, (uint64_t)v84);
    sub_100849E34(v210, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    sub_100849E34(v212, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    v145((char *)v115, (uint64_t)v84);
    v145(v217, (uint64_t)v84);
  }
  uint64_t v93 = v240;
  uint64_t v95 = v247;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v264);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&aBlock);
  uint64_t v98 = v242;
  uint64_t v94 = (int *)v246;
  uint64_t v96 = v239;
  if (!*(void *)(v239 + 16)) {
    goto LABEL_39;
  }
LABEL_17:
  uint64_t v99 = v84;
  unint64_t v100 = sub_1007240CC(v97);
  if (v101)
  {
    uint64_t v102 = v229;
    sub_10084B940(*(void *)(v96 + 56) + *(void *)(v95 + 72) * v100, v229, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    uint64_t v103 = *(void (**)(uint64_t, void, uint64_t, int *))(v95 + 56);
    uint64_t v104 = v102;
    uint64_t v105 = 0;
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v103 = *(void (**)(uint64_t, void, uint64_t, int *))(v95 + 56);
  uint64_t v102 = v229;
  uint64_t v104 = v229;
  uint64_t v105 = 1;
LABEL_41:
  id v254 = v103;
  v103(v104, v105, 1, v94);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v95 + 48))(v102, 1, v94) == 1)
  {
    sub_10001DAB4(v102, &qword_10163CBC8);
    unint64_t v146 = v99;
LABEL_57:
    uint64_t v167 = v250;
    v250(v244, v97, v146);
    uint64_t v168 = v222;
    v167(v222, v245, v146);
    v167(v243, v97, v146);
    uint64_t v262 = SharingCircleWildAdvertisementKey.init(key:);
    uint64_t v263 = 0;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v259 = 1107296256;
    uint64_t v260 = sub_1004B5480;
    uint64_t v261 = &unk_1015D7510;
    _Block_copy(&aBlock);
    *(void *)&long long v256 = _swiftEmptyArrayStorage;
    uint64_t v169 = sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v170 = sub_10000588C((uint64_t *)&unk_10163F350);
    uint64_t v171 = sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    uint64_t v246 = v170;
    uint64_t v241 = v171;
    v251 = (void (*)(char *, uint64_t))v169;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    type metadata accessor for DispatchWorkItem();
    swift_allocObject();
    uint64_t v172 = DispatchWorkItem.init(flags:block:)();
    uint64_t v173 = (uint64_t)v223;
    static Date.trustedNow.getter((uint64_t)&v223[v94[8]]);
    uint64_t v174 = v98;
    uint64_t v175 = v93;
    uint64_t v176 = *(void (**)(void, void, void))(v253 + 32);
    v176(v173, v168, v146);
    v176(v173 + v94[5], v243, v146);
    *(unsigned char *)(v173 + v94[6]) = 4;
    *(void *)(v173 + v94[7]) = v172;
    *(void *)(v173 + v94[9]) = 0;
    *(unsigned char *)(v173 + v94[10]) = 0;
    v254(v173, 0, 1, v94);
    uint64_t v177 = v175;
    swift_beginAccess();
    sub_10015E340(v173, v244);
    swift_endAccess();
    if (qword_101636CB8 != -1) {
      swift_once();
    }
    uint64_t v178 = qword_10170E330;
    uint64_t v179 = (uint64_t)v227;
    uint64_t v180 = v249;
    v167(v227, v249, v146);
    uint64_t v181 = v224;
    static Date.trustedNow.getter(v179 + *(int *)(v224 + 20));
    *(unsigned char *)(v179 + *(int *)(v181 + 24)) = 26;
    sub_10000588C(&qword_10163A778);
    unint64_t v182 = (*(unsigned __int8 *)(v225 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v225 + 80);
    uint64_t v183 = swift_allocObject();
    *(_OWORD *)(v183 + 16) = xmmword_101342130;
    sub_10084B940(v179, v183 + v182, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    uint64_t v184 = type metadata accessor for Transaction();
    id v254 = v146;
    __chkstk_darwin(v184);
    *(&v207 - 4) = (char *)v178;
    *(&v207 - 3) = (char *)v183;
    *(&v207 - 2) = 0;
    *(&v207 - 1) = 0;
    static Transaction.named<A>(_:with:)();
    swift_bridgeObjectRelease();
    sub_100849E34(v179, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    sub_100A9E7EC(10);
    sub_10000584C();
    uint64_t v185 = v231;
    uint64_t v186 = v230;
    uint64_t v187 = v232;
    (*(void (**)(char *, void, uint64_t))(v231 + 104))(v230, enum case for DispatchQoS.QoSClass.default(_:), v232);
    uint64_t v188 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v185 + 8))(v186, v187);
    uint64_t v189 = swift_allocObject();
    uint64_t v190 = v234;
    *(void *)(v189 + 16) = v233;
    *(void *)(v189 + 24) = v190;
    uint64_t v262 = (uint64_t (*)(void))sub_10041ED88;
    uint64_t v263 = v189;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v259 = 1107296256;
    uint64_t v260 = sub_1004B5480;
    uint64_t v261 = &unk_1015D7560;
    uint64_t v191 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v192 = v235;
    static DispatchQoS.unspecified.getter();
    *(void *)&long long v256 = _swiftEmptyArrayStorage;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v191);

    (*(void (**)(char *, uint64_t))(v238 + 8))(v174, v177);
    (*(void (**)(char *, uint64_t))(v236 + 8))(v192, v237);
    swift_release();
    uint64_t v193 = type metadata accessor for Transaction();
    __chkstk_darwin(v193);
    *(&v207 - 4) = v248;
    *(&v207 - 3) = v180;
    *(&v207 - 2) = v245;
    *((double *)&v207 - 1) = a6;
    static Transaction.named<A>(_:with:)();
    return (*(uint64_t (**)(char *, void (*)(uint64_t, void, uint64_t, int *)))(v253 + 8))(v180, v254);
  }
  uint64_t v147 = v226;
  sub_100849DCC(v102, v226, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  int v148 = *(unsigned __int8 *)(v147 + v94[6]);
  unint64_t v146 = v99;
  if (v148 != 4)
  {
    uint64_t v160 = v98;
    uint64_t v161 = v215;
    sub_10084B940(v147, v215, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    if (v148 == 1)
    {
      sub_100849E34(v161, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    }
    else
    {
      uint64_t v162 = (int *)v246;
      int v163 = *(unsigned __int8 *)(v161 + *(int *)(v246 + 24));
      sub_100849E34(v161, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      BOOL v164 = v163 == 2;
      uint64_t v94 = v162;
      if (!v164)
      {
        sub_100849E34(v147, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
        uint64_t v98 = v160;
        goto LABEL_57;
      }
    }
    swift_retain();
    dispatch thunk of DispatchWorkItem.cancel()();
    swift_release();
    uint64_t v165 = &v248[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_playSoundSubjects];
    swift_beginAccess();
    uint64_t v98 = v160;
    if (*(void *)(*(void *)v165 + 16))
    {
      swift_bridgeObjectRetain();
      sub_1007240CC(v97);
      if (v166)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t aBlock = 4;
        PassthroughSubject.send(completion:)();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    sub_100849E34(v147, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    uint64_t v94 = (int *)v246;
    goto LABEL_57;
  }
  uint64_t v149 = v216;
  v63(v216, v97, v99);
  uint64_t v150 = v219;
  sub_10084B940(v147, v219, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  uint64_t v151 = Logger.logObject.getter();
  os_log_type_t v152 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v151, v152))
  {
    uint64_t v153 = swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v153 = 141558531;
    *(void *)&long long v264 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v153 + 12) = 2081;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v154 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&long long v264 = sub_1008FA0F0(v154, v155, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v156 = v219;
    v251(v149, (uint64_t)v99);
    *(_WORD *)(v153 + 22) = 2082;
    unint64_t v157 = 0xEB00000000646575;
    uint64_t v158 = 0x65755179616C702ELL;
    switch(*(unsigned char *)(v156 + *(int *)(v246 + 24)))
    {
      case 1:
        uint64_t v159 = 0x4979616C702ELL;
        goto LABEL_63;
      case 2:
        unint64_t v157 = 0xEC000000676E696ELL;
        uint64_t v158 = 0x6E755279616C702ELL;
        break;
      case 3:
        uint64_t v195 = 0x4379616C702ELL;
        goto LABEL_65;
      case 4:
        uint64_t v159 = 0x49706F74732ELL;
LABEL_63:
        uint64_t v158 = v159 & 0xFFFFFFFFFFFFLL | 0x696E000000000000;
        unsigned int v196 = 1952541044;
        goto LABEL_66;
      case 5:
        uint64_t v195 = 0x43706F74732ELL;
LABEL_65:
        uint64_t v158 = v195 & 0xFFFFFFFFFFFFLL | 0x6D6F000000000000;
        unsigned int v196 = 1952803952;
LABEL_66:
        unint64_t v157 = v196 | 0xEE00646500000000;
        break;
      case 6:
        unint64_t v157 = 0xE800000000000000;
        uint64_t v158 = 0x74756F656D69742ELL;
        break;
      default:
        break;
    }
    *(void *)&long long v264 = sub_1008FA0F0(v158, v157, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100849E34(v156, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    _os_log_impl((void *)&_mh_execute_header, v151, v152, "Cannot stopSound for %{private,mask.hash}s. Invalid state %{public}s!", (uint8_t *)v153, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v251(v149, (uint64_t)v99);
    sub_100849E34(v150, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  }

  sub_10000584C();
  uint64_t v197 = v231;
  uint64_t v198 = v230;
  uint64_t v199 = v232;
  (*(void (**)(char *, void, uint64_t))(v231 + 104))(v230, enum case for DispatchQoS.QoSClass.default(_:), v232);
  uint64_t v200 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v197 + 8))(v198, v199);
  uint64_t v201 = swift_allocObject();
  uint64_t v202 = v234;
  *(void *)(v201 + 16) = v233;
  *(void *)(v201 + 24) = v202;
  uint64_t v262 = (uint64_t (*)(void))sub_10084BBBC;
  uint64_t v263 = v201;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v259 = 1107296256;
  uint64_t v260 = sub_1004B5480;
  uint64_t v261 = &unk_1015D75B0;
  uint64_t v203 = _Block_copy(&aBlock);
  swift_retain();
  uint64_t v204 = v235;
  static DispatchQoS.unspecified.getter();
  *(void *)&long long v264 = _swiftEmptyArrayStorage;
  sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v205 = v242;
  uint64_t v206 = v240;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v203);

  (*(void (**)(char *, uint64_t))(v238 + 8))(v205, v206);
  (*(void (**)(char *, uint64_t))(v236 + 8))(v204, v237);
  sub_100849E34(v226, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  v251(v249, (uint64_t)v99);
  return swift_release();
}

uint64_t sub_10083D654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v57 = a3;
  uint64_t v62 = a1;
  uint64_t v69 = type metadata accessor for UUID();
  uint64_t v67 = *(void *)(v69 - 8);
  uint64_t v68 = *(void *)(v67 + 64);
  __chkstk_darwin(v69);
  BOOL v66 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v59 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v49 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000588C(&qword_10163C6C8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_10000588C(&qword_10164EFF0);
  uint64_t v53 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v47 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000588C(&qword_10164EFF8);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v55 = v13;
  uint64_t v56 = v14;
  __chkstk_darwin(v13);
  uint64_t v48 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_10000588C(&qword_10164F000);
  uint64_t v60 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v50 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000588C(&qword_10164F008);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v64 = v17;
  uint64_t v65 = v18;
  __chkstk_darwin(v17);
  uint64_t v52 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = Transaction.subscriptionCleaner.getter();
  uint64_t v54 = a2;
  uint64_t v20 = (void *)sub_10083247C(a3, a4);
  id v70 = *(id *)(a2 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue);
  id v21 = v70;
  id v71 = v20;
  uint64_t v22 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  uint64_t v46 = v23 + 56;
  v45(v11, 1, 1, v22);
  id v24 = v21;
  sub_10000588C(&qword_10164EF40);
  sub_10000584C();
  sub_100062734(&qword_10164EF50, &qword_10164EF40);
  sub_10084B9A8((unint64_t *)&qword_10166C020, (void (*)(uint64_t))sub_10000584C);
  uint64_t v25 = v47;
  Publisher.receive<A>(on:options:)();
  sub_10001DAB4((uint64_t)v11, &qword_10163C6C8);

  swift_release();
  uint64_t v26 = v49;
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
  id v71 = v24;
  v45(v11, 1, 1, v22);
  sub_100062734(&qword_10164F010, &qword_10164EFF0);
  id v27 = v24;
  uint64_t v28 = v48;
  uint64_t v29 = v51;
  Publisher.timeout<A>(_:scheduler:options:customError:)();
  sub_10001DAB4((uint64_t)v11, &qword_10163C6C8);

  (*(void (**)(char *, uint64_t))(v59 + 8))(v26, v61);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v25, v29);
  sub_10000588C(&qword_10164EF48);
  sub_100062734(&qword_10164F018, &qword_10164EFF8);
  uint64_t v30 = v50;
  uint64_t v31 = v55;
  Publisher.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v28, v31);
  sub_10000588C(&qword_10164EF58);
  sub_100062734(&qword_10164F020, &qword_10164F000);
  sub_100062734(&qword_10164EF68, &qword_10164EF58);
  uint64_t v32 = v52;
  uint64_t v33 = v58;
  Publisher.catch<A>(_:)();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v30, v33);
  uint64_t v34 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v36 = v66;
  uint64_t v35 = v67;
  uint64_t v37 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v66, v57, v69);
  uint64_t v38 = v35;
  unint64_t v39 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  unint64_t v40 = (v68 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v62;
  *(void *)(v41 + 24) = v34;
  (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v41 + v39, v36, v37);
  *(void *)(v41 + v40) = v63;
  sub_100062734(&qword_10164F028, &qword_10164F008);
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v42 = v64;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v32, v42);
  AnyCancellable.store(in:)();
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_10083DF28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  sub_10000588C(&qword_10164EF48);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10083DFB0(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = sub_10000588C(a2);
  __chkstk_darwin(v3);
  unint64_t v5 = *a1;
  *(uint64_t *)((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0)) = v5;
  swift_storeEnumTagMultiPayload();
  sub_100847D28(v5);
  return Just.init(_:)();
}

uint64_t sub_10083E05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v64 = a4;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v62 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = &v57[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v57[-v9];
  uint64_t v11 = sub_10000588C(&qword_10164EF48);
  __chkstk_darwin(v11);
  uint64_t v13 = (unint64_t *)&v57[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_10000588C(&qword_10163CBC8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = &v57[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v63 = &v57[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Transaction.capture()();
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v21 = (void *)result;
    uint64_t v22 = (uint64_t *)(result + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_coordinators);
    swift_beginAccess();
    uint64_t v23 = *v22;
    if (!*(void *)(v23 + 16))
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
LABEL_8:

      return sub_10001DAB4((uint64_t)v16, &qword_10163CBC8);
    }
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_1007240CC(v64);
    if (v25)
    {
      sub_10084B940(*(void *)(v23 + 56) + *(void *)(v18 + 72) * v24, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      uint64_t v26 = 0;
    }
    else
    {
      uint64_t v26 = 1;
    }
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, v26, 1, v17);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1) {
      goto LABEL_8;
    }
    id v27 = v63;
    sub_100849DCC((uint64_t)v16, (uint64_t)v63, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    sub_10001D074(a1, (uint64_t)v13, &qword_10164EF48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unint64_t v28 = *v13;
      uint64_t v30 = v61;
      uint64_t v29 = v62;
      if (qword_101636CF8 != -1) {
        swift_once();
      }
      uint64_t v31 = type metadata accessor for Logger();
      sub_100010324(v31, (uint64_t)qword_10170E3C8);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v30 + 16))(v8, v64, v29);
      sub_100847D28(v28);
      sub_100847D28(v28);
      uint64_t v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.error.getter();
      int v34 = v33;
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v35 = swift_slowAlloc();
        os_log_t v59 = v32;
        uint64_t v36 = v35;
        uint64_t v37 = swift_slowAlloc();
        uint64_t v60 = v37;
        *(_DWORD *)uint64_t v36 = 141558531;
        uint64_t v65 = 1752392040;
        uint64_t v66 = v37;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v36 + 12) = 2081;
        sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        int v58 = v34;
        uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v65 = sub_1008FA0F0(v38, v39, &v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(unsigned char *, uint64_t))(v30 + 8))(v8, v29);
        *(_WORD *)(v36 + 22) = 2080;
        uint64_t v65 = v28;
        sub_100847D28(v28);
        uint64_t v40 = String.init<A>(describing:)();
        uint64_t v65 = sub_1008FA0F0(v40, v41, &v66);
        id v27 = v63;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100847D38(v28);
        sub_100847D38(v28);
        os_log_t v42 = v59;
        _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v58, "Stop sound failed for %{private,mask.hash}s. Error %s", (uint8_t *)v36, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v30 + 8))(v8, v29);
        sub_100847D38(v28);
        sub_100847D38(v28);
      }
      sub_1008476D4();
      uint64_t v54 = swift_allocError();
      *uint64_t v55 = v28;
      uint64_t v56 = *(int *)(v17 + 36);
      swift_errorRelease();
      *(void *)&v27[v56] = v54;
    }
    else
    {
      uint64_t v44 = v61;
      uint64_t v43 = v62;
      if (qword_101636CF8 != -1) {
        swift_once();
      }
      uint64_t v45 = type metadata accessor for Logger();
      sub_100010324(v45, (uint64_t)qword_10170E3C8);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v44 + 16))(v10, v64, v43);
      uint64_t v46 = Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = v43;
        uint64_t v49 = swift_slowAlloc();
        uint64_t v50 = swift_slowAlloc();
        uint64_t v60 = v50;
        *(_DWORD *)uint64_t v49 = 141558275;
        uint64_t v65 = 1752392040;
        uint64_t v66 = v50;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v49 + 12) = 2081;
        os_log_t v59 = (os_log_t)(v49 + 14);
        sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v65 = sub_1008FA0F0(v51, v52, &v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v53 = v48;
        id v27 = v63;
        (*(void (**)(unsigned char *, uint64_t))(v44 + 8))(v10, v53);
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "Stop sound completed successfully for %{private,mask.hash}s", (uint8_t *)v49, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v44 + 8))(v10, v43);
      }

      sub_10001DAB4((uint64_t)v13, &qword_10164EF48);
    }
    sub_100829E80(v64, 1, 0);

    return sub_100849E34((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
  }
  return result;
}

uint64_t sub_10083E8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v59 = a3;
  uint64_t v60 = a4;
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v61 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  int v58 = (char *)v52 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v52 - v13;
  uint64_t v57 = v15;
  __chkstk_darwin(v12);
  uint64_t v17 = (char *)v52 - v16;
  uint64_t v18 = type metadata accessor for DispatchPredicate();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v21 = (void *)((char *)v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = *(void **)&v5[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue];
  *id v21 = v22;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  id v23 = v22;
  LOBYTE(v22) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  if (v22)
  {
    uint64_t v56 = v9;
    if (qword_101636CF8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v24 = type metadata accessor for Logger();
  sub_100010324(v24, (uint64_t)qword_10170E3C8);
  uint64_t v25 = v61;
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
  v26(v17, v63, v6);
  id v27 = v14;
  v26(v14, v62, v6);
  unint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  uint64_t v55 = v28;
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v53 = v26;
    uint64_t v31 = v30;
    uint64_t v32 = swift_slowAlloc();
    v52[2] = v32;
    *(_DWORD *)uint64_t v31 = 141558531;
    uint64_t v64 = 1752392040;
    uint64_t v65 = v32;
    v52[1] = &v65;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 12) = 2081;
    v52[0] = v31 + 14;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v54 = v5;
    uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v64 = sub_1008FA0F0(v33, v34, &v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v35 = *(void (**)(char *, uint64_t))(v25 + 8);
    v35(v17, v6);
    *(_WORD *)(v31 + 22) = 2082;
    uint64_t v5 = v54;
    uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v64 = sub_1008FA0F0(v36, v37, &v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v35(v27, v6);
    uint64_t v38 = v55;
    _os_log_impl((void *)&_mh_execute_header, v55, v29, "SPPlaySound play sound on device %{private,mask.hash}s commandId: %{public}s.", (uint8_t *)v31, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v26 = v53;
    swift_slowDealloc();

    uint64_t v39 = v61;
  }
  else
  {
    uint64_t v39 = v25;
    uint64_t v40 = *(void (**)(char *, uint64_t))(v25 + 8);
    v40(v17, v6);
    v40(v27, v6);
  }
  uint64_t v55 = sub_10001CD44(&v5[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_findMyCommandManager], *(void *)&v5[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_findMyCommandManager + 24]);
  unint64_t v41 = v58;
  v26(v58, v63, v6);
  os_log_t v42 = v56;
  uint64_t v43 = v62;
  v26(v56, v62, v6);
  uint64_t v44 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v45 = (v44 + 16) & ~v44;
  uint64_t v46 = (v57 + v44 + v45) & ~v44;
  unint64_t v47 = (v57 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v48 = swift_allocObject();
  uint64_t v49 = *(void (**)(uint64_t, char *, uint64_t))(v39 + 32);
  v49(v48 + v45, v41, v6);
  v49(v48 + v46, v42, v6);
  *(void *)(v48 + v47) = v5;
  uint64_t v50 = v5;
  sub_10063BB68(v63, v43, v59, (uint64_t)sub_100849FF0, v48);
  swift_release();
  uint64_t v65 = v60;
  sub_10000588C(&qword_10164EFE0);
  sub_100062734(&qword_10164EFE8, &qword_10164EFE0);
  return Publisher.eraseToAnyPublisher()();
}

uint64_t sub_10083EF08(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  v21[0] = a4;
  uint64_t v23 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v22 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v24 = *(void *)(v8 - 8);
  uint64_t v25 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  v21[1] = *(void *)&a2[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue];
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v15 + v14, (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  *(void *)(v15 + ((v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v21[0];
  aBlock[4] = sub_10084A1F0;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015D7920;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v17 = a2;
  swift_errorRetain();
  static DispatchQoS.unspecified.getter();
  void aBlock[7] = _swiftEmptyArrayStorage;
  sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v19 = v22;
  uint64_t v18 = v23;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v18);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v25);
  return swift_release();
}

void sub_10083F2D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v116 = a2;
  uint64_t v5 = sub_10000588C(&qword_10163CBC8);
  __chkstk_darwin(v5 - 8);
  uint64_t v125 = (uint64_t *)((char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v122 = (char *)&v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v117 = (char *)&v111 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v115 = (char *)&v111 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v121 = (char *)&v111 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v111 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v119 = (char *)&v111 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  char v118 = (char *)&v111 - v26;
  __chkstk_darwin(v25);
  uint64_t v120 = (char *)&v111 - v27;
  uint64_t v28 = type metadata accessor for DispatchPredicate();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (uint64_t *)((char *)&v111 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = *(void **)(v3 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue);
  *uint64_t v31 = v32;
  (*(void (**)(void *, void, uint64_t))(v29 + 104))(v31, enum case for DispatchPredicate.onQueue(_:), v28);
  id v33 = v32;
  LOBYTE(v32) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v29 + 8))(v31, v28);
  if ((v32 & 1) == 0)
  {
    __break(1u);
    goto LABEL_51;
  }
  uint64_t v124 = v3;
  uint64_t v126 = a1;
  sub_100ACCD98(a1, (uint64_t)v131);
  uint64_t v34 = v132;
  uint64_t v127 = v11;
  if (!v132)
  {
    sub_10001DAB4((uint64_t)v131, (uint64_t *)&unk_10163BBE0);
    uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    uint64_t v11 = v10;
    v55(v9, 1, 1, v10);
LABEL_9:
    sub_10001DAB4((uint64_t)v9, &qword_101638CF0);
    if (qword_101636CF8 == -1)
    {
LABEL_10:
      uint64_t v56 = type metadata accessor for Logger();
      sub_100010324(v56, (uint64_t)qword_10170E3C8);
      uint64_t v57 = v126;
      unint64_t v123 = *(void (**)(char *, uint64_t, uint64_t))(v127 + 16);
      v123(v22, v126, v11);
      int v58 = Logger.logObject.getter();
      os_log_type_t v59 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = swift_slowAlloc();
        v131[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v60 = 141558275;
        v129[0] = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v60 + 12) = 2081;
        sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v61 = dispatch thunk of CustomStringConvertible.description.getter();
        v129[0] = sub_1008FA0F0(v61, v62, v131);
        uint64_t v57 = v126;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v63 = v22;
        uint64_t v54 = *(void (**)(char *, uint64_t))(v127 + 8);
        v54(v63, v11);
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "didStartPlayingSoundOnDevice %{private,mask.hash}s", (uint8_t *)v60, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v64 = v22;
        uint64_t v54 = *(void (**)(char *, uint64_t))(v127 + 8);
        v54(v64, v11);
      }

      uint64_t v38 = v124;
      uint64_t v65 = v125;
      goto LABEL_16;
    }
LABEL_51:
    swift_once();
    goto LABEL_10;
  }
  uint64_t v35 = v133;
  sub_10001CD44(v131, v132);
  (*(void (**)(uint64_t, uint64_t))(v35 + 192))(v34, v35);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v131);
  uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v11 = v10;
  if (v36(v9, 1, v10) == 1) {
    goto LABEL_9;
  }
  unint64_t v37 = v120;
  (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v120, v9, v10);
  uint64_t v38 = v124;
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v39 = type metadata accessor for Logger();
  sub_100010324(v39, (uint64_t)qword_10170E3C8);
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v127 + 16);
  unint64_t v41 = v118;
  v40(v118, v126, v11);
  os_log_t v42 = v119;
  v40(v119, (uint64_t)v37, v11);
  uint64_t v43 = Logger.logObject.getter();
  os_log_type_t v44 = static os_log_type_t.default.getter();
  int v45 = v44;
  BOOL v46 = os_log_type_enabled(v43, v44);
  unint64_t v123 = v40;
  if (v46)
  {
    uint64_t v47 = swift_slowAlloc();
    uint64_t v114 = swift_slowAlloc();
    v131[0] = v114;
    *(_DWORD *)uint64_t v47 = 141558531;
    v129[0] = 1752392040;
    int v113 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v47 + 12) = 2081;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    os_log_t v112 = v43;
    uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
    v129[0] = sub_1008FA0F0(v48, v49, v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v50 = *(void (**)(char *, uint64_t))(v127 + 8);
    v50(v41, v11);
    *(_WORD *)(v47 + 22) = 2082;
    uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter();
    v129[0] = sub_1008FA0F0(v51, v52, v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v50(v42, v11);
    os_log_t v53 = v112;
    _os_log_impl((void *)&_mh_execute_header, v112, (os_log_type_t)v113, "didStartPlayingSoundOnDevice %{private,mask.hash}s. groupId %{public}s", (uint8_t *)v47, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v54 = v50;
    swift_slowDealloc();

    v50(v120, v11);
  }
  else
  {

    uint64_t v54 = *(void (**)(char *, uint64_t))(v127 + 8);
    v54(v42, v11);
    v54(v41, v11);
    v54(v37, v11);
  }
  uint64_t v65 = v125;
  uint64_t v57 = v126;
LABEL_16:
  uint64_t v66 = (uint64_t *)(v38 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_coordinators);
  swift_beginAccess();
  uint64_t v67 = *v66;
  if (!*(void *)(v67 + 16))
  {
    uint64_t v75 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v65, 1, 1, v75);
LABEL_22:
    sub_10001DAB4((uint64_t)v65, &qword_10163CBC8);
    if (qword_101636CF8 != -1) {
      swift_once();
    }
    uint64_t v77 = type metadata accessor for Logger();
    sub_100010324(v77, (uint64_t)qword_10170E3C8);
    uint64_t v78 = v122;
    v123(v122, v57, v11);
    uint64_t v79 = Logger.logObject.getter();
    os_log_type_t v80 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v79, v80))
    {
      os_log_t v81 = (uint8_t *)swift_slowAlloc();
      v129[0] = swift_slowAlloc();
      *(_DWORD *)os_log_t v81 = 136315138;
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v82 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v130 = sub_1008FA0F0(v82, v83, v129);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v54(v78, v11);
      _os_log_impl((void *)&_mh_execute_header, v79, v80, "didStartPlayingSoundOnDevice called with unknown device %s", v81, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v54(v78, v11);
    }

    return;
  }
  swift_bridgeObjectRetain();
  unint64_t v68 = sub_1007240CC(v57);
  if (v69)
  {
    unint64_t v70 = v68;
    uint64_t v71 = *(void *)(v67 + 56);
    uint64_t v72 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
    uint64_t v73 = *(void *)(v72 - 8);
    uint64_t v74 = v71 + *(void *)(v73 + 72) * v70;
    uint64_t v65 = v125;
    sub_10084B940(v74, (uint64_t)v125, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v73 + 56))(v65, 0, 1, v72);
    uint64_t v38 = v124;
  }
  else
  {
    uint64_t v72 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
    uint64_t v65 = v125;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v125, 1, 1, v72);
  }
  uint64_t v76 = v121;
  swift_bridgeObjectRelease();
  type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 48))(v65, 1, v72) == 1) {
    goto LABEL_22;
  }
  sub_10001DAB4((uint64_t)v65, &qword_10163CBC8);
  uint64_t v84 = v38 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_playSoundSubjects;
  swift_beginAccess();
  if (*(void *)(*(void *)v84 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1007240CC(v57);
    if (v85)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v86 = v116;
      if (v116)
      {
        swift_errorRetain();
        if (qword_101636CF8 != -1) {
          swift_once();
        }
        uint64_t v87 = type metadata accessor for Logger();
        sub_100010324(v87, (uint64_t)qword_10170E3C8);
        v123(v76, v57, v11);
        swift_errorRetain();
        swift_errorRetain();
        os_log_type_t v88 = Logger.logObject.getter();
        os_log_type_t v89 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v88, v89))
        {
          uint64_t v90 = swift_slowAlloc();
          uint64_t v125 = (uint64_t *)v54;
          unint64_t v91 = v76;
          uint64_t v92 = v90;
          uint64_t v130 = swift_slowAlloc();
          *(_DWORD *)uint64_t v92 = 141558531;
          uint64_t v128 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v92 + 12) = 2081;
          sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v93 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v128 = sub_1008FA0F0(v93, v94, &v130);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v125)(v91, v11);
          *(_WORD *)(v92 + 22) = 2082;
          uint64_t v128 = v116;
          swift_errorRetain();
          sub_10000588C(&qword_101638D40);
          uint64_t v95 = String.init<A>(describing:)();
          uint64_t v128 = sub_1008FA0F0(v95, v96, &v130);
          uint64_t v86 = v116;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v88, v89, "didStartPlayingSoundOnDevice %{private,mask.hash}s failed due to %{public}s", (uint8_t *)v92, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          v54(v76, v11);
          swift_errorRelease();
          swift_errorRelease();
        }

        uint64_t v130 = v86;
        swift_errorRetain();
        PassthroughSubject.send(completion:)();
        swift_release();
        swift_errorRelease();
        swift_errorRelease();
      }
      else
      {
        if (qword_101636CF8 != -1) {
          swift_once();
        }
        uint64_t v104 = type metadata accessor for Logger();
        sub_100010324(v104, (uint64_t)qword_10170E3C8);
        uint64_t v105 = v115;
        v123(v115, v57, v11);
        uint64_t v106 = Logger.logObject.getter();
        os_log_type_t v107 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v106, v107))
        {
          uint64_t v108 = swift_slowAlloc();
          uint64_t v130 = swift_slowAlloc();
          *(_DWORD *)uint64_t v108 = 141558275;
          uint64_t v128 = 1752392040;
          uint64_t v125 = (uint64_t *)v54;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v108 + 12) = 2081;
          sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v109 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v128 = sub_1008FA0F0(v109, v110, &v130);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v125)(v105, v11);
          _os_log_impl((void *)&_mh_execute_header, v106, v107, "didStartPlayingSoundOnDevice %{private,mask.hash}s succeeded", (uint8_t *)v108, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          v54(v105, v11);
        }

        PassthroughSubject.send(_:)();
        uint64_t v130 = 4;
        PassthroughSubject.send(completion:)();
        swift_release();
      }
      return;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v97 = type metadata accessor for Logger();
  sub_100010324(v97, (uint64_t)qword_10170E3C8);
  uint64_t v98 = v117;
  v123(v117, v57, v11);
  uint64_t v99 = Logger.logObject.getter();
  os_log_type_t v100 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v99, v100))
  {
    uint64_t v101 = swift_slowAlloc();
    uint64_t v130 = swift_slowAlloc();
    *(_DWORD *)uint64_t v101 = 141558275;
    uint64_t v128 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v101 + 12) = 2081;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v102 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v128 = sub_1008FA0F0(v102, v103, &v130);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v54(v98, v11);
    _os_log_impl((void *)&_mh_execute_header, v99, v100, "Missing playSoundSubject for device %{private,mask.hash}s!", (uint8_t *)v101, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v54(v98, v11);
  }
}

uint64_t sub_100840760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v61 = a3;
  uint64_t v63 = a1;
  uint64_t v64 = a2;
  uint64_t v5 = type metadata accessor for UUID();
  os_log_type_t v59 = *(void **)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  unint64_t v62 = (char *)v52 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v52 - v12;
  uint64_t v60 = v14;
  __chkstk_darwin(v11);
  uint64_t v16 = (char *)v52 - v15;
  uint64_t v17 = type metadata accessor for DispatchPredicate();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (void *)((char *)v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = *(void **)&v4[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue];
  *uint64_t v20 = v21;
  (*(void (**)(void *, void, uint64_t))(v18 + 104))(v20, enum case for DispatchPredicate.onQueue(_:), v17);
  id v22 = v21;
  LOBYTE(v21) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v18 + 8))(v20, v17);
  if (v21)
  {
    if (qword_101636CF8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  int v58 = v8;
  uint64_t v23 = type metadata accessor for Logger();
  sub_100010324(v23, (uint64_t)qword_10170E3C8);
  uint64_t v24 = v59;
  uint64_t v25 = (void (*)(char *, uint64_t, uint64_t))v59[2];
  v25(v16, v63, v5);
  uint64_t v26 = v13;
  uint64_t v57 = v25;
  v25(v13, v64, v5);
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  int v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v55 = v31;
    *(_DWORD *)uint64_t v30 = 141558531;
    uint64_t v65 = 1752392040;
    uint64_t v66 = v31;
    v52[1] = &v66;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v30 + 12) = 2081;
    os_log_t v53 = (os_log_t)(v30 + 14);
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v56 = v4;
    int v54 = v29;
    uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v65 = sub_1008FA0F0(v32, v33, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v53 = v27;
    uint64_t v34 = v24;
    uint64_t v35 = (void (*)(char *, uint64_t))v24[1];
    v35(v16, v5);
    *(_WORD *)(v30 + 22) = 2082;
    uint64_t v4 = v56;
    uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v65 = sub_1008FA0F0(v36, v37, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v35(v26, v5);
    os_log_t v38 = v53;
    _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v54, "SPPlaySound stop sound on device %{private,mask.hash}s commandId: %{public}s.", (uint8_t *)v30, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v39 = (void (*)(char *, uint64_t))v24[1];
    v39(v16, v5);
    v39(v26, v5);

    uint64_t v34 = v24;
  }
  os_log_type_t v59 = sub_10001CD44(&v4[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_findMyCommandManager], *(void *)&v4[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_findMyCommandManager + 24]);
  uint64_t v40 = v63;
  unint64_t v41 = v57;
  v57(v62, v63, v5);
  os_log_t v42 = v58;
  uint64_t v43 = v64;
  v41(v58, v64, v5);
  uint64_t v44 = *((unsigned __int8 *)v34 + 80);
  uint64_t v45 = (v44 + 16) & ~v44;
  uint64_t v46 = (v60 + v44 + v45) & ~v44;
  unint64_t v47 = (v60 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v48 = swift_allocObject();
  unint64_t v49 = (void (*)(uint64_t, char *, uint64_t))v34[4];
  v49(v48 + v45, v62, v5);
  v49(v48 + v46, v42, v5);
  *(void *)(v48 + v47) = v4;
  uint64_t v50 = v4;
  sub_10063C170(v40, v43, (uint64_t)sub_100847EDC, v48);
  swift_release();
  uint64_t v66 = v61;
  sub_10000588C(&qword_10164EFE0);
  sub_100062734(&qword_10164EFE8, &qword_10164EFE0);
  return Publisher.eraseToAnyPublisher()();
}

void sub_100840D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6, const char *a7)
{
  uint64_t v63 = a5;
  uint64_t v64 = a3;
  uint64_t v65 = a2;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)v58 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)v58 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)v58 - v22;
  if (a1)
  {
    uint64_t v61 = a4;
    uint64_t v62 = a6;
    swift_errorRetain();
    if (qword_101636CF8 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_100010324(v24, (uint64_t)qword_10170E3C8);
    uint64_t v25 = v12;
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v26(v18, v65, v11);
    v26(v15, v64, v11);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    int v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v64 = v31;
      *(_DWORD *)uint64_t v30 = 141558787;
      uint64_t v66 = 1752392040;
      uint64_t v67 = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v30 + 12) = 2081;
      v58[1] = sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      int v60 = v29;
      uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v66 = sub_1008FA0F0(v32, v33, &v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      os_log_t v59 = v27;
      uint64_t v34 = *(void (**)(char *, uint64_t))(v25 + 8);
      v34(v18, v11);
      *(_WORD *)(v30 + 22) = 2082;
      uint64_t v66 = a1;
      swift_errorRetain();
      sub_10000588C(&qword_101638D40);
      uint64_t v35 = String.init<A>(describing:)();
      uint64_t v66 = sub_1008FA0F0(v35, v36, &v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v30 + 32) = 2082;
      uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v66 = sub_1008FA0F0(v37, v38, &v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v34(v15, v11);
      os_log_t v39 = v59;
      _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v60, v63, (uint8_t *)v30, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      os_log_t v53 = *(void (**)(char *, uint64_t))(v25 + 8);
      v53(v18, v11);
      swift_errorRelease();
      swift_errorRelease();
      v53(v15, v11);
    }
    uint64_t v54 = v61;
    uint64_t v55 = type metadata accessor for Transaction();
    __chkstk_darwin(v55);
    uint64_t v56 = v65;
    v58[-4] = v54;
    v58[-3] = v56;
    v58[-2] = a1;
    static Transaction.named<A>(_:with:)();
    swift_errorRelease();
  }
  else
  {
    uint64_t v63 = a7;
    if (qword_101636CF8 != -1) {
      swift_once();
    }
    uint64_t v40 = type metadata accessor for Logger();
    sub_100010324(v40, (uint64_t)qword_10170E3C8);
    uint64_t v41 = v12;
    os_log_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v42(v23, v65, v11);
    v42(v21, v64, v11);
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.default.getter();
    int v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v65 = v47;
      *(_DWORD *)uint64_t v46 = 141558531;
      uint64_t v66 = 1752392040;
      uint64_t v67 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v46 + 12) = 2081;
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      LODWORD(v64) = v45;
      uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v66 = sub_1008FA0F0(v48, v49, &v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v50 = *(void (**)(char *, uint64_t))(v41 + 8);
      v50(v23, v11);
      *(_WORD *)(v46 + 22) = 2082;
      uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v66 = sub_1008FA0F0(v51, v52, &v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v50(v21, v11);
      _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v64, v63, (uint8_t *)v46, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v57 = *(void (**)(char *, uint64_t))(v41 + 8);
      v57(v23, v11);
      v57(v21, v11);
    }
  }
}

uint64_t sub_1008414EC(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a4;
  uint64_t v25 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v28 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v26 = *(void *)(v8 - 8);
  uint64_t v27 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void *)&a2[OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue];
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (v13 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v15, v14, v11);
  *(void *)(v17 + v16) = v23;
  aBlock[4] = sub_10084800C;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015D7498;
  uint64_t v18 = _Block_copy(aBlock);
  uint64_t v19 = a2;
  swift_errorRetain();
  static DispatchQoS.unspecified.getter();
  void aBlock[7] = _swiftEmptyArrayStorage;
  sub_10084B9A8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v20 = v25;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v20);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v27);
  return swift_release();
}

void sub_1008418A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v123 = a2;
  uint64_t v5 = sub_10000588C(&qword_10163CBC8);
  __chkstk_darwin(v5 - 8);
  uint64_t v132 = (uint64_t *)((char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  os_log_type_t v129 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v124 = (char *)&v117 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v122 = (char *)&v117 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v128 = (char *)&v117 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v117 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v126 = (char *)&v117 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v125 = (char *)&v117 - v26;
  __chkstk_darwin(v25);
  uint64_t v127 = (char *)&v117 - v27;
  uint64_t v28 = type metadata accessor for DispatchPredicate();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (uint64_t *)((char *)&v117 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = *(void **)(v3 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue);
  *uint64_t v31 = v32;
  (*(void (**)(void *, void, uint64_t))(v29 + 104))(v31, enum case for DispatchPredicate.onQueue(_:), v28);
  id v33 = v32;
  LOBYTE(v32) = _dispatchPreconditionTest(_:)();
  uint64_t v35 = *(void (**)(void *, uint64_t))(v29 + 8);
  uint64_t v34 = v29 + 8;
  v35(v31, v28);
  if ((v32 & 1) == 0)
  {
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v131 = v3;
  uint64_t v133 = a1;
  sub_100ACCD98(a1, (uint64_t)v137);
  uint64_t v36 = v138;
  if (!v138)
  {
    sub_10001DAB4((uint64_t)v137, (uint64_t *)&unk_10163BBE0);
    uint64_t v34 = v11;
    uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    uint64_t v11 = v10;
    v57(v9, 1, 1, v10);
LABEL_9:
    sub_10001DAB4((uint64_t)v9, &qword_101638CF0);
    if (qword_101636CF8 == -1)
    {
LABEL_10:
      uint64_t v58 = type metadata accessor for Logger();
      sub_100010324(v58, (uint64_t)qword_10170E3C8);
      uint64_t v59 = v133;
      uint64_t v130 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
      v130(v22, v133, v11);
      int v60 = Logger.logObject.getter();
      os_log_type_t v61 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v60, v61))
      {
        uint64_t v62 = swift_slowAlloc();
        v137[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v62 = 141558275;
        v135[0] = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v62 + 12) = 2081;
        sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v63 = dispatch thunk of CustomStringConvertible.description.getter();
        v135[0] = sub_1008FA0F0(v63, v64, v137);
        uint64_t v59 = v133;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v65 = v22;
        uint64_t v56 = *(void (**)(char *, uint64_t))(v34 + 8);
        v56(v65, v11);
        _os_log_impl((void *)&_mh_execute_header, v60, v61, "didStopPlayingSoundOnDevice %{private,mask.hash}s", (uint8_t *)v62, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v66 = v22;
        uint64_t v56 = *(void (**)(char *, uint64_t))(v34 + 8);
        v56(v66, v11);
      }

      uint64_t v40 = v131;
      uint64_t v67 = v132;
      goto LABEL_16;
    }
LABEL_52:
    swift_once();
    goto LABEL_10;
  }
  uint64_t v37 = v139;
  sub_10001CD44(v137, v138);
  (*(void (**)(uint64_t, uint64_t))(v37 + 192))(v36, v37);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v137);
  uint64_t v34 = v11;
  unint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v11 = v10;
  if (v38(v9, 1, v10) == 1) {
    goto LABEL_9;
  }
  os_log_t v39 = v127;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v127, v9, v10);
  uint64_t v40 = v131;
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v41 = type metadata accessor for Logger();
  sub_100010324(v41, (uint64_t)qword_10170E3C8);
  os_log_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
  uint64_t v43 = v125;
  v42(v125, v133, v11);
  os_log_type_t v44 = v126;
  v42(v126, (uint64_t)v39, v11);
  int v45 = Logger.logObject.getter();
  os_log_type_t v46 = static os_log_type_t.default.getter();
  int v47 = v46;
  BOOL v48 = os_log_type_enabled(v45, v46);
  uint64_t v130 = v42;
  if (v48)
  {
    uint64_t v49 = swift_slowAlloc();
    uint64_t v120 = swift_slowAlloc();
    v137[0] = v120;
    *(_DWORD *)uint64_t v49 = 141558531;
    v135[0] = 1752392040;
    int v119 = v47;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v49 + 12) = 2081;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    os_log_t v118 = v45;
    uint64_t v50 = dispatch thunk of CustomStringConvertible.description.getter();
    v135[0] = sub_1008FA0F0(v50, v51, v137);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v121 = v34;
    unint64_t v52 = *(void (**)(char *, uint64_t))(v34 + 8);
    v52(v43, v11);
    *(_WORD *)(v49 + 22) = 2082;
    uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter();
    v135[0] = sub_1008FA0F0(v53, v54, v137);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v52(v44, v11);
    os_log_t v55 = v118;
    _os_log_impl((void *)&_mh_execute_header, v118, (os_log_type_t)v119, "didStopPlayingSoundOnDevice %{private,mask.hash}s. groupId %{public}s", (uint8_t *)v49, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v56 = v52;
    swift_slowDealloc();

    v52(v127, v11);
  }
  else
  {

    uint64_t v56 = *(void (**)(char *, uint64_t))(v34 + 8);
    v56(v44, v11);
    v56(v43, v11);
    v56(v39, v11);
  }
  uint64_t v67 = v132;
  uint64_t v59 = v133;
LABEL_16:
  unint64_t v68 = (uint64_t *)(v40 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_coordinators);
  swift_beginAccess();
  uint64_t v69 = *v68;
  if (!*(void *)(v69 + 16))
  {
    uint64_t v77 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v67, 1, 1, v77);
LABEL_22:
    sub_10001DAB4((uint64_t)v67, &qword_10163CBC8);
    if (qword_101636CF8 != -1) {
      swift_once();
    }
    uint64_t v79 = type metadata accessor for Logger();
    sub_100010324(v79, (uint64_t)qword_10170E3C8);
    os_log_type_t v80 = v129;
    v130(v129, v59, v11);
    os_log_t v81 = Logger.logObject.getter();
    os_log_type_t v82 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v83 = swift_slowAlloc();
      v135[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v83 = 141558275;
      uint64_t v136 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v83 + 12) = 2081;
      uint64_t v132 = (uint64_t *)v56;
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v84 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v136 = sub_1008FA0F0(v84, v85, v135);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v132)(v80, v11);
      uint64_t v86 = "didStopPlayingSoundOnDevice called with unknown device %{private,mask.hash}s";
LABEL_39:
      _os_log_impl((void *)&_mh_execute_header, v81, v82, v86, (uint8_t *)v83, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
LABEL_42:

      return;
    }
    uint64_t v87 = v80;
    uint64_t v88 = v11;
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  unint64_t v70 = sub_1007240CC(v59);
  if (v71)
  {
    unint64_t v72 = v70;
    uint64_t v73 = *(void *)(v69 + 56);
    uint64_t v74 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
    uint64_t v75 = *(void *)(v74 - 8);
    uint64_t v76 = v73 + *(void *)(v75 + 72) * v72;
    uint64_t v67 = v132;
    sub_10084B940(v76, (uint64_t)v132, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v75 + 56))(v67, 0, 1, v74);
    uint64_t v40 = v131;
  }
  else
  {
    uint64_t v74 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
    uint64_t v67 = v132;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v132, 1, 1, v74);
  }
  uint64_t v78 = v128;
  swift_bridgeObjectRelease();
  type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v74 - 8) + 48))(v67, 1, v74) == 1) {
    goto LABEL_22;
  }
  sub_10001DAB4((uint64_t)v67, &qword_10163CBC8);
  os_log_type_t v89 = (uint64_t *)(v40 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_stopSoundSubjects);
  swift_beginAccess();
  uint64_t v90 = *v89;
  if (!*(void *)(v90 + 16))
  {
LABEL_35:
    if (qword_101636CF8 != -1) {
      swift_once();
    }
    uint64_t v106 = type metadata accessor for Logger();
    sub_100010324(v106, (uint64_t)qword_10170E3C8);
    os_log_type_t v107 = v124;
    v130(v124, v59, v11);
    os_log_t v81 = Logger.logObject.getter();
    os_log_type_t v82 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v83 = swift_slowAlloc();
      uint64_t v136 = swift_slowAlloc();
      *(_DWORD *)uint64_t v83 = 141558275;
      uint64_t v134 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v83 + 12) = 2081;
      uint64_t v132 = (uint64_t *)v56;
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v108 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v134 = sub_1008FA0F0(v108, v109, &v136);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v132)(v107, v11);
      uint64_t v86 = "Missing stopSoundSubject for device %{private,mask.hash}s!";
      goto LABEL_39;
    }
    uint64_t v87 = v107;
    uint64_t v88 = v11;
LABEL_41:
    v56(v87, v88);
    goto LABEL_42;
  }
  swift_bridgeObjectRetain();
  unint64_t v91 = sub_1007240CC(v59);
  if ((v92 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  uint64_t v93 = *(void *)(*(void *)(v90 + 56) + 8 * v91);
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v94 = v123;
  if (v123)
  {
    swift_errorRetain();
    if (qword_101636CF8 != -1) {
      swift_once();
    }
    uint64_t v95 = type metadata accessor for Logger();
    sub_100010324(v95, (uint64_t)qword_10170E3C8);
    v130(v78, v59, v11);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v96 = Logger.logObject.getter();
    os_log_type_t v97 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v96, v97))
    {
      uint64_t v98 = swift_slowAlloc();
      uint64_t v131 = v93;
      uint64_t v99 = v78;
      uint64_t v100 = v98;
      uint64_t v101 = swift_slowAlloc();
      uint64_t v132 = (uint64_t *)v56;
      uint64_t v136 = v101;
      *(_DWORD *)uint64_t v100 = 141558531;
      uint64_t v134 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v100 + 12) = 2081;
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v102 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v134 = sub_1008FA0F0(v102, v103, &v136);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v132)(v99, v11);
      *(_WORD *)(v100 + 22) = 2082;
      uint64_t v134 = v123;
      swift_errorRetain();
      sub_10000588C(&qword_101638D40);
      uint64_t v104 = String.init<A>(describing:)();
      uint64_t v134 = sub_1008FA0F0(v104, v105, &v136);
      uint64_t v94 = v123;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v96, v97, "didStopPlayingSoundOnDevice %{private,mask.hash}s failed due to %{public}s", (uint8_t *)v100, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v56(v78, v11);
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v136 = v94;
    swift_errorRetain();
    PassthroughSubject.send(completion:)();
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    uint64_t v131 = v93;
    if (qword_101636CF8 != -1) {
      swift_once();
    }
    uint64_t v110 = type metadata accessor for Logger();
    sub_100010324(v110, (uint64_t)qword_10170E3C8);
    uint64_t v111 = v122;
    v130(v122, v59, v11);
    os_log_t v112 = Logger.logObject.getter();
    os_log_type_t v113 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v112, v113))
    {
      uint64_t v114 = swift_slowAlloc();
      uint64_t v136 = swift_slowAlloc();
      *(_DWORD *)uint64_t v114 = 141558275;
      uint64_t v134 = 1752392040;
      uint64_t v132 = (uint64_t *)v56;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v114 + 12) = 2081;
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v115 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v134 = sub_1008FA0F0(v115, v116, &v136);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v132)(v111, v11);
      _os_log_impl((void *)&_mh_execute_header, v112, v113, "didStopPlayingSoundOnDevice %{private,mask.hash}s succeeded", (uint8_t *)v114, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v56(v111, v11);
    }

    PassthroughSubject.send(_:)();
    uint64_t v136 = 4;
    PassthroughSubject.send(completion:)();
    swift_release();
  }
}

void sub_100842CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v113 = a2;
  uint64_t v5 = sub_10000588C(&qword_10163CBC8);
  __chkstk_darwin(v5 - 8);
  uint64_t v117 = (uint64_t)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  os_log_t v118 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v109 = (char *)&v104 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v110 = (char *)&v104 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v104 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  os_log_t v112 = (char *)&v104 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v111 = (char *)&v104 - v24;
  __chkstk_darwin(v23);
  uint64_t v114 = (char *)&v104 - v25;
  uint64_t v26 = type metadata accessor for DispatchPredicate();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (uint64_t *)((char *)&v104 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = *(void **)(v3 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue);
  *uint64_t v29 = v30;
  (*(void (**)(void *, void, uint64_t))(v27 + 104))(v29, enum case for DispatchPredicate.onQueue(_:), v26);
  id v31 = v30;
  uint64_t v32 = _dispatchPreconditionTest(_:)();
  uint64_t v34 = *(void (**)(void *, uint64_t))(v27 + 8);
  uint64_t v33 = v27 + 8;
  v34(v29, v26);
  if ((v32 & 1) == 0)
  {
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v115 = v3;
  sub_100ACCD98(a1, (uint64_t)v122);
  uint64_t v35 = v123;
  uint64_t v119 = a1;
  if (!v123)
  {
    uint64_t v32 = a1;
    sub_10001DAB4((uint64_t)v122, (uint64_t *)&unk_10163BBE0);
    uint64_t v33 = v10;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_10:
    sub_10001DAB4((uint64_t)v9, &qword_101638CF0);
    if (qword_101636CF8 == -1)
    {
LABEL_11:
      uint64_t v60 = type metadata accessor for Logger();
      sub_100010324(v60, (uint64_t)qword_10170E3C8);
      unint64_t v116 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
      v116(v20, v32, v33);
      os_log_type_t v61 = Logger.logObject.getter();
      os_log_type_t v62 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v61, v62))
      {
        uint64_t v63 = swift_slowAlloc();
        uint64_t v64 = swift_slowAlloc();
        *(_DWORD *)uint64_t v63 = 141558275;
        uint64_t v121 = 1752392040;
        v122[0] = v64;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v63 + 12) = 2081;
        sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v65 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v121 = sub_1008FA0F0(v65, v66, v122);
        uint64_t v32 = v119;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v114 = *(char **)(v11 + 8);
        ((void (*)(char *, uint64_t))v114)(v20, v33);
        _os_log_impl((void *)&_mh_execute_header, v61, v62, "didCompletePlayingSoundOnDevice %{private,mask.hash}s", (uint8_t *)v63, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v114 = *(char **)(v11 + 8);
        ((void (*)(char *, uint64_t))v114)(v20, v33);
      }

      uint64_t v59 = v118;
      uint64_t v40 = v115;
      goto LABEL_15;
    }
LABEL_42:
    swift_once();
    goto LABEL_11;
  }
  uint64_t v36 = v124;
  sub_10001CD44(v122, v123);
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v36 + 192);
  uint64_t v38 = v36;
  uint64_t v32 = v119;
  v37(v35, v38);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v122);
  uint64_t v33 = v10;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    goto LABEL_10;
  }
  os_log_t v39 = v114;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v114, v9, v10);
  uint64_t v40 = v115;
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v41 = type metadata accessor for Logger();
  sub_100010324(v41, (uint64_t)qword_10170E3C8);
  os_log_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v43 = v111;
  v42(v111, v32, v33);
  os_log_type_t v44 = v112;
  unint64_t v116 = v42;
  v42(v112, (uint64_t)v39, v33);
  int v45 = Logger.logObject.getter();
  os_log_type_t v46 = static os_log_type_t.default.getter();
  int v47 = v46;
  if (os_log_type_enabled(v45, v46))
  {
    BOOL v48 = v43;
    uint64_t v49 = swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    uint64_t v107 = v50;
    *(_DWORD *)uint64_t v49 = 141558531;
    uint64_t v121 = 1752392040;
    v122[0] = v50;
    uint64_t v108 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v49 + 12) = 2081;
    uint64_t v105 = v49 + 14;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    os_log_t v106 = v45;
    unint64_t v51 = v48;
    uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v121 = sub_1008FA0F0(v52, v53, v122);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    LODWORD(v105) = v47;
    unint64_t v54 = *(void (**)(char *, uint64_t))(v108 + 8);
    v54(v51, v33);
    *(_WORD *)(v49 + 22) = 2082;
    uint64_t v32 = v119;
    uint64_t v55 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v121 = sub_1008FA0F0(v55, v56, v122);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v54(v44, v33);
    os_log_t v57 = v106;
    _os_log_impl((void *)&_mh_execute_header, v106, (os_log_type_t)v105, "didCompletePlayingSoundOnDevice %{private,mask.hash}s. groupId %{public}s", (uint8_t *)v49, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v58 = v114;
    uint64_t v114 = (char *)v54;
    v54(v58, v33);
  }
  else
  {

    uint64_t v98 = *(void (**)(char *, uint64_t))(v11 + 8);
    v98(v44, v33);
    v98(v43, v33);
    uint64_t v114 = (char *)v98;
    v98(v39, v33);
  }
  uint64_t v59 = v118;
LABEL_15:
  uint64_t v67 = v117;
  unint64_t v68 = (uint64_t *)(v40 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_coordinators);
  swift_beginAccess();
  uint64_t v69 = *v68;
  if (!*(void *)(v69 + 16))
  {
    uint64_t v77 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v67, 1, 1, v77);
LABEL_21:
    sub_10001DAB4(v67, &qword_10163CBC8);
    if (qword_101636CF8 != -1) {
      swift_once();
    }
    uint64_t v78 = type metadata accessor for Logger();
    sub_100010324(v78, (uint64_t)qword_10170E3C8);
    v116(v59, v32, v33);
    uint64_t v79 = Logger.logObject.getter();
    os_log_type_t v80 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      *(_DWORD *)uint64_t v81 = 141558275;
      uint64_t v120 = 1752392040;
      uint64_t v121 = v82;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v81 + 12) = 2081;
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v83 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v120 = sub_1008FA0F0(v83, v84, &v121);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v114)(v59, v33);
      unint64_t v85 = "didCompletePlayingSoundOnDevice called with unknown device %{private,mask.hash}s";
LABEL_25:
      _os_log_impl((void *)&_mh_execute_header, v79, v80, v85, (uint8_t *)v81, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
LABEL_28:

      return;
    }
    uint64_t v86 = v59;
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  unint64_t v70 = sub_1007240CC(v32);
  if (v71)
  {
    unint64_t v72 = v70;
    uint64_t v73 = *(void *)(v69 + 56);
    uint64_t v74 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
    uint64_t v75 = *(void *)(v74 - 8);
    uint64_t v76 = v73 + *(void *)(v75 + 72) * v72;
    uint64_t v67 = v117;
    sub_10084B940(v76, v117, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v75 + 56))(v67, 0, 1, v74);
    uint64_t v59 = v118;
  }
  else
  {
    uint64_t v74 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v67, 1, 1, v74);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 48))(v67, 1, v74) == 1) {
    goto LABEL_21;
  }
  sub_10001DAB4(v67, &qword_10163CBC8);
  sub_100829E80(v32, 0, 0);
  uint64_t v87 = v113;
  if (!v113)
  {
    if (qword_101636CF8 != -1) {
      swift_once();
    }
    uint64_t v99 = type metadata accessor for Logger();
    sub_100010324(v99, (uint64_t)qword_10170E3C8);
    uint64_t v100 = v109;
    v116(v109, v119, v33);
    uint64_t v79 = Logger.logObject.getter();
    os_log_type_t v80 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = swift_slowAlloc();
      uint64_t v101 = swift_slowAlloc();
      *(_DWORD *)uint64_t v81 = 141558275;
      uint64_t v120 = 1752392040;
      uint64_t v121 = v101;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v81 + 12) = 2081;
      sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v102 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v120 = sub_1008FA0F0(v102, v103, &v121);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v114)(v100, v33);
      unint64_t v85 = "didCompletePlayingSoundOnDevice %{private,mask.hash}s succeeded";
      goto LABEL_25;
    }
    uint64_t v86 = v100;
LABEL_27:
    ((void (*)(char *, uint64_t))v114)(v86, v33);
    goto LABEL_28;
  }
  swift_errorRetain();
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v88 = type metadata accessor for Logger();
  sub_100010324(v88, (uint64_t)qword_10170E3C8);
  os_log_type_t v89 = v110;
  v116(v110, v119, v33);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v90 = Logger.logObject.getter();
  os_log_type_t v91 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v90, v91))
  {
    uint64_t v92 = swift_slowAlloc();
    uint64_t v93 = swift_slowAlloc();
    uint64_t v119 = v93;
    *(_DWORD *)uint64_t v92 = 141558531;
    uint64_t v120 = 1752392040;
    uint64_t v121 = v93;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v92 + 12) = 2081;
    sub_10084B9A8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v94 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v120 = sub_1008FA0F0(v94, v95, &v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v114)(v89, v33);
    *(_WORD *)(v92 + 22) = 2082;
    uint64_t v120 = v87;
    swift_errorRetain();
    sub_10000588C(&qword_101638D40);
    uint64_t v96 = String.init<A>(describing:)();
    uint64_t v120 = sub_1008FA0F0(v96, v97, &v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v90, v91, "didCompletePlayingSoundOnDevice %{private,mask.hash}s failed due to %{public}s", (uint8_t *)v92, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    ((void (*)(char *, uint64_t))v114)(v89, v33);
    swift_errorRelease();
    swift_errorRelease();
  }
}

unint64_t SPBeaconTaskState.description.getter(uint64_t a1)
{
  uint64_t v1 = a1 + 1;
  unint64_t result = 0x676E696E6E75722ELL;
  switch(v1)
  {
    case 0:
      unint64_t result = 0x6E776F6E6B6E752ELL;
      break;
    case 1:
      return result;
    case 2:
      unint64_t result = 0x676E69646E65702ELL;
      break;
    case 3:
      unint64_t result = 0x656C64692ELL;
      break;
    case 4:
      unint64_t result = 0x726F7272652ELL;
      break;
    case 5:
      unint64_t result = 0x6465756575712ELL;
      break;
    default:
      unint64_t result = 0xD000000000000010;
      break;
  }
  return result;
}

unint64_t sub_100843F28()
{
  return SPBeaconTaskState.description.getter(*v0);
}

uint64_t type metadata accessor for SoundPlaybackManager()
{
  return self;
}

void *sub_100843F54(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    uint64_t v10 = a3[8];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_retain();
    v14(v11, v12, v13);
    uint64_t v15 = a3[9];
    uint64_t v16 = *(void *)((char *)a2 + v15);
    swift_errorRetain();
    *(void *)((char *)a1 + v15) = v16;
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  }
  return a1;
}

uint64_t sub_1008440D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_errorRelease();
}

uint64_t sub_1008441C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_retain();
  v13(v10, v11, v12);
  uint64_t v14 = a3[9];
  uint64_t v15 = *(void *)(a2 + v14);
  swift_errorRetain();
  *(void *)(a1 + v14) = v15;
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1008442F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  uint64_t v8 = a3[8];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = a3[9];
  uint64_t v13 = *(void *)(a2 + v12);
  swift_errorRetain();
  *(void *)(a1 + v12) = v13;
  swift_errorRelease();
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_100844424(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  return a1;
}

uint64_t sub_10084452C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_release();
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_errorRelease();
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_100844648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10084465C);
}

uint64_t sub_10084465C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 32);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_100844788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10084479C);
}

uint64_t sub_10084479C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 32);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for SoundPlaybackManager.PlaybackCoordinator()
{
  uint64_t result = qword_10164EEB8;
  if (!qword_10164EEB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100844914()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t *assignWithTake for SoundPlaybackManager.SoundPlaybackManagerError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_errorRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_errorRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SoundPlaybackManager.SoundPlaybackManagerError(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SoundPlaybackManager.SoundPlaybackManagerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SoundPlaybackManager.SoundPlaybackManagerError()
{
  return &type metadata for SoundPlaybackManager.SoundPlaybackManagerError;
}

uint64_t sub_100844B20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_10163CBC8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v52 - v8;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v14 - 8);
  uint64_t v63 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = a1;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v54 = a1 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  uint64_t v20 = (uint64_t *)(a2 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_coordinators);
  swift_bridgeObjectRetain();
  uint64_t v67 = v20;
  uint64_t result = swift_beginAccess();
  int64_t v22 = 0;
  uint64_t v61 = v11;
  os_log_type_t v62 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v59 = v11 + 48;
  uint64_t v60 = v11 + 16;
  os_log_t v57 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v58 = v10;
  int64_t v55 = (unint64_t)(v17 + 63) >> 6;
  unint64_t v56 = (void (**)(unint64_t, uint64_t))(v11 + 8);
  uint64_t v65 = v9;
  unint64_t v68 = v13;
  unint64_t v53 = v7;
  while (1)
  {
    if (v19)
    {
      unint64_t v25 = __clz(__rbit64(v19));
      uint64_t v66 = (v19 - 1) & v19;
      int64_t v26 = v22;
      unint64_t v27 = v25 | (v22 << 6);
      uint64_t v28 = v63;
      goto LABEL_24;
    }
    int64_t v29 = v22 + 1;
    uint64_t v28 = v63;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v29 >= v55) {
      goto LABEL_38;
    }
    unint64_t v30 = *(void *)(v54 + 8 * v29);
    int64_t v31 = v22 + 1;
    if (!v30)
    {
      int64_t v31 = v22 + 2;
      if (v22 + 2 >= v55) {
        goto LABEL_38;
      }
      unint64_t v30 = *(void *)(v54 + 8 * v31);
      if (!v30)
      {
        int64_t v31 = v22 + 3;
        if (v22 + 3 >= v55) {
          goto LABEL_38;
        }
        unint64_t v30 = *(void *)(v54 + 8 * v31);
        if (!v30)
        {
          int64_t v31 = v22 + 4;
          if (v22 + 4 >= v55) {
            goto LABEL_38;
          }
          unint64_t v30 = *(void *)(v54 + 8 * v31);
          if (!v30) {
            break;
          }
        }
      }
    }
LABEL_23:
    uint64_t v66 = (v30 - 1) & v30;
    int64_t v26 = v31;
    unint64_t v27 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_24:
    uint64_t v33 = v61;
    uint64_t v34 = *(void *)(v61 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v61 + 16))(v28, *(void *)(v64 + 48) + v34 * v27, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v28, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v28, 1, v10) == 1) {
      return swift_release();
    }
    (*v57)(v13, v28, v10);
    uint64_t v35 = *v67;
    if (*(void *)(*v67 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v36 = sub_1007240CC((uint64_t)v13);
      if (v37)
      {
        unint64_t v38 = v36;
        uint64_t v39 = *(void *)(v35 + 56);
        uint64_t v40 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
        uint64_t v41 = *(void *)(v40 - 8);
        uint64_t v42 = v39 + *(void *)(v41 + 72) * v38;
        uint64_t v9 = v65;
        sub_10084B940(v42, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v9, 0, 1, v40);
        uint64_t v7 = v53;
      }
      else
      {
        uint64_t v40 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
        uint64_t v9 = v65;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v65, 1, 1, v40);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v40 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v9, 1, 1, v40);
    }
    type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
    uint64_t v43 = *(void *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v9, 1, v40))
    {
      sub_10001DAB4((uint64_t)v9, &qword_10163CBC8);
    }
    else
    {
      swift_retain();
      sub_10001DAB4((uint64_t)v9, &qword_10163CBC8);
      dispatch thunk of DispatchWorkItem.cancel()();
      swift_release();
    }
    os_log_type_t v44 = v67;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    unint64_t v45 = sub_1007240CC((uint64_t)v68);
    char v47 = v46;
    swift_bridgeObjectRelease();
    if (v47)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v49 = *v44;
      uint64_t v69 = *v44;
      *os_log_type_t v44 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100E80BEC();
        uint64_t v49 = v69;
      }
      unint64_t v50 = *(void *)(v49 + 48) + v45 * v34;
      uint64_t v24 = (uint64_t (**)(uint64_t, uint64_t))v56;
      uint64_t v10 = v58;
      (*v56)(v50, v58);
      uint64_t v51 = v69;
      sub_100849DCC(*(void *)(v69 + 56) + *(void *)(v43 + 72) * v45, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      sub_100167D74(v45, v51);
      *os_log_type_t v44 = v51;
      swift_bridgeObjectRelease();
      uint64_t v23 = 0;
    }
    else
    {
      uint64_t v23 = 1;
      uint64_t v10 = v58;
      uint64_t v24 = (uint64_t (**)(uint64_t, uint64_t))v56;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v7, v23, 1, v40);
    sub_10001DAB4((uint64_t)v7, &qword_10163CBC8);
    swift_endAccess();
    uint64_t v13 = v68;
    uint64_t result = (*v24)((uint64_t)v68, v10);
    int64_t v22 = v26;
    uint64_t v9 = v65;
    unint64_t v19 = v66;
  }
  uint64_t v32 = v22 + 5;
  if (v22 + 5 >= v55)
  {
LABEL_38:
    (*v62)(v63, 1, 1, v10);
    return swift_release();
  }
  unint64_t v30 = *(void *)(v54 + 8 * v32);
  if (v30)
  {
    int64_t v31 = v22 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v31 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v31 >= v55) {
      goto LABEL_38;
    }
    unint64_t v30 = *(void *)(v54 + 8 * v31);
    ++v32;
    if (v30) {
      goto LABEL_23;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100845264(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v29 = a3;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v26 = a1 + 56;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  uint64_t v31 = v5 + 16;
  uint64_t v32 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v30 = v5 + 48;
  int64_t v27 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v28 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  uint64_t v33 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  if (!v14) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(void *)(v33 + 48) + *(void *)(v5 + 72) * i, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
      return swift_release();
    }
    (*v28)(v7, v10, v4);
    sub_1008476D4();
    uint64_t v22 = swift_allocError();
    unint64_t v23 = v29;
    *uint64_t v24 = v29;
    sub_100847D28(v23);
    sub_100829E80((uint64_t)v7, 0, v22);
    swift_errorRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v27) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v26 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v27) {
        goto LABEL_24;
      }
      unint64_t v20 = *(void *)(v26 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v27) {
          goto LABEL_24;
        }
        unint64_t v20 = *(void *)(v26 + 8 * v16);
        if (!v20)
        {
          int64_t v16 = v19 + 3;
          if (v19 + 3 >= v27) {
            goto LABEL_24;
          }
          unint64_t v20 = *(void *)(v26 + 8 * v16);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v14 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 4;
  if (v21 >= v27)
  {
LABEL_24:
    (*v32)(v10, 1, 1, v4);
    return swift_release();
  }
  unint64_t v20 = *(void *)(v26 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v27) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v26 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100845600(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1 + 56;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(a1 + 56);
  uint64_t v15 = a2 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_playSoundSubjects;
  swift_bridgeObjectRetain();
  uint64_t v30 = v15;
  uint64_t result = swift_beginAccess();
  int64_t v17 = 0;
  uint64_t v32 = v5 + 16;
  uint64_t v33 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v31 = v5 + 48;
  unint64_t v29 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  int64_t v27 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v28 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
  uint64_t v26 = v10;
  while (1)
  {
    if (v14)
    {
      unint64_t v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      int64_t v34 = v17;
      unint64_t v19 = v18 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v20 >= v27) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v11 + 8 * v20);
    int64_t v22 = v17 + 1;
    if (!v21)
    {
      int64_t v22 = v17 + 2;
      if (v17 + 2 >= v27) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v11 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = v17 + 3;
        if (v17 + 3 >= v27) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v11 + 8 * v22);
        if (!v21)
        {
          int64_t v22 = v17 + 4;
          if (v17 + 4 >= v27) {
            goto LABEL_28;
          }
          unint64_t v21 = *(void *)(v11 + 8 * v22);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v14 = (v21 - 1) & v21;
    int64_t v34 = v22;
    unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
LABEL_24:
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(void *)(a1 + 48) + *(void *)(v5 + 72) * v19, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
      return swift_release();
    }
    (*v29)(v7, v10, v4);
    if (*(void *)(*(void *)v30 + 16))
    {
      swift_bridgeObjectRetain();
      sub_1007240CC((uint64_t)v7);
      if (v24)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v35 = 4;
        PassthroughSubject.send(completion:)();
        uint64_t v10 = v26;
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    sub_100829E80((uint64_t)v7, 0, 0);
    uint64_t result = (*v28)(v7, v4);
    int64_t v17 = v34;
  }
  uint64_t v23 = v17 + 5;
  if (v17 + 5 >= v27)
  {
LABEL_28:
    (*v33)(v10, 1, 1, v4);
    return swift_release();
  }
  unint64_t v21 = *(void *)(v11 + 8 * v23);
  if (v21)
  {
    int64_t v22 = v17 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v22 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v22 >= v27) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v11 + 8 * v22);
    ++v23;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_100845A10(uint64_t a1, uint64_t a2, int a3)
{
  int v25 = a3;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v23 = a1 + 56;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v27 = v5 + 16;
  uint64_t v28 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v26 = v5 + 48;
  uint64_t v29 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  v25 &= 1u;
  if (!v14) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(void *)(v29 + 48) + *(void *)(v5 + 72) * i, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
      return swift_release();
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_100829E80((uint64_t)v7, v25, 0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v24) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v24) {
        goto LABEL_24;
      }
      unint64_t v20 = *(void *)(v23 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v24) {
          goto LABEL_24;
        }
        unint64_t v20 = *(void *)(v23 + 8 * v16);
        if (!v20)
        {
          int64_t v16 = v19 + 3;
          if (v19 + 3 >= v24) {
            goto LABEL_24;
          }
          unint64_t v20 = *(void *)(v23 + 8 * v16);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v14 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 4;
  if (v21 >= v24)
  {
LABEL_24:
    (*v28)(v10, 1, 1, v4);
    return swift_release();
  }
  unint64_t v20 = *(void *)(v23 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v24) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100845D80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v27 = a1 + 56;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  uint64_t v29 = a2 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_stopSoundSubjects;
  uint64_t v34 = a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v16 = 0;
  int64_t v28 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v32 = v5 + 48;
  uint64_t v33 = v5 + 16;
  uint64_t v30 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
  uint64_t v31 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  uint64_t v26 = v10;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      int64_t v18 = v16;
      unint64_t v19 = v17 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v20 >= v28) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v27 + 8 * v20);
    int64_t v22 = v16 + 1;
    if (!v21)
    {
      int64_t v22 = v16 + 2;
      if (v16 + 2 >= v28) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v27 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = v16 + 3;
        if (v16 + 3 >= v28) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v27 + 8 * v22);
        if (!v21)
        {
          int64_t v22 = v16 + 4;
          if (v16 + 4 >= v28) {
            goto LABEL_28;
          }
          unint64_t v21 = *(void *)(v27 + 8 * v22);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v14 = (v21 - 1) & v21;
    int64_t v18 = v22;
    unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
LABEL_24:
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(void *)(v34 + 48) + *(void *)(v5 + 72) * v19, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
      return swift_release();
    }
    (*v31)(v7, v10, v4);
    if (*(void *)(*(void *)v29 + 16))
    {
      swift_bridgeObjectRetain();
      sub_1007240CC((uint64_t)v7);
      if (v24)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v35 = 4;
        PassthroughSubject.send(completion:)();
        uint64_t v10 = v26;
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    uint64_t result = (*v30)(v7, v4);
    int64_t v16 = v18;
  }
  uint64_t v23 = v16 + 5;
  if (v16 + 5 >= v28)
  {
LABEL_28:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
    return swift_release();
  }
  unint64_t v21 = *(void *)(v27 + 8 * v23);
  if (v21)
  {
    int64_t v22 = v16 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v22 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v27 + 8 * v22);
    ++v23;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

void *sub_100846178(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_101655530);
  __chkstk_darwin(v5 - 8);
  uint64_t v52 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for BeaconObservation();
  uint64_t v7 = *(void *)(v48 - 8);
  uint64_t v8 = __chkstk_darwin(v48);
  uint64_t v47 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v40 = (uint64_t)&v37 - v10;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v51 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v14 - 8);
  int64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17)
  {
    uint64_t v55 = v2;
    unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v18 = v12 + 16;
    uint64_t v20 = a1;
    uint64_t v21 = a1 + ((*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64));
    unint64_t v53 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 40);
    uint64_t v22 = *(void *)(v18 + 56);
    uint64_t v49 = (unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 32);
    unint64_t v50 = v19;
    unint64_t v45 = (void (**)(char *, char *, uint64_t))(v18 + 16);
    char v46 = (void (**)(size_t, uint64_t))(v18 - 8);
    uint64_t v37 = v20;
    uint64_t v38 = v7;
    uint64_t v42 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v43 = v22;
    swift_bridgeObjectRetain();
    uint64_t v54 = _swiftEmptyArrayStorage;
    uint64_t v39 = a2;
    uint64_t v23 = v18;
    uint64_t v44 = v11;
    while (1)
    {
      uint64_t v24 = v23;
      v50(v16, v21, v11);
      uint64_t v41 = *v53;
      v41(v16, 0, 1, v11);
      if ((*v49)(v16, 1, v11) == 1) {
        break;
      }
      uint64_t v25 = a2;
      size_t v26 = (size_t)v51;
      uint64_t v27 = v16;
      (*v45)(v51, v16, v11);
      uint64_t v28 = v52;
      uint64_t v29 = v55;
      sub_100818B08(v26, v25, v52);
      if (v29)
      {
        (*v46)(v26, v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v54;
      }
      (*v46)(v26, v11);
      int v30 = (*v42)(v28, 1, v48);
      uint64_t v55 = 0;
      if (v30 == 1)
      {
        sub_10001DAB4(v28, (uint64_t *)&unk_101655530);
        a2 = v25;
        int64_t v16 = v27;
      }
      else
      {
        uint64_t v31 = v40;
        sub_100849DCC(v28, v40, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        sub_100849DCC(v31, v47, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        int64_t v16 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v54 = (void *)sub_100A70BDC(0, v54[2] + 1, 1, (unint64_t)v54);
        }
        unint64_t v33 = v54[2];
        unint64_t v32 = v54[3];
        if (v33 >= v32 >> 1) {
          uint64_t v54 = (void *)sub_100A70BDC(v32 > 1, v33 + 1, 1, (unint64_t)v54);
        }
        uint64_t v34 = v54;
        v54[2] = v33 + 1;
        sub_100849DCC(v47, (uint64_t)v34+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v33, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        a2 = v39;
      }
      uint64_t v11 = v44;
      v21 += v43;
      --v17;
      uint64_t v23 = v24;
      if (!v17)
      {
        v41(v16, 1, 1, v44);
        break;
      }
    }
  }
  else
  {
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    swift_bridgeObjectRetain();
    uint64_t v54 = _swiftEmptyArrayStorage;
    v35(v16, 1, 1, v11);
  }
  swift_bridgeObjectRelease();
  return v54;
}

void *sub_100846694(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = a2;
  uint64_t v3 = sub_10000588C(&qword_10163CBC8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  uint64_t v6 = *(void *)(v52 - 8);
  uint64_t v7 = __chkstk_darwin(v52);
  uint64_t v42 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v41 = (uint64_t)&v40 - v9;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v14 - 8);
  int64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v45 = a1 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  uint64_t v21 = (uint64_t *)(v56 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_coordinators);
  uint64_t v56 = a1;
  swift_bridgeObjectRetain();
  uint64_t v51 = v21;
  uint64_t result = (void *)swift_beginAccess();
  int64_t v23 = 0;
  uint64_t v54 = v11 + 16;
  uint64_t v55 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v53 = v11 + 48;
  uint64_t v49 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  unint64_t v50 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v48 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v44 = v6;
  int64_t v46 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v47 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v43 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v20)
    {
      unint64_t v24 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v25 = v24 | (v23 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v26 >= v46) {
      goto LABEL_36;
    }
    unint64_t v27 = *(void *)(v45 + 8 * v26);
    ++v23;
    if (!v27)
    {
      int64_t v23 = v26 + 1;
      if (v26 + 1 >= v46) {
        goto LABEL_36;
      }
      unint64_t v27 = *(void *)(v45 + 8 * v23);
      if (!v27)
      {
        int64_t v23 = v26 + 2;
        if (v26 + 2 >= v46) {
          goto LABEL_36;
        }
        unint64_t v27 = *(void *)(v45 + 8 * v23);
        if (!v27)
        {
          int64_t v23 = v26 + 3;
          if (v26 + 3 >= v46) {
            goto LABEL_36;
          }
          unint64_t v27 = *(void *)(v45 + 8 * v23);
          if (!v27) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v20 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v23 << 6);
LABEL_22:
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v16, *(void *)(v56 + 48) + *(void *)(v11 + 72) * v25, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10) == 1) {
      goto LABEL_37;
    }
    (*v50)(v13, v16, v10);
    uint64_t v29 = *v51;
    if (*(void *)(*v51 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v30 = sub_1007240CC((uint64_t)v13);
      if (v31)
      {
        uint64_t v32 = v44;
        sub_10084B940(*(void *)(v29 + 56) + *(void *)(v44 + 72) * v30, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
        unint64_t v33 = *(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56);
        uint64_t v34 = v52;
        v33(v5, 0, 1, v52);
      }
      else
      {
        uint64_t v34 = v52;
        (*v49)(v5, 1, 1, v52);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v34 = v52;
      (*v49)(v5, 1, 1, v52);
    }
    (*v48)(v13, v10);
    if ((*v47)(v5, 1, v34) == 1)
    {
      uint64_t result = (void *)sub_10001DAB4((uint64_t)v5, &qword_10163CBC8);
    }
    else
    {
      uint64_t v35 = v41;
      sub_100849DCC((uint64_t)v5, v41, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      sub_100849DCC(v35, v42, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v43 = (void *)sub_100A7176C(0, v43[2] + 1, 1, (unint64_t)v43);
      }
      unint64_t v37 = v43[2];
      unint64_t v36 = v43[3];
      if (v37 >= v36 >> 1) {
        uint64_t v43 = (void *)sub_100A7176C(v36 > 1, v37 + 1, 1, (unint64_t)v43);
      }
      uint64_t v39 = v43;
      uint64_t v38 = v44;
      v43[2] = v37 + 1;
      uint64_t result = (void *)sub_100849DCC(v42, (uint64_t)v39+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v37, (uint64_t (*)(void))type metadata accessor for SoundPlaybackManager.PlaybackCoordinator);
    }
  }
  int64_t v28 = v26 + 4;
  if (v28 >= v46)
  {
LABEL_36:
    (*v55)(v16, 1, 1, v10);
LABEL_37:
    swift_release();
    return v43;
  }
  unint64_t v27 = *(void *)(v45 + 8 * v28);
  if (v27)
  {
    int64_t v23 = v28;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v23 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v23 >= v46) {
      goto LABEL_36;
    }
    unint64_t v27 = *(void *)(v45 + 8 * v23);
    ++v28;
    if (v27) {
      goto LABEL_21;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_100846CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_1016511E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WildModeAssociationRecord(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v47 = (uint64_t)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v14 - 8);
  uint64_t v60 = (char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v48 = a1 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v49 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v56 = v11 + 48;
  uint64_t v57 = v11 + 16;
  uint64_t v53 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v54 = OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_beaconStore;
  uint64_t v52 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  id v50 = (id)SPBeaconTypeHele;
  uint64_t v58 = v11;
  uint64_t v55 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  v45[2] = a2;
  uint64_t v46 = a1;
  uint64_t v51 = v13;
  while (1)
  {
    if (v19)
    {
      unint64_t v24 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      int64_t v64 = v21;
      unint64_t v25 = v24 | (v21 << 6);
      int64_t v26 = v60;
      goto LABEL_25;
    }
    int64_t v27 = v21 + 1;
    int64_t v26 = v60;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v27 >= v49) {
      goto LABEL_34;
    }
    unint64_t v28 = *(void *)(v48 + 8 * v27);
    int64_t v29 = v21 + 1;
    if (!v28)
    {
      int64_t v29 = v21 + 2;
      if (v21 + 2 >= v49) {
        goto LABEL_34;
      }
      unint64_t v28 = *(void *)(v48 + 8 * v29);
      if (!v28)
      {
        int64_t v29 = v21 + 3;
        if (v21 + 3 >= v49) {
          goto LABEL_34;
        }
        unint64_t v28 = *(void *)(v48 + 8 * v29);
        if (!v28)
        {
          int64_t v29 = v21 + 4;
          if (v21 + 4 >= v49) {
            goto LABEL_34;
          }
          unint64_t v28 = *(void *)(v48 + 8 * v29);
          if (!v28)
          {
            uint64_t v30 = v21 + 5;
            if (v21 + 5 >= v49)
            {
LABEL_34:
              uint64_t v44 = 1;
              (*v59)(v60, 1, 1, v10);
              swift_release();
              return v44;
            }
            unint64_t v28 = *(void *)(v48 + 8 * v30);
            if (!v28)
            {
              while (1)
              {
                int64_t v29 = v30 + 1;
                if (__OFADD__(v30, 1)) {
                  goto LABEL_40;
                }
                if (v29 >= v49) {
                  goto LABEL_34;
                }
                unint64_t v28 = *(void *)(v48 + 8 * v29);
                ++v30;
                if (v28) {
                  goto LABEL_24;
                }
              }
            }
            int64_t v29 = v21 + 5;
          }
        }
      }
    }
LABEL_24:
    unint64_t v19 = (v28 - 1) & v28;
    int64_t v64 = v29;
    unint64_t v25 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_25:
    uint64_t v31 = v58;
    (*(void (**)(char *, unint64_t, uint64_t))(v58 + 16))(v26, *(void *)(a1 + 48) + *(void *)(v58 + 72) * v25, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v26, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v26, 1, v10) == 1)
    {
      swift_release();
      return 1;
    }
    (*v53)(v13, v26, v10);
    sub_100AE381C((uint64_t)v13, (uint64_t)v6);
    if ((*v52)(v6, 1, v7) == 1)
    {
      uint64_t v32 = (uint64_t)v13;
      uint64_t v33 = v7;
      uint64_t v34 = v6;
      sub_10001DAB4((uint64_t)v6, &qword_1016511E0);
      sub_100ACCD98(v32, (uint64_t)v61);
      uint64_t v35 = v62;
      if (!v62)
      {
        sub_10001DAB4((uint64_t)v61, (uint64_t *)&unk_10163BBE0);
LABEL_36:
        (*v55)(v51, v10);
LABEL_37:
        swift_release();
        return 0;
      }
      uint64_t v36 = v63;
      sub_10001CD44(v61, v62);
      unint64_t v37 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v36 + 176))(v35, v36);
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v61);
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v40 = v39;
      if (v38 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v40 == v41) {
        char v22 = 1;
      }
      else {
        char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      id v23 = v50;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = v46;
      uint64_t v6 = v34;
      uint64_t v7 = v33;
    }
    else
    {
      uint64_t v42 = v47;
      sub_100849DCC((uint64_t)v6, v47, type metadata accessor for WildModeAssociationRecord);
      int v43 = *(unsigned __int8 *)(v42 + *(int *)(v7 + 52));
      sub_100849E34(v42, type metadata accessor for WildModeAssociationRecord);
      if (v43 == 4) {
        goto LABEL_36;
      }
      char v22 = v43 == 3;
    }
    uint64_t v13 = v51;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v55)(v51, v10);
    int64_t v21 = v64;
    if ((v22 & 1) == 0) {
      goto LABEL_37;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100847340(uint64_t *a1)
{
  return sub_100849EC4(a1) & 1;
}

uint64_t sub_10084735C()
{
  unint64_t v1 = (int *)(type metadata accessor for OwnedBeaconGroup(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7;
  unint64_t v13 = ((*(void *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v14 = v2 | v7 | 7;
  sub_10001CFB8(*(void *)(v0 + v3), *(void *)(v0 + v3 + 8));
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v0 + v3 + v1[8], v5);
  uint64_t v10 = v0 + v3 + v1[9];
  uint64_t v11 = type metadata accessor for MACAddress();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v9(v0 + v8, v5);
  swift_release();

  return _swift_deallocObject(v0, v13, v14);
}

uint64_t sub_10084754C()
{
  uint64_t v1 = *(void *)(type metadata accessor for OwnedBeaconGroup(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void **)(v0 + v3);
  double v8 = *(double *)(v0 + v4);
  uint64_t v9 = v0 + v6;
  uint64_t v10 = (uint64_t *)(v0 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  return sub_10082EF38(v0 + v2, v7, v9, v11, v12, v8);
}

uint64_t sub_100847664(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100847674()
{
  return swift_release();
}

uint64_t sub_10084767C(uint64_t a1)
{
  return sub_100830F14(a1, *(void *)(v1 + 16), *(char **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 48), *(double *)(v1 + 40));
}

uint64_t sub_1008476A4(uint64_t a1)
{
  return sub_100831FAC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1008476C4()
{
  return _swift_deallocObject(v0, 17, 7);
}

unint64_t sub_1008476D4()
{
  unint64_t result = qword_10164EF98;
  if (!qword_10164EF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164EF98);
  }
  return result;
}

uint64_t sub_100847728()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (int *)(type metadata accessor for OwnedBeaconGroup(0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v5 + v7 + 8) & ~v7;
  uint64_t v9 = v3 | v7 | 7;
  unint64_t v10 = (*(void *)(*(void *)v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v11 = v0 + v4;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v12(v11, v1);
  swift_release();
  sub_10001CFB8(*(void *)(v0 + v8), *(void *)(v0 + v8 + 8));
  v12(v0 + v8 + v6[8], v1);
  uint64_t v13 = v0 + v8 + v6[9];
  uint64_t v14 = type metadata accessor for MACAddress();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v10 + 8, v9);
}

void sub_100847914(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(type metadata accessor for OwnedBeaconGroup(0) - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = *(void *)(v1 + v5);
  uint64_t v11 = *(void **)(v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_100833008(a1, v8, v9, v1 + v4, v10, v1 + v7, v11);
}

uint64_t sub_100847A28()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = (int *)(type metadata accessor for OwnedBeaconGroup(0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v5 + v7 + 8) & ~v7;
  uint64_t v9 = v3 | v7 | 7;
  unint64_t v10 = (*(void *)(*(void *)v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = v0 + v4;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v12(v11, v1);
  swift_release();
  sub_10001CFB8(*(void *)(v0 + v8), *(void *)(v0 + v8 + 8));
  v12(v0 + v8 + v6[8], v1);
  uint64_t v13 = v0 + v8 + v6[9];
  uint64_t v14 = type metadata accessor for MACAddress();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v9);
}

void sub_100847C0C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(type metadata accessor for OwnedBeaconGroup(0) - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(unsigned char **)(v1 + v5);
  unint64_t v10 = *(void **)(v1 + v8);
  double v11 = *(double *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_100833350(a1, v1 + v4, v9, v1 + v7, v10, v11);
}

unint64_t sub_100847D28(unint64_t result)
{
  if (result >= 4) {
    return swift_errorRetain();
  }
  return result;
}

unint64_t sub_100847D38(unint64_t result)
{
  if (result >= 4) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100847D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_10164EF48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_100847DB0()
{
  return sub_100833F20();
}

uint64_t sub_100847DD0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100847E08()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100847EAC()
{
  return sub_100848F5C((uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t (*)(unint64_t, uint64_t))sub_100832CD4);
}

void sub_100847EDC(uint64_t a1)
{
}

uint64_t sub_100847F04(uint64_t a1)
{
  return sub_1008414EC(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100847F24()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_errorRelease();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_10084800C()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1008418A4(v0 + v2, *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10084809C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = *(void *)(v2 + 64);
  uint64_t v7 = v4 | 7;
  unint64_t v8 = (((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v4 + 16 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v4;
  uint64_t v10 = v9 + v6;
  v3(v0 + v5, v1);

  swift_release();
  v3(v0 + v9, v1);

  return _swift_deallocObject(v0, v10, v7);
}

uint64_t sub_100848194()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  double v7 = *(double *)(v0 + v4);
  unint64_t v8 = *(char **)(v0 + v5);
  uint64_t v9 = *(void *)(v0 + v6);
  uint64_t v10 = *(void *)(v0 + v6 + 8);

  return sub_10083B1A8((void (*)(uint64_t, void, uint64_t, int *))(v0 + v3), v8, v9, v10, (char *)(v0 + ((v2 + 16 + v6) & ~v2)), v7);
}

uint64_t sub_100848248(uint64_t a1)
{
  return sub_10083D654(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10084826C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1008482A4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100848394(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10083E05C(a1, v4, v5, v6);
}

void *sub_100848434(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v31 = a2;
  uint64_t v32 = a4;
  uint64_t v30 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v30 - 8);
  uint64_t v7 = __chkstk_darwin(v30);
  int64_t v29 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v28 = (char *)v26 - v9;
  uint64_t v10 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v10)
  {
    v26[0] = v4;
    uint64_t v34 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    unint64_t result = (void *)sub_10115FE18(a1);
    uint64_t v12 = v6;
    uint64_t v13 = (uint64_t)result;
    uint64_t v15 = v14;
    int v17 = v16 & 1;
    unsigned char v26[4] = v12;
    uint64_t v27 = a1 + 56;
    v26[2] = v12 + 32;
    v26[3] = v12 + 16;
    v26[1] = v12 + 8;
    uint64_t v18 = v12;
    unint64_t v19 = v29;
    while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(v27 + (((unint64_t)v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        goto LABEL_11;
      }
      if (*(_DWORD *)(a1 + 36) != v15) {
        goto LABEL_12;
      }
      uint64_t v20 = *(void *)(a1 + 48) + *(void *)(v18 + 72) * v13;
      int64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
      char v22 = v28;
      uint64_t v23 = v30;
      int v33 = v17;
      v21(v28, v20, v30);
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v19, v22, v23);
      v32(v19);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v23);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      unint64_t result = (void *)sub_10052CB9C(v13, v15, v33 & 1, a1);
      uint64_t v13 = (uint64_t)result;
      uint64_t v15 = v24;
      int v17 = v25 & 1;
      if (!--v10)
      {
        sub_1001A1CB8((uint64_t)result, v24, v17);
        return v34;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  return result;
}

BOOL sub_1008486BC(size_t a1)
{
  uint64_t v2 = type metadata accessor for BeaconObservation();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v34 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v32 - v6;
  if (qword_101636CB8 != -1) {
    goto LABEL_25;
  }
  while (1)
  {
    sub_10000588C(&qword_101655540);
    OS_dispatch_queue.sync<A>(execute:)();
    uint64_t v9 = v36;
    if (!v36[2] || (unint64_t v10 = sub_1007240CC(a1), (v11 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
      goto LABEL_18;
    }
    uint64_t v12 = *(void *)(v9[7] + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_1007100C0(v12);
    swift_bridgeObjectRelease();
    a1 = sub_100B752E8((uint64_t)v13);
    swift_release();
    uint64_t v14 = _swiftEmptyArrayStorage;
    uint64_t v36 = _swiftEmptyArrayStorage;
    uint64_t v15 = *(void *)(a1 + 16);
    if (!v15) {
      break;
    }
    uint64_t v32 = v8;
    unint64_t v16 = 0;
    int v17 = _swiftEmptyArrayStorage;
    uint64_t v33 = v3;
    while (v16 < *(void *)(a1 + 16))
    {
      unint64_t v18 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      uint64_t v19 = *(void *)(v3 + 72);
      sub_10084B940(a1 + v18 + v19 * v16, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      if (v7[*(int *)(v2 + 24)] == 22)
      {
        uint64_t v20 = v2;
        sub_100849DCC((uint64_t)v7, v34, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000B77F0(0, v17[2] + 1, 1);
        }
        int v17 = v36;
        unint64_t v22 = v36[2];
        unint64_t v21 = v36[3];
        if (v22 >= v21 >> 1)
        {
          sub_1000B77F0(v21 > 1, v22 + 1, 1);
          int v17 = v36;
        }
        void v17[2] = v22 + 1;
        sub_100849DCC(v34, (uint64_t)v17 + v18 + v22 * v19, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        uint64_t v2 = v20;
        uint64_t v3 = v33;
      }
      else
      {
        sub_100849E34((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      }
      if (v15 == ++v16)
      {
        uint64_t v14 = v36;
        uint64_t v8 = v32;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_25:
    swift_once();
  }
LABEL_17:
  swift_release();
LABEL_18:
  if (qword_101636CF8 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  sub_100010324(v23, (uint64_t)qword_10170E3C8);
  swift_bridgeObjectRetain_n();
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    int64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = (void *)swift_slowAlloc();
    *(_DWORD *)int64_t v26 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v27 = Array.description.getter();
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    uint64_t v35 = sub_1008FA0F0(v27, v29, (uint64_t *)&v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Found queueObservations %s", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v30 = v14[2];
  swift_bridgeObjectRelease();
  return v30 == 0;
}

uint64_t sub_100848B98(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BeaconObservation();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_101636CB8 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_10170E330;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, a1, v7);
  static Date.trustedNow.getter((uint64_t)&v5[*(int *)(v2 + 20)]);
  v5[*(int *)(v2 + 24)] = 22;
  sub_10000588C(&qword_10163A778);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_101342130;
  sub_10084B940((uint64_t)v5, v9 + v8, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
  uint64_t v10 = type metadata accessor for Transaction();
  __chkstk_darwin(v10);
  *(void *)&v12[-32] = v6;
  *(void *)&v12[-24] = v9;
  *(void *)&v12[-16] = 0;
  *(void *)&v12[-8] = 0;
  static Transaction.named<A>(_:with:)();
  swift_bridgeObjectRelease();
  return sub_100849E34((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
}

uint64_t sub_100848DC4()
{
  uint64_t v1 = (int *)(type metadata accessor for OwnedBeaconGroup(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  sub_10001CFB8(*(void *)(v0 + v3), *(void *)(v0 + v3 + 8));
  uint64_t v7 = v6 + v1[8];
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v6 + v1[9];
  uint64_t v10 = type metadata accessor for MACAddress();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_100848F30()
{
  return sub_100848F5C(type metadata accessor for OwnedBeaconGroup, (uint64_t (*)(unint64_t, uint64_t))sub_100825D34);
}

uint64_t sub_100848F5C(uint64_t (*a1)(void), uint64_t (*a2)(unint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v2 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a2(v2 + v4, v5);
}

uint64_t sub_100849004()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100849014(uint64_t a1)
{
  return sub_10084AF58(a1, (uint64_t (*)(uint64_t, void, void, void, void, double))sub_100825DA4);
}

uint64_t sub_100849040()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100849078()
{
  uint64_t v1 = (int *)(type metadata accessor for OwnedBeaconGroup(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7;
  unint64_t v13 = ((((*(void *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v14 = v2 | v7 | 7;
  sub_10001CFB8(*(void *)(v0 + v3), *(void *)(v0 + v3 + 8));
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v0 + v3 + v1[8], v5);
  uint64_t v10 = v0 + v3 + v1[9];
  uint64_t v11 = type metadata accessor for MACAddress();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v9(v0 + v8, v5);
  swift_release();

  return _swift_deallocObject(v0, v13, v14);
}

uint64_t sub_10084926C()
{
  uint64_t v1 = *(void *)(type metadata accessor for OwnedBeaconGroup(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = *(void **)(v0 + v3);
  double v9 = *(double *)(v0 + v4);
  uint64_t v10 = *(void *)(v0 + v7);
  uint64_t v11 = *(void *)(v0 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_100826270(v0 + v2, v8, v0 + v6, v10, v11, v9);
}

uint64_t sub_10084938C(uint64_t a1)
{
  return sub_10082897C(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1008493B0()
{
  sub_1008493EC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));

  return _swift_deallocObject(v0, 25, 7);
}

unint64_t sub_1008493EC(unint64_t result, char a2)
{
  if (a2) {
    return sub_100847D38(result);
  }
  return result;
}

uint64_t sub_1008493F8()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  unint64_t v6 = (v4 + v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = (v3 + v6 + 8) & ~v3;
  unint64_t v8 = (int *)(type metadata accessor for OwnedBeaconGroup(0) - 8);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)v8 + 80);
  uint64_t v10 = (v5 + v9 + v7) & ~v9;
  uint64_t v18 = v3 | v9 | 7;
  unint64_t v11 = ((((*(void *)(*(void *)v8 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v12 = v0 + v4;
  unint64_t v13 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v13(v12, v1);
  swift_release();

  v13(v0 + v7, v1);
  uint64_t v14 = v0 + v10;
  sub_10001CFB8(*(void *)v14, *(void *)(v14 + 8));
  v13(v14 + v8[8], v1);
  uint64_t v15 = v14 + v8[9];
  uint64_t v16 = type metadata accessor for MACAddress();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v11, v18);
}

unint64_t sub_100849620(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = *(void *)(v3 + 64);
  unint64_t v7 = (v5 + v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = (v4 + v7 + 8) & ~v4;
  uint64_t v9 = *(void *)(type metadata accessor for OwnedBeaconGroup(0) - 8);
  unint64_t v10 = (v6 + *(unsigned __int8 *)(v9 + 80) + v8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10082AB78(*(double *)(v1 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)), a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + v5, *(void *)(v1 + ((v5 + v6 + 7) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v5 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v1 + v7), v1 + v8, v1 + v10, *(void *)(v1 + v11));
}

uint64_t sub_100849774()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  unint64_t v5 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = (int *)(type metadata accessor for OwnedBeaconGroup(0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v7 + v5 + 8) & ~v7;
  uint64_t v9 = v3 | v7 | 7;
  uint64_t v10 = *(void *)(*(void *)v6 + 64) + v8 + 1;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v11 = v0 + v4;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v12(v11, v1);
  swift_release();
  sub_10001CFB8(*(void *)(v0 + v8), *(void *)(v0 + v8 + 8));
  v12(v0 + v8 + v6[8], v1);
  uint64_t v13 = v0 + v8 + v6[9];
  uint64_t v14 = type metadata accessor for MACAddress();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v10, v9);
}

void sub_100849960(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(type metadata accessor for OwnedBeaconGroup(0) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + v7 + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  sub_10082BD68(a1, *(double *)(v1 + v6), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + v7), v1 + v9, *(unsigned char *)(v1 + v9 + *(void *)(v8 + 64)));
}

uint64_t sub_100849A90()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  unint64_t v6 = (int *)(type metadata accessor for OwnedBeaconGroup(0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = v3 | v7 | 7;
  unint64_t v10 = ((((*(void *)(*(void *)v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;

  uint64_t v11 = v0 + v4;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v12(v11, v1);
  uint64_t v13 = v0 + v8;
  sub_10001CFB8(*(void *)v13, *(void *)(v13 + 8));
  v12(v13 + v6[8], v1);
  uint64_t v14 = v13 + v6[9];
  uint64_t v15 = type metadata accessor for MACAddress();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v10, v9);
}

uint64_t sub_100849C58()
{
  return sub_100839CDC();
}

unint64_t sub_100849D74(unint64_t result)
{
  if (result >= 7) {
    return 7;
  }
  return result;
}

uint64_t sub_100849D84()
{
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100849DCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100849E34(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100849E94(unint64_t result, char a2)
{
  if (a2) {
    return sub_100847D28(result);
  }
  return result;
}

void sub_100849EA4()
{
}

uint64_t sub_100849EC4(uint64_t *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *a1;
  uint64_t v4 = type metadata accessor for OwnedBeaconRecord();
  return sub_100DC7280(v2 + *(int *)(v4 + 20), v3) & 1;
}

uint64_t sub_100849F18()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = *(void *)(v2 + 64);
  uint64_t v7 = v4 | 7;
  uint64_t v8 = (v6 + v4 + v5) & ~v4;
  unint64_t v9 = (v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v3(v0 + v5, v1);
  v3(v0 + v8, v1);

  return _swift_deallocObject(v0, v9 + 8, v7);
}

void sub_100849FF0(uint64_t a1)
{
}

void sub_10084A018(uint64_t a1, const char *a2, uint64_t a3, const char *a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  sub_100840D84(a1, v4 + ((v10 + 16) & ~v10), v4 + ((*(void *)(v9 + 64) + v10 + ((v10 + 16) & ~v10)) & ~v10), *(void *)(v4+ ((*(void *)(v9 + 64) + ((*(void *)(v9 + 64) + v10 + ((v10 + 16) & ~v10)) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)), a2, a3, a4);
}

uint64_t sub_10084A0E0(uint64_t a1)
{
  return sub_10083EF08(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10084A100()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_errorRelease();

  return _swift_deallocObject(v0, v6, v5);
}

void sub_10084A1F0()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v0 + v2;
  uint64_t v4 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  Transaction.capture()();
  sub_10083F2D0(v3, v4);
}

void sub_10084A298()
{
  sub_100834D4C(*(void (**)())(v0 + 16));
}

void sub_10084A2B8()
{
  sub_100834D4C(*(void (**)())(v0 + 16));
}

void sub_10084A2D8()
{
  sub_100834D4C(*(void (**)())(v0 + 16));
}

uint64_t sub_10084A2F8()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = *(void *)(v2 + 64);
  uint64_t v7 = v4 | 7;
  unint64_t v8 = (((((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v4 + 16 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v4;
  uint64_t v10 = v9 + v6;
  v3(v0 + v5, v1);

  swift_release();
  v3(v0 + v9, v1);

  return _swift_deallocObject(v0, v10, v7);
}

uint64_t sub_10084A3F8()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v0 + v4);
  double v9 = *(double *)(v0 + v5);
  uint64_t v10 = *(void *)(v0 + v6);
  uint64_t v11 = *(void *)(v0 + v7);
  uint64_t v12 = *(void *)(v0 + v7 + 8);

  return sub_100834E08(v0 + v3, v8, v10, v11, v12, v0 + ((v2 + 16 + v7) & ~v2), v9);
}

void sub_10084A4BC()
{
}

uint64_t sub_10084A4DC(uint64_t a1)
{
  return sub_1008368F0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(double *)(v1 + 48));
}

void sub_10084A500()
{
  sub_100834D4C(*(void (**)())(v0 + 16));
}

uint64_t sub_10084A520()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

unint64_t sub_10084A620(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  double v8 = *(double *)(v1 + v5);
  unint64_t v9 = *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1008371EC(a1, v8, v6, v7, v1 + v4, v9);
}

uint64_t sub_10084A6D8()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10084A7A4()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100837864(v2, v3);
}

uint64_t sub_10084A808()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10084A818(uint64_t a1)
{
  return sub_10084AF58(a1, (uint64_t (*)(uint64_t, void, void, void, void, double))sub_1008379E8);
}

uint64_t sub_10084A844()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + 7;
  unint64_t v7 = (v3 + ((v6 + v4) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v3;
  unint64_t v8 = (((v6 + v7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  unint64_t v9 = v0 + v4;
  uint64_t v10 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  v10(v0 + v7, v1);
  swift_release();

  return _swift_deallocObject(v0, v8 + 8, v5);
}

uint64_t sub_10084A95C()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64) + 7;
  unint64_t v5 = (v4 + v3) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = (v2 + v5 + 8) & ~v2;
  unint64_t v7 = (v4 + v6) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = *(char **)(v0 + 16);
  double v9 = *(double *)(v0 + v5);
  uint64_t v10 = *(void *)(v0 + v7);
  uint64_t v11 = *(void *)(v0 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_100837E3C(v8, v0 + v3, (void *)(v0 + v6), v10, v11, v9);
}

uint64_t sub_10084AA18()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = *(void *)(v2 + 64);
  uint64_t v7 = v4 | 7;
  uint64_t v8 = (v6 + v4 + v5) & ~v4;
  unint64_t v9 = ((v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v3(v0 + v5, v1);
  v3(v0 + v8, v1);
  swift_release();

  return _swift_deallocObject(v0, v9, v7);
}

void sub_10084AAF0(uint64_t (*a1)(void), const char *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  sub_10083652C(v2 + ((v6 + 16) & ~v6), v2 + ((*(void *)(v5 + 64) + v6 + ((v6 + 16) & ~v6)) & ~v6), *(void *)(v2+ ((*(void *)(v5 + 64) + ((*(void *)(v5 + 64) + v6 + ((v6 + 16) & ~v6)) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)), a1, a2);
}

uint64_t sub_10084ABA0()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + 7;
  unint64_t v7 = (v3 + ((((v6 + v4) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v3;
  unint64_t v8 = (v6 + v7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  unint64_t v9 = v0 + v4;
  uint64_t v10 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  v10(v0 + v7, v1);
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, v8 + 8, v5);
}

void sub_10084ACC0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  unint64_t v6 = (*(void *)(v3 + 64) + 7 + v5) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  double v10 = *(double *)(v1 + v6);
  unint64_t v11 = *(void *)(v1 + v7);
  int v12 = *(unsigned __int8 *)(v1 + v7 + 8);

  sub_100839D84(a1, v10, v8, v9, v1 + v5, v11, v12, v1 + ((v4 + v7 + 9) & ~v4));
}

uint64_t sub_10084AD90()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = (v5 + v3 + v4) & ~v3;
  unint64_t v8 = ((((v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;

  uint64_t v9 = v0 + v4;
  double v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  v10(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v6);
}

uint64_t sub_10084AE98()
{
  return sub_100839CDC();
}

uint64_t sub_10084AF58(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, double))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 40), *(void *)(v2 + 48), *(double *)(v2 + 32));
}

uint64_t sub_10084AF88()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = v0 + v5;
  unint64_t v8 = (uint64_t *)(v0 + ((v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];

  return sub_10081ACF4(v6, v0 + v3, v7, v9, v10);
}

uint64_t sub_10084B02C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  unint64_t v7 = (v3 + ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v3;
  uint64_t v8 = v7 + v5;
  swift_release();
  unint64_t v9 = v0 + v4;
  uint64_t v10 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  swift_release();
  v10(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v6);
}

uint64_t sub_10084B138()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = v0 + v4;
  uint64_t v8 = *(void *)(v0 + v5);
  uint64_t v9 = *(void *)(v0 + v5 + 8);
  uint64_t v10 = v0 + ((v3 + v5 + 16) & ~v3);
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v11;
  *unint64_t v11 = v1;
  v11[1] = sub_100033F68;
  return sub_100622350(v6, v7, v8, v9, v10);
}

uint64_t sub_10084B26C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = (v5 + v3 + v4) & ~v3;
  unint64_t v8 = (v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;

  uint64_t v9 = v0 + v4;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  v10(v0 + v7, v1);
  swift_release();

  return _swift_deallocObject(v0, v8 + 16, v6);
}

uint64_t sub_10084B378()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;
  unint64_t v6 = (v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v0 + v3;
  uint64_t v8 = v0 + v5;
  uint64_t v10 = *(void *)(v0 + v6);
  uint64_t v9 = *(void *)(v0 + v6 + 8);
  sub_10001CD44((void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_findMyCommandManager), *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_findMyCommandManager + 24));
  return sub_10063B560(v7, v8, v10, v9);
}

uint64_t sub_10084B450()
{
  uint64_t v1 = (int *)type metadata accessor for OwnedBeaconRecord();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v20 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v19 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v18 = *(void *)(v4 + 64);

  uint64_t v21 = (v2 + 24) & ~v2;
  uint64_t v5 = v0 + v21;
  sub_10001CFB8(*(void *)v5, *(void *)(v5 + 8));
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v0 + v21 + v1[5], v3);
  uint64_t v7 = v0 + v21 + v1[6];
  type metadata accessor for StableIdentifier();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      goto LABEL_6;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 2u:
      v6(v7, v3);
      uint64_t v8 = v2;
      sub_10000588C(&qword_1016555E0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 3u:
      v6(v7, v3);
      uint64_t v8 = v2;
      sub_10000588C((uint64_t *)&unk_1016565E0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      uint64_t v2 = v8;
LABEL_6:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v9 = v5 + v1[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3)) {
    v6(v9, v3);
  }
  uint64_t v10 = v5 + v1[8];
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  sub_10001CFB8(*(void *)(v5 + v1[9]), *(void *)(v5 + v1[9] + 8));
  int v12 = (uint64_t *)(v5 + v1[10]);
  unint64_t v13 = v12[1];
  if (v13 >> 60 != 15) {
    sub_10001CFB8(*v12, v13);
  }
  uint64_t v14 = (uint64_t *)(v5 + v1[11]);
  unint64_t v15 = v14[1];
  if (v15 >> 60 != 15) {
    sub_10001CFB8(*v14, v15);
  }
  uint64_t v16 = (v21 + v20 + v19) & ~v19;
  sub_10001CFB8(*(void *)(v5 + v1[12]), *(void *)(v5 + v1[12] + 8));
  sub_10001CFB8(*(void *)(v5 + v1[13]), *(void *)(v5 + v1[13] + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6(v0 + v16, v3);
  swift_release();

  return _swift_deallocObject(v0, ((v18 + v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | v19 | 7);
}

uint64_t sub_10084B840()
{
  uint64_t v1 = *(void *)(type metadata accessor for OwnedBeaconRecord() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = v0 + v5;
  uint64_t v8 = (uint64_t *)(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];

  return sub_10081A868(v6, v0 + v2, v7, v9, v10);
}

uint64_t sub_10084B940(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10084B9A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SoundPlaybackManager.PlaybackState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10084BABCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SoundPlaybackManager.PlaybackState()
{
  return &type metadata for SoundPlaybackManager.PlaybackState;
}

unint64_t sub_10084BAF8()
{
  unint64_t result = qword_10164F050;
  if (!qword_10164F050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F050);
  }
  return result;
}

unint64_t sub_10084BB4C()
{
  unint64_t result = qword_10164F058;
  if (!qword_10164F058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F058);
  }
  return result;
}

BOOL sub_10084BBA0()
{
  return sub_100847DB0();
}

uint64_t sub_10084BCF8()
{
  return 20;
}

void *sub_10084BD00(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for MultipartAccessoryPairingInfo(0);
  uint64_t v75 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v72 = (uint64_t)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_10000588C(&qword_101639618);
  uint64_t v8 = __chkstk_darwin(v84);
  char v71 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v74 = (uint64_t *)((char *)&v66 - v11);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (uint64_t *)((char *)&v66 - v13);
  __chkstk_darwin(v12);
  uint64_t v73 = (uint64_t *)((char *)&v66 - v15);
  uint64_t v16 = *(void *)(a2 + 64);
  uint64_t v68 = a2 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v69 = (unint64_t)(v17 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v76 = a2;
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  unint64_t v70 = v14;
  while (1)
  {
    if (v19)
    {
      uint64_t v77 = (v19 - 1) & v19;
      int64_t v78 = v20;
      unint64_t v21 = __clz(__rbit64(v19)) | (v20 << 6);
      goto LABEL_21;
    }
    BOOL v22 = __OFADD__(v20, 1);
    int64_t v23 = v20 + 1;
    if (v22) {
      goto LABEL_54;
    }
    if (v23 >= v69) {
      break;
    }
    unint64_t v24 = *(void *)(v68 + 8 * v23);
    if (!v24)
    {
      int64_t v25 = v23 + 1;
      if (v23 + 1 >= v69) {
        break;
      }
      unint64_t v24 = *(void *)(v68 + 8 * v25);
      if (!v24)
      {
        int64_t v25 = v23 + 2;
        if (v23 + 2 >= v69) {
          break;
        }
        unint64_t v24 = *(void *)(v68 + 8 * v25);
        if (!v24)
        {
          int64_t v25 = v23 + 3;
          if (v23 + 3 >= v69) {
            break;
          }
          unint64_t v24 = *(void *)(v68 + 8 * v25);
          if (!v24)
          {
            int64_t v25 = v23 + 4;
            if (v23 + 4 >= v69) {
              break;
            }
            unint64_t v24 = *(void *)(v68 + 8 * v25);
            if (!v24)
            {
              while (1)
              {
                int64_t v23 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_58;
                }
                if (v23 >= v69) {
                  goto LABEL_50;
                }
                unint64_t v24 = *(void *)(v68 + 8 * v23);
                ++v25;
                if (v24) {
                  goto LABEL_20;
                }
              }
            }
          }
        }
      }
      int64_t v23 = v25;
    }
LABEL_20:
    uint64_t v77 = (v24 - 1) & v24;
    int64_t v78 = v23;
    unint64_t v21 = __clz(__rbit64(v24)) + (v23 << 6);
LABEL_21:
    uint64_t v26 = *(void *)(v76 + 56);
    uint64_t v27 = (uint64_t *)(*(void *)(v76 + 48) + 16 * v21);
    uint64_t v28 = *v27;
    unint64_t v29 = v27[1];
    uint64_t v79 = *(void *)(v75 + 72);
    uint64_t v30 = v84;
    uint64_t v31 = v73;
    sub_100036114(v26 + v79 * v21, (uint64_t)v73 + *(int *)(v84 + 48));
    *uint64_t v31 = v28;
    v31[1] = v29;
    sub_10001D608((uint64_t)v31, (uint64_t)v14, &qword_101639618);
    uint64_t v32 = *(int *)(v30 + 48);
    uint64_t v33 = v74;
    uint64_t v34 = (uint64_t)v74 + v32;
    uint64_t v35 = (uint64_t)v14 + v32;
    uint64_t v36 = *v14;
    unint64_t v37 = v14[1];
    uint64_t *v74 = *v14;
    v33[1] = v37;
    sub_100036114((uint64_t)v14 + v32, (uint64_t)v33 + v32);
    uint64_t v82 = (void *)v36;
    unint64_t v83 = v37;
    uint64_t v38 = 0;
    switch(v37 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v36), v36)) {
          goto LABEL_56;
        }
        uint64_t v38 = HIDWORD(v36) - (int)v36;
LABEL_26:
        sub_1000361E0(v36, v37);
        sub_1000361E0(v36, v37);
LABEL_27:
        BOOL v22 = __OFSUB__(20, v38);
        uint64_t v41 = 20 - v38;
        if (v22)
        {
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          JUMPOUT(0x10084C384);
        }
        if (v41)
        {
          if (v41 <= 14)
          {
            if (v41 < 0) {
              goto LABEL_55;
            }
            unint64_t v44 = (unint64_t)v41 << 48;
            sub_1000361E0(v28, v29);
            swift_bridgeObjectRetain();
            uint64_t v43 = 0;
          }
          else
          {
            uint64_t v67 = v3;
            type metadata accessor for __DataStorage();
            swift_allocObject();
            sub_1000361E0(v28, v29);
            swift_bridgeObjectRetain();
            uint64_t v42 = __DataStorage.init(length:)();
            if ((unint64_t)v41 >= 0x7FFFFFFF)
            {
              type metadata accessor for Data.RangeReference();
              uint64_t v43 = swift_allocObject();
              *(void *)(v43 + 16) = 0;
              *(void *)(v43 + 24) = v41;
              unint64_t v44 = v42 | 0x8000000000000000;
            }
            else
            {
              uint64_t v43 = v41 << 32;
              unint64_t v44 = v42 | 0x4000000000000000;
            }
            uint64_t v3 = v67;
          }
        }
        else
        {
          sub_1000361E0(v28, v29);
          swift_bridgeObjectRetain();
          uint64_t v43 = 0;
          unint64_t v44 = 0xC000000000000000;
        }
        uint64_t v80 = v43;
        unint64_t v81 = v44;
        sub_10072AD40(&v80, 0);
        uint64_t v45 = v80;
        unint64_t v46 = v81;
        Data.append(_:)();
        sub_10001CFB8(v45, v46);
        sub_10001CFB8(v36, v37);
        uint64_t v47 = (uint64_t)v82;
        unint64_t v48 = v83;
        Swift::String v49 = Data.base64EncodedString(options:)(0);
        sub_10001CFB8(v47, v48);
        sub_100036238(v34);
        uint64_t v50 = (uint64_t)&v71[*(int *)(v84 + 48)];
        sub_100036114(v35, v50);
        uint64_t v51 = v72;
        sub_10084EE10(v50, v72);
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v82 = a1;
        unint64_t v54 = sub_100723FF4(v49._countAndFlagsBits, (uint64_t)v49._object);
        uint64_t v55 = a1[2];
        BOOL v56 = (v53 & 1) == 0;
        uint64_t v57 = v55 + v56;
        if (__OFADD__(v55, v56)) {
          goto LABEL_52;
        }
        char v58 = v53;
        if (a1[3] >= v57)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_100E8540C();
          }
        }
        else
        {
          sub_100E73F4C(v57, isUniquelyReferenced_nonNull_native);
          uint64_t v59 = sub_100723FF4(v49._countAndFlagsBits, (uint64_t)v49._object);
          if ((v58 & 1) != (v60 & 1)) {
            goto LABEL_59;
          }
          unint64_t v54 = v59;
        }
        uint64_t v61 = v79;
        uint64_t v62 = v82;
        if (v58)
        {
          sub_10084EED4(v51, v82[7] + v54 * v79);
        }
        else
        {
          v82[(v54 >> 6) + 8] |= 1 << v54;
          *(Swift::String *)(v62[6] + 16 * v54) = v49;
          sub_10084EE10(v51, v62[7] + v54 * v61);
          uint64_t v63 = v62[2];
          BOOL v22 = __OFADD__(v63, 1);
          uint64_t v64 = v63 + 1;
          if (v22) {
            goto LABEL_53;
          }
          v62[2] = v64;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v14 = v70;
        sub_10084EE74((uint64_t)v70);
        swift_bridgeObjectRelease();
        a1 = v62;
        unint64_t v19 = v77;
        int64_t v20 = v78;
        break;
      case 2uLL:
        uint64_t v40 = *(void *)(v36 + 16);
        uint64_t v39 = *(void *)(v36 + 24);
        uint64_t v38 = v39 - v40;
        if (!__OFSUB__(v39, v40)) {
          goto LABEL_26;
        }
        goto LABEL_57;
      case 3uLL:
        goto LABEL_27;
      default:
        uint64_t v38 = BYTE6(v37);
        goto LABEL_27;
    }
  }
LABEL_50:
  swift_release();
  return a1;
}

unint64_t sub_10084C394(char a1)
{
  unint64_t result = 0x4E6E6F6973736573;
  switch(a1)
  {
    case 1:
      unint64_t result = 12645;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x74617453636E7973;
      break;
    case 4:
      unint64_t result = 1684628325;
      break;
    case 5:
      unint64_t result = 0x644970696863;
      break;
    case 6:
      unint64_t result = 0x754E6C6169726573;
      break;
    case 7:
      unint64_t result = 0x644974726170;
      break;
    case 8:
      unint64_t result = 0x6F636165426D756ELL;
      break;
    case 9:
      unint64_t result = 0xD000000000000012;
      break;
    case 10:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 11:
      unint64_t result = 0x6E55646572616873;
      break;
    case 12:
      unint64_t result = 0x314B64656573;
      break;
    case 13:
      unint64_t result = 0x7374726563;
      break;
    case 14:
      unint64_t result = 0x726F737365636361;
      break;
    case 15:
      unint64_t result = 0xD000000000000014;
      break;
    case 16:
      unint64_t result = 0xD000000000000011;
      break;
    case 17:
      unint64_t result = 0x69634572656E776FLL;
      break;
    case 18:
      unint64_t result = 0x69684372656E776FLL;
      break;
    case 19:
      unint64_t result = 0x7372655663657073;
      break;
    case 20:
      unint64_t result = 0x657261776D726966;
      break;
    case 21:
      unint64_t result = 0x49746375646F7270;
      break;
    case 22:
      unint64_t result = 0x6449726F646E6576;
      break;
    case 23:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10084C690(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000588C(&qword_10164F070);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_10084F7F0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  long long v12 = *v3;
  char v11 = 0;
  sub_100037BB4();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    long long v12 = v3[1];
    char v11 = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10001D608((uint64_t)(v3 + 2), (uint64_t)v13, &qword_101669360);
    sub_10001D608((uint64_t)v13, (uint64_t)&v12, &qword_101669360);
    char v11 = 2;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v12) = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    long long v12 = *(long long *)((char *)v3 + 56);
    char v11 = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v12 = *(long long *)((char *)v3 + 72);
    char v11 = 5;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v12 = *(long long *)((char *)v3 + 88);
    char v11 = 6;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v12) = 7;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 8;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    *(void *)&long long v12 = *((void *)v3 + 16);
    char v11 = 9;
    sub_10000588C((uint64_t *)&unk_10164DBD0);
    sub_10025F9B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    *(void *)&long long v12 = *((void *)v3 + 17);
    char v11 = 10;
    sub_10000588C(&qword_10164F080);
    sub_10084F844();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v12) = 11;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    long long v12 = v3[10];
    char v11 = 12;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v12 = v3[11];
    char v11 = 13;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v12 = v3[12];
    char v11 = 14;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v12 = v3[13];
    char v11 = 15;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v12) = 16;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12) = 17;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12) = 18;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12) = 19;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 20;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12) = 21;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12) = 22;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12) = 23;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_10084CCA0()
{
  return sub_10084C394(*v0);
}

uint64_t sub_10084CCA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10084FBB4(a1, a2);
  *a3 = result;
  return result;
}

void sub_10084CCD0(unsigned char *a1@<X8>)
{
  *a1 = 24;
}

uint64_t sub_10084CCDC(uint64_t a1)
{
  unint64_t v2 = sub_10084F7F0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10084CD18(uint64_t a1)
{
  unint64_t v2 = sub_10084F7F0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10084CD54(void *a1)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_10084C690(a1);
}

uint64_t sub_10084CDA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 256);
  unint64_t v7 = *(void *)(a1 + 264);
  uint64_t v9 = *(void *)(a1 + 32);
  unint64_t v8 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 104);
  unint64_t v10 = *(void *)(a1 + 112);
  uint64_t v12 = *(void *)(a1 + 120);
  unint64_t v13 = *(void *)(a1 + 128);
  unint64_t v79 = *(void *)(a1 + 144);
  uint64_t v80 = *(void *)(a1 + 136);
  unint64_t v70 = *(void *)(a1 + 248);
  uint64_t v71 = *(void *)(a1 + 240);
  sub_1000361E0(v71, v70);
  unint64_t v68 = v7;
  uint64_t v69 = v6;
  sub_1000361E0(v6, v7);
  uint64_t v67 = v9;
  unint64_t v65 = v8;
  sub_100037A38(v9, v8);
  uint64_t v73 = v11;
  unint64_t v63 = v10;
  sub_1000361E0(v11, v10);
  uint64_t v62 = v12;
  unint64_t v72 = v13;
  sub_1000361E0(v12, v13);
  sub_1000361E0(v80, v79);
  sub_1000362FC();
  uint64_t v64 = DataProtocol.intValue.getter();
  uint64_t v14 = *(void *)(a1 + 176);
  uint64_t v66 = *(void *)(a1 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = (void *)sub_10092F63C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v61 = sub_10084BD00(v15, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a1 + 208);
  unint64_t v17 = *(void *)(a1 + 24);
  uint64_t v77 = *(void *)(a1 + 16);
  unint64_t v78 = *(void *)(a1 + 216);
  uint64_t v18 = *(void *)a1;
  unint64_t v19 = *(void *)(a1 + 8);
  uint64_t v20 = *(void *)(a1 + 80);
  uint64_t v53 = *(void *)(a1 + 88);
  uint64_t v76 = *(void *)(a1 + 96);
  uint64_t v21 = *(void *)(a1 + 64);
  uint64_t v51 = *(void *)(a1 + 72);
  uint64_t v52 = *(void *)(a1 + 56);
  uint64_t v22 = *(void *)(a1 + 296);
  uint64_t v59 = *(void *)(a1 + 192);
  uint64_t v60 = *(void *)(a1 + 288);
  unint64_t v23 = *(void *)(a1 + 312);
  uint64_t v50 = *(void *)(a1 + 304);
  unint64_t v58 = *(void *)(a1 + 200);
  sub_1000361E0(v59, v58);
  sub_1000361E0(v16, v78);
  sub_1000361E0(v77, v17);
  unint64_t v56 = v19;
  uint64_t v57 = v18;
  sub_1000361E0(v18, v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v55 = v21;
  swift_bridgeObjectRetain();
  uint64_t v54 = v20;
  swift_bridgeObjectRetain();
  if (v23 >> 60 == 15)
  {
    uint64_t result = (uint64_t)sub_10084EAF0((uint64_t *)a1);
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = a3;
    uint64_t v30 = v64;
    uint64_t v31 = v61;
  }
  else
  {
    uint64_t v32 = sub_1002AA5D4(v50, v23);
    unint64_t v34 = v33;
    uint64_t v35 = Data.hexString.getter();
    uint64_t v48 = v36;
    uint64_t v49 = v35;
    sub_10001CFB8(v32, v34);
    switch(v23 >> 62)
    {
      case 1uLL:
        LODWORD(v37) = HIDWORD(v50) - v50;
        if (__OFSUB__(HIDWORD(v50), v50)) {
          goto LABEL_11;
        }
        uint64_t v37 = (int)v37;
LABEL_7:
        if (v37 < -1)
        {
          __break(1u);
LABEL_11:
          __break(1u);
LABEL_12:
          __break(1u);
          JUMPOUT(0x10084D198);
        }
LABEL_8:
        uint64_t v41 = Data.subdata(in:)();
        unint64_t v43 = v42;
        uint64_t v25 = Data.hexString.getter();
        uint64_t v26 = v44;
        sub_10084EAF0((uint64_t *)a1);
        uint64_t result = sub_10001CFB8(v41, v43);
        uint64_t v29 = a3;
        uint64_t v30 = v64;
        uint64_t v31 = v61;
        uint64_t v28 = v48;
        uint64_t v27 = v49;
        break;
      case 2uLL:
        uint64_t v39 = *(void *)(v50 + 16);
        uint64_t v38 = *(void *)(v50 + 24);
        BOOL v40 = __OFSUB__(v38, v39);
        uint64_t v37 = v38 - v39;
        if (!v40) {
          goto LABEL_7;
        }
        goto LABEL_12;
      default:
        goto LABEL_8;
    }
  }
  *(void *)a4 = v71;
  *(void *)(a4 + 8) = v70;
  *(void *)(a4 + 16) = v69;
  *(void *)(a4 + 24) = v68;
  *(void *)(a4 + 32) = v67;
  *(void *)(a4 + 40) = v65;
  *(void *)(a4 + 64) = v63;
  *(void *)(a4 + 72) = v62;
  *(void *)(a4 + 48) = 0;
  *(void *)(a4 + 56) = v73;
  uint64_t v45 = *(void *)(a1 + 152);
  *(void *)(a4 + 80) = v72;
  uint64_t v47 = *(void *)(a1 + 184);
  char v46 = *(unsigned char *)(a1 + 160);
  *(void *)(a4 + 88) = v80;
  *(void *)(a4 + 96) = v79;
  *(void *)(a4 + 104) = v30;
  *(void *)(a4 + 112) = v45;
  *(unsigned char *)(a4 + 120) = v46;
  *(void *)(a4 + 128) = v66;
  *(void *)(a4 + 136) = v31;
  *(void *)(a4 + 144) = v47;
  *(unsigned char *)(a4 + 152) = 0;
  *(void *)(a4 + 160) = v59;
  *(void *)(a4 + 168) = v58;
  *(void *)(a4 + 176) = v16;
  *(void *)(a4 + 184) = v78;
  *(void *)(a4 + 192) = v77;
  *(void *)(a4 + 200) = v17;
  *(void *)(a4 + 208) = v57;
  *(void *)(a4 + 216) = v56;
  *(void *)(a4 + 224) = v53;
  *(void *)(a4 + 232) = v76;
  *(void *)(a4 + 240) = v52;
  *(void *)(a4 + 248) = v55;
  *(void *)(a4 + 256) = v51;
  *(void *)(a4 + 264) = v54;
  *(void *)(a4 + 272) = 0x302E302E31;
  *(void *)(a4 + 280) = 0xE500000000000000;
  *(void *)(a4 + 288) = v60;
  *(void *)(a4 + 296) = v22;
  *(void *)(a4 + 304) = v27;
  *(void *)(a4 + 312) = v28;
  *(void *)(a4 + 320) = v25;
  *(void *)(a4 + 328) = v26;
  *(void *)(a4 + 336) = a2;
  *(void *)(a4 + 344) = v29;
  return result;
}

uint64_t sub_10084D1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[186] = a4;
  v4[185] = a3;
  v4[184] = a2;
  v4[183] = a1;
  uint64_t v5 = type metadata accessor for HashAlgorithm();
  v4[187] = v5;
  v4[188] = *(void *)(v5 - 8);
  v4[189] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Locale();
  v4[190] = v6;
  v4[191] = *(void *)(v6 - 8);
  v4[192] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Date();
  v4[193] = v7;
  v4[194] = *(void *)(v7 - 8);
  v4[195] = swift_task_alloc();
  return _swift_task_switch(sub_10084D32C, 0, 0);
}

void sub_10084D32C()
{
  unint64_t v1 = sub_10092D8F8((uint64_t)_swiftEmptyArrayStorage);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10016C0FC(1702195828, 0xE400000000000000, 0xD00000000000001BLL, 0x80000001013F64C0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v3 = [self currentDevice];
  if (!v3)
  {
    __break(1u);
    goto LABEL_13;
  }
  unsigned int v4 = v3;
  id v5 = [v3 serverFriendlyDescription];

  if (!v5)
  {
LABEL_13:
    __break(1u);
    return;
  }
  uint64_t v6 = v0[195];
  uint64_t v7 = v0[194];
  uint64_t v8 = v0[193];
  uint64_t v9 = v0[192];
  uint64_t v49 = v0[191];
  uint64_t v50 = v0[190];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  char v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_10016C0FC(v10, v12, 0xD000000000000011, 0x80000001013F64E0, v13);
  unint64_t v14 = v1;
  swift_bridgeObjectRelease();
  Date.init()();
  uint64_t v15 = Date.epoch.getter();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  v0[182] = v15;
  uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v18 = v17;
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  sub_10016C0FC(v16, v18, 0xD000000000000015, 0x80000001013F6500, v19);
  swift_bridgeObjectRelease();
  v0[180] = 1;
  uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v22 = v21;
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  sub_10016C0FC(v20, v22, 0xD000000000000013, 0x80000001013F6520, v23);
  unint64_t v24 = v14;
  uint64_t v25 = swift_bridgeObjectRelease();
  uint64_t v26 = sub_100BCABFC(v25);
  uint64_t v28 = v27;
  char v29 = swift_isUniquelyReferenced_nonNull_native();
  sub_10016C0FC(v26, v28, 0x6567412D72657355, 0xEA0000000000746ELL, v29);
  swift_bridgeObjectRelease();
  static Locale.current.getter();
  uint64_t v30 = Locale.acceptLanguageCode.getter();
  uint64_t v32 = v31;
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v9, v50);
  char v33 = swift_isUniquelyReferenced_nonNull_native();
  sub_10016C0FC(v30, v32, 0x4C2D747065636341, 0xEF65676175676E61, v33);
  unint64_t v34 = v24;
  swift_bridgeObjectRelease();
  if (qword_101637188 != -1) {
    swift_once();
  }
  uint64_t v35 = (void *)qword_10170EE68;
  id v36 = [self sharedInstance];
  unsigned int v37 = [v36 isInternalBuild];

  if (v37)
  {
    NSString v38 = String._bridgeToObjectiveC()();
    unsigned int v39 = [v35 BOOLForKey:v38];

    BOOL v40 = v0 + 134;
    uint64_t v41 = v0 + 2;
    if (v39)
    {
      char v42 = swift_isUniquelyReferenced_nonNull_native();
      sub_10016C0FC(0x7465722C6C616572, 0xEF302D726F727245, 0xD000000000000012, 0x80000001013F6560, v42);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    BOOL v40 = v0 + 134;
    uint64_t v41 = v0 + 2;
  }
  v0[196] = v34;
  uint64_t v43 = v0[185];
  uint64_t v44 = v0[184];
  uint64_t v45 = (uint64_t *)v0[183];
  sub_10084E77C(v45);
  sub_10084CDA8((uint64_t)v45, v44, v43, (uint64_t)v41);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  v0[197] = JSONEncoder.init()();
  memcpy(v40, v41, 0x160uLL);
  sub_10084E90C();
  uint64_t v46 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  v0[198] = v46;
  v0[199] = v47;
  sub_1000361E0(v46, v47);
  uint64_t v51 = (void (__cdecl *)())((char *)&dword_10165AB60 + dword_10165AB60);
  uint64_t v48 = (void *)swift_task_alloc();
  v0[200] = v48;
  *uint64_t v48 = v0;
  v48[1] = sub_10084DA00;
  v51();
}

uint64_t sub_10084DA00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1608) = a1;
  *(void *)(v3 + 1616) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_10084DB04, 0, 0);
}

uint64_t sub_10084DB04()
{
  unint64_t v1 = v0[202];
  uint64_t v2 = v0[201];
  unint64_t v3 = v0[199];
  uint64_t v4 = v0[198];
  uint64_t v5 = v0[189];
  uint64_t v6 = v0[188];
  uint64_t v7 = v0[187];
  v0[178] = v2;
  v0[179] = v1;
  sub_1000361E0(v4, v3);
  sub_1000361E0(v2, v1);
  sub_100A42CBC(v4, v3);
  sub_10001CFB8(v4, v3);
  sub_10001CFB8(v2, v1);
  v0[203] = v0[178];
  v0[204] = v0[179];
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for HashAlgorithm.sha256(_:), v7);
  uint64_t v8 = Data.hash(algorithm:)();
  uint64_t v10 = v9;
  v0[205] = v8;
  v0[206] = v9;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  unint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10165AB58 + dword_10165AB58);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[207] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_10084DCA0;
  uint64_t v12 = v0[186];
  return v14(v8, v10, v12);
}

uint64_t sub_10084DCA0(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 1664) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10084E274;
  }
  else
  {
    unint64_t v6 = v4[206];
    uint64_t v7 = v4[205];
    v4[209] = a1;
    sub_10001CFB8(v7, v6);
    uint64_t v5 = sub_10084DDD0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10084DDD0()
{
  char v42 = v0;
  uint64_t v1 = v0[209];
  uint64_t v2 = v0[208];
  unint64_t v3 = (unsigned char *)v0[196];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v41 = v3;
  sub_1001EE9C8(v1, (uint64_t)sub_100BD6E00, 0, isUniquelyReferenced_nonNull_native, &v41);
  if (v2)
  {
    return swift_bridgeObjectRelease();
  }
  unint64_t v6 = v0[204];
  uint64_t v35 = v0;
  uint64_t v7 = v0[203];
  uint64_t v8 = v41;
  swift_bridgeObjectRelease();
  sub_10001CFB8(v7, v6);
  static os_log_type_t.debug.getter();
  if (qword_101637308 != -1) {
LABEL_31:
  }
    swift_once();
  os_log(_:dso:log:_:_:)();
  id v36 = v8 + 64;
  uint64_t v9 = -1;
  uint64_t v10 = -1 << v8[32];
  if (-v10 < 64) {
    uint64_t v9 = ~(-1 << -(char)v10);
  }
  unint64_t v11 = v9 & *((void *)v8 + 8);
  int64_t v38 = (unint64_t)(63 - v10) >> 6;
  BOOL v40 = v8;
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  uint64_t v8 = &type metadata for String;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_10;
    }
    int64_t v24 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    if (v24 >= v38) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)&v36[8 * v24];
    ++v12;
    if (!v25)
    {
      int64_t v12 = v24 + 1;
      if (v24 + 1 >= v38) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)&v36[8 * v12];
      if (!v25)
      {
        int64_t v12 = v24 + 2;
        if (v24 + 2 >= v38) {
          goto LABEL_26;
        }
        unint64_t v25 = *(void *)&v36[8 * v12];
        if (!v25) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v14 = __clz(__rbit64(v25)) + (v12 << 6);
LABEL_10:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = (uint64_t *)(*((void *)v40 + 6) + v15);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    char v19 = (uint64_t *)(*((void *)v40 + 7) + v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    static os_log_type_t.debug.getter();
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_101347BA0;
    *(void *)(v22 + 56) = &type metadata for String;
    unint64_t v23 = sub_10000B4CC();
    *(void *)(v22 + 32) = v17;
    *(void *)(v22 + 40) = v18;
    *(void *)(v22 + 96) = &type metadata for String;
    *(void *)(v22 + 104) = v23;
    *(void *)(v22 + 64) = v23;
    *(void *)(v22 + 72) = v20;
    *(void *)(v22 + 80) = v21;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
  }
  int64_t v26 = v24 + 3;
  if (v26 < v38)
  {
    unint64_t v25 = *(void *)&v36[8 * v26];
    if (!v25)
    {
      while (1)
      {
        int64_t v12 = v26 + 1;
        if (__OFADD__(v26, 1)) {
          goto LABEL_30;
        }
        if (v12 >= v38) {
          goto LABEL_26;
        }
        unint64_t v25 = *(void *)&v36[8 * v12];
        ++v26;
        if (v25) {
          goto LABEL_25;
        }
      }
    }
    int64_t v12 = v26;
    goto LABEL_25;
  }
LABEL_26:
  uint64_t v37 = v35[198];
  unint64_t v39 = v35[199];
  uint64_t v27 = (uint64_t *)v35[183];
  swift_release();
  static os_log_type_t.debug.getter();
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_101342130;
  memcpy(v35 + 46, v35 + 2, 0x160uLL);
  sub_10084E960(v35 + 2);
  uint64_t v29 = String.init<A>(describing:)();
  uint64_t v31 = v30;
  *(void *)(v28 + 56) = &type metadata for String;
  *(void *)(v28 + 64) = sub_10000B4CC();
  *(void *)(v28 + 32) = v29;
  *(void *)(v28 + 40) = v31;
  os_log(_:dso:log:_:_:)();
  swift_release();
  sub_10084EAF0(v27);
  swift_bridgeObjectRelease();
  sub_10001CFB8(v37, v39);
  swift_release();
  sub_10084EC80(v35 + 2);
  uint64_t v32 = v35[199];
  uint64_t v33 = v35[198];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v34 = (uint64_t (*)(unsigned char *, uint64_t, uint64_t))v35[1];
  return v34(v40, v33, v32);
}

uint64_t sub_10084E274()
{
  unint64_t v1 = *(void *)(v0 + 1632);
  uint64_t v2 = *(void *)(v0 + 1624);
  sub_10001CFB8(*(void *)(v0 + 1640), *(void *)(v0 + 1648));
  sub_10001CFB8(v2, v1);
  static os_log_type_t.error.getter();
  unint64_t v3 = &qword_101637000;
  if (qword_101637308 != -1) {
LABEL_29:
  }
    swift_once();
  uint64_t v4 = *(void *)(v0 + 1664);
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_101342130;
  *(void *)(v0 + 1448) = v4;
  swift_errorRetain();
  sub_10000588C(&qword_101638D40);
  uint64_t v6 = String.init<A>(describing:)();
  uint64_t v8 = v7;
  *(void *)(v5 + 56) = &type metadata for String;
  unint64_t v9 = sub_10000B4CC();
  *(void *)(v5 + 64) = v9;
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = v8;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  uint64_t v35 = (void *)v0;
  uint64_t v10 = *(void *)(v0 + 1568);
  static os_log_type_t.debug.getter();
  if (v3[97] != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  uint64_t v36 = v10 + 64;
  uint64_t v11 = -1;
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  if (-v12 < 64) {
    uint64_t v11 = ~(-1 << -(char)v12);
  }
  unint64_t v13 = v11 & *(void *)(v10 + 64);
  int64_t v38 = (unint64_t)(63 - v12) >> 6;
  uint64_t v40 = v10;
  swift_bridgeObjectRetain();
  uint64_t v0 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v0 << 6);
      goto LABEL_8;
    }
    int64_t v24 = v0 + 1;
    if (__OFADD__(v0, 1))
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    if (v24 >= v38) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v36 + 8 * v24);
    ++v0;
    if (!v25)
    {
      uint64_t v0 = v24 + 1;
      if (v24 + 1 >= v38) {
        goto LABEL_24;
      }
      unint64_t v25 = *(void *)(v36 + 8 * v0);
      if (!v25)
      {
        uint64_t v0 = v24 + 2;
        if (v24 + 2 >= v38) {
          goto LABEL_24;
        }
        unint64_t v25 = *(void *)(v36 + 8 * v0);
        if (!v25) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v0 << 6);
LABEL_8:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v40 + 48) + v16);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v40 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v3 = (uint64_t *)static os_log_type_t.debug.getter();
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_101347BA0;
    *(void *)(v23 + 56) = &type metadata for String;
    *(void *)(v23 + 64) = v9;
    *(void *)(v23 + 32) = v18;
    *(void *)(v23 + 40) = v19;
    *(void *)(v23 + 96) = &type metadata for String;
    *(void *)(v23 + 104) = v9;
    *(void *)(v23 + 72) = v21;
    *(void *)(v23 + 80) = v22;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
  }
  int64_t v26 = v24 + 3;
  if (v26 < v38)
  {
    unint64_t v25 = *(void *)(v36 + 8 * v26);
    if (!v25)
    {
      while (1)
      {
        uint64_t v0 = v26 + 1;
        if (__OFADD__(v26, 1)) {
          goto LABEL_28;
        }
        if (v0 >= v38) {
          goto LABEL_24;
        }
        unint64_t v25 = *(void *)(v36 + 8 * v0);
        ++v26;
        if (v25) {
          goto LABEL_23;
        }
      }
    }
    uint64_t v0 = v26;
    goto LABEL_23;
  }
LABEL_24:
  uint64_t v37 = v35[198];
  unint64_t v39 = v35[199];
  unint64_t v34 = (uint64_t *)v35[183];
  swift_release();
  static os_log_type_t.debug.getter();
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_101342130;
  memcpy(v35 + 46, v35 + 2, 0x160uLL);
  sub_10084E960(v35 + 2);
  uint64_t v28 = String.init<A>(describing:)();
  *(void *)(v27 + 56) = &type metadata for String;
  *(void *)(v27 + 64) = v9;
  *(void *)(v27 + 32) = v28;
  *(void *)(v27 + 40) = v29;
  os_log(_:dso:log:_:_:)();
  swift_release();
  sub_10084EAF0(v34);
  swift_bridgeObjectRelease();
  sub_10001CFB8(v37, v39);
  swift_release();
  sub_10084EC80(v35 + 2);
  uint64_t v30 = v35[199];
  uint64_t v31 = v35[198];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v35[1];
  return v32(v40, v31, v30);
}

uint64_t *sub_10084E77C(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  uint64_t v6 = a1[13];
  unint64_t v7 = a1[14];
  unint64_t v9 = a1[16];
  uint64_t v10 = a1[15];
  unint64_t v11 = a1[18];
  uint64_t v12 = a1[17];
  unint64_t v13 = a1[25];
  uint64_t v14 = a1[24];
  unint64_t v15 = a1[27];
  uint64_t v16 = a1[26];
  unint64_t v17 = a1[29];
  uint64_t v18 = a1[28];
  unint64_t v19 = a1[31];
  uint64_t v20 = a1[30];
  unint64_t v21 = a1[33];
  uint64_t v22 = a1[32];
  uint64_t v24 = a1[34];
  unint64_t v23 = a1[35];
  uint64_t v26 = a1[38];
  unint64_t v25 = a1[39];
  sub_1000361E0(*a1, a1[1]);
  sub_1000361E0(v2, v3);
  sub_100037A38(v4, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v6, v7);
  sub_1000361E0(v10, v9);
  sub_1000361E0(v12, v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v14, v13);
  sub_1000361E0(v16, v15);
  sub_1000361E0(v18, v17);
  sub_1000361E0(v20, v19);
  sub_1000361E0(v22, v21);
  sub_100037A38(v24, v23);
  swift_bridgeObjectRetain();
  sub_100037A38(v26, v25);
  return a1;
}

unint64_t sub_10084E90C()
{
  unint64_t result = qword_10164F068;
  if (!qword_10164F068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F068);
  }
  return result;
}

uint64_t *sub_10084E960(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  uint64_t v6 = a1[7];
  unint64_t v7 = a1[8];
  uint64_t v8 = a1[9];
  unint64_t v9 = a1[10];
  uint64_t v10 = a1[11];
  unint64_t v12 = a1[12];
  unint64_t v13 = a1[21];
  uint64_t v16 = a1[22];
  uint64_t v14 = a1[20];
  unint64_t v15 = a1[23];
  unint64_t v17 = a1[25];
  uint64_t v18 = a1[24];
  unint64_t v19 = a1[27];
  uint64_t v20 = a1[26];
  sub_1000361E0(*a1, a1[1]);
  sub_1000361E0(v2, v3);
  sub_100037A38(v4, v5);
  sub_1000361E0(v6, v7);
  sub_1000361E0(v8, v9);
  sub_1000361E0(v10, v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v14, v13);
  sub_1000361E0(v16, v15);
  sub_1000361E0(v18, v17);
  sub_1000361E0(v20, v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_10084EAF0(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  uint64_t v6 = a1[13];
  unint64_t v7 = a1[14];
  unint64_t v9 = a1[16];
  uint64_t v10 = a1[15];
  unint64_t v11 = a1[18];
  uint64_t v12 = a1[17];
  unint64_t v13 = a1[25];
  uint64_t v14 = a1[24];
  unint64_t v15 = a1[27];
  uint64_t v16 = a1[26];
  unint64_t v17 = a1[29];
  uint64_t v18 = a1[28];
  unint64_t v19 = a1[31];
  uint64_t v20 = a1[30];
  unint64_t v21 = a1[33];
  uint64_t v22 = a1[32];
  uint64_t v24 = a1[34];
  unint64_t v23 = a1[35];
  uint64_t v26 = a1[38];
  unint64_t v25 = a1[39];
  sub_10001CFB8(*a1, a1[1]);
  sub_10001CFB8(v2, v3);
  sub_100037A24(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(v6, v7);
  sub_10001CFB8(v10, v9);
  sub_10001CFB8(v12, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(v14, v13);
  sub_10001CFB8(v16, v15);
  sub_10001CFB8(v18, v17);
  sub_10001CFB8(v20, v19);
  sub_10001CFB8(v22, v21);
  sub_100037A24(v24, v23);
  swift_bridgeObjectRelease();
  sub_100037A24(v26, v25);
  return a1;
}

uint64_t *sub_10084EC80(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  uint64_t v6 = a1[7];
  unint64_t v7 = a1[8];
  uint64_t v8 = a1[9];
  unint64_t v9 = a1[10];
  uint64_t v10 = a1[11];
  unint64_t v12 = a1[12];
  unint64_t v13 = a1[21];
  uint64_t v16 = a1[22];
  uint64_t v14 = a1[20];
  unint64_t v15 = a1[23];
  unint64_t v17 = a1[25];
  uint64_t v18 = a1[24];
  unint64_t v19 = a1[27];
  uint64_t v20 = a1[26];
  sub_10001CFB8(*a1, a1[1]);
  sub_10001CFB8(v2, v3);
  sub_100037A24(v4, v5);
  sub_10001CFB8(v6, v7);
  sub_10001CFB8(v8, v9);
  sub_10001CFB8(v10, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(v14, v13);
  sub_10001CFB8(v16, v15);
  sub_10001CFB8(v18, v17);
  sub_10001CFB8(v20, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10084EE10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MultipartAccessoryPairingInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10084EE74(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_101639618);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10084EED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MultipartAccessoryPairingInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t destroy for AirPodsPairingLockCheckRequestContent(uint64_t *a1)
{
  sub_10001CFB8(*a1, a1[1]);
  sub_10001CFB8(a1[2], a1[3]);
  unint64_t v2 = a1[5];
  if (v2 >> 60 != 15) {
    sub_10001CFB8(a1[4], v2);
  }
  sub_10001CFB8(a1[7], a1[8]);
  sub_10001CFB8(a1[9], a1[10]);
  sub_10001CFB8(a1[11], a1[12]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(a1[20], a1[21]);
  sub_10001CFB8(a1[22], a1[23]);
  sub_10001CFB8(a1[24], a1[25]);
  sub_10001CFB8(a1[26], a1[27]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AirPodsPairingLockCheckRequestContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1000361E0(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  sub_1000361E0(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = (uint64_t *)(a2 + 32);
  unint64_t v9 = *(void *)(a2 + 40);
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v10 = *v8;
    sub_1000361E0(*v8, *(void *)(a2 + 40));
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v9;
  }
  uint64_t v11 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  unint64_t v12 = *(void *)(a2 + 64);
  sub_1000361E0(v11, v12);
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v12;
  uint64_t v13 = *(void *)(a2 + 72);
  unint64_t v14 = *(void *)(a2 + 80);
  sub_1000361E0(v13, v14);
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  uint64_t v15 = *(void *)(a2 + 88);
  unint64_t v16 = *(void *)(a2 + 96);
  sub_1000361E0(v15, v16);
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  uint64_t v17 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v17;
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v18 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v18;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  uint64_t v19 = *(void *)(a2 + 160);
  unint64_t v20 = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v19, v20);
  *(void *)(a1 + 160) = v19;
  *(void *)(a1 + 168) = v20;
  uint64_t v21 = *(void *)(a2 + 176);
  unint64_t v22 = *(void *)(a2 + 184);
  sub_1000361E0(v21, v22);
  *(void *)(a1 + 176) = v21;
  *(void *)(a1 + 184) = v22;
  uint64_t v23 = *(void *)(a2 + 192);
  unint64_t v24 = *(void *)(a2 + 200);
  sub_1000361E0(v23, v24);
  *(void *)(a1 + 192) = v23;
  *(void *)(a1 + 200) = v24;
  uint64_t v25 = *(void *)(a2 + 208);
  unint64_t v26 = *(void *)(a2 + 216);
  sub_1000361E0(v25, v26);
  *(void *)(a1 + 208) = v25;
  *(void *)(a1 + 216) = v26;
  uint64_t v27 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v27;
  uint64_t v28 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v28;
  uint64_t v29 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v29;
  uint64_t v30 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v30;
  uint64_t v31 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v31;
  uint64_t v32 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v32;
  uint64_t v33 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v33;
  uint64_t v34 = *(void *)(a2 + 336);
  uint64_t v35 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = v34;
  *(void *)(a1 + 344) = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AirPodsPairingLockCheckRequestContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1000361E0(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_10001CFB8(v6, v7);
  uint64_t v8 = *(void *)(a2 + 16);
  unint64_t v9 = *(void *)(a2 + 24);
  sub_1000361E0(v8, v9);
  uint64_t v10 = *(void *)(a1 + 16);
  unint64_t v11 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  sub_10001CFB8(v10, v11);
  unint64_t v12 = (uint64_t *)(a2 + 32);
  unint64_t v13 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40) >> 60 != 15)
  {
    if (v13 >> 60 != 15)
    {
      uint64_t v15 = *v12;
      sub_1000361E0(*v12, *(void *)(a2 + 40));
      uint64_t v16 = *(void *)(a1 + 32);
      unint64_t v17 = *(void *)(a1 + 40);
      *(void *)(a1 + 32) = v15;
      *(void *)(a1 + 40) = v13;
      sub_10001CFB8(v16, v17);
      goto LABEL_8;
    }
    sub_1001356D0(a1 + 32);
    goto LABEL_6;
  }
  if (v13 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v12;
    goto LABEL_8;
  }
  uint64_t v14 = *v12;
  sub_1000361E0(*v12, *(void *)(a2 + 40));
  *(void *)(a1 + 32) = v14;
  *(void *)(a1 + 40) = v13;
LABEL_8:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v18 = *(void *)(a2 + 56);
  unint64_t v19 = *(void *)(a2 + 64);
  sub_1000361E0(v18, v19);
  uint64_t v20 = *(void *)(a1 + 56);
  unint64_t v21 = *(void *)(a1 + 64);
  *(void *)(a1 + 56) = v18;
  *(void *)(a1 + 64) = v19;
  sub_10001CFB8(v20, v21);
  uint64_t v22 = *(void *)(a2 + 72);
  unint64_t v23 = *(void *)(a2 + 80);
  sub_1000361E0(v22, v23);
  uint64_t v24 = *(void *)(a1 + 72);
  unint64_t v25 = *(void *)(a1 + 80);
  *(void *)(a1 + 72) = v22;
  *(void *)(a1 + 80) = v23;
  sub_10001CFB8(v24, v25);
  uint64_t v26 = *(void *)(a2 + 88);
  unint64_t v27 = *(void *)(a2 + 96);
  sub_1000361E0(v26, v27);
  uint64_t v28 = *(void *)(a1 + 88);
  unint64_t v29 = *(void *)(a1 + 96);
  *(void *)(a1 + 88) = v26;
  *(void *)(a1 + 96) = v27;
  sub_10001CFB8(v28, v29);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v30 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v30;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v31;
  uint64_t v32 = *(void *)(a2 + 160);
  unint64_t v33 = *(void *)(a2 + 168);
  sub_1000361E0(v32, v33);
  uint64_t v34 = *(void *)(a1 + 160);
  unint64_t v35 = *(void *)(a1 + 168);
  *(void *)(a1 + 160) = v32;
  *(void *)(a1 + 168) = v33;
  sub_10001CFB8(v34, v35);
  uint64_t v36 = *(void *)(a2 + 176);
  unint64_t v37 = *(void *)(a2 + 184);
  sub_1000361E0(v36, v37);
  uint64_t v38 = *(void *)(a1 + 176);
  unint64_t v39 = *(void *)(a1 + 184);
  *(void *)(a1 + 176) = v36;
  *(void *)(a1 + 184) = v37;
  sub_10001CFB8(v38, v39);
  uint64_t v40 = *(void *)(a2 + 192);
  unint64_t v41 = *(void *)(a2 + 200);
  sub_1000361E0(v40, v41);
  uint64_t v42 = *(void *)(a1 + 192);
  unint64_t v43 = *(void *)(a1 + 200);
  *(void *)(a1 + 192) = v40;
  *(void *)(a1 + 200) = v41;
  sub_10001CFB8(v42, v43);
  uint64_t v44 = *(void *)(a2 + 208);
  unint64_t v45 = *(void *)(a2 + 216);
  sub_1000361E0(v44, v45);
  uint64_t v46 = *(void *)(a1 + 208);
  unint64_t v47 = *(void *)(a1 + 216);
  *(void *)(a1 + 208) = v44;
  *(void *)(a1 + 216) = v45;
  sub_10001CFB8(v46, v47);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for AirPodsPairingLockCheckRequestContent(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x160uLL);
}

uint64_t assignWithTake for AirPodsPairingLockCheckRequestContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_10001CFB8(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_10001CFB8(v6, v7);
  uint64_t v8 = (void *)(a2 + 32);
  unint64_t v9 = *(void *)(a1 + 40);
  if (v9 >> 60 != 15)
  {
    unint64_t v10 = *(void *)(a2 + 40);
    if (v10 >> 60 != 15)
    {
      uint64_t v11 = *(void *)(a1 + 32);
      *(void *)(a1 + 32) = *v8;
      *(void *)(a1 + 40) = v10;
      sub_10001CFB8(v11, v9);
      goto LABEL_6;
    }
    sub_1001356D0(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v8;
LABEL_6:
  uint64_t v12 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a1 + 56);
  unint64_t v14 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v12;
  sub_10001CFB8(v13, v14);
  uint64_t v15 = *(void *)(a1 + 72);
  unint64_t v16 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  sub_10001CFB8(v15, v16);
  uint64_t v17 = *(void *)(a1 + 88);
  unint64_t v18 = *(void *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  sub_10001CFB8(v17, v18);
  uint64_t v19 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v19;
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  uint64_t v20 = *(void *)(a1 + 160);
  unint64_t v21 = *(void *)(a1 + 168);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  sub_10001CFB8(v20, v21);
  uint64_t v22 = *(void *)(a1 + 176);
  unint64_t v23 = *(void *)(a1 + 184);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  sub_10001CFB8(v22, v23);
  uint64_t v24 = *(void *)(a1 + 192);
  unint64_t v25 = *(void *)(a1 + 200);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  sub_10001CFB8(v24, v25);
  uint64_t v26 = *(void *)(a1 + 208);
  unint64_t v27 = *(void *)(a1 + 216);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  sub_10001CFB8(v26, v27);
  uint64_t v28 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v32;
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v35;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AirPodsPairingLockCheckRequestContent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 352)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 128);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AirPodsPairingLockCheckRequestContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 344) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 352) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 128) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 352) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirPodsPairingLockCheckRequestContent()
{
  return &type metadata for AirPodsPairingLockCheckRequestContent;
}

ValueMetadata *type metadata accessor for AirPodsPairingLockCheckRequest()
{
  return &type metadata for AirPodsPairingLockCheckRequest;
}

unint64_t sub_10084F7F0()
{
  unint64_t result = qword_10164F078;
  if (!qword_10164F078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F078);
  }
  return result;
}

unint64_t sub_10084F844()
{
  unint64_t result = qword_10164F088;
  if (!qword_10164F088)
  {
    sub_10000592C(&qword_10164F080);
    sub_10084F8C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F088);
  }
  return result;
}

unint64_t sub_10084F8C0()
{
  unint64_t result = qword_10164F090;
  if (!qword_10164F090)
  {
    type metadata accessor for MultipartAccessoryPairingInfo(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F090);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AirPodsPairingLockCheckRequestContent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE9) {
    goto LABEL_17;
  }
  if (a2 + 23 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 23) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 23;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 23;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 23;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x18;
  int v8 = v6 - 24;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AirPodsPairingLockCheckRequestContent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 23 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 23) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE8)
  {
    unsigned int v6 = ((a2 - 233) >> 8) + 1;
    *unint64_t result = a2 + 23;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10084FA74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 23;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirPodsPairingLockCheckRequestContent.CodingKeys()
{
  return &type metadata for AirPodsPairingLockCheckRequestContent.CodingKeys;
}

unint64_t sub_10084FAB0()
{
  unint64_t result = qword_10164F098;
  if (!qword_10164F098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F098);
  }
  return result;
}

unint64_t sub_10084FB08()
{
  unint64_t result = qword_10164F0A0;
  if (!qword_10164F0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F0A0);
  }
  return result;
}

unint64_t sub_10084FB60()
{
  unint64_t result = qword_10164F0A8;
  if (!qword_10164F0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F0A8);
  }
  return result;
}

uint64_t sub_10084FBB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4E6E6F6973736573 && a2 == 0xEC00000065636E6FLL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12645 && a2 == 0xE200000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001013EEBB0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74617453636E7973 && a2 == 0xEA00000000007375 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1684628325 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x644970696863 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x754E6C6169726573 && a2 == 0xEC0000007265626DLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x644974726170 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6F636165426D756ELL && a2 == 0xEA0000000000736ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001013F4C90 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000101408C00 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6E55646572616873 && a2 == 0xEA00000000007469 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x314B64656573 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x7374726563 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xED00006E67695379 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000101408C20 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001013F6580 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x69634572656E776FLL && a2 == 0xE900000000000064 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x69684372656E776FLL && a2 == 0xEB00000000644970 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x7372655663657073 && a2 == 0xEB000000006E6F69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x657261776D726966 && a2 == 0xEF6E6F6973726556 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x49746375646F7270 && a2 == 0xE900000000000064 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x6449726F646E6576 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000101408C40)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 23;
    }
    else {
      return 24;
    }
  }
}

uint64_t sub_100850574()
{
  if (static DeviceVersion.== infix(_:_:)())
  {
    return static UUID.< infix(_:_:)();
  }
  else
  {
    return static DeviceVersion.< infix(_:_:)();
  }
}

BOOL sub_1008505F0()
{
  if (static DeviceVersion.== infix(_:_:)()) {
    char v0 = static UUID.< infix(_:_:)();
  }
  else {
    char v0 = static DeviceVersion.< infix(_:_:)();
  }
  return (v0 & 1) == 0;
}

BOOL sub_100850658()
{
  if (static DeviceVersion.== infix(_:_:)()) {
    char v0 = static UUID.< infix(_:_:)();
  }
  else {
    char v0 = static DeviceVersion.< infix(_:_:)();
  }
  return (v0 & 1) == 0;
}

uint64_t sub_1008506B8()
{
  if (static DeviceVersion.== infix(_:_:)())
  {
    return static UUID.< infix(_:_:)();
  }
  else
  {
    return static DeviceVersion.< infix(_:_:)();
  }
}

uint64_t sub_10085073C()
{
  if ((static DeviceVersion.== infix(_:_:)() & 1) == 0) {
    return 0;
  }

  return static UUID.== infix(_:_:)();
}

uint64_t sub_1008507A4()
{
  return sub_100851318(&qword_10164F0B0);
}

uint64_t type metadata accessor for LeaderDevice()
{
  uint64_t result = qword_10164F118;
  if (!qword_10164F118) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100850824()
{
  uint64_t v0 = 0;
  sub_1000336D4();
  char v1 = StringProtocol.contains<A>(_:)();
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0
    || (v0 = 1, char v2 = StringProtocol.contains<A>(_:)(), swift_bridgeObjectRelease(), (v2 & 1) != 0)
    || (v0 = 2, char v3 = StringProtocol.contains<A>(_:)(), swift_bridgeObjectRelease(), (v3 & 1) != 0))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100850A30();
    swift_allocError();
    swift_willThrow();
  }
  return v0;
}

unint64_t sub_100850A30()
{
  unint64_t result = qword_10164F0B8;
  if (!qword_10164F0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F0B8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LeaderDevice.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100850B20);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LeaderDevice.Error()
{
  return &type metadata for LeaderDevice.Error;
}

uint64_t *sub_100850B58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for DeviceVersion();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_100850C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DeviceVersion();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_100850D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DeviceVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_100850DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DeviceVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_100850E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DeviceVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_100850F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DeviceVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100850FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100850FFC);
}

uint64_t sub_100850FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DeviceVersion();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for UUID();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1008510F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100851108);
}

uint64_t sub_100851108(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DeviceVersion();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for UUID();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_10085120C()
{
  uint64_t result = type metadata accessor for DeviceVersion();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for UUID();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1008512D4(uint64_t a1)
{
  uint64_t result = sub_100851318(&qword_10164F150);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100851318(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for LeaderDevice();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100851360()
{
  unint64_t result = qword_10164F158;
  if (!qword_10164F158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F158);
  }
  return result;
}

uint64_t sub_1008513B4()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E384(v2, qword_10170E3E8);
  sub_100010324(v0, (uint64_t)qword_10170E3E8);
  type metadata accessor for BeaconStore(0);
  sub_100A9DB34((uint64_t)v4);
  URL.appendingPathComponent(_:isDirectory:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_1008514D0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v37 = type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
  uint64_t v4 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000588C(&qword_101649E50);
  __chkstk_darwin(v7 - 8);
  uint64_t v35 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v38 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000588C(&qword_101649E40);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v33 - v16;
  type metadata accessor for UUID();
  sub_100858B04(&qword_10163BC60, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  unint64_t v18 = (int *)type metadata accessor for BeaconProductInfoRecord();
  int v19 = *(unsigned __int8 *)(v1 + v18[5]);
  uint64_t v34 = v6;
  if (v19 == 2)
  {
    Swift::UInt8 v20 = 0;
  }
  else
  {
    Swift::UInt8 v20 = v19 & 1;
    Hasher._combine(_:)(1u);
  }
  Hasher._combine(_:)(v20);
  Hasher._combine(_:)(*(unsigned char *)(v1 + v18[6]));
  Hasher._combine(_:)(*(unsigned char *)(v1 + v18[7]));
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t v21 = v1 + v18[10];
  if (*(unsigned char *)(v21 + 8) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Swift::UInt v22 = *(void *)v21;
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v22);
  }
  uint64_t v36 = v4;
  if (*(void *)(v1 + v18[11] + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  sub_10001D074(v1 + v18[12], (uint64_t)v17, &qword_101649E40);
  uint64_t v23 = v38;
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
  if (v24(v17, 1, v9) == 1)
  {
    Hasher._combine(_:)(0);
    uint64_t v25 = v38;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v11, v17, v9);
    Hasher._combine(_:)(1u);
    sub_100858B04(&qword_10164C4E0, (void (*)(uint64_t))&type metadata accessor for URL);
    dispatch thunk of Hashable.hash(into:)();
    uint64_t v25 = v38;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v9);
  }
  uint64_t v26 = v37;
  sub_10001D074(v2 + v18[13], (uint64_t)v15, &qword_101649E40);
  if (v24(v15, 1, v9) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v11, v15, v9);
    Hasher._combine(_:)(1u);
    sub_100858B04(&qword_10164C4E0, (void (*)(uint64_t))&type metadata accessor for URL);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v9);
  }
  uint64_t v28 = (uint64_t)v35;
  uint64_t v27 = v36;
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if ((*(void *)(v2 + v18[15]) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v29 = *(void *)(v2 + v18[15]);
  }
  else {
    Swift::UInt64 v29 = 0;
  }
  Hasher._combine(_:)(v29);
  sub_10001D074(v2 + v18[16], v28, &qword_101649E50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v28, 1, v26) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    uint64_t v30 = (uint64_t)v34;
    sub_100857DE0(v28, (uint64_t)v34);
    Hasher._combine(_:)(1u);
    sub_1006FDAC4();
    sub_100856548(v30, type metadata accessor for AccessoryInfoResponseContent.Configuration);
  }
  Hasher._combine(_:)(*(_DWORD *)(v2 + v18[17]));
  uint64_t v31 = *(void *)(v2 + v18[18]);
  if (v31)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    sub_100CCB08C(a1, v31);
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  sub_100858B04(&qword_10164C4E0, (void (*)(uint64_t))&type metadata accessor for URL);
  dispatch thunk of Hashable.hash(into:)();
  dispatch thunk of Hashable.hash(into:)();
  dispatch thunk of Hashable.hash(into:)();
  dispatch thunk of Hashable.hash(into:)();
  dispatch thunk of Hashable.hash(into:)();
  return dispatch thunk of Hashable.hash(into:)();
}

unint64_t sub_100851C10(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x6E6564646968;
      break;
    case 4:
      unint64_t result = 0x6D614E6C65646F6DLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x52746C7561666564;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0x55656C6261736964;
      break;
    case 9:
    case 17:
    case 18:
    case 19:
    case 20:
      unint64_t result = 0xD000000000000011;
      break;
    case 10:
      unint64_t result = 0x6E6F6973726576;
      break;
    case 11:
      unint64_t result = 0x7265776F507874;
      break;
    case 12:
      unint64_t result = 0x72756769666E6F63;
      break;
    case 13:
      unint64_t result = 0x696C696261706163;
      break;
    case 14:
      unint64_t result = 0x655474756F79616CLL;
      break;
    case 15:
      unint64_t result = 0x48746C7561666564;
      break;
    case 16:
      unint64_t result = 0x4C746C7561666564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100851EA4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000588C(&qword_10164F258);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_100857D1C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v12) = 0;
  type metadata accessor for UUID();
  sub_100858B04(&qword_10163B040, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for BeaconProductInfoRecord();
    LOBYTE(v12) = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12) = 7;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12) = 8;
    type metadata accessor for URL();
    sub_100858B04(&qword_10164BCE0, (void (*)(uint64_t))&type metadata accessor for URL);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v12) = 9;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v12) = 10;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 11;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v11 = v3 + v9[16];
    LOBYTE(v12) = 12;
    type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
    sub_100858B04(&qword_10164C560, (void (*)(uint64_t))type metadata accessor for AccessoryInfoResponseContent.Configuration);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LODWORD(v12) = *(_DWORD *)(v3 + v9[17]);
    char v13 = 13;
    sub_1001ACAF4();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v12 = *(void *)(v3 + v9[18]);
    char v13 = 14;
    sub_10000588C(&qword_10164C530);
    sub_100857D70(&qword_10164C580, (void (*)(void))sub_1007050C4);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v12) = 15;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v12) = 16;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v12) = 17;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v12) = 18;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v12) = 19;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v12) = 20;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100852504@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v95 = a2;
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v94 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v93 = (char *)&v89 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v92 = (char *)&v89 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  os_log_type_t v91 = (char *)&v89 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v90 = (char *)&v89 - v14;
  __chkstk_darwin(v13);
  uint64_t v96 = (char *)&v89 - v15;
  uint64_t v16 = sub_10000588C(&qword_101649E50);
  __chkstk_darwin(v16 - 8);
  uint64_t v97 = (uint64_t)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000588C(&qword_101649E40);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v100 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v99 = (char *)&v89 - v21;
  uint64_t v22 = type metadata accessor for UUID();
  uint64_t v102 = *(void *)(v22 - 8);
  uint64_t v103 = v22;
  __chkstk_darwin(v22);
  uint64_t v105 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_10000588C(&qword_10164F268);
  uint64_t v98 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v25 = (char *)&v89 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = (int *)type metadata accessor for BeaconProductInfoRecord();
  uint64_t v27 = (int *)__chkstk_darwin(v26);
  Swift::UInt64 v29 = (char *)&v89 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = &v29[v27[10]];
  *(void *)uint64_t v30 = 0;
  v30[8] = 1;
  uint64_t v31 = &v29[v27[11]];
  *(void *)uint64_t v31 = 0;
  *((void *)v31 + 1) = 0;
  uint64_t v114 = (uint64_t *)v31;
  uint64_t v32 = v27[12];
  uint64_t v108 = v4;
  uint64_t v33 = *(void (**)(void))(v4 + 56);
  uint64_t v111 = &v29[v32];
  v33();
  uint64_t v110 = &v29[v26[13]];
  uint64_t v115 = v3;
  v33();
  uint64_t v34 = (uint64_t)&v29[v26[16]];
  uint64_t v35 = type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
  uint64_t v109 = v34;
  v36(v34, 1, 1, v35);
  unint64_t v116 = v26;
  uint64_t v37 = v26[18];
  os_log_t v106 = a1;
  uint64_t v107 = v37;
  os_log_t v112 = v29;
  *(void *)&v29[v37] = 0;
  sub_10001CD44(a1, a1[3]);
  sub_100857D1C();
  uint64_t v104 = v25;
  uint64_t v38 = v113;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v38)
  {
    uint64_t v113 = v38;
    int v44 = 0;
    unsigned int v45 = 21376;
  }
  else
  {
    unint64_t v39 = v30;
    uint64_t v89 = v35;
    uint64_t v40 = (uint64_t)v99;
    uint64_t v41 = (uint64_t)v100;
    uint64_t v42 = v98;
    LOBYTE(v117) = 0;
    sub_100858B04((unint64_t *)&qword_10163B010, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v43 = v103;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v57 = v112;
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v112, v105, v43);
    LOBYTE(v117) = 1;
    char v58 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v59 = v116;
    v57[v116[5]] = v58;
    LOBYTE(v117) = 2;
    v57[v59[6]] = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    LOBYTE(v117) = 3;
    v57[v59[7]] = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    LOBYTE(v117) = 4;
    uint64_t v60 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v61 = (uint64_t *)&v57[v59[8]];
    *uint64_t v61 = v60;
    v61[1] = v62;
    LOBYTE(v117) = 5;
    uint64_t v63 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v64 = (uint64_t *)&v57[v59[9]];
    *uint64_t v64 = v63;
    v64[1] = v65;
    LOBYTE(v117) = 6;
    *(void *)unint64_t v39 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v39[8] = v66 & 1;
    LOBYTE(v117) = 7;
    uint64_t v67 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    unint64_t v68 = v114;
    *uint64_t v114 = v67;
    v68[1] = v69;
    LOBYTE(v117) = 8;
    sub_100858B04(&qword_10164BCD0, (void (*)(uint64_t))&type metadata accessor for URL);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_100062604(v40, (uint64_t)v111, &qword_101649E40);
    LOBYTE(v117) = 9;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v113 = 0;
    sub_100062604(v41, (uint64_t)v110, &qword_101649E40);
    LOBYTE(v117) = 10;
    uint64_t v70 = v113;
    uint64_t v71 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v113 = v70;
    if (v70)
    {
      (*(void (**)(char *, uint64_t))(v42 + 8))(v104, v101);
      int v44 = 0;
      unsigned int v45 = 21425;
    }
    else
    {
      uint64_t v73 = (uint64_t *)&v112[v116[14]];
      *uint64_t v73 = v71;
      v73[1] = v72;
      LOBYTE(v117) = 11;
      KeyedDecodingContainer.decode(_:forKey:)();
      uint64_t v113 = 0;
      *(void *)&v112[v116[15]] = v74;
      LOBYTE(v117) = 12;
      sub_100858B04(&qword_10164C518, (void (*)(uint64_t))type metadata accessor for AccessoryInfoResponseContent.Configuration);
      uint64_t v75 = v113;
      KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
      uint64_t v113 = v75;
      if (v75) {
        goto LABEL_32;
      }
      sub_100062604(v97, v109, &qword_101649E50);
      char v118 = 13;
      sub_1001AC89C();
      uint64_t v76 = v113;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v113 = v76;
      if (v76) {
        goto LABEL_32;
      }
      *(_DWORD *)&v112[v116[17]] = v117;
      sub_10000588C(&qword_10164C530);
      char v118 = 14;
      sub_100857D70(&qword_10164C538, (void (*)(void))sub_100704F04);
      uint64_t v77 = v113;
      KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
      uint64_t v113 = v77;
      if (v77) {
        goto LABEL_32;
      }
      uint64_t v78 = v117;
      uint64_t v79 = v107;
      uint64_t v80 = v112;
      swift_bridgeObjectRelease();
      *(void *)&v80[v79] = v78;
      LOBYTE(v117) = 15;
      uint64_t v81 = v113;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v113 = v81;
      if (v81)
      {
LABEL_32:
        (*(void (**)(char *, uint64_t))(v42 + 8))(v104, v101);
        int v44 = 0;
        unsigned int v45 = 22449;
      }
      else
      {
        uint64_t v82 = *(void (**)(char *, char *, uint64_t))(v108 + 32);
        v82(&v112[v116[19]], v96, v115);
        LOBYTE(v117) = 16;
        uint64_t v83 = v113;
        KeyedDecodingContainer.decode<A>(_:forKey:)();
        uint64_t v113 = v83;
        if (!v83)
        {
          v82(&v112[v116[20]], v90, v115);
          LOBYTE(v117) = 17;
          uint64_t v84 = v113;
          KeyedDecodingContainer.decode<A>(_:forKey:)();
          LODWORD(v105) = v84 == 0;
          uint64_t v113 = v84;
          if (v84
            || (v82(&v112[v116[21]], v91, v115),
                LOBYTE(v117) = 18,
                uint64_t v85 = v113,
                KeyedDecodingContainer.decode<A>(_:forKey:)(),
                (uint64_t v113 = v85) != 0))
          {
            (*(void (**)(char *, uint64_t))(v42 + 8))(v104, v101);
            int v51 = 0;
            int v50 = 0;
          }
          else
          {
            v82(&v112[v116[22]], v92, v115);
            LOBYTE(v117) = 19;
            uint64_t v86 = v113;
            KeyedDecodingContainer.decode<A>(_:forKey:)();
            uint64_t v113 = v86;
            if (v86)
            {
              (*(void (**)(char *, uint64_t))(v42 + 8))(v104, v101);
              int v50 = 0;
              int v51 = 1;
            }
            else
            {
              v82(&v112[v116[23]], v93, v115);
              LOBYTE(v117) = 20;
              uint64_t v87 = v113;
              KeyedDecodingContainer.decode<A>(_:forKey:)();
              uint64_t v113 = v87;
              if (!v87)
              {
                (*(void (**)(char *, uint64_t))(v42 + 8))(v104, v101);
                uint64_t v88 = (uint64_t)v112;
                v82(&v112[v116[24]], v94, v115);
                sub_100854774(v88, v95);
                _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v106);
                return sub_100856548(v88, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
              }
              (*(void (**)(char *, uint64_t))(v42 + 8))(v104, v101);
              int v51 = 1;
              int v50 = 1;
            }
          }
          _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v106);
          LOBYTE(v56) = 1;
          int v48 = 1;
          int v49 = 1;
          int v44 = 1;
          int v52 = 1;
          uint64_t v46 = v116;
          unint64_t v47 = v112;
          goto LABEL_23;
        }
        (*(void (**)(char *, uint64_t))(v42 + 8))(v104, v101);
        unsigned int v45 = 55217;
        int v44 = 1;
      }
    }
  }
  uint64_t v46 = v116;
  unint64_t v47 = v112;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v106);
  int v48 = (v45 >> 5) & 1;
  int v49 = (v45 >> 10) & 1;
  if ((v45 & 1) == 0)
  {
    int v50 = 0;
    int v51 = 0;
    LODWORD(v105) = 0;
    int v52 = 0;
    if ((v45 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
  int v52 = 0;
  LODWORD(v105) = 0;
  int v51 = 0;
  int v50 = 0;
  int v56 = (v45 >> 4) & 1;
LABEL_23:
  (*(void (**)(char *, uint64_t))(v102 + 8))(v47, v103);
  if ((v56 & 1) == 0)
  {
LABEL_6:
    if (!v48) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_24:
  swift_bridgeObjectRelease();
  if (v48) {
LABEL_7:
  }
    swift_bridgeObjectRelease();
LABEL_8:
  swift_bridgeObjectRelease();
  sub_10001DAB4((uint64_t)v111, &qword_101649E40);
  sub_10001DAB4((uint64_t)v110, &qword_101649E40);
  if (v49) {
    swift_bridgeObjectRelease();
  }
  sub_10001DAB4(v109, &qword_101649E50);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v54 = v115;
  uint64_t v55 = v108;
  if (v44)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(&v47[v46[19]], v115);
    if (!v52)
    {
LABEL_12:
      if (!v105) {
        goto LABEL_13;
      }
      goto LABEL_18;
    }
  }
  else if (!v52)
  {
    goto LABEL_12;
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(&v47[v46[20]], v54);
  if (!v105)
  {
LABEL_13:
    if (!v51) {
      goto LABEL_14;
    }
LABEL_19:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(&v47[v46[22]], v54);
    if (!v50) {
      return result;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(&v47[v46[23]], v54);
  }
LABEL_18:
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(&v47[v46[21]], v54);
  if (v51) {
    goto LABEL_19;
  }
LABEL_14:
  if (!v50) {
    return result;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(&v47[v46[23]], v54);
}

uint64_t sub_100853454@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v33 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 32))(a9, a1, v33);
  uint64_t v34 = (int *)type metadata accessor for BeaconProductInfoRecord();
  *(unsigned char *)(a9 + v34[5]) = a2;
  *(unsigned char *)(a9 + v34[6]) = a3;
  *(unsigned char *)(a9 + v34[7]) = a4;
  uint64_t v35 = (void *)(a9 + v34[8]);
  *uint64_t v35 = a5;
  v35[1] = a6;
  uint64_t v36 = (void *)(a9 + v34[9]);
  *uint64_t v36 = a7;
  v36[1] = a8;
  uint64_t v37 = a9 + v34[10];
  *(void *)uint64_t v37 = a11;
  *(unsigned char *)(v37 + 8) = a12 & 1;
  uint64_t v38 = (void *)(a9 + v34[11]);
  *uint64_t v38 = a13;
  v38[1] = a14;
  sub_10001D608(a15, a9 + v34[12], &qword_101649E40);
  sub_10001D608(a16, a9 + v34[13], &qword_101649E40);
  unint64_t v39 = (void *)(a9 + v34[14]);
  void *v39 = a17;
  v39[1] = a18;
  *(double *)(a9 + v34[15]) = a10;
  sub_10001D608(a19, a9 + v34[16], &qword_101649E50);
  *(_DWORD *)(a9 + v34[17]) = a20;
  *(void *)(a9 + v34[18]) = a21;
  uint64_t v40 = a9 + v34[19];
  uint64_t v41 = type metadata accessor for URL();
  int v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32);
  v48(v40, a22, v41);
  v48(a9 + v34[20], a23, v41);
  v48(a9 + v34[21], a24, v41);
  v48(a9 + v34[22], a25, v41);
  v48(a9 + v34[23], a26, v41);
  uint64_t v42 = a9 + v34[24];

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v48)(v42, a27, v41);
}

unint64_t sub_100853760()
{
  return sub_100851C10(*v0);
}

uint64_t sub_100853768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100858DE8(a1, a2);
  *a3 = result;
  return result;
}

void sub_100853790(unsigned char *a1@<X8>)
{
  *a1 = 21;
}

uint64_t sub_10085379C(uint64_t a1)
{
  unint64_t v2 = sub_100857D1C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008537D8(uint64_t a1)
{
  unint64_t v2 = sub_100857D1C();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_100853814()
{
  Hasher.init(_seed:)();
  sub_1008514D0((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_100853858()
{
  Hasher.init(_seed:)();
  sub_1008514D0((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t sub_100853894@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100852504(a1, a2);
}

uint64_t sub_1008538AC(void *a1)
{
  return sub_100851EA4(a1);
}

uint64_t sub_1008538C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v75 = a3;
  uint64_t v76 = a2;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v74 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v73 = (char *)&v54 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v70 = (char *)&v54 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v77 = (char *)&v54 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v54 - v15;
  uint64_t v54 = (uint64_t)&v54 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v54 - v17;
  uint64_t v55 = (uint64_t)&v54 - v17;
  uint64_t v19 = sub_10000588C(&qword_101649E50);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = v21;
  uint64_t v22 = sub_10000588C(&qword_101649E40);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v25 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = v25;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v54 - v26;
  uint64_t v63 = (uint64_t)&v54 - v26;
  uint64_t v28 = (int *)type metadata accessor for AccessoryProductInfo();
  uint64_t v29 = v28[10];
  int v30 = *(unsigned __int8 *)(a1 + v28[6]);
  int v71 = *(unsigned __int8 *)(a1 + v28[7]);
  int v72 = v30;
  uint64_t v31 = v28[13];
  uint64_t v32 = (uint64_t *)(a1 + v28[12]);
  uint64_t v33 = *v32;
  uint64_t v59 = v32[1];
  uint64_t v34 = *(void *)(a1 + v31 + 8);
  uint64_t v68 = *(void *)(a1 + v31);
  uint64_t v69 = v33;
  uint64_t v61 = v34;
  uint64_t v35 = v28[15];
  uint64_t v36 = a1 + v28[14];
  uint64_t v66 = *(void *)v36;
  int v65 = *(unsigned __int8 *)(v36 + 8);
  uint64_t v37 = a1 + v28[17];
  uint64_t v38 = *(void *)(a1 + v35 + 8);
  uint64_t v64 = *(void *)(a1 + v35);
  uint64_t v58 = v38;
  int v67 = *(unsigned __int8 *)(a1 + v29);
  sub_10001D074(v37, (uint64_t)v27, &qword_101649E40);
  sub_10001D074(a1 + v28[16], (uint64_t)v25, &qword_101649E40);
  uint64_t v39 = v28[19];
  uint64_t v40 = (uint64_t *)(a1 + v28[18]);
  uint64_t v41 = v40[1];
  uint64_t v60 = *v40;
  double v42 = *(double *)(a1 + v39);
  sub_10001D074(a1 + v28[20], (uint64_t)v21, &qword_101649E50);
  uint64_t v43 = v28[22];
  int v56 = *(_DWORD *)(a1 + v28[21]);
  uint64_t v44 = *(void *)(a1 + v43);
  unsigned int v45 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v45(v18, a1 + v28[25], v4);
  v45(v16, a1 + v28[26], v4);
  v45(v77, a1 + v28[27], v4);
  uint64_t v46 = (uint64_t)v70;
  v45(v70, a1 + v28[28], v4);
  uint64_t v47 = (uint64_t)v73;
  v45(v73, a1 + v28[29], v4);
  uint64_t v48 = a1 + v28[30];
  uint64_t v49 = (uint64_t)v74;
  v45(v74, v48, v4);
  swift_bridgeObjectRetain();
  uint64_t v50 = v59;
  swift_bridgeObjectRetain();
  uint64_t v51 = v61;
  swift_bridgeObjectRetain();
  uint64_t v52 = v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100856548(a1, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
  return sub_100853454(v76, v67, v72, v71, v69, v50, v68, v51, v75, v42, v66, v65, v64, v52, v63, (uint64_t)v62, v60, v41, (uint64_t)v57,
           v56,
           v44,
           v55,
           v54,
           (uint64_t)v77,
           v46,
           v47,
           v49);
}

id sub_100853D90()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000588C(&qword_101649E40);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v77 = (uint64_t)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v74 - v5;
  uint64_t v7 = (int *)type metadata accessor for BeaconProductInfoRecord();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v76 = [objc_allocWithZone((Class)SPDiscoveredAccessoryProductInformation) init];
  if (qword_101637188 != -1) {
    goto LABEL_49;
  }
  while (1)
  {
    uint64_t v10 = (void *)qword_10170EE68;
    id v11 = [self sharedInstance];
    unsigned int v12 = [v11 isInternalBuild];

    if (v12)
    {
      NSString v13 = String._bridgeToObjectiveC()();
      unsigned __int8 v14 = [v10 BOOLForKey:v13];

      int v15 = *(unsigned __int8 *)(v1 + v7[5]);
      if (v15 == 2)
      {
        uint64_t v16 = 0;
        goto LABEL_9;
      }
    }
    else
    {
      int v15 = *(unsigned __int8 *)(v1 + v7[5]);
      if (v15 == 2)
      {
        [v76 setIsManagedAccessory:0];
        sub_100854774(v1, (uint64_t)v9);
        goto LABEL_11;
      }
      unsigned __int8 v14 = 0;
    }
    uint64_t v16 = v15 & 1;
LABEL_9:
    [v76 setIsManagedAccessory:v16];
    sub_100854774(v1, (uint64_t)v9);
    if (v14)
    {
      uint64_t v17 = 0;
      goto LABEL_12;
    }
LABEL_11:
    uint64_t v17 = v9[v7[6]];
LABEL_12:
    sub_100856548((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
    id v18 = v76;
    [v76 setEligibleForPairing:v17];
    [v18 setHidden:*(unsigned __int8 *)(v1 + v7[7])];
    NSString v19 = String._bridgeToObjectiveC()();
    [v18 setModelName:v19];

    NSString v20 = String._bridgeToObjectiveC()();
    [v18 setManufacturerName:v20];

    if (qword_101636CD8 != -1) {
      swift_once();
    }
    OS_dispatch_queue.sync<A>(execute:)();
    uint64_t v9 = (char *)sub_1010AB754((uint64_t)v80);
    swift_bridgeObjectRelease();
    uint64_t v21 = *((void *)v9 + 2);
    if (!v21) {
      break;
    }
    uint64_t v75 = v6;
    unint64_t v22 = 0;
    uint64_t v23 = v9 + 32;
    uint64_t v78 = v9 + 32;
    uint64_t v79 = v21;
    while (v22 < *((void *)v9 + 2))
    {
      uint64_t v29 = *(void *)&v23[32 * v22 + 24];
      uint64_t v30 = *(void *)(v29 + 16);
      if (v30)
      {
        uint64_t v31 = v1 + v7[10];
        uint64_t v32 = *(void *)v31;
        int v33 = *(unsigned __int8 *)(v31 + 8);
        uint64_t v34 = v29 + 64;
        while (1)
        {
          int v35 = *(void *)(v34 - 32) == v32 ? v33 : 1;
          if (v35 != 1) {
            break;
          }
          v34 += 40;
          if (!--v30) {
            goto LABEL_17;
          }
        }
        uint64_t v24 = v7;
        uint64_t v25 = v1;
        uint64_t v6 = (char *)objc_allocWithZone((Class)SPBeaconRole);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        NSString v26 = String._bridgeToObjectiveC()();
        NSString v27 = String._bridgeToObjectiveC()();
        id v28 = [v6 initWithRoleId:v32 role:v26 roleEmoji:v27];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v1 = v25;
        uint64_t v7 = v24;
        [v76 setDefaultRole:v28];

        uint64_t v23 = v78;
        uint64_t v21 = v79;
      }
LABEL_17:
      if (++v22 == v21)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = v75;
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_49:
    swift_once();
  }
  swift_bridgeObjectRelease();
LABEL_29:
  sub_10001D074(v1 + v7[12], (uint64_t)v6, &qword_101649E40);
  uint64_t v36 = type metadata accessor for URL();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  uint64_t v40 = 0;
  if (v38(v6, 1, v36) != 1)
  {
    URL._bridgeToObjectiveC()(v39);
    uint64_t v40 = v41;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v36);
  }
  [v76 setDisableURL:v40];

  if (*(void *)(v1 + v7[11] + 8)) {
    NSString v42 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v42 = 0;
  }
  [v76 setAppBundleIdentifier:v42];

  uint64_t v43 = v77;
  sub_10001D074(v1 + v7[13], v77, &qword_101649E40);
  if (v38((char *)v43, 1, v36) == 1)
  {
    unsigned int v45 = 0;
  }
  else
  {
    uint64_t v46 = v43;
    URL._bridgeToObjectiveC()(v44);
    unsigned int v45 = v47;
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v46, v36);
  }
  id v48 = v76;
  [v76 setLowBatteryInfoURL:v45];

  NSString v49 = String._bridgeToObjectiveC()();
  [v48 setVersion:v49];

  [v48 setTxPower:*(double *)(v1 + v7[15])];
  [v48 setCapabilities:sub_10110DA68(*(_DWORD *)(v1 + v7[17]))];
  uint64_t v77 = *(void *)(v1 + v7[18]);
  if (v77)
  {
    uint64_t v50 = *(void *)(v77 + 16);
    if (v50)
    {
      uint64_t v74 = v7;
      uint64_t v75 = (char *)v1;
      uint64_t v80 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v51 = 0;
      do
      {
        uint64_t v53 = *(unsigned __int8 *)(v77 + v51 + 32);
        uint64_t v54 = *(void *)(v77 + v51 + 80);
        uint64_t v78 = *(char **)(v77 + v51 + 72);
        LODWORD(v79) = *(unsigned __int8 *)(v77 + v51 + 88);
        id v55 = objc_allocWithZone((Class)SPAccessoryLayoutTemplate);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v56 = [v55 init];
        [v56 setPartIdentifier:v53];
        NSString v57 = String._bridgeToObjectiveC()();
        [v56 setPartType:v57];

        NSString v58 = String._bridgeToObjectiveC()();
        [v56 setPartName:v58];

        if (v54)
        {
          swift_bridgeObjectRetain();
          NSString v52 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        else
        {
          NSString v52 = 0;
        }
        [v56 setPartSymbol:v52];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        [v56 setIsPrimary:v79 & 1];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v51 += 64;
        --v50;
      }
      while (v50);
      swift_bridgeObjectRelease();
      uint64_t v7 = v74;
    }
    sub_1008547D8();
    v59.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v59.super.Class isa = 0;
  }
  id v60 = v76;
  [v76 setLayoutTemplate:v59.super.isa];

  URL._bridgeToObjectiveC()((NSURL *)v7[19]);
  uint64_t v62 = v61;
  [v60 setDefaultHeroIcon:v61];

  URL._bridgeToObjectiveC()((NSURL *)v7[20]);
  uint64_t v64 = v63;
  [v60 setDefaultListIcon:v63];

  URL._bridgeToObjectiveC()((NSURL *)v7[21]);
  uint64_t v66 = v65;
  [v60 setDefaultHeroIcon2x:v65];

  URL._bridgeToObjectiveC()((NSURL *)v7[22]);
  uint64_t v68 = v67;
  [v60 setDefaultListIcon2x:v67];

  URL._bridgeToObjectiveC()((NSURL *)v7[23]);
  uint64_t v70 = v69;
  [v60 setDefaultHeroIcon3x:v69];

  URL._bridgeToObjectiveC()((NSURL *)v7[24]);
  int v72 = v71;
  [v60 setDefaultListIcon3x:v71];

  return v60;
}

uint64_t type metadata accessor for BeaconProductInfoRecord()
{
  uint64_t result = qword_10164F1B8;
  if (!qword_10164F1B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100854774(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BeaconProductInfoRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1008547D8()
{
  unint64_t result = qword_101649E58;
  if (!qword_101649E58)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101649E58);
  }
  return result;
}

void *sub_100854818(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    a1 = (void *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    uint64_t v9 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v10 = (void *)((char *)a1 + v9);
    id v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = a3[9];
    uint64_t v14 = a3[10];
    int v15 = (void *)((char *)a1 + v13);
    uint64_t v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *int v15 = *v16;
    v15[1] = v17;
    id v18 = (char *)a1 + v14;
    NSString v19 = (char *)a2 + v14;
    *(void *)id v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = a3[11];
    uint64_t v21 = a3[12];
    unint64_t v22 = (void *)((char *)a1 + v20);
    uint64_t v23 = (void *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    *unint64_t v22 = *v23;
    v22[1] = v24;
    __dst = (char *)a1 + v21;
    uint64_t v25 = (char *)a2 + v21;
    uint64_t v26 = type metadata accessor for URL();
    uint64_t v91 = *(void *)(v26 - 8);
    NSString v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48);
    swift_bridgeObjectRetain();
    id v28 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v90 = v27;
    if (v27(v25, 1, v26))
    {
      uint64_t v29 = sub_10000588C(&qword_101649E40);
      memcpy(__dst, v25, *(void *)(*(void *)(v29 - 8) + 64));
      uint64_t v30 = v91;
    }
    else
    {
      uint64_t v30 = v91;
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(__dst, v28, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(__dst, 0, 1, v26);
    }
    uint64_t v32 = a3[13];
    int v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    __dsta = (void *)v26;
    if (v90((char *)a2 + v32, 1, v26))
    {
      uint64_t v35 = sub_10000588C(&qword_101649E40);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v33, v34, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v33, 0, 1, v26);
    }
    uint64_t v36 = a3[14];
    uint64_t v37 = a3[15];
    uint64_t v38 = (void *)((char *)a1 + v36);
    uint64_t v39 = (void *)((char *)a2 + v36);
    uint64_t v40 = *v39;
    uint64_t v41 = v39[1];
    uint64_t v42 = *(void *)((char *)a2 + v37);
    *uint64_t v38 = v40;
    v38[1] = v41;
    *(void *)((char *)a1 + v37) = v42;
    uint64_t v43 = a3[16];
    uint64_t v44 = (void *)((char *)a1 + v43);
    unsigned int v45 = (void *)((char *)a2 + v43);
    uint64_t v46 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
    uint64_t v47 = *((void *)v46 - 1);
    id v48 = *(unsigned int (**)(void *, uint64_t, int *))(v47 + 48);
    swift_bridgeObjectRetain();
    if (v48(v45, 1, v46))
    {
      uint64_t v49 = sub_10000588C(&qword_101649E50);
      memcpy(v44, v45, *(void *)(*(void *)(v49 - 8) + 64));
      uint64_t v50 = v91;
    }
    else
    {
      uint64_t v87 = v47;
      uint64_t v51 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v51;
      uint64_t v52 = v45[3];
      v44[2] = v45[2];
      v44[3] = v52;
      uint64_t v53 = v45[5];
      v44[4] = v45[4];
      v44[5] = v53;
      *((_WORD *)v44 + 24) = *((_WORD *)v45 + 24);
      *((unsigned char *)v44 + 72) = *((unsigned char *)v45 + 72);
      uint64_t v54 = v45[8];
      v44[7] = v45[7];
      v44[8] = v54;
      uint64_t v55 = v46[10];
      uint64_t v86 = (char *)v44 + v55;
      id v56 = (char *)v45 + v55;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v50 = v91;
      if (v90(v56, 1, (uint64_t)__dsta))
      {
        uint64_t v57 = sub_10000588C(&qword_101649E40);
        memcpy(v86, v56, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v91 + 16))(v86, v56, __dsta);
        (*(void (**)(char *, void, uint64_t, void *))(v91 + 56))(v86, 0, 1, __dsta);
      }
      uint64_t v58 = v46[11];
      NSArray v59 = (char *)v44 + v58;
      id v60 = (char *)v45 + v58;
      if (v90((char *)v45 + v58, 1, (uint64_t)__dsta))
      {
        uint64_t v61 = sub_10000588C(&qword_101649E40);
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v91 + 16))(v59, v60, __dsta);
        (*(void (**)(char *, void, uint64_t, void *))(v91 + 56))(v59, 0, 1, __dsta);
      }
      uint64_t v62 = v46[12];
      uint64_t v63 = (char *)v44 + v62;
      uint64_t v64 = (char *)v45 + v62;
      *(void *)uint64_t v63 = *(void *)v64;
      v63[8] = v64[8];
      uint64_t v65 = v46[13];
      uint64_t v66 = (void *)((char *)v44 + v65);
      int v67 = (void *)((char *)v45 + v65);
      uint64_t v68 = v67[1];
      *uint64_t v66 = *v67;
      v66[1] = v68;
      *(void *)((char *)v44 + v46[14]) = *(void *)((char *)v45 + v46[14]);
      uint64_t v69 = v46[15];
      uint64_t v70 = (void *)((char *)v44 + v69);
      int v71 = (void *)((char *)v45 + v69);
      uint64_t v72 = v71[1];
      void *v70 = *v71;
      v70[1] = v72;
      *(void *)((char *)v44 + v46[16]) = *(void *)((char *)v45 + v46[16]);
      uint64_t v73 = v46[17];
      uint64_t v74 = (char *)v44 + v73;
      uint64_t v75 = (char *)v45 + v73;
      *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
      v74[16] = v75[16];
      uint64_t v76 = v46[18];
      uint64_t v77 = (char *)v44 + v76;
      uint64_t v78 = (char *)v45 + v76;
      *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
      v77[16] = v78[16];
      uint64_t v79 = *(void (**)(void *, void, uint64_t, int *))(v87 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v79(v44, 0, 1, v46);
    }
    uint64_t v80 = a3[18];
    *(_DWORD *)((char *)a1 + a3[17]) = *(_DWORD *)((char *)a2 + a3[17]);
    *(void *)((char *)a1 + v80) = *(void *)((char *)a2 + v80);
    uint64_t v81 = a3[19];
    uint64_t v82 = (char *)a1 + v81;
    uint64_t v83 = (char *)a2 + v81;
    uint64_t v84 = *(void (**)(char *, char *, void *))(v50 + 16);
    swift_bridgeObjectRetain();
    v84(v82, v83, __dsta);
    v84((char *)a1 + a3[20], (char *)a2 + a3[20], __dsta);
    v84((char *)a1 + a3[21], (char *)a2 + a3[21], __dsta);
    v84((char *)a1 + a3[22], (char *)a2 + a3[22], __dsta);
    v84((char *)a1 + a3[23], (char *)a2 + a3[23], __dsta);
    v84((char *)a1 + a3[24], (char *)a2 + a3[24], __dsta);
  }
  return a1;
}

uint64_t sub_100854F18(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[12];
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v6 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (!v7(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + a2[13];
  if (!v7(v8, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v8, v6);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[16];
  uint64_t v10 = type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + *(int *)(v10 + 40);
    if (!v7(v11, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v11, v6);
    }
    uint64_t v12 = v9 + *(int *)(v10 + 44);
    if (!v7(v12, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v12, v6);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  int v15 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v15(a1 + a2[19], v6);
  v15(a1 + a2[20], v6);
  v15(a1 + a2[21], v6);
  v15(a1 + a2[22], v6);
  v15(a1 + a2[23], v6);
  uint64_t v13 = a1 + a2[24];

  return ((uint64_t (*)(uint64_t, uint64_t))v15)(v13, v6);
}

uint64_t sub_10085527C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a3[9];
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)(a1 + v12);
  int v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = a1 + v13;
  uint64_t v18 = a2 + v13;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = a3[11];
  uint64_t v20 = a3[12];
  uint64_t v85 = a3;
  uint64_t v21 = (void *)(a1 + v19);
  unint64_t v22 = (void *)(a2 + v19);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  __dst = (void *)(a1 + v20);
  uint64_t v24 = (const void *)(a2 + v20);
  uint64_t v25 = type metadata accessor for URL();
  uint64_t v26 = *(void *)(v25 - 8);
  NSString v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v89 = v27;
  if (v27((uint64_t)v24, 1, v25))
  {
    uint64_t v28 = sub_10000588C(&qword_101649E40);
    memcpy(__dst, v24, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(__dst, v24, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
  }
  uint64_t v29 = v85[13];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (const void *)(a2 + v29);
  uint64_t v86 = v26;
  __dsta = (void *)v25;
  if (v89(a2 + v29, 1, v25))
  {
    uint64_t v32 = sub_10000588C(&qword_101649E40);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v30, v31, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v30, 0, 1, v25);
  }
  uint64_t v33 = v85[14];
  uint64_t v34 = v85[15];
  uint64_t v35 = (void *)(a1 + v33);
  uint64_t v36 = (uint64_t *)(a2 + v33);
  uint64_t v37 = *v36;
  uint64_t v38 = v36[1];
  uint64_t v39 = *(void *)(a2 + v34);
  *uint64_t v35 = v37;
  v35[1] = v38;
  *(void *)(a1 + v34) = v39;
  uint64_t v40 = v85[16];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  uint64_t v43 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
  uint64_t v44 = *((void *)v43 - 1);
  unsigned int v45 = *(unsigned int (**)(void *, uint64_t, int *))(v44 + 48);
  swift_bridgeObjectRetain();
  if (v45(v42, 1, v43))
  {
    uint64_t v46 = sub_10000588C(&qword_101649E50);
    memcpy(v41, v42, *(void *)(*(void *)(v46 - 8) + 64));
    uint64_t v47 = v86;
  }
  else
  {
    uint64_t v84 = v44;
    uint64_t v48 = v42[1];
    *uint64_t v41 = *v42;
    v41[1] = v48;
    uint64_t v49 = v42[3];
    void v41[2] = v42[2];
    v41[3] = v49;
    uint64_t v50 = v42[5];
    v41[4] = v42[4];
    v41[5] = v50;
    *((_WORD *)v41 + 24) = *((_WORD *)v42 + 24);
    *((unsigned char *)v41 + 72) = *((unsigned char *)v42 + 72);
    uint64_t v51 = v42[8];
    v41[7] = v42[7];
    v41[8] = v51;
    uint64_t v52 = v43[10];
    uint64_t v83 = (char *)v41 + v52;
    uint64_t v53 = (char *)v42 + v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v47 = v86;
    if (v89((uint64_t)v53, 1, (uint64_t)__dsta))
    {
      uint64_t v54 = sub_10000588C(&qword_101649E40);
      memcpy(v83, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, void *))(v86 + 16))(v83, v53, __dsta);
      (*(void (**)(char *, void, uint64_t, void *))(v86 + 56))(v83, 0, 1, __dsta);
    }
    uint64_t v55 = v43[11];
    id v56 = (char *)v41 + v55;
    uint64_t v57 = (char *)v42 + v55;
    if (v89((uint64_t)v42 + v55, 1, (uint64_t)__dsta))
    {
      uint64_t v58 = sub_10000588C(&qword_101649E40);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, void *))(v86 + 16))(v56, v57, __dsta);
      (*(void (**)(char *, void, uint64_t, void *))(v86 + 56))(v56, 0, 1, __dsta);
    }
    uint64_t v59 = v43[12];
    id v60 = (char *)v41 + v59;
    uint64_t v61 = (char *)v42 + v59;
    *(void *)id v60 = *(void *)v61;
    v60[8] = v61[8];
    uint64_t v62 = v43[13];
    uint64_t v63 = (void *)((char *)v41 + v62);
    uint64_t v64 = (void *)((char *)v42 + v62);
    uint64_t v65 = v64[1];
    *uint64_t v63 = *v64;
    v63[1] = v65;
    *(void *)((char *)v41 + v43[14]) = *(void *)((char *)v42 + v43[14]);
    uint64_t v66 = v43[15];
    int v67 = (void *)((char *)v41 + v66);
    uint64_t v68 = (void *)((char *)v42 + v66);
    uint64_t v69 = v68[1];
    void *v67 = *v68;
    v67[1] = v69;
    *(void *)((char *)v41 + v43[16]) = *(void *)((char *)v42 + v43[16]);
    uint64_t v70 = v43[17];
    int v71 = (char *)v41 + v70;
    uint64_t v72 = (char *)v42 + v70;
    *(_OWORD *)int v71 = *(_OWORD *)v72;
    v71[16] = v72[16];
    uint64_t v73 = v43[18];
    uint64_t v74 = (char *)v41 + v73;
    uint64_t v75 = (char *)v42 + v73;
    *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
    v74[16] = v75[16];
    uint64_t v76 = *(void (**)(void *, void, uint64_t, int *))(v84 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v76(v41, 0, 1, v43);
  }
  uint64_t v77 = v85[18];
  *(_DWORD *)(a1 + v85[17]) = *(_DWORD *)(a2 + v85[17]);
  *(void *)(a1 + v77) = *(void *)(a2 + v77);
  uint64_t v78 = v85[19];
  uint64_t v79 = a1 + v78;
  uint64_t v80 = a2 + v78;
  uint64_t v81 = *(void (**)(uint64_t, uint64_t, void *))(v47 + 16);
  swift_bridgeObjectRetain();
  v81(v79, v80, __dsta);
  v81(a1 + v85[20], a2 + v85[20], __dsta);
  v81(a1 + v85[21], a2 + v85[21], __dsta);
  v81(a1 + v85[22], a2 + v85[22], __dsta);
  v81(a1 + v85[23], a2 + v85[23], __dsta);
  v81(a1 + v85[24], a2 + v85[24], __dsta);
  return a1;
}

uint64_t sub_100855924(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[9];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v13;
  int v15 = (uint64_t *)(a2 + v13);
  uint64_t v16 = *v15;
  *(unsigned char *)(v14 + 8) = *((unsigned char *)v15 + 8);
  *(void *)uint64_t v14 = v16;
  uint64_t v17 = a3[11];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[12];
  uint64_t v21 = (void *)(a1 + v20);
  unint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = type metadata accessor for URL();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48);
  unsigned int v26 = v25(v21, 1, v23);
  unsigned int v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
LABEL_6:
    uint64_t v28 = sub_10000588C(&qword_101649E40);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 24))(v21, v22, v23);
LABEL_7:
  uint64_t v29 = a3[13];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  unsigned int v32 = v25((void *)(a1 + v29), 1, v23);
  unsigned int v33 = v25(v31, 1, v23);
  uint64_t v120 = v24;
  char v118 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v25;
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v30, v31, v23);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v30, 0, 1, v23);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v33)
  {
    (*(void (**)(void *, uint64_t))(v24 + 8))(v30, v23);
LABEL_12:
    uint64_t v34 = sub_10000588C(&qword_101649E40);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 24))(v30, v31, v23);
LABEL_13:
  uint64_t v35 = a3[14];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  *uint64_t v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  uint64_t v38 = a3[16];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
  __src = *(void **)(v41 - 8);
  uint64_t v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))__src[6];
  int v43 = v42(v39, 1, v41);
  uint64_t v119 = (int *)v41;
  int v44 = v42(v40, 1, v41);
  if (v43)
  {
    if (!v44)
    {
      *(void *)uint64_t v39 = *(void *)v40;
      *(void *)(v39 + 8) = *(void *)(v40 + 8);
      *(void *)(v39 + 16) = *(void *)(v40 + 16);
      *(void *)(v39 + 24) = *(void *)(v40 + 24);
      *(void *)(v39 + 32) = *(void *)(v40 + 32);
      *(void *)(v39 + 40) = *(void *)(v40 + 40);
      *(_WORD *)(v39 + 48) = *(_WORD *)(v40 + 48);
      *(void *)(v39 + 56) = *(void *)(v40 + 56);
      uint64_t v45 = *(void *)(v40 + 64);
      *(unsigned char *)(v39 + 72) = *(unsigned char *)(v40 + 72);
      *(void *)(v39 + 64) = v45;
      uint64_t v46 = (int *)v41;
      uint64_t v47 = *(int *)(v41 + 40);
      __dst = (void *)(v39 + v47);
      uint64_t v48 = (void *)(v40 + v47);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v25(v48, 1, v23))
      {
        uint64_t v49 = sub_10000588C(&qword_101649E40);
        memcpy(__dst, v48, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v120 + 16))(__dst, v48, v23);
        uint64_t v46 = v119;
        (*(void (**)(void *, void, uint64_t, uint64_t))(v120 + 56))(__dst, 0, 1, v23);
      }
      uint64_t v58 = v46[11];
      uint64_t v59 = (void *)(v39 + v58);
      id v60 = (const void *)(v40 + v58);
      if (v118(v40 + v58, 1, v23))
      {
        uint64_t v61 = sub_10000588C(&qword_101649E40);
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v120 + 16))(v59, v60, v23);
        uint64_t v46 = v119;
        (*(void (**)(void *, void, uint64_t, uint64_t))(v120 + 56))(v59, 0, 1, v23);
      }
      uint64_t v62 = v46[12];
      uint64_t v63 = v39 + v62;
      uint64_t v64 = (uint64_t *)(v40 + v62);
      uint64_t v65 = *v64;
      *(unsigned char *)(v63 + 8) = *((unsigned char *)v64 + 8);
      *(void *)uint64_t v63 = v65;
      uint64_t v66 = v46[13];
      int v67 = (void *)(v39 + v66);
      uint64_t v68 = (void *)(v40 + v66);
      void *v67 = *v68;
      v67[1] = v68[1];
      *(void *)(v39 + v46[14]) = *(void *)(v40 + v46[14]);
      uint64_t v69 = v46[15];
      uint64_t v70 = (void *)(v39 + v69);
      int v71 = (void *)(v40 + v69);
      void *v70 = *v71;
      v70[1] = v71[1];
      *(void *)(v39 + v46[16]) = *(void *)(v40 + v46[16]);
      uint64_t v72 = v46[17];
      uint64_t v73 = v39 + v72;
      uint64_t v74 = (long long *)(v40 + v72);
      long long v75 = *v74;
      *(unsigned char *)(v73 + 16) = *((unsigned char *)v74 + 16);
      *(_OWORD *)uint64_t v73 = v75;
      uint64_t v76 = v46[18];
      uint64_t v77 = v39 + v76;
      uint64_t v78 = (long long *)(v40 + v76);
      long long v79 = *v78;
      *(unsigned char *)(v77 + 16) = *((unsigned char *)v78 + 16);
      *(_OWORD *)uint64_t v77 = v79;
      uint64_t v80 = (void (*)(uint64_t, void, uint64_t, int *))__src[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v80(v39, 0, 1, v46);
      goto LABEL_30;
    }
LABEL_19:
    uint64_t v50 = sub_10000588C(&qword_101649E50);
    memcpy((void *)v39, (const void *)v40, *(void *)(*(void *)(v50 - 8) + 64));
LABEL_30:
    uint64_t v81 = v120;
    goto LABEL_31;
  }
  if (v44)
  {
    sub_100856548(v39, type metadata accessor for AccessoryInfoResponseContent.Configuration);
    goto LABEL_19;
  }
  *(void *)uint64_t v39 = *(void *)v40;
  *(void *)(v39 + 8) = *(void *)(v40 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v39 + 16) = *(void *)(v40 + 16);
  *(void *)(v39 + 24) = *(void *)(v40 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v39 + 32) = *(void *)(v40 + 32);
  *(void *)(v39 + 40) = *(void *)(v40 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(v39 + 48) = *(_WORD *)(v40 + 48);
  *(void *)(v39 + 56) = *(void *)(v40 + 56);
  uint64_t v51 = *(void *)(v40 + 64);
  *(unsigned char *)(v39 + 72) = *(unsigned char *)(v40 + 72);
  *(void *)(v39 + 64) = v51;
  uint64_t v52 = *(int *)(v41 + 40);
  uint64_t v53 = (const void *)(v40 + v52);
  __dsta = (void *)(v39 + v52);
  int v54 = ((uint64_t (*)(void))v25)();
  unsigned int v55 = v118((uint64_t)v53, 1, v23);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(void *, const void *, uint64_t))(v120 + 16))(__dsta, v53, v23);
      uint64_t v84 = v41;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v120 + 56))(__dsta, 0, 1, v23);
      uint64_t v85 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v118;
      goto LABEL_37;
    }
    size_t v56 = *(void *)(*(void *)(sub_10000588C(&qword_101649E40) - 8) + 64);
    uint64_t v57 = __dsta;
  }
  else
  {
    if (!v55)
    {
      (*(void (**)(void *, const void *, uint64_t))(v120 + 24))(__dsta, v53, v23);
      goto LABEL_35;
    }
    (*(void (**)(void *, uint64_t))(v120 + 8))(__dsta, v23);
    size_t v56 = *(void *)(*(void *)(sub_10000588C(&qword_101649E40) - 8) + 64);
    uint64_t v57 = __dsta;
  }
  memcpy(v57, v53, v56);
LABEL_35:
  uint64_t v85 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v118;
  uint64_t v84 = v41;
LABEL_37:
  uint64_t v86 = *(int *)(v84 + 44);
  uint64_t v87 = (void *)(v39 + v86);
  uint64_t v88 = (const void *)(v40 + v86);
  int v89 = v85(v39 + v86, 1, v23);
  uint64_t v90 = (uint64_t (*)(const void *, uint64_t, uint64_t))v85;
  int v91 = v89;
  int v92 = v90(v88, 1, v23);
  if (v91)
  {
    if (v92)
    {
      uint64_t v93 = sub_10000588C(&qword_101649E40);
      memcpy(v87, v88, *(void *)(*(void *)(v93 - 8) + 64));
      uint64_t v81 = v120;
    }
    else
    {
      uint64_t v96 = v88;
      uint64_t v81 = v120;
      (*(void (**)(void *, const void *, uint64_t))(v120 + 16))(v87, v96, v23);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v120 + 56))(v87, 0, 1, v23);
    }
  }
  else
  {
    uint64_t v94 = v88;
    uint64_t v81 = v120;
    if (v92)
    {
      (*(void (**)(void *, uint64_t))(v120 + 8))(v87, v23);
      uint64_t v95 = sub_10000588C(&qword_101649E40);
      memcpy(v87, v94, *(void *)(*(void *)(v95 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v120 + 24))(v87, v94, v23);
    }
  }
  uint64_t v97 = v119[12];
  uint64_t v98 = v39 + v97;
  uint64_t v99 = (uint64_t *)(v40 + v97);
  uint64_t v100 = *v99;
  *(unsigned char *)(v98 + 8) = *((unsigned char *)v99 + 8);
  *(void *)uint64_t v98 = v100;
  uint64_t v101 = v119[13];
  uint64_t v102 = (void *)(v39 + v101);
  uint64_t v103 = (void *)(v40 + v101);
  *uint64_t v102 = *v103;
  v102[1] = v103[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v39 + v119[14]) = *(void *)(v40 + v119[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v104 = v119[15];
  uint64_t v105 = (void *)(v39 + v104);
  os_log_t v106 = (void *)(v40 + v104);
  *uint64_t v105 = *v106;
  v105[1] = v106[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v39 + v119[16]) = *(void *)(v40 + v119[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v107 = v119[17];
  uint64_t v108 = v39 + v107;
  uint64_t v109 = (long long *)(v40 + v107);
  long long v110 = *v109;
  *(unsigned char *)(v108 + 16) = *((unsigned char *)v109 + 16);
  *(_OWORD *)uint64_t v108 = v110;
  uint64_t v111 = v119[18];
  uint64_t v112 = v39 + v111;
  uint64_t v113 = (long long *)(v40 + v111);
  long long v114 = *v113;
  *(unsigned char *)(v112 + 16) = *((unsigned char *)v113 + 16);
  *(_OWORD *)uint64_t v112 = v114;
LABEL_31:
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 24);
  v82(a1 + a3[19], a2 + a3[19], v23);
  v82(a1 + a3[20], a2 + a3[20], v23);
  v82(a1 + a3[21], a2 + a3[21], v23);
  v82(a1 + a3[22], a2 + a3[22], v23);
  v82(a1 + a3[23], a2 + a3[23], v23);
  v82(a1 + a3[24], a2 + a3[24], v23);
  return a1;
}

uint64_t sub_100856548(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1008565A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = a3[12];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    uint64_t v18 = sub_10000588C(&qword_101649E40);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v19 = a3[13];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  uint64_t v53 = (unsigned int (*)(char *, uint64_t, uint64_t))v17;
  if (v17((const void *)(a2 + v19), 1, v15))
  {
    uint64_t v22 = sub_10000588C(&qword_101649E40);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v20, v21, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
  }
  uint64_t v23 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(void *)(a1 + v23) = *(void *)(a2 + v23);
  uint64_t v24 = a3[16];
  uint64_t v25 = (_OWORD *)(a1 + v24);
  unsigned int v26 = (_OWORD *)(a2 + v24);
  unsigned int v27 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
  uint64_t v28 = *((void *)v27 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = sub_10000588C(&qword_101649E50);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    long long v30 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v30;
    v25[2] = v26[2];
    *((_WORD *)v25 + 24) = *((_WORD *)v26 + 24);
    uint64_t v31 = *((void *)v26 + 8);
    *((void *)v25 + 7) = *((void *)v26 + 7);
    *((void *)v25 + 8) = v31;
    *((unsigned char *)v25 + 72) = *((unsigned char *)v26 + 72);
    uint64_t v32 = v27[10];
    uint64_t v50 = v28;
    __dst = (char *)v25 + v32;
    unsigned int v33 = (char *)v26 + v32;
    if (v53((char *)v26 + v32, 1, v15))
    {
      uint64_t v34 = sub_10000588C(&qword_101649E40);
      memcpy(__dst, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v33, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v35 = v27[11];
    __dsta = (char *)v25 + v35;
    uint64_t v36 = (char *)v26 + v35;
    if (v53((char *)v26 + v35, 1, v15))
    {
      uint64_t v37 = sub_10000588C(&qword_101649E40);
      memcpy(__dsta, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dsta, v36, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dsta, 0, 1, v15);
    }
    uint64_t v38 = v27[12];
    uint64_t v39 = (char *)v25 + v38;
    uint64_t v40 = (char *)v26 + v38;
    *(void *)uint64_t v39 = *(void *)v40;
    v39[8] = v40[8];
    *(_OWORD *)((char *)v25 + v27[13]) = *(_OWORD *)((char *)v26 + v27[13]);
    *(void *)((char *)v25 + v27[14]) = *(void *)((char *)v26 + v27[14]);
    *(_OWORD *)((char *)v25 + v27[15]) = *(_OWORD *)((char *)v26 + v27[15]);
    *(void *)((char *)v25 + v27[16]) = *(void *)((char *)v26 + v27[16]);
    uint64_t v41 = v27[17];
    uint64_t v42 = (char *)v25 + v41;
    int v43 = (char *)v26 + v41;
    v42[16] = v43[16];
    *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
    uint64_t v44 = v27[18];
    uint64_t v45 = (char *)v25 + v44;
    uint64_t v46 = (char *)v26 + v44;
    v45[16] = v46[16];
    *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v50 + 56))(v25, 0, 1, v27);
  }
  uint64_t v47 = a3[18];
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  *(void *)(a1 + v47) = *(void *)(a2 + v47);
  uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
  v48(a1 + a3[19], a2 + a3[19], v15);
  v48(a1 + a3[20], a2 + a3[20], v15);
  v48(a1 + a3[21], a2 + a3[21], v15);
  v48(a1 + a3[22], a2 + a3[22], v15);
  v48(a1 + a3[23], a2 + a3[23], v15);
  v48(a1 + a3[24], a2 + a3[24], v15);
  return a1;
}

uint64_t sub_100856B90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  void *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[9];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[10];
  uint64_t v19 = a3[11];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = (void *)(a1 + v19);
  uint64_t v23 = (uint64_t *)(a2 + v19);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[12];
  unsigned int v27 = (void *)(a1 + v26);
  uint64_t v28 = (const void *)(a2 + v26);
  uint64_t v29 = type metadata accessor for URL();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(uint64_t (**)(void))(v30 + 48);
  int v32 = ((uint64_t (*)(void *, uint64_t, uint64_t))v31)(v27, 1, v29);
  int v33 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v31)(v28, 1, v29);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, const void *, uint64_t))(v30 + 32))(v27, v28, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v33)
  {
    (*(void (**)(void *, uint64_t))(v30 + 8))(v27, v29);
LABEL_6:
    uint64_t v34 = sub_10000588C(&qword_101649E40);
    memcpy(v27, v28, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v30 + 40))(v27, v28, v29);
LABEL_7:
  uint64_t v35 = a3[13];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (const void *)(a2 + v35);
  int v38 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v31)(a1 + v35, 1, v29);
  int v39 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v31)(v37, 1, v29);
  unint64_t v116 = v31;
  uint64_t v117 = v30;
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(void *, const void *, uint64_t))(v30 + 32))(v36, v37, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v36, 0, 1, v29);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v39)
  {
    (*(void (**)(void *, uint64_t))(v30 + 8))(v36, v29);
LABEL_12:
    uint64_t v40 = sub_10000588C(&qword_101649E40);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v30 + 40))(v36, v37, v29);
LABEL_13:
  uint64_t v41 = a3[14];
  uint64_t v42 = (void *)(a1 + v41);
  int v43 = (uint64_t *)(a2 + v41);
  uint64_t v45 = *v43;
  uint64_t v44 = v43[1];
  *uint64_t v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  uint64_t v46 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  uint64_t v49 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
  uint64_t v113 = *((void *)v49 - 1);
  uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v113 + 48);
  int v51 = v50(v47, 1, v49);
  int v52 = v50(v48, 1, v49);
  if (!v51)
  {
    if (v52)
    {
      sub_100856548(v47, type metadata accessor for AccessoryInfoResponseContent.Configuration);
      goto LABEL_19;
    }
    uint64_t v60 = *(void *)(v48 + 8);
    *(void *)uint64_t v47 = *(void *)v48;
    *(void *)(v47 + 8) = v60;
    swift_bridgeObjectRelease();
    uint64_t v61 = *(void *)(v48 + 24);
    *(void *)(v47 + 16) = *(void *)(v48 + 16);
    *(void *)(v47 + 24) = v61;
    swift_bridgeObjectRelease();
    uint64_t v62 = *(void *)(v48 + 40);
    *(void *)(v47 + 32) = *(void *)(v48 + 32);
    *(void *)(v47 + 40) = v62;
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 48) = *(_WORD *)(v48 + 48);
    uint64_t v63 = *(void *)(v48 + 64);
    *(void *)(v47 + 56) = *(void *)(v48 + 56);
    *(void *)(v47 + 64) = v63;
    *(unsigned char *)(v47 + 72) = *(unsigned char *)(v48 + 72);
    uint64_t v64 = v49[10];
    uint64_t v65 = (void *)(v48 + v64);
    long long v114 = (void *)(v47 + v64);
    int v66 = v31();
    __dsta = v65;
    int v67 = ((uint64_t (*)(void *, uint64_t, uint64_t))v31)(v65, 1, v29);
    if (v66)
    {
      uint64_t v57 = v117;
      if (v67)
      {
        size_t v68 = *(void *)(*(void *)(sub_10000588C(&qword_101649E40) - 8) + 64);
        uint64_t v69 = v114;
LABEL_32:
        memcpy(v69, __dsta, v68);
        goto LABEL_35;
      }
      (*(void (**)(void *, void *, uint64_t))(v117 + 32))(v114, __dsta, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v117 + 56))(v114, 0, 1, v29);
    }
    else
    {
      uint64_t v57 = v117;
      if (v67)
      {
        (*(void (**)(void *, uint64_t))(v117 + 8))(v114, v29);
        size_t v68 = *(void *)(*(void *)(sub_10000588C(&qword_101649E40) - 8) + 64);
        uint64_t v69 = v114;
        goto LABEL_32;
      }
      (*(void (**)(void *, void *, uint64_t))(v117 + 40))(v114, __dsta, v29);
    }
LABEL_35:
    uint64_t v82 = v49[11];
    uint64_t v83 = (const void *)(v48 + v82);
    __dstc = (void *)(v47 + v82);
    int v115 = v116();
    int v84 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v116)(v83, 1, v29);
    if (v115)
    {
      if (!v84)
      {
        (*(void (**)(void *, const void *, uint64_t))(v57 + 32))(__dstc, v83, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(__dstc, 0, 1, v29);
        goto LABEL_43;
      }
      size_t v85 = *(void *)(*(void *)(sub_10000588C(&qword_101649E40) - 8) + 64);
      uint64_t v86 = __dstc;
    }
    else
    {
      if (!v84)
      {
        (*(void (**)(void *, const void *, uint64_t))(v57 + 40))(__dstc, v83, v29);
        goto LABEL_43;
      }
      (*(void (**)(void *, uint64_t))(v57 + 8))(__dstc, v29);
      size_t v85 = *(void *)(*(void *)(sub_10000588C(&qword_101649E40) - 8) + 64);
      uint64_t v86 = __dstc;
    }
    memcpy(v86, v83, v85);
LABEL_43:
    uint64_t v87 = v49[12];
    uint64_t v88 = v47 + v87;
    uint64_t v89 = v48 + v87;
    *(void *)uint64_t v88 = *(void *)v89;
    *(unsigned char *)(v88 + 8) = *(unsigned char *)(v89 + 8);
    uint64_t v90 = v49[13];
    int v91 = (void *)(v47 + v90);
    int v92 = (uint64_t *)(v48 + v90);
    uint64_t v94 = *v92;
    uint64_t v93 = v92[1];
    *int v91 = v94;
    v91[1] = v93;
    swift_bridgeObjectRelease();
    *(void *)(v47 + v49[14]) = *(void *)(v48 + v49[14]);
    swift_bridgeObjectRelease();
    uint64_t v95 = v49[15];
    uint64_t v96 = (void *)(v47 + v95);
    uint64_t v97 = (uint64_t *)(v48 + v95);
    uint64_t v99 = *v97;
    uint64_t v98 = v97[1];
    *uint64_t v96 = v99;
    v96[1] = v98;
    swift_bridgeObjectRelease();
    *(void *)(v47 + v49[16]) = *(void *)(v48 + v49[16]);
    swift_bridgeObjectRelease();
    uint64_t v100 = v49[17];
    uint64_t v101 = v47 + v100;
    uint64_t v102 = v48 + v100;
    *(_OWORD *)uint64_t v101 = *(_OWORD *)v102;
    *(unsigned char *)(v101 + 16) = *(unsigned char *)(v102 + 16);
    uint64_t v103 = v49[18];
    uint64_t v104 = v47 + v103;
    uint64_t v105 = v48 + v103;
    *(unsigned char *)(v104 + 16) = *(unsigned char *)(v105 + 16);
    *(_OWORD *)uint64_t v104 = *(_OWORD *)v105;
    goto LABEL_44;
  }
  if (v52)
  {
LABEL_19:
    uint64_t v59 = sub_10000588C(&qword_101649E50);
    memcpy((void *)v47, (const void *)v48, *(void *)(*(void *)(v59 - 8) + 64));
    uint64_t v57 = v117;
    goto LABEL_44;
  }
  long long v53 = *(_OWORD *)(v48 + 16);
  *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
  *(_OWORD *)(v47 + 16) = v53;
  *(_OWORD *)(v47 + 32) = *(_OWORD *)(v48 + 32);
  *(_WORD *)(v47 + 48) = *(_WORD *)(v48 + 48);
  uint64_t v54 = *(void *)(v48 + 64);
  *(void *)(v47 + 56) = *(void *)(v48 + 56);
  *(void *)(v47 + 64) = v54;
  *(unsigned char *)(v47 + 72) = *(unsigned char *)(v48 + 72);
  uint64_t v55 = v49[10];
  __dst = (void *)(v47 + v55);
  size_t v56 = (const void *)(v48 + v55);
  uint64_t v57 = v117;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v31)(v48 + v55, 1, v29))
  {
    uint64_t v58 = sub_10000588C(&qword_101649E40);
    memcpy(__dst, v56, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v117 + 32))(__dst, v56, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v117 + 56))(__dst, 0, 1, v29);
  }
  uint64_t v70 = v49[11];
  __dstb = (void *)(v47 + v70);
  int v71 = (const void *)(v48 + v70);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v31)(v48 + v70, 1, v29))
  {
    uint64_t v72 = sub_10000588C(&qword_101649E40);
    memcpy(__dstb, v71, *(void *)(*(void *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v117 + 32))(__dstb, v71, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v117 + 56))(__dstb, 0, 1, v29);
  }
  uint64_t v73 = v49[12];
  uint64_t v74 = v47 + v73;
  uint64_t v75 = v48 + v73;
  *(void *)uint64_t v74 = *(void *)v75;
  *(unsigned char *)(v74 + 8) = *(unsigned char *)(v75 + 8);
  *(_OWORD *)(v47 + v49[13]) = *(_OWORD *)(v48 + v49[13]);
  *(void *)(v47 + v49[14]) = *(void *)(v48 + v49[14]);
  *(_OWORD *)(v47 + v49[15]) = *(_OWORD *)(v48 + v49[15]);
  *(void *)(v47 + v49[16]) = *(void *)(v48 + v49[16]);
  uint64_t v76 = v49[17];
  uint64_t v77 = v47 + v76;
  uint64_t v78 = v48 + v76;
  *(unsigned char *)(v77 + 16) = *(unsigned char *)(v78 + 16);
  *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
  uint64_t v79 = v49[18];
  uint64_t v80 = v47 + v79;
  uint64_t v81 = v48 + v79;
  *(unsigned char *)(v80 + 16) = *(unsigned char *)(v81 + 16);
  *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
  (*(void (**)(uint64_t, void, uint64_t))(v113 + 56))(v47, 0, 1);
LABEL_44:
  uint64_t v106 = a3[18];
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  *(void *)(a1 + v106) = *(void *)(a2 + v106);
  swift_bridgeObjectRelease();
  uint64_t v107 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 40);
  v107(a1 + a3[19], a2 + a3[19], v29);
  v107(a1 + a3[20], a2 + a3[20], v29);
  v107(a1 + a3[21], a2 + a3[21], v29);
  v107(a1 + a3[22], a2 + a3[22], v29);
  v107(a1 + a3[23], a2 + a3[23], v29);
  v107(a1 + a3[24], a2 + a3[24], v29);
  return a1;
}

uint64_t sub_100857648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10085765C);
}

uint64_t sub_10085765C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[8] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  uint64_t v13 = sub_10000588C(&qword_101649E40);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a3[12];
LABEL_11:
    uint64_t v10 = a1 + v15;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_12;
  }
  uint64_t v16 = sub_10000588C(&qword_101649E50);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a3[16];
    goto LABEL_11;
  }
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[19];

  return v18(v20, a2, v19);
}

uint64_t sub_100857834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100857848);
}

uint64_t sub_100857848(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[8] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = sub_10000588C(&qword_101649E40);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[12];
LABEL_9:
    uint64_t v12 = a1 + v15;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_10000588C(&qword_101649E50);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[16];
    goto LABEL_9;
  }
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a4[19];

  return v18(v20, a2, a2, v19);
}

void sub_100857A20()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_100857BFC(319, (unint64_t *)&qword_10164BC80, (void (*)(uint64_t))&type metadata accessor for URL);
    if (v1 <= 0x3F)
    {
      sub_100857BFC(319, &qword_10164C2E0, (void (*)(uint64_t))type metadata accessor for AccessoryInfoResponseContent.Configuration);
      if (v2 <= 0x3F)
      {
        type metadata accessor for URL();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_100857BFC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100857C50()
{
  return sub_100858B04(&qword_10164F240, (void (*)(uint64_t))type metadata accessor for BeaconProductInfoRecord);
}

uint64_t sub_100857C98(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_100858B04(&qword_10164F248, (void (*)(uint64_t))type metadata accessor for BeaconProductInfoRecord);
  uint64_t result = sub_100858B04(&qword_10164F250, (void (*)(uint64_t))type metadata accessor for BeaconProductInfoRecord);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100857D1C()
{
  unint64_t result = qword_10164F260;
  if (!qword_10164F260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F260);
  }
  return result;
}

uint64_t sub_100857D70(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000592C(&qword_10164C530);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100857DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100857E44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
  uint64_t v125 = *(void *)(v4 - 8);
  uint64_t v126 = v4;
  __chkstk_darwin(v4);
  uint64_t v120 = (uint64_t)&v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_10000588C(&qword_10164C5A0);
  __chkstk_darwin(v122);
  uint64_t v127 = (uint64_t)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000588C(&qword_101649E50);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v121 = (uint64_t)&v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v123 = (uint64_t)&v114 - v11;
  __chkstk_darwin(v10);
  uint64_t v124 = (uint64_t)&v114 - v12;
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v130 = *(void *)(v13 - 8);
  uint64_t v131 = v13;
  __chkstk_darwin(v13);
  os_log_type_t v129 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000588C(&qword_10164C4E8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v128 = (char *)&v114 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v114 - v18;
  uint64_t v20 = sub_10000588C(&qword_101649E40);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v23 = (char *)&v114 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v114 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v114 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  int v32 = (char *)&v114 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = (char *)&v114 - v34;
  __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v114 - v36;
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    goto LABEL_9;
  }
  int v38 = (int *)type metadata accessor for BeaconProductInfoRecord();
  uint64_t v39 = v38[5];
  int v40 = *(unsigned __int8 *)(a1 + v39);
  int v41 = *(unsigned __int8 *)(a2 + v39);
  if (v40 == 2)
  {
    if (v41 != 2) {
      goto LABEL_9;
    }
  }
  else
  {
    char v42 = 0;
    BOOL v43 = (v40 & 1) == 0;
    if (v41 == 2 || ((v43 ^ v41) & 1) == 0) {
      return v42 & 1;
    }
  }
  if (*(unsigned __int8 *)(a1 + v38[6]) != *(unsigned __int8 *)(a2 + v38[6])
    || *(unsigned __int8 *)(a1 + v38[7]) != *(unsigned __int8 *)(a2 + v38[7]))
  {
    goto LABEL_9;
  }
  uint64_t v45 = v38[8];
  uint64_t v46 = *(void *)(a1 + v45);
  uint64_t v47 = *(void *)(a1 + v45 + 8);
  uint64_t v48 = (void *)(a2 + v45);
  uint64_t v49 = v48[1];
  BOOL v50 = v46 == *v48;
  uint64_t v119 = v38;
  if (v50 && v47 == v49
    || (v51 = _stringCompareWithSmolCheck(_:_:expecting:)(), int v38 = v119, v52 = v51, v42 = 0, (v52 & 1) != 0))
  {
    uint64_t v53 = v38[9];
    uint64_t v54 = *(void *)(a1 + v53);
    uint64_t v55 = *(void *)(a1 + v53 + 8);
    size_t v56 = (void *)(a2 + v53);
    if (v54 == *v56 && v55 == v56[1]) {
      goto LABEL_18;
    }
    char v57 = _stringCompareWithSmolCheck(_:_:expecting:)();
    int v38 = v119;
    char v58 = v57;
    char v42 = 0;
    if (v58)
    {
LABEL_18:
      uint64_t v59 = v38[10];
      uint64_t v60 = (void *)(a1 + v59);
      char v61 = *(unsigned char *)(a1 + v59 + 8);
      uint64_t v62 = (void *)(a2 + v59);
      int v63 = *(unsigned __int8 *)(a2 + v59 + 8);
      if (v61)
      {
        if (!v63) {
          goto LABEL_9;
        }
      }
      else
      {
        if (*v60 != *v62) {
          LOBYTE(v63) = 1;
        }
        if (v63) {
          goto LABEL_9;
        }
      }
      uint64_t v64 = v38[11];
      uint64_t v65 = (void *)(a1 + v64);
      uint64_t v66 = *(void *)(a1 + v64 + 8);
      int v67 = (void *)(a2 + v64);
      uint64_t v68 = v67[1];
      if (v66)
      {
        if (!v68) {
          goto LABEL_9;
        }
        if (*v65 != *v67 || v66 != v68)
        {
          char v69 = _stringCompareWithSmolCheck(_:_:expecting:)();
          int v38 = v119;
          char v70 = v69;
          char v42 = 0;
          if ((v70 & 1) == 0) {
            return v42 & 1;
          }
        }
      }
      else if (v68)
      {
        goto LABEL_9;
      }
      uint64_t v71 = v38[12];
      uint64_t v116 = a1;
      uint64_t v72 = a1 + v71;
      uint64_t v73 = v38;
      sub_10001D074(v72, (uint64_t)v37, &qword_101649E40);
      uint64_t v74 = v73[12];
      uint64_t v117 = a2;
      sub_10001D074(a2 + v74, (uint64_t)v35, &qword_101649E40);
      uint64_t v75 = (uint64_t)&v19[*(int *)(v15 + 48)];
      sub_10001D074((uint64_t)v37, (uint64_t)v19, &qword_101649E40);
      uint64_t v118 = v75;
      sub_10001D074((uint64_t)v35, v75, &qword_101649E40);
      uint64_t v77 = v130 + 48;
      uint64_t v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48);
      unsigned int v78 = v76(v19, 1, v131);
      int v115 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v76;
      if (v78 == 1)
      {
        sub_10001DAB4((uint64_t)v35, &qword_101649E40);
        sub_10001DAB4((uint64_t)v37, &qword_101649E40);
        uint64_t v79 = v131;
        if (v76((char *)v118, 1, v131) != 1) {
          goto LABEL_42;
        }
        sub_10001DAB4((uint64_t)v19, &qword_101649E40);
      }
      else
      {
        sub_10001D074((uint64_t)v19, (uint64_t)v32, &qword_101649E40);
        uint64_t v114 = v77;
        if (v76((char *)v118, 1, v131) == 1)
        {
          uint64_t v80 = v130;
          sub_10001DAB4((uint64_t)v35, &qword_101649E40);
          sub_10001DAB4((uint64_t)v37, &qword_101649E40);
          (*(void (**)(char *, uint64_t))(v80 + 8))(v32, v131);
          goto LABEL_42;
        }
        (*(void (**)(char *, uint64_t, uint64_t))(v130 + 32))(v129, v118, v131);
        sub_100858B04(&qword_10164C4F0, (void (*)(uint64_t))&type metadata accessor for URL);
        LODWORD(v118) = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v81 = *(void (**)(char *, uint64_t))(v130 + 8);
        v81(v129, v131);
        sub_10001DAB4((uint64_t)v35, &qword_101649E40);
        sub_10001DAB4((uint64_t)v37, &qword_101649E40);
        uint64_t v79 = v131;
        v81(v32, v131);
        sub_10001DAB4((uint64_t)v19, &qword_101649E40);
        if ((v118 & 1) == 0) {
          goto LABEL_9;
        }
      }
      uint64_t v82 = v119;
      sub_10001D074(v116 + v119[13], (uint64_t)v29, &qword_101649E40);
      sub_10001D074(v117 + v82[13], (uint64_t)v26, &qword_101649E40);
      uint64_t v19 = v128;
      uint64_t v83 = (uint64_t)&v128[*(int *)(v15 + 48)];
      sub_10001D074((uint64_t)v29, (uint64_t)v128, &qword_101649E40);
      sub_10001D074((uint64_t)v26, v83, &qword_101649E40);
      int v84 = v115;
      if (v115((uint64_t)v19, 1, v79) == 1)
      {
        sub_10001DAB4((uint64_t)v26, &qword_101649E40);
        sub_10001DAB4((uint64_t)v29, &qword_101649E40);
        if (v84(v83, 1, v79) == 1)
        {
          sub_10001DAB4((uint64_t)v19, &qword_101649E40);
          goto LABEL_45;
        }
      }
      else
      {
        sub_10001D074((uint64_t)v19, (uint64_t)v23, &qword_101649E40);
        if (v84(v83, 1, v79) != 1)
        {
          uint64_t v87 = v129;
          uint64_t v88 = v130;
          (*(void (**)(char *, uint64_t, uint64_t))(v130 + 32))(v129, v83, v79);
          sub_100858B04(&qword_10164C4F0, (void (*)(uint64_t))&type metadata accessor for URL);
          char v89 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v90 = *(void (**)(char *, uint64_t))(v88 + 8);
          v90(v87, v79);
          sub_10001DAB4((uint64_t)v26, &qword_101649E40);
          sub_10001DAB4((uint64_t)v29, &qword_101649E40);
          v90(v23, v79);
          sub_10001DAB4((uint64_t)v19, &qword_101649E40);
          if ((v89 & 1) == 0) {
            goto LABEL_9;
          }
LABEL_45:
          int v91 = v119;
          uint64_t v92 = v119[14];
          uint64_t v93 = v116;
          uint64_t v94 = *(void *)(v116 + v92);
          uint64_t v95 = *(void *)(v116 + v92 + 8);
          uint64_t v96 = v117;
          uint64_t v97 = (void *)(v117 + v92);
          if (v94 == *v97 && v95 == v97[1]
            || (char v98 = _stringCompareWithSmolCheck(_:_:expecting:)(),
                int v91 = v119,
                uint64_t v93 = v116,
                uint64_t v96 = v117,
                char v99 = v98,
                char v42 = 0,
                (v99 & 1) != 0))
          {
            if (*(double *)(v93 + v91[15]) != *(double *)(v96 + v91[15])) {
              goto LABEL_9;
            }
            uint64_t v100 = v124;
            uint64_t v101 = v96;
            uint64_t v102 = v91;
            sub_10001D074(v93 + v91[16], v124, &qword_101649E50);
            uint64_t v103 = v123;
            sub_10001D074(v101 + v102[16], v123, &qword_101649E50);
            uint64_t v104 = v127;
            uint64_t v105 = v127 + *(int *)(v122 + 48);
            sub_10001D074(v100, v127, &qword_101649E50);
            sub_10001D074(v103, v105, &qword_101649E50);
            uint64_t v106 = v126;
            uint64_t v107 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48);
            if (v107(v104, 1, v126) == 1)
            {
              sub_10001DAB4(v103, &qword_101649E50);
              sub_10001DAB4(v100, &qword_101649E50);
              if (v107(v105, 1, v106) == 1)
              {
                sub_10001DAB4(v104, &qword_101649E50);
LABEL_56:
                if (*(_DWORD *)(v116 + v119[17]) == *(_DWORD *)(v117 + v119[17]))
                {
                  uint64_t v111 = v119[18];
                  uint64_t v112 = *(void *)(v116 + v111);
                  uint64_t v113 = *(void *)(v117 + v111);
                  if (v112)
                  {
                    if (!v113 || (sub_100336660(v112, v113) & 1) == 0) {
                      goto LABEL_9;
                    }
LABEL_62:
                    if ((static URL.== infix(_:_:)() & 1) != 0
                      && (static URL.== infix(_:_:)() & 1) != 0
                      && (static URL.== infix(_:_:)() & 1) != 0
                      && (static URL.== infix(_:_:)() & 1) != 0
                      && (static URL.== infix(_:_:)() & 1) != 0)
                    {
                      char v42 = static URL.== infix(_:_:)();
                      return v42 & 1;
                    }
                    goto LABEL_9;
                  }
                  if (!v113) {
                    goto LABEL_62;
                  }
                }
LABEL_9:
                char v42 = 0;
                return v42 & 1;
              }
            }
            else
            {
              uint64_t v108 = v121;
              sub_10001D074(v104, v121, &qword_101649E50);
              if (v107(v105, 1, v106) != 1)
              {
                uint64_t v109 = v120;
                sub_100857DE0(v105, v120);
                BOOL v110 = sub_100704420(v108, v109);
                sub_100856548(v109, type metadata accessor for AccessoryInfoResponseContent.Configuration);
                sub_10001DAB4(v103, &qword_101649E50);
                sub_10001DAB4(v100, &qword_101649E50);
                sub_100856548(v108, type metadata accessor for AccessoryInfoResponseContent.Configuration);
                sub_10001DAB4(v104, &qword_101649E50);
                if (!v110) {
                  goto LABEL_9;
                }
                goto LABEL_56;
              }
              sub_10001DAB4(v103, &qword_101649E50);
              sub_10001DAB4(v100, &qword_101649E50);
              sub_100856548(v108, type metadata accessor for AccessoryInfoResponseContent.Configuration);
            }
            size_t v85 = &qword_10164C5A0;
            uint64_t v86 = v104;
LABEL_43:
            sub_10001DAB4(v86, v85);
            goto LABEL_9;
          }
          return v42 & 1;
        }
        sub_10001DAB4((uint64_t)v26, &qword_101649E40);
        sub_10001DAB4((uint64_t)v29, &qword_101649E40);
        (*(void (**)(char *, uint64_t))(v130 + 8))(v23, v79);
      }
LABEL_42:
      size_t v85 = &qword_10164C4E8;
      uint64_t v86 = (uint64_t)v19;
      goto LABEL_43;
    }
  }
  return v42 & 1;
}

uint64_t sub_100858B04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BeaconProductInfoRecord.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEC) {
    goto LABEL_17;
  }
  if (a2 + 20 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 20) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 20;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x15;
  int v8 = v6 - 21;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BeaconProductInfoRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 20 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 20) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEB)
  {
    unsigned int v6 = ((a2 - 236) >> 8) + 1;
    *uint64_t result = a2 + 20;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100858CA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 20;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BeaconProductInfoRecord.CodingKeys()
{
  return &type metadata for BeaconProductInfoRecord.CodingKeys;
}

unint64_t sub_100858CE4()
{
  unint64_t result = qword_10164F270;
  if (!qword_10164F270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F270);
  }
  return result;
}

unint64_t sub_100858D3C()
{
  unint64_t result = qword_10164F278;
  if (!qword_10164F278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F278);
  }
  return result;
}

unint64_t sub_100858D94()
{
  unint64_t result = qword_10164F280;
  if (!qword_10164F280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F280);
  }
  return result;
}

uint64_t sub_100858DE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000101405590 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000101408C90 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6564646968 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D614E6C65646F6DLL && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001013F45D0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x52746C7561666564 && a2 == 0xEB00000000656C6FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000101405480 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x55656C6261736964 && a2 == 0xEA00000000004C52 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001014054A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7265776F507874 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x696C696261706163 && a2 == 0xEC00000073656974 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x655474756F79616CLL && a2 == 0xEE006574616C706DLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x48746C7561666564 && a2 == 0xEF6E6F63496F7265 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x4C746C7561666564 && a2 == 0xEF6E6F6349747369 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001014053A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001014053C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001014053E0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000101405400)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 20;
    }
    else {
      return 21;
    }
  }
}

uint64_t sub_1008596AC()
{
  uint64_t v1 = type metadata accessor for LocalizationUtility.Table();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + *(int *)(type metadata accessor for LeftWhileTravelingUserNotification() + 20);
  BOOL v7 = *(void **)(v5 + 8);
  uint64_t v6 = *(void *)(v5 + 16);
  unint64_t v8 = *(void *)(v5 + 24);
  if ((*(unsigned char *)(v5 + 32) & 1) == 0)
  {
    id v10 = v7;
    swift_bridgeObjectRetain();
    if (v8)
    {
      uint64_t v11 = HIBYTE(v8) & 0xF;
      if ((v8 & 0x2000000000000000) == 0) {
        uint64_t v11 = v6 & 0xFFFFFFFFFFFFLL;
      }
      if (v11)
      {
        id v39 = v10;
        uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v14 = v13;
        if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15) {
          goto LABEL_29;
        }
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_32;
        }
        uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v34 = v33;
        if (v32 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v34 == v35)
        {
LABEL_29:
          swift_bridgeObjectRelease_n();
        }
        else
        {
          _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
LABEL_32:
        id v10 = v39;
        sub_10000588C((uint64_t *)&unk_10163AD00);
        uint64_t v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = xmmword_101342130;
        *(void *)(v36 + 56) = &type metadata for String;
        *(void *)(v36 + 64) = sub_10000B4CC();
        *(void *)(v36 + 32) = v6;
        *(void *)(v36 + 40) = v8;
        goto LABEL_33;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;
    if (v21 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v23 == v24) {
      goto LABEL_20;
    }
    char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v26) {
      goto LABEL_33;
    }
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v29 = v28;
    if (v27 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v29 == v30)
    {
LABEL_20:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
LABEL_33:
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for LocalizationUtility.Table.default(_:), v1);
    static LocalizationUtility.localizedString(key:table:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    uint64_t v20 = String.init(format:arguments:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return v20;
  }
  uint64_t v9 = *(void *)v5;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for LocalizationUtility.Table.default(_:), v1);
  swift_bridgeObjectRetain();
  static LocalizationUtility.localizedString(key:table:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_101342130;
  uint64_t v19 = *(void *)(v9 + 16);
  sub_1004484A8(v9, v7, v6, v8, 1);
  *(void *)(v18 + 56) = &type metadata for Int;
  *(void *)(v18 + 64) = &protocol witness table for Int;
  *(void *)(v18 + 32) = v19;
  uint64_t v20 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_100859C44()
{
  uint64_t v1 = type metadata accessor for LocalizationUtility.Table();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LeftWhileTravelingUserNotification();
  uint64_t v6 = (uint64_t *)(v0 + *(int *)(v5 + 24));
  uint64_t v7 = v6[1];
  if (v7)
  {
    uint64_t v8 = v5;
    uint64_t v9 = *v6;
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for LocalizationUtility.Table.default(_:), v1);
    swift_bridgeObjectRetain();
    static LocalizationUtility.localizedString(key:table:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_101347BA0;
    uint64_t v11 = *(void *)(*(void *)(v0 + *(int *)(v8 + 20)) + 16);
    *(void *)(v10 + 56) = &type metadata for Int;
    *(void *)(v10 + 64) = &protocol witness table for Int;
    *(void *)(v10 + 32) = v11;
    *(void *)(v10 + 96) = &type metadata for String;
    *(void *)(v10 + 104) = sub_10000B4CC();
    *(void *)(v10 + 72) = v9;
    *(void *)(v10 + 80) = v7;
    uint64_t v12 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for LocalizationUtility.Table.default(_:), v1);
    uint64_t v12 = static LocalizationUtility.localizedString(key:table:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v12;
}

unint64_t sub_100859EB4()
{
  uint64_t v1 = self;
  uint64_t v2 = *(void *)(v0 + *(int *)(type metadata accessor for LeftWhileTravelingUserNotification() + 28));
  *(void *)&long long v17 = 0;
  id v3 = [v1 archivedDataWithRootObject:v2 requiringSecureCoding:1 error:&v17];
  id v4 = (id)v17;
  if (v3)
  {
    uint64_t v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v8 = v4;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  sub_10000588C((uint64_t *)&unk_101637F00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101347BA0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v10;
  if (v7 >> 60 == 15)
  {
    id v11 = [objc_allocWithZone((Class)NSNull) init];
    *(void *)(inited + 72) = sub_10085A32C();
    *(void *)(inited + 48) = v11;
  }
  else
  {
    uint64_t v18 = &type metadata for Data;
    *(void *)&long long v17 = v5;
    *((void *)&v17 + 1) = v7;
    sub_100173E4C(&v17, (_OWORD *)(inited + 48));
  }
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v12;
  sub_100037A38(v5, v7);
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_10044714C(v13);
  swift_bridgeObjectRelease();
  *(void *)(inited + 120) = sub_10000588C(&qword_101654A30);
  *(void *)(inited + 96) = v14;
  unint64_t v15 = sub_10092CEEC(inited);
  sub_100037A24(v5, v7);
  return v15;
}

uint64_t sub_10085A0BC()
{
  _StringGuts.grow(_:)(88);
  v1._object = (void *)0x8000000101408CB0;
  v1._countAndFlagsBits = 0xD000000000000027;
  String.append(_:)(v1);
  type metadata accessor for UUID();
  sub_10028B80C();
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 0x6E6974736564202CLL;
  v3._object = (void *)0xEF203A6E6F697461;
  String.append(_:)(v3);
  uint64_t v4 = type metadata accessor for LeftWhileTravelingUserNotification();
  _print_unlocked<A, B>(_:_:)();
  v5._countAndFlagsBits = 0x747865746E6F6320;
  v5._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v5);
  unint64_t v6 = (long long *)(v0 + *(int *)(v4 + 20));
  long long v12 = *v6;
  long long v13 = v6[1];
  LOBYTE(v14) = *((unsigned char *)v6 + 32);
  _print_unlocked<A, B>(_:_:)();
  v7._countAndFlagsBits = 0x6F697461636F6C20;
  v7._object = (void *)0xEB00000000203A6ELL;
  String.append(_:)(v7);
  uint64_t v8 = *(void **)(v0 + *(int *)(v4 + 28));
  [v8 coordinate:v12, v13, v14];
  Double.write<A>(to:)();
  v9._countAndFlagsBits = 8236;
  v9._object = (void *)0xE200000000000000;
  String.append(_:)(v9);
  [v8 coordinate];
  Double.write<A>(to:)();
  v10._countAndFlagsBits = 62;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  return 0;
}

uint64_t sub_10085A2B4(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32)) | 0x20u;
}

uint64_t sub_10085A2D0(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t type metadata accessor for LeftWhileTravelingUserNotification()
{
  uint64_t result = qword_10164F2E0;
  if (!qword_10164F2E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_10085A32C()
{
  unint64_t result = qword_1016455D0;
  if (!qword_1016455D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1016455D0);
  }
  return result;
}

void *sub_10085A36C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    Swift::String v9 = (char *)a1 + v8;
    Swift::String v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)v10;
    long long v12 = (void *)*((void *)v10 + 1);
    uint64_t v13 = *((void *)v10 + 2);
    uint64_t v14 = *((void *)v10 + 3);
    char v15 = v10[32];
    sub_1004496CC(*(void *)v10, v12, v13, v14, v15);
    *(void *)Swift::String v9 = v11;
    *((void *)v9 + 1) = v12;
    *((void *)v9 + 2) = v13;
    *((void *)v9 + 3) = v14;
    v9[32] = v15;
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = (void *)((char *)a1 + v16);
    uint64_t v19 = (void *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = *(void **)((char *)a2 + v17);
    *(void *)((char *)a1 + v17) = v21;
    uint64_t v22 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)a1 + v22) = *((unsigned char *)a2 + v22);
    swift_bridgeObjectRetain();
    id v23 = v21;
  }
  return a1;
}

void sub_10085A4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_1004484A8(*(void *)v5, *(void **)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(unsigned char *)(v5 + 32));
  swift_bridgeObjectRelease();
  unint64_t v6 = *(void **)(a1 + *(int *)(a2 + 28));
}

uint64_t sub_10085A554(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void **)(v9 + 8);
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v13 = *(void *)(v9 + 24);
  char v14 = *(unsigned char *)(v9 + 32);
  sub_1004496CC(*(void *)v9, v11, v12, v13, v14);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(void *)(v8 + 16) = v12;
  *(void *)(v8 + 24) = v13;
  *(unsigned char *)(v8 + 32) = v14;
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = *(void **)(a2 + v16);
  *(void *)(a1 + v16) = v20;
  uint64_t v21 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  swift_bridgeObjectRetain();
  id v22 = v20;
  return a1;
}

uint64_t sub_10085A650(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void **)(v9 + 8);
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v13 = *(void *)(v9 + 24);
  char v14 = *(unsigned char *)(v9 + 32);
  sub_1004496CC(*(void *)v9, v11, v12, v13, v14);
  uint64_t v15 = *(void *)v8;
  uint64_t v16 = *(void **)(v8 + 8);
  uint64_t v17 = *(void *)(v8 + 16);
  uint64_t v18 = *(void *)(v8 + 24);
  char v19 = *(unsigned char *)(v8 + 32);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(void *)(v8 + 16) = v12;
  *(void *)(v8 + 24) = v13;
  *(unsigned char *)(v8 + 32) = v14;
  sub_1004484A8(v15, v16, v17, v18, v19);
  uint64_t v20 = a3[6];
  uint64_t v21 = (void *)(a1 + v20);
  id v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[7];
  uint64_t v24 = *(void **)(a2 + v23);
  uint64_t v25 = *(void **)(a1 + v23);
  *(void *)(a1 + v23) = v24;
  id v26 = v24;

  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10085A780(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10085A834(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 32);
  uint64_t v11 = *(void *)v8;
  uint64_t v12 = *(void **)(v8 + 8);
  uint64_t v13 = *(void *)(v8 + 16);
  uint64_t v14 = *(void *)(v8 + 24);
  char v15 = *(unsigned char *)(v8 + 32);
  long long v16 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v16;
  *(unsigned char *)(v8 + 32) = v10;
  sub_1004484A8(v11, v12, v13, v14, v15);
  uint64_t v17 = a3[6];
  uint64_t v18 = (void *)(a1 + v17);
  char v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[7];
  uint64_t v23 = *(void **)(a1 + v22);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);

  uint64_t v24 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  return a1;
}

uint64_t sub_10085A914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10085A928);
}

uint64_t sub_10085A928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10085A9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10085A9FC);
}

uint64_t sub_10085A9FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10085AAB8()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10085AB78(uint64_t a1, uint64_t a2)
{
  v3[29] = a2;
  v3[30] = v2;
  v3[28] = a1;
  sub_10000588C(&qword_101639E88);
  v3[31] = swift_task_alloc();
  v3[32] = type metadata accessor for CircleTrustRequestEnvelopeV1(0);
  v3[33] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for MemberSharingCircle();
  v3[34] = v4;
  v3[35] = *(void *)(v4 - 8);
  v3[36] = swift_task_alloc();
  v3[37] = swift_task_alloc();
  v3[38] = swift_task_alloc();
  return _swift_task_switch(sub_10085ACB8, v2, 0);
}

uint64_t sub_10085ACB8()
{
  if (sub_100EAEA4C())
  {
    if (qword_101636888 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100010324(v1, (uint64_t)qword_10170D788);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failure on share request by underage account. Operation is not allowed.", v4, 2u);
      swift_slowDealloc();
    }

    type metadata accessor for SPBeaconSharingError(0);
    v0[27] = 8;
    sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
    sub_10085E380((unint64_t *)&qword_1016385F8, type metadata accessor for SPBeaconSharingError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v7 = *(void *)(v0[30] + 112);
    v0[39] = v7;
    return _swift_task_switch(sub_10085AEE0, v7, 0);
  }
}

uint64_t sub_10085AEE0()
{
  *(void *)(v0 + 320) = *(void *)(*(void *)(v0 + 312) + 136);
  swift_retain();
  return _swift_task_switch(sub_10085AF54, 0, 0);
}

uint64_t sub_10085AF54()
{
  uint64_t v2 = v0[39];
  uint64_t v1 = v0[40];
  os_log_type_t v3 = (void *)swift_task_alloc();
  v0[41] = v3;
  v3[2] = v1;
  v3[3] = sub_1000730D8;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[42] = v4;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_101653DF0);
  *uint64_t v4 = v0;
  v4[1] = sub_10085B06C;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 19, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1000730E0, v3, v5);
}

uint64_t sub_10085B06C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 240);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 344) = *(void *)(v1 + 152);
  return _swift_task_switch(sub_10085B1DC, v2, 0);
}

uint64_t sub_10085B1DC()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    unint64_t v3 = 0;
    uint64_t v5 = v0[34];
    uint64_t v4 = v0[35];
    uint64_t v16 = *(void *)(v1 + 16);
    while (v3 < *(void *)(v1 + 16))
    {
      uint64_t v6 = v0[38];
      unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v8 = *(void *)(v4 + 72);
      sub_10085E3C8(v0[43] + v7 + v8 * v3, v6, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
      uint64_t v9 = v0[38];
      if (*(unsigned char *)(v6 + *(int *)(v5 + 40)) == 2)
      {
        uint64_t v10 = v1;
        uint64_t v11 = v5;
        sub_10085E31C(v9, v0[37]);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000B71E0(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v13 = _swiftEmptyArrayStorage[2];
        unint64_t v12 = _swiftEmptyArrayStorage[3];
        if (v13 >= v12 >> 1) {
          sub_1000B71E0(v12 > 1, v13 + 1, 1);
        }
        uint64_t v14 = v0[37];
        _swiftEmptyArrayStorage[2] = v13 + 1;
        sub_10085E31C(v14, (uint64_t)_swiftEmptyArrayStorage + v7 + v13 * v8);
        uint64_t v5 = v11;
        uint64_t v1 = v10;
        uint64_t v2 = v16;
      }
      else
      {
        sub_10085E430(v9, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
      }
      if (v2 == ++v3) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    v0[44] = _swiftEmptyArrayStorage[2];
    swift_release();
    if (qword_101636CD8 == -1) {
      goto LABEL_13;
    }
  }
  swift_once();
LABEL_13:
  v0[45] = qword_10170E390;
  return _swift_task_switch(sub_10085B3EC, 0, 0);
}

uint64_t sub_10085B3EC()
{
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10085B4B4;
  uint64_t v2 = *(void *)(v0 + 360);
  return unsafeBlocking<A>(_:)(v0 + 176, sub_10001D704, v2, &type metadata for Configuration);
}

uint64_t sub_10085B4B4()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10085B5CC, 0, 0);
}

uint64_t sub_10085B5CC()
{
  uint64_t v1 = v0[30];
  v0[47] = v0[22];
  return _swift_task_switch(sub_10085B5F0, v1, 0);
}

uint64_t sub_10085B5F0()
{
  unint64_t v1 = v0[44];
  unint64_t v2 = sub_1010AC1FC(v0[47]);
  swift_bridgeObjectRelease();
  if (v1 >= v2)
  {
    if (qword_101636888 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_100010324(v13, (uint64_t)qword_10170D788);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = v0[44];
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 134218240;
      v0[15] = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v17 + 12) = 2048;
      v0[16] = v2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Request limit reached for beacons.\nopenRequests: %ld >= maxPendingRequestSharedItem: %lu.", (uint8_t *)v17, 0x16u);
      swift_slowDealloc();
    }

    type metadata accessor for SPBeaconSharingError(0);
    v0[14] = 10;
    sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
    sub_10085E380((unint64_t *)&qword_1016385F8, type metadata accessor for SPBeaconSharingError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
  else
  {
    uint64_t v3 = v0[33];
    uint64_t v4 = v0[32];
    uint64_t v5 = v0[29];
    uint64_t v6 = v0[30];
    uint64_t v7 = v0[28] + *(int *)(v0[34] + 28);
    uint64_t v8 = type metadata accessor for UUID();
    v0[48] = v8;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v3, v7, v8);
    v0[5] = v4;
    v0[6] = sub_10085E380(&qword_101648C68, (void (*)(uint64_t))type metadata accessor for CircleTrustRequestEnvelopeV1);
    v0[7] = sub_10085E380(&qword_10164F400, (void (*)(uint64_t))type metadata accessor for CircleTrustRequestEnvelopeV1);
    uint64_t v9 = sub_10001D958(v0 + 2);
    sub_10085E3C8(v3, (uint64_t)v9, type metadata accessor for CircleTrustRequestEnvelopeV1);
    uint64_t v10 = v5 + *(int *)(type metadata accessor for MemberPeerTrust() + 28);
    char v19 = (uint64_t (*)(uint64_t, uint64_t, char, uint64_t))((char *)&dword_101670A88 + dword_101670A88);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[49] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_10085B9D4;
    return v19(v6 + 120, (uint64_t)(v0 + 2), 7, v10);
  }
}

uint64_t sub_10085B9D4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 400) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 240);
    uint64_t v4 = sub_10085BFDC;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 240);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v2 + 16);
    uint64_t v4 = sub_10085BAFC;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10085BAFC()
{
  uint64_t v21 = v0;
  sub_10085E430(v0[33], type metadata accessor for CircleTrustRequestEnvelopeV1);
  if (qword_101636888 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[36];
  uint64_t v2 = v0[28];
  uint64_t v3 = type metadata accessor for Logger();
  v0[51] = sub_100010324(v3, (uint64_t)qword_10170D788);
  sub_10085E3C8(v2, v1, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[36];
    uint64_t v7 = swift_slowAlloc();
    v20[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 141558275;
    v0[24] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2081;
    sub_10085E380((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v8 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[25] = sub_1008FA0F0(v8, v9, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10085E430(v6, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Data update on share request. Update %{private,mask.hash}s.", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10085E430(v0[36], (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  }

  uint64_t v10 = v0[50];
  uint64_t v11 = v0[31];
  *(_OWORD *)(swift_task_alloc() + 16) = *((_OWORD *)v0 + 14);
  sub_100EE07C0((void (*)(uint64_t, _UNKNOWN **))sub_10085E490, v11);
  if (v10)
  {
    swift_task_dealloc();
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      v20[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      swift_getErrorValue();
      uint64_t v15 = Error.localizedDescription.getter();
      v0[23] = sub_1008FA0F0(v15, v16, v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failure in share requesting, cloud data update error %s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
  else
  {
    uint64_t v17 = v0[39];
    swift_task_dealloc();
    return _swift_task_switch(sub_10085C28C, v17, 0);
  }
}

uint64_t sub_10085BFDC()
{
  uint64_t v11 = v0;
  sub_10085E430(v0[33], type metadata accessor for CircleTrustRequestEnvelopeV1);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  if (qword_101636888 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170D788);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_getErrorValue();
    uint64_t v5 = Error.localizedDescription.getter();
    v0[20] = sub_1008FA0F0(v5, v6, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failure in share requesting, message sending error %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_100074FA8();
  swift_allocError();
  *uint64_t v7 = 3;
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10085C28C()
{
  *(void *)(v0 + 416) = *(void *)(*(void *)(v0 + 312) + 128);
  return _swift_task_switch(sub_10085C2B4, 0, 0);
}

uint64_t sub_10085C2B4()
{
  uint64_t v1 = v0[52];
  uint64_t v2 = v0[31];
  uint64_t v3 = swift_task_alloc();
  v0[53] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[54] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10085C3AC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000011, 0x80000001013F27F0, sub_1000757B8, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_10085C3AC()
{
  *(void *)(*(void *)v1 + 440) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10085C58C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10085C4C8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10085C4C8()
{
  return _swift_task_switch(sub_10085C4E4, *(void *)(v0 + 240), 0);
}

uint64_t sub_10085C4E4()
{
  sub_10001DAB4(*(void *)(v0 + 248), &qword_101639E88);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10085C58C()
{
  uint64_t v1 = *(void *)(v0 + 240);
  swift_task_dealloc();
  return _swift_task_switch(sub_10085C5F8, v1, 0);
}

uint64_t sub_10085C5F8()
{
  unint64_t v9 = v0;
  sub_10001DAB4(v0[31], &qword_101639E88);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_getErrorValue();
    uint64_t v4 = Error.localizedDescription.getter();
    v0[23] = sub_1008FA0F0(v4, v5, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failure in share requesting, cloud data update error %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10085C818(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MemberSharingCircle();
  *(unsigned char *)(a1 + *(int *)(v8 + 40)) = 2;
  uint64_t v9 = type metadata accessor for MemberPeerTrust();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2 + *(int *)(v9 + 20), v4);
  uint64_t v10 = *(int *)(v8 + 36);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *(void *)(a1 + v10);
  *(void *)(a1 + v10) = 0x8000000000000000;
  sub_10016DA70(2u, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + v10) = v14;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10085C968(uint64_t a1)
{
  v2[9] = a1;
  v2[10] = v1;
  v2[11] = sub_10000588C(&qword_10164F3F8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v2[16] = v3;
  v2[17] = *(void *)(v3 - 8);
  v2[18] = swift_task_alloc();
  sub_10000588C(&qword_101639E88);
  v2[19] = swift_task_alloc();
  v2[20] = type metadata accessor for MemberSharingCircle();
  v2[21] = swift_task_alloc();
  return _swift_task_switch(sub_10085CAE4, v1, 0);
}

uint64_t sub_10085CAE4()
{
  char v61 = v0;
  if (qword_101636888 != -1) {
    goto LABEL_40;
  }
  while (1)
  {
    uint64_t v1 = v0[9];
    uint64_t v2 = v0[21];
    uint64_t v3 = type metadata accessor for Logger();
    v0[22] = sub_100010324(v3, (uint64_t)qword_10170D788);
    sub_10085E3C8(v1, v2, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = v0[21];
    if (v6)
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v60 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 141558275;
      v0[7] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v8 + 12) = 2081;
      sub_10085E380((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[8] = sub_1008FA0F0(v9, v10, (uint64_t *)&v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10085E430(v7, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Data update on handle share request decline. Update %{private,mask.hash}s.", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10085E430(v7, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    }

    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = sub_10085DD74(v11);
    swift_bridgeObjectRelease();
    int64_t v13 = *(void *)(v12 + 16);
    if (!v13) {
      break;
    }
    uint64_t v14 = v0[17];
    uint64_t v50 = v0[11];
    uint64_t v60 = _swiftEmptyArrayStorage;
    sub_1000B7034(0, v13, 0);
    unint64_t v16 = sub_100803228(v12);
    uint64_t v17 = 0;
    uint64_t v18 = v12 + 64;
    uint64_t v59 = v14;
    char v19 = *(unsigned char *)(v12 + 32);
    uint64_t v46 = v12 + 88;
    uint64_t v51 = v12;
    char v52 = v0;
    int64_t v47 = v13;
    int v48 = v15;
    uint64_t v49 = v12 + 64;
    while ((v16 & 0x8000000000000000) == 0 && (uint64_t)v16 < 1 << v19)
    {
      if ((*(void *)(v18 + 8 * (v16 >> 6)) & (1 << v16)) == 0) {
        goto LABEL_35;
      }
      if (*(_DWORD *)(v12 + 36) != v15) {
        goto LABEL_36;
      }
      unint64_t v54 = v16 >> 6;
      uint64_t v53 = v17;
      uint64_t v55 = *(int *)(v50 + 48);
      uint64_t v57 = v0[18];
      uint64_t v23 = v0[15];
      uint64_t v22 = v0[16];
      uint64_t v24 = v0[13];
      uint64_t v25 = v0[14];
      uint64_t v56 = v0[12];
      uint64_t v58 = *(void *)(v59 + 72);
      id v26 = *(void (**)(uint64_t, unint64_t, uint64_t))(v59 + 16);
      v26(v23, *(void *)(v12 + 48) + v58 * v16, v22);
      char v27 = *(unsigned char *)(*(void *)(v12 + 56) + v16);
      *(unsigned char *)(v23 + v55) = v27;
      v26(v25, v23, v22);
      *(unsigned char *)(v25 + *(int *)(v50 + 48)) = v27;
      sub_10085E270(v25, v24);
      sub_10001DAB4(v23, &qword_10164F3F8);
      v26(v56, v24, v22);
      uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 32);
      v28(v57, v56, v22);
      sub_10001DAB4(v24, &qword_10164F3F8);
      uint64_t v29 = v60;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000B7034(0, v29[2] + 1, 1);
        uint64_t v29 = v60;
      }
      unint64_t v31 = v29[2];
      unint64_t v30 = v29[3];
      uint64_t v12 = v51;
      uint64_t v0 = v52;
      if (v31 >= v30 >> 1)
      {
        sub_1000B7034(v30 > 1, v31 + 1, 1);
        uint64_t v29 = v60;
      }
      uint64_t v32 = v52[18];
      uint64_t v33 = v52[16];
      v29[2] = v31 + 1;
      v28((uint64_t)v29+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ v31 * v58, v32, v33);
      uint64_t v60 = v29;
      char v19 = *(unsigned char *)(v51 + 32);
      unint64_t v20 = 1 << v19;
      if ((uint64_t)v16 >= 1 << v19) {
        goto LABEL_37;
      }
      uint64_t v18 = v49;
      unint64_t v34 = v16 >> 6;
      uint64_t v35 = *(void *)(v49 + 8 * v54);
      if ((v35 & (1 << v16)) == 0) {
        goto LABEL_38;
      }
      int v15 = v48;
      if (*(_DWORD *)(v51 + 36) != v48) {
        goto LABEL_39;
      }
      unint64_t v36 = v35 & (-2 << (v16 & 0x3F));
      if (v36)
      {
        unint64_t v20 = __clz(__rbit64(v36)) | v16 & 0xFFFFFFFFFFFFFFC0;
        int64_t v21 = v47;
      }
      else
      {
        unint64_t v37 = v54 + 1;
        unint64_t v38 = (v20 + 63) >> 6;
        int64_t v21 = v47;
        if (v54 + 1 < v38)
        {
          unint64_t v39 = *(void *)(v49 + 8 * v37);
          if (!v39)
          {
            unint64_t v37 = v54 + 2;
            if (v54 + 2 >= v38) {
              goto LABEL_8;
            }
            unint64_t v39 = *(void *)(v49 + 8 * v37);
            if (!v39)
            {
              while (v38 - 3 != v34)
              {
                unint64_t v39 = *(void *)(v46 + 8 * v34++);
                if (v39)
                {
                  unint64_t v37 = v34 + 2;
                  goto LABEL_23;
                }
              }
              goto LABEL_8;
            }
          }
LABEL_23:
          unint64_t v20 = __clz(__rbit64(v39)) + (v37 << 6);
        }
      }
LABEL_8:
      uint64_t v17 = v53 + 1;
      unint64_t v16 = v20;
      if (v53 + 1 == v21)
      {
        swift_release();
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    swift_once();
  }
  swift_release();
  uint64_t v29 = _swiftEmptyArrayStorage;
LABEL_31:
  uint64_t v40 = v0[19];
  uint64_t v41 = v0[9];
  uint64_t v42 = swift_task_alloc();
  *(void *)(v42 + 16) = v41;
  *(void *)(v42 + 24) = v29;
  sub_100EE07C0((void (*)(uint64_t, _UNKNOWN **))sub_10085E2D8, v40);
  uint64_t v43 = v0[10];
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v44 = *(void *)(v43 + 112);
  v0[23] = v44;
  return _swift_task_switch(sub_10085D34C, v44, 0);
}

uint64_t sub_10085D34C()
{
  *(void *)(v0 + 192) = *(void *)(*(void *)(v0 + 184) + 128);
  return _swift_task_switch(sub_10085D374, 0, 0);
}

uint64_t sub_10085D374()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[19];
  uint64_t v3 = swift_task_alloc();
  v0[25] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[26] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10085D46C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000011, 0x80000001013F27F0, sub_100074FFC, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_10085D46C()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10085D664;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10085D588;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10085D588()
{
  return _swift_task_switch(sub_10085D5A4, *(void *)(v0 + 80), 0);
}

uint64_t sub_10085D5A4()
{
  sub_10001DAB4(*(void *)(v0 + 152), &qword_101639E88);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10085D664()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_task_dealloc();
  return _swift_task_switch(sub_10085D6D0, v1, 0);
}

uint64_t sub_10085D6D0()
{
  uint64_t v9 = v0;
  sub_10001DAB4(v0[19], &qword_101639E88);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_getErrorValue();
    uint64_t v4 = Error.localizedDescription.getter();
    v0[6] = sub_1008FA0F0(v4, v5, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failure handle share request decline, cloud data update error %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10085D900(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v54 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v43 - v8;
  uint64_t v10 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for MemberSharingCircle();
  *(unsigned char *)(a1 + *(int *)(v50 + 40)) = 1;
  uint64_t v13 = *(void *)(a2 + 16);
  v43[1] = a2;
  if (v13)
  {
    unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v15 = v5 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = a2 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
    uint64_t v51 = *(void *)(v15 + 56);
    int64_t v47 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    int v48 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 32);
    uint64_t v45 = (void (**)(uint64_t, uint64_t))(v15 - 8);
    swift_bridgeObjectRetain();
    uint64_t v49 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 40);
    v43[0] = (v15 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v46 = v12;
    char v52 = (void (*)(unint64_t, uint64_t, uint64_t))v16;
    while (1)
    {
      v14(v12, v17, v4);
      char v19 = *v49;
      (*v49)(v12, 0, 1, v4);
      if ((*v48)(v12, 1, v4) == 1) {
        break;
      }
      uint64_t v44 = v19;
      uint64_t v53 = v13;
      (*v47)(v9, v12, v4);
      uint64_t v20 = (uint64_t)v54;
      int64_t v21 = v9;
      uint64_t v22 = v9;
      uint64_t v23 = v4;
      uint64_t v24 = v15;
      v14(v54, (uint64_t)v22, v4);
      uint64_t v25 = *(int *)(v50 + 36);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v55 = *(void **)(a1 + v25);
      char v27 = v55;
      uint64_t v28 = a1;
      *(void *)(a1 + v25) = 0x8000000000000000;
      unint64_t v30 = sub_1007240CC(v20);
      uint64_t v31 = v27[2];
      BOOL v32 = (v29 & 1) == 0;
      uint64_t v33 = v31 + v32;
      if (__OFADD__(v31, v32))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        return result;
      }
      char v34 = v29;
      if (v27[3] >= v33)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_100E80F5C();
        }
      }
      else
      {
        sub_100E6B2F8(v33, isUniquelyReferenced_nonNull_native);
        unint64_t v35 = sub_1007240CC((uint64_t)v54);
        if ((v34 & 1) != (v36 & 1)) {
          goto LABEL_20;
        }
        unint64_t v30 = v35;
      }
      uint64_t v15 = v24;
      unint64_t v37 = v55;
      if (v34)
      {
        *(unsigned char *)(v55[7] + v30) = 1;
      }
      else
      {
        v55[(v30 >> 6) + 8] |= 1 << v30;
        v52(v37[6] + v30 * v51, (uint64_t)v54, v23);
        *(unsigned char *)(v37[7] + v30) = 1;
        uint64_t v38 = v37[2];
        BOOL v39 = __OFADD__(v38, 1);
        uint64_t v40 = v38 + 1;
        if (v39) {
          goto LABEL_19;
        }
        v37[2] = v40;
      }
      a1 = v28;
      *(void *)(v28 + v25) = v37;
      swift_bridgeObjectRelease();
      uint64_t v18 = *v45;
      uint64_t v4 = v23;
      (*v45)((uint64_t)v54, v23);
      uint64_t v9 = v21;
      v18((uint64_t)v21, v23);
      uint64_t v14 = (void (*)(char *, uint64_t, uint64_t))v52;
      v17 += v51;
      uint64_t v13 = v53 - 1;
      uint64_t v12 = v46;
      if (v53 == 1)
      {
        v44(v46, 1, 1, v23);
        return swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
    v41(v12, 1, 1, v4);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_10085DD10()
{
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 120);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for ShareRequestUseCase()
{
  return self;
}

uint64_t sub_10085DD74(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_10085DECC((unint64_t *)((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_10085DECC((unint64_t *)v7, v4, v2);
    swift_slowDealloc();
  }
  return v2;
}

uint64_t sub_10085DECC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a2;
  uint64_t v33 = a1;
  uint64_t v44 = sub_10000588C(&qword_10164F3F8);
  uint64_t v4 = __chkstk_darwin(v44);
  uint64_t v43 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v41 = (char *)&v31 - v6;
  uint64_t v39 = type metadata accessor for UUID();
  uint64_t result = __chkstk_darwin(v39);
  uint64_t v40 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = 0;
  uint64_t v46 = (void *)a3;
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v34 = 0;
  uint64_t v35 = a3 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  uint64_t v38 = v8 + 2;
  uint64_t v42 = v8;
  int64_t v36 = (unint64_t)(v12 + 63) >> 6;
  unint64_t v37 = v8 + 1;
  uint64_t v15 = v8;
  uint64_t v16 = v39;
  uint64_t v17 = v40;
  uint64_t v18 = (uint64_t)v41;
  char v19 = v43;
  while (1)
  {
    if (v14)
    {
      uint64_t v47 = (v14 - 1) & v14;
      int64_t v48 = v10;
      unint64_t v20 = __clz(__rbit64(v14)) | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v26 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v26 >= v36) {
      return sub_1002ACB5C(v33, v32, v34, v46);
    }
    unint64_t v27 = *(void *)(v35 + 8 * v26);
    int64_t v28 = v10 + 1;
    if (!v27)
    {
      int64_t v28 = v10 + 2;
      if (v10 + 2 >= v36) {
        return sub_1002ACB5C(v33, v32, v34, v46);
      }
      unint64_t v27 = *(void *)(v35 + 8 * v28);
      if (!v27)
      {
        int64_t v28 = v10 + 3;
        if (v10 + 3 >= v36) {
          return sub_1002ACB5C(v33, v32, v34, v46);
        }
        unint64_t v27 = *(void *)(v35 + 8 * v28);
        if (!v27) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v47 = (v27 - 1) & v27;
    int64_t v48 = v28;
    unint64_t v20 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_5:
    int64_t v21 = v46;
    uint64_t v22 = (void (*)(char *, unint64_t, uint64_t))v15[2];
    v22(v17, v46[6] + v15[9] * v20, v16);
    uint64_t v23 = v21[7];
    unint64_t v45 = v20;
    LODWORD(v21) = *(unsigned __int8 *)(v23 + v20);
    v22((char *)v18, (unint64_t)v17, v16);
    uint64_t v24 = *(int *)(v44 + 48);
    *(unsigned char *)(v18 + v24) = (_BYTE)v21;
    v22(v19, v18, v16);
    v19[v24] = (char)v21;
    sub_10001DAB4(v18, &qword_10164F3F8);
    uint64_t v25 = (void (*)(char *, uint64_t))v15[1];
    v25(v19, v16);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v17, v16);
    int64_t v10 = v48;
    unint64_t v14 = v47;
    if (v21 == 2)
    {
      *(unint64_t *)((char *)v33 + ((v45 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v45;
      if (__OFADD__(v34++, 1))
      {
        __break(1u);
        return sub_1002ACB5C(v33, v32, v34, v46);
      }
    }
  }
  uint64_t v29 = v10 + 4;
  if (v10 + 4 >= v36) {
    return sub_1002ACB5C(v33, v32, v34, v46);
  }
  unint64_t v27 = *(void *)(v35 + 8 * v29);
  if (v27)
  {
    int64_t v28 = v10 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v28 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v28 >= v36) {
      return sub_1002ACB5C(v33, v32, v34, v46);
    }
    unint64_t v27 = *(void *)(v35 + 8 * v28);
    ++v29;
    if (v27) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10085E270(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_10164F3F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10085E2D8(uint64_t a1)
{
  uint64_t v4 = *(uint64_t **)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  sub_100EE2A08(v4, a1, v3);
}

uint64_t sub_10085E31C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MemberSharingCircle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10085E380(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10085E3C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10085E430(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_10085E490()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  v2[2] = *(void *)(v0 + 24);
  sub_100CF3F50(v1, (void (*)(char *))sub_10085E4E0, (uint64_t)v2);
}

uint64_t sub_10085E4E0(uint64_t a1)
{
  return sub_10085C818(a1, *(void *)(v1 + 16));
}

uint64_t *PencilSendPairingStatusCommandPayload.expectedLength.unsafeMutableAddressor()
{
  return &static PencilSendPairingStatusCommandPayload.expectedLength;
}

uint64_t static PencilSendPairingStatusCommandPayload.expectedLength.getter()
{
  return static PencilSendPairingStatusCommandPayload.expectedLength;
}

uint64_t static PencilSendPairingStatusCommandPayload.expectedLength.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  static PencilSendPairingStatusCommandPayload.expectedLength = a1;
  return result;
}

uint64_t (*static PencilSendPairingStatusCommandPayload.expectedLength.modify())()
{
  return j__swift_endAccess_0;
}

uint64_t PencilSendPairingStatusCommandPayload.init(from:)(void *a1)
{
  uint64_t result = sub_10085EA44(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t PencilSendPairingStatusCommandPayload.encode(to:)(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  sub_10001CD44(a1, a1[3]);
  dispatch thunk of BinaryEncoding.container()();
  uint64_t v28 = a2;
  unint64_t v29 = a3;
  sub_1000BD078((uint64_t)v30, v31);
  sub_100135A44();
  dispatch thunk of BinaryEncodingContaining.encode<A>(sequence:)();
  if (!v5)
  {
    switch(a5 >> 62)
    {
      case 1uLL:
        LODWORD(v10) = HIDWORD(a4) - a4;
        if (__OFSUB__(HIDWORD(a4), a4)) {
          goto LABEL_18;
        }
        unint64_t v10 = (int)v10;
LABEL_6:
        if ((v10 & 0x8000000000000000) != 0 || v10 >= 0x100) {
          goto LABEL_22;
        }
LABEL_8:
        unint64_t v32 = a5 >> 62;
        sub_10006145C();
        uint64_t v14 = FixedWidthInteger.data.getter();
        unint64_t v16 = v15;
        sub_1000BD078((uint64_t)v30, v31);
        dispatch thunk of BinaryEncodingContaining.encode<A>(sequence:)();
        sub_10001CFB8(v14, v16);
        uint64_t v28 = a4;
        unint64_t v29 = a5;
        uint64_t v17 = 0;
        switch((int)v32)
        {
          case 0:
            uint64_t v17 = BYTE6(a5);
            goto LABEL_14;
          case 1:
            if (__OFSUB__(HIDWORD(a4), a4)) {
              goto LABEL_20;
            }
            uint64_t v17 = HIDWORD(a4) - (int)a4;
LABEL_13:
            sub_1000361E0(a4, a5);
LABEL_14:
            if (__OFSUB__(100, v17))
            {
              __break(1u);
LABEL_18:
              __break(1u);
LABEL_19:
              __break(1u);
LABEL_20:
              __break(1u);
LABEL_21:
              __break(1u);
LABEL_22:
              _assertionFailure(_:_:file:line:flags:)();
              __break(1u);
              JUMPOUT(0x10085E934);
            }
            uint64_t v26 = sub_10085E9A4(100 - v17);
            unint64_t v27 = v20;
            sub_10072AD40(&v26, 0);
            uint64_t v21 = v26;
            unint64_t v22 = v27;
            Data.append(_:)();
            sub_10001CFB8(v21, v22);
            uint64_t v23 = v28;
            unint64_t v24 = v29;
            uint64_t v26 = v28;
            unint64_t v27 = v29;
            sub_1000BD078((uint64_t)v30, v31);
            dispatch thunk of BinaryEncodingContaining.encode<A>(sequence:)();
            sub_10001CFB8(v23, v24);
            break;
          case 2:
            uint64_t v19 = *(void *)(a4 + 16);
            uint64_t v18 = *(void *)(a4 + 24);
            uint64_t v17 = v18 - v19;
            if (!__OFSUB__(v18, v19)) {
              goto LABEL_13;
            }
            goto LABEL_21;
          case 3:
            goto LABEL_14;
          default:
            JUMPOUT(0);
        }
        return result;
      case 2uLL:
        uint64_t v12 = *(void *)(a4 + 16);
        uint64_t v11 = *(void *)(a4 + 24);
        BOOL v13 = __OFSUB__(v11, v12);
        unint64_t v10 = v11 - v12;
        if (!v13) {
          goto LABEL_6;
        }
        goto LABEL_19;
      default:
        goto LABEL_8;
    }
  }
  return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v30);
}

uint64_t sub_10085E954@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10085EA44(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_10085E984(void *a1)
{
  return PencilSendPairingStatusCommandPayload.encode(to:)(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10085E9A4(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      type metadata accessor for __DataStorage();
      swift_allocObject();
      __DataStorage.init(length:)();
      if (v1 >= 0x7FFFFFFF)
      {
        type metadata accessor for Data.RangeReference();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_10085EA44(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Endianness();
  __chkstk_darwin(v4 - 8);
  sub_10001CD44(a1, a1[3]);
  dispatch thunk of BinaryDecoding.container()();
  sub_1000BD078((uint64_t)v29, v30);
  uint64_t v5 = dispatch thunk of BinaryDecodingContaining.decode(length:)();
  if (v1) {
    goto LABEL_11;
  }
  uint64_t v2 = v5;
  unint64_t v7 = v6;
  sub_1000BD078((uint64_t)v29, v30);
  uint64_t v8 = dispatch thunk of BinaryDecodingContaining.decode(length:)();
  unint64_t v27 = v9;
  sub_1000BD078((uint64_t)v29, v30);
  unint64_t v10 = v27;
  uint64_t v11 = dispatch thunk of BinaryDecodingContaining.decode(length:)();
  unint64_t v26 = v12;
  sub_1000361E0(v8, v27);
  static Endianness.current.getter();
  sub_10006145C();
  FixedWidthInteger.init(data:ofEndianness:)();
  if (BYTE1(v28) == 1)
  {
    if (qword_101637320 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_100010324(v13, (uint64_t)qword_10170F098);
    sub_1000361E0(v8, v27);
    sub_1000361E0(v8, v27);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      unint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)unint64_t v16 = 136315138;
      uint64_t v17 = Data.hexString.getter();
      uint64_t v31 = sub_1008FA0F0(v17, v18, &v28);
      unint64_t v10 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001CFB8(v8, v27);
      sub_10001CFB8(v8, v27);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Invalid signature length: %s", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001CFB8(v8, v27);
      sub_10001CFB8(v8, v27);
    }
    uint64_t v20 = type metadata accessor for BinaryEncodingError();
    sub_10017986C();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, enum case for BinaryEncodingError.encodingError(_:), v20);
    swift_willThrow();
    sub_10001CFB8(v11, v26);
    sub_10001CFB8(v8, v10);
    sub_10001CFB8(v2, v7);
    goto LABEL_11;
  }
  sub_100435A9C(v28, v11, v26, &v28);
  sub_10001CFB8(v8, v27);
  switch(v7 >> 62)
  {
    case 1uLL:
      LODWORD(v19) = HIDWORD(v2) - v2;
      if (__OFSUB__(HIDWORD(v2), v2))
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        JUMPOUT(0x10085EEE0);
      }
      uint64_t v19 = (int)v19;
LABEL_15:
      if (v19 != 4) {
        goto LABEL_19;
      }
LABEL_11:
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v29);
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
      return v2;
    case 2uLL:
      uint64_t v24 = *(void *)(v2 + 16);
      uint64_t v23 = *(void *)(v2 + 24);
      BOOL v25 = __OFSUB__(v23, v24);
      uint64_t v19 = v23 - v24;
      if (!v25) {
        goto LABEL_15;
      }
      goto LABEL_18;
    case 3uLL:
      goto LABEL_19;
    default:
      uint64_t v19 = BYTE6(v7);
      goto LABEL_15;
  }
}

unint64_t sub_10085EEF0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_10085EF20();
  unint64_t result = sub_1001E2E34();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10085EF20()
{
  unint64_t result = qword_10164F410;
  if (!qword_10164F410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F410);
  }
  return result;
}

ValueMetadata *type metadata accessor for PencilSendPairingStatusCommandPayload()
{
  return &type metadata for PencilSendPairingStatusCommandPayload;
}

ValueMetadata *type metadata accessor for VerifyFindMyNetworkIdPayload()
{
  return &type metadata for VerifyFindMyNetworkIdPayload;
}

uint64_t sub_10085EF94@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10085F044(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

unint64_t sub_10085EFC0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_10085EFF0();
  unint64_t result = sub_1005FD050();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10085EFF0()
{
  unint64_t result = qword_10164F418;
  if (!qword_10164F418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F418);
  }
  return result;
}

uint64_t sub_10085F044(void *a1)
{
  sub_10001CD44(a1, a1[3]);
  dispatch thunk of BinaryDecoding.container()();
  sub_1000BD078((uint64_t)v11, v12);
  uint64_t v3 = dispatch thunk of BinaryDecodingContaining.decode(length:)();
  uint64_t v5 = v3;
  if (v1) {
    goto LABEL_8;
  }
  switch(v4 >> 62)
  {
    case 1uLL:
      LODWORD(v6) = HIDWORD(v3) - v3;
      if (__OFSUB__(HIDWORD(v3), v3))
      {
        __break(1u);
LABEL_10:
        __break(1u);
LABEL_11:
        __break(1u);
        JUMPOUT(0x10085F154);
      }
      uint64_t v6 = (int)v6;
LABEL_7:
      if (v6 != 32) {
        goto LABEL_11;
      }
LABEL_8:
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v11);
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
      return v5;
    case 2uLL:
      uint64_t v8 = *(void *)(v3 + 16);
      uint64_t v7 = *(void *)(v3 + 24);
      BOOL v9 = __OFSUB__(v7, v8);
      uint64_t v6 = v7 - v8;
      if (!v9) {
        goto LABEL_7;
      }
      goto LABEL_10;
    case 3uLL:
      goto LABEL_11;
    default:
      uint64_t v6 = BYTE6(v4);
      goto LABEL_7;
  }
}

uint64_t sub_10085F164()
{
  uint64_t v1 = type metadata accessor for LocalizationUtility.Table();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PlaySoundUserNotification();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for LocalizationUtility.Table.default(_:), v1);
  static LocalizationUtility.localizedString(key:table:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_101342130;
  uint64_t v7 = (uint64_t *)(v0 + *(int *)(v5 + 28));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = sub_10000B4CC();
  *(void *)(v6 + 32) = v9;
  *(void *)(v6 + 40) = v8;
  swift_bridgeObjectRetain();
  uint64_t v10 = String.init(format:arguments:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10085F328()
{
  uint64_t v1 = type metadata accessor for LocalizationUtility.Table();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PlaySoundUserNotification();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for LocalizationUtility.Table.default(_:), v1);
  static LocalizationUtility.localizedString(key:table:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_101342130;
  uint64_t v7 = (uint64_t *)(v0 + *(int *)(v5 + 28));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = sub_10000B4CC();
  *(void *)(v6 + 32) = v9;
  *(void *)(v6 + 40) = v8;
  swift_bridgeObjectRetain();
  uint64_t v10 = String.init(format:arguments:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_10085F550()
{
  sub_10000588C((uint64_t *)&unk_101637F00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101342130;
  *(void *)(inited + 32) = 1684632949;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v1 = UUID.uuidString.getter();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v1;
  *(void *)(inited + 56) = v2;
  return sub_10092CEEC(inited);
}

uint64_t type metadata accessor for PlaySoundUserNotification()
{
  uint64_t result = qword_10164F478;
  if (!qword_10164F478) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_10085F624(_WORD *a1, void *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_WORD *)a2;
    uint64_t v7 = a3[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for UUID();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    uint64_t v14 = (void *)((char *)v4 + v12);
    os_log_type_t v15 = (void *)((char *)a2 + v12);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    LOBYTE(v15) = *((unsigned char *)a2 + v13);
    *uint64_t v14 = v17;
    v14[1] = v16;
    *((unsigned char *)v4 + v13) = (_BYTE)v15;
    uint64_t v18 = a3[9];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    swift_bridgeObjectRetain();
    v11(v19, v20, v10);
  }
  return v4;
}

uint64_t sub_10085F750(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 36);

  return v8(v6, v5);
}

_WORD *sub_10085F808(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (uint64_t *)((char *)a2 + v11);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  LOBYTE(v14) = *((unsigned char *)a2 + v12);
  *uint64_t v13 = v16;
  v13[1] = v15;
  *((unsigned char *)a1 + v12) = (_BYTE)v14;
  uint64_t v17 = a3[9];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  swift_bridgeObjectRetain();
  v10(v18, v19, v9);
  return a1;
}

unsigned char *sub_10085F8E4(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[8]] = a2[a3[8]];
  v10(&a1[a3[9]], &a2[a3[9]], v9);
  return a1;
}

_WORD *sub_10085F9D8(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  v10((char *)a1 + a3[9], (char *)a2 + a3[9], v9);
  return a1;
}

_WORD *sub_10085FAA0(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (uint64_t *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  v10((char *)a1 + v16, (char *)a2 + v16, v9);
  return a1;
}

uint64_t sub_10085FB78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10085FB8C);
}

uint64_t sub_10085FB8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_10085FC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10085FC68);
}

uint64_t sub_10085FC68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10085FD2C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10085FDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10085FDF4);
}

uint64_t sub_10085FDF4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FMNAccountType();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10085FEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10085FEB8);
}

void *sub_10085FEB8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for FMNAccountType();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for AirPodsLEPairingLockAckEndPoint()
{
  uint64_t result = qword_10164F518;
  if (!qword_10164F518) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10085FFAC()
{
  sub_10000588C(&qword_101639580);
  OS_dispatch_queue.sync<A>(execute:)();
  URLComponents.init()();
  URLComponents.scheme.setter();
  URLComponents.host.setter();
  URLComponents.path.setter();
  uint64_t v0 = (void (*)(uint64_t *, void))URLComponents.path.modify();
  v1._countAndFlagsBits = 0xD00000000000001ELL;
  v1._object = (void *)0x8000000101408E30;
  String.append(_:)(v1);
  v0(&v7, 0);
  if (qword_101637188 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_10170EE68;
  id v3 = [self sharedInstance];
  unsigned int v4 = [v3 isInternalBuild];

  if (v4)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [v2 stringForKey:v5];

    if (v6)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      URLComponents.host.setter();
    }
  }
}

uint64_t *sub_100860194(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_10086027C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);

  return v7(v5, v4);
}

uint64_t sub_10086031C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1008603B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_10086044C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1008604E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_10086057C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100860590);
}

uint64_t sub_100860590(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1008605FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100860610);
}

uint64_t sub_100860610(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for BeaconIdentifier()
{
  uint64_t result = qword_10164F5A8;
  if (!qword_10164F5A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1008606CC()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100860758(void *a1)
{
  uint64_t v3 = sub_10000588C(&qword_10164F5F8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001CD44(a1, a1[3]);
  sub_100861144();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  type metadata accessor for UUID();
  sub_100861198(&qword_10163B040, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for BeaconIdentifier();
    v8[14] = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100860918@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v30 = type metadata accessor for UUID();
  uint64_t v26 = *(void *)(v30 - 8);
  uint64_t v4 = __chkstk_darwin(v30);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v27 = (char *)&v21 - v7;
  uint64_t v8 = sub_10000588C(&qword_10164F5E8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  uint64_t v29 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for BeaconIdentifier();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_100861144();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  }
  uint64_t v22 = v12;
  uint64_t v23 = v6;
  uint64_t v24 = v14;
  uint64_t v15 = v26;
  char v32 = 0;
  sub_100861198((unint64_t *)&qword_10163B010, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v16 = v27;
  uint64_t v17 = v28;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  unint64_t v27 = *(char **)(v15 + 32);
  ((void (*)(char *, char *, uint64_t))v27)(v24, v16, v30);
  char v31 = 1;
  uint64_t v18 = v23;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v17);
  uint64_t v19 = (uint64_t)v24;
  ((void (*)(char *, char *, uint64_t))v27)(&v24[*(int *)(v22 + 20)], v18, v30);
  sub_1003DCECC(v19, v25);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  return sub_1003DCF30(v19);
}

uint64_t sub_100860CB0()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x6E65644972657375;
  }
}

uint64_t sub_100860CFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1008613EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100860D24(uint64_t a1)
{
  unint64_t v2 = sub_100861144();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100860D60(uint64_t a1)
{
  unint64_t v2 = sub_100861144();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100860D9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100860918(a1, a2);
}

uint64_t sub_100860DB4(void *a1)
{
  return sub_100860758(a1);
}

Swift::Int sub_100860DCC()
{
  return Hasher._finalize()();
}

uint64_t sub_100860E7C()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_100860F1C()
{
  return Hasher._finalize()();
}

uint64_t sub_100860FC8()
{
  type metadata accessor for UUID();
  sub_100861198((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v3 = dispatch thunk of CustomStringConvertible.description.getter();
  v0._countAndFlagsBits = 47;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  v1._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100861094()
{
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    return 0;
  }

  return static UUID.== infix(_:_:)();
}

uint64_t sub_1008610FC()
{
  return sub_100861198(&qword_10164F5E0, (void (*)(uint64_t))type metadata accessor for BeaconIdentifier);
}

unint64_t sub_100861144()
{
  unint64_t result = qword_10164F5F0;
  if (!qword_10164F5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F5F0);
  }
  return result;
}

uint64_t sub_100861198(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BeaconIdentifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008612ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BeaconIdentifier.CodingKeys()
{
  return &type metadata for BeaconIdentifier.CodingKeys;
}

unint64_t sub_1008612E8()
{
  unint64_t result = qword_10164F600;
  if (!qword_10164F600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F600);
  }
  return result;
}

unint64_t sub_100861340()
{
  unint64_t result = qword_10164F608;
  if (!qword_10164F608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F608);
  }
  return result;
}

unint64_t sub_100861398()
{
  unint64_t result = qword_10164F610;
  if (!qword_10164F610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164F610);
  }
  return result;
}

uint64_t sub_1008613EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644972657375 && a2 == 0xEE00726569666974;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001013EE1B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_100861500(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(void *)(a1 + 32) = a2[4];
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (unsigned char *)(a1 + v6);
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = (int *)type metadata accessor for AccessoryProductInfo();
    uint64_t v10 = *((void *)v9 - 1);
    uint64_t v11 = *(unsigned int (**)(unsigned char *, uint64_t, int *))(v10 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_10000588C((uint64_t *)&unk_10166BFA0);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v128 = v3;
      uint64_t v129 = v10;
      *(void *)uint64_t v7 = *(void *)v8;
      v7[8] = v8[8];
      uint64_t v14 = v9[5];
      uint64_t v15 = &v7[v14];
      uint64_t v16 = &v8[v14];
      uint64_t v17 = type metadata accessor for ServerStatusCode();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      v7[v9[6]] = v8[v9[6]];
      v7[v9[7]] = v8[v9[7]];
      uint64_t v18 = v9[8];
      uint64_t v19 = &v7[v18];
      uint64_t v20 = &v8[v18];
      uint64_t v133 = v20[1];
      *uint64_t v19 = *v20;
      v19[1] = v133;
      v7[v9[9]] = v8[v9[9]];
      v7[v9[10]] = v8[v9[10]];
      v7[v9[11]] = v8[v9[11]];
      uint64_t v21 = v9[12];
      uint64_t v22 = &v7[v21];
      uint64_t v23 = &v8[v21];
      uint64_t v24 = v23[1];
      *uint64_t v22 = *v23;
      v22[1] = v24;
      uint64_t v25 = v9[13];
      uint64_t v26 = &v7[v25];
      unint64_t v27 = &v8[v25];
      uint64_t v28 = v27[1];
      *uint64_t v26 = *v27;
      v26[1] = v28;
      uint64_t v29 = v9[14];
      uint64_t v30 = &v7[v29];
      char v31 = &v8[v29];
      *(void *)uint64_t v30 = *(void *)v31;
      v30[8] = v31[8];
      uint64_t v32 = v9[15];
      uint64_t v33 = &v7[v32];
      uint64_t v34 = &v8[v32];
      uint64_t v35 = v34[1];
      *uint64_t v33 = *v34;
      v33[1] = v35;
      uint64_t v36 = v9[16];
      __dst = &v7[v36];
      uint64_t v126 = &v8[v36];
      uint64_t v37 = type metadata accessor for URL();
      uint64_t v38 = *(void *)(v37 - 8);
      uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v132 = v39;
      if (v39(v126, 1, v37))
      {
        uint64_t v40 = sub_10000588C(&qword_101649E40);
        memcpy(__dst, v126, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v38 + 16))(__dst, v126, v37);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v37);
      }
      uint64_t v41 = v9[17];
      uint64_t v42 = &v7[v41];
      uint64_t v43 = &v8[v41];
      uint64_t v130 = v38;
      uint64_t v131 = v37;
      if (v132(&v8[v41], 1, v37))
      {
        uint64_t v44 = sub_10000588C(&qword_101649E40);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v38 + 16))(v42, v43, v37);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v38 + 56))(v42, 0, 1, v37);
      }
      uint64_t v45 = v9[18];
      uint64_t v46 = &v7[v45];
      uint64_t v47 = &v8[v45];
      uint64_t v48 = v47[1];
      *uint64_t v46 = *v47;
      v46[1] = v48;
      *(void *)&v7[v9[19]] = *(void *)&v8[v9[19]];
      uint64_t v49 = v9[20];
      uint64_t v50 = &v7[v49];
      uint64_t v51 = &v8[v49];
      char v52 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
      uint64_t v53 = *((void *)v52 - 1);
      unint64_t v54 = *(unsigned int (**)(void *, uint64_t, int *))(v53 + 48);
      swift_bridgeObjectRetain();
      if (v54(v51, 1, v52))
      {
        uint64_t v55 = sub_10000588C(&qword_101649E50);
        memcpy(v50, v51, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        uint64_t v127 = v53;
        uint64_t v56 = v51[1];
        *uint64_t v50 = *v51;
        v50[1] = v56;
        uint64_t v57 = v51[3];
        uint64_t v50[2] = v51[2];
        v50[3] = v57;
        uint64_t v58 = v51[5];
        v50[4] = v51[4];
        v50[5] = v58;
        *((_WORD *)v50 + 24) = *((_WORD *)v51 + 24);
        *((unsigned char *)v50 + 72) = *((unsigned char *)v51 + 72);
        uint64_t v59 = v51[8];
        v50[7] = v51[7];
        char v50[8] = v59;
        uint64_t v60 = v52[10];
        char v61 = (char *)v50 + v60;
        uint64_t v62 = (char *)v51 + v60;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v132(v62, 1, v131))
        {
          uint64_t v63 = sub_10000588C(&qword_101649E40);
          memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
          uint64_t v64 = v130;
        }
        else
        {
          uint64_t v65 = v61;
          uint64_t v64 = v130;
          (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v65, v62, v131);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v65, 0, 1, v131);
        }
        uint64_t v66 = v52[11];
        int v67 = (char *)v50 + v66;
        uint64_t v68 = (char *)v51 + v66;
        if (v132((char *)v51 + v66, 1, v131))
        {
          uint64_t v69 = sub_10000588C(&qword_101649E40);
          memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v67, v68, v131);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v67, 0, 1, v131);
        }
        uint64_t v70 = v52[12];
        uint64_t v71 = (char *)v50 + v70;
        uint64_t v72 = (char *)v51 + v70;
        *(void *)uint64_t v71 = *(void *)v72;
        v71[8] = v72[8];
        uint64_t v73 = v52[13];
        uint64_t v74 = (void *)((char *)v50 + v73);
        uint64_t v75 = (void *)((char *)v51 + v73);
        uint64_t v76 = v75[1];
        void *v74 = *v75;
        v74[1] = v76;
        *(void *)((char *)v50 + v52[14]) = *(void *)((char *)v51 + v52[14]);
        uint64_t v77 = v52[15];
        unsigned int v78 = (void *)((char *)v50 + v77);
        uint64_t v79 = (void *)((char *)v51 + v77);
        uint64_t v80 = v79[1];
        void *v78 = *v79;
        v78[1] = v80;
        *(void *)((char *)v50 + v52[16]) = *(void *)((char *)v51 + v52[16]);
        uint64_t v81 = v52[17];
        uint64_t v82 = (char *)v50 + v81;
        uint64_t v83 = (char *)v51 + v81;
        *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
        v82[16] = v83[16];
        uint64_t v84 = v52[18];
        size_t v85 = (char *)v50 + v84;
        uint64_t v86 = (char *)v51 + v84;
        *(_OWORD *)size_t v85 = *(_OWORD *)v86;
        v85[16] = v86[16];
        uint64_t v87 = *(void (**)(void *, void, uint64_t, int *))(v127 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v87(v50, 0, 1, v52);
      }
      *(_DWORD *)&v7[v9[21]] = *(_DWORD *)&v8[v9[21]];
      *(void *)&v7[v9[22]] = *(void *)&v8[v9[22]];
      uint64_t v88 = v9[23];
      char v89 = &v7[v88];
      uint64_t v90 = &v8[v88];
      unint64_t v91 = *(void *)&v8[v88 + 8];
      swift_bridgeObjectRetain();
      if (v91 >> 60 == 15)
      {
        *(_OWORD *)char v89 = *v90;
      }
      else
      {
        uint64_t v92 = *(void *)v90;
        sub_1000361E0(v92, v91);
        *(void *)char v89 = v92;
        *((void *)v89 + 1) = v91;
      }
      uint64_t v93 = v9[24];
      uint64_t v94 = &v7[v93];
      uint64_t v95 = &v8[v93];
      unint64_t v96 = *((void *)v95 + 1);
      if (v96 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
      }
      else
      {
        uint64_t v97 = *(void *)v95;
        sub_1000361E0(*(void *)v95, *((void *)v95 + 1));
        *(void *)uint64_t v94 = v97;
        *((void *)v94 + 1) = v96;
      }
      char v98 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v130 + 16);
      v98(&v7[v9[25]], &v8[v9[25]], v131);
      v98(&v7[v9[26]], &v8[v9[26]], v131);
      v98(&v7[v9[27]], &v8[v9[27]], v131);
      v98(&v7[v9[28]], &v8[v9[28]], v131);
      v98(&v7[v9[29]], &v8[v9[29]], v131);
      v98(&v7[v9[30]], &v8[v9[30]], v131);
      uint64_t v99 = v9[31];
      uint64_t v100 = &v7[v99];
      uint64_t v101 = &v8[v99];
      uint64_t v102 = v101[1];
      *uint64_t v100 = *v101;
      v100[1] = v102;
      *(void *)&v7[v9[32]] = *(void *)&v8[v9[32]];
      uint64_t v103 = v9[33];
      uint64_t v104 = &v7[v103];
      uint64_t v105 = &v8[v103];
      uint64_t v106 = v105[1];
      *uint64_t v104 = *v105;
      v104[1] = v106;
      *(void *)&v7[v9[34]] = *(void *)&v8[v9[34]];
      uint64_t v107 = v9[35];
      uint64_t v108 = &v7[v107];
      uint64_t v109 = &v8[v107];
      *(_OWORD *)uint64_t v108 = *(_OWORD *)v109;
      v108[16] = v109[16];
      uint64_t v110 = v9[36];
      uint64_t v111 = &v7[v110];
      uint64_t v112 = &v8[v110];
      *(_OWORD *)uint64_t v111 = *(_OWORD *)v112;
      v111[16] = v112[16];
      uint64_t v113 = v9[37];
      uint64_t v134 = &v7[v113];
      uint64_t v114 = &v8[v113];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v98(v134, v114, v131);
      v98(&v7[v9[38]], &v8[v9[38]], v131);
      v98(&v7[v9[39]], &v8[v9[39]], v131);
      v98(&v7[v9[40]], &v8[v9[40]], v131);
      v98(&v7[v9[41]], &v8[v9[41]], v131);
      v98(&v7[v9[42]], &v8[v9[42]], v131);
      v7[v9[43]] = v8[v9[43]];
      v7[v9[44]] = v8[v9[44]];
      v7[v9[45]] = v8[v9[45]];
      uint64_t v115 = v9[46];
      uint64_t v116 = &v7[v115];
      uint64_t v117 = &v8[v115];
      uint64_t v118 = v117[1];
      *uint64_t v116 = *v117;
      v116[1] = v118;
      uint64_t v119 = v9[47];
      uint64_t v120 = &v7[v119];
      uint64_t v121 = &v8[v119];
      uint64_t v122 = v121[1];
      *uint64_t v120 = *v121;
      v120[1] = v122;
      uint64_t v123 = *(void (**)(unsigned char *, void, uint64_t, int *))(v129 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v123(v7, 0, 1, v9);
      return v128;
    }
  }
  return v3;
}

uint64_t sub_100861F50(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = (int *)type metadata accessor for AccessoryProductInfo();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = v4 + v5[5];
    uint64_t v8 = type metadata accessor for ServerStatusCode();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v4 + v5[16];
    uint64_t v10 = type metadata accessor for URL();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    if (!v12(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
    uint64_t v13 = v4 + v5[17];
    if (!v12(v13, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = v4 + v5[20];
    uint64_t v15 = type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v14 + *(int *)(v15 + 40);
      if (!v12(v16, 1, v10)) {
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v16, v10);
      }
      uint64_t v17 = v14 + *(int *)(v15 + 44);
      if (!v12(v17, 1, v10)) {
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v17, v10);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = (uint64_t *)(v4 + v5[23]);
    unint64_t v19 = v18[1];
    if (v19 >> 60 != 15) {
      sub_10001CFB8(*v18, v19);
    }
    uint64_t v20 = (uint64_t *)(v4 + v5[24]);
    unint64_t v21 = v20[1];
    if (v21 >> 60 != 15) {
      sub_10001CFB8(*v20, v21);
    }
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v22(v4 + v5[25], v10);
    v22(v4 + v5[26], v10);
    v22(v4 + v5[27], v10);
    v22(v4 + v5[28], v10);
    v22(v4 + v5[29], v10);
    v22(v4 + v5[30], v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22(v4 + v5[37], v10);
    v22(v4 + v5[38], v10);
    v22(v4 + v5[39], v10);
    v22(v4 + v5[40], v10);
    v22(v4 + v5[41], v10);
    v22(v4 + v5[42], v10);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10086244C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (unsigned char *)(a1 + v5);
  uint64_t v7 = (unsigned char *)(a2 + v5);
  uint64_t v8 = (int *)type metadata accessor for AccessoryProductInfo();
  uint64_t v9 = *((void *)v8 - 1);
  uint64_t v10 = *(unsigned int (**)(unsigned char *, uint64_t, int *))(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = sub_10000588C((uint64_t *)&unk_10166BFA0);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v123 = v9;
    uint64_t v124 = v3;
    *(void *)uint64_t v6 = *(void *)v7;
    v6[8] = v7[8];
    uint64_t v12 = v8[5];
    uint64_t v13 = &v6[v12];
    uint64_t v14 = &v7[v12];
    uint64_t v15 = type metadata accessor for ServerStatusCode();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    v6[v8[6]] = v7[v8[6]];
    v6[v8[7]] = v7[v8[7]];
    uint64_t v16 = v8[8];
    uint64_t v17 = &v6[v16];
    uint64_t v18 = &v7[v16];
    uint64_t v128 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v128;
    v6[v8[9]] = v7[v8[9]];
    v6[v8[10]] = v7[v8[10]];
    v6[v8[11]] = v7[v8[11]];
    uint64_t v19 = v8[12];
    uint64_t v20 = &v6[v19];
    unint64_t v21 = &v7[v19];
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = v8[13];
    uint64_t v24 = &v6[v23];
    uint64_t v25 = &v7[v23];
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = v8[14];
    uint64_t v28 = &v6[v27];
    uint64_t v29 = &v7[v27];
    *(void *)uint64_t v28 = *(void *)v29;
    v28[8] = v29[8];
    uint64_t v30 = v8[15];
    char v31 = &v6[v30];
    uint64_t v32 = &v7[v30];
    uint64_t v33 = v32[1];
    *char v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = v8[16];
    uint64_t v120 = &v7[v34];
    __dst = &v6[v34];
    uint64_t v35 = type metadata accessor for URL();
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v129 = v35;
    uint64_t v126 = v37;
    if (v37(v120, 1, v35))
    {
      uint64_t v38 = sub_10000588C(&qword_101649E40);
      memcpy(__dst, v120, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v36 + 16))(__dst, v120, v35);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v35);
    }
    uint64_t v39 = v8[17];
    uint64_t v40 = &v6[v39];
    uint64_t v41 = &v7[v39];
    uint64_t v125 = v36;
    if (v37(&v7[v39], 1, v129))
    {
      uint64_t v42 = sub_10000588C(&qword_101649E40);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v36 + 16))(v40, v41, v129);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v36 + 56))(v40, 0, 1, v129);
    }
    uint64_t v43 = v8[18];
    uint64_t v44 = &v6[v43];
    uint64_t v45 = &v7[v43];
    uint64_t v46 = v45[1];
    *uint64_t v44 = *v45;
    v44[1] = v46;
    *(void *)&v6[v8[19]] = *(void *)&v7[v8[19]];
    uint64_t v47 = v8[20];
    uint64_t v48 = &v6[v47];
    uint64_t v49 = &v7[v47];
    uint64_t v50 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
    uint64_t v51 = *((void *)v50 - 1);
    char v52 = *(unsigned int (**)(void *, uint64_t, int *))(v51 + 48);
    swift_bridgeObjectRetain();
    if (v52(v49, 1, v50))
    {
      uint64_t v53 = sub_10000588C(&qword_101649E50);
      memcpy(v48, v49, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      uint64_t v54 = v49[1];
      *uint64_t v48 = *v49;
      v48[1] = v54;
      uint64_t v55 = v49[3];
      v48[2] = v49[2];
      v48[3] = v55;
      uint64_t v56 = v49[5];
      v48[4] = v49[4];
      v48[5] = v56;
      *((_WORD *)v48 + 24) = *((_WORD *)v49 + 24);
      *((unsigned char *)v48 + 72) = *((unsigned char *)v49 + 72);
      uint64_t v57 = v49[8];
      v48[7] = v49[7];
      v48[8] = v57;
      uint64_t v58 = v50[10];
      __dsta = (char *)v48 + v58;
      uint64_t v59 = (char *)v49 + v58;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v126(v59, 1, v129))
      {
        uint64_t v60 = sub_10000588C(&qword_101649E40);
        memcpy(__dsta, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 16))(__dsta, v59, v129);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(__dsta, 0, 1, v129);
      }
      uint64_t v61 = v50[11];
      uint64_t v62 = (char *)v48 + v61;
      uint64_t v63 = (char *)v49 + v61;
      if (v126((char *)v49 + v61, 1, v129))
      {
        uint64_t v64 = sub_10000588C(&qword_101649E40);
        memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v62, v63, v129);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(v62, 0, 1, v129);
      }
      uint64_t v65 = v50[12];
      uint64_t v66 = (char *)v48 + v65;
      int v67 = (char *)v49 + v65;
      *(void *)uint64_t v66 = *(void *)v67;
      v66[8] = v67[8];
      uint64_t v68 = v50[13];
      uint64_t v69 = (void *)((char *)v48 + v68);
      uint64_t v70 = (void *)((char *)v49 + v68);
      uint64_t v71 = v70[1];
      *uint64_t v69 = *v70;
      v69[1] = v71;
      *(void *)((char *)v48 + v50[14]) = *(void *)((char *)v49 + v50[14]);
      uint64_t v72 = v50[15];
      uint64_t v73 = (void *)((char *)v48 + v72);
      uint64_t v74 = (void *)((char *)v49 + v72);
      uint64_t v75 = v74[1];
      *uint64_t v73 = *v74;
      v73[1] = v75;
      *(void *)((char *)v48 + v50[16]) = *(void *)((char *)v49 + v50[16]);
      uint64_t v76 = v50[17];
      uint64_t v77 = (char *)v48 + v76;
      unsigned int v78 = (char *)v49 + v76;
      *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
      v77[16] = v78[16];
      uint64_t v79 = v50[18];
      uint64_t v80 = (char *)v48 + v79;
      uint64_t v81 = (char *)v49 + v79;
      *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
      v80[16] = v81[16];
      uint64_t v82 = *(void (**)(void *, void, uint64_t, int *))(v51 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v82(v48, 0, 1, v50);
    }
    *(_DWORD *)&v6[v8[21]] = *(_DWORD *)&v7[v8[21]];
    *(void *)&v6[v8[22]] = *(void *)&v7[v8[22]];
    uint64_t v83 = v8[23];
    uint64_t v84 = &v6[v83];
    size_t v85 = &v7[v83];
    unint64_t v86 = *(void *)&v7[v83 + 8];
    swift_bridgeObjectRetain();
    if (v86 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v84 = *v85;
    }
    else
    {
      uint64_t v87 = *(void *)v85;
      sub_1000361E0(v87, v86);
      *(void *)uint64_t v84 = v87;
      *((void *)v84 + 1) = v86;
    }
    uint64_t v88 = v8[24];
    char v89 = &v6[v88];
    uint64_t v90 = &v7[v88];
    unint64_t v91 = *((void *)v90 + 1);
    if (v91 >> 60 == 15)
    {
      *(_OWORD *)char v89 = *(_OWORD *)v90;
    }
    else
    {
      uint64_t v92 = *(void *)v90;
      sub_1000361E0(*(void *)v90, *((void *)v90 + 1));
      *(void *)char v89 = v92;
      *((void *)v89 + 1) = v91;
    }
    uint64_t v93 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v125 + 16);
    v93(&v6[v8[25]], &v7[v8[25]], v129);
    v93(&v6[v8[26]], &v7[v8[26]], v129);
    v93(&v6[v8[27]], &v7[v8[27]], v129);
    v93(&v6[v8[28]], &v7[v8[28]], v129);
    v93(&v6[v8[29]], &v7[v8[29]], v129);
    v93(&v6[v8[30]], &v7[v8[30]], v129);
    uint64_t v94 = v8[31];
    uint64_t v95 = &v6[v94];
    unint64_t v96 = &v7[v94];
    uint64_t v97 = v96[1];
    *uint64_t v95 = *v96;
    v95[1] = v97;
    *(void *)&v6[v8[32]] = *(void *)&v7[v8[32]];
    uint64_t v98 = v8[33];
    uint64_t v99 = &v6[v98];
    uint64_t v100 = &v7[v98];
    uint64_t v101 = v100[1];
    void *v99 = *v100;
    v99[1] = v101;
    *(void *)&v6[v8[34]] = *(void *)&v7[v8[34]];
    uint64_t v102 = v8[35];
    uint64_t v103 = &v6[v102];
    uint64_t v104 = &v7[v102];
    *(_OWORD *)uint64_t v103 = *(_OWORD *)v104;
    v103[16] = v104[16];
    uint64_t v105 = v8[36];
    uint64_t v106 = &v6[v105];
    uint64_t v107 = &v7[v105];
    *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
    v106[16] = v107[16];
    uint64_t v108 = v8[37];
    uint64_t v127 = &v6[v108];
    uint64_t v109 = &v7[v108];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v93(v127, v109, v129);
    v93(&v6[v8[38]], &v7[v8[38]], v129);
    v93(&v6[v8[39]], &v7[v8[39]], v129);
    v93(&v6[v8[40]], &v7[v8[40]], v129);
    v93(&v6[v8[41]], &v7[v8[41]], v129);
    v93(&v6[v8[42]], &v7[v8[42]], v129);
    v6[v8[43]] = v7[v8[43]];
    v6[v8[44]] = v7[v8[44]];
    v6[v8[45]] = v7[v8[45]];
    uint64_t v110 = v8[46];
    uint64_t v111 = &v6[v110];
    uint64_t v112 = &v7[v110];
    uint64_t v113 = v112[1];
    void *v111 = *v112;
    v111[1] = v113;
    uint64_t v114 = v8[47];
    uint64_t v115 = &v6[v114];
    uint64_t v116 = &v7[v114];
    uint64_t v117 = v116[1];
    *uint64_t v115 = *v116;
    v115[1] = v117;
    uint64_t v118 = *(void (**)(unsigned char *, void, uint64_t, int *))(v123 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v118(v6, 0, 1, v8);
    return v124;
  }
  return v3;
}

void *sub_100862E6C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[2] = a2[2];
  v5[3] = a2[3];
  v5[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)v5 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = (int *)type metadata accessor for AccessoryProductInfo();
  uint64_t v10 = (void *)*((void *)v9 - 1);
  uint64_t v11 = (uint64_t (*)(unsigned char *, uint64_t, int *))v10[6];
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_100864958((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
      goto LABEL_7;
    }
    uint64_t v41 = *(void *)v8;
    v7[8] = v8[8];
    *(void *)uint64_t v7 = v41;
    uint64_t v42 = v9[5];
    uint64_t v43 = &v7[v42];
    uint64_t v44 = &v8[v42];
    uint64_t v45 = type metadata accessor for ServerStatusCode();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v45 - 8) + 24))(v43, v44, v45);
    v7[v9[6]] = v8[v9[6]];
    v7[v9[7]] = v8[v9[7]];
    uint64_t v46 = v9[8];
    uint64_t v47 = &v7[v46];
    uint64_t v48 = &v8[v46];
    *uint64_t v47 = *v48;
    v47[1] = v48[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v7[v9[9]] = v8[v9[9]];
    v7[v9[10]] = v8[v9[10]];
    v7[v9[11]] = v8[v9[11]];
    uint64_t v49 = v9[12];
    uint64_t v50 = &v7[v49];
    uint64_t v51 = &v8[v49];
    *uint64_t v50 = *v51;
    v50[1] = v51[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v52 = v9[13];
    uint64_t v53 = &v7[v52];
    uint64_t v54 = &v8[v52];
    *uint64_t v53 = *v54;
    v53[1] = v54[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v55 = v9[14];
    uint64_t v56 = &v7[v55];
    uint64_t v57 = &v8[v55];
    uint64_t v58 = *(void *)v57;
    v56[8] = v57[8];
    *(void *)uint64_t v56 = v58;
    uint64_t v59 = v9[15];
    uint64_t v60 = &v7[v59];
    uint64_t v61 = &v8[v59];
    *uint64_t v60 = *v61;
    v60[1] = v61[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v62 = v9[16];
    uint64_t v63 = &v7[v62];
    uint64_t v64 = &v8[v62];
    uint64_t v65 = type metadata accessor for URL();
    uint64_t v66 = *(void *)(v65 - 8);
    int v67 = *(uint64_t (**)(void))(v66 + 48);
    uint64_t v270 = v63;
    LODWORD(v63) = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v67)(v63, 1, v65);
    v275 = v67;
    uint64_t v280 = (void *)v65;
    int v68 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v67)(v64, 1, v65);
    if (v63)
    {
      if (v68)
      {
        uint64_t v69 = sub_10000588C(&qword_101649E40);
        memcpy(v270, v64, *(void *)(*(void *)(v69 - 8) + 64));
        uint64_t v70 = v65;
      }
      else
      {
        uint64_t v70 = v65;
        (*(void (**)(void *, unsigned char *, uint64_t))(v66 + 16))(v270, v64, v65);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v66 + 56))(v270, 0, 1, v65);
      }
    }
    else
    {
      uint64_t v70 = v65;
      if (v68)
      {
        (*(void (**)(void *, uint64_t))(v66 + 8))(v270, v65);
        uint64_t v89 = sub_10000588C(&qword_101649E40);
        memcpy(v270, v64, *(void *)(*(void *)(v89 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v66 + 24))(v270, v64, v65);
      }
    }
    uint64_t v147 = v9[17];
    int v148 = &v8[v147];
    uint64_t v266 = &v7[v147];
    int v149 = v275();
    int v150 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v275)(v148, 1, v70);
    __srca = (void (**)(void *, const void *, void))v66;
    uint64_t v278 = v5;
    if (v149)
    {
      if (v150)
      {
        uint64_t v151 = sub_10000588C(&qword_101649E40);
        memcpy(v266, v148, *(void *)(*(void *)(v151 - 8) + 64));
        os_log_type_t v152 = (void *)v65;
      }
      else
      {
        os_log_type_t v152 = (void *)v65;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v66 + 16))(v266, v148, v65);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v66 + 56))(v266, 0, 1, v65);
      }
    }
    else
    {
      os_log_type_t v152 = (void *)v65;
      if (v150)
      {
        (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v266, v65);
        uint64_t v153 = sub_10000588C(&qword_101649E40);
        memcpy(v266, v148, *(void *)(*(void *)(v153 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v66 + 24))(v266, v148, v65);
      }
    }
    uint64_t v154 = v9[18];
    unint64_t v155 = &v7[v154];
    uint64_t v156 = &v8[v154];
    *unint64_t v155 = *v156;
    v155[1] = v156[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&v7[v9[19]] = *(void *)&v8[v9[19]];
    uint64_t v157 = v9[20];
    uint64_t v158 = &v7[v157];
    uint64_t v159 = &v8[v157];
    uint64_t v160 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
    uint64_t v267 = (void *)*((void *)v160 - 1);
    uint64_t v161 = (uint64_t (*)(char *, uint64_t, int *))v267[6];
    int v162 = v161(v158, 1, v160);
    uint64_t v272 = v160;
    int v163 = v161(v159, 1, v160);
    if (v162)
    {
      if (!v163)
      {
        *(void *)uint64_t v158 = *(void *)v159;
        *((void *)v158 + 1) = *((void *)v159 + 1);
        *((void *)v158 + 2) = *((void *)v159 + 2);
        *((void *)v158 + 3) = *((void *)v159 + 3);
        *((void *)v158 + 4) = *((void *)v159 + 4);
        *((void *)v158 + 5) = *((void *)v159 + 5);
        *((_WORD *)v158 + 24) = *((_WORD *)v159 + 24);
        *((void *)v158 + 7) = *((void *)v159 + 7);
        uint64_t v164 = *((void *)v159 + 8);
        v158[72] = v159[72];
        *((void *)v158 + 8) = v164;
        uint64_t v165 = v160[10];
        uint64_t v281 = &v158[v165];
        char v166 = &v159[v165];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (((unsigned int (*)(char *, uint64_t, void *))v275)(v166, 1, v152))
        {
          uint64_t v167 = sub_10000588C(&qword_101649E40);
          memcpy(v281, v166, *(void *)(*(void *)(v167 - 8) + 64));
        }
        else
        {
          ((void (**)(void *, const void *, void *))__srca)[2](v281, v166, v152);
          ((void (*)(char *, void, uint64_t, void *))__srca[7])(v281, 0, 1, v152);
        }
        uint64_t v176 = v160[11];
        uint64_t v177 = &v158[v176];
        uint64_t v178 = &v159[v176];
        if (((unsigned int (*)(char *, uint64_t, void *))v275)(&v159[v176], 1, v152))
        {
          uint64_t v179 = sub_10000588C(&qword_101649E40);
          memcpy(v177, v178, *(void *)(*(void *)(v179 - 8) + 64));
        }
        else
        {
          ((void (**)(void *, const void *, void *))__srca)[2](v177, v178, v152);
          ((void (*)(char *, void, uint64_t, void *))__srca[7])(v177, 0, 1, v152);
        }
        uint64_t v180 = v160[12];
        uint64_t v181 = &v158[v180];
        unint64_t v182 = &v159[v180];
        uint64_t v183 = *(void *)v182;
        v181[8] = v182[8];
        *(void *)uint64_t v181 = v183;
        uint64_t v184 = v160[13];
        uint64_t v185 = &v158[v184];
        uint64_t v186 = &v159[v184];
        *(void *)uint64_t v185 = *(void *)v186;
        *((void *)v185 + 1) = *((void *)v186 + 1);
        *(void *)&v158[v160[14]] = *(void *)&v159[v160[14]];
        uint64_t v187 = v160[15];
        uint64_t v188 = &v158[v187];
        uint64_t v189 = &v159[v187];
        *(void *)uint64_t v188 = *(void *)v189;
        *((void *)v188 + 1) = *((void *)v189 + 1);
        *(void *)&v158[v160[16]] = *(void *)&v159[v160[16]];
        uint64_t v190 = v160[17];
        uint64_t v191 = &v158[v190];
        uint64_t v192 = &v159[v190];
        long long v193 = *(_OWORD *)v192;
        v191[16] = v192[16];
        *(_OWORD *)uint64_t v191 = v193;
        uint64_t v194 = v160[18];
        uint64_t v195 = &v158[v194];
        unsigned int v196 = &v159[v194];
        long long v197 = *(_OWORD *)v196;
        v195[16] = v196[16];
        *(_OWORD *)uint64_t v195 = v197;
        uint64_t v198 = (void (*)(char *, void, uint64_t, int *))v267[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v198(v158, 0, 1, v160);
        goto LABEL_69;
      }
    }
    else
    {
      if (!v163)
      {
        *(void *)uint64_t v158 = *(void *)v159;
        *((void *)v158 + 1) = *((void *)v159 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((void *)v158 + 2) = *((void *)v159 + 2);
        *((void *)v158 + 3) = *((void *)v159 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((void *)v158 + 4) = *((void *)v159 + 4);
        *((void *)v158 + 5) = *((void *)v159 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((_WORD *)v158 + 24) = *((_WORD *)v159 + 24);
        *((void *)v158 + 7) = *((void *)v159 + 7);
        uint64_t v169 = *((void *)v159 + 8);
        v158[72] = v159[72];
        *((void *)v158 + 8) = v169;
        uint64_t v170 = v160[10];
        uint64_t v171 = &v159[v170];
        uint64_t v268 = &v158[v170];
        int v172 = v275();
        int v173 = ((uint64_t (*)(char *, uint64_t, void *))v275)(v171, 1, v152);
        if (v172)
        {
          if (v173)
          {
            uint64_t v174 = sub_10000588C(&qword_101649E40);
            memcpy(v268, v171, *(void *)(*(void *)(v174 - 8) + 64));
            uint64_t v175 = v280;
          }
          else
          {
            uint64_t v175 = v280;
            ((void (**)(void *, const void *, void *))__srca)[2](v268, v171, v280);
            ((void (*)(char *, void, uint64_t, void *))__srca[7])(v268, 0, 1, v280);
          }
        }
        else
        {
          uint64_t v175 = v280;
          if (v173)
          {
            ((void (*)(char *, void *))__srca[1])(v268, v280);
            uint64_t v199 = sub_10000588C(&qword_101649E40);
            memcpy(v268, v171, *(void *)(*(void *)(v199 - 8) + 64));
          }
          else
          {
            ((void (**)(void *, const void *, void *))__srca)[3](v268, v171, v280);
          }
        }
        uint64_t v200 = v272[11];
        uint64_t v201 = &v159[v200];
        uint64_t v269 = &v158[v200];
        int v202 = v275();
        int v203 = ((uint64_t (*)(char *, uint64_t, void *))v275)(v201, 1, v175);
        if (v202)
        {
          if (v203)
          {
            uint64_t v204 = sub_10000588C(&qword_101649E40);
            memcpy(v269, v201, *(void *)(*(void *)(v204 - 8) + 64));
            os_log_type_t v152 = v280;
          }
          else
          {
            os_log_type_t v152 = v280;
            ((void (**)(void *, const void *, void *))__srca)[2](v269, v201, v280);
            ((void (*)(char *, void, uint64_t, void *))__srca[7])(v269, 0, 1, v280);
          }
        }
        else
        {
          os_log_type_t v152 = v280;
          if (v203)
          {
            ((void (*)(char *, void *))__srca[1])(v269, v280);
            uint64_t v205 = sub_10000588C(&qword_101649E40);
            memcpy(v269, v201, *(void *)(*(void *)(v205 - 8) + 64));
          }
          else
          {
            ((void (**)(void *, const void *, void *))__srca)[3](v269, v201, v280);
          }
        }
        uint64_t v206 = v272[12];
        unint64_t v207 = &v158[v206];
        uint64_t v208 = &v159[v206];
        uint64_t v209 = *(void *)v208;
        v207[8] = v208[8];
        *(void *)unint64_t v207 = v209;
        uint64_t v210 = v272[13];
        uint64_t v211 = &v158[v210];
        uint64_t v212 = &v159[v210];
        *(void *)uint64_t v211 = *(void *)v212;
        *((void *)v211 + 1) = *((void *)v212 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)&v158[v272[14]] = *(void *)&v159[v272[14]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v213 = v272[15];
        uint64_t v214 = &v158[v213];
        uint64_t v215 = &v159[v213];
        *(void *)uint64_t v214 = *(void *)v215;
        *((void *)v214 + 1) = *((void *)v215 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)&v158[v272[16]] = *(void *)&v159[v272[16]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v216 = v272[17];
        uint64_t v217 = &v158[v216];
        uint64_t v218 = &v159[v216];
        long long v219 = *(_OWORD *)v218;
        v217[16] = v218[16];
        *(_OWORD *)uint64_t v217 = v219;
        uint64_t v220 = v272[18];
        uint64_t v221 = &v158[v220];
        uint64_t v222 = &v159[v220];
        long long v223 = *(_OWORD *)v222;
        v221[16] = v222[16];
        *(_OWORD *)uint64_t v221 = v223;
LABEL_69:
        uint64_t v5 = v278;
        *(_DWORD *)&v7[v9[21]] = *(_DWORD *)&v8[v9[21]];
        *(void *)&v7[v9[22]] = *(void *)&v8[v9[22]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v224 = v9[23];
        uint64_t v225 = (uint64_t *)&v7[v224];
        uint64_t v226 = (uint64_t *)&v8[v224];
        unint64_t v227 = *(void *)&v8[v224 + 8];
        if (*(void *)&v7[v224 + 8] >> 60 == 15)
        {
          if (v227 >> 60 != 15)
          {
            uint64_t v228 = *v226;
            sub_1000361E0(v228, v227);
            *uint64_t v225 = v228;
            v225[1] = v227;
            goto LABEL_76;
          }
        }
        else
        {
          if (v227 >> 60 != 15)
          {
            uint64_t v229 = *v226;
            sub_1000361E0(v229, v227);
            uint64_t v230 = *v225;
            unint64_t v231 = v225[1];
            *uint64_t v225 = v229;
            v225[1] = v227;
            sub_10001CFB8(v230, v231);
LABEL_76:
            uint64_t v232 = v9[24];
            uint64_t v233 = (uint64_t *)&v7[v232];
            uint64_t v234 = (uint64_t *)&v8[v232];
            unint64_t v235 = *(void *)&v8[v232 + 8];
            if (*(void *)&v7[v232 + 8] >> 60 == 15)
            {
              if (v235 >> 60 != 15)
              {
                uint64_t v236 = *v234;
                sub_1000361E0(v236, v235);
                *uint64_t v233 = v236;
                v233[1] = v235;
LABEL_83:
                uint64_t v240 = (void (*)(void *, const void *, void *))__srca[3];
                v240(&v7[v9[25]], &v8[v9[25]], v152);
                v240(&v7[v9[26]], &v8[v9[26]], v152);
                v240(&v7[v9[27]], &v8[v9[27]], v152);
                v240(&v7[v9[28]], &v8[v9[28]], v152);
                v240(&v7[v9[29]], &v8[v9[29]], v152);
                v240(&v7[v9[30]], &v8[v9[30]], v152);
                uint64_t v241 = v9[31];
                uint64_t v242 = &v7[v241];
                uint64_t v243 = &v8[v241];
                *uint64_t v242 = *v243;
                v242[1] = v243[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)&v7[v9[32]] = *(void *)&v8[v9[32]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v244 = v9[33];
                uint64_t v245 = &v7[v244];
                uint64_t v246 = &v8[v244];
                *uint64_t v245 = *v246;
                v245[1] = v246[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)&v7[v9[34]] = *(void *)&v8[v9[34]];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v247 = v9[35];
                unint64_t v248 = &v7[v247];
                uint64_t v249 = &v8[v247];
                long long v250 = *(_OWORD *)v249;
                v248[16] = v249[16];
                *(_OWORD *)unint64_t v248 = v250;
                uint64_t v251 = v9[36];
                uint64_t v252 = &v7[v251];
                uint64_t v253 = &v8[v251];
                long long v254 = *(_OWORD *)v253;
                v252[16] = v253[16];
                *(_OWORD *)uint64_t v252 = v254;
                v240(&v7[v9[37]], &v8[v9[37]], v152);
                v240(&v7[v9[38]], &v8[v9[38]], v152);
                v240(&v7[v9[39]], &v8[v9[39]], v152);
                v240(&v7[v9[40]], &v8[v9[40]], v152);
                v240(&v7[v9[41]], &v8[v9[41]], v152);
                v240(&v7[v9[42]], &v8[v9[42]], v152);
                v7[v9[43]] = v8[v9[43]];
                v7[v9[44]] = v8[v9[44]];
                v7[v9[45]] = v8[v9[45]];
                uint64_t v255 = v9[46];
                long long v256 = &v7[v255];
                uint64_t v257 = &v8[v255];
                *long long v256 = *v257;
                v256[1] = v257[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v258 = v9[47];
                uint64_t v259 = &v7[v258];
                uint64_t v260 = &v8[v258];
                void *v259 = *v260;
                v259[1] = v260[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                return v5;
              }
            }
            else
            {
              if (v235 >> 60 != 15)
              {
                uint64_t v237 = *v234;
                sub_1000361E0(v237, v235);
                uint64_t v238 = *v233;
                unint64_t v239 = v233[1];
                *uint64_t v233 = v237;
                v233[1] = v235;
                sub_10001CFB8(v238, v239);
                goto LABEL_83;
              }
              sub_1001356D0((uint64_t)v233);
            }
            *(_OWORD *)uint64_t v233 = *(_OWORD *)v234;
            goto LABEL_83;
          }
          sub_1001356D0((uint64_t)v225);
        }
        *(_OWORD *)uint64_t v225 = *(_OWORD *)v226;
        goto LABEL_76;
      }
      sub_100864958((uint64_t)v158, type metadata accessor for AccessoryInfoResponseContent.Configuration);
    }
    uint64_t v168 = sub_10000588C(&qword_101649E50);
    memcpy(v158, v159, *(void *)(*(void *)(v168 - 8) + 64));
    goto LABEL_69;
  }
  if (v13)
  {
LABEL_7:
    uint64_t v40 = sub_10000588C((uint64_t *)&unk_10166BFA0);
    memcpy(v7, v8, *(void *)(*(void *)(v40 - 8) + 64));
    return v5;
  }
  uint64_t v265 = v10;
  v277 = v5;
  uint64_t v14 = *(void *)v8;
  v7[8] = v8[8];
  *(void *)uint64_t v7 = v14;
  uint64_t v15 = v9[5];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  uint64_t v18 = type metadata accessor for ServerStatusCode();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  v7[v9[6]] = v8[v9[6]];
  v7[v9[7]] = v8[v9[7]];
  uint64_t v19 = v9[8];
  uint64_t v20 = &v7[v19];
  unint64_t v21 = &v8[v19];
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  v7[v9[9]] = v8[v9[9]];
  v7[v9[10]] = v8[v9[10]];
  v7[v9[11]] = v8[v9[11]];
  uint64_t v22 = v9[12];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  uint64_t v25 = v9[13];
  uint64_t v26 = &v7[v25];
  uint64_t v27 = &v8[v25];
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  uint64_t v28 = v9[14];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  char v31 = v30[8];
  *(void *)uint64_t v29 = *(void *)v30;
  v29[8] = v31;
  uint64_t v32 = v9[15];
  uint64_t v33 = &v7[v32];
  uint64_t v34 = &v8[v32];
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  uint64_t v35 = v9[16];
  __dst = &v7[v35];
  uint64_t v263 = &v8[v35];
  uint64_t v36 = type metadata accessor for URL();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, void *))(v37 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v279 = (void *)v36;
  __src = v38;
  if (v38(v263, 1, (void *)v36))
  {
    uint64_t v39 = sub_10000588C(&qword_101649E40);
    memcpy(__dst, v263, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v37 + 16))(__dst, v263, v36);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v36);
  }
  uint64_t v71 = v9[17];
  uint64_t v72 = &v7[v71];
  uint64_t v73 = &v8[v71];
  uint64_t v271 = (void (**)(void *, const void *, void *))v37;
  if (v38(&v8[v71], 1, v279))
  {
    uint64_t v74 = sub_10000588C(&qword_101649E40);
    memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, void *))(v37 + 16))(v72, v73, v279);
    (*(void (**)(unsigned char *, void, uint64_t, void *))(v37 + 56))(v72, 0, 1, v279);
  }
  uint64_t v75 = v9[18];
  uint64_t v76 = &v7[v75];
  uint64_t v77 = &v8[v75];
  *uint64_t v76 = *v77;
  v76[1] = v77[1];
  *(void *)&v7[v9[19]] = *(void *)&v8[v9[19]];
  uint64_t v78 = v9[20];
  uint64_t v79 = &v7[v78];
  uint64_t v80 = &v8[v78];
  uint64_t v81 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
  uint64_t v82 = *((void *)v81 - 1);
  uint64_t v83 = *(unsigned int (**)(void *, uint64_t, int *))(v82 + 48);
  swift_bridgeObjectRetain();
  if (v83(v80, 1, v81))
  {
    uint64_t v84 = sub_10000588C(&qword_101649E50);
    memcpy(v79, v80, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    *uint64_t v79 = *v80;
    v79[1] = v80[1];
    v79[2] = v80[2];
    v79[3] = v80[3];
    v79[4] = v80[4];
    v79[5] = v80[5];
    *((_WORD *)v79 + 24) = *((_WORD *)v80 + 24);
    v79[7] = v80[7];
    uint64_t v85 = v80[8];
    *((unsigned char *)v79 + 72) = *((unsigned char *)v80 + 72);
    v79[8] = v85;
    uint64_t v86 = v81[10];
    long long v264 = (char *)v79 + v86;
    uint64_t v87 = (char *)v80 + v86;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__src(v87, 1, v279))
    {
      uint64_t v88 = sub_10000588C(&qword_101649E40);
      memcpy(v264, v87, *(void *)(*(void *)(v88 - 8) + 64));
    }
    else
    {
      v271[2](v264, v87, v279);
      ((void (*)(char *, void, uint64_t, void *))v271[7])(v264, 0, 1, v279);
    }
    uint64_t v90 = v81[11];
    unint64_t v91 = (char *)v79 + v90;
    uint64_t v92 = (char *)v80 + v90;
    if (__src((char *)v80 + v90, 1, v279))
    {
      uint64_t v93 = sub_10000588C(&qword_101649E40);
      memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
    }
    else
    {
      v271[2](v91, v92, v279);
      ((void (*)(char *, void, uint64_t, void *))v271[7])(v91, 0, 1, v279);
    }
    uint64_t v94 = v81[12];
    uint64_t v95 = (char *)v79 + v94;
    unint64_t v96 = (char *)v80 + v94;
    uint64_t v97 = *(void *)v96;
    v95[8] = v96[8];
    *(void *)uint64_t v95 = v97;
    uint64_t v98 = v81[13];
    uint64_t v99 = (void *)((char *)v79 + v98);
    uint64_t v100 = (void *)((char *)v80 + v98);
    void *v99 = *v100;
    v99[1] = v100[1];
    *(void *)((char *)v79 + v81[14]) = *(void *)((char *)v80 + v81[14]);
    uint64_t v101 = v81[15];
    uint64_t v102 = (void *)((char *)v79 + v101);
    uint64_t v103 = (void *)((char *)v80 + v101);
    *uint64_t v102 = *v103;
    v102[1] = v103[1];
    *(void *)((char *)v79 + v81[16]) = *(void *)((char *)v80 + v81[16]);
    uint64_t v104 = v81[17];
    uint64_t v105 = (char *)v79 + v104;
    uint64_t v106 = (char *)v80 + v104;
    long long v107 = *(_OWORD *)v106;
    v105[16] = v106[16];
    *(_OWORD *)uint64_t v105 = v107;
    uint64_t v108 = v81[18];
    uint64_t v109 = (char *)v79 + v108;
    uint64_t v110 = (char *)v80 + v108;
    long long v111 = *(_OWORD *)v110;
    v109[16] = v110[16];
    *(_OWORD *)uint64_t v109 = v111;
    uint64_t v112 = *(void (**)(void *, void, uint64_t, int *))(v82 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v112(v79, 0, 1, v81);
  }
  *(_DWORD *)&v7[v9[21]] = *(_DWORD *)&v8[v9[21]];
  *(void *)&v7[v9[22]] = *(void *)&v8[v9[22]];
  uint64_t v113 = v9[23];
  uint64_t v114 = &v7[v113];
  uint64_t v115 = &v8[v113];
  unint64_t v116 = *(void *)&v8[v113 + 8];
  swift_bridgeObjectRetain();
  if (v116 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v114 = *v115;
  }
  else
  {
    uint64_t v117 = *(void *)v115;
    sub_1000361E0(v117, v116);
    *(void *)uint64_t v114 = v117;
    *((void *)v114 + 1) = v116;
  }
  uint64_t v118 = v9[24];
  uint64_t v119 = &v7[v118];
  uint64_t v120 = &v8[v118];
  unint64_t v121 = *((void *)v120 + 1);
  if (v121 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
  }
  else
  {
    uint64_t v122 = *(void *)v120;
    sub_1000361E0(*(void *)v120, *((void *)v120 + 1));
    *(void *)uint64_t v119 = v122;
    *((void *)v119 + 1) = v121;
  }
  uint64_t v123 = v271[2];
  v123(&v7[v9[25]], &v8[v9[25]], v279);
  v123(&v7[v9[26]], &v8[v9[26]], v279);
  v123(&v7[v9[27]], &v8[v9[27]], v279);
  v123(&v7[v9[28]], &v8[v9[28]], v279);
  v123(&v7[v9[29]], &v8[v9[29]], v279);
  v123(&v7[v9[30]], &v8[v9[30]], v279);
  uint64_t v124 = v9[31];
  uint64_t v125 = &v7[v124];
  uint64_t v126 = &v8[v124];
  void *v125 = *v126;
  v125[1] = v126[1];
  *(void *)&v7[v9[32]] = *(void *)&v8[v9[32]];
  uint64_t v127 = v9[33];
  uint64_t v128 = &v7[v127];
  uint64_t v129 = &v8[v127];
  *uint64_t v128 = *v129;
  v128[1] = v129[1];
  *(void *)&v7[v9[34]] = *(void *)&v8[v9[34]];
  uint64_t v130 = v9[35];
  uint64_t v131 = &v7[v130];
  uint64_t v132 = &v8[v130];
  char v133 = v132[16];
  *(_OWORD *)uint64_t v131 = *(_OWORD *)v132;
  v131[16] = v133;
  uint64_t v134 = v9[36];
  unint64_t v135 = &v7[v134];
  uint64_t v136 = &v8[v134];
  char v137 = v136[16];
  *(_OWORD *)unint64_t v135 = *(_OWORD *)v136;
  v135[16] = v137;
  uint64_t v138 = v9[37];
  uint64_t v276 = &v7[v138];
  uint64_t v139 = &v8[v138];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v123(v276, v139, v279);
  v123(&v7[v9[38]], &v8[v9[38]], v279);
  v123(&v7[v9[39]], &v8[v9[39]], v279);
  v123(&v7[v9[40]], &v8[v9[40]], v279);
  v123(&v7[v9[41]], &v8[v9[41]], v279);
  v123(&v7[v9[42]], &v8[v9[42]], v279);
  v7[v9[43]] = v8[v9[43]];
  v7[v9[44]] = v8[v9[44]];
  v7[v9[45]] = v8[v9[45]];
  uint64_t v140 = v9[46];
  uint64_t v141 = &v7[v140];
  os_log_type_t v142 = &v8[v140];
  void *v141 = *v142;
  v141[1] = v142[1];
  uint64_t v143 = v9[47];
  uint64_t v144 = &v7[v143];
  uint64_t v145 = &v8[v143];
  *uint64_t v144 = *v145;
  v144[1] = v145[1];
  unint64_t v146 = (void (*)(unsigned char *, void, uint64_t, int *))v265[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v146(v7, 0, 1, v9);
  return v277;
}

uint64_t sub_100864958(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1008649B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (unsigned char *)(a1 + v4);
  uint64_t v6 = (unsigned char *)(a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for AccessoryProductInfo();
  uint64_t v8 = *((void *)v7 - 1);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_10000588C((uint64_t *)&unk_10166BFA0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v63 = v8;
    *(void *)uint64_t v5 = *(void *)v6;
    v5[8] = v6[8];
    uint64_t v10 = v7[5];
    uint64_t v11 = &v5[v10];
    int v12 = &v6[v10];
    uint64_t v13 = type metadata accessor for ServerStatusCode();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    v5[v7[6]] = v6[v7[6]];
    v5[v7[7]] = v6[v7[7]];
    *(_OWORD *)&v5[v7[8]] = *(_OWORD *)&v6[v7[8]];
    v5[v7[9]] = v6[v7[9]];
    v5[v7[10]] = v6[v7[10]];
    v5[v7[11]] = v6[v7[11]];
    *(_OWORD *)&v5[v7[12]] = *(_OWORD *)&v6[v7[12]];
    *(_OWORD *)&v5[v7[13]] = *(_OWORD *)&v6[v7[13]];
    uint64_t v14 = v7[14];
    uint64_t v15 = &v5[v14];
    uint64_t v16 = &v6[v14];
    v15[8] = v16[8];
    *(void *)uint64_t v15 = *(void *)v16;
    *(_OWORD *)&v5[v7[15]] = *(_OWORD *)&v6[v7[15]];
    uint64_t v17 = v7[16];
    uint64_t v18 = &v5[v17];
    uint64_t v19 = &v6[v17];
    uint64_t v20 = type metadata accessor for URL();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(unsigned int (**)(void))(v21 + 48);
    if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v22)(v19, 1, v20))
    {
      uint64_t v23 = sub_10000588C(&qword_101649E40);
      memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v24 = v7[17];
    uint64_t v25 = &v5[v24];
    uint64_t v26 = &v6[v24];
    uint64_t v62 = v22;
    if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v22)(&v6[v24], 1, v20))
    {
      uint64_t v27 = sub_10000588C(&qword_101649E40);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 32))(v25, v26, v20);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56))(v25, 0, 1, v20);
    }
    *(_OWORD *)&v5[v7[18]] = *(_OWORD *)&v6[v7[18]];
    *(void *)&v5[v7[19]] = *(void *)&v6[v7[19]];
    uint64_t v28 = v7[20];
    uint64_t v29 = &v5[v28];
    uint64_t v30 = &v6[v28];
    char v31 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
    uint64_t v32 = *((void *)v31 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v32 + 48))(v30, 1, v31))
    {
      uint64_t v33 = sub_10000588C(&qword_101649E50);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      long long v34 = v30[1];
      *uint64_t v29 = *v30;
      v29[1] = v34;
      v29[2] = v30[2];
      *((_WORD *)v29 + 24) = *((_WORD *)v30 + 24);
      uint64_t v35 = *((void *)v30 + 8);
      *((void *)v29 + 7) = *((void *)v30 + 7);
      *((void *)v29 + 8) = v35;
      *((unsigned char *)v29 + 72) = *((unsigned char *)v30 + 72);
      uint64_t v36 = v31[10];
      uint64_t v59 = v32;
      __dst = (char *)v29 + v36;
      uint64_t v37 = (char *)v30 + v36;
      if (v62())
      {
        uint64_t v38 = sub_10000588C(&qword_101649E40);
        memcpy(__dst, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(__dst, v37, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
      }
      uint64_t v39 = v31[11];
      __dsta = (char *)v29 + v39;
      uint64_t v40 = (char *)v30 + v39;
      if (v62())
      {
        uint64_t v41 = sub_10000588C(&qword_101649E40);
        memcpy(__dsta, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(__dsta, v40, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(__dsta, 0, 1, v20);
      }
      uint64_t v42 = v31[12];
      uint64_t v43 = (char *)v29 + v42;
      uint64_t v44 = (char *)v30 + v42;
      *(void *)uint64_t v43 = *(void *)v44;
      v43[8] = v44[8];
      *(_OWORD *)((char *)v29 + v31[13]) = *(_OWORD *)((char *)v30 + v31[13]);
      *(void *)((char *)v29 + v31[14]) = *(void *)((char *)v30 + v31[14]);
      *(_OWORD *)((char *)v29 + v31[15]) = *(_OWORD *)((char *)v30 + v31[15]);
      *(void *)((char *)v29 + v31[16]) = *(void *)((char *)v30 + v31[16]);
      uint64_t v45 = v31[17];
      uint64_t v46 = (char *)v29 + v45;
      uint64_t v47 = (char *)v30 + v45;
      v46[16] = v47[16];
      *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
      uint64_t v48 = v31[18];
      uint64_t v49 = (char *)v29 + v48;
      uint64_t v50 = (char *)v30 + v48;
      v49[16] = v50[16];
      *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v59 + 56))(v29, 0, 1, v31);
    }
    *(_DWORD *)&v5[v7[21]] = *(_DWORD *)&v6[v7[21]];
    *(void *)&v5[v7[22]] = *(void *)&v6[v7[22]];
    *(_OWORD *)&v5[v7[23]] = *(_OWORD *)&v6[v7[23]];
    *(_OWORD *)&v5[v7[24]] = *(_OWORD *)&v6[v7[24]];
    uint64_t v51 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 32);
    v51(&v5[v7[25]], &v6[v7[25]], v20);
    v51(&v5[v7[26]], &v6[v7[26]], v20);
    v51(&v5[v7[27]], &v6[v7[27]], v20);
    v51(&v5[v7[28]], &v6[v7[28]], v20);
    v51(&v5[v7[29]], &v6[v7[29]], v20);
    v51(&v5[v7[30]], &v6[v7[30]], v20);
    *(_OWORD *)&v5[v7[31]] = *(_OWORD *)&v6[v7[31]];
    *(void *)&v5[v7[32]] = *(void *)&v6[v7[32]];
    *(_OWORD *)&v5[v7[33]] = *(_OWORD *)&v6[v7[33]];
    *(void *)&v5[v7[34]] = *(void *)&v6[v7[34]];
    uint64_t v52 = v7[35];
    uint64_t v53 = &v5[v52];
    uint64_t v54 = &v6[v52];
    v53[16] = v54[16];
    *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
    uint64_t v55 = v7[36];
    uint64_t v56 = &v5[v55];
    uint64_t v57 = &v6[v55];
    v56[16] = v57[16];
    *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
    v51(&v5[v7[37]], &v6[v7[37]], v20);
    v51(&v5[v7[38]], &v6[v7[38]], v20);
    v51(&v5[v7[39]], &v6[v7[39]], v20);
    v51(&v5[v7[40]], &v6[v7[40]], v20);
    v51(&v5[v7[41]], &v6[v7[41]], v20);
    v51(&v5[v7[42]], &v6[v7[42]], v20);
    v5[v7[43]] = v6[v7[43]];
    v5[v7[44]] = v6[v7[44]];
    v5[v7[45]] = v6[v7[45]];
    *(_OWORD *)&v5[v7[46]] = *(_OWORD *)&v6[v7[46]];
    *(_OWORD *)&v5[v7[47]] = *(_OWORD *)&v6[v7[47]];
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v63 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_100865228(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  *((_OWORD *)v5 + 1) = *(_OWORD *)(a2 + 16);
  v5[4] = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)v5 + v7;
  uint64_t v9 = (unsigned char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for AccessoryProductInfo();
  uint64_t v11 = *((void *)v10 - 1);
  int v12 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_100864958((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
      goto LABEL_7;
    }
    unint64_t v227 = v5;
    *(void *)uint64_t v8 = *(void *)v9;
    v8[8] = v9[8];
    uint64_t v29 = v10[5];
    uint64_t v30 = &v8[v29];
    char v31 = &v9[v29];
    uint64_t v32 = type metadata accessor for ServerStatusCode();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
    v8[v10[6]] = v9[v10[6]];
    v8[v10[7]] = v9[v10[7]];
    uint64_t v33 = v10[8];
    long long v34 = &v8[v33];
    uint64_t v35 = (uint64_t *)&v9[v33];
    uint64_t v37 = *v35;
    uint64_t v36 = v35[1];
    *long long v34 = v37;
    v34[1] = v36;
    swift_bridgeObjectRelease();
    v8[v10[9]] = v9[v10[9]];
    v8[v10[10]] = v9[v10[10]];
    v8[v10[11]] = v9[v10[11]];
    uint64_t v38 = v10[12];
    uint64_t v39 = &v8[v38];
    uint64_t v40 = (uint64_t *)&v9[v38];
    uint64_t v42 = *v40;
    uint64_t v41 = v40[1];
    void *v39 = v42;
    v39[1] = v41;
    swift_bridgeObjectRelease();
    uint64_t v43 = v10[13];
    uint64_t v44 = &v8[v43];
    uint64_t v45 = (uint64_t *)&v9[v43];
    uint64_t v47 = *v45;
    uint64_t v46 = v45[1];
    *uint64_t v44 = v47;
    v44[1] = v46;
    swift_bridgeObjectRelease();
    uint64_t v48 = v10[14];
    uint64_t v49 = &v8[v48];
    uint64_t v50 = &v9[v48];
    *(void *)uint64_t v49 = *(void *)v50;
    v49[8] = v50[8];
    uint64_t v51 = v10[15];
    uint64_t v52 = &v8[v51];
    uint64_t v53 = (uint64_t *)&v9[v51];
    uint64_t v55 = *v53;
    uint64_t v54 = v53[1];
    *uint64_t v52 = v55;
    v52[1] = v54;
    swift_bridgeObjectRelease();
    uint64_t v56 = v10[16];
    uint64_t v57 = &v8[v56];
    uint64_t v58 = &v9[v56];
    uint64_t v59 = type metadata accessor for URL();
    uint64_t v60 = *(void *)(v59 - 8);
    uint64_t v61 = *(uint64_t (**)(void))(v60 + 48);
    unsigned int v62 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v61)(v57, 1, v59);
    unsigned int v63 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v61)(v58, 1, v59);
    if (v62)
    {
      if (!v63)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v60 + 32))(v57, v58, v59);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v63)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v60 + 40))(v57, v58, v59);
LABEL_22:
        uint64_t v81 = v10[17];
        uint64_t v82 = &v8[v81];
        uint64_t v83 = &v9[v81];
        unsigned int v84 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v61)(&v8[v81], 1, v59);
        unsigned int v85 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v61)(v83, 1, v59);
        uint64_t v230 = v60;
        uint64_t v232 = v59;
        uint64_t v226 = v61;
        if (v84)
        {
          if (!v85)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v60 + 32))(v82, v83, v59);
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v60 + 56))(v82, 0, 1, v59);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v85)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v60 + 40))(v82, v83, v59);
LABEL_28:
            uint64_t v87 = v10[18];
            uint64_t v88 = &v8[v87];
            uint64_t v89 = (uint64_t *)&v9[v87];
            uint64_t v91 = *v89;
            uint64_t v90 = v89[1];
            *uint64_t v88 = v91;
            v88[1] = v90;
            swift_bridgeObjectRelease();
            *(void *)&v8[v10[19]] = *(void *)&v9[v10[19]];
            uint64_t v92 = v10[20];
            uint64_t v93 = &v8[v92];
            uint64_t v94 = &v9[v92];
            uint64_t v95 = type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
            __src = *(void **)(v95 - 8);
            unint64_t v96 = (uint64_t (*)(unsigned char *, uint64_t, uint64_t))__src[6];
            uint64_t v97 = (uint64_t)v93;
            int v98 = v96(v93, 1, v95);
            uint64_t v99 = v94;
            uint64_t v225 = (int *)v95;
            int v100 = v96(v94, 1, v95);
            if (v98)
            {
              if (!v100)
              {
                long long v101 = *((_OWORD *)v94 + 1);
                uint64_t v102 = v97;
                *(_OWORD *)uint64_t v97 = *(_OWORD *)v99;
                *(_OWORD *)(v97 + 16) = v101;
                *(_OWORD *)(v97 + 32) = *((_OWORD *)v99 + 2);
                *(_WORD *)(v97 + 48) = *((_WORD *)v99 + 24);
                uint64_t v103 = v99[8];
                *(void *)(v97 + 56) = v99[7];
                *(void *)(v97 + 64) = v103;
                *(unsigned char *)(v97 + 72) = *((unsigned char *)v99 + 72);
                uint64_t v104 = *(int *)(v95 + 40);
                __dst = (void *)(v97 + v104);
                uint64_t v105 = (char *)v99 + v104;
                uint64_t v106 = v232;
                uint64_t v107 = v230;
                if (((unsigned int (*)(char *, uint64_t, uint64_t))v226)((char *)v99 + v104, 1, v232))
                {
                  uint64_t v108 = sub_10000588C(&qword_101649E40);
                  memcpy(__dst, v105, *(void *)(*(void *)(v108 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, char *, uint64_t))(v230 + 32))(__dst, v105, v232);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v230 + 56))(__dst, 0, 1, v232);
                }
                uint64_t v141 = v225[11];
                __dstb = (void *)(v102 + v141);
                os_log_type_t v142 = (char *)v99 + v141;
                if (((unsigned int (*)(char *, uint64_t, uint64_t))v226)((char *)v99 + v141, 1, v232))
                {
                  uint64_t v143 = sub_10000588C(&qword_101649E40);
                  memcpy(__dstb, v142, *(void *)(*(void *)(v143 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, char *, uint64_t))(v230 + 32))(__dstb, v142, v232);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v230 + 56))(__dstb, 0, 1, v232);
                }
                uint64_t v144 = v225[12];
                uint64_t v145 = v102 + v144;
                unint64_t v146 = (char *)v99 + v144;
                *(void *)uint64_t v145 = *(void *)v146;
                *(unsigned char *)(v145 + 8) = v146[8];
                *(_OWORD *)(v102 + v225[13]) = *(_OWORD *)((char *)v99 + v225[13]);
                *(void *)(v102 + v225[14]) = *(void *)((char *)v99 + v225[14]);
                *(_OWORD *)(v102 + v225[15]) = *(_OWORD *)((char *)v99 + v225[15]);
                *(void *)(v102 + v225[16]) = *(void *)((char *)v99 + v225[16]);
                uint64_t v147 = v225[17];
                uint64_t v148 = v102 + v147;
                int v149 = (char *)v99 + v147;
                *(unsigned char *)(v148 + 16) = v149[16];
                *(_OWORD *)uint64_t v148 = *(_OWORD *)v149;
                uint64_t v150 = v225[18];
                uint64_t v151 = v102 + v150;
                os_log_type_t v152 = (char *)v99 + v150;
                *(unsigned char *)(v151 + 16) = v152[16];
                *(_OWORD *)uint64_t v151 = *(_OWORD *)v152;
                ((void (*)(uint64_t, void, uint64_t, int *))__src[7])(v102, 0, 1, v225);
LABEL_52:
                *(_DWORD *)&v8[v10[21]] = *(_DWORD *)&v9[v10[21]];
                *(void *)&v8[v10[22]] = *(void *)&v9[v10[22]];
                swift_bridgeObjectRelease();
                uint64_t v153 = v10[23];
                uint64_t v154 = (uint64_t *)&v8[v153];
                unint64_t v155 = (uint64_t *)&v9[v153];
                unint64_t v156 = *(void *)&v8[v153 + 8];
                if (v156 >> 60 != 15)
                {
                  unint64_t v157 = v155[1];
                  if (v157 >> 60 != 15)
                  {
                    uint64_t v158 = *v154;
                    *uint64_t v154 = *v155;
                    v154[1] = v157;
                    sub_10001CFB8(v158, v156);
LABEL_57:
                    uint64_t v159 = v10[24];
                    uint64_t v160 = (uint64_t *)&v8[v159];
                    uint64_t v161 = (uint64_t *)&v9[v159];
                    unint64_t v162 = *(void *)&v8[v159 + 8];
                    if (v162 >> 60 != 15)
                    {
                      unint64_t v163 = v161[1];
                      if (v163 >> 60 != 15)
                      {
                        uint64_t v164 = *v160;
                        uint64_t *v160 = *v161;
                        v160[1] = v163;
                        sub_10001CFB8(v164, v162);
                        goto LABEL_62;
                      }
                      sub_1001356D0((uint64_t)v160);
                    }
                    *(_OWORD *)uint64_t v160 = *(_OWORD *)v161;
LABEL_62:
                    uint64_t v165 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v107 + 40);
                    v165(&v8[v10[25]], &v9[v10[25]], v106);
                    v165(&v8[v10[26]], &v9[v10[26]], v106);
                    v165(&v8[v10[27]], &v9[v10[27]], v106);
                    v165(&v8[v10[28]], &v9[v10[28]], v106);
                    v165(&v8[v10[29]], &v9[v10[29]], v106);
                    v165(&v8[v10[30]], &v9[v10[30]], v106);
                    uint64_t v166 = v10[31];
                    uint64_t v167 = &v8[v166];
                    uint64_t v168 = (uint64_t *)&v9[v166];
                    uint64_t v170 = *v168;
                    uint64_t v169 = v168[1];
                    *uint64_t v167 = v170;
                    v167[1] = v169;
                    swift_bridgeObjectRelease();
                    *(void *)&v8[v10[32]] = *(void *)&v9[v10[32]];
                    swift_bridgeObjectRelease();
                    uint64_t v171 = v10[33];
                    int v172 = &v8[v171];
                    int v173 = (uint64_t *)&v9[v171];
                    uint64_t v175 = *v173;
                    uint64_t v174 = v173[1];
                    void *v172 = v175;
                    v172[1] = v174;
                    swift_bridgeObjectRelease();
                    *(void *)&v8[v10[34]] = *(void *)&v9[v10[34]];
                    swift_bridgeObjectRelease();
                    uint64_t v176 = v10[35];
                    uint64_t v177 = &v8[v176];
                    uint64_t v178 = &v9[v176];
                    *(_OWORD *)uint64_t v177 = *(_OWORD *)v178;
                    v177[16] = v178[16];
                    uint64_t v179 = v10[36];
                    uint64_t v180 = &v8[v179];
                    uint64_t v181 = &v9[v179];
                    v180[16] = v181[16];
                    *(_OWORD *)uint64_t v180 = *(_OWORD *)v181;
                    v165(&v8[v10[37]], &v9[v10[37]], v106);
                    v165(&v8[v10[38]], &v9[v10[38]], v106);
                    v165(&v8[v10[39]], &v9[v10[39]], v106);
                    v165(&v8[v10[40]], &v9[v10[40]], v106);
                    v165(&v8[v10[41]], &v9[v10[41]], v106);
                    v165(&v8[v10[42]], &v9[v10[42]], v106);
                    v8[v10[43]] = v9[v10[43]];
                    v8[v10[44]] = v9[v10[44]];
                    v8[v10[45]] = v9[v10[45]];
                    uint64_t v182 = v10[46];
                    uint64_t v183 = &v8[v182];
                    uint64_t v184 = (uint64_t *)&v9[v182];
                    uint64_t v186 = *v184;
                    uint64_t v185 = v184[1];
                    *uint64_t v183 = v186;
                    v183[1] = v185;
                    swift_bridgeObjectRelease();
                    uint64_t v187 = v10[47];
                    uint64_t v188 = &v8[v187];
                    uint64_t v189 = (uint64_t *)&v9[v187];
                    uint64_t v191 = *v189;
                    uint64_t v190 = v189[1];
                    *uint64_t v188 = v191;
                    v188[1] = v190;
                    swift_bridgeObjectRelease();
                    return v227;
                  }
                  sub_1001356D0((uint64_t)v154);
                }
                *(_OWORD *)uint64_t v154 = *(_OWORD *)v155;
                goto LABEL_57;
              }
              goto LABEL_34;
            }
            if (v100)
            {
              sub_100864958(v97, type metadata accessor for AccessoryInfoResponseContent.Configuration);
LABEL_34:
              uint64_t v109 = sub_10000588C(&qword_101649E50);
              memcpy((void *)v97, v94, *(void *)(*(void *)(v109 - 8) + 64));
              uint64_t v107 = v230;
LABEL_35:
              uint64_t v106 = v232;
              goto LABEL_52;
            }
            uint64_t v130 = v94[1];
            *(void *)uint64_t v97 = *v94;
            *(void *)(v97 + 8) = v130;
            swift_bridgeObjectRelease();
            uint64_t v131 = v94[3];
            *(void *)(v97 + 16) = v94[2];
            *(void *)(v97 + 24) = v131;
            swift_bridgeObjectRelease();
            uint64_t v132 = v94[5];
            *(void *)(v97 + 32) = v94[4];
            *(void *)(v97 + 40) = v132;
            swift_bridgeObjectRelease();
            *(_WORD *)(v97 + 48) = *((_WORD *)v94 + 24);
            uint64_t v133 = v94[8];
            *(void *)(v97 + 56) = v94[7];
            *(void *)(v97 + 64) = v133;
            *(unsigned char *)(v97 + 72) = *((unsigned char *)v94 + 72);
            uint64_t v134 = *(int *)(v95 + 40);
            unint64_t v135 = (char *)v94 + v134;
            __dsta = (void *)(v97 + v134);
            int v136 = v226();
            unsigned int v137 = ((uint64_t (*)(char *, uint64_t, uint64_t))v226)(v135, 1, v232);
            if (v136)
            {
              uint64_t v107 = v230;
              if (v137)
              {
                uint64_t v138 = sub_10000588C(&qword_101649E40);
                memcpy(__dsta, v135, *(void *)(*(void *)(v138 - 8) + 64));
                uint64_t v139 = v226;
                uint64_t v140 = v232;
                goto LABEL_69;
              }
              uint64_t v140 = v232;
              (*(void (**)(void *, char *, uint64_t))(v230 + 32))(__dsta, v135, v232);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v230 + 56))(__dsta, 0, 1, v232);
            }
            else
            {
              uint64_t v107 = v230;
              uint64_t v140 = v232;
              if (v137)
              {
                (*(void (**)(void *, uint64_t))(v230 + 8))(__dsta, v232);
                uint64_t v193 = sub_10000588C(&qword_101649E40);
                memcpy(__dsta, v135, *(void *)(*(void *)(v193 - 8) + 64));
              }
              else
              {
                (*(void (**)(void *, char *, uint64_t))(v230 + 40))(__dsta, v135, v232);
              }
            }
            uint64_t v139 = v226;
LABEL_69:
            uint64_t v194 = v225[11];
            uint64_t v195 = (char *)v99 + v194;
            __srca = (void *)(v97 + v194);
            int v218 = v139();
            int v196 = ((uint64_t (*)(char *, uint64_t, uint64_t))v139)(v195, 1, v140);
            if (v218)
            {
              if (!v196)
              {
                (*(void (**)(void *, char *, uint64_t))(v107 + 32))(__srca, v195, v232);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v107 + 56))(__srca, 0, 1, v232);
                goto LABEL_77;
              }
              size_t v197 = *(void *)(*(void *)(sub_10000588C(&qword_101649E40) - 8) + 64);
              uint64_t v198 = __srca;
            }
            else
            {
              if (!v196)
              {
                (*(void (**)(void *, char *, uint64_t))(v107 + 40))(__srca, v195, v232);
                goto LABEL_77;
              }
              (*(void (**)(void *, uint64_t))(v107 + 8))(__srca, v232);
              size_t v197 = *(void *)(*(void *)(sub_10000588C(&qword_101649E40) - 8) + 64);
              uint64_t v198 = __srca;
            }
            memcpy(v198, v195, v197);
LABEL_77:
            uint64_t v199 = v225[12];
            uint64_t v200 = v97 + v199;
            uint64_t v201 = (char *)v99 + v199;
            *(void *)uint64_t v200 = *(void *)v201;
            *(unsigned char *)(v200 + 8) = v201[8];
            uint64_t v202 = v225[13];
            int v203 = (void *)(v97 + v202);
            uint64_t v204 = (void *)((char *)v99 + v202);
            uint64_t v206 = *v204;
            uint64_t v205 = v204[1];
            *int v203 = v206;
            v203[1] = v205;
            swift_bridgeObjectRelease();
            *(void *)(v97 + v225[14]) = *(void *)((char *)v99 + v225[14]);
            swift_bridgeObjectRelease();
            uint64_t v207 = v225[15];
            uint64_t v208 = (void *)(v97 + v207);
            uint64_t v209 = (void *)((char *)v99 + v207);
            uint64_t v211 = *v209;
            uint64_t v210 = v209[1];
            *uint64_t v208 = v211;
            v208[1] = v210;
            swift_bridgeObjectRelease();
            *(void *)(v97 + v225[16]) = *(void *)((char *)v99 + v225[16]);
            swift_bridgeObjectRelease();
            uint64_t v212 = v225[17];
            uint64_t v213 = v97 + v212;
            uint64_t v214 = (char *)v99 + v212;
            *(_OWORD *)uint64_t v213 = *(_OWORD *)v214;
            *(unsigned char *)(v213 + 16) = v214[16];
            uint64_t v215 = v225[18];
            uint64_t v216 = v97 + v215;
            uint64_t v217 = (char *)v99 + v215;
            *(unsigned char *)(v216 + 16) = v217[16];
            *(_OWORD *)uint64_t v216 = *(_OWORD *)v217;
            goto LABEL_35;
          }
          (*(void (**)(unsigned char *, uint64_t))(v60 + 8))(v82, v59);
        }
        uint64_t v86 = sub_10000588C(&qword_101649E40);
        memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(unsigned char *, uint64_t))(v60 + 8))(v57, v59);
    }
    uint64_t v80 = sub_10000588C(&qword_101649E40);
    memcpy(v57, v58, *(void *)(*(void *)(v80 - 8) + 64));
    goto LABEL_22;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v28 = sub_10000588C((uint64_t *)&unk_10166BFA0);
    memcpy(v8, v9, *(void *)(*(void *)(v28 - 8) + 64));
    return v5;
  }
  *(void *)uint64_t v8 = *(void *)v9;
  v8[8] = v9[8];
  uint64_t v15 = v10[5];
  uint64_t v16 = &v8[v15];
  uint64_t v17 = &v9[v15];
  uint64_t v18 = type metadata accessor for ServerStatusCode();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  v8[v10[6]] = v9[v10[6]];
  v8[v10[7]] = v9[v10[7]];
  *(_OWORD *)&v8[v10[8]] = *(_OWORD *)&v9[v10[8]];
  v8[v10[9]] = v9[v10[9]];
  v8[v10[10]] = v9[v10[10]];
  v8[v10[11]] = v9[v10[11]];
  *(_OWORD *)&v8[v10[12]] = *(_OWORD *)&v9[v10[12]];
  *(_OWORD *)&v8[v10[13]] = *(_OWORD *)&v9[v10[13]];
  uint64_t v19 = v10[14];
  uint64_t v20 = &v8[v19];
  uint64_t v21 = &v9[v19];
  v20[8] = v21[8];
  *(void *)uint64_t v20 = *(void *)v21;
  *(_OWORD *)&v8[v10[15]] = *(_OWORD *)&v9[v10[15]];
  uint64_t v22 = v10[16];
  uint64_t v23 = &v8[v22];
  uint64_t v24 = &v9[v22];
  uint64_t v25 = type metadata accessor for URL();
  uint64_t v26 = *(void *)(v25 - 8);
  unint64_t v231 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v26 + 48);
  if (v231(v24, 1, v25))
  {
    uint64_t v27 = sub_10000588C(&qword_101649E40);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  uint64_t v64 = v10[17];
  uint64_t v65 = &v8[v64];
  uint64_t v66 = &v9[v64];
  uint64_t v229 = v11;
  if (v231(&v9[v64], 1, v25))
  {
    uint64_t v67 = sub_10000588C(&qword_101649E40);
    memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v26 + 32))(v65, v66, v25);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v26 + 56))(v65, 0, 1, v25);
  }
  *(_OWORD *)&v8[v10[18]] = *(_OWORD *)&v9[v10[18]];
  *(void *)&v8[v10[19]] = *(void *)&v9[v10[19]];
  uint64_t v68 = v10[20];
  uint64_t v69 = &v8[v68];
  uint64_t v70 = &v9[v68];
  uint64_t v71 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
  uint64_t v72 = *((void *)v71 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v72 + 48))(v70, 1, v71))
  {
    uint64_t v73 = sub_10000588C(&qword_101649E50);
    memcpy(v69, v70, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    uint64_t v224 = v72;
    uint64_t v228 = v5;
    long long v74 = v70[1];
    *uint64_t v69 = *v70;
    v69[1] = v74;
    v69[2] = v70[2];
    *((_WORD *)v69 + 24) = *((_WORD *)v70 + 24);
    uint64_t v75 = *((void *)v70 + 8);
    *((void *)v69 + 7) = *((void *)v70 + 7);
    *((void *)v69 + 8) = v75;
    *((unsigned char *)v69 + 72) = *((unsigned char *)v70 + 72);
    uint64_t v76 = v71[10];
    uint64_t v77 = (char *)v69 + v76;
    uint64_t v78 = (char *)v70 + v76;
    if (v231((unsigned char *)v70 + v76, 1, v25))
    {
      uint64_t v79 = sub_10000588C(&qword_101649E40);
      memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v77, v78, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v77, 0, 1, v25);
    }
    uint64_t v110 = v71[11];
    long long v111 = (char *)v69 + v110;
    uint64_t v112 = (char *)v70 + v110;
    if (v231((unsigned char *)v70 + v110, 1, v25))
    {
      uint64_t v113 = sub_10000588C(&qword_101649E40);
      memcpy(v111, v112, *(void *)(*(void *)(v113 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v111, v112, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v111, 0, 1, v25);
    }
    uint64_t v114 = v71[12];
    uint64_t v115 = (char *)v69 + v114;
    unint64_t v116 = (char *)v70 + v114;
    *(void *)uint64_t v115 = *(void *)v116;
    v115[8] = v116[8];
    *(_OWORD *)((char *)v69 + v71[13]) = *(_OWORD *)((char *)v70 + v71[13]);
    *(void *)((char *)v69 + v71[14]) = *(void *)((char *)v70 + v71[14]);
    *(_OWORD *)((char *)v69 + v71[15]) = *(_OWORD *)((char *)v70 + v71[15]);
    *(void *)((char *)v69 + v71[16]) = *(void *)((char *)v70 + v71[16]);
    uint64_t v117 = v71[17];
    uint64_t v118 = (char *)v69 + v117;
    uint64_t v119 = (char *)v70 + v117;
    v118[16] = v119[16];
    *(_OWORD *)uint64_t v118 = *(_OWORD *)v119;
    uint64_t v120 = v71[18];
    unint64_t v121 = (char *)v69 + v120;
    uint64_t v122 = (char *)v70 + v120;
    v121[16] = v122[16];
    *(_OWORD *)unint64_t v121 = *(_OWORD *)v122;
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v224 + 56))(v69, 0, 1, v71);
    uint64_t v5 = v228;
  }
  *(_DWORD *)&v8[v10[21]] = *(_DWORD *)&v9[v10[21]];
  *(void *)&v8[v10[22]] = *(void *)&v9[v10[22]];
  *(_OWORD *)&v8[v10[23]] = *(_OWORD *)&v9[v10[23]];
  *(_OWORD *)&v8[v10[24]] = *(_OWORD *)&v9[v10[24]];
  uint64_t v123 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v26 + 32);
  v123(&v8[v10[25]], &v9[v10[25]], v25);
  v123(&v8[v10[26]], &v9[v10[26]], v25);
  v123(&v8[v10[27]], &v9[v10[27]], v25);
  v123(&v8[v10[28]], &v9[v10[28]], v25);
  v123(&v8[v10[29]], &v9[v10[29]], v25);
  v123(&v8[v10[30]], &v9[v10[30]], v25);
  *(_OWORD *)&v8[v10[31]] = *(_OWORD *)&v9[v10[31]];
  *(void *)&v8[v10[32]] = *(void *)&v9[v10[32]];
  *(_OWORD *)&v8[v10[33]] = *(_OWORD *)&v9[v10[33]];
  *(void *)&v8[v10[34]] = *(void *)&v9[v10[34]];
  uint64_t v124 = v10[35];
  uint64_t v125 = &v8[v124];
  uint64_t v126 = &v9[v124];
  v125[16] = v126[16];
  *(_OWORD *)uint64_t v125 = *(_OWORD *)v126;
  uint64_t v127 = v10[36];
  uint64_t v128 = &v8[v127];
  uint64_t v129 = &v9[v127];
  v128[16] = v129[16];
  *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
  v123(&v8[v10[37]], &v9[v10[37]], v25);
  v123(&v8[v10[38]], &v9[v10[38]], v25);
  v123(&v8[v10[39]], &v9[v10[39]], v25);
  v123(&v8[v10[40]], &v9[v10[40]], v25);
  v123(&v8[v10[41]], &v9[v10[41]], v25);
  v123(&v8[v10[42]], &v9[v10[42]], v25);
  v8[v10[43]] = v9[v10[43]];
  v8[v10[44]] = v9[v10[44]];
  v8[v10[45]] = v9[v10[45]];
  *(_OWORD *)&v8[v10[46]] = *(_OWORD *)&v9[v10[46]];
  *(_OWORD *)&v8[v10[47]] = *(_OWORD *)&v9[v10[47]];
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v229 + 56))(v8, 0, 1, v10);
  return v5;
}

uint64_t sub_10086684C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100866860);
}

uint64_t sub_100866860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_10000588C((uint64_t *)&unk_10166BFA0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 28);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_100866920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100866934);
}

uint64_t sub_100866934(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_10000588C((uint64_t *)&unk_10166BFA0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for PairingConfig()
{
  uint64_t result = qword_10164F670;
  if (!qword_10164F670) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100866A2C()
{
  sub_100866AD4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100866AD4()
{
  if (!qword_10163DD70)
  {
    type metadata accessor for AccessoryProductInfo();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10163DD70);
    }
  }
}

uint64_t sub_100866B2C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10170E400);
  sub_100010324(v0, (uint64_t)qword_10170E400);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100866BB0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10170E418);
  uint64_t v1 = sub_100010324(v0, (uint64_t)qword_10170E418);
  if (qword_101636D18 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100010324(v0, (uint64_t)qword_10170E400);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100866C78(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  __chkstk_darwin(v3 - 8);
  swift_defaultActor_initialize();
  *(void *)(v1 + 112) = 0xD000000000000013;
  *(void *)(v1 + 120) = 0x800000010136B4B0;
  uint64_t v4 = v1 + OBJC_IVAR____TtC12searchpartyd19FinderStateObserver__stateInfoCache;
  uint64_t v5 = type metadata accessor for FinderStateInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(void *)(v1 + OBJC_IVAR____TtC12searchpartyd19FinderStateObserver_notificationListener) = 0;
  uint64_t v6 = OBJC_IVAR____TtC12searchpartyd19FinderStateObserver_workItemQueue;
  type metadata accessor for WorkItemQueue();
  UUID.init()();
  *(void *)(v1 + v6) = WorkItemQueue.__allocating_init(name:identifier:)();
  uint64_t v7 = OBJC_IVAR____TtC12searchpartyd19FinderStateObserver_finderStreamStateProvider;
  sub_10000588C(&qword_10164F8C8);
  swift_allocObject();
  *(void *)(v1 + v7) = AsyncStreamProvider.init()();
  *(void *)(v1 + OBJC_IVAR____TtC12searchpartyd19FinderStateObserver_finderStateManager) = a1;
  return v1;
}

uint64_t sub_100866DEC()
{
  v1[10] = v0;
  v1[11] = *v0;
  type metadata accessor for UUID();
  v1[12] = swift_task_alloc();
  return _swift_task_switch(sub_100866EA4, v0, 0);
}

uint64_t sub_100866EA4()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[10];
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  sub_10000588C((uint64_t *)&unk_10163EAB8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101342130;
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1008692C0;
  *(void *)(v8 + 24) = v3;
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  *(void *)(inited + 48) = sub_1001DF664;
  *(void *)(inited + 56) = v8;
  swift_retain();
  sub_10092E16C(inited);
  type metadata accessor for DarwinNotificationHelper();
  swift_allocObject();
  *(void *)(v2 + OBJC_IVAR____TtC12searchpartyd19FinderStateObserver_notificationListener) = DarwinNotificationHelper.init(notificationHandlers:)();
  swift_release();
  type metadata accessor for WorkItemQueue.WorkItem();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v2;
  *(void *)(v9 + 24) = v1;
  swift_retain();
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1008670C0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100867BD4();
    return swift_release();
  }
  return result;
}

uint64_t sub_100867118(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  void v2[4] = sub_10000588C(&qword_101639058);
  v2[5] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for FinderStateInfo(0);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  return _swift_task_switch(sub_10086720C, v1, 0);
}

uint64_t sub_10086720C()
{
  uint64_t v1 = v0[3];
  unint64_t v2 = sub_100868AFC();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[9] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1008672EC;
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = v0[3];
  return withCheckedContinuation<A>(isolation:function:_:)(v4, v1, v2, 0x6E4965746174735FLL, 0xEC00000029286F66, sub_100033DD4, v6, v5);
}

uint64_t sub_1008672EC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  return _swift_task_switch(sub_1008673FC, v1, 0);
}

uint64_t sub_1008673FC()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[5];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v1 + 48))(v2, 1, v0[6]) == 1)
  {
    sub_10001DAB4(v2, &qword_101639058);
  }
  else
  {
    uint64_t v3 = v0[8];
    sub_10002FD2C(v2, v3);
    sub_10000588C(&qword_10164F888);
    uint64_t v4 = (int *)(sub_10000588C(&qword_101639088) - 8);
    unint64_t v5 = (*(unsigned __int8 *)(*(void *)v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v4 + 80);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_101342130;
    uint64_t v7 = v6 + v5 + v4[14];
    (*(void (**)(void))(v1 + 56))();
    sub_10002FD2C(v3, v7);
  }
  AsyncStreamProvider.stream(initialEvents:)();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1008675B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_10164F890);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  unint64_t v12 = sub_100868AFC();
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  int v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = a2;
  *((void *)v14 + 3) = v12;
  *((void *)v14 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v14[v13], v7, v4);
  swift_retain_n();
  sub_1008F5E44((uint64_t)v10, (uint64_t)&unk_10164F8A0, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_10086779C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for UUID();
  v5[4] = swift_task_alloc();
  uint64_t v7 = sub_10000588C(&qword_10164F890);
  v5[5] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[6] = v8;
  v5[7] = *(void *)(v8 + 64);
  v5[8] = swift_task_alloc();
  return _swift_task_switch(sub_100867898, a4, 0);
}

uint64_t sub_100867898()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[2];
  type metadata accessor for WorkItemQueue.WorkItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v5, v3);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  *(void *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v6;
  swift_retain();
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100867A28(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  sub_10000588C(&qword_101639058);
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_100867AC0, a2, 0);
}

uint64_t sub_100867AC0()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 48) + OBJC_IVAR____TtC12searchpartyd19FinderStateObserver__stateInfoCache;
  swift_beginAccess();
  sub_100868D50(v2, v1);
  return _swift_task_switch(sub_100867B50, 0, 0);
}

uint64_t sub_100867B50()
{
  sub_10000588C(&qword_10164F890);
  CheckedContinuation.resume(returning:)();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100867BD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  unint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_10001DAB4((uint64_t)v4, &qword_10164DBB0);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_10164F868;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_100867E18(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v4[2] = a4;
  v4[3] = *a4;
  type metadata accessor for UUID();
  v4[4] = swift_task_alloc();
  return _swift_task_switch(sub_100867ED4, a4, 0);
}

uint64_t sub_100867ED4()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[2];
  type metadata accessor for WorkItemQueue.WorkItem();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100867FF0(uint64_t a1)
{
  v1[9] = a1;
  v1[10] = sub_10000588C(&qword_101639088);
  v1[11] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for FinderStateInfo(0);
  v1[12] = v3;
  v1[13] = *(void *)(v3 - 8);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  sub_10000588C(&qword_101639058);
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  return _swift_task_switch(sub_100868150, a1, 0);
}

uint64_t sub_100868150()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[9];
  uint64_t v3 = OBJC_IVAR____TtC12searchpartyd19FinderStateObserver__stateInfoCache;
  v0[20] = OBJC_IVAR____TtC12searchpartyd19FinderStateObserver__stateInfoCache;
  uint64_t v4 = v2 + v3;
  swift_beginAccess();
  sub_100868D50(v4, v1);
  v0[21] = *(void *)(v2 + OBJC_IVAR____TtC12searchpartyd19FinderStateObserver_finderStateManager);
  swift_retain();
  return _swift_task_switch(sub_100868208, 0, 0);
}

uint64_t sub_100868208()
{
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[22] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008682C8;
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[12];
  return unsafeBlocking<A>(_:)(v3, sub_100868DB8, v2, v4);
}

uint64_t sub_1008682C8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1008683F4, v1, 0);
}

uint64_t sub_1008683F4()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[9] + v0[20];
  sub_100868E20(v0[15], v1);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  sub_1006F1008(v1, v2);
  swift_beginAccess();
  sub_100868E84(v2, v5);
  swift_endAccess();
  return _swift_task_switch(sub_1008684DC, 0, 0);
}

uint64_t sub_1008684DC()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  sub_100868D50(*(void *)(v0 + 152), v1);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v5 = *(unsigned __int8 **)(v0 + 128);
  if (v4 == 1)
  {
    sub_10001DAB4((uint64_t)v5, &qword_101639058);
    unint64_t v6 = 0xE300000000000000;
    uint64_t v7 = 7104878;
  }
  else
  {
    int v8 = *v5;
    sub_10002FD90((uint64_t)v5);
    if (v8) {
      uint64_t v7 = 1702195828;
    }
    else {
      uint64_t v7 = 0x65736C6166;
    }
    if (v8) {
      unint64_t v6 = 0xE400000000000000;
    }
    else {
      unint64_t v6 = 0xE500000000000000;
    }
  }
  if (qword_101636D20 != -1) {
    swift_once();
  }
  uint64_t v10 = *(void *)(v0 + 112);
  uint64_t v9 = *(void *)(v0 + 120);
  uint64_t v11 = type metadata accessor for Logger();
  sub_100010324(v11, (uint64_t)qword_10170E418);
  sub_100868E20(v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v15 = *(unsigned __int8 **)(v0 + 112);
  if (v14)
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446466;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 64) = sub_1008FA0F0(v7, v6, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 1024;
    int v17 = *v15;
    sub_10002FD90((uint64_t)v15);
    *(_DWORD *)(v0 + 184) = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Refreshed finder state info. Old: %{public}s, new: %{BOOL}d.", (uint8_t *)v16, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10002FD90(*(void *)(v0 + 112));
    swift_bridgeObjectRelease_n();
  }

  uint64_t v18 = *(void *)(v0 + 152);
  uint64_t v19 = *(void *)(v0 + 120);
  uint64_t v20 = *(void *)(v0 + 88);
  uint64_t v21 = v20 + *(int *)(*(void *)(v0 + 80) + 48);
  sub_100868D50(v18, v20);
  sub_100868E20(v19, v21);
  AsyncStreamProvider.yield(value:transaction:)();
  swift_release();
  sub_10001DAB4(v20, &qword_101639088);
  sub_10002FD90(v19);
  sub_10001DAB4(v18, &qword_101639058);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_10086884C()
{
  swift_bridgeObjectRelease();
  sub_10001DAB4(v0 + OBJC_IVAR____TtC12searchpartyd19FinderStateObserver__stateInfoCache, &qword_101639058);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_1008688DC()
{
  return type metadata accessor for FinderStateObserver();
}

uint64_t type metadata accessor for FinderStateObserver()
{
  uint64_t result = qword_10164F700;
  if (!qword_10164F700) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100868930()
{
  sub_1008689F0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1008689F0()
{
  if (!qword_10164F720)
  {
    type metadata accessor for FinderStateInfo(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10164F720);
    }
  }
}

uint64_t sub_100868A48()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100033F68;
  return sub_100866DEC();
}

unint64_t sub_100868AD4(uint64_t a1)
{
  unint64_t result = sub_100868AFC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100868AFC()
{
  unint64_t result = qword_1016394B0;
  if (!qword_1016394B0)
  {
    type metadata accessor for FinderStateObserver();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016394B0);
  }
  return result;
}

uint64_t sub_100868B54()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100868B94(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  unint64_t v6 = (void *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10001D2E4;
  return sub_100867E18(a1, v4, v5, v6);
}

uint64_t sub_100868C48()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100868C80()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100868CB8()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100033F68;
  return sub_100867FF0(v2);
}

uint64_t sub_100868D50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_101639058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100868DB8()
{
  return OS_dispatch_queue.sync<A>(execute:)();
}

uint64_t sub_100868E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FinderStateInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100868E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_101639058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100868EEC@<X0>(unsigned char *a1@<X8>)
{
  return sub_100277570(v1, a1);
}

uint64_t sub_100868F08()
{
  uint64_t v1 = sub_10000588C(&qword_10164F890);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100868FE0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000588C(&qword_10164F890) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100033F68;
  return sub_10086779C(a1, v5, v6, v7, v8);
}

uint64_t sub_1008690E0()
{
  uint64_t v1 = sub_10000588C(&qword_10164F890);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100869188()
{
  uint64_t v2 = *(void *)(sub_10000588C(&qword_10164F890) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *unint64_t v6 = v1;
  v6[1] = sub_100033F68;
  return sub_100867A28(v4, v5);
}

uint64_t sub_100869288()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1008692C0()
{
  return sub_1008670C0();
}

uint64_t sub_1008692C8()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_10001D2E4;
  return sub_100867FF0(v2);
}

uint64_t sub_100869368()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10170E430);
  uint64_t v1 = sub_100010324(v0, (uint64_t)qword_10170E430);
  if (qword_101636D38 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100010324(v0, (uint64_t)qword_10170E448);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100869430()
{
  v1[2] = v0;
  v1[3] = *v0;
  sub_10000588C(&qword_10164DBB0);
  v1[4] = swift_task_alloc();
  type metadata accessor for URL();
  v1[5] = swift_task_alloc();
  uint64_t v2 = swift_task_alloc();
  v1[6] = v2;
  swift_defaultActor_initialize();
  v0[14] = 0xD000000000000013;
  v0[15] = 0x800000010136B590;
  sub_100869D7C(v2);
  type metadata accessor for CloudStorageDatabase();
  swift_allocObject();
  unint64_t v3 = (void *)swift_task_alloc();
  v1[7] = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_1008695B4;
  return sub_100715C6C(v2, 0);
}

uint64_t sub_1008695B4(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for CloudStorageService();
    swift_defaultActor_destroy();
    swift_deallocPartialClassInstance();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    type metadata accessor for CloudStorageStore(0);
    uint64_t v8 = swift_allocObject();
    *(void *)(v4 + 64) = v8;
    swift_defaultActor_initialize();
    strcpy((char *)(v8 + 120), "CloudStorage");
    *(unsigned char *)(v8 + 133) = 0;
    *(_WORD *)(v8 + 134) = -5120;
    type metadata accessor for CloudStorageStore.State(0);
    swift_storeEnumTagMultiPayload();
    *(void *)(v8 + OBJC_IVAR____TtC12searchpartyd17CloudStorageStore_stateContinuations) = _swiftEmptyDictionarySingleton;
    *(void *)(v8 + 112) = a1;
    return _swift_task_switch(sub_1008697D0, v8, 0);
  }
}

uint64_t sub_1008697D0()
{
  uint64_t v1 = v0[2];
  *(void *)(v1 + 128) = v0[8];
  id v2 = [self mainBundle];
  id v3 = [v2 bundleIdentifier];

  if (v3)
  {
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v5;
  }
  else
  {
    unint64_t v6 = 0x80000001013F1C90;
    uint64_t v4 = 0xD00000000000001DLL;
  }
  uint64_t v7 = v0[5];
  type metadata accessor for CloudKitStorage();
  sub_100869D7C(v7);
  uint64_t v8 = *(void *)(v1 + 128);
  uint64_t v9 = sub_10086BE9C(&qword_10164FA30, 255, (void (*)(uint64_t))type metadata accessor for CloudStorageStore);
  sub_10000588C(&qword_10164FA38);
  uint64_t v10 = type metadata accessor for CloudKitCoordinator.Database();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_101342130;
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v13 + v12, enum case for CloudKitCoordinator.Database.private(_:), v10);
  swift_retain();
  BOOL v14 = (void *)swift_task_alloc();
  v0[9] = v14;
  *BOOL v14 = v0;
  v14[1] = sub_100869A60;
  uint64_t v15 = v0[5];
  return CloudKitStorage.__allocating_init(containerURL:containerIdentifier:bundleIdentifier:dataStore:databases:containerEnvironment:)(v15, 0xD00000000000001ELL, 0x8000000101408F50, v4, v6, v8, v9, v13);
}

uint64_t sub_100869A60(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  uint64_t v6 = *(void *)(v4 + 16);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    type metadata accessor for CloudStorageService();
    swift_defaultActor_destroy();
    swift_deallocPartialClassInstance();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
    return v7();
  }
  else
  {
    *(void *)(v6 + 136) = a1;
    return _swift_task_switch(sub_100869C20, v6, 0);
  }
}

uint64_t sub_100869C20()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  uint64_t v5 = sub_10086BE9C(&qword_10164FA20, v4, (void (*)(uint64_t))type metadata accessor for CloudStorageService);
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = v2;
  v6[3] = v5;
  v6[4] = v2;
  swift_retain_n();
  sub_100885EBC(v1, (uint64_t)&unk_10164FA48, (uint64_t)v6);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v8 = v0[2];
  return v7(v8);
}

uint64_t sub_100869D7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10000588C(&qword_101649E40);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v29[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v29[-v10];
  if (qword_1016371D8 != -1) {
    swift_once();
  }
  uint64_t v31 = 0x7365547265646E75;
  unint64_t v32 = 0xE900000000000074;
  SynchronousCache.cachedValue<A>(key:computeBlock:)();
  swift_bridgeObjectRelease();
  if (v30)
  {
    id v12 = [objc_allocWithZone((Class)NSProcessInfo) init];
    unsigned int v13 = [v12 processIdentifier];

    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    _StringGuts.grow(_:)(31);
    BOOL v14 = NSTemporaryDirectory();
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();

    uint64_t v31 = v15;
    unint64_t v32 = v17;
    v18._countAndFlagsBits = 0x2D7473657463782FLL;
    v18._object = (void *)0xE800000000000000;
    String.append(_:)(v18);
    unsigned int v30 = v13;
    v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    v20._object = (void *)0x8000000101409010;
    v20._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v20);
    if (qword_101636D30 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for UUID();
    sub_100010324(v21, (uint64_t)qword_10164F8D0);
    sub_10086BE9C((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    v22._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    URL.init(fileURLWithPath:isDirectory:)();
    return swift_bridgeObjectRelease();
  }
  else
  {
    id v24 = [self defaultManager];
    uint64_t v25 = 1;
    id v26 = [v24 URLsForDirectory:5 inDomains:1];

    uint64_t v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    if (*(void *)(v27 + 16))
    {
      (*(void (**)(unsigned char *, unint64_t, uint64_t))(v6 + 16))(v4, v27 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5);
      uint64_t v25 = 0;
    }
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v25, 1, v5);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_100020198((uint64_t)v4);
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
    else
    {
      uint64_t v28 = *(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32);
      v28((uint64_t)v11, v4, v5);
      URL.appendingPathComponent(_:isDirectory:)();
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
      return v28(a1, v9, v5);
    }
  }
  return result;
}

uint64_t sub_10086A294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 120) = a4;
  return _swift_task_switch(sub_10086A2B4, a4, 0);
}

uint64_t sub_10086A2B4()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_1000977C4((uint64_t)&xmmword_10166E8F0, v0 + 56);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_101639288 + dword_101639288);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10086A3E8;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10086A3E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 120);
  *(void *)(*(void *)v1 + 136) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10086A500, v2, 0);
}

uint64_t sub_10086A500()
{
  uint64_t v1 = (uint64_t)(v0 + 2);
  if (v0[17])
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[18] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10086A620;
    return sub_100611988();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    sub_10001CEC8();
    swift_allocError();
    *uint64_t v4 = 0xD000000000000012;
    v4[1] = 0x8000000101401DC0;
    swift_willThrow();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_10086A620()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 120);
  swift_task_dealloc();
  return _swift_task_switch(sub_10086A730, v1, 0);
}

uint64_t sub_10086A730()
{
  uint64_t v3 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of CloudKitStorage.startup()
                         + async function pointer to dispatch thunk of CloudKitStorage.startup());
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10086A7D8;
  return v3();
}

uint64_t sub_10086A7D8()
{
  uint64_t v2 = (void *)*v1;
  v2[20] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[15];
    uint64_t v4 = sub_10086AAC8;
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v2[21] = v5;
    void *v5 = v2;
    v5[1] = sub_10086A938;
    uint64_t v3 = v2[15];
    v5[2] = v3;
    uint64_t v4 = sub_10086ABB0;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10086A938()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 120);
  if (v0) {
    uint64_t v4 = sub_10086AB2C;
  }
  else {
    uint64_t v4 = sub_10086AA64;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10086AA64()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10086AAC8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10086AB2C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10086AB90()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_10086ABB0, v0, 0);
}

uint64_t sub_10086ABB0()
{
  id v1 = [self sharedInstance];
  unsigned int v2 = [v1 isInternalBuild];

  if (v2
    && (uint64_t v3 = self,
        v0[3] = v3,
        id v4 = [v3 standardUserDefaults],
        NSString v5 = String._bridgeToObjectiveC()(),
        unsigned __int8 v6 = [v4 BOOLForKey:v5],
        v5,
        v4,
        (v6 & 1) == 0))
  {
    if (qword_101636D28 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    v0[4] = sub_100010324(v9, (uint64_t)qword_10170E430);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      id v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Performing one time DB reset migration to Production.", v12, 2u);
      swift_slowDealloc();
    }

    swift_retain();
    unsigned int v13 = (void *)swift_task_alloc();
    v0[5] = v13;
    *unsigned int v13 = v0;
    v13[1] = sub_10086AE24;
    uint64_t v14 = v0[2];
    return withTimeout<A>(_:block:)(v13, 0x8155A43676E00000, 6, &unk_10164FA60, v14, (char *)&type metadata for () + 8);
  }
  else
  {
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_10086AE24()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 48) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v0)
  {
    id v4 = sub_10086B41C;
  }
  else
  {
    swift_release();
    id v4 = sub_10086AF5C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10086AF5C()
{
  v0[7] = *(void *)(v0[2] + 136);
  uint64_t v3 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of CloudKitStorage.reset()
                         + async function pointer to dispatch thunk of CloudKitStorage.reset());
  id v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *id v1 = v0;
  v1[1] = sub_10086B008;
  return v3();
}

uint64_t sub_10086B008()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v7 = (uint64_t (*)(unint64_t, unint64_t))((char *)&async function pointer to dispatch thunk of CloudKitStorage.create(zoneName:)
                                                                    + async function pointer to dispatch thunk of CloudKitStorage.create(zoneName:));
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v2 + 72) = v6;
    *uint64_t v6 = v3;
    v6[1] = sub_10086B1A4;
    return v7(0xD000000000000016, 0x80000001013F36F0);
  }
}

uint64_t sub_10086B1A4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 16);
    return _swift_task_switch(sub_10086B2E8, v6, 0);
  }
}

uint64_t sub_10086B2E8()
{
  id v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Finished one time DB reset migration to Production.", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = *(void **)(v0 + 24);

  id v5 = [v4 standardUserDefaults];
  NSString v6 = String._bridgeToObjectiveC()();
  [v5 setBool:1 forKey:v6];

  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10086B41C()
{
  swift_release();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10086B480()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_10086B4A0, v0, 0);
}

uint64_t sub_10086B4A0()
{
  uint64_t v3 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of CloudKitStorage.isManateeAvailable()
                         + async function pointer to dispatch thunk of CloudKitStorage.isManateeAvailable());
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10086B548;
  return v3();
}

uint64_t sub_10086B548(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  *(unsigned char *)(*(void *)v1 + 36) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10086B660, v2, 0);
}

uint64_t sub_10086B660()
{
  if (qword_101636D28 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170E430);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 36);
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v5 = 67240192;
    *(_DWORD *)(v0 + 32) = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Current isManateeAvailable: %{BOOL,public}d", v5, 8u);
    swift_slowDealloc();
  }

  NSString v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v7 = *(unsigned __int8 *)(v0 + 36);
  return v6(v7);
}

uint64_t sub_10086B7B8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for CloudStorageService()
{
  return self;
}

uint64_t sub_10086B824(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10086BE9C(&qword_10164FA20, a2, (void (*)(uint64_t))type metadata accessor for CloudStorageService);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10086B87C(uint64_t a1, uint64_t a2)
{
  v2[2] = a2;
  uint64_t v3 = type metadata accessor for CloudKitStorage.State();
  v2[3] = v3;
  void v2[4] = *(void *)(v3 - 8);
  v2[5] = swift_task_alloc();
  return _swift_task_switch(sub_10086B93C, 0, 0);
}

uint64_t sub_10086B93C()
{
  uint64_t v1 = v0[2];
  (*(void (**)(void, void, void))(v0[4] + 104))(v0[5], enum case for CloudKitStorage.State.available(_:), v0[3]);
  return _swift_task_switch(sub_10086B9C0, v1, 0);
}

uint64_t sub_10086B9C0()
{
  int v4 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CloudKitStorage.await(state:)
                                       + async function pointer to dispatch thunk of CloudKitStorage.await(state:));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10086BA70;
  uint64_t v2 = *(void *)(v0 + 40);
  return v4(v2);
}

uint64_t sub_10086BA70()
{
  uint64_t v2 = (void *)*v1;
  v2[7] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[2];
    return _swift_task_switch(sub_10086BBCC, v3, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2[4] + 8))(v2[5], v2[3]);
    swift_task_dealloc();
    int v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_10086BBCC()
{
  (*(void (**)(void, void))(v0[4] + 8))(v0[5], v0[3]);
  return _swift_task_switch(sub_100313080, 0, 0);
}

uint64_t sub_10086BC44()
{
  uint64_t v0 = type metadata accessor for UUID();
  sub_10001E384(v0, qword_10164F8D0);
  sub_100010324(v0, (uint64_t)qword_10164F8D0);
  return UUID.init()();
}

uint64_t sub_10086BC90()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10170E448);
  sub_100010324(v0, (uint64_t)qword_10170E448);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_10086BD14()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10086BD54()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100033F68;
  v3[15] = v2;
  return _swift_task_switch(sub_10086A2B4, v2, 0);
}

uint64_t sub_10086BE00(uint64_t a1)
{
  int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *int v4 = v2;
  v4[1] = sub_10001D2E4;
  return sub_10086B87C(a1, v1);
}

uint64_t sub_10086BE9C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10086BEE4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10164FA68);
  uint64_t v1 = sub_100010324(v0, (uint64_t)qword_10164FA68);
  if (qword_101636D98 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100010324(v0, (uint64_t)qword_10170E550);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10086BFAC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 56);
  return swift_retain();
}

uint64_t sub_10086BFCC()
{
  sub_10000588C(&qword_101640CA8);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_101342130;
  uint64_t v2 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v3 = v2 + 4;
  int v4 = v2 + 5;
  os_unfair_lock_lock(v2 + 5);
  sub_1002B3D78(v3, &v6);
  os_unfair_lock_unlock(v4);
  *(unsigned char *)(v1 + 32) = v6;
  AsyncStreamProvider.stream(initialEvents:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10086C098()
{
  uint64_t v0 = sub_10000588C(&qword_10163CE70);
  sub_10001E384(v0, qword_10170E460);
  sub_100010324(v0, (uint64_t)qword_10170E460);
  sub_100062734(&qword_101640BC0, &qword_10163CE70);
  return ExpressionType.init(_:)();
}

uint64_t sub_10086C13C()
{
  uint64_t v0 = sub_10000588C(&qword_10163CF58);
  sub_10001E384(v0, qword_10170E478);
  sub_100010324(v0, (uint64_t)qword_10170E478);
  sub_100062734(&qword_10163CF80, &qword_10163CF58);
  return ExpressionType.init(_:)();
}

uint64_t sub_10086C1E0()
{
  uint64_t v0 = sub_10000588C(&qword_10163CF58);
  sub_10001E384(v0, qword_10170E490);
  sub_100010324(v0, (uint64_t)qword_10170E490);
  sub_100062734(&qword_10163CF80, &qword_10163CF58);
  return ExpressionType.init(_:)();
}

uint64_t sub_10086C284()
{
  uint64_t v0 = sub_10000588C(&qword_101640BE8);
  sub_10001E384(v0, qword_10170E4A8);
  sub_100010324(v0, (uint64_t)qword_10170E4A8);
  sub_100062734(&qword_101640BF0, &qword_101640BE8);
  return ExpressionType.init(_:)();
}

uint64_t sub_10086C32C()
{
  uint64_t v0 = sub_10000588C(&qword_10163CE98);
  sub_10001E384(v0, qword_10170E4C0);
  sub_100010324(v0, (uint64_t)qword_10170E4C0);
  sub_100062734(&qword_10163CEA0, &qword_10163CE98);
  return ExpressionType.init(_:)();
}

uint64_t sub_10086C3CC()
{
  uint64_t v0 = sub_10000588C(&qword_10163CF28);
  sub_10001E384(v0, qword_10170E4D8);
  sub_100010324(v0, (uint64_t)qword_10170E4D8);
  sub_100062734(&qword_10164FBC0, &qword_10163CF28);
  return ExpressionType.init(_:)();
}

uint64_t sub_10086C46C()
{
  uint64_t v0 = sub_10000588C(&qword_10163CF28);
  sub_10001E384(v0, qword_10170E4F0);
  sub_100010324(v0, (uint64_t)qword_10170E4F0);
  sub_100062734(&qword_10164FBC0, &qword_10163CF28);
  return ExpressionType.init(_:)();
}

uint64_t sub_10086C510()
{
  uint64_t v0 = sub_10000588C(&qword_10163CF58);
  sub_10001E384(v0, qword_10170E508);
  sub_100010324(v0, (uint64_t)qword_10170E508);
  sub_100062734(&qword_10163CF80, &qword_10163CF58);
  return ExpressionType.init(_:)();
}

uint64_t sub_10086C5B4()
{
  uint64_t v0 = sub_10000588C(&qword_10163CF58);
  sub_10001E384(v0, qword_10170E520);
  sub_100010324(v0, (uint64_t)qword_10170E520);
  sub_100062734(&qword_10163CF80, &qword_10163CF58);
  return ExpressionType.init(_:)();
}

uint64_t sub_10086C65C()
{
  uint64_t v0 = sub_10000588C(&qword_10163CF58);
  sub_10001E384(v0, qword_10170E538);
  sub_100010324(v0, (uint64_t)qword_10170E538);
  sub_100062734(&qword_10163CF80, &qword_10163CF58);
  return ExpressionType.init(_:)();
}

uint64_t sub_10086C700(char a1)
{
  sub_10000588C(&qword_101640BC8);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 20) = 0;
  *(unsigned char *)(v3 + 16) = 0;
  *(void *)(v1 + 16) = v3;
  sub_10000588C(&qword_101640BD0);
  swift_allocObject();
  *(void *)(v1 + 24) = AsyncStreamProvider.init()();
  *(_DWORD *)(v1 + 32) = 1;
  sub_10000588C((uint64_t *)&unk_101638CE0);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 16) = 0;
  *(void *)(v1 + 40) = v4;
  *(void *)(v1 + 56) = 0;
  Table.init(_:database:)();
  *(unsigned char *)(v1 + 48) = a1;
  *(unsigned char *)(v1 + 49) = a1 ^ 1;
  if (qword_101636D40 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = sub_100010324(v5, (uint64_t)qword_10164FA68);
  sub_1002B5988(v6);
  return v1;
}

uint64_t sub_10086C82C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v45 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  unsigned int v13 = (char *)&v45 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v45 - v14;
  uint64_t result = *(void *)(a1 + 56);
  if (result)
  {
    *(void *)(a1 + 56) = 0;
    uint64_t result = swift_release();
    if ((*(unsigned char *)(a1 + 48) & 1) == 0)
    {
      uint64_t v49 = v1;
      uint64_t v50 = v13;
      sub_10086CD54();
      id v48 = [self defaultManager];
      if (qword_101636D40 != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      sub_100010324(v17, (uint64_t)qword_10164FA68);
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v15, v3);
      Swift::String v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.default.getter();
      BOOL v20 = os_log_type_enabled(v18, v19);
      uint64_t v51 = v4;
      if (v20)
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v45 = (void *)swift_slowAlloc();
        id v53 = v45;
        uint64_t v46 = v10;
        *(_DWORD *)uint64_t v21 = 136446210;
        uint64_t v47 = (void (*)(char *, uint64_t))(v21 + 4);
        sub_10086E86C((unint64_t *)&qword_1016605A0, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v52 = sub_1008FA0F0(v22, v23, (uint64_t *)&v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v10 = v46;
        uint64_t v47 = *(void (**)(char *, uint64_t))(v4 + 8);
        v47(v7, v3);
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "Purging database: %{public}s", v21, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v47 = *(void (**)(char *, uint64_t))(v4 + 8);
        v47(v7, v3);
      }

      URL._bridgeToObjectiveC()(v24);
      id v26 = v25;
      id v53 = 0;
      id v27 = v48;
      unsigned int v28 = [v48 removeItemAtURL:v25 error:&v53];

      uint64_t v29 = v50;
      if (v28)
      {
        id v30 = v53;
      }
      else
      {
        id v32 = v53;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        swift_errorRelease();
      }
      URL._bridgeToObjectiveC()(v31);
      long long v34 = v33;
      id v53 = 0;
      unsigned int v35 = [v27 removeItemAtURL:v33 error:&v53];

      if (v35)
      {
        id v36 = v53;
      }
      else
      {
        id v38 = v53;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        swift_errorRelease();
      }
      URL._bridgeToObjectiveC()(v37);
      uint64_t v40 = v39;
      id v53 = 0;
      unsigned int v41 = [v27 removeItemAtURL:v39 error:&v53];

      if (v41)
      {
        id v42 = v53;
      }
      else
      {
        id v43 = v53;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        swift_errorRelease();
      }
      uint64_t v44 = v47;
      v47(v10, v3);
      v44(v29, v3);
      return ((uint64_t (*)(char *, uint64_t))v44)(v15, v3);
    }
  }
  return result;
}

uint64_t sub_10086CD54()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BeaconStore(0);
  sub_100A9DB34((uint64_t)v3);
  URL.appendingPathComponent(_:isDirectory:)();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  sub_100A9DB34((uint64_t)v3);
  URL.appendingPathComponent(_:isDirectory:)();
  v4(v3, v0);
  sub_100A9DB34((uint64_t)v3);
  URL.appendingPathComponent(_:isDirectory:)();
  return ((uint64_t (*)(char *, uint64_t))v4)(v3, v0);
}

uint64_t sub_10086CEFC(uint64_t a1, uint64_t a2)
{
  if (qword_101636D40 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = (void *)sub_100010324(v5, (uint64_t)qword_10164FA68);
  unsigned int v7 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v8 = sub_10086E86C(&qword_10164FBB8, (void (*)(uint64_t))type metadata accessor for StandaloneBeaconDatabase);
  uint64_t result = static Database.establishConnection(logger:temporary:)(v6, v7, a2, v8);
  if (!v2)
  {
    *(void *)(a1 + 56) = result;
    return swift_release();
  }
  return result;
}

void sub_10086CFE8(int a1, int a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Connection.TransactionMode();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v3 + 48) & 1) == 0)
  {
    uint64_t v24 = a3;
    if (qword_101636D40 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100010324(v12, (uint64_t)qword_10164FA68);
    unsigned int v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (_DWORD *)swift_slowAlloc();
      uint64_t v23 = v9;
      unint64_t v16 = v15;
      *uint64_t v15 = 67109376;
      int v26 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *((_WORD *)v16 + 4) = 1024;
      int v25 = a2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Migrate schema %d -> %d", (uint8_t *)v16, 0xEu);
      uint64_t v9 = v23;
      swift_slowDealloc();
    }

    a3 = v24;
  }
  if (a2 == 1)
  {
    v17._countAndFlagsBits = 0xD00000000000001FLL;
    v17._object = (void *)0x80000001013F7F50;
    Connection.execute(_:)(v17);
    if (!v18)
    {
      v19._object = (void *)0x80000001013F7F70;
      v19._countAndFlagsBits = 0xD000000000000018;
      Connection.execute(_:)(v19);
      if (!v21)
      {
        __chkstk_darwin(v20);
        *(&v23 - 2) = a3;
        *(&v23 - 1) = v4;
        (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Connection.TransactionMode.deferred(_:), v8);
        Connection.transaction(_:block:)();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      }
    }
  }
  else
  {
    sub_1001A149C();
    swift_allocError();
    *(_DWORD *)uint64_t v22 = a2;
    *(unsigned char *)(v22 + 4) = 0;
    swift_willThrow();
  }
}

uint64_t sub_10086D304()
{
  Table.create(temporary:ifNotExists:withoutRowid:block:)();
  Connection.run(_:_:)();
  if (v0) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  sub_10000588C(&qword_10163CE90);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_101342130;
  if (qword_101636D48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000588C(&qword_10163CE70);
  uint64_t v3 = sub_100010324(v2, (uint64_t)qword_10170E460);
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = sub_100062734(&qword_10163CFA8, &qword_10163CE70);
  uint64_t v4 = sub_10001D958((uint64_t *)(v1 + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v4, v3, v2);
  Table.createIndex(_:unique:ifNotExists:)();
  swift_bridgeObjectRelease();
  Connection.run(_:_:)();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_10086D4FC(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_10163CF78);
  uint64_t v65 = *(void *)(v2 - 8);
  uint64_t v66 = v2;
  __chkstk_darwin(v2);
  uint64_t v64 = (char *)v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000588C(&qword_10163CE68);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unsigned int v62 = (char *)v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000588C(&qword_10164FBC8);
  __chkstk_darwin(v7 - 8);
  uint64_t v60 = (char *)v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000588C(&qword_101640C60);
  __chkstk_darwin(v9 - 8);
  uint64_t v68 = (char *)v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C(&qword_101640C78);
  __chkstk_darwin(v11 - 8);
  v57[0] = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000588C(&qword_101640C80);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000588C(&qword_101640C68);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000588C(&qword_101640C70);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101636D48 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_10000588C(&qword_10163CE70);
  sub_100010324(v22, (uint64_t)qword_10170E460);
  uint64_t v63 = v5;
  int v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v24 = (char *)(v5 + 56);
  uint64_t v23 = v25;
  v25(v21, 1, 1, v4);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v18, 1, 1, v22);
  type metadata accessor for UUID();
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10001DAB4((uint64_t)v18, &qword_101640C68);
  sub_10001DAB4((uint64_t)v21, &qword_101640C70);
  if (qword_101636D50 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_10000588C(&qword_10163CF58);
  uint64_t v27 = sub_100010324(v26, (uint64_t)qword_10170E478);
  v23(v21, 1, 1, v4);
  uint64_t v28 = *(void *)(v26 - 8);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  uint64_t v30 = v28 + 56;
  uint64_t v70 = v26;
  v29(v15, 1, 1, v26);
  uint64_t v61 = v27;
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10001DAB4((uint64_t)v15, &qword_101640C80);
  sub_10001DAB4((uint64_t)v21, &qword_101640C70);
  if (qword_101636D58 != -1) {
    swift_once();
  }
  uint64_t v31 = v70;
  uint64_t v32 = sub_100010324(v70, (uint64_t)qword_10170E490);
  v23(v21, 1, 1, v4);
  v57[1] = v30;
  uint64_t v58 = v29;
  v29(v15, 1, 1, v31);
  uint64_t v59 = v32;
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10001DAB4((uint64_t)v15, &qword_101640C80);
  sub_10001DAB4((uint64_t)v21, &qword_101640C70);
  if (qword_101636D60 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_10000588C(&qword_101640BE8);
  sub_100010324(v33, (uint64_t)qword_10170E4A8);
  v23(v21, 1, 1, v4);
  uint64_t v34 = v57[0];
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v57[0], 1, 1, v33);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10001DAB4(v34, &qword_101640C78);
  sub_10001DAB4((uint64_t)v21, &qword_101640C70);
  if (qword_101636D68 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_10000588C(&qword_10163CE98);
  sub_100010324(v35, (uint64_t)qword_10170E4C0);
  v23(v21, 1, 1, v4);
  uint64_t v36 = (uint64_t)v68;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v68, 1, 1, v35);
  type metadata accessor for Date();
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10001DAB4(v36, &qword_101640C60);
  sub_10001DAB4((uint64_t)v21, &qword_101640C70);
  uint64_t v37 = (uint64_t)v60;
  if (qword_101636D70 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_10000588C(&qword_10163CF28);
  sub_100010324(v38, (uint64_t)qword_10170E4D8);
  v23(v21, 1, 1, v4);
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v68 = v24;
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56);
  uint64_t v69 = v4;
  v40(v37, 1, 1, v38);
  sub_1001A1720();
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10001DAB4(v37, &qword_10164FBC8);
  sub_10001DAB4((uint64_t)v21, &qword_101640C70);
  if (qword_101636D78 != -1) {
    swift_once();
  }
  sub_100010324(v38, (uint64_t)qword_10170E4F0);
  v23(v21, 1, 1, v69);
  v40(v37, 1, 1, v38);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10001DAB4(v37, &qword_10164FBC8);
  sub_10001DAB4((uint64_t)v21, &qword_101640C70);
  if (qword_101636D80 != -1) {
    swift_once();
  }
  uint64_t v41 = v70;
  uint64_t v42 = sub_100010324(v70, (uint64_t)qword_10170E508);
  uint64_t v43 = v69;
  v23(v21, 1, 1, v69);
  uint64_t v44 = v58;
  v58(v15, 1, 1, v41);
  uint64_t v60 = (char *)v42;
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10001DAB4((uint64_t)v15, &qword_101640C80);
  sub_10001DAB4((uint64_t)v21, &qword_101640C70);
  uint64_t v45 = v43;
  if (qword_101636D88 != -1) {
    swift_once();
  }
  uint64_t v46 = v70;
  uint64_t v47 = sub_100010324(v70, (uint64_t)qword_10170E520);
  v23(v21, 1, 1, v45);
  v44(v15, 1, 1, v46);
  v57[0] = v47;
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10001DAB4((uint64_t)v15, &qword_101640C80);
  sub_10001DAB4((uint64_t)v21, &qword_101640C70);
  if (qword_101636D90 != -1) {
    swift_once();
  }
  uint64_t v48 = v70;
  sub_100010324(v70, (uint64_t)qword_10170E538);
  v23(v21, 1, 1, v45);
  v44(v15, 1, 1, v48);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10001DAB4((uint64_t)v15, &qword_101640C80);
  sub_10001DAB4((uint64_t)v21, &qword_101640C70);
  uint64_t v49 = sub_100062734(&qword_10163CF80, &qword_10163CF58);
  uint64_t v50 = v64;
  ExpressionType<>.length.getter();
  uint64_t v71 = static MACAddress.length.getter();
  uint64_t v67 = a1;
  uint64_t v51 = v62;
  == infix<A>(_:_:)();
  uint64_t v52 = v66;
  uint64_t v65 = *(void *)(v65 + 8);
  ((void (*)(char *, uint64_t))v65)(v50, v66);
  TableBuilder.check(_:)();
  uint64_t v68 = *(char **)(v63 + 8);
  ((void (*)(char *, uint64_t))v68)(v51, v45);
  uint64_t v58 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v49;
  ExpressionType<>.length.getter();
  uint64_t v71 = static MACAddress.length.getter();
  == infix<A>(_:_:)();
  id v53 = (void (*)(char *, uint64_t))v65;
  ((void (*)(char *, uint64_t))v65)(v50, v52);
  TableBuilder.check(_:)();
  ((void (*)(char *, uint64_t))v68)(v51, v45);
  ExpressionType<>.length.getter();
  uint64_t v71 = 85;
  == infix<A>(_:_:)();
  v53(v50, v52);
  TableBuilder.check(_:)();
  uint64_t v55 = v68;
  uint64_t v54 = v69;
  ((void (*)(char *, uint64_t))v68)(v51, v69);
  ExpressionType<>.length.getter();
  uint64_t v71 = 32;
  == infix<A>(_:_:)();
  v53(v50, v52);
  TableBuilder.check(_:)();
  return ((uint64_t (*)(char *, uint64_t))v55)(v51, v54);
}

uint64_t sub_10086E300()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC12searchpartyd24StandaloneBeaconDatabase_standaloneBeacon;
  uint64_t v2 = type metadata accessor for Table();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10086E3C0()
{
  return type metadata accessor for StandaloneBeaconDatabase();
}

uint64_t type metadata accessor for StandaloneBeaconDatabase()
{
  uint64_t result = qword_10164FAA8;
  if (!qword_10164FAA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10086E414()
{
  uint64_t result = type metadata accessor for Table();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10086E4DC()
{
  sub_10000588C(&qword_10163CEF8);
  OSAllocatedUnfairLock.callAsFunction<A>(_:)();
  return v1;
}

uint64_t sub_10086E554()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1002B3D78(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_10086E5B8()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_10086E5C0()
{
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t sub_10086E5C8()
{
  return sub_10086E8B4();
}

uint64_t sub_10086E5E0()
{
  return sub_10086CD54();
}

void sub_10086E5F8(int a1, int a2, uint64_t a3)
{
}

uint64_t sub_10086E610()
{
  return sub_10086E668();
}

uint64_t sub_10086E63C()
{
  return sub_10086E668();
}

uint64_t sub_10086E668()
{
  return OSAllocatedUnfairLock.callAsFunction<A>(_:)();
}

uint64_t sub_10086E6CC()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1002B65AC(v2);
  os_unfair_lock_unlock(v3);
  return AsyncStreamProvider.yield(value:transaction:)();
}

uint64_t sub_10086E740(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return Database.description.getter(a1, WitnessTable);
}

uint64_t sub_10086E78C(uint64_t a1)
{
  uint64_t result = sub_10086E86C(&qword_10163D098, (void (*)(uint64_t))type metadata accessor for StandaloneBeaconDatabase);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10086E7E4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10170E550);
  sub_100010324(v0, (uint64_t)qword_10170E550);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_10086E86C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10086E8B4()
{
  uint64_t v2 = type metadata accessor for Keychain.DataProtectionClass();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unsigned __int8 v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = static Keychain.data(account:service:)();
  if (!v1)
  {
    if (v7 >> 60 == 15)
    {
      uint64_t v0 = static Data.random(bytes:)();
      unint64_t v9 = v8;
      v11[0] = v0;
      v11[1] = v8;
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Keychain.DataProtectionClass.c(_:), v2);
      sub_1000361E0(v0, v9);
      sub_1000362FC();
      static Keychain.set<A>(data:account:service:dataProtectionClass:)();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_10001CFB8(v0, v9);
    }
    else
    {
      return v6;
    }
  }
  return v0;
}

uint64_t sub_10086EAC8@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 56);
  return swift_retain();
}

uint64_t sub_10086EAE8()
{
  return 1;
}

uint64_t sub_10086ED74()
{
  return sub_10086D304();
}

Swift::Int sub_10086ED90()
{
  return Hasher._finalize()();
}

uint64_t sub_10086EDE8()
{
  return String.hash(into:)();
}

Swift::Int sub_10086EE04()
{
  return Hasher._finalize()();
}

uint64_t sub_10086EE58@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1015A2A80, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

void sub_10086EEAC(void *a1@<X8>)
{
  *a1 = 0xD00000000000002ELL;
  a1[1] = 0x80000001013EEF70;
}

uint64_t sub_10086EF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 120) = a4;
  *(void *)(v5 + 128) = a5;
  return _swift_task_switch(sub_10086EFA8, 0, 0);
}

uint64_t sub_10086EFA8()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_1000977C4((uint64_t)&xmmword_10166E8F0, v0 + 56);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    Swift::Int v3 = (uint64_t (__cdecl *)())((char *)&dword_101639120 + dword_101639120);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10086F0DC;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10086F0DC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 144) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10086F1DC, 0, 0);
}

uint64_t sub_10086F1DC()
{
  uint64_t v1 = (uint64_t)(v0 + 2);
  if (v0[18])
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[19] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10086F32C;
    return sub_100923BB4(0);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    sub_10001CEC8();
    uint64_t v4 = swift_allocError();
    void *v5 = 0xD00000000000001DLL;
    v5[1] = 0x80000001013F1E50;
    swift_willThrow();
    uint64_t v6 = (void (*)(void, uint64_t))v0[15];
    swift_errorRetain();
    v6(0, v4);
    swift_errorRelease();
    swift_errorRelease();
    unint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_10086F32C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 160) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10086F4DC;
  }
  else
  {
    *(void *)(v4 + 168) = a1;
    uint64_t v5 = sub_10086F454;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10086F454()
{
  uint64_t v1 = *(void **)(v0 + 168);
  (*(void (**)(void *, void))(v0 + 120))(v1, 0);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10086F4DC()
{
  swift_release();
  uint64_t v1 = v0[20];
  uint64_t v2 = (void (*)(void, uint64_t))v0[15];
  swift_errorRetain();
  v2(0, v1);
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

id sub_10086F644()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SchedulerTrampoline();
  return [super dealloc];
}

uint64_t type metadata accessor for SchedulerTrampoline()
{
  return self;
}

id sub_10086F6A0()
{
  uint64_t v1 = *(void **)(v0 + 48);
  if (v1)
  {
    id v2 = *(id *)(v0 + 48);
  }
  else
  {
    id v3 = [objc_allocWithZone((Class)type metadata accessor for SchedulerTrampoline()) init];
    uint64_t v4 = *(void **)(v0 + 48);
    *(void *)(v0 + 48) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_10086F70C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = PressuredExitTransactionManager.begin(_:)();
  v13[1] = v0[4];
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v0;
  void v10[3] = v9;
  v10[4] = v1;
  aBlock[4] = sub_100870320;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015D89A8;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v15 = _swiftEmptyArrayStorage;
  sub_1001BF0B8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  return swift_release();
}

uint64_t sub_10086FA18()
{
  uint64_t v0 = type metadata accessor for MachServiceName();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for XPCServiceDescription();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MachServiceName.init(_:)();
  sub_10086F6A0();
  if (qword_101636DA0 != -1) {
    swift_once();
  }
  id v5 = (id)qword_10164FBD0;
  swift_retain();
  XPCServiceDescription.init(name:options:exportedObject:exportedInterface:shouldAccept:interruptionHandler:invalidationHandler:)();
  XPCSessionManager.register(service:)();
  Transaction.end()();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_10086FBF0()
{
  id v0 = [self interfaceWithProtocol:&OBJC_PROTOCOL___SPSchedulerXPCProtocol];
  sub_100A59298();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_101342130;
  *(void *)(v1 + 32) = sub_10001D4B0(0, (unint64_t *)&unk_10164FD20);
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)();
  uint64_t result = swift_bridgeObjectRelease();
  qword_10164FBD0 = (uint64_t)v0;
  return result;
}

uint64_t sub_10086FCB0(void *a1)
{
  static os_log_type_t.default.getter();
  if (qword_101637288 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_101347BA0;
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  *(void *)(v3 + 56) = &type metadata for String;
  *(void *)(v3 + 64) = sub_10000B4CC();
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v4;
  *(void *)(v3 + 96) = sub_10001D4B0(0, (unint64_t *)&unk_10164FD00);
  *(void *)(v3 + 104) = sub_1001DF580();
  *(void *)(v3 + 72) = a1;
  swift_bridgeObjectRetain();
  id v6 = a1;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_10087028C();
  return NSXPCConnection.hasEntitlement<A>(_:)() & 1;
}

uint64_t sub_10086FDE4()
{
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC12searchpartyd16SchedulerService_transactionManager;
  uint64_t v2 = type metadata accessor for PressuredExitTransactionManager();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10086FEA4()
{
  return type metadata accessor for SchedulerService();
}

uint64_t type metadata accessor for SchedulerService()
{
  uint64_t result = qword_10164FC30;
  if (!qword_10164FC30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10086FEF8()
{
  uint64_t result = type metadata accessor for PressuredExitTransactionManager();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_10086FFB8()
{
  uint64_t v1 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v1);
  uint64_t v2 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[2] = 0xD000000000000010;
  v0[3] = 0x800000010136B730;
  sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v3);
  static DispatchQoS.unspecified.getter();
  v8[1] = _swiftEmptyArrayStorage;
  sub_1001BF0B8((unint64_t *)&qword_101638CC0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000588C((uint64_t *)&unk_1016376F0);
  sub_1001BF100((unint64_t *)&qword_101638CD0, (uint64_t *)&unk_1016376F0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v0[4] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  type metadata accessor for XPCSessionManager();
  swift_allocObject();
  v0[5] = XPCSessionManager.init(name:)();
  v0[6] = 0;
  PressuredExitTransactionManager.init()();
  return v0;
}

uint64_t sub_100870268()
{
  return sub_10086F70C();
}

unint64_t sub_10087028C()
{
  unint64_t result = qword_10164FD10;
  if (!qword_10164FD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164FD10);
  }
  return result;
}

uint64_t sub_1008702E0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100870320()
{
  return sub_10086FA18();
}

uint64_t sub_10087032C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10087033C()
{
  return swift_release();
}

uint64_t sub_100870348()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100870380(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TaskPriority();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = a2;
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  swift_retain();
  if (a1 == 1)
  {
    sub_1001A5838((uint64_t)v6);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    if (v9[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = &unk_10164FD38;
  *(void *)(v13 + 24) = v9;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    void v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1008705C4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100870604()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_10001D2E4;
  *(_OWORD *)(v2 + 120) = v3;
  return _swift_task_switch(sub_10086EFA8, 0, 0);
}

uint64_t sub_1008706B0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1008706E8()
{
  unint64_t result = qword_10164FD48;
  if (!qword_10164FD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164FD48);
  }
  return result;
}

ValueMetadata *type metadata accessor for SchedulerTrampoline.Error()
{
  return &type metadata for SchedulerTrampoline.Error;
}

unsigned char *_s12searchpartyd19SchedulerTrampolineC5ErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1008707ECLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SchedulerEntitlement()
{
  return &type metadata for SchedulerEntitlement;
}

unint64_t sub_100870828()
{
  unint64_t result = qword_10164FD50;
  if (!qword_10164FD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164FD50);
  }
  return result;
}

unint64_t sub_100870880()
{
  unint64_t result = qword_10164FD58;
  if (!qword_10164FD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164FD58);
  }
  return result;
}

unint64_t sub_1008708D8()
{
  unint64_t result = qword_10164FD60;
  if (!qword_10164FD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164FD60);
  }
  return result;
}

uint64_t sub_10087092C()
{
  *(void *)(v1 + 320) = v0;
  return _swift_task_switch(sub_10087094C, v0, 0);
}

uint64_t sub_10087094C()
{
  swift_retain();
  uint64_t v1 = sub_100A717D4(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_100A717D4((void *)(v2 > 1), v3 + 1, 1, v1);
  }
  *(void *)(v0 + 328) = v1;
  uint64_t v4 = *(void *)(v0 + 320);
  *(void *)(v0 + 40) = type metadata accessor for DeviceBeaconPayloadPublisher();
  *(void *)(v0 + 48) = &off_1015D8BA0;
  *(void *)(v0 + 16) = v4;
  v1[2] = v3 + 1;
  sub_10001CEB0((long long *)(v0 + 16), (uint64_t)&v1[5 * v3 + 4]);
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 136, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 160))
  {
    sub_10001CEB0((long long *)(v0 + 136), v0 + 56);
    sub_10001CD44((void *)(v0 + 56), *(void *)(v0 + 80));
    uint64_t v7 = (uint64_t (__cdecl *)())((char *)&dword_101639168 + dword_101639168);
    id v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v6;
    *id v6 = v0;
    v6[1] = sub_100870B24;
    return v7();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100870B24(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 320);
  *(void *)(*(void *)v1 + 344) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100870C3C, v2, 0);
}

uint64_t sub_100870C3C()
{
  uint64_t v1 = v0 + 56;
  uint64_t v2 = *(void *)(v0 + 344);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 328);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    unint64_t v4 = *(void *)(v3 + 16);
    unint64_t v5 = *(void *)(v3 + 24);
    swift_retain();
    id v6 = *(void **)(v0 + 328);
    if (v4 >= v5 >> 1) {
      id v6 = sub_100A717D4((void *)(v5 > 1), v4 + 1, 1, *(void **)(v0 + 328));
    }
    *(void *)(v0 + 120) = type metadata accessor for PencilPairingService(0);
    *(void *)(v0 + 128) = &off_1015F2988;
    *(void *)(v0 + 96) = v2;
    _OWORD v6[2] = v4 + 1;
    sub_10001CEB0((long long *)(v0 + 96), (uint64_t)&v6[5 * v4 + 4]);
    swift_release();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    id v6 = *(void **)(v0 + 328);
  }
  *(void *)(v0 + 352) = v6;
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 216, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 240))
  {
    sub_10001CEB0((long long *)(v0 + 216), v0 + 176);
    sub_10001CD44((void *)(v0 + 176), *(void *)(v0 + 200));
    uint64_t v9 = (uint64_t (__cdecl *)())((char *)&dword_101639390 + dword_101639390);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 360) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_100870DD8;
    return v9();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100870DD8(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 320);
  *(void *)(*(void *)v1 + 368) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100870EF0, v2, 0);
}

uint64_t sub_100870EF0()
{
  uint64_t v1 = v0 + 176;
  uint64_t v2 = *(void *)(v0 + 368);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 352);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    unint64_t v4 = *(void *)(v3 + 16);
    unint64_t v5 = *(void *)(v3 + 24);
    swift_retain();
    id v6 = *(void **)(v0 + 352);
    if (v4 >= v5 >> 1) {
      id v6 = sub_100A717D4((void *)(v5 > 1), v4 + 1, 1, *(void **)(v0 + 352));
    }
    *(void *)(v0 + 280) = type metadata accessor for DelegatedBeaconPayloadPublisher();
    *(void *)(v0 + 288) = &off_1015A6FB8;
    *(void *)(v0 + 256) = v2;
    _OWORD v6[2] = v4 + 1;
    sub_10001CEB0((long long *)(v0 + 256), (uint64_t)&v6[5 * v4 + 4]);
    swift_release();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    id v6 = *(void **)(v0 + 352);
  }
  uint64_t v7 = *(uint64_t (**)(void *))(v0 + 8);
  return v7(v6);
}

uint64_t sub_100870FF8@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self standardUserDefaults];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 objectForKey:v3];

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_10001D608((uint64_t)v9, (uint64_t)v10, (uint64_t *)&unk_101644360);
  if (v11)
  {
    uint64_t v5 = type metadata accessor for Date();
    int v6 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, v6 ^ 1u, 1, v5);
  }
  else
  {
    sub_10001DAB4((uint64_t)v10, (uint64_t *)&unk_101644360);
    uint64_t v8 = type metadata accessor for Date();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

uint64_t sub_100871180()
{
  v1[3] = v0;
  uint64_t v2 = type metadata accessor for ClientOrigin();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  type metadata accessor for RequestOrigin();
  v1[7] = swift_task_alloc();
  return _swift_task_switch(sub_10087126C, v0, 0);
}

uint64_t sub_10087126C()
{
  (*(void (**)(void, void, void))(v0[5] + 104))(v0[6], enum case for ClientOrigin.other(_:), v0[4]);
  RequestOrigin.init(_:)();
  type metadata accessor for Session();
  swift_allocObject();
  v0[8] = Session.init(_:)();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100871360;
  return Session.isMyLocationEnabled(cached:)(1);
}

uint64_t sub_100871360(char a1)
{
  uint64_t v3 = *v2;
  *(unsigned char *)(v3 + 92) = a1;
  *(void *)(v3 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(void *)(v3 + 24);
    uint64_t v5 = sub_1008715F8;
  }
  else
  {
    uint64_t v6 = *(void *)(v3 + 24);
    swift_release();
    uint64_t v5 = sub_10087148C;
    uint64_t v4 = v6;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_10087148C()
{
  if (qword_101637660 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170F838);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 92);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67109120;
    *(_DWORD *)(v0 + 88) = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Result of SML returning %{BOOL}d.", v5, 8u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(unsigned __int8 *)(v0 + 92);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v7(v6);
}

uint64_t sub_1008715F8()
{
  swift_release();
  if (qword_101637660 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170F838);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)int v4 = 138543362;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Result of SML unknown, returning false due to error %{public}@.", v4, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7(0);
}

void *sub_100871818(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_defaultActor_initialize();
  v1[14] = 0xD00000000000001CLL;
  v1[15] = 0x800000010136B970;
  sub_10000588C(&qword_101654000);
  v1[17] = AsyncKeyedThrottle.__allocating_init(throttleInterval:)();
  type metadata accessor for DeviceIdentityUtility();
  uint64_t v3 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v4 = v3 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_certExpiryDate;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  *(void *)(v3 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_refKey) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_certs) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_signingType) = 6;
  v1[18] = v3;
  uint64_t v7 = swift_allocObject();
  swift_defaultActor_initialize();
  v6(v7 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_certExpiryDate, 1, 1, v5);
  *(void *)(v7 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_refKey) = 0;
  *(void *)(v7 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_certs) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_signingType) = 7;
  v2[19] = v7;
  if (qword_101636CB8 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_10170E330;
  uint64_t v14 = &off_1015D4FE8;
  uint64_t v15 = &off_1015B2900;
  uint64_t v13 = type metadata accessor for BeaconObservationStore();
  *(void *)&long long v12 = v8;
  type metadata accessor for MemberCircleRevokeManager();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 24) = 0;
  swift_unknownObjectWeakInit();
  sub_10005F748(&v12, (_OWORD *)(v9 + 32));
  v2[20] = v9;
  type metadata accessor for MemberCircleRevokeAssistant();
  v2[21] = swift_allocObject();
  v2[16] = a1;
  *(void *)(v9 + 24) = &off_101607470;
  swift_unknownObjectWeakAssign();
  swift_retain();
  return v2;
}

uint64_t sub_100871A84()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100871B14;
  return sub_100871CF8();
}

uint64_t sub_100871B14()
{
  uint64_t v4 = *v1;
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(BOOL))(v4 + 8);
  return v2(v0 == 0);
}

void sub_100871C18()
{
  if (qword_101637660 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100010324(v0, (uint64_t)qword_10170F838);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Skipped publishing own device beacons due to throttle.", v3, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_100871CF8()
{
  v1[35] = v0;
  sub_10000588C(&qword_10164DBB0);
  v1[36] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10163AC90);
  v1[37] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for Date();
  v1[38] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[39] = v3;
  v1[40] = *(void *)(v3 + 64);
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  v1[43] = swift_task_alloc();
  return _swift_task_switch(sub_100871E3C, v0, 0);
}

uint64_t sub_100871E3C()
{
  if (qword_101637660 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[44] = sub_100010324(v1, (uint64_t)qword_10170F838);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Start publishing own device beacons.", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[43];

  static Date.trustedNow.getter(v5);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[45] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100871F98;
  return sub_10087FC50();
}

uint64_t sub_100871F98()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 368) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 280);
  if (v0) {
    uint64_t v4 = sub_100874378;
  }
  else {
    uint64_t v4 = sub_1008720C4;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1008720C4()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Local disk fetch completed.", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[38];
  uint64_t v5 = v0[39];
  uint64_t v6 = v0[37];

  sub_100870FF8(v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
  {
    uint64_t v7 = v0[37];
    static Date.distantPast.getter();
    sub_10001DAB4(v7, (uint64_t *)&unk_10163AC90);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[39] + 32))(v0[42], v0[37], v0[38]);
  }
  uint64_t v8 = (void *)swift_task_alloc();
  v0[47] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100872258;
  uint64_t v9 = v0[35];
  v8[40] = v9;
  return _swift_task_switch(sub_10087094C, v9, 0);
}

uint64_t sub_100872258(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 384) = a1;
  *(void *)(v4 + 392) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 280);
  if (v1) {
    uint64_t v6 = sub_10087442C;
  }
  else {
    uint64_t v6 = sub_10087238C;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_10087238C()
{
  v0[28] = _swiftEmptyArrayStorage;
  uint64_t v1 = v0[48];
  uint64_t v2 = *(void *)(v1 + 16);
  v0[50] = v2;
  if (v2)
  {
    v0[51] = 0;
    v0[52] = _swiftEmptyArrayStorage;
    sub_10001D010(v1 + 32, (uint64_t)(v0 + 2));
    uint64_t v3 = v0[5];
    uint64_t v4 = v0[6];
    sub_10001CD44(v0 + 2, v3);
    uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 8) + **(int **)(v4 + 8));
    uint64_t v5 = (void *)swift_task_alloc();
    v0[53] = v5;
    void *v5 = v0;
    v5[1] = sub_100872748;
    uint64_t v6 = v0[42];
    return v17(v6, v3, v4);
  }
  else
  {
    swift_bridgeObjectRelease();
    v0[56] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 134217984;
      v0[34] = _swiftEmptyArrayStorage[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Got %ld payloads to publish for own devices.", v10, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    swift_beginAccess();
    uint64_t v11 = v0[28];
    v0[57] = v11;
    if (*(void *)(v11 + 16))
    {
      swift_bridgeObjectRetain();
      long long v12 = (void *)swift_task_alloc();
      v0[58] = v12;
      *long long v12 = v0;
      v12[1] = sub_100872DD8;
      return sub_1008751FC(v11);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v15 = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "No observations to publish for owned devices.", v15, 2u);
        swift_slowDealloc();
      }

      v0[60] = 0;
      uint64_t v16 = (void *)swift_task_alloc();
      v0[61] = v16;
      *uint64_t v16 = v0;
      v16[1] = sub_1008730A8;
      return sub_100871180();
    }
  }
}

uint64_t sub_100872748(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 432) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 280);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1008744F8;
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v7 = *(void *)(v4 + 280);
    *(void *)(v4 + 440) = a1;
    uint64_t v6 = sub_100872898;
  }
  return _swift_task_switch(v6, v7, 0);
}

uint64_t sub_100872898()
{
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v3 = *(void *)(v0 + 328);
  uint64_t v5 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 312);
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_100442854(v6);
  sub_10001D010(v0 + 16, v0 + 56);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v5);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  sub_10001CEB0((long long *)(v0 + 56), v8 + 16);
  *(void *)(v8 + 56) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v3, v5);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = &unk_10164FF48;
  *(void *)(v9 + 24) = v8;
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *(void **)(v0 + 416);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v11 = sub_100A71914(0, v11[2] + 1, 1, *(void **)(v0 + 416));
  }
  unint64_t v13 = v11[2];
  unint64_t v12 = v11[3];
  if (v13 >= v12 >> 1) {
    uint64_t v11 = sub_100A71914((void *)(v12 > 1), v13 + 1, 1, v11);
  }
  uint64_t v14 = *(void *)(v0 + 400);
  uint64_t v15 = *(void *)(v0 + 408) + 1;
  void v11[2] = v13 + 1;
  uint64_t v16 = &v11[2 * v13];
  v16[4] = &unk_10164FF58;
  v16[5] = v9;
  swift_release();
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  if (v15 == v14)
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void *)(v0 + 224);
    *(void *)(v0 + 448) = v11;
    swift_bridgeObjectRetain();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 134217984;
      *(void *)(v0 + 272) = *(void *)(v17 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Got %ld payloads to publish for own devices.", v20, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    swift_beginAccess();
    uint64_t v27 = *(void *)(v0 + 224);
    *(void *)(v0 + 456) = v27;
    if (*(void *)(v27 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = (void *)swift_task_alloc();
      *(void *)(v0 + 464) = v28;
      void *v28 = v0;
      v28[1] = sub_100872DD8;
      return sub_1008751FC(v27);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "No observations to publish for owned devices.", v31, 2u);
        swift_slowDealloc();
      }

      *(void *)(v0 + 480) = 0;
      uint64_t v32 = (void *)swift_task_alloc();
      *(void *)(v0 + 488) = v32;
      *uint64_t v32 = v0;
      v32[1] = sub_1008730A8;
      return sub_100871180();
    }
  }
  else
  {
    uint64_t v21 = *(void *)(v0 + 408) + 1;
    *(void *)(v0 + 408) = v21;
    *(void *)(v0 + 416) = v11;
    sub_10001D010(*(void *)(v0 + 384) + 40 * v21 + 32, v0 + 16);
    uint64_t v22 = *(void *)(v0 + 40);
    uint64_t v23 = *(void *)(v0 + 48);
    sub_10001CD44((void *)(v0 + 16), v22);
    uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 + 8) + **(int **)(v23 + 8));
    uint64_t v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 424) = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_100872748;
    uint64_t v25 = *(void *)(v0 + 336);
    return v33(v25, v22, v23);
  }
}

uint64_t sub_100872DD8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 472) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 280);
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1008745D0;
  }
  else
  {
    uint64_t v4 = sub_100872F2C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100872F2C()
{
  uint64_t v1 = v0[28];
  swift_bridgeObjectRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134217984;
    uint64_t v5 = *(void *)(v1 + 16);
    swift_bridgeObjectRelease();
    v0[33] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Completed publish of %ld own device payloads.", v4, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v0[60] = 0;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[61] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1008730A8;
  return sub_100871180();
}

uint64_t sub_1008730A8(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 280);
  *(unsigned char *)(*(void *)v1 + 584) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1008731C0, v2, 0);
}

uint64_t sub_1008731C0()
{
  if (*(unsigned char *)(v0 + 584))
  {
    if (*(void *)(v0 + 480))
    {
      swift_errorRetain();
      uint64_t v2 = *(void *)(v0 + 336);
      uint64_t v1 = *(void *)(v0 + 344);
      uint64_t v3 = *(void *)(v0 + 304);
      uint64_t v4 = *(void *)(v0 + 312);
      swift_bridgeObjectRelease();
      swift_willThrow();
      swift_errorRelease();
      uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v5(v2, v3);
      v5(v1, v3);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
LABEL_4:
      return v6();
    }
    uint64_t v10 = *(void **)(v0 + 448);
    uint64_t v11 = v10[2];
    *(void *)(v0 + 552) = v11;
    if (!v11)
    {
      uint64_t v14 = *(void *)(v0 + 336);
      uint64_t v15 = *(void *)(v0 + 344);
      uint64_t v16 = *(void *)(v0 + 304);
      uint64_t v17 = *(void *)(v0 + 312);
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v18(v14, v16);
      v18(v15, v16);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_4;
    }
    *(void *)(v0 + 560) = 0;
    unint64_t v12 = (int *)v10[4];
    *(void *)(v0 + 568) = v10[5];
    os_log_type_t v19 = (uint64_t (*)(void))((char *)v12 + *v12);
    swift_retain();
    unint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 576) = v13;
    *unint64_t v13 = v0;
    v13[1] = sub_100874080;
    return v19();
  }
  else
  {
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 496) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_100873498;
    uint64_t v9 = *(void *)(v0 + 336);
    return sub_10087BBF8(v9);
  }
}

uint64_t sub_100873498(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 504) = a1;
  *(void *)(v4 + 512) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 280);
  if (v1) {
    uint64_t v6 = sub_100874894;
  }
  else {
    uint64_t v6 = sub_1008735CC;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1008735CC()
{
  swift_bridgeObjectRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 504);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134217984;
    *(void *)(v0 + 248) = *(void *)(v3 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Got %ld anonymous shared device payloads to publish.", v4, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 96, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 120))
  {
    sub_10001CEB0((long long *)(v0 + 96), v0 + 136);
    sub_10001CD44((void *)(v0 + 136), *(void *)(v0 + 160));
    unint64_t v7 = (uint64_t (__cdecl *)())((char *)&dword_101639120 + dword_101639120);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 520) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1008737D0;
    return v7();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1008737D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 280);
  *(void *)(*(void *)v1 + 528) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1008738E8, v2, 0);
}

uint64_t sub_1008738E8()
{
  if (v0[66])
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 17));
    uint64_t v1 = (void *)swift_task_alloc();
    v0[67] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_100873C10;
    uint64_t v2 = v0[63];
    return sub_100925D88(v2);
  }
  else
  {
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 17));
    sub_10001CEC8();
    swift_allocError();
    *uint64_t v4 = 0xD00000000000001DLL;
    v4[1] = 0x80000001013F1E50;
    swift_willThrow();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v7 = 138543362;
      swift_errorRetain();
      uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
      v0[29] = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v8 = v9;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Error publishing owned devices anonymously. Error: %{public}@.", v7, 0xCu);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    swift_errorRetain();
    uint64_t v11 = v0[42];
    uint64_t v10 = v0[43];
    uint64_t v12 = v0[38];
    uint64_t v13 = v0[39];
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_errorRelease();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v14(v11, v12);
    v14(v10, v12);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
}

uint64_t sub_100873C10(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 544) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 280);
    swift_bridgeObjectRelease();
    os_log_type_t v6 = sub_100874AD4;
  }
  else
  {
    uint64_t v5 = *(void *)(v4 + 280);

    os_log_type_t v6 = sub_100873D44;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100873D44()
{
  swift_bridgeObjectRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[63];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134217984;
    uint64_t v5 = *(void *)(v3 + 16);
    swift_bridgeObjectRelease();
    v0[30] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Published %ld anonymous shared device payloads.", v4, 0xCu);
    swift_slowDealloc();
    swift_release();

    if (v0[60])
    {
LABEL_3:
      swift_errorRetain();
      uint64_t v7 = v0[42];
      uint64_t v6 = v0[43];
      uint64_t v8 = v0[38];
      uint64_t v9 = v0[39];
      swift_bridgeObjectRelease();
      swift_willThrow();
      swift_errorRelease();
      uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v10(v7, v8);
      v10(v6, v8);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v11 = (uint64_t (*)(void))v0[1];
LABEL_4:
      return v11();
    }
  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_release();
    if (v0[60]) {
      goto LABEL_3;
    }
  }
  uint64_t v13 = (void *)v0[56];
  uint64_t v14 = v13[2];
  v0[69] = v14;
  if (!v14)
  {
    uint64_t v17 = v0[42];
    uint64_t v18 = v0[43];
    uint64_t v19 = v0[38];
    uint64_t v20 = v0[39];
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v21(v17, v19);
    v21(v18, v19);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    goto LABEL_4;
  }
  v0[70] = 0;
  uint64_t v15 = (int *)v13[4];
  v0[71] = v13[5];
  uint64_t v22 = (uint64_t (*)(void))((char *)v15 + *v15);
  swift_retain();
  uint64_t v16 = (void *)swift_task_alloc();
  v0[72] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_100874080;
  return v22();
}

uint64_t sub_100874080()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 280);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1008741AC, v1, 0);
}

uint64_t sub_1008741AC()
{
  uint64_t v1 = v0[70] + 1;
  if (v1 == v0[69])
  {
    swift_errorRelease();
    uint64_t v2 = v0[42];
    uint64_t v3 = v0[43];
    uint64_t v4 = v0[38];
    uint64_t v5 = v0[39];
    swift_bridgeObjectRelease();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v6(v2, v4);
    v6(v3, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  else
  {
    v0[70] = v1;
    uint64_t v9 = v0[56] + 16 * v1;
    uint64_t v10 = *(int **)(v9 + 32);
    v0[71] = *(void *)(v9 + 40);
    uint64_t v12 = (uint64_t (*)(void))((char *)v10 + *v10);
    swift_retain();
    uint64_t v11 = (void *)swift_task_alloc();
    v0[72] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_100874080;
    return v12();
  }
}

uint64_t sub_100874378()
{
  (*(void (**)(void, void))(v0[39] + 8))(v0[43], v0[38]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10087442C()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[38];
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0[39] + 8);
  v3(v0[42], v2);
  v3(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1008744F8()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[38];
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0[39] + 8);
  v3(v0[42], v2);
  v3(v1, v2);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1008745D0()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[32] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error publishing owned devices. Error: %{public}@.", v3, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = v0[59];
  uint64_t v8 = v0[35];
  uint64_t v7 = v0[36];

  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  uint64_t v11 = sub_100883398(&qword_10164FF00, v10, (void (*)(uint64_t))type metadata accessor for DeviceBeaconPayloadPublisher);
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v8;
  v12[3] = v11;
  v12[4] = v8;
  v12[5] = v6;
  swift_retain();
  swift_errorRetain();
  swift_retain();
  sub_1008F5E44(v7, (uint64_t)&unk_10164FF68, (uint64_t)v12);
  swift_release();
  v0[60] = v6;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[61] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1008730A8;
  return sub_100871180();
}

uint64_t sub_100874894()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[29] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error publishing owned devices anonymously. Error: %{public}@.", v3, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRetain();
  uint64_t v7 = v0[42];
  uint64_t v6 = v0[43];
  uint64_t v8 = v0[38];
  uint64_t v9 = v0[39];
  swift_bridgeObjectRelease();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v10(v6, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100874AD4()
{
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[29] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error publishing owned devices anonymously. Error: %{public}@.", v3, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRetain();
  uint64_t v7 = v0[42];
  uint64_t v6 = v0[43];
  uint64_t v8 = v0[38];
  uint64_t v9 = v0[39];
  swift_bridgeObjectRelease();
  swift_willThrow();
  swift_errorRelease();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v10(v6, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100874D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  sub_10000588C((uint64_t *)&unk_10163AC90);
  v3[5] = swift_task_alloc();
  return _swift_task_switch(sub_100874DB4, 0, 0);
}

uint64_t sub_100874DB4()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = (void *)v0[2];
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  sub_10001CD44(v3, v4);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v1, v2, v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v1, 0, 1, v6);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 16) + **(int **)(v5 + 16));
  uint64_t v8 = (void *)swift_task_alloc();
  v0[6] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100874F4C;
  uint64_t v9 = v0[5];
  uint64_t v10 = v0[3];
  return v12(v10, v9, v4, v5);
}

uint64_t sub_100874F4C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0)
  {
    swift_errorRelease();
    sub_10001DAB4(v4, (uint64_t *)&unk_10163AC90);
    return _swift_task_switch(sub_1008750D0, 0, 0);
  }
  else
  {
    sub_10001DAB4(v4, (uint64_t *)&unk_10163AC90);
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v3 + 8);
    return v5();
  }
}

uint64_t sub_1008750D0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100875130(uint64_t a1, int *a2)
{
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_100033F68;
  return v5();
}

uint64_t sub_1008751FC(uint64_t a1)
{
  v2[33] = a1;
  v2[34] = v1;
  uint64_t v3 = type metadata accessor for FMNServerInteractionController.FMNResponseFields();
  v2[35] = v3;
  v2[36] = *(void *)(v3 - 8);
  v2[37] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_101649E20);
  v2[38] = swift_task_alloc();
  v2[39] = type metadata accessor for OwnedDeviceSubmitEndpoint(0);
  v2[40] = swift_task_alloc();
  v2[41] = swift_task_alloc();
  return _swift_task_switch(sub_10087532C, v1, 0);
}

uint64_t sub_10087532C()
{
  if (qword_101637660 != -1) {
    goto LABEL_37;
  }
LABEL_2:
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170F838);
  swift_bridgeObjectRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 264);
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134217984;
    *(void *)(v0 + 256) = *(void *)(v5 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Publishing location for %ld devices.", v6, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  id v7 = [self currentDevice];
  if (!v7
    || (uint64_t v8 = v7,
        id v9 = [v7 uniqueDeviceIdentifier],
        v8,
        !v9))
  {
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Unable to get device identifier for publishing ownedDevice payloads", v23, 2u);
      swift_slowDealloc();
    }

    sub_10119FC00(0x6548656369766564, 0xEF74616562747261, 0xD00000000000001ALL, 0x80000001014093F0);
    type metadata accessor for DeviceBeaconPayloadPublisher.PublishError();
    sub_100883398(&qword_10164FF28, 255, (void (*)(uint64_t))type metadata accessor for DeviceBeaconPayloadPublisher.PublishError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
  uint64_t v10 = *(void *)(v0 + 264);
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  uint64_t v14 = *(void *)(v10 + 16);
  if (!v14)
  {
LABEL_32:
    unint64_t v32 = 0x6548656369766564;
    uint64_t v34 = (uint64_t *)(*(void *)(v0 + 272) + 144);
    unint64_t v33 = 0xEF74616562747261;
    goto LABEL_33;
  }
  uint64_t v38 = v13;
  uint64_t v39 = v11;
  uint64_t v15 = *(void *)(v0 + 264) + 32;
  swift_bridgeObjectRetain();
  uint64_t v16 = v14;
  uint64_t v17 = v15;
  while (2)
  {
    sub_10001D010(v17, v0 + 64);
    uint64_t v20 = *(void *)(v0 + 88);
    uint64_t v19 = *(void *)(v0 + 96);
    sub_10001CD44((void *)(v0 + 64), v20);
    switch((*(unsigned __int8 (**)(uint64_t, uint64_t))(v19 + 80))(v20, v19))
    {
      case 4u:
        swift_bridgeObjectRelease();
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 64);
        goto LABEL_20;
      case 5u:
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 64);
        goto LABEL_10;
      default:
        char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 64);
        if ((v18 & 1) == 0)
        {
LABEL_10:
          v17 += 40;
          if (!--v16)
          {
            swift_bridgeObjectRelease();
            char v26 = 0;
            goto LABEL_21;
          }
          continue;
        }
LABEL_20:
        swift_bridgeObjectRelease();
        char v26 = 1;
LABEL_21:
        swift_bridgeObjectRetain();
        uint64_t v27 = 0;
        while (2)
        {
          uint64_t v29 = v27 + 1;
          if (__OFADD__(v27, 1))
          {
            __break(1u);
LABEL_37:
            swift_once();
            goto LABEL_2;
          }
          sub_10001D010(v15, v0 + 104);
          uint64_t v30 = *(void *)(v0 + 128);
          uint64_t v31 = *(void *)(v0 + 136);
          sub_10001CD44((void *)(v0 + 104), v30);
          switch((*(unsigned __int8 (**)(uint64_t, uint64_t))(v31 + 80))(v30, v31))
          {
            case 4u:
              swift_bridgeObjectRelease();
              _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 104);
              goto LABEL_23;
            case 5u:
              _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 104);
              goto LABEL_30;
            default:
              char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 104);
              if (v28)
              {
LABEL_23:
                v15 += 40;
                ++v27;
                if (v29 != v14) {
                  continue;
                }
                swift_bridgeObjectRelease();
                uint64_t v13 = v38;
                uint64_t v11 = v39;
                if (v26)
                {
                  unint64_t v32 = 0xD000000000000012;
                  unint64_t v33 = 0x80000001013FD030;
                  uint64_t v34 = (uint64_t *)(*(void *)(v0 + 272) + 152);
                  goto LABEL_33;
                }
                goto LABEL_32;
              }
LABEL_30:
              swift_bridgeObjectRelease();
              uint64_t v13 = v38;
              uint64_t v11 = v39;
              if ((v26 & 1) == 0) {
                goto LABEL_32;
              }
              uint64_t v34 = (uint64_t *)(*(void *)(v0 + 272) + 152);
              unint64_t v32 = 0xD000000000000024;
              unint64_t v33 = 0x8000000101409460;
              break;
          }
          break;
        }
LABEL_33:
        uint64_t v35 = *v34;
        *(void *)(v0 + 336) = *v34;
        strcpy((char *)(v0 + 16), "searchpartyd");
        *(unsigned char *)(v0 + 29) = 0;
        *(_WORD *)(v0 + 30) = -5120;
        *(void *)(v0 + 32) = v32;
        *(void *)(v0 + 40) = v33;
        *(void *)(v0 + 48) = v11;
        *(void *)(v0 + 56) = v13;
        uint64_t v40 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10165CFE8 + dword_10165CFE8);
        swift_retain_n();
        swift_bridgeObjectRetain();
        uint64_t v36 = (void *)swift_task_alloc();
        *(void *)(v0 + 344) = v36;
        *uint64_t v36 = v0;
        v36[1] = sub_100875A90;
        uint64_t v37 = *(void *)(v0 + 264);
        return v40(v0 + 16, v37, v35);
    }
  }
}

uint64_t sub_100875A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v4 = *(void **)v3;
  uint64_t v5 = *(void *)(*(void *)v3 + 272);
  v4[44] = a1;
  v4[45] = a2;
  v4[46] = a3;
  swift_task_dealloc();
  return _swift_task_switch(sub_100875BAC, v5, 0);
}

uint64_t sub_100875BAC()
{
  uint64_t v1 = v0[44];
  if (v1)
  {
    uint64_t v3 = v0[45];
    unint64_t v2 = v0[46];
    uint64_t v5 = v0[40];
    uint64_t v4 = v0[41];
    uint64_t v6 = v0[38];
    uint64_t v7 = v0[39];
    uint64_t v8 = enum case for FMNAccountType.searchParty(_:);
    uint64_t v9 = type metadata accessor for FMNAccountType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v4, v8, v9);
    sub_10033E924(v4 + *(int *)(v7 + 20));
    type metadata accessor for SearchPartyURLSessionFactory(0);
    swift_allocObject();
    uint64_t v10 = type metadata accessor for FMNMockingPreferences();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
    uint64_t v11 = FMNURLSessionFactory.init(mockSessionCreationBlock:preferences:)();
    type metadata accessor for ServerInteractionController(0);
    uint64_t v12 = swift_allocObject();
    sub_1008841E0(v4, v5, type metadata accessor for OwnedDeviceSubmitEndpoint);
    v0[47] = sub_1004A1B08(v5, v11, v12);
    sub_100884248(v4, type metadata accessor for OwnedDeviceSubmitEndpoint);
    v0[21] = &type metadata for OwnSubmitRequest;
    v0[22] = sub_100883C2C();
    v0[18] = v1;
    v0[19] = v3;
    v0[20] = v2;
    swift_bridgeObjectRetain();
    sub_1000361E0(v3, v2);
    uint64_t v13 = (void *)swift_task_alloc();
    v0[48] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_100875F00;
    uint64_t v14 = v0[37];
    return sub_100487CFC(v14, (uint64_t)(v0 + 18));
  }
  else
  {
    sub_10119FC00(0x6548656369766564, 0xEF74616562747261, 0xD000000000000022, 0x8000000101409410);
    type metadata accessor for DeviceBeaconPayloadPublisher.PublishError();
    sub_100883398(&qword_10164FF28, 255, (void (*)(uint64_t))type metadata accessor for DeviceBeaconPayloadPublisher.PublishError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
}

uint64_t sub_100875F00()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 392) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 272);
    uint64_t v4 = sub_1008762CC;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 272);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v2 + 144);
    uint64_t v4 = sub_100876028;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100876028()
{
  uint64_t v1 = v0[49];
  sub_101267D7C();
  if (v1)
  {
    (*(void (**)(void, void))(v0[36] + 8))(v0[37], v0[35]);
    swift_release();
    uint64_t v2 = v0[45];
    unint64_t v12 = v0[46];
    uint64_t v3 = v0[44];
    _StringGuts.grow(_:)(41);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    v0[30] = Error.code.getter();
    v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v4);
    swift_bridgeObjectRelease();
    v5._countAndFlagsBits = 0x6F44726F72726520;
    v5._object = (void *)0xED00003A6E69616DLL;
    String.append(_:)(v5);
    swift_getErrorValue();
    v6._countAndFlagsBits = Error.domain.getter();
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    sub_10119FC00(0x6548656369766564, 0xEF74616562747261, 0xD000000000000018, 0x8000000101409440);
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_release();
    sub_1001D7860(v3, v2, v12);
  }
  else
  {
    unint64_t v8 = v0[46];
    uint64_t v10 = v0[44];
    uint64_t v9 = v0[45];
    (*(void (**)(void, void))(v0[36] + 8))(v0[37], v0[35]);
    swift_release();
    sub_1001D7860(v10, v9, v8);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1008762CC()
{
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 18));
  uint64_t v1 = v0[45];
  unint64_t v8 = v0[46];
  uint64_t v2 = v0[44];
  _StringGuts.grow(_:)(41);
  swift_bridgeObjectRelease();
  swift_getErrorValue();
  v0[30] = Error.code.getter();
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 0x6F44726F72726520;
  v4._object = (void *)0xED00003A6E69616DLL;
  String.append(_:)(v4);
  swift_getErrorValue();
  v5._countAndFlagsBits = Error.domain.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  sub_10119FC00(0x6548656369766564, 0xEF74616562747261, 0xD000000000000018, 0x8000000101409440);
  swift_bridgeObjectRelease();
  swift_willThrow();
  swift_release();
  sub_1001D7860(v2, v1, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1008764D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  sub_10000588C(&qword_10164DBB0);
  v5[4] = swift_task_alloc();
  return _swift_task_switch(sub_10087656C, a4, 0);
}

uint64_t sub_10087656C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  sub_10000588C(&qword_10163A968);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_101342130;
  *(void *)(v4 + 32) = v1;
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
  uint64_t v7 = sub_100883398(&qword_10164FF00, v6, (void (*)(uint64_t))type metadata accessor for DeviceBeaconPayloadPublisher);
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = v3;
  v8[3] = v7;
  v8[4] = v4;
  v8[5] = v3;
  swift_retain_n();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  sub_1008F5E44(v2, (uint64_t)&unk_10164FF78, (uint64_t)v8);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1008766F8(uint64_t a1)
{
  v2[23] = a1;
  v2[24] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[25] = v3;
  v2[26] = *(void *)(v3 - 8);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  return _swift_task_switch(sub_1008767D4, v1, 0);
}

uint64_t sub_1008767D4()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_101639390 + dword_101639390);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100876910;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100876910(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 192);
  *(void *)(*(void *)v1 + 248) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100876A28, v2, 0);
}

uint64_t sub_100876A28()
{
  uint64_t v1 = (uint64_t)(v0 + 2);
  if (v0[31])
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[32] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100876BDC;
    uint64_t v3 = v0[23];
    return sub_10001AEB4(v3);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    if (qword_101636B18 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100010324(v5, (uint64_t)qword_10170DED0);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Missing DelegatedBeaconPayloadPublisher!", v8, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_100876BDC(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 264) = a1;
  *(void *)(v4 + 272) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 192);
  if (v1) {
    uint64_t v6 = sub_1008777C0;
  }
  else {
    uint64_t v6 = sub_100876D10;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100876D10()
{
  uint64_t v20 = v0;
  if (*(void *)(v0[33] + 16))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[35] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_100877060;
    uint64_t v2 = v0[33];
    return sub_1008751FC(v2);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_101637660 != -1) {
      swift_once();
    }
    uint64_t v4 = v0[23];
    uint64_t v5 = v0[28];
    uint64_t v6 = v0[25];
    uint64_t v7 = v0[26];
    uint64_t v8 = type metadata accessor for Logger();
    sub_100010324(v8, (uint64_t)qword_10170F838);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v4, v6);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = v0[28];
    uint64_t v13 = v0[25];
    uint64_t v14 = v0[26];
    if (v11)
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 141558275;
      v0[21] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 12) = 2081;
      sub_100883398((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[22] = sub_1008FA0F0(v16, v17, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "No observations to publish for delegated beacon %{private,mask.hash}s.", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_release();
    }
    else
    {
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_100877060()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 288) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 192);
  if (v0) {
    uint64_t v4 = sub_100877B48;
  }
  else {
    uint64_t v4 = sub_10087718C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10087718C()
{
  uint64_t v20 = v0;
  if (qword_101637660 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[29];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[23];
  uint64_t v5 = type metadata accessor for Logger();
  sub_100010324(v5, (uint64_t)qword_10170F838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  swift_bridgeObjectRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[33];
  uint64_t v10 = v0[29];
  uint64_t v11 = v0[25];
  uint64_t v12 = v0[26];
  if (v8)
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 134218499;
    v0[18] = *(void *)(v9 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2160;
    v0[19] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 22) = 2081;
    sub_100883398((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[20] = sub_1008FA0F0(v14, v15, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Completed initial publish of delegated %ld payloads for beacon %{private,mask.hash}s.", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }

  uint64_t v16 = (void *)swift_task_alloc();
  v0[37] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_100877498;
  uint64_t v17 = v0[33];
  return sub_10001285C(v17);
}